//---------------------------------------------------------------------------

#pragma hdrstop

#include "TankWashingMachine.h"
//---------------------------------------------------------------------------
#pragma package(smart_init)

#include "argumentexception.h"


TankWashingMachine::TankWashingMachine()
{
	IDNumber = 0;
	TankId = 0;
	Identifier = AnsiString("");
	NozzleDiameter_mm = 0;
	RunningTimeSinceLastService = 0.0;
	LifeRunningTime = 0.0;

}


/// Copy data from other TankWashingMachine object
///
void TankWashingMachine::CopyData(TankWashingMachine& other)
{
	IDNumber = other.IDNumber;
	Identifier = other.Identifier;
	NozzleDiameter_mm = other.NozzleDiameter_mm;
	TankId = other.TankId;
}


/// Update service time counters
///
void TankWashingMachine::ResetAfterService()
{
	RunningTimeSinceLastService = 0.0;
}


/// Append string representation of this object to the "dest" string
///
void TankWashingMachine::ToString(AnsiString& dest)
{
	dest.cat_sprintf("TankWashingMachine ID=%d, Ident=\"%s\", TankId=%d, Nozzle.mm=%d",
		IDNumber, Identifier, TankId, NozzleDiameter_mm);
}