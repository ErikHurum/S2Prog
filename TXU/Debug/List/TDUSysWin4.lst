##############################################################################
#                                                                            #
# IAR ARM ANSI C/C++ Compiler V4.42A/W32               14/Sep/2022  15:18:52 #
# Copyright 1999-2005 IAR Systems. All rights reserved.                      #
#                                                                            #
#    Cpu mode        =  interwork                                            #
#    Endian          =  little                                               #
#    Stack alignment =  4                                                    #
#    Source file     =  D:\S2Prog\TXU\src\TDUSysWin4.cpp                     #
#    Command line    =  D:\S2Prog\TXU\src\TDUSysWin4.cpp --fpu None -D       #
#                       OS_LIBMODE_SP -D CPU_S3C2410 -D OS_RAMVECT=0 -D      #
#                       OS_UART=-1 -D S2TXU -D USE_LZO=1 -D __ARM_LIBRARY__  #
#                       -D WATCHDOG=1 -D NETWORK=1 -lCN                      #
#                       D:\S2Prog\TXU\Debug\List\ -o                         #
#                       D:\S2Prog\TXU\Debug\Obj\ -s9 --debug --cpu_mode arm  #
#                       --endian little --cpu ARM920T --stack_align 4        #
#                       --interwork -e --enable_multibytes --eec++           #
#                       --dlib_config "C:\Program Files (x86)\IAR            #
#                       Systems\Embedded Workbench                           #
#                       4.0\arm\LIB\dl4tpainl8n.h" -I                        #
#                       D:\S2Prog\TXU\GUI\CORE\ -I D:\S2Prog\TXU\GUI\WM\ -I  #
#                       D:\S2Prog\TXU\GUI\WIDGET\ -I D:\S2Prog\TXU\CONFIG\   #
#                       -I D:\S2Prog\TXU\INC\ -I D:\S2Prog\TXU\..\SHARED\INC #
#                       \ -I D:\S2Prog\TXU\..\SHARED\SRC\ -I                 #
#                       D:\S2Prog\TXU\..\SHARED\LZO\minilzo.210\ -I          #
#                       D:\S2Prog\TXU\lwip-1.4.1\src\include\ -I             #
#                       D:\S2Prog\TXU\lwip-1.4.1\src\include\ipv4\ -I        #
#                       D:\S2Prog\TXU\lwip-1.4.1\src\ -I                     #
#                       D:\S2Prog\TXU\..\SHARED\Database\ -I                 #
#                       D:\S2Prog\TXU\src\ -I "C:\Program Files (x86)\IAR    #
#                       Systems\Embedded Workbench 4.0\arm\INC\"             #
#                       --inline_threshold=2                                 #
#    List file       =  D:\S2Prog\TXU\Debug\List\TDUSysWin4.lst              #
#    Object file     =  D:\S2Prog\TXU\Debug\Obj\TDUSysWin4.r79               #
#                                                                            #
#                                                                            #
##############################################################################

D:\S2Prog\TXU\src\TDUSysWin4.cpp
      1          #include "TDUIncludes.h"

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void operator+(string const &, string const &)
   \                     `??operator+`:
   \   00000000   F0402DE9           PUSH     {R4-R7,LR}
   \   00000004   1CD04DE2           SUB      SP,SP,#+28
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   0150A0E1           MOV      R5,R1
   \   00000010   0260A0E1           MOV      R6,R2
   \   00000014   0020A0E3           MOV      R2,#+0
   \   00000018   0010A0E3           MOV      R1,#+0
   \   0000001C   0D00A0E1           MOV      R0,SP
   \   00000020   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000024   6C009FE5           LDR      R0,`??operator+_3`  ;; ??npos
   \   00000028   0020A0E3           MOV      R2,#+0
   \   0000002C   007090E5           LDR      R7,[R0, #+0]
   \   00000030   0510A0E1           MOV      R1,R5
   \   00000034   0730A0E1           MOV      R3,R7
   \   00000038   0D00A0E1           MOV      R0,SP
   \   0000003C   ........           _BLF     ??assign,??assign??rA
   \   00000040   0730A0E1           MOV      R3,R7
   \   00000044   0020A0E3           MOV      R2,#+0
   \   00000048   0610A0E1           MOV      R1,R6
   \   0000004C   0D00A0E1           MOV      R0,SP
   \   00000050   ........           _BLF     ??append,??append??rA
   \   00000054   0050A0E1           MOV      R5,R0
   \   00000058   0020A0E3           MOV      R2,#+0
   \   0000005C   0210A0E1           MOV      R1,R2
   \   00000060   0400A0E1           MOV      R0,R4
   \   00000064   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000068   0730A0E1           MOV      R3,R7
   \   0000006C   0020A0E3           MOV      R2,#+0
   \   00000070   0510A0E1           MOV      R1,R5
   \   00000074   0400A0E1           MOV      R0,R4
   \   00000078   ........           _BLF     ??assign,??assign??rA
   \   0000007C   0020A0E3           MOV      R2,#+0
   \   00000080   0110A0E3           MOV      R1,#+1
   \   00000084   0D00A0E1           MOV      R0,SP
   \   00000088   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   0000008C   1CD08DE2           ADD      SP,SP,#+28
   \   00000090   F040BDE8           POP      {R4-R7,LR}
   \   00000094   1EFF2FE1           BX       LR               ;; return
   \                     `??operator+_3`:
   \   00000098   ........           DC32     ??npos

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void operator+(char const *, string const &)
   \                     `??operator+_1`:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   1CD04DE2           SUB      SP,SP,#+28
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   0150A0E1           MOV      R5,R1
   \   00000010   0260A0E1           MOV      R6,R2
   \   00000014   0020A0E3           MOV      R2,#+0
   \   00000018   0010A0E3           MOV      R1,#+0
   \   0000001C   0D00A0E1           MOV      R0,SP
   \   00000020   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000024   0500A0E1           MOV      R0,R5
   \   00000028   ........           _BLF     strlen,??strlen??rA
   \   0000002C   0020A0E1           MOV      R2,R0
   \   00000030   0510A0E1           MOV      R1,R5
   \   00000034   0D00A0E1           MOV      R0,SP
   \   00000038   ........           _BLF     ??assign_1,??assign??rA_1
   \   0000003C   58009FE5           LDR      R0,`??operator+_4`  ;; ??npos
   \   00000040   0020A0E3           MOV      R2,#+0
   \   00000044   005090E5           LDR      R5,[R0, #+0]
   \   00000048   0610A0E1           MOV      R1,R6
   \   0000004C   0530A0E1           MOV      R3,R5
   \   00000050   0D00A0E1           MOV      R0,SP
   \   00000054   ........           _BLF     ??append,??append??rA
   \   00000058   0060A0E1           MOV      R6,R0
   \   0000005C   0020A0E3           MOV      R2,#+0
   \   00000060   0210A0E1           MOV      R1,R2
   \   00000064   0400A0E1           MOV      R0,R4
   \   00000068   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   0000006C   0530A0E1           MOV      R3,R5
   \   00000070   0020A0E3           MOV      R2,#+0
   \   00000074   0610A0E1           MOV      R1,R6
   \   00000078   0400A0E1           MOV      R0,R4
   \   0000007C   ........           _BLF     ??assign,??assign??rA
   \   00000080   0020A0E3           MOV      R2,#+0
   \   00000084   0110A0E3           MOV      R1,#+1
   \   00000088   0D00A0E1           MOV      R0,SP
   \   0000008C   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000090   1CD08DE2           ADD      SP,SP,#+28
   \   00000094   7040BDE8           POP      {R4-R6,LR}
   \   00000098   1EFF2FE1           BX       LR               ;; return
   \                     `??operator+_4`:
   \   0000009C   ........           DC32     ??npos

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void operator+(string const &, char const *)
   \                     `??operator+_2`:
   \   00000000   F0402DE9           PUSH     {R4-R7,LR}
   \   00000004   1CD04DE2           SUB      SP,SP,#+28
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   0150A0E1           MOV      R5,R1
   \   00000010   0260A0E1           MOV      R6,R2
   \   00000014   0020A0E3           MOV      R2,#+0
   \   00000018   0010A0E3           MOV      R1,#+0
   \   0000001C   0D00A0E1           MOV      R0,SP
   \   00000020   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000024   70009FE5           LDR      R0,`??operator+_5`  ;; ??npos
   \   00000028   0020A0E3           MOV      R2,#+0
   \   0000002C   007090E5           LDR      R7,[R0, #+0]
   \   00000030   0510A0E1           MOV      R1,R5
   \   00000034   0730A0E1           MOV      R3,R7
   \   00000038   0D00A0E1           MOV      R0,SP
   \   0000003C   ........           _BLF     ??assign,??assign??rA
   \   00000040   0600A0E1           MOV      R0,R6
   \   00000044   ........           _BLF     strlen,??strlen??rA
   \   00000048   0020A0E1           MOV      R2,R0
   \   0000004C   0610A0E1           MOV      R1,R6
   \   00000050   0D00A0E1           MOV      R0,SP
   \   00000054   ........           _BLF     ??append_1,??append??rA_1
   \   00000058   0050A0E1           MOV      R5,R0
   \   0000005C   0020A0E3           MOV      R2,#+0
   \   00000060   0210A0E1           MOV      R1,R2
   \   00000064   0400A0E1           MOV      R0,R4
   \   00000068   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   0000006C   0730A0E1           MOV      R3,R7
   \   00000070   0020A0E3           MOV      R2,#+0
   \   00000074   0510A0E1           MOV      R1,R5
   \   00000078   0400A0E1           MOV      R0,R4
   \   0000007C   ........           _BLF     ??assign,??assign??rA
   \   00000080   0020A0E3           MOV      R2,#+0
   \   00000084   0110A0E3           MOV      R1,#+1
   \   00000088   0D00A0E1           MOV      R0,SP
   \   0000008C   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000090   1CD08DE2           ADD      SP,SP,#+28
   \   00000094   F040BDE8           POP      {R4-R7,LR}
   \   00000098   1EFF2FE1           BX       LR               ;; return
   \                     `??operator+_5`:
   \   0000009C   ........           DC32     ??npos

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs PRogramObjectBase ** _Vector_impl<PRogramObjectBase *, allocator<PRogramObjectBase *>>::_Make_room(PRogramObjectBase **, unsigned int)
   \                     ??_Make_room:
   \   00000000   F0472DE9           PUSH     {R4-R10,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   000094E5           LDR      R0,[R4, #+0]
   \   0000000C   0150A0E1           MOV      R5,R1
   \   00000010   081094E5           LDR      R1,[R4, #+8]
   \   00000014   0260A0E1           MOV      R6,R2
   \   00000018   001041E0           SUB      R1,R1,R0
   \   0000001C   2171A0E1           LSR      R7,R1,#+2
   \   00000020   041094E5           LDR      R1,[R4, #+4]
   \   00000024   000056E3           CMP      R6,#+0
   \   00000028   000041E0           SUB      R0,R1,R0
   \   0000002C   2001A0E1           LSR      R0,R0,#+2
   \   00000030   2C00000A           BEQ      ??_Make_room_1
   \   00000034   C024E0E3           MVN      R2,#-1073741824
   \   00000038   002042E0           SUB      R2,R2,R0
   \   0000003C   060052E1           CMP      R2,R6
   \   00000040   2800003A           BCC      ??_Make_room_1
   \   00000044   008086E0           ADD      R8,R6,R0
   \   00000048   080057E1           CMP      R7,R8
   \   0000004C   1F00002A           BCS      ??_Make_room_2
   \   00000050   A700A0E1           LSR      R0,R7,#+1
   \   00000054   C014E0E3           MVN      R1,#-1073741824
   \   00000058   001041E0           SUB      R1,R1,R0
   \   0000005C   070051E1           CMP      R1,R7
   \   00000060   0070A033           MOVCC    R7,#+0
   \   00000064   07708020           ADDCS    R7,R0,R7
   \   00000068   080057E1           CMP      R7,R8
   \   0000006C   0870A031           MOVCC    R7,R8
   \   00000070   0701A0E1           LSL      R0,R7,#+2
   \   00000074   ........           _BLF     `??operator new`,`??operator new??rA`
   \   00000078   0090A0E1           MOV      R9,R0
   \   0000007C   000094E5           LDR      R0,[R4, #+0]
   \   00000080   0920A0E1           MOV      R2,R9
   \   00000084   0510A0E1           MOV      R1,R5
   \   00000088   ........           _BLF     _Copy_a4,??_Copy_a4??rA
   \   0000008C   041094E5           LDR      R1,[R4, #+4]
   \   00000090   00A0A0E1           MOV      R10,R0
   \   00000094   06218AE0           ADD      R2,R10,R6, LSL #+2
   \   00000098   0500A0E1           MOV      R0,R5
   \   0000009C   ........           _BLF     _Copy_a4,??_Copy_a4??rA
   \   000000A0   000094E5           LDR      R0,[R4, #+0]
   \   000000A4   000050E3           CMP      R0,#+0
   \   000000A8   0100000A           BEQ      ??_Make_room_3
   \   000000AC   040084E5           STR      R0,[R4, #+4]
   \   000000B0   ........           _BLF     `??operator delete`,`??operator delete??rA`
   \                     ??_Make_room_3:
   \   000000B4   070189E0           ADD      R0,R9,R7, LSL #+2
   \   000000B8   080084E5           STR      R0,[R4, #+8]
   \   000000BC   080189E0           ADD      R0,R9,R8, LSL #+2
   \   000000C0   040084E5           STR      R0,[R4, #+4]
   \   000000C4   009084E5           STR      R9,[R4, #+0]
   \   000000C8   0A50A0E1           MOV      R5,R10
   \   000000CC   050000EA           B        ??_Make_room_1
   \                     ??_Make_room_2:
   \   000000D0   062181E0           ADD      R2,R1,R6, LSL #+2
   \   000000D4   0500A0E1           MOV      R0,R5
   \   000000D8   ........           _BLF     _Copy_backward_a4,??_Copy_backward_a4??rA
   \   000000DC   040094E5           LDR      R0,[R4, #+4]
   \   000000E0   060180E0           ADD      R0,R0,R6, LSL #+2
   \   000000E4   040084E5           STR      R0,[R4, #+4]
   \                     ??_Make_room_1:
   \   000000E8   0500A0E1           MOV      R0,R5
   \   000000EC   F047BDE8           POP      {R4-R10,LR}
   \   000000F0   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void vector<PRogramObjectBase *>::push_back(PRogramObjectBase *)
   \                     ??push_back:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   082090E5           LDR      R2,[R0, #+8]
   \   00000008   0140A0E1           MOV      R4,R1
   \   0000000C   041090E5           LDR      R1,[R0, #+4]
   \   00000010   020051E1           CMP      R1,R2
   \   00000014   0120A0E3           MOV      R2,#+1
   \   00000018   0600002A           BCS      ??push_back_1
   \   0000001C   0130A0E1           MOV      R3,R1
   \                     ??push_back_2:
   \   00000020   ........           STR      R4,[R3], #+4
   \   00000024   012052E2           SUBS     R2,R2,#+1
   \   00000028   FCFFFF1A           BNE      ??push_back_2
   \   0000002C   041081E2           ADD      R1,R1,#+4
   \   00000030   041080E5           STR      R1,[R0, #+4]
   \   00000034   040000EA           B        ??push_back_3
   \                     ??push_back_1:
   \   00000038   ........           _BLF     ??_Make_room,??_Make_room??rA
   \   0000003C   0110A0E3           MOV      R1,#+1
   \                     ??push_back_4:
   \   00000040   ........           STR      R4,[R0], #+4
   \   00000044   011051E2           SUBS     R1,R1,#+1
   \   00000048   FCFFFF1A           BNE      ??push_back_4
   \                     ??push_back_3:
   \   0000004C   1040BDE8           POP      {R4,LR}
   \   00000050   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs AnsiString::~AnsiString()
   \                     `?~AnsiString`:
   \   00000000   00402DE9           PUSH     {LR}
   \   00000004   0020A0E3           MOV      R2,#+0
   \   00000008   0110A0E3           MOV      R1,#+1
   \   0000000C   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000010   0040BDE8           POP      {LR}
   \   00000014   1EFF2FE1           BX       LR               ;; return

   \                                 In segment DATA_Z, align 4, align-sorted
   \   static GUI_FONT const __data TDU_FONT_ST
   \                     TDU_FONT_ST:
   \   00000000                      DS8 36
      2          

   \                                 In segment CODE, align 4, keep-with-next
      3          TDUSysWin4::TDUSysWin4(void)
   \                     ??TDUSysWin4:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0040A0E1           MOV      R4,R0
      4          {
   \   00000008   ........           _BLF     ??TDUBasicWin,??TDUBasicWin??rA
   \   0000000C   3C0084E2           ADD      R0,R4,#+60
   \   00000010   0010A0E3           MOV      R1,#+0
   \   00000014   001080E5           STR      R1,[R0, #+0]
   \   00000018   041080E5           STR      R1,[R0, #+4]
   \   0000001C   081080E5           STR      R1,[R0, #+8]
      5             CurrentHWUnit = NULL;
   \   00000020   381084E5           STR      R1,[R4, #+56]
      6             CurrentIndex = 0;
   \   00000024   481084E5           STR      R1,[R4, #+72]
      7          }
   \   00000028   0400A0E1           MOV      R0,R4
   \   0000002C   1040BDE8           POP      {R4,LR}
   \   00000030   1EFF2FE1           BX       LR               ;; return
      8          

   \                                 In segment CODE, align 4, keep-with-next
      9          TDUSysWin4::~TDUSysWin4(void)
     10          {
   \                     `?~TDUSysWin4`:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   0040A0E1           MOV      R4,R0
     11          }
   \   00000008   3C5084E2           ADD      R5,R4,#+60
   \   0000000C   000095E5           LDR      R0,[R5, #+0]
   \   00000010   000050E3           CMP      R0,#+0
   \   00000014   0200000A           BEQ      `?~TDUSysWin4_1`
   \   00000018   040085E5           STR      R0,[R5, #+4]
   \   0000001C   ........           _BLF     `??operator delete`,`??operator delete??rA`
   \   00000020   0000A0E3           MOV      R0,#+0
   \                     `?~TDUSysWin4_1`:
   \   00000024   000085E5           STR      R0,[R5, #+0]
   \   00000028   040085E5           STR      R0,[R5, #+4]
   \   0000002C   080085E5           STR      R0,[R5, #+8]
   \   00000030   0400A0E1           MOV      R0,R4
   \   00000034   ........           _BLF     `?~TDUBasicWin`,`?~TDUBasicWin??rA`
   \   00000038   3040BDE8           POP      {R4,R5,LR}
   \   0000003C   1EFF2FE1           BX       LR               ;; return
     12          

   \                                 In segment DATA_C, align 4, align-sorted
     13          const GUI_WIDGET_CREATE_INFO TDUSysWin4::aDialogCreate[] =
   \                     ??aDialogCreate:
   \   00000000   ............       DC32 FRAMEWIN_CreateIndirect, `?<Constant "System page 4: Hardwa...">`
   \              ....        
   \   00000008   900800000000       DC16 2192, 0, 0, 286, 198, 128
   \              1E01C6008000
   \   00000014   00000000....       DC32 0, TEXT_CreateIndirect, `?<Constant "Select:">`
   \              ............
   \   00000020   600102000200       DC16 352, 2, 2, 46, 15, 0
   \              2E000F000000
   \   0000002C   00000000           DC8 0, 0, 0, 0
   \   00000030   ........0000       DC32 DROPDOWN_CreateIndirect, 0H
   \              0000        
   \   00000038   800132000000       DC16 384, 50, 0, 220, 100, 0
   \              DC0064000000
   \   00000044   03000000....       DC32 3, LISTVIEW_CreateIndirect, 0H
   \              ....00000000
   \   00000050   000200001200       DC16 512, 0, 18, 281, 163, 0
   \              1901A3000000
   \   0000005C   00000000           DC8 0, 0, 0, 0
     14          {
     15             { FRAMEWIN_CreateIndirect, "System page 4: Hardware units", TDU_SYSTEM4_WIN, 0, 0, 286, 198, FRAMEWIN_CF_MAXIMIZED, 0 },
     16             { TEXT_CreateIndirect,     "Select:",   GUI_ID_TEXT0,  2,   2,  46,  15, TEXT_CF_LEFT },
     17             { DROPDOWN_CreateIndirect, NULL,    GUI_ID_DROPDOWN0, 50,   0, 220, 100, 0, 3 },
     18             { LISTVIEW_CreateIndirect, NULL,    GUI_ID_LISTVIEW0,  0,  18, 281, 163, 0 },
     19          };
     20          
     21          

   \                                 In segment CODE, align 4, keep-with-next
     22          void TDUSysWin4::ExecDialogBox(WM_HWIN hCurrentWin)
     23          {
   \                     ??ExecDialogBox:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
     24             SystemWindow->Protect();
   \   00000004   ........           LDR      R5,??DataTable1  ;; SystemWindow
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   000095E5           LDR      R0,[R5, #+0]
   \   00000010   0160A0E1           MOV      R6,R1
   \   00000014   ........           _BLF     ??Protect,??Protect??rA
     25             if (SystemWindow->SysWin4IsClosed)
   \   00000018   000095E5           LDR      R0,[R5, #+0]
   \   0000001C   7310D0E5           LDRB     R1,[R0, #+115]
   \   00000020   000051E3           CMP      R1,#+0
   \   00000024   1300000A           BEQ      ??ExecDialogBox_1
     26             {
     27                SystemWindow->SysWin4IsClosed = false;
     28                WinHandl = GUI_CreateDialogBox(aDialogCreate, GUI_COUNTOF(aDialogCreate), &cbSysWin,
     29                                               hCurrentWin, 0, 0);
   \   00000028   60209FE5           LDR      R2,??ExecDialogBox_2  ;; ??cbSysWin
   \   0000002C   0010A0E3           MOV      R1,#+0
   \   00000030   7310C0E5           STRB     R1,[R0, #+115]
   \   00000034   0000A0E3           MOV      R0,#+0
   \   00000038   01002DE9           PUSH     {R0}
   \   0000003C   01002DE9           PUSH     {R0}
   \   00000040   4C009FE5           LDR      R0,??ExecDialogBox_2+0x4  ;; ??aDialogCreate
   \   00000044   0630A0E1           MOV      R3,R6
   \   00000048   0410A0E3           MOV      R1,#+4
   \   0000004C   ........           _BLF     GUI_CreateDialogBox,??GUI_CreateDialogBox??rA
   \   00000050   BA02C4E1           STRH     R0,[R4, #+42]
     30                SystemWindow->CurrentSysWin = TDU_SYSWIN4;
   \   00000054   000095E5           LDR      R0,[R5, #+0]
   \   00000058   0410A0E3           MOV      R1,#+4
   \   0000005C   6C1080E5           STR      R1,[R0, #+108]
     31                WM_EnableMemdev(WinHandl);
   \   00000060   FA02D4E1           LDRSH    R0,[R4, #+42]
   \   00000064   ........           _BLF     WM_EnableMemdev,??WM_EnableMemdev??rA
     32                GetDialogHandles();
   \   00000068   0400A0E1           MOV      R0,R4
   \   0000006C   ........           BL       ??GetDialogHandles
   \   00000070   08D08DE2           ADD      SP,SP,#+8
   \   00000074   010000EA           B        ??ExecDialogBox_3
     33             }
     34             else
     35             {
     36                WM_BringToTop(WinHandl);
   \                     ??ExecDialogBox_1:
   \   00000078   FA02D4E1           LDRSH    R0,[R4, #+42]
   \   0000007C   ........           _BLF     WM_BringToTop,??WM_BringToTop??rA
     37             }
     38             SystemWindow->UnProtect();
   \                     ??ExecDialogBox_3:
   \   00000080   000095E5           LDR      R0,[R5, #+0]
   \   00000084   ........           _BLF     ??UnProtect,??UnProtect??rA
     39          }
   \   00000088   7040BDE8           POP      {R4-R6,LR}
   \   0000008C   1EFF2FE1           BX       LR               ;; return
   \                     ??ExecDialogBox_2:
   \   00000090   ........           DC32     ??cbSysWin
   \   00000094   ........           DC32     ??aDialogCreate
     40          
     41          /*********************************************************************
     42          *
     43          * Dialog procedure
     44          */

   \                                 In segment CODE, align 4, keep-with-next
     45          void TDUSysWin4::GetDialogHandles(void)
     46          {
   \                     ??GetDialogHandles:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0040A0E1           MOV      R4,R0
     47             hDropdHWUnit      = WM_GetDialogItem(WinHandl, GUI_ID_DROPDOWN0);
   \   00000008   FA02D4E1           LDRSH    R0,[R4, #+42]
   \   0000000C   601FA0E3           MOV      R1,#+384
   \   00000010   ........           _BLF     WM_GetDialogItem,??WM_GetDialogItem??rA
   \   00000014   B403C4E1           STRH     R0,[R4, #+52]
     48             DROPDOWN_SetAutoScroll(hDropdHWUnit, 1);
   \   00000018   0110A0E3           MOV      R1,#+1
   \   0000001C   ........           _BLF     DROPDOWN_SetAutoScroll,??DROPDOWN_SetAutoScroll??rA
     49             hListviewHWUnit   = WM_GetDialogItem(WinHandl, GUI_ID_LISTVIEW0);
   \   00000020   FA02D4E1           LDRSH    R0,[R4, #+42]
   \   00000024   801FA0E3           MOV      R1,#+512
   \   00000028   ........           _BLF     WM_GetDialogItem,??WM_GetDialogItem??rA
     50             LISTVIEW_SetFont(hListviewHWUnit, &TDU_FONT_ST);
   \   0000002C   ........           LDR      R1,??DataTable2  ;; TDU_FONT_ST
   \   00000030   B603C4E1           STRH     R0,[R4, #+54]
   \   00000034   ........           _BLF     LISTVIEW_SetFont,??LISTVIEW_SetFont??rA
     51             InitSysWin();
   \   00000038   0400A0E1           MOV      R0,R4
   \   0000003C   ........           BL       ??InitSysWin
     52          }
   \   00000040   1040BDE8           POP      {R4,LR}
   \   00000044   1EFF2FE1           BX       LR               ;; return
     53          
     54          

   \                                 In segment CODE, align 4, keep-with-next
     55          void TDUSysWin4::InitSysWin(void)
     56          {
   \                     ??InitSysWin:
   \   00000000   F04F2DE9           PUSH     {R4-R11,LR}
   \   00000004   CADF4DE2           SUB      SP,SP,#+808
   \   00000008   0050A0E1           MOV      R5,R0
     57             CurrentHWUnit = NULL;
   \   0000000C   0000A0E3           MOV      R0,#+0
   \   00000010   380085E5           STR      R0,[R5, #+56]
   \   00000014   080E9FE5           LDR      R0,??InitSysWin_2  ;; ??PROProjectInfoPtr
   \   00000018   000090E5           LDR      R0,[R0, #+0]
   \   0000001C   000050E3           CMP      R0,#+0
   \   00000020   7303000A           BEQ      ??InitSysWin_3
   \   00000024   020000EA           B        ??InitSysWin_4
     58             if (PROProjectInfo::PROProjectInfoPtr)
     59             {
     60                while (DROPDOWN_GetNumItems(hDropdHWUnit) > 0)
     61                {
     62                   DROPDOWN_DeleteItem(hDropdHWUnit, 0);
   \                     ??InitSysWin_5:
   \   00000028   F403D5E1           LDRSH    R0,[R5, #+52]
   \   0000002C   0010A0E3           MOV      R1,#+0
   \   00000030   ........           _BLF     DROPDOWN_DeleteItem,??DROPDOWN_DeleteItem??rA
     63                }
   \                     ??InitSysWin_4:
   \   00000034   F403D5E1           LDRSH    R0,[R5, #+52]
   \   00000038   ........           _BLF     DROPDOWN_GetNumItems,??DROPDOWN_GetNumItems??rA
   \   0000003C   010050E3           CMP      R0,#+1
   \   00000040   F8FFFFAA           BGE      ??InitSysWin_5
   \   00000044   DC0D9FE5           LDR      R0,??InitSysWin_2+0x4  ;; ??GlobalHW_UnitSet
     64                set<PRogramObject *>::iterator pBIt;
     65                for (pBIt = IOUnit::GlobalHW_UnitSet.begin(); pBIt != IOUnit::GlobalHW_UnitSet.end(); pBIt++)
   \   00000048   387F8FE2           ADR      R7,??InitSysWin_6  ;; " "
   \   0000004C   004090E5           LDR      R4,[R0, #+0]
   \   00000050   E180A0E3           MOV      R8,#+225
   \   00000054   408F88E3           ORR      R8,R8,#0x100
   \   00000058   1A0000EA           B        ??InitSysWin_7
     66                {
     67                   PRogramObjectBase *HWUnitElement = (*pBIt);
     68                   if (HWUnitElement)
     69                   {
     70                      AnsiString DropdStr;
     71                      switch (HWUnitElement->Type)
     72                      {
     73                      case C_PRO_TANKSYS_UNIT:
     74                         {
     75                            PROTanksystemUnit *ePtr = (PROTanksystemUnit *)HWUnitElement;
     76                            if (ePtr)
     77                            {
     78                               switch (ePtr->UnitID)
     79                               {
     80                               case DEVICE_TCU:
     81                                  //     case DEVICE_TCU_R1:
     82                               case DEVICE_TCU_R2:
     83                                  DropdStr = ePtr->Name; //"TCU:"+(AnsiString)ePtr->Address;
     84                                  break;
     85                               case DEVICE_TDU:
     86                                  //     case DEVICE_TDU_R1:
     87                               case DEVICE_TDU_R2:
     88                                  DropdStr = ePtr->Name; //"TDU:"+(AnsiString)ePtr->Address;
     89                                  DropdStr += " " + FindDictionaryWord(L_WORD481) + (AnsiString)ePtr->TCUAddress; // on TCU
     90                                  break;
     91                               case DEVICE_PCSW:
     92                                  DropdStr = ePtr->Name; //"PC:"+(AnsiString)ePtr->Address;
     93                                  DropdStr += " " + FindDictionaryWord(L_WORD481) + (AnsiString)ePtr->TCUAddress; // on TCU
     94                                  break;
     95                               }
     96                               DROPDOWN_AddString(hDropdHWUnit, DropdStr.c_str());
     97                               DropdHWUnitList.push_back((PRogramObject *)ePtr);
     98                            }
     99                         }
    100                         break;
    101                      case C_SC_W_INGRESS :
    102                      case C_SC_ADCARD    :
    103                         {
    104                            SCADCard *ePtr = (SCADCard *)HWUnitElement;
    105                            if (ePtr)
    106                            {
    107                               DropdStr = ePtr->Name; //"ADCard";//+(AnsiString)ePtr->SCAddress;
    108                               DropdStr += " " + FindDictionaryWord(L_WORD482) + (AnsiString)ePtr->IOAddress + " Ch." + (AnsiString)(ePtr->IOChannel + 1); // on ZB485
    109                               DropdStr += " " + FindDictionaryWord(L_WORD481) + (AnsiString)ePtr->TCUAddress; // on TCU
    110                               DROPDOWN_AddString(hDropdHWUnit, DropdStr.c_str());
    111                               DropdHWUnitList.push_back((PRogramObject *)ePtr);
    112                            }
    113                         }
    114                         break;
    115                      case C_IO_AN_ZBANA :
    116                      case C_IO_AN_ZB485 :
    117                      case C_IO_AN_ZBHART:
    118                         {
    119                            IOUnit *ePtr = (IOUnit *)HWUnitElement;
    120                            if (ePtr)
    121                            {
    122                               DropdStr = ePtr->Name; //"ZBANA:"+(AnsiString)ePtr->IOAddress;
    123                               DropdStr += " " + FindDictionaryWord(L_WORD481) + (AnsiString)ePtr->TCUAddress; // on TCU
    124                               DROPDOWN_AddString(hDropdHWUnit, DropdStr.c_str());
   \                     ??InitSysWin_8:
   \   0000005C   F403D5E1           LDRSH    R0,[R5, #+52]
   \   00000060   ........           _BLF     DROPDOWN_AddString,??DROPDOWN_AddString??rA
    125                               DropdHWUnitList.push_back((PRogramObject *)ePtr);
   \   00000064   0610A0E1           MOV      R1,R6
   \   00000068   3C0085E2           ADD      R0,R5,#+60
   \   0000006C   ........           _BLF     ??push_back,??push_back??rA
    126                            }
    127                         }
    128                         break;
    129                      case C_IO_MODBUS:
    130                         /*{
    131                             IOUnitWAGO *ePtr = (IOUnitWAGO*)HWUnitElement;
    132                             if ( ePtr ) {
    133                                 DropdStr = ePtr->Name;//"WAGO:"+(AnsiString)ePtr->IOAddress;
    134                                 DropdStr += " " + FindDictionaryWord(L_WORD481) +(AnsiString)ePtr->TCUAddress; //on TCU
    135                                 DROPDOWN_AddString(hDropdHWUnit, DropdStr.c_str());
    136                                 DropdHWUnitList.push_back((PRogramObject*)ePtr);
    137                             }
    138                         }*/
    139                         break;
    140                      }
    141                   }
   \                     ??InitSysWin_9:
   \   00000070   0020A0E3           MOV      R2,#+0
   \   00000074   0110A0E3           MOV      R1,#+1
   \   00000078   0D00A0E1           MOV      R0,SP
   \   0000007C   ........           _BLF     ??_Tidy,??_Tidy??rA
   \                     ??InitSysWin_10:
   \   00000080   080084E2           ADD      R0,R4,#+8
   \   00000084   0510D0E5           LDRB     R1,[R0, #+5]
   \   00000088   000051E3           CMP      R1,#+0
   \   0000008C   0D00001A           BNE      ??InitSysWin_7
   \   00000090   000090E5           LDR      R0,[R0, #+0]
   \   00000094   0D10D0E5           LDRB     R1,[R0, #+13]
   \   00000098   000051E3           CMP      R1,#+0
   \   0000009C   0E03001A           BNE      ??InitSysWin_11
   \   000000A0   001090E5           LDR      R1,[R0, #+0]
   \   000000A4   0D10D1E5           LDRB     R1,[R1, #+13]
   \   000000A8   000051E3           CMP      R1,#+0
   \   000000AC   0400001A           BNE      ??InitSysWin_12
   \                     ??InitSysWin_13:
   \   000000B0   000090E5           LDR      R0,[R0, #+0]
   \   000000B4   001090E5           LDR      R1,[R0, #+0]
   \   000000B8   0D10D1E5           LDRB     R1,[R1, #+13]
   \   000000BC   000051E3           CMP      R1,#+0
   \   000000C0   FAFFFF0A           BEQ      ??InitSysWin_13
   \                     ??InitSysWin_12:
   \   000000C4   0040A0E1           MOV      R4,R0
   \                     ??InitSysWin_7:
   \   000000C8   580D9FE5           LDR      R0,??InitSysWin_2+0x4  ;; ??GlobalHW_UnitSet
   \   000000CC   000054E1           CMP      R4,R0
   \   000000D0   1700001A           BNE      ??InitSysWin_14
    142                }
    143                DROPDOWN_SetSel(hDropdHWUnit, CurrentIndex);
   \   000000D4   F403D5E1           LDRSH    R0,[R5, #+52]
   \   000000D8   481095E5           LDR      R1,[R5, #+72]
   \   000000DC   ........           _BLF     DROPDOWN_SetSel,??DROPDOWN_SetSel??rA
    144                WM_SetScrollbarV(hListviewHWUnit, 1);
   \   000000E0   F603D5E1           LDRSH    R0,[R5, #+54]
   \   000000E4   0110A0E3           MOV      R1,#+1
   \   000000E8   ........           _BLF     WM_SetScrollbarV,??WM_SetScrollbarV??rA
    145                LISTVIEW_SetGridVis(hListviewHWUnit, 1); //Sets the visibility
   \   000000EC   F603D5E1           LDRSH    R0,[R5, #+54]
   \   000000F0   0110A0E3           MOV      R1,#+1
   \   000000F4   ........           _BLF     LISTVIEW_SetGridVis,??LISTVIEW_SetGridVis??rA
    146                LISTVIEW_SetLBorder(hListviewHWUnit, 2);
   \   000000F8   F603D5E1           LDRSH    R0,[R5, #+54]
   \   000000FC   0210A0E3           MOV      R1,#+2
   \   00000100   ........           _BLF     LISTVIEW_SetLBorder,??LISTVIEW_SetLBorder??rA
    147                LISTVIEW_SetRBorder(hListviewHWUnit, 1);
   \   00000104   F603D5E1           LDRSH    R0,[R5, #+54]
   \   00000108   0110A0E3           MOV      R1,#+1
   \   0000010C   ........           _BLF     LISTVIEW_SetRBorder,??LISTVIEW_SetRBorder??rA
    148                LISTVIEW_AddColumn(hListviewHWUnit,  80,  FindDictionaryWord(L_WORD449).c_str(), GUI_TA_LEFT); // Type
   \   00000110   2010C8E3           BIC      R1,R8,#0x20
   \   00000114   540F8DE2           ADD      R0,SP,#+336
   \   00000118   ........           _BLF     ??FindDictionaryWord,??FindDictionaryWord??rA
   \   0000011C   68019DE5           LDR      R0,[SP, #+360]
   \   00000120   100050E3           CMP      R0,#+16
   \   00000124   54219D25           LDRCS    R2,[SP, #+340]
   \   00000128   552F8D32           ADDCC    R2,SP,#+340
   \   0000012C   F20200EA           B        ??InitSysWin_15
   \                     ??InitSysWin_6:
   \   00000130   20000000           DC8      " ",+0,+0
   \                     ??InitSysWin_14:
   \   00000134   106094E5           LDR      R6,[R4, #+16]
   \   00000138   000056E3           CMP      R6,#+0
   \   0000013C   CFFFFF0A           BEQ      ??InitSysWin_10
   \   00000140   0D00A0E1           MOV      R0,SP
   \   00000144   ........           _BLF     ??AnsiString,??AnsiString??rA
   \   00000148   A00096E5           LDR      R0,[R6, #+160]
   \   0000014C   7E0040E2           SUB      R0,R0,#+126
   \   00000150   400E40E2           SUB      R0,R0,#+1024
   \   00000154   E90F50E3           CMP      R0,#+932
   \   00000158   C4FFFF8A           BHI      ??InitSysWin_9
   \   0000015C   021F8FE2           ADR      R1,??InitSysWin_1
   \   00000160   8000A0E1           MOV      R0,R0, LSL #+1
   \   00000164   F01091E1           LDRSH    R1,[R1, R0]
   \   00000168   01F18FE0           ADD      PC,PC,R1, LSL #+2
   \                     ??InitSysWin_1:
   \   0000016C   D201C0FFC0FF       DC16     +466,+65472,+65472,+65472
   \              C0FF        
   \   00000174   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   0000017C   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   00000184   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   0000018C   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   00000194   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   0000019C   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   000001A4   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   000001AC   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   000001B4   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   000001BC   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   000001C4   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   000001CC   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   000001D4   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   000001DC   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   000001E4   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   000001EC   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   000001F4   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   000001FC   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   00000204   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   0000020C   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   00000214   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   0000021C   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   00000224   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   0000022C   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   00000234   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   0000023C   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   00000244   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   0000024C   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   00000254   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   0000025C   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   00000264   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   0000026C   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   00000274   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   0000027C   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   00000284   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   0000028C   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   00000294   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   0000029C   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   000002A4   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   000002AC   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   000002B4   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   000002BC   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   000002C4   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   000002CC   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   000002D4   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   000002DC   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   000002E4   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   000002EC   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   000002F4   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   000002FC   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   00000304   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   0000030C   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   00000314   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   0000031C   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   00000324   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   0000032C   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   00000334   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   0000033C   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   00000344   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   0000034C   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   00000354   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   0000035C   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   00000364   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   0000036C   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   00000374   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   0000037C   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   00000384   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   0000038C   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   00000394   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   0000039C   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   000003A4   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   000003AC   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   000003B4   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   000003BC   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   000003C4   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   000003CC   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   000003D4   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   000003DC   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   000003E4   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   000003EC   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   000003F4   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   000003FC   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   00000404   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   0000040C   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   00000414   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   0000041C   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   00000424   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   0000042C   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   00000434   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   0000043C   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   00000444   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   0000044C   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   00000454   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   0000045C   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   00000464   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   0000046C   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   00000474   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   0000047C   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   00000484   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   0000048C   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   00000494   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   0000049C   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   000004A4   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   000004AC   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   000004B4   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   000004BC   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   000004C4   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   000004CC   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   000004D4   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   000004DC   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   000004E4   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   000004EC   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   000004F4   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   000004FC   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   00000504   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   0000050C   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   00000514   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   0000051C   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   00000524   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   0000052C   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   00000534   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   0000053C   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   00000544   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   0000054C   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   00000554   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   0000055C   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   00000564   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   0000056C   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   00000574   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   0000057C   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   00000584   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   0000058C   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   00000594   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   0000059C   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   000005A4   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   000005AC   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   000005B4   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   000005BC   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   000005C4   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   000005CC   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   000005D4   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   000005DC   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   000005E4   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   000005EC   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   000005F4   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   000005FC   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   00000604   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   0000060C   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   00000614   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   0000061C   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   00000624   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   0000062C   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   00000634   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   0000063C   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   00000644   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   0000064C   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   00000654   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   0000065C   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   00000664   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   0000066C   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   00000674   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   0000067C   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   00000684   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   0000068C   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   00000694   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   0000069C   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   000006A4   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   000006AC   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   000006B4   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   000006BC   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   000006C4   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   000006CC   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   000006D4   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   000006DC   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   000006E4   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   000006EC   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   000006F4   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   000006FC   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   00000704   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   0000070C   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   00000714   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   0000071C   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   00000724   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   0000072C   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   00000734   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   0000073C   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   00000744   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   0000074C   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   00000754   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   0000075C   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   00000764   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   0000076C   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   00000774   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   0000077C   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   00000784   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   0000078C   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   00000794   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   0000079C   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   000007A4   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   000007AC   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   000007B4   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   000007BC   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   000007C4   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   000007CC   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   000007D4   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   000007DC   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   000007E4   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   000007EC   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   000007F4   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   000007FC   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   00000804   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   0000080C   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   00000814   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   0000081C   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   00000824   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   0000082C   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   00000834   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   0000083C   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   00000844   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   0000084C   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   00000854   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   0000085C   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   00000864   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   0000086C   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   00000874   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   0000087C   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   00000884   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   0000088C   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   00000894   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   0000089C   C0FFA802A802       DC16     +65472,+680,+680,+680
   \              A802        
   \   000008A4   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+65472
   \              C0FF        
   \   000008AC   C0FFC0FFC0FF       DC16     +65472,+65472,+65472,+573
   \              3D02        
   \   000008B4   3D020000           DC16     +573,+0
   \                     ??InitSysWin_16:
   \   000008B8   000056E3           CMP      R6,#+0
   \   000008BC   EBFDFF0A           BEQ      ??InitSysWin_9
   \   000008C0   ........           LDR      R0,??DataTable5  ;; ??npos
   \   000008C4   009090E5           LDR      R9,[R0, #+0]
   \   000008C8   240396E5           LDR      R0,[R6, #+804]
   \   000008CC   200050E2           SUBS     R0,R0,#+32
   \   000008D0   02005012           SUBSNE   R0,R0,#+2
   \   000008D4   0500000A           BEQ      ??InitSysWin_17
   \   000008D8   0E0050E2           SUBS     R0,R0,#+14
   \   000008DC   02005012           SUBSNE   R0,R0,#+2
   \   000008E0   0800000A           BEQ      ??InitSysWin_18
   \   000008E4   0E0050E2           SUBS     R0,R0,#+14
   \   000008E8   2F00000A           BEQ      ??InitSysWin_19
   \   000008EC   570000EA           B        ??InitSysWin_20
   \                     ??InitSysWin_17:
   \   000008F0   0930A0E1           MOV      R3,R9
   \   000008F4   0020A0E3           MOV      R2,#+0
   \   000008F8   441086E2           ADD      R1,R6,#+68
   \   000008FC   0D00A0E1           MOV      R0,SP
   \   00000900   ........           _BLF     ??assign,??assign??rA
   \   00000904   510000EA           B        ??InitSysWin_20
   \                     ??InitSysWin_18:
   \   00000908   0930A0E1           MOV      R3,R9
   \   0000090C   0020A0E3           MOV      R2,#+0
   \   00000910   441086E2           ADD      R1,R6,#+68
   \   00000914   0D00A0E1           MOV      R0,SP
   \   00000918   ........           _BLF     ??assign,??assign??rA
   \   0000091C   301396E5           LDR      R1,[R6, #+816]
   \   00000920   A10F8DE2           ADD      R0,SP,#+644
   \   00000924   ........           _BLF     ??AnsiString_1,??AnsiString??rA_1
   \   00000928   00A0A0E1           MOV      R10,R0
   \   0000092C   0810A0E1           MOV      R1,R8
   \   00000930   9A0F8DE2           ADD      R0,SP,#+616
   \   00000934   ........           _BLF     ??FindDictionaryWord,??FindDictionaryWord??rA
   \   00000938   9A2F8DE2           ADD      R2,SP,#+616
   \   0000093C   0710A0E1           MOV      R1,R7
   \   00000940   930F8DE2           ADD      R0,SP,#+588
   \   00000944   ........           _BLF     `??operator+_1`,`??operator+??rA`
   \   00000948   0A20A0E1           MOV      R2,R10
   \   0000094C   931F8DE2           ADD      R1,SP,#+588
   \   00000950   8C0F8DE2           ADD      R0,SP,#+560
   \   00000954   ........           _BLF     `??operator+`,`??operator+??rA_1`
   \   00000958   0930A0E1           MOV      R3,R9
   \   0000095C   0020A0E3           MOV      R2,#+0
   \   00000960   8C1F8DE2           ADD      R1,SP,#+560
   \   00000964   0D00A0E1           MOV      R0,SP
   \   00000968   ........           _BLF     ??append,??append??rA
   \   0000096C   0020A0E3           MOV      R2,#+0
   \   00000970   0110A0E3           MOV      R1,#+1
   \   00000974   8C0F8DE2           ADD      R0,SP,#+560
   \   00000978   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   0000097C   0020A0E3           MOV      R2,#+0
   \   00000980   0110A0E3           MOV      R1,#+1
   \   00000984   A10F8DE2           ADD      R0,SP,#+644
   \   00000988   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   0000098C   0020A0E3           MOV      R2,#+0
   \   00000990   0110A0E3           MOV      R1,#+1
   \   00000994   930F8DE2           ADD      R0,SP,#+588
   \   00000998   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   0000099C   0020A0E3           MOV      R2,#+0
   \   000009A0   0110A0E3           MOV      R1,#+1
   \   000009A4   9A0F8DE2           ADD      R0,SP,#+616
   \   000009A8   270000EA           B        ??InitSysWin_21
   \                     ??InitSysWin_19:
   \   000009AC   0930A0E1           MOV      R3,R9
   \   000009B0   0020A0E3           MOV      R2,#+0
   \   000009B4   441086E2           ADD      R1,R6,#+68
   \   000009B8   0D00A0E1           MOV      R0,SP
   \   000009BC   ........           _BLF     ??assign,??assign??rA
   \   000009C0   301396E5           LDR      R1,[R6, #+816]
   \   000009C4   BD0F8DE2           ADD      R0,SP,#+756
   \   000009C8   ........           _BLF     ??AnsiString_1,??AnsiString??rA_1
   \   000009CC   00A0A0E1           MOV      R10,R0
   \   000009D0   0810A0E1           MOV      R1,R8
   \   000009D4   B60F8DE2           ADD      R0,SP,#+728
   \   000009D8   ........           _BLF     ??FindDictionaryWord,??FindDictionaryWord??rA
   \   000009DC   B62F8DE2           ADD      R2,SP,#+728
   \   000009E0   0710A0E1           MOV      R1,R7
   \   000009E4   AF0F8DE2           ADD      R0,SP,#+700
   \   000009E8   ........           _BLF     `??operator+_1`,`??operator+??rA`
   \   000009EC   0A20A0E1           MOV      R2,R10
   \   000009F0   AF1F8DE2           ADD      R1,SP,#+700
   \   000009F4   A80F8DE2           ADD      R0,SP,#+672
   \   000009F8   ........           _BLF     `??operator+`,`??operator+??rA_1`
   \   000009FC   0930A0E1           MOV      R3,R9
   \   00000A00   0020A0E3           MOV      R2,#+0
   \   00000A04   A81F8DE2           ADD      R1,SP,#+672
   \   00000A08   0D00A0E1           MOV      R0,SP
   \   00000A0C   ........           _BLF     ??append,??append??rA
   \   00000A10   0020A0E3           MOV      R2,#+0
   \   00000A14   0110A0E3           MOV      R1,#+1
   \   00000A18   A80F8DE2           ADD      R0,SP,#+672
   \   00000A1C   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000A20   0020A0E3           MOV      R2,#+0
   \   00000A24   0110A0E3           MOV      R1,#+1
   \   00000A28   BD0F8DE2           ADD      R0,SP,#+756
   \   00000A2C   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000A30   0020A0E3           MOV      R2,#+0
   \   00000A34   0110A0E3           MOV      R1,#+1
   \   00000A38   AF0F8DE2           ADD      R0,SP,#+700
   \   00000A3C   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000A40   0020A0E3           MOV      R2,#+0
   \   00000A44   0110A0E3           MOV      R1,#+1
   \   00000A48   B60F8DE2           ADD      R0,SP,#+728
   \                     ??InitSysWin_21:
   \   00000A4C   ........           _BLF     ??_Tidy,??_Tidy??rA
   \                     ??InitSysWin_20:
   \   00000A50   18009DE5           LDR      R0,[SP, #+24]
   \   00000A54   100050E3           CMP      R0,#+16
   \   00000A58   04109D25           LDRCS    R1,[SP, #+4]
   \   00000A5C   04108D32           ADDCC    R1,SP,#+4
   \   00000A60   7DFDFFEA           B        ??InitSysWin_8
   \                     ??InitSysWin_22:
   \   00000A64   000056E3           CMP      R6,#+0
   \   00000A68   80FDFF0A           BEQ      ??InitSysWin_9
   \   00000A6C   ........           LDR      R0,??DataTable5  ;; ??npos
   \   00000A70   0020A0E3           MOV      R2,#+0
   \   00000A74   009090E5           LDR      R9,[R0, #+0]
   \   00000A78   441086E2           ADD      R1,R6,#+68
   \   00000A7C   0930A0E1           MOV      R3,R9
   \   00000A80   0D00A0E1           MOV      R0,SP
   \   00000A84   ........           _BLF     ??assign,??assign??rA
   \   00000A88   7C0196E5           LDR      R0,[R6, #+380]
   \   00000A8C   011080E2           ADD      R1,R0,#+1
   \   00000A90   770F8DE2           ADD      R0,SP,#+476
   \   00000A94   ........           _BLF     ??AnsiString_1,??AnsiString??rA_1
   \   00000A98   781196E5           LDR      R1,[R6, #+376]
   \   00000A9C   00A0A0E1           MOV      R10,R0
   \   00000AA0   700F8DE2           ADD      R0,SP,#+448
   \   00000AA4   ........           _BLF     ??AnsiString_1,??AnsiString??rA_1
   \   00000AA8   00B0A0E1           MOV      R11,R0
   \   00000AAC   011088E2           ADD      R1,R8,#+1
   \   00000AB0   8C008DE2           ADD      R0,SP,#+140
   \   00000AB4   ........           _BLF     ??FindDictionaryWord,??FindDictionaryWord??rA
   \   00000AB8   8C208DE2           ADD      R2,SP,#+140
   \   00000ABC   0710A0E1           MOV      R1,R7
   \   00000AC0   70008DE2           ADD      R0,SP,#+112
   \   00000AC4   ........           _BLF     `??operator+_1`,`??operator+??rA`
   \   00000AC8   0B20A0E1           MOV      R2,R11
   \   00000ACC   70108DE2           ADD      R1,SP,#+112
   \   00000AD0   54008DE2           ADD      R0,SP,#+84
   \   00000AD4   ........           _BLF     `??operator+`,`??operator+??rA_1`
   \   00000AD8   4C239FE5           LDR      R2,??InitSysWin_2+0x8  ;; `?<Constant {{2192, 0, 41}, {352, 0, 40}}>` + 24
   \   00000ADC   54108DE2           ADD      R1,SP,#+84
   \   00000AE0   38008DE2           ADD      R0,SP,#+56
   \   00000AE4   ........           _BLF     `??operator+_2`,`??operator+??rA_2`
   \   00000AE8   0A20A0E1           MOV      R2,R10
   \   00000AEC   38108DE2           ADD      R1,SP,#+56
   \   00000AF0   1C008DE2           ADD      R0,SP,#+28
   \   00000AF4   ........           _BLF     `??operator+`,`??operator+??rA_1`
   \   00000AF8   0930A0E1           MOV      R3,R9
   \   00000AFC   0020A0E3           MOV      R2,#+0
   \   00000B00   1C108DE2           ADD      R1,SP,#+28
   \   00000B04   0D00A0E1           MOV      R0,SP
   \   00000B08   ........           _BLF     ??append,??append??rA
   \   00000B0C   0020A0E3           MOV      R2,#+0
   \   00000B10   0110A0E3           MOV      R1,#+1
   \   00000B14   1C008DE2           ADD      R0,SP,#+28
   \   00000B18   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000B1C   0020A0E3           MOV      R2,#+0
   \   00000B20   0110A0E3           MOV      R1,#+1
   \   00000B24   770F8DE2           ADD      R0,SP,#+476
   \   00000B28   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000B2C   0020A0E3           MOV      R2,#+0
   \   00000B30   0110A0E3           MOV      R1,#+1
   \   00000B34   38008DE2           ADD      R0,SP,#+56
   \   00000B38   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000B3C   0020A0E3           MOV      R2,#+0
   \   00000B40   0110A0E3           MOV      R1,#+1
   \   00000B44   54008DE2           ADD      R0,SP,#+84
   \   00000B48   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000B4C   0020A0E3           MOV      R2,#+0
   \   00000B50   0110A0E3           MOV      R1,#+1
   \   00000B54   700F8DE2           ADD      R0,SP,#+448
   \   00000B58   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000B5C   0020A0E3           MOV      R2,#+0
   \   00000B60   0110A0E3           MOV      R1,#+1
   \   00000B64   70008DE2           ADD      R0,SP,#+112
   \   00000B68   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000B6C   0020A0E3           MOV      R2,#+0
   \   00000B70   0110A0E3           MOV      R1,#+1
   \   00000B74   8C008DE2           ADD      R0,SP,#+140
   \   00000B78   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000B7C   6C1196E5           LDR      R1,[R6, #+364]
   \   00000B80   7E0F8DE2           ADD      R0,SP,#+504
   \   00000B84   ........           _BLF     ??AnsiString_1,??AnsiString??rA_1
   \   00000B88   00A0A0E1           MOV      R10,R0
   \   00000B8C   0810A0E1           MOV      R1,R8
   \   00000B90   E0008DE2           ADD      R0,SP,#+224
   \   00000B94   ........           _BLF     ??FindDictionaryWord,??FindDictionaryWord??rA
   \   00000B98   E0208DE2           ADD      R2,SP,#+224
   \   00000B9C   0710A0E1           MOV      R1,R7
   \   00000BA0   C4008DE2           ADD      R0,SP,#+196
   \   00000BA4   ........           _BLF     `??operator+_1`,`??operator+??rA`
   \   00000BA8   0A20A0E1           MOV      R2,R10
   \   00000BAC   C4108DE2           ADD      R1,SP,#+196
   \   00000BB0   A8008DE2           ADD      R0,SP,#+168
   \   00000BB4   ........           _BLF     `??operator+`,`??operator+??rA_1`
   \   00000BB8   0930A0E1           MOV      R3,R9
   \   00000BBC   0020A0E3           MOV      R2,#+0
   \   00000BC0   A8108DE2           ADD      R1,SP,#+168
   \   00000BC4   0D00A0E1           MOV      R0,SP
   \   00000BC8   ........           _BLF     ??append,??append??rA
   \   00000BCC   0020A0E3           MOV      R2,#+0
   \   00000BD0   0110A0E3           MOV      R1,#+1
   \   00000BD4   A8008DE2           ADD      R0,SP,#+168
   \   00000BD8   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000BDC   0020A0E3           MOV      R2,#+0
   \   00000BE0   0110A0E3           MOV      R1,#+1
   \   00000BE4   7E0F8DE2           ADD      R0,SP,#+504
   \   00000BE8   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000BEC   0020A0E3           MOV      R2,#+0
   \   00000BF0   0110A0E3           MOV      R1,#+1
   \   00000BF4   C4008DE2           ADD      R0,SP,#+196
   \   00000BF8   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000BFC   0020A0E3           MOV      R2,#+0
   \   00000C00   0110A0E3           MOV      R1,#+1
   \   00000C04   E0008DE2           ADD      R0,SP,#+224
   \   00000C08   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000C0C   8FFFFFEA           B        ??InitSysWin_20
   \                     ??InitSysWin_23:
   \   00000C10   000056E3           CMP      R6,#+0
   \   00000C14   15FDFF0A           BEQ      ??InitSysWin_9
   \   00000C18   ........           LDR      R0,??DataTable5  ;; ??npos
   \   00000C1C   0020A0E3           MOV      R2,#+0
   \   00000C20   009090E5           LDR      R9,[R0, #+0]
   \   00000C24   441086E2           ADD      R1,R6,#+68
   \   00000C28   0930A0E1           MOV      R3,R9
   \   00000C2C   0D00A0E1           MOV      R0,SP
   \   00000C30   ........           _BLF     ??assign,??assign??rA
   \   00000C34   941196E5           LDR      R1,[R6, #+404]
   \   00000C38   850F8DE2           ADD      R0,SP,#+532
   \   00000C3C   ........           _BLF     ??AnsiString_1,??AnsiString??rA_1
   \   00000C40   00A0A0E1           MOV      R10,R0
   \   00000C44   0810A0E1           MOV      R1,R8
   \   00000C48   4D0F8DE2           ADD      R0,SP,#+308
   \   00000C4C   ........           _BLF     ??FindDictionaryWord,??FindDictionaryWord??rA
   \   00000C50   4D2F8DE2           ADD      R2,SP,#+308
   \   00000C54   0710A0E1           MOV      R1,R7
   \   00000C58   460F8DE2           ADD      R0,SP,#+280
   \   00000C5C   ........           _BLF     `??operator+_1`,`??operator+??rA`
   \   00000C60   0A20A0E1           MOV      R2,R10
   \   00000C64   461F8DE2           ADD      R1,SP,#+280
   \   00000C68   FC008DE2           ADD      R0,SP,#+252
   \   00000C6C   ........           _BLF     `??operator+`,`??operator+??rA_1`
   \   00000C70   0930A0E1           MOV      R3,R9
   \   00000C74   0020A0E3           MOV      R2,#+0
   \   00000C78   FC108DE2           ADD      R1,SP,#+252
   \   00000C7C   0D00A0E1           MOV      R0,SP
   \   00000C80   ........           _BLF     ??append,??append??rA
   \   00000C84   0020A0E3           MOV      R2,#+0
   \   00000C88   0110A0E3           MOV      R1,#+1
   \   00000C8C   FC008DE2           ADD      R0,SP,#+252
   \   00000C90   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000C94   0020A0E3           MOV      R2,#+0
   \   00000C98   0110A0E3           MOV      R1,#+1
   \   00000C9C   850F8DE2           ADD      R0,SP,#+532
   \   00000CA0   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000CA4   0020A0E3           MOV      R2,#+0
   \   00000CA8   0110A0E3           MOV      R1,#+1
   \   00000CAC   460F8DE2           ADD      R0,SP,#+280
   \   00000CB0   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000CB4   0020A0E3           MOV      R2,#+0
   \   00000CB8   0110A0E3           MOV      R1,#+1
   \   00000CBC   4D0F8DE2           ADD      R0,SP,#+308
   \   00000CC0   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000CC4   18009DE5           LDR      R0,[SP, #+24]
   \   00000CC8   100050E3           CMP      R0,#+16
   \   00000CCC   04109D25           LDRCS    R1,[SP, #+4]
   \   00000CD0   04108D32           ADDCC    R1,SP,#+4
   \   00000CD4   E0FCFFEA           B        ??InitSysWin_8
   \                     ??InitSysWin_24:
   \   00000CD8   0040A0E1           MOV      R4,R0
   \                     ??InitSysWin_11:
   \   00000CDC   040094E5           LDR      R0,[R4, #+4]
   \   00000CE0   0D10D0E5           LDRB     R1,[R0, #+13]
   \   00000CE4   000051E3           CMP      R1,#+0
   \   00000CE8   F5FCFF1A           BNE      ??InitSysWin_12
   \   00000CEC   081090E5           LDR      R1,[R0, #+8]
   \   00000CF0   010054E1           CMP      R4,R1
   \   00000CF4   F7FFFF0A           BEQ      ??InitSysWin_24
   \   00000CF8   F1FCFFEA           B        ??InitSysWin_12
   \                     ??InitSysWin_15:
   \   00000CFC   F603D5E1           LDRSH    R0,[R5, #+54]
   \   00000D00   0030A0E3           MOV      R3,#+0
   \   00000D04   5010A0E3           MOV      R1,#+80
   \   00000D08   ........           _BLF     LISTVIEW_AddColumn,??LISTVIEW_AddColumn??rA
   \   00000D0C   0020A0E3           MOV      R2,#+0
   \   00000D10   0110A0E3           MOV      R1,#+1
   \   00000D14   540F8DE2           ADD      R0,SP,#+336
   \   00000D18   ........           _BLF     ??_Tidy,??_Tidy??rA
    149                LISTVIEW_AddColumn(hListviewHWUnit,  70,  FindDictionaryWord(L_WORD128).c_str(), GUI_TA_LEFT); // Value
   \   00000D1C   8010A0E3           MOV      R1,#+128
   \   00000D20   5B0F8DE2           ADD      R0,SP,#+364
   \   00000D24   ........           _BLF     ??FindDictionaryWord,??FindDictionaryWord??rA
   \   00000D28   84019DE5           LDR      R0,[SP, #+388]
   \   00000D2C   0030A0E3           MOV      R3,#+0
   \   00000D30   100050E3           CMP      R0,#+16
   \   00000D34   F603D5E1           LDRSH    R0,[R5, #+54]
   \   00000D38   70219D25           LDRCS    R2,[SP, #+368]
   \   00000D3C   4610A0E3           MOV      R1,#+70
   \   00000D40   5C2F8D32           ADDCC    R2,SP,#+368
   \   00000D44   ........           _BLF     LISTVIEW_AddColumn,??LISTVIEW_AddColumn??rA
   \   00000D48   0020A0E3           MOV      R2,#+0
   \   00000D4C   0110A0E3           MOV      R1,#+1
   \   00000D50   5B0F8DE2           ADD      R0,SP,#+364
   \   00000D54   ........           _BLF     ??_Tidy,??_Tidy??rA
    150                LISTVIEW_AddColumn(hListviewHWUnit,  50,  FindDictionaryWord(L_WORD36).c_str(), GUI_TA_LEFT); // Unit
   \   00000D58   2410A0E3           MOV      R1,#+36
   \   00000D5C   620F8DE2           ADD      R0,SP,#+392
   \   00000D60   ........           _BLF     ??FindDictionaryWord,??FindDictionaryWord??rA
   \   00000D64   A0019DE5           LDR      R0,[SP, #+416]
   \   00000D68   0030A0E3           MOV      R3,#+0
   \   00000D6C   100050E3           CMP      R0,#+16
   \   00000D70   F603D5E1           LDRSH    R0,[R5, #+54]
   \   00000D74   8C219D25           LDRCS    R2,[SP, #+396]
   \   00000D78   3210A0E3           MOV      R1,#+50
   \   00000D7C   632F8D32           ADDCC    R2,SP,#+396
   \   00000D80   ........           _BLF     LISTVIEW_AddColumn,??LISTVIEW_AddColumn??rA
   \   00000D84   0020A0E3           MOV      R2,#+0
   \   00000D88   0110A0E3           MOV      R1,#+1
   \   00000D8C   620F8DE2           ADD      R0,SP,#+392
   \   00000D90   ........           _BLF     ??_Tidy,??_Tidy??rA
    151                LISTVIEW_AddColumn(hListviewHWUnit,  50,  FindDictionaryWord(L_WORD237).c_str(), GUI_TA_LEFT); // " "
   \   00000D94   ED10A0E3           MOV      R1,#+237
   \   00000D98   690F8DE2           ADD      R0,SP,#+420
   \   00000D9C   ........           _BLF     ??FindDictionaryWord,??FindDictionaryWord??rA
   \   00000DA0   BC019DE5           LDR      R0,[SP, #+444]
   \   00000DA4   0030A0E3           MOV      R3,#+0
   \   00000DA8   100050E3           CMP      R0,#+16
   \   00000DAC   F603D5E1           LDRSH    R0,[R5, #+54]
   \   00000DB0   A8219D25           LDRCS    R2,[SP, #+424]
   \   00000DB4   3210A0E3           MOV      R1,#+50
   \   00000DB8   6A2F8D32           ADDCC    R2,SP,#+424
   \   00000DBC   ........           _BLF     LISTVIEW_AddColumn,??LISTVIEW_AddColumn??rA
   \   00000DC0   0020A0E3           MOV      R2,#+0
   \   00000DC4   0110A0E3           MOV      R1,#+1
   \   00000DC8   690F8DE2           ADD      R0,SP,#+420
   \   00000DCC   ........           _BLF     ??_Tidy,??_Tidy??rA
    152                for (int l = 0; l < NumberOfRows; l++)
   \   00000DD0   0040A0E3           MOV      R4,#+0
    153                {
    154                   LISTVIEW_AddRow(hListviewHWUnit, NULL);
   \                     ??InitSysWin_25:
   \   00000DD4   F603D5E1           LDRSH    R0,[R5, #+54]
   \   00000DD8   0010A0E3           MOV      R1,#+0
    155                }
   \   00000DDC   014084E2           ADD      R4,R4,#+1
   \   00000DE0   ........           _BLF     LISTVIEW_AddRow,??LISTVIEW_AddRow??rA
   \   00000DE4   220054E3           CMP      R4,#+34
   \   00000DE8   F9FFFFBA           BLT      ??InitSysWin_25
    156                ClearList();
   \   00000DEC   0500A0E1           MOV      R0,R5
   \   00000DF0   ........           BL       ??ClearList
    157             }
    158             {
    159                const GUIKey Words[] = {
    160                   { TDU_SYSTEM4_WIN, 0, L_WORD41 },
    161                   { GUI_ID_TEXT0, 0, L_WORD40 },
    162                };
   \                     ??InitSysWin_3:
   \   00000DF4   34109FE5           LDR      R1,??InitSysWin_2+0xC  ;; `?<Constant {{2192, 0, 41}, {352, 0, 40}}>`
   \   00000DF8   C40F8DE2           ADD      R0,SP,#+784
   \   00000DFC   DC0191E8           LDM      R1,{R2-R4,R6-R8}
    163                AddToSKeyList((GUIKey *)Words, NELEMENTS(Words));
   \   00000E00   C41F8DE2           ADD      R1,SP,#+784
   \   00000E04   DC0180E8           STM      R0,{R2-R4,R6-R8}
   \   00000E08   0130A0E3           MOV      R3,#+1
   \   00000E0C   0220A0E3           MOV      R2,#+2
   \   00000E10   0500A0E1           MOV      R0,R5
   \   00000E14   ........           _BLF     ??AddToSKeyList,??AddToSKeyList??rA
    164             }
    165          }
   \   00000E18   CADF8DE2           ADD      SP,SP,#+808
   \   00000E1C   F04FBDE8           POP      {R4-R11,LR}
   \   00000E20   1EFF2FE1           BX       LR               ;; return
   \                     ??InitSysWin_2:
   \   00000E24   ........           DC32     ??PROProjectInfoPtr
   \   00000E28   ........           DC32     ??GlobalHW_UnitSet
   \   00000E2C   ........           DC32     `?<Constant {{2192, 0, 41}, {352, 0, 40}}>` + 24
   \   00000E30   ........           DC32     `?<Constant {{2192, 0, 41}, {352, 0, 40}}>`
    166          

   \                                 In segment CODE, align 4, keep-with-next
    167          void TDUSysWin4::ClearList(void)
    168          {
   \                     ??ClearList:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   0040A0E1           MOV      R4,R0
    169             for (int Row = 0; Row < NumberOfRows; Row++)
   \   00000008   0050A0E3           MOV      R5,#+0
   \   0000000C   246F8FE2           ADR      R6,??ClearList_1  ;; ""
    170             {
    171                LISTVIEW_SetItemText(hListviewHWUnit, 0, Row, "");
   \                     ??ClearList_2:
   \   00000010   F603D4E1           LDRSH    R0,[R4, #+54]
   \   00000014   0630A0E1           MOV      R3,R6
   \   00000018   0520A0E1           MOV      R2,R5
   \   0000001C   0010A0E3           MOV      R1,#+0
   \   00000020   ........           _BLF     LISTVIEW_SetItemText,??LISTVIEW_SetItemText??rA
    172                LISTVIEW_SetItemText(hListviewHWUnit, 1, Row, "");
   \   00000024   F603D4E1           LDRSH    R0,[R4, #+54]
   \   00000028   0630A0E1           MOV      R3,R6
   \   0000002C   0520A0E1           MOV      R2,R5
   \   00000030   0110A0E3           MOV      R1,#+1
   \   00000034   ........           _BLF     LISTVIEW_SetItemText,??LISTVIEW_SetItemText??rA
    173                LISTVIEW_SetItemText(hListviewHWUnit, 2, Row, "");
   \   00000038   F603D4E1           LDRSH    R0,[R4, #+54]
   \   0000003C   0630A0E1           MOV      R3,R6
   \   00000040   0520A0E1           MOV      R2,R5
   \   00000044   0210A0E3           MOV      R1,#+2
   \   00000048   ........           _BLF     LISTVIEW_SetItemText,??LISTVIEW_SetItemText??rA
    174                LISTVIEW_SetItemText(hListviewHWUnit, 3, Row, "");
   \   0000004C   F603D4E1           LDRSH    R0,[R4, #+54]
   \   00000050   0630A0E1           MOV      R3,R6
   \   00000054   0520A0E1           MOV      R2,R5
   \   00000058   0310A0E3           MOV      R1,#+3
   \   0000005C   ........           _BLF     LISTVIEW_SetItemText,??LISTVIEW_SetItemText??rA
    175                LISTVIEW_SetItemText(hListviewHWUnit, 4, Row, "");
   \   00000060   F603D4E1           LDRSH    R0,[R4, #+54]
   \   00000064   0630A0E1           MOV      R3,R6
   \   00000068   0520A0E1           MOV      R2,R5
   \   0000006C   0410A0E3           MOV      R1,#+4
   \   00000070   ........           _BLF     LISTVIEW_SetItemText,??LISTVIEW_SetItemText??rA
    176                LISTVIEW_SetItemText(hListviewHWUnit, 5, Row, "");
   \   00000074   F603D4E1           LDRSH    R0,[R4, #+54]
   \   00000078   0630A0E1           MOV      R3,R6
   \   0000007C   0520A0E1           MOV      R2,R5
   \   00000080   0510A0E3           MOV      R1,#+5
   \   00000084   ........           _BLF     LISTVIEW_SetItemText,??LISTVIEW_SetItemText??rA
    177             }
   \   00000088   015085E2           ADD      R5,R5,#+1
   \   0000008C   220055E3           CMP      R5,#+34
   \   00000090   DEFFFFBA           BLT      ??ClearList_2
    178             UpdateSysWin();
   \   00000094   0400A0E1           MOV      R0,R4
   \   00000098   ........           BL       ??UpdateSysWin
    179          }
   \   0000009C   7040BDE8           POP      {R4-R6,LR}
   \   000000A0   1EFF2FE1           BX       LR               ;; return
   \                     ??ClearList_1:
   \   000000A4   00000000           DC8      "",+0,+0,+0
    180          

   \                                 In segment CODE, align 4, keep-with-next
    181          void TDUSysWin4::UpdateSysWin(void)
    182          {
   \                     ??UpdateSysWin:
   \   00000000   F04F2DE9           PUSH     {R4-R11,LR}
   \   00000004   9CDF4DE2           SUB      SP,SP,#+624
   \   00000008   0050A0E1           MOV      R5,R0
    183             CurrentHWUnit = DropdHWUnitList[CurrentIndex];
   \   0000000C   480095E5           LDR      R0,[R5, #+72]
   \   00000010   3C1095E5           LDR      R1,[R5, #+60]
   \   00000014   004191E7           LDR      R4,[R1, +R0, LSL #+2]
   \   00000018   384085E5           STR      R4,[R5, #+56]
    184             if (CurrentHWUnit)
   \   0000001C   000054E3           CMP      R4,#+0
   \   00000020   0A03000A           BEQ      ??UpdateSysWin_2
    185             {
    186                switch (CurrentHWUnit->Type)
   \   00000024   A00094E5           LDR      R0,[R4, #+160]
   \   00000028   2C6D9FE5           LDR      R6,??UpdateSysWin_3+0x4  ;; `?~AnsiString`
   \   0000002C   ........           LDR      R7,??DataTable6  ;; ??AnsiString
   \   00000030   7E0040E2           SUB      R0,R0,#+126
   \   00000034   400E40E2           SUB      R0,R0,#+1024
   \   00000038   E90F50E3           CMP      R0,#+932
   \   0000003C   0303008A           BHI      ??UpdateSysWin_2
   \   00000040   021F8FE2           ADR      R1,??UpdateSysWin_1
   \   00000044   8000A0E1           MOV      R0,R0, LSL #+1
   \   00000048   B01091E1           LDRH     R1,[R1, R0]
   \   0000004C   01F18FE0           ADD      PC,PC,R1, LSL #+2
   \                     ??UpdateSysWin_1:
   \   00000050   D201FF02FF02       DC16     +466,+767,+767,+767
   \              FF02        
   \   00000058   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   00000060   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   00000068   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   00000070   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   00000078   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   00000080   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   00000088   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   00000090   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   00000098   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   000000A0   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   000000A8   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   000000B0   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   000000B8   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   000000C0   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   000000C8   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   000000D0   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   000000D8   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   000000E0   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   000000E8   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   000000F0   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   000000F8   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   00000100   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   00000108   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   00000110   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   00000118   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   00000120   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   00000128   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   00000130   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   00000138   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   00000140   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   00000148   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   00000150   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   00000158   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   00000160   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   00000168   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   00000170   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   00000178   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   00000180   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   00000188   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   00000190   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   00000198   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   000001A0   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   000001A8   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   000001B0   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   000001B8   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   000001C0   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   000001C8   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   000001D0   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   000001D8   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   000001E0   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   000001E8   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   000001F0   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   000001F8   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   00000200   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   00000208   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   00000210   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   00000218   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   00000220   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   00000228   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   00000230   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   00000238   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   00000240   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   00000248   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   00000250   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   00000258   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   00000260   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   00000268   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   00000270   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   00000278   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   00000280   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   00000288   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   00000290   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   00000298   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   000002A0   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   000002A8   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   000002B0   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   000002B8   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   000002C0   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   000002C8   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   000002D0   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   000002D8   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   000002E0   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   000002E8   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   000002F0   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   000002F8   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   00000300   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   00000308   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   00000310   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   00000318   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   00000320   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   00000328   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   00000330   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   00000338   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   00000340   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   00000348   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   00000350   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   00000358   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   00000360   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   00000368   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   00000370   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   00000378   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   00000380   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   00000388   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   00000390   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   00000398   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   000003A0   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   000003A8   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   000003B0   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   000003B8   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   000003C0   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   000003C8   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   000003D0   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   000003D8   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   000003E0   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   000003E8   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   000003F0   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   000003F8   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   00000400   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   00000408   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   00000410   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   00000418   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   00000420   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   00000428   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   00000430   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   00000438   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   00000440   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   00000448   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   00000450   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   00000458   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   00000460   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   00000468   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   00000470   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   00000478   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   00000480   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   00000488   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   00000490   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   00000498   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   000004A0   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   000004A8   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   000004B0   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   000004B8   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   000004C0   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   000004C8   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   000004D0   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   000004D8   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   000004E0   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   000004E8   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   000004F0   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   000004F8   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   00000500   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   00000508   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   00000510   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   00000518   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   00000520   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   00000528   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   00000530   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   00000538   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   00000540   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   00000548   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   00000550   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   00000558   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   00000560   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   00000568   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   00000570   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   00000578   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   00000580   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   00000588   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   00000590   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   00000598   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   000005A0   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   000005A8   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   000005B0   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   000005B8   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   000005C0   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   000005C8   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   000005D0   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   000005D8   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   000005E0   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   000005E8   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   000005F0   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   000005F8   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   00000600   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   00000608   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   00000610   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   00000618   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   00000620   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   00000628   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   00000630   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   00000638   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   00000640   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   00000648   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   00000650   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   00000658   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   00000660   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   00000668   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   00000670   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   00000678   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   00000680   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   00000688   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   00000690   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   00000698   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   000006A0   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   000006A8   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   000006B0   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   000006B8   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   000006C0   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   000006C8   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   000006D0   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   000006D8   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   000006E0   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   000006E8   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   000006F0   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   000006F8   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   00000700   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   00000708   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   00000710   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   00000718   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   00000720   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   00000728   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   00000730   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   00000738   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   00000740   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   00000748   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   00000750   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   00000758   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   00000760   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   00000768   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   00000770   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   00000778   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   00000780   FF02EF02EF02       DC16     +767,+751,+751,+751
   \              EF02        
   \   00000788   FF02FF02FF02       DC16     +767,+767,+767,+767
   \              FF02        
   \   00000790   FF02FF02FF02       DC16     +767,+767,+767,+751
   \              EF02        
   \   00000798   EF020000           DC16     +751,+0
    187                {
    188                case C_PRO_TANKSYS_UNIT:
    189                   {
    190                      PROTanksystemUnit *ePtr = (PROTanksystemUnit *)CurrentHWUnit;
    191                      switch (ePtr->HWDeviceId)
   \                     ??UpdateSysWin_4:
   \   0000079C   2803D4E5           LDRB     R0,[R4, #+808]
   \   000007A0   030050E3           CMP      R0,#+3
   \   000007A4   2901008A           BHI      ??UpdateSysWin_2
    192                      {
    193                      case TCU_R1:
    194                      case TCU_R2:
    195                      case TDU_R1:
    196                      case TDU_R2:
    197                         {
    198                            int LCnt = 0;
   \   000007A8   0080A0E3           MOV      R8,#+0
    199                            {
    200                               for (int Count = 0; Count < MAX_COM_PORTS; Count++)
   \   000007AC   0090A0E3           MOV      R9,#+0
   \   000007B0   D3BF8FE2           ADR      R11,??UpdateSysWin_5  ;; " "
    201                               {
    202                                  if (ePtr->Channels[Count])
   \                     ??UpdateSysWin_6:
   \   000007B4   090184E0           ADD      R0,R4,R9, LSL #+2
   \   000007B8   680390E5           LDR      R0,[R0, #+872]
   \   000007BC   000050E3           CMP      R0,#+0
   \   000007C0   BA00000A           BEQ      ??UpdateSysWin_7
    203                                  {
    204                                     AnsiString Str[4];
   \   000007C4   0730A0E1           MOV      R3,R7
   \   000007C8   1C20A0E3           MOV      R2,#+28
   \   000007CC   0410A0E3           MOV      R1,#+4
   \   000007D0   6B0F8DE2           ADD      R0,SP,#+428
   \   000007D4   ........           _BLF     __data_vec_construct,??__data_vec_construct??rA
    205                                     Str[0] = FindDictionaryWord(L_WORD479) + " " + (AnsiString)Count + " " + FindDictionaryWord(L_WORD480); //Com+ (Rx/Tx)
   \   000007D8   781FA0E3           MOV      R1,#+480
   \   000007DC   480F8DE2           ADD      R0,SP,#+288
   \   000007E0   ........           _BLF     ??FindDictionaryWord,??FindDictionaryWord??rA
   \   000007E4   0910A0E1           MOV      R1,R9
   \   000007E8   8E0F8DE2           ADD      R0,SP,#+568
   \   000007EC   ........           _BLF     ??AnsiString_1,??AnsiString??rA_1
   \   000007F0   00A0A0E1           MOV      R10,R0
   \   000007F4   DF10A0E3           MOV      R1,#+223
   \   000007F8   401F81E3           ORR      R1,R1,#0x100
   \   000007FC   410F8DE2           ADD      R0,SP,#+260
   \   00000800   ........           _BLF     ??FindDictionaryWord,??FindDictionaryWord??rA
   \   00000804   0B20A0E1           MOV      R2,R11
   \   00000808   411F8DE2           ADD      R1,SP,#+260
   \   0000080C   E8008DE2           ADD      R0,SP,#+232
   \   00000810   ........           _BLF     `??operator+_2`,`??operator+??rA_2`
   \   00000814   0A20A0E1           MOV      R2,R10
   \   00000818   E8108DE2           ADD      R1,SP,#+232
   \   0000081C   CC008DE2           ADD      R0,SP,#+204
   \   00000820   ........           _BLF     `??operator+`,`??operator+??rA_1`
   \   00000824   0B20A0E1           MOV      R2,R11
   \   00000828   CC108DE2           ADD      R1,SP,#+204
   \   0000082C   B0008DE2           ADD      R0,SP,#+176
   \   00000830   ........           _BLF     `??operator+_2`,`??operator+??rA_2`
   \   00000834   482F8DE2           ADD      R2,SP,#+288
   \   00000838   B0108DE2           ADD      R1,SP,#+176
   \   0000083C   94008DE2           ADD      R0,SP,#+148
   \   00000840   ........           _BLF     `??operator+`,`??operator+??rA_1`
   \   00000844   94108DE2           ADD      R1,SP,#+148
   \   00000848   870F8DE2           ADD      R0,SP,#+540
   \   0000084C   ........           _BLF     ??AnsiString_2,??AnsiString??rA_2
   \   00000850   ........           LDR      R1,??DataTable9  ;; ??npos
   \   00000854   0020A0E3           MOV      R2,#+0
   \   00000858   00A091E5           LDR      R10,[R1, #+0]
   \   0000085C   0010A0E1           MOV      R1,R0
   \   00000860   0A30A0E1           MOV      R3,R10
   \   00000864   6B0F8DE2           ADD      R0,SP,#+428
   \   00000868   ........           _BLF     ??assign,??assign??rA
   \   0000086C   0020A0E3           MOV      R2,#+0
   \   00000870   0110A0E3           MOV      R1,#+1
   \   00000874   870F8DE2           ADD      R0,SP,#+540
   \   00000878   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   0000087C   0020A0E3           MOV      R2,#+0
   \   00000880   0110A0E3           MOV      R1,#+1
   \   00000884   94008DE2           ADD      R0,SP,#+148
   \   00000888   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   0000088C   0020A0E3           MOV      R2,#+0
   \   00000890   0110A0E3           MOV      R1,#+1
   \   00000894   480F8DE2           ADD      R0,SP,#+288
   \   00000898   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   0000089C   0020A0E3           MOV      R2,#+0
   \   000008A0   0110A0E3           MOV      R1,#+1
   \   000008A4   B0008DE2           ADD      R0,SP,#+176
   \   000008A8   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000008AC   0020A0E3           MOV      R2,#+0
   \   000008B0   0110A0E3           MOV      R1,#+1
   \   000008B4   CC008DE2           ADD      R0,SP,#+204
   \   000008B8   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000008BC   0020A0E3           MOV      R2,#+0
   \   000008C0   0110A0E3           MOV      R1,#+1
   \   000008C4   8E0F8DE2           ADD      R0,SP,#+568
   \   000008C8   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000008CC   0020A0E3           MOV      R2,#+0
   \   000008D0   0110A0E3           MOV      R1,#+1
   \   000008D4   E8008DE2           ADD      R0,SP,#+232
   \   000008D8   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000008DC   0020A0E3           MOV      R2,#+0
   \   000008E0   0110A0E3           MOV      R1,#+1
   \   000008E4   410F8DE2           ADD      R0,SP,#+260
   \   000008E8   ........           _BLF     ??_Tidy,??_Tidy??rA
    206                                     Str[1] = LibGetValue(SVT_TXU_RX_LOAD, Count, ePtr) + "%/";
   \   000008EC   0000A0E3           MOV      R0,#+0
   \   000008F0   01002DE9           PUSH     {R0}
   \   000008F4   0430A0E1           MOV      R3,R4
   \   000008F8   0920A0E1           MOV      R2,R9
   \   000008FC   0510A0E3           MOV      R1,#+5
   \   00000900   401D81E3           ORR      R1,R1,#0x1000
   \   00000904   570F8DE2           ADD      R0,SP,#+348
   \   00000908   ........           _BLF     ??LibGetValue,??LibGetValue??rA
   \   0000090C   7D2F8FE2           ADR      R2,??UpdateSysWin_5+0x4  ;; "%/"
   \   00000910   571F8DE2           ADD      R1,SP,#+348
   \   00000914   500F8DE2           ADD      R0,SP,#+320
   \   00000918   ........           _BLF     `??operator+_2`,`??operator+??rA_2`
   \   0000091C   501F8DE2           ADD      R1,SP,#+320
   \   00000920   960F8DE2           ADD      R0,SP,#+600
   \   00000924   ........           _BLF     ??AnsiString_2,??AnsiString??rA_2
   \   00000928   0010A0E1           MOV      R1,R0
   \   0000092C   0A30A0E1           MOV      R3,R10
   \   00000930   0020A0E3           MOV      R2,#+0
   \   00000934   730F8DE2           ADD      R0,SP,#+460
   \   00000938   ........           _BLF     ??assign,??assign??rA
   \   0000093C   0020A0E3           MOV      R2,#+0
   \   00000940   0110A0E3           MOV      R1,#+1
   \   00000944   960F8DE2           ADD      R0,SP,#+600
   \   00000948   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   0000094C   0020A0E3           MOV      R2,#+0
   \   00000950   0110A0E3           MOV      R1,#+1
   \   00000954   500F8DE2           ADD      R0,SP,#+320
   \   00000958   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   0000095C   0020A0E3           MOV      R2,#+0
   \   00000960   0110A0E3           MOV      R1,#+1
   \   00000964   570F8DE2           ADD      R0,SP,#+348
   \   00000968   ........           _BLF     ??_Tidy,??_Tidy??rA
    207                                     Str[1] += LibGetValue(SVT_TXU_TX_LOAD, Count, ePtr) + "%";
   \   0000096C   0000A0E3           MOV      R0,#+0
   \   00000970   01002DE9           PUSH     {R0}
   \   00000974   0430A0E1           MOV      R3,R4
   \   00000978   0920A0E1           MOV      R2,R9
   \   0000097C   0710A0E3           MOV      R1,#+7
   \   00000980   401D81E3           ORR      R1,R1,#0x1000
   \   00000984   660F8DE2           ADD      R0,SP,#+408
   \   00000988   ........           _BLF     ??LibGetValue,??LibGetValue??rA
   \   0000098C   F12F8FE2           ADR      R2,??UpdateSysWin_3  ;; "%"
   \   00000990   661F8DE2           ADD      R1,SP,#+408
   \   00000994   5F0F8DE2           ADD      R0,SP,#+380
   \   00000998   ........           _BLF     `??operator+_2`,`??operator+??rA_2`
   \   0000099C   0A30A0E1           MOV      R3,R10
   \   000009A0   0020A0E3           MOV      R2,#+0
   \   000009A4   5F1F8DE2           ADD      R1,SP,#+380
   \   000009A8   740F8DE2           ADD      R0,SP,#+464
   \   000009AC   ........           _BLF     ??append,??append??rA
   \   000009B0   0020A0E3           MOV      R2,#+0
   \   000009B4   0110A0E3           MOV      R1,#+1
   \   000009B8   5F0F8DE2           ADD      R0,SP,#+380
   \   000009BC   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000009C0   0020A0E3           MOV      R2,#+0
   \   000009C4   0110A0E3           MOV      R1,#+1
   \   000009C8   660F8DE2           ADD      R0,SP,#+408
   \   000009CC   ........           _BLF     ??_Tidy,??_Tidy??rA
    208                                     Str[2] = LibGetValue(SVT_PROTOCOL, Count, ePtr);
   \   000009D0   0000A0E3           MOV      R0,#+0
   \   000009D4   01002DE9           PUSH     {R0}
   \   000009D8   0430A0E1           MOV      R3,R4
   \   000009DC   0920A0E1           MOV      R2,R9
   \   000009E0   AE10A0E3           MOV      R1,#+174
   \   000009E4   F01E81E3           ORR      R1,R1,#0xF00
   \   000009E8   14008DE2           ADD      R0,SP,#+20
   \   000009EC   ........           _BLF     ??LibGetValue,??LibGetValue??rA
   \   000009F0   0A30A0E1           MOV      R3,R10
   \   000009F4   0020A0E3           MOV      R2,#+0
   \   000009F8   14108DE2           ADD      R1,SP,#+20
   \   000009FC   7C0F8DE2           ADD      R0,SP,#+496
   \   00000A00   ........           _BLF     ??assign,??assign??rA
   \   00000A04   0020A0E3           MOV      R2,#+0
   \   00000A08   0110A0E3           MOV      R1,#+1
   \   00000A0C   14008DE2           ADD      R0,SP,#+20
   \   00000A10   ........           _BLF     ??_Tidy,??_Tidy??rA
    209                                     Str[3] = LibGetValue(SVT_DEVICE, Count, ePtr);
   \   00000A14   0000A0E3           MOV      R0,#+0
   \   00000A18   01002DE9           PUSH     {R0}
   \   00000A1C   0430A0E1           MOV      R3,R4
   \   00000A20   0920A0E1           MOV      R2,R9
   \   00000A24   AD10A0E3           MOV      R1,#+173
   \   00000A28   F01E81E3           ORR      R1,R1,#0xF00
   \   00000A2C   34008DE2           ADD      R0,SP,#+52
   \   00000A30   ........           _BLF     ??LibGetValue,??LibGetValue??rA
   \   00000A34   0A30A0E1           MOV      R3,R10
   \   00000A38   0020A0E3           MOV      R2,#+0
   \   00000A3C   34108DE2           ADD      R1,SP,#+52
   \   00000A40   840F8DE2           ADD      R0,SP,#+528
   \   00000A44   ........           _BLF     ??assign,??assign??rA
   \   00000A48   0020A0E3           MOV      R2,#+0
   \   00000A4C   0110A0E3           MOV      R1,#+1
   \   00000A50   34008DE2           ADD      R0,SP,#+52
   \   00000A54   ........           _BLF     ??_Tidy,??_Tidy??rA
    210                                     for (int j = 0; j < 4; j++)
   \   00000A58   00A0A0E3           MOV      R10,#+0
   \   00000A5C   10D08DE2           ADD      SP,SP,#+16
    211                                     {
    212                                        LISTVIEW_SetItemText(hListviewHWUnit, j, LCnt, Str[j].c_str());
   \                     ??UpdateSysWin_8:
   \   00000A60   1C10A0E3           MOV      R1,#+28
   \   00000A64   6B0F8DE2           ADD      R0,SP,#+428
   \   00000A68   910A20E0           MLA      R0,R1,R10,R0
   \   00000A6C   181090E5           LDR      R1,[R0, #+24]
   \   00000A70   0820A0E1           MOV      R2,R8
   \   00000A74   100051E3           CMP      R1,#+16
   \   00000A78   04309025           LDRCS    R3,[R0, #+4]
   \   00000A7C   0A10A0E1           MOV      R1,R10
   \   00000A80   04308032           ADDCC    R3,R0,#+4
   \   00000A84   F603D5E1           LDRSH    R0,[R5, #+54]
    213                                     }
   \   00000A88   01A08AE2           ADD      R10,R10,#+1
   \   00000A8C   ........           _BLF     LISTVIEW_SetItemText,??LISTVIEW_SetItemText??rA
   \   00000A90   04005AE3           CMP      R10,#+4
   \   00000A94   F1FFFFBA           BLT      ??UpdateSysWin_8
    214                                     LCnt++;
   \   00000A98   018088E2           ADD      R8,R8,#+1
    215                                  }
   \   00000A9C   0630A0E1           MOV      R3,R6
   \   00000AA0   1C20A0E3           MOV      R2,#+28
   \   00000AA4   0410A0E3           MOV      R1,#+4
   \   00000AA8   6B0F8DE2           ADD      R0,SP,#+428
   \   00000AAC   ........           _BLF     __data_vec_destroy,??__data_vec_destroy??rA
    216                               }
   \                     ??UpdateSysWin_7:
   \   00000AB0   019089E2           ADD      R9,R9,#+1
   \   00000AB4   070059E3           CMP      R9,#+7
   \   00000AB8   3DFFFFBA           BLT      ??UpdateSysWin_6
    217                            }
    218                            {
    219                               int Entries;
    220                               ValueList *VList = ePtr->GetValueInfoTable(Entries) + 1;
   \   00000ABC   A43094E5           LDR      R3,[R4, #+164]
   \   00000AC0   0020A0E3           MOV      R2,#+0
   \   00000AC4   4C3093E5           LDR      R3,[R3, #+76]
   \   00000AC8   0D10A0E1           MOV      R1,SP
   \   00000ACC   0400A0E1           MOV      R0,R4
   \   00000AD0   0FE0A0E1           MOV      LR,PC
   \   00000AD4   13FF2FE1           BX       R3
   \   00000AD8   0C0080E2           ADD      R0,R0,#+12
   \   00000ADC   04008DE5           STR      R0,[SP, #+4]
    221                               Entries--;
   \   00000AE0   00109DE5           LDR      R1,[SP, #+0]
    222                               if (VList)
   \   00000AE4   000050E3           CMP      R0,#+0
   \   00000AE8   011041E2           SUB      R1,R1,#+1
   \   00000AEC   00108DE5           STR      R1,[SP, #+0]
   \   00000AF0   5600000A           BEQ      ??UpdateSysWin_2
    223                               {
    224                                  for (int Count = 0; Count < Entries; Count++)
   \   00000AF4   0090A0E3           MOV      R9,#+0
   \   00000AF8   010051E3           CMP      R1,#+1
   \   00000AFC   100000AA           BGE      ??UpdateSysWin_9
    225                                  {
    226                                     AnsiString Str[3];
    227                                     Str[0] = FindDictionaryWord(VList[Count].Name);
    228                                     Str[1] = LibGetValue(VList[Count].Value, ePtr, &Str[2]);
    229                                     for (int j = 0; j < 3; j++)
    230                                     {
    231                                        LISTVIEW_SetItemText(hListviewHWUnit, j, LCnt, Str[j].c_str());
    232                                     }
    233                                     LCnt++;
    234                                  }
    235                               }
    236                            }
    237                         }
    238                         break;
    239                      case DEVICE_PCSW:
    240                         break;
    241                      }
    242                   }
    243                   break;
    244                case C_IO_AN_ZBANA :
    245                case C_IO_AN_ZB485 :
    246                case C_IO_AN_ZBHART:
    247                case C_SC_ADCARD   :
    248                case C_SC_W_INGRESS:
    249                   {
    250                      int Entries;
    251                      ValueList *VList = CurrentHWUnit->GetValueInfoTable(Entries) + 1;
    252                      Entries--;
    253                      if (VList)
    254                      {
    255                         for (int Count = 0; Count < Entries; Count++)
    256                         {
    257                            AnsiString Str[3];
    258                            Str[0] = FindDictionaryWord(VList[Count].Name);
    259                            Str[1] = LibGetValue(VList[Count].Value, CurrentHWUnit, &Str[2]);
    260                            for (int j = 0; j < 3; j++)
    261                            {
    262                               LISTVIEW_SetItemText(hListviewHWUnit, j, Count, Str[j].c_str());
    263                            }
    264                         }
    265                      }
    266                   }
    267                   break;
    268                   /*
    269               case C_IO_AN_ZBANA:
    270                   {
    271                       IOUnitZBAna *ePtr = (IOUnitZBAna*)CurrentHWUnit;
    272                           int Entries;
    273                           ValueList *VList = ePtr->GetValueInfoTable(Entries)+1;
    274                           Entries--;
    275                           if ( VList ) {
    276                               for ( int Count=0; Count < Entries; Count++ ) {
    277                                   AnsiString Str[3];
    278                                   Str[0] = VList[Count].Name;
    279                                   Str[1] = LibGetValue(VList[Count].Value, ePtr, &Str[2]);
    280                                   for ( int j=0; j < 3; j++ ) {
    281                                       LISTVIEW_SetItemText(hListviewHWUnit, j, Count, Str[j].c_str());
    282                                   }
    283                           }
    284                       }
    285                   }
    286                   break;
    287                   */
    288                case C_IO_MODBUS:
    289                   {
    290                      //IOUnitWAGO *ePtr = (IOUnitWAGO*)CurrentHWUnit;
    291                   }
    292                   break;
    293                }
    294             }
    295          }
   \                     ??UpdateSysWin_10:
   \   00000B00   520000EA           B        ??UpdateSysWin_2
   \                     ??UpdateSysWin_5:
   \   00000B04   20000000           DC8      " ",+0,+0
   \   00000B08   252F0000           DC8      "%/",+0
   \                     ??UpdateSysWin_11:
   \   00000B0C   F603D5E1           LDRSH    R0,[R5, #+54]
   \   00000B10   0820A0E1           MOV      R2,R8
   \   00000B14   0A10A0E1           MOV      R1,R10
   \   00000B18   ........           _BLF     LISTVIEW_SetItemText,??LISTVIEW_SetItemText??rA
   \   00000B1C   01A08AE2           ADD      R10,R10,#+1
   \   00000B20   03005AE3           CMP      R10,#+3
   \   00000B24   310000BA           BLT      ??UpdateSysWin_12
   \   00000B28   018088E2           ADD      R8,R8,#+1
   \   00000B2C   0630A0E1           MOV      R3,R6
   \   00000B30   1C20A0E3           MOV      R2,#+28
   \   00000B34   0310A0E3           MOV      R1,#+3
   \   00000B38   40008DE2           ADD      R0,SP,#+64
   \   00000B3C   ........           _BLF     __data_vec_destroy,??__data_vec_destroy??rA
   \   00000B40   019089E2           ADD      R9,R9,#+1
   \                     ??UpdateSysWin_9:
   \   00000B44   00009DE5           LDR      R0,[SP, #+0]
   \   00000B48   000059E1           CMP      R9,R0
   \   00000B4C   3F0000AA           BGE      ??UpdateSysWin_2
   \   00000B50   0730A0E1           MOV      R3,R7
   \   00000B54   1C20A0E3           MOV      R2,#+28
   \   00000B58   0310A0E3           MOV      R1,#+3
   \   00000B5C   40008DE2           ADD      R0,SP,#+64
   \   00000B60   ........           _BLF     __data_vec_construct,??__data_vec_construct??rA
   \   00000B64   04109DE5           LDR      R1,[SP, #+4]
   \   00000B68   0C00A0E3           MOV      R0,#+12
   \   00000B6C   90192BE0           MLA      R11,R0,R9,R1
   \   00000B70   00109BE5           LDR      R1,[R11, #+0]
   \   00000B74   24008DE2           ADD      R0,SP,#+36
   \   00000B78   ........           _BLF     ??FindDictionaryWord,??FindDictionaryWord??rA
   \   00000B7C   ........           LDR      R0,??DataTable9  ;; ??npos
   \   00000B80   0020A0E3           MOV      R2,#+0
   \   00000B84   00A090E5           LDR      R10,[R0, #+0]
   \   00000B88   24108DE2           ADD      R1,SP,#+36
   \   00000B8C   0A30A0E1           MOV      R3,R10
   \   00000B90   40008DE2           ADD      R0,SP,#+64
   \   00000B94   ........           _BLF     ??assign,??assign??rA
   \   00000B98   0020A0E3           MOV      R2,#+0
   \   00000B9C   0110A0E3           MOV      R1,#+1
   \   00000BA0   24008DE2           ADD      R0,SP,#+36
   \   00000BA4   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000BA8   0000A0E3           MOV      R0,#+0
   \   00000BAC   01002DE9           PUSH     {R0}
   \   00000BB0   08109BE5           LDR      R1,[R11, #+8]
   \   00000BB4   7C308DE2           ADD      R3,SP,#+124
   \   00000BB8   0420A0E1           MOV      R2,R4
   \   00000BBC   0C008DE2           ADD      R0,SP,#+12
   \   00000BC0   ........           _BLF     ??LibGetValue_1,??LibGetValue??rA_1
   \   00000BC4   0A30A0E1           MOV      R3,R10
   \   00000BC8   0020A0E3           MOV      R2,#+0
   \   00000BCC   0C108DE2           ADD      R1,SP,#+12
   \   00000BD0   60008DE2           ADD      R0,SP,#+96
   \   00000BD4   ........           _BLF     ??assign,??assign??rA
   \   00000BD8   0020A0E3           MOV      R2,#+0
   \   00000BDC   0110A0E3           MOV      R1,#+1
   \   00000BE0   0C008DE2           ADD      R0,SP,#+12
   \   00000BE4   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000BE8   00A0A0E3           MOV      R10,#+0
   \   00000BEC   04D08DE2           ADD      SP,SP,#+4
   \                     ??UpdateSysWin_12:
   \   00000BF0   1C10A0E3           MOV      R1,#+28
   \   00000BF4   40008DE2           ADD      R0,SP,#+64
   \   00000BF8   910A20E0           MLA      R0,R1,R10,R0
   \   00000BFC   181090E5           LDR      R1,[R0, #+24]
   \   00000C00   100051E3           CMP      R1,#+16
   \   00000C04   04309025           LDRCS    R3,[R0, #+4]
   \   00000C08   04308032           ADDCC    R3,R0,#+4
   \   00000C0C   BEFFFFEA           B        ??UpdateSysWin_11
   \                     ??UpdateSysWin_13:
   \   00000C10   A43094E5           LDR      R3,[R4, #+164]
   \   00000C14   0020A0E3           MOV      R2,#+0
   \   00000C18   4C3093E5           LDR      R3,[R3, #+76]
   \   00000C1C   0D10A0E1           MOV      R1,SP
   \   00000C20   0400A0E1           MOV      R0,R4
   \   00000C24   0FE0A0E1           MOV      LR,PC
   \   00000C28   13FF2FE1           BX       R3
   \   00000C2C   00109DE5           LDR      R1,[SP, #+0]
   \   00000C30   0C4080E2           ADD      R4,R0,#+12
   \   00000C34   011041E2           SUB      R1,R1,#+1
   \   00000C38   00108DE5           STR      R1,[SP, #+0]
   \   00000C3C   000054E3           CMP      R4,#+0
   \   00000C40   0200000A           BEQ      ??UpdateSysWin_2
   \   00000C44   0080A0E3           MOV      R8,#+0
   \   00000C48   010051E3           CMP      R1,#+1
   \   00000C4C   0F0000AA           BGE      ??UpdateSysWin_14
   \                     ??UpdateSysWin_2:
   \   00000C50   9CDF8DE2           ADD      SP,SP,#+624
   \   00000C54   F04FBDE8           POP      {R4-R11,LR}
   \   00000C58   1EFF2FE1           BX       LR
   \                     ??UpdateSysWin_15:
   \   00000C5C   F603D5E1           LDRSH    R0,[R5, #+54]
   \   00000C60   0820A0E1           MOV      R2,R8
   \   00000C64   0910A0E1           MOV      R1,R9
   \   00000C68   ........           _BLF     LISTVIEW_SetItemText,??LISTVIEW_SetItemText??rA
   \   00000C6C   019089E2           ADD      R9,R9,#+1
   \   00000C70   030059E3           CMP      R9,#+3
   \   00000C74   2F0000BA           BLT      ??UpdateSysWin_16
   \   00000C78   0630A0E1           MOV      R3,R6
   \   00000C7C   1C20A0E3           MOV      R2,#+28
   \   00000C80   0310A0E3           MOV      R1,#+3
   \   00000C84   40008DE2           ADD      R0,SP,#+64
   \   00000C88   ........           _BLF     __data_vec_destroy,??__data_vec_destroy??rA
   \   00000C8C   018088E2           ADD      R8,R8,#+1
   \                     ??UpdateSysWin_14:
   \   00000C90   00009DE5           LDR      R0,[SP, #+0]
   \   00000C94   000058E1           CMP      R8,R0
   \   00000C98   ECFFFFAA           BGE      ??UpdateSysWin_2
   \   00000C9C   0730A0E1           MOV      R3,R7
   \   00000CA0   1C20A0E3           MOV      R2,#+28
   \   00000CA4   0310A0E3           MOV      R1,#+3
   \   00000CA8   40008DE2           ADD      R0,SP,#+64
   \   00000CAC   ........           _BLF     __data_vec_construct,??__data_vec_construct??rA
   \   00000CB0   0C00A0E3           MOV      R0,#+12
   \   00000CB4   904829E0           MLA      R9,R0,R8,R4
   \   00000CB8   001099E5           LDR      R1,[R9, #+0]
   \   00000CBC   08008DE2           ADD      R0,SP,#+8
   \   00000CC0   ........           _BLF     ??FindDictionaryWord,??FindDictionaryWord??rA
   \   00000CC4   ........           LDR      R0,??DataTable9  ;; ??npos
   \   00000CC8   0020A0E3           MOV      R2,#+0
   \   00000CCC   00A090E5           LDR      R10,[R0, #+0]
   \   00000CD0   08108DE2           ADD      R1,SP,#+8
   \   00000CD4   0A30A0E1           MOV      R3,R10
   \   00000CD8   40008DE2           ADD      R0,SP,#+64
   \   00000CDC   ........           _BLF     ??assign,??assign??rA
   \   00000CE0   0020A0E3           MOV      R2,#+0
   \   00000CE4   0110A0E3           MOV      R1,#+1
   \   00000CE8   08008DE2           ADD      R0,SP,#+8
   \   00000CEC   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000CF0   0000A0E3           MOV      R0,#+0
   \   00000CF4   01002DE9           PUSH     {R0}
   \   00000CF8   382095E5           LDR      R2,[R5, #+56]
   \   00000CFC   081099E5           LDR      R1,[R9, #+8]
   \   00000D00   7C308DE2           ADD      R3,SP,#+124
   \   00000D04   28008DE2           ADD      R0,SP,#+40
   \   00000D08   ........           _BLF     ??LibGetValue_1,??LibGetValue??rA_1
   \   00000D0C   0A30A0E1           MOV      R3,R10
   \   00000D10   0020A0E3           MOV      R2,#+0
   \   00000D14   28108DE2           ADD      R1,SP,#+40
   \   00000D18   60008DE2           ADD      R0,SP,#+96
   \   00000D1C   ........           _BLF     ??assign,??assign??rA
   \   00000D20   0020A0E3           MOV      R2,#+0
   \   00000D24   0110A0E3           MOV      R1,#+1
   \   00000D28   28008DE2           ADD      R0,SP,#+40
   \   00000D2C   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000D30   0090A0E3           MOV      R9,#+0
   \   00000D34   04D08DE2           ADD      SP,SP,#+4
   \                     ??UpdateSysWin_16:
   \   00000D38   1C10A0E3           MOV      R1,#+28
   \   00000D3C   40008DE2           ADD      R0,SP,#+64
   \   00000D40   910920E0           MLA      R0,R1,R9,R0
   \   00000D44   181090E5           LDR      R1,[R0, #+24]
   \   00000D48   100051E3           CMP      R1,#+16
   \   00000D4C   04309025           LDRCS    R3,[R0, #+4]
   \   00000D50   04308032           ADDCC    R3,R0,#+4
   \   00000D54   C0FFFFEA           B        ??UpdateSysWin_15
   \                     ??UpdateSysWin_3:
   \   00000D58   25000000           DC8      "%",+0,+0
   \   00000D5C   ........           DC32     `?~AnsiString`
    296          
    297          

   \                                 In segment CODE, align 4, keep-with-next
    298          void TDUSysWin4::cbSysWin(WM_MESSAGE *pMsg)
    299          {
   \                     ??cbSysWin:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
    300             int NCode, Id;
    301             WM_HWIN hWin = pMsg->hWin;
    302             switch (pMsg->MsgId)
   \   00000004   ........           LDR      R5,??DataTable10  ;; SystemWindow
   \   00000008   0060A0E1           MOV      R6,R0
   \   0000000C   001095E5           LDR      R1,[R5, #+0]
   \   00000010   003096E5           LDR      R3,[R6, #+0]
   \   00000014   F440D6E1           LDRSH    R4,[R6, #+4]
   \   00000018   640091E5           LDR      R0,[R1, #+100]
   \   0000001C   0120A0E3           MOV      R2,#+1
   \   00000020   0B3053E2           SUBS     R3,R3,#+11
   \   00000024   0800000A           BEQ      ??cbSysWin_1
   \   00000028   033053E2           SUBS     R3,R3,#+3
   \   0000002C   0D00000A           BEQ      ??cbSysWin_2
   \   00000030   013053E2           SUBS     R3,R3,#+1
   \   00000034   0600000A           BEQ      ??cbSysWin_3
   \   00000038   0E3053E2           SUBS     R3,R3,#+14
   \   0000003C   0700000A           BEQ      ??cbSysWin_4
   \   00000040   093053E2           SUBS     R3,R3,#+9
   \   00000044   1300000A           BEQ      ??cbSysWin_5
   \   00000048   320000EA           B        ??cbSysWin_6
    303             {
    304             case WM_DELETE:
    305                SystemWindow->SysWin4IsClosed = true;
   \                     ??cbSysWin_1:
   \   0000004C   7320C1E5           STRB     R2,[R1, #+115]
   \   00000050   000000EA           B        ??cbSysWin_7
    306                break;
    307             case WM_PAINT:
    308                SystemWindow->SysWin4->UpdateLanguage();
   \                     ??cbSysWin_3:
   \   00000054   ........           _BLF     ??UpdateLanguage,??UpdateLanguage??rA
   \                     ??cbSysWin_7:
   \   00000058   7040BDE8           POP      {R4-R6,LR}
   \   0000005C   1EFF2FE1           BX       LR
    309                break;
    310             case WM_INIT_DIALOG:
    311                SystemWindow->SysWin4->FirstTime = true;
   \                     ??cbSysWin_4:
   \   00000060   2820C0E5           STRB     R2,[R0, #+40]
   \   00000064   FBFFFFEA           B        ??cbSysWin_7
    312                break;
    313             case WM_KEY:
    314                switch (((WM_KEY_INFO *)(pMsg->Data.p))->Key)
   \                     ??cbSysWin_2:
   \   00000068   080096E5           LDR      R0,[R6, #+8]
   \   0000006C   000090E5           LDR      R0,[R0, #+0]
   \   00000070   0D0050E2           SUBS     R0,R0,#+13
   \   00000074   0500000A           BEQ      ??cbSysWin_8
   \   00000078   0E0050E2           SUBS     R0,R0,#+14
   \   0000007C   F5FFFF1A           BNE      ??cbSysWin_7
    315                {
    316                case GUI_KEY_ESCAPE:
    317                   GUI_EndDialog(hWin, 1);
   \   00000080   0110A0E3           MOV      R1,#+1
   \                     ??cbSysWin_9:
   \   00000084   0400A0E1           MOV      R0,R4
   \   00000088   ........           _BLF     GUI_EndDialog,??GUI_EndDialog??rA
   \   0000008C   F1FFFFEA           B        ??cbSysWin_7
    318                   break;
    319                case GUI_KEY_ENTER:
    320                   GUI_EndDialog(hWin, 0);
   \                     ??cbSysWin_8:
   \   00000090   0010A0E3           MOV      R1,#+0
   \   00000094   FAFFFFEA           B        ??cbSysWin_9
    321                   break;
    322                }
    323                break;
    324             case WM_NOTIFY_PARENT:
    325                Id    = WM_GetId(pMsg->hWinSrc);        /* Id of widget */
   \                     ??cbSysWin_5:
   \   00000098   F600D6E1           LDRSH    R0,[R6, #+6]
   \   0000009C   ........           _BLF     WM_GetId,??WM_GetId??rA
    326                NCode = pMsg->Data.v;                               /* Notification code */
    327                switch (NCode)
   \   000000A0   081096E5           LDR      R1,[R6, #+8]
   \   000000A4   021051E2           SUBS     R1,R1,#+2
   \   000000A8   0C00000A           BEQ      ??cbSysWin_10
   \   000000AC   021051E2           SUBS     R1,R1,#+2
    328                {
    329                case WM_NOTIFICATION_SEL_CHANGED:       /* React only if released */
    330                   switch (Id)
   \   000000B0   600F5003           CMPEQ    R0,#+384
   \   000000B4   E7FFFF1A           BNE      ??cbSysWin_7
    331                   {
    332                   case GUI_ID_DROPDOWN0: /* Select TCU */
    333                      {
    334                         SystemWindow->SysWin4->CurrentIndex = DROPDOWN_GetSel(SystemWindow->SysWin4->hDropdHWUnit);
   \   000000B8   000095E5           LDR      R0,[R5, #+0]
   \   000000BC   640090E5           LDR      R0,[R0, #+100]
   \   000000C0   F403D0E1           LDRSH    R0,[R0, #+52]
   \   000000C4   ........           _BLF     DROPDOWN_GetSel,??DROPDOWN_GetSel??rA
   \   000000C8   0010A0E1           MOV      R1,R0
   \   000000CC   000095E5           LDR      R0,[R5, #+0]
   \   000000D0   640090E5           LDR      R0,[R0, #+100]
   \   000000D4   481080E5           STR      R1,[R0, #+72]
    335                         SystemWindow->SysWin4->ClearList();
   \   000000D8   ........           BL       ??ClearList
   \   000000DC   DDFFFFEA           B        ??cbSysWin_7
    336                      }
    337                      break;
    338                   }
    339                   break;
    340                case WM_NOTIFICATION_RELEASED:      /* React only if released */
    341                   switch (Id)
   \                     ??cbSysWin_10:
   \   000000E0   050050E3           CMP      R0,#+5
   \   000000E4   DBFFFF1A           BNE      ??cbSysWin_7
    342                   {
    343                   case GUI_ID_CLOSE:
    344                      /* Close Button */
    345                      SystemWindow->Protect();
   \   000000E8   000095E5           LDR      R0,[R5, #+0]
   \   000000EC   ........           _BLF     ??Protect,??Protect??rA
    346                      if (!SystemWindow->SysWin4IsClosed)
   \   000000F0   000095E5           LDR      R0,[R5, #+0]
   \   000000F4   7300D0E5           LDRB     R0,[R0, #+115]
   \   000000F8   000050E3           CMP      R0,#+0
   \   000000FC   0200001A           BNE      ??cbSysWin_11
    347                      {
    348                         GUI_EndDialog(hWin, 0);
   \   00000100   0010A0E3           MOV      R1,#+0
   \   00000104   0400A0E1           MOV      R0,R4
   \   00000108   ........           _BLF     GUI_EndDialog,??GUI_EndDialog??rA
    349                      }
    350                      SystemWindow->UnProtect();
   \                     ??cbSysWin_11:
   \   0000010C   000095E5           LDR      R0,[R5, #+0]
   \   00000110   ........           _BLF     ??UnProtect,??UnProtect??rA
   \   00000114   CFFFFFEA           B        ??cbSysWin_7
    351                      break;
    352                   }
    353                   break;
    354                }
    355                break;
    356             default:
    357                WM_DefaultProc(pMsg);
   \                     ??cbSysWin_6:
   \   00000118   0600A0E1           MOV      R0,R6
   \   0000011C   ........           _BLF     WM_DefaultProc,??WM_DefaultProc??rA
    358             }
    359          }
   \                     ??cbSysWin_12:
   \   00000120   CCFFFFEA           B        ??cbSysWin_7

   \                                 In segment DIFUNCT, align 4, keep-with-next, root
   \   00000000                      REQUIRE ?call_ctors
   \   00000000   ........           DC32    ??__sti__routine

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "System page 4: Hardwa...">`:
   \   00000000   53797374656D       DC8 "System page 4: Hardware units"
   \              207061676520
   \              343A20486172
   \              647761726520
   \              756E69747300
   \   0000001E   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "Select:">`:
   \   00000000   53656C656374       DC8 "Select:"
   \              3A00        

   \                                 In segment DATA_C, align 1, align-sorted
   \   00000000   2000               DC8 " "

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant {{2192, 0, 41}, {352, 0, 40}}>`:
   \   00000000   900800000000       DC32 2192, 0, 41, 352, 0, 40
   \              000029000000
   \              600100000000
   \              000028000000
   \   00000018   2043682E00         DC8 " Ch."
   \   0000001D   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 1, align-sorted
   \   00000000   00                 DC8 ""

   \                                 In segment DATA_C, align 1, align-sorted
   \   00000000   252F00             DC8 "%/"

   \                                 In segment DATA_C, align 1, align-sorted
   \   00000000   2500               DC8 "%"

   \                                 In segment CODE, align 4, keep-with-next
   \   static __??Code32?? __intrinsic __code __interwork __atpcs void __sti__routine()
   \                     ??__sti__routine:
   \   00000000   1C109FE5           LDR      R1,??__sti__routine_1  ;; GUI_Font13_1
   \   00000004   ........           LDR      R0,??DataTable2  ;; TDU_FONT_ST
   \   00000008   30002DE9           PUSH     {R4,R5}
   \   0000000C   3C10B1E8           LDM      R1!,{R2-R5,R12}
   \   00000010   3C10A0E8           STM      R0!,{R2-R5,R12}
   \   00000014   1C1091E8           LDM      R1,{R2-R4,R12}
   \   00000018   1C1080E8           STM      R0,{R2-R4,R12}
   \   0000001C   3000BDE8           POP      {R4,R5}
   \   00000020   1EFF2FE1           BX       LR               ;; return
   \                     ??__sti__routine_1:
   \   00000024   ........           DC32     GUI_Font13_1

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs TDUSysWin4 &TDUSysWin4::new TDUSysWin4()
   \                     `??new TDUSysWin4`:
   \   00000000   00402DE9           PUSH     {LR}
   \   00000004   4C00A0E3           MOV      R0,#+76
   \   00000008   ........           _BLF     `??operator new`,`??operator new??rA`
   \   0000000C   000050E3           CMP      R0,#+0
   \   00000010   0000000A           BEQ      `??new TDUSysWin4_1`
   \   00000014   ........           BL       ??TDUSysWin4
   \                     `??new TDUSysWin4_1`:
   \   00000018   0040BDE8           POP      {LR}
   \   0000001C   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void TDUSysWin4::delete ~TDUSysWin4(TDUSysWin4 *)
   \                     `??delete ~TDUSysWin4`:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0040B0E1           MOVS     R4,R0
   \   00000008   0200000A           BEQ      `??delete ~TDUSysWin4_1`
   \   0000000C   ........           BL       `?~TDUSysWin4`
   \   00000010   0400A0E1           MOV      R0,R4
   \   00000014   ........           _BLF     `??operator delete`,`??operator delete??rA`
   \                     `??delete ~TDUSysWin4_1`:
   \   00000018   1040BDE8           POP      {R4,LR}
   \   0000001C   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable1:
   \   00000000   ........           DC32     SystemWindow

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable2:
   \   00000000   ........           DC32     TDU_FONT_ST

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable5:
   \   00000000   ........           DC32     ??npos

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable6:
   \   00000000   ........           DC32     ??AnsiString

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable9:
   \   00000000   ........           DC32     ??npos

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable10:
   \   00000000   ........           DC32     SystemWindow

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable11:
   \   00000000   ........           DC32     ??AnsiString

   Maximum stack usage in bytes:

     Function                       CSTACK
     --------                       ------
     AnsiString::~AnsiString()          4
     TDUSysWin4::ClearList()           16
     TDUSysWin4::ExecDialogBox(GUI_HWIN)
                                       24
     TDUSysWin4::GetDialogHandles()     8
     TDUSysWin4::InitSysWin()         844
     TDUSysWin4::TDUSysWin4()           8
     TDUSysWin4::UpdateSysWin()       676
     TDUSysWin4::cbSysWin(WM_MESSAGE *)
                                       16
     TDUSysWin4::delete ~TDUSysWin4(TDUSysWin4 *)
                                        8
     TDUSysWin4::new TDUSysWin4()       4
     TDUSysWin4::~TDUSysWin4()         12
     _Vector_impl<PRogramObjectBase *, allocator<PRogramObjectBase *>>::_Make_room(PRogramObjectBase **, unsigned int)
                                       32
     __sti__routine()                   8
     operator+(char const *, string const &)
                                       44
     operator+(string const &, char const *)
                                       48
     operator+(string const &, string const &)
                                       48
     vector<PRogramObjectBase *>::push_back(PRogramObjectBase *)
                                        8


   Segment part sizes:

     Function/Label                 Bytes
     --------------                 -----
     operator+(string const &, string const &)
                                     156
     operator+(char const *, string const &)
                                     160
     operator+(string const &, char const *)
                                     160
     _Vector_impl<PRogramObjectBase *, allocator<PRogramObjectBase *>>::_Make_room(PRogramObjectBase **, unsigned int)
                                     244
     vector<PRogramObjectBase *>::push_back(PRogramObjectBase *)
                                      84
     AnsiString::~AnsiString()        24
     TDU_FONT_ST                      36
     TDUSysWin4::TDUSysWin4()         52
     TDUSysWin4::~TDUSysWin4()        64
     TDUSysWin4::aDialogCreate        96
     TDUSysWin4::ExecDialogBox(GUI_HWIN)
                                     152
     TDUSysWin4::GetDialogHandles()   72
     TDUSysWin4::InitSysWin()       3636
     TDUSysWin4::ClearList()         168
     TDUSysWin4::UpdateSysWin()     3424
     TDUSysWin4::cbSysWin(WM_MESSAGE *)
                                     292
     ?<Constant "System page 4: Hardwa...">
                                      32
     ?<Constant "Select:">             8
     ?<Constant " ">                   2
     ?<Constant {{2192, 0, 41}, {352, 0, 40}}>
                                      32
     ?<Constant "">                    1
     ?<Constant "%/">                  3
     ?<Constant "%">                   2
     __sti__routine()                 40
     TDUSysWin4::new TDUSysWin4()     32
     TDUSysWin4::delete ~TDUSysWin4(TDUSysWin4 *)
                                      32
     ??DataTable1                      4
     ??DataTable2                      4
     ??DataTable5                      4
     ??DataTable6                      4
     ??DataTable9                      4
     ??DataTable10                     4
     ??DataTable11                     4
      Others                         656

 
 9 460 bytes in segment CODE
   176 bytes in segment DATA_C
    36 bytes in segment DATA_Z
     4 bytes in segment DIFUNCT
    12 bytes in segment INITTAB
 
 7 996 bytes of CODE  memory (+ 1 480 bytes shared)
   176 bytes of CONST memory
    36 bytes of DATA  memory

Errors: none
Warnings: none
