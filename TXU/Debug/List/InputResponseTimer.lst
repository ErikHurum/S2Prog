##############################################################################
#                                                                            #
# IAR ARM ANSI C/C++ Compiler V4.42A/W32               14/Sep/2022  15:13:55 #
# Copyright 1999-2005 IAR Systems. All rights reserved.                      #
#                                                                            #
#    Cpu mode        =  interwork                                            #
#    Endian          =  little                                               #
#    Stack alignment =  4                                                    #
#    Source file     =  D:\S2Prog\Shared\Src\InputResponseTimer.cpp          #
#    Command line    =  D:\S2Prog\Shared\Src\InputResponseTimer.cpp --fpu    #
#                       None -D OS_LIBMODE_SP -D CPU_S3C2410 -D              #
#                       OS_RAMVECT=0 -D OS_UART=-1 -D S2TXU -D USE_LZO=1 -D  #
#                       __ARM_LIBRARY__ -D WATCHDOG=1 -D NETWORK=1 -lCN      #
#                       D:\S2Prog\TXU\Debug\List\ -o                         #
#                       D:\S2Prog\TXU\Debug\Obj\ -z9 --debug --cpu_mode arm  #
#                       --endian little --cpu ARM920T --stack_align 4        #
#                       --interwork -e --enable_multibytes --eec++           #
#                       --dlib_config "C:\Program Files (x86)\IAR            #
#                       Systems\Embedded Workbench                           #
#                       4.0\arm\LIB\dl4tpainl8n.h" -I                        #
#                       D:\S2Prog\TXU\GUI\CORE\ -I D:\S2Prog\TXU\GUI\WM\ -I  #
#                       D:\S2Prog\TXU\GUI\WIDGET\ -I D:\S2Prog\TXU\CONFIG\   #
#                       -I D:\S2Prog\TXU\INC\ -I D:\S2Prog\TXU\..\SHARED\INC #
#                       \ -I D:\S2Prog\TXU\..\SHARED\SRC\ -I                 #
#                       D:\S2Prog\TXU\..\SHARED\LZO\minilzo.210\ -I          #
#                       D:\S2Prog\TXU\lwip-1.4.1\src\include\ -I             #
#                       D:\S2Prog\TXU\lwip-1.4.1\src\include\ipv4\ -I        #
#                       D:\S2Prog\TXU\lwip-1.4.1\src\ -I                     #
#                       D:\S2Prog\TXU\..\SHARED\Database\ -I                 #
#                       D:\S2Prog\TXU\src\ -I "C:\Program Files (x86)\IAR    #
#                       Systems\Embedded Workbench 4.0\arm\INC\"             #
#                       --inline_threshold=2                                 #
#    List file       =  D:\S2Prog\TXU\Debug\List\InputResponseTimer.lst      #
#    Object file     =  D:\S2Prog\TXU\Debug\Obj\InputResponseTimer.r79       #
#                                                                            #
#                                                                            #
##############################################################################

D:\S2Prog\Shared\Src\InputResponseTimer.cpp
      1          #include "TSNIncludes.h"
      2          #pragma hdrstop
      3          #ifdef BORLAND
      4          #pragma package(smart_init)
      5          #endif
      6          
      7          

   \                                 In segment CODE, align 4, keep-with-next
   \                     ?Subroutine9:
   \   00000000   1040BDE8           POP      {R4,LR}
   \   00000004   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
      8          InputResponseTimer::InputResponseTimer(void)
   \                     ??InputResponseTimer:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0040A0E1           MOV      R4,R0
      9          {
   \   00000008   ........           _BLF     ??TSNTimer,??TSNTimer??rA
   \   0000000C   ........           LDR      R0,??DataTable1  ;; ??__vtbl
   \   00000010   1C0084E5           STR      R0,[R4, #+28]
     10            m_pObject = 0;
   \   00000014   0000A0E3           MOV      R0,#+0
   \   00000018   200084E5           STR      R0,[R4, #+32]
     11          }
   \   0000001C   0400A0E1           MOV      R0,R4
   \   00000020   ........           B        ?Subroutine9

   \                                 In segment CODE, align 4, keep-with-next
     12          InputResponseTimer::InputResponseTimer(PRogramObjectBase *pobj)
   \                     ??InputResponseTimer_1:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
     13          {
   \   0000000C   ........           _BLF     ??TSNTimer,??TSNTimer??rA
   \   00000010   ........           LDR      R0,??DataTable1  ;; ??__vtbl
   \   00000014   1C0084E5           STR      R0,[R4, #+28]
     14            m_pObject = pobj;
   \   00000018   205084E5           STR      R5,[R4, #+32]
     15          }
   \   0000001C   0400A0E1           MOV      R0,R4
   \   00000020   3040BDE8           POP      {R4,R5,LR}
   \   00000024   1EFF2FE1           BX       LR               ;; return
     16          

   \                                 In segment CODE, align 4, keep-with-next
     17          InputResponseTimer::~InputResponseTimer(void)
     18          {
   \                     `?~InputResponseTimer`:
   \   00000000   00402DE9           PUSH     {LR}
     19          }
   \   00000004   ........           _BLF     `?~TSNTimer`,`?~TSNTimer??rA`
   \   00000008                      REQUIRE ?Subroutine8
   \   00000008                      ;; // Fall through to label ?Subroutine8

   \                                 In segment CODE, align 4, keep-with-next
   \                     ?Subroutine8:
   \   00000000   0040BDE8           POP      {LR}
   \   00000004   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
     20          void InputResponseTimer::TimerCallback()
     21          {
   \                     ??TimerCallback:
   \   00000000   00402DE9           PUSH     {LR}
     22            if(m_pObject)
   \   00000004   201090E5           LDR      R1,[R0, #+32]
   \   00000008   000051E3           CMP      R1,#+0
   \   0000000C   0400000A           BEQ      ??TimerCallback_1
     23            {
     24              m_pObject->InputTimeout();
   \   00000010   0100A0E1           MOV      R0,R1
   \   00000014   A41091E5           LDR      R1,[R1, #+164]
   \   00000018   481091E5           LDR      R1,[R1, #+72]
   \   0000001C   0FE0A0E1           MOV      LR,PC
   \   00000020   11FF2FE1           BX       R1
     25            }
     26          }
   \                     ??TimerCallback_1:
   \   00000024   ........           B        ?Subroutine8

   \                                 In segment DIFUNCT, align 4, keep-with-next, root
   \   00000000                      REQUIRE ?call_ctors
   \   00000000   ........           DC32    ??__sti__routine

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs InputResponseTimer &InputResponseTimer::new InputResponseTimer()
   \                     `??new InputResponseTimer`:
   \   00000000   00402DE9           PUSH     {LR}
   \   00000004   2400A0E3           MOV      R0,#+36
   \   00000008   ........           _BLF     `??operator new`,`??operator new??rA`
   \   0000000C   000050E3           CMP      R0,#+0
   \   00000010   0000000A           BEQ      `??new InputResponseTimer_2`
   \   00000014   ........           BL       ??InputResponseTimer
   \                     `??new InputResponseTimer_2`:
   \   00000018   ........           B        ?Subroutine8

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs InputResponseTimer &InputResponseTimer::new InputResponseTimer(PRogramObjectBase *)
   \                     `??new InputResponseTimer_1`:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   2400A0E3           MOV      R0,#+36
   \   0000000C   ........           _BLF     `??operator new`,`??operator new??rA`
   \   00000010   000050E3           CMP      R0,#+0
   \   00000014   0100000A           BEQ      `??new InputResponseTimer_3`
   \   00000018   0410A0E1           MOV      R1,R4
   \   0000001C   ........           BL       ??InputResponseTimer_1
   \                     `??new InputResponseTimer_3`:
   \   00000020   ........           B        ?Subroutine9

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void InputResponseTimer::delete ~InputResponseTimer(InputResponseTimer *)
   \                     `??delete ~InputResponseTimer`:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0040B0E1           MOVS     R4,R0
   \   00000008   0200000A           BEQ      `??delete ~InputResponseTimer_1`
   \   0000000C   ........           _BLF     `?~TSNTimer`,`?~TSNTimer??rA`
   \   00000010   0400A0E1           MOV      R0,R4
   \   00000014   ........           _BLF     `??operator delete`,`??operator delete??rA`
   \                     `??delete ~InputResponseTimer_1`:
   \   00000018                      REQUIRE ?Subroutine9
   \   00000018                      ;; // Fall through to label ?Subroutine9

   \                                 In segment CODE, align 4, keep-with-next
   \   static __??Code32?? __intrinsic __code __interwork __atpcs void __sti__routine()
   \                     ??__sti__routine:
   \   00000000   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable1:
   \   00000000   ........           DC32     ??__vtbl

   Maximum stack usage in bytes:

     Function                       CSTACK
     --------                       ------
     InputResponseTimer::InputResponseTimer()
                                        8
     InputResponseTimer::InputResponseTimer(PRogramObjectBase *)
                                       12
     InputResponseTimer::TimerCallback()
                                        4
     InputResponseTimer::delete ~InputResponseTimer(InputResponseTimer *)
                                        8
     InputResponseTimer::new InputResponseTimer()
                                        4
     InputResponseTimer::new InputResponseTimer(PRogramObjectBase *)
                                        8
     InputResponseTimer::~InputResponseTimer()
                                        4
     __sti__routine()                   0


   Segment part sizes:

     Function/Label                 Bytes
     --------------                 -----
     ?Subroutine9                      8
     InputResponseTimer::InputResponseTimer()
                                      36
     InputResponseTimer::InputResponseTimer(PRogramObjectBase *)
                                      40
     InputResponseTimer::~InputResponseTimer()
                                       8
     ?Subroutine8                      8
     InputResponseTimer::TimerCallback()
                                      40
     InputResponseTimer::new InputResponseTimer()
                                      28
     InputResponseTimer::new InputResponseTimer(PRogramObjectBase *)
                                      36
     InputResponseTimer::delete ~InputResponseTimer(InputResponseTimer *)
                                      24
     __sti__routine()                  4
     ??DataTable1                      4
      Others                          92

 
 316 bytes in segment CODE
   8 bytes in segment DATA_C
   4 bytes in segment DIFUNCT
 
 240 bytes of CODE  memory (+ 80 bytes shared)
   8 bytes of CONST memory

Errors: none
Warnings: none
