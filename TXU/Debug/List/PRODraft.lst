##############################################################################
#                                                                            #
# IAR ARM ANSI C/C++ Compiler V4.42A/W32               14/Sep/2022  15:14:47 #
# Copyright 1999-2005 IAR Systems. All rights reserved.                      #
#                                                                            #
#    Cpu mode        =  interwork                                            #
#    Endian          =  little                                               #
#    Stack alignment =  4                                                    #
#    Source file     =  D:\S2Prog\Shared\Src\PRODraft.cpp                    #
#    Command line    =  D:\S2Prog\Shared\Src\PRODraft.cpp --fpu None -D      #
#                       OS_LIBMODE_SP -D CPU_S3C2410 -D OS_RAMVECT=0 -D      #
#                       OS_UART=-1 -D S2TXU -D USE_LZO=1 -D __ARM_LIBRARY__  #
#                       -D WATCHDOG=1 -D NETWORK=1 -lCN                      #
#                       D:\S2Prog\TXU\Debug\List\ -o                         #
#                       D:\S2Prog\TXU\Debug\Obj\ -z9 --debug --cpu_mode arm  #
#                       --endian little --cpu ARM920T --stack_align 4        #
#                       --interwork -e --enable_multibytes --eec++           #
#                       --dlib_config "C:\Program Files (x86)\IAR            #
#                       Systems\Embedded Workbench                           #
#                       4.0\arm\LIB\dl4tpainl8n.h" -I                        #
#                       D:\S2Prog\TXU\GUI\CORE\ -I D:\S2Prog\TXU\GUI\WM\ -I  #
#                       D:\S2Prog\TXU\GUI\WIDGET\ -I D:\S2Prog\TXU\CONFIG\   #
#                       -I D:\S2Prog\TXU\INC\ -I D:\S2Prog\TXU\..\SHARED\INC #
#                       \ -I D:\S2Prog\TXU\..\SHARED\SRC\ -I                 #
#                       D:\S2Prog\TXU\..\SHARED\LZO\minilzo.210\ -I          #
#                       D:\S2Prog\TXU\lwip-1.4.1\src\include\ -I             #
#                       D:\S2Prog\TXU\lwip-1.4.1\src\include\ipv4\ -I        #
#                       D:\S2Prog\TXU\lwip-1.4.1\src\ -I                     #
#                       D:\S2Prog\TXU\..\SHARED\Database\ -I                 #
#                       D:\S2Prog\TXU\src\ -I "C:\Program Files (x86)\IAR    #
#                       Systems\Embedded Workbench 4.0\arm\INC\"             #
#                       --inline_threshold=2                                 #
#    List file       =  D:\S2Prog\TXU\Debug\List\PRODraft.lst                #
#    Object file     =  D:\S2Prog\TXU\Debug\Obj\PRODraft.r79                 #
#                                                                            #
#                                                                            #
##############################################################################

D:\S2Prog\Shared\Src\PRODraft.cpp
      1          #include "TSNIncludes.h"

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs string::string(string const &)
   \                     ??string:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
   \   0000000C   0020A0E3           MOV      R2,#+0
   \   00000010   0010A0E3           MOV      R1,#+0
   \   00000014   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000018   1C009FE5           LDR      R0,??string_1    ;; ??npos
   \   0000001C   0020A0E3           MOV      R2,#+0
   \   00000020   003090E5           LDR      R3,[R0, #+0]
   \   00000024   0510A0E1           MOV      R1,R5
   \   00000028   0400A0E1           MOV      R0,R4
   \   0000002C   ........           _BLF     ??assign,??assign??rA
   \   00000030   0400A0E1           MOV      R0,R4
   \   00000034   3040BDE8           POP      {R4,R5,LR}
   \   00000038   1EFF2FE1           BX       LR               ;; return
   \                     ??string_1:
   \   0000003C   ........           DC32     ??npos

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs _Tree_algobase<allocator<void>>::_Genptr _Tree_algobase<allocator<void>>::_DecP(_Tree_algobase<allocator<void>>::_Genptr)
   \                     ??_DecP:
   \   00000000   0D10D0E5           LDRB     R1,[R0, #+13]
   \   00000004   000051E3           CMP      R1,#+0
   \   00000008   08009015           LDRNE    R0,[R0, #+8]
   \   0000000C   1EFF2F11           BXNE     LR
   \   00000010   001090E5           LDR      R1,[R0, #+0]
   \   00000014   0D20D1E5           LDRB     R2,[R1, #+13]
   \   00000018   000052E3           CMP      R2,#+0
   \   0000001C   0700001A           BNE      ??_DecP_1
   \   00000020   000000EA           B        ??_DecP_2
   \                     ??_DecP_3:
   \   00000024   0010A0E1           MOV      R1,R0
   \                     ??_DecP_2:
   \   00000028   080091E5           LDR      R0,[R1, #+8]
   \   0000002C   0D20D0E5           LDRB     R2,[R0, #+13]
   \   00000030   000052E3           CMP      R2,#+0
   \   00000034   FAFFFF0A           BEQ      ??_DecP_3
   \   00000038   0100A0E1           MOV      R0,R1
   \   0000003C   1EFF2FE1           BX       LR
   \                     ??_DecP_1:
   \   00000040   041090E5           LDR      R1,[R0, #+4]
   \   00000044   0D20D1E5           LDRB     R2,[R1, #+13]
   \   00000048   000052E3           CMP      R2,#+0
   \   0000004C   1EFF2F11           BXNE     LR
   \   00000050   002091E5           LDR      R2,[R1, #+0]
   \   00000054   020050E1           CMP      R0,R2
   \   00000058   0100A0E1           MOV      R0,R1
   \   0000005C   F7FFFF0A           BEQ      ??_DecP_1
   \   00000060   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void _Tree_algobase<allocator<void>>::_Rrotate(_Tree_algobase<allocator<void>>::_Genptr)
   \                     ??_Rrotate:
   \   00000000   002091E5           LDR      R2,[R1, #+0]
   \   00000004   083092E5           LDR      R3,[R2, #+8]
   \   00000008   003081E5           STR      R3,[R1, #+0]
   \   0000000C   083092E5           LDR      R3,[R2, #+8]
   \   00000010   0DC0D3E5           LDRB     R12,[R3, #+13]
   \   00000014   00005CE3           CMP      R12,#+0
   \   00000018   04108305           STREQ    R1,[R3, #+4]
   \   0000001C   043091E5           LDR      R3,[R1, #+4]
   \   00000020   043082E5           STR      R3,[R2, #+4]
   \   00000024   043090E5           LDR      R3,[R0, #+4]
   \   00000028   030051E1           CMP      R1,R3
   \   0000002C   04208005           STREQ    R2,[R0, #+4]
   \   00000030   0400000A           BEQ      ??_Rrotate_1
   \   00000034   040091E5           LDR      R0,[R1, #+4]
   \   00000038   083090E5           LDR      R3,[R0, #+8]
   \   0000003C   030051E1           CMP      R1,R3
   \   00000040   08208005           STREQ    R2,[R0, #+8]
   \   00000044   00208015           STRNE    R2,[R0, #+0]
   \                     ??_Rrotate_1:
   \   00000048   081082E5           STR      R1,[R2, #+8]
   \   0000004C   042081E5           STR      R2,[R1, #+4]
   \   00000050   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void _Tree_algobase<allocator<void>>::_Lrotate(_Tree_algobase<allocator<void>>::_Genptr)
   \                     ??_Lrotate:
   \   00000000   082091E5           LDR      R2,[R1, #+8]
   \   00000004   003092E5           LDR      R3,[R2, #+0]
   \   00000008   083081E5           STR      R3,[R1, #+8]
   \   0000000C   003092E5           LDR      R3,[R2, #+0]
   \   00000010   0DC0D3E5           LDRB     R12,[R3, #+13]
   \   00000014   00005CE3           CMP      R12,#+0
   \   00000018   04108305           STREQ    R1,[R3, #+4]
   \   0000001C   043091E5           LDR      R3,[R1, #+4]
   \   00000020   043082E5           STR      R3,[R2, #+4]
   \   00000024   043090E5           LDR      R3,[R0, #+4]
   \   00000028   030051E1           CMP      R1,R3
   \   0000002C   04208005           STREQ    R2,[R0, #+4]
   \   00000030   0400000A           BEQ      ??_Lrotate_1
   \   00000034   040091E5           LDR      R0,[R1, #+4]
   \   00000038   003090E5           LDR      R3,[R0, #+0]
   \   0000003C   030051E1           CMP      R1,R3
   \   00000040   00208005           STREQ    R2,[R0, #+0]
   \   00000044   08208015           STRNE    R2,[R0, #+8]
   \                     ??_Lrotate_1:
   \   00000048   001082E5           STR      R1,[R2, #+0]
   \   0000004C   042081E5           STR      R2,[R1, #+4]
   \   00000050   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void _Tree_algobase<allocator<void>>::_Insert(bool, _Tree_algobase<allocator<void>>::_Genptr, _Tree_algobase<allocator<void>>::_Genptr)
   \                     ??_Insert:
   \   00000000   F0402DE9           PUSH     {R4-R7,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   100094E5           LDR      R0,[R4, #+16]
   \   0000000C   0350A0E1           MOV      R5,R3
   \   00000010   010080E2           ADD      R0,R0,#+1
   \   00000014   100084E5           STR      R0,[R4, #+16]
   \   00000018   040052E1           CMP      R2,R4
   \   0000001C   0300001A           BNE      ??_Insert_4
   \   00000020   045084E5           STR      R5,[R4, #+4]
   \   00000024   005084E5           STR      R5,[R4, #+0]
   \                     ??_Insert_5:
   \   00000028   085084E5           STR      R5,[R4, #+8]
   \   0000002C   130000EA           B        ??_Insert_6
   \                     ??_Insert_4:
   \   00000030   000051E3           CMP      R1,#+0
   \   00000034   0500000A           BEQ      ??_Insert_7
   \   00000038   005082E5           STR      R5,[R2, #+0]
   \   0000003C   000094E5           LDR      R0,[R4, #+0]
   \   00000040   000052E1           CMP      R2,R0
   \   00000044   0D00001A           BNE      ??_Insert_6
   \   00000048   005084E5           STR      R5,[R4, #+0]
   \   0000004C   0B0000EA           B        ??_Insert_6
   \                     ??_Insert_7:
   \   00000050   085082E5           STR      R5,[R2, #+8]
   \   00000054   080094E5           LDR      R0,[R4, #+8]
   \   00000058   000052E1           CMP      R2,R0
   \   0000005C   0700001A           BNE      ??_Insert_6
   \   00000060   F0FFFFEA           B        ??_Insert_5
   \                     ??_Insert_8:
   \   00000064   0C70C0E5           STRB     R7,[R0, #+12]
   \   00000068   0C70C2E5           STRB     R7,[R2, #+12]
   \   0000006C   040095E5           LDR      R0,[R5, #+4]
   \   00000070   040090E5           LDR      R0,[R0, #+4]
   \   00000074   0C60C0E5           STRB     R6,[R0, #+12]
   \   00000078   040095E5           LDR      R0,[R5, #+4]
   \   0000007C   045090E5           LDR      R5,[R0, #+4]
   \                     ??_Insert_6:
   \   00000080   0170A0E3           MOV      R7,#+1
   \   00000084   040095E5           LDR      R0,[R5, #+4]
   \   00000088   0C10D0E5           LDRB     R1,[R0, #+12]
   \   0000008C   000051E3           CMP      R1,#+0
   \   00000090   2F00001A           BNE      ??_Insert_9
   \   00000094   041090E5           LDR      R1,[R0, #+4]
   \   00000098   0060A0E3           MOV      R6,#+0
   \   0000009C   001091E5           LDR      R1,[R1, #+0]
   \   000000A0   010050E1           CMP      R0,R1
   \   000000A4   041090E5           LDR      R1,[R0, #+4]
   \   000000A8   1400001A           BNE      ??_Insert_10
   \   000000AC   082091E5           LDR      R2,[R1, #+8]
   \   000000B0   0C10D2E5           LDRB     R1,[R2, #+12]
   \   000000B4   000051E3           CMP      R1,#+0
   \   000000B8   E9FFFF0A           BEQ      ??_Insert_8
   \   000000BC   081090E5           LDR      R1,[R0, #+8]
   \   000000C0   010055E1           CMP      R5,R1
   \   000000C4   0300001A           BNE      ??_Insert_11
   \   000000C8   0050A0E1           MOV      R5,R0
   \   000000CC   0510A0E1           MOV      R1,R5
   \   000000D0   0400A0E1           MOV      R0,R4
   \   000000D4   ........           _BLF     ??_Lrotate,??_Lrotate??rA
   \                     ??_Insert_11:
   \   000000D8   040095E5           LDR      R0,[R5, #+4]
   \   000000DC   0C70C0E5           STRB     R7,[R0, #+12]
   \   000000E0   040095E5           LDR      R0,[R5, #+4]
   \   000000E4   040090E5           LDR      R0,[R0, #+4]
   \   000000E8   0C60C0E5           STRB     R6,[R0, #+12]
   \   000000EC   040095E5           LDR      R0,[R5, #+4]
   \   000000F0   041090E5           LDR      R1,[R0, #+4]
   \   000000F4   0400A0E1           MOV      R0,R4
   \   000000F8   ........           _BLF     ??_Rrotate,??_Rrotate??rA
   \   000000FC   DFFFFFEA           B        ??_Insert_6
   \                     ??_Insert_10:
   \   00000100   002091E5           LDR      R2,[R1, #+0]
   \   00000104   0C10D2E5           LDRB     R1,[R2, #+12]
   \   00000108   000051E3           CMP      R1,#+0
   \   0000010C   D4FFFF0A           BEQ      ??_Insert_8
   \   00000110   001090E5           LDR      R1,[R0, #+0]
   \   00000114   010055E1           CMP      R5,R1
   \   00000118   0300001A           BNE      ??_Insert_12
   \   0000011C   0050A0E1           MOV      R5,R0
   \   00000120   0510A0E1           MOV      R1,R5
   \   00000124   0400A0E1           MOV      R0,R4
   \   00000128   ........           _BLF     ??_Rrotate,??_Rrotate??rA
   \                     ??_Insert_12:
   \   0000012C   040095E5           LDR      R0,[R5, #+4]
   \   00000130   0C70C0E5           STRB     R7,[R0, #+12]
   \   00000134   040095E5           LDR      R0,[R5, #+4]
   \   00000138   040090E5           LDR      R0,[R0, #+4]
   \   0000013C   0C60C0E5           STRB     R6,[R0, #+12]
   \   00000140   040095E5           LDR      R0,[R5, #+4]
   \   00000144   041090E5           LDR      R1,[R0, #+4]
   \   00000148   0400A0E1           MOV      R0,R4
   \   0000014C   ........           _BLF     ??_Lrotate,??_Lrotate??rA
   \   00000150   CAFFFFEA           B        ??_Insert_6
   \                     ??_Insert_9:
   \   00000154   040094E5           LDR      R0,[R4, #+4]
   \   00000158   0C70C0E5           STRB     R7,[R0, #+12]
   \   0000015C   F040BDE8           POP      {R4-R7,LR}
   \   00000160   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs _Tree<_Tset_traits<AnalogInput *, less<AnalogInput *>, allocator<AnalogInput *>, false>>::_Pairib _Tree<_Tset_traits<AnalogInput *, less<AnalogInput *>, allocator<AnalogInput *>, false>>::insert(AnalogInput *)
   \                     ??insert:
   \   00000000   F34C2DE9           PUSH     {R0,R1,R4-R7,R10,R11,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
   \   0000000C   040095E5           LDR      R0,[R5, #+4]
   \   00000010   0260A0E1           MOV      R6,R2
   \   00000014   05B0A0E1           MOV      R11,R5
   \   00000018   0170A0E3           MOV      R7,#+1
   \                     ??insert_1:
   \   0000001C   0D10D0E5           LDRB     R1,[R0, #+13]
   \   00000020   000051E3           CMP      R1,#+0
   \   00000024   0700001A           BNE      ??insert_2
   \   00000028   101090E5           LDR      R1,[R0, #+16]
   \   0000002C   00B0A0E1           MOV      R11,R0
   \   00000030   010056E1           CMP      R6,R1
   \   00000034   00009035           LDRCC    R0,[R0, #+0]
   \   00000038   0170A033           MOVCC    R7,#+1
   \   0000003C   08009025           LDRCS    R0,[R0, #+8]
   \   00000040   0070A023           MOVCS    R7,#+0
   \   00000044   F4FFFFEA           B        ??insert_1
   \                     ??insert_2:
   \   00000048   0B00A0E1           MOV      R0,R11
   \   0000004C   01A0A0E3           MOV      R10,#+1
   \   00000050   000057E3           CMP      R7,#+0
   \   00000054   0B00000A           BEQ      ??insert_3
   \   00000058   001095E5           LDR      R1,[R5, #+0]
   \   0000005C   010050E1           CMP      R0,R1
   \   00000060   0700001A           BNE      ??insert_4
   \   00000064   0630A0E1           MOV      R3,R6
   \   00000068   0B20A0E1           MOV      R2,R11
   \   0000006C   0110A0E3           MOV      R1,#+1
   \                     ??insert_5:
   \   00000070   0500A0E1           MOV      R0,R5
   \   00000074   ........           _BLF     ??_Insert_1,??_Insert??rA
   \   00000078   00008DE5           STR      R0,[SP, #+0]
   \   0000007C   04A0CDE5           STRB     R10,[SP, #+4]
   \   00000080   0A0000EA           B        ??insert_6
   \                     ??insert_4:
   \   00000084   ........           _BLF     ??_DecP,??_DecP??rA
   \                     ??insert_3:
   \   00000088   101090E5           LDR      R1,[R0, #+16]
   \   0000008C   060051E1           CMP      R1,R6
   \   00000090   0300002A           BCS      ??insert_7
   \   00000094   0630A0E1           MOV      R3,R6
   \   00000098   0B20A0E1           MOV      R2,R11
   \   0000009C   0710A0E1           MOV      R1,R7
   \   000000A0   F2FFFFEA           B        ??insert_5
   \                     ??insert_7:
   \   000000A4   00008DE5           STR      R0,[SP, #+0]
   \   000000A8   0010A0E3           MOV      R1,#+0
   \   000000AC   0410CDE5           STRB     R1,[SP, #+4]
   \                     ??insert_6:
   \   000000B0   0D00A0E1           MOV      R0,SP
   \   000000B4   030090E8           LDM      R0,{R0,R1}
   \   000000B8   030084E8           STM      R4,{R0,R1}
   \   000000BC   0400A0E1           MOV      R0,R4
   \   000000C0   F64CBDE8           POP      {R1,R2,R4-R7,R10,R11,LR}
   \   000000C4   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs _Tree<_Tset_traits<AnalogInput *, less<AnalogInput *>, allocator<AnalogInput *>, false>>::iterator _Tree<_Tset_traits<AnalogInput *, less<AnalogInput *>, allocator<AnalogInput *>, false>>::_Insert(bool, _Tree<_Tset_traits<AnalogInput *, less<AnalogInput *>, allocator<AnalogInput *>, false>>::_Nodeptr, AnalogInput *)
   \                     ??_Insert_1:
   \   00000000   F0412DE9           PUSH     {R4-R8,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
   \   0000000C   0260A0E1           MOV      R6,R2
   \   00000010   0370A0E1           MOV      R7,R3
   \   00000014   1400A0E3           MOV      R0,#+20
   \   00000018   ........           _BLF     `??operator new`,`??operator new??rA`
   \   0000001C   0080B0E1           MOVS     R8,R0
   \   00000020   0600000A           BEQ      ??_Insert_13
   \   00000024   004088E5           STR      R4,[R8, #+0]
   \   00000028   046088E5           STR      R6,[R8, #+4]
   \   0000002C   084088E5           STR      R4,[R8, #+8]
   \   00000030   0000A0E3           MOV      R0,#+0
   \   00000034   0C00C8E5           STRB     R0,[R8, #+12]
   \   00000038   0D00C8E5           STRB     R0,[R8, #+13]
   \   0000003C   107088E5           STR      R7,[R8, #+16]
   \                     ??_Insert_13:
   \   00000040   0830A0E1           MOV      R3,R8
   \   00000044   0620A0E1           MOV      R2,R6
   \   00000048   0510A0E1           MOV      R1,R5
   \   0000004C   0400A0E1           MOV      R0,R4
   \   00000050   ........           _BLF     ??_Insert,??_Insert??rA_1
   \   00000054   0800A0E1           MOV      R0,R8
   \   00000058   F041BDE8           POP      {R4-R8,LR}
   \   0000005C   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void _Vector_impl<AIPressSensor *, allocator<AIPressSensor *>>::_Tidy0()
   \                     ??_Tidy0:
   \   00000000   00402DE9           PUSH     {LR}
   \   00000004   001090E5           LDR      R1,[R0, #+0]
   \   00000008   000051E3           CMP      R1,#+0
   \   0000000C   0200000A           BEQ      ??_Tidy0_1
   \   00000010   041080E5           STR      R1,[R0, #+4]
   \   00000014   0100A0E1           MOV      R0,R1
   \   00000018   ........           _BLF     `??operator delete`,`??operator delete??rA`
   \                     ??_Tidy0_1:
   \   0000001C   0040BDE8           POP      {LR}
   \   00000020   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs AnalogInput ** _Vector_impl<AnalogInput *, allocator<AnalogInput *>>::_Insert(AnalogInput **, AnalogInput * const &)
   \                     ??_Insert_2:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   005092E5           LDR      R5,[R2, #+0]
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   000094E5           LDR      R0,[R4, #+0]
   \   00000010   0120A0E3           MOV      R2,#+1
   \   00000014   000050E3           CMP      R0,#+0
   \   00000018   0060A003           MOVEQ    R6,#+0
   \   0000001C   00604110           SUBNE    R6,R1,R0
   \   00000020   0400A0E1           MOV      R0,R4
   \   00000024   ........           _BLF     ??_Make_room,??_Make_room??rA
   \   00000028   0110A0E3           MOV      R1,#+1
   \                     ??_Insert_14:
   \   0000002C   ........           STR      R5,[R0], #+4
   \   00000030   011051E2           SUBS     R1,R1,#+1
   \   00000034   FCFFFF1A           BNE      ??_Insert_14
   \   00000038   000094E5           LDR      R0,[R4, #+0]
   \   0000003C   000086E0           ADD      R0,R6,R0
   \   00000040   7040BDE8           POP      {R4-R6,LR}
   \   00000044   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs AIPressSensor ** _Vector_impl<AIPressSensor *, allocator<AIPressSensor *>>::_Insert(AIPressSensor **, AIPressSensor * const &)
   \                     ??_Insert_3:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   005092E5           LDR      R5,[R2, #+0]
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   000094E5           LDR      R0,[R4, #+0]
   \   00000010   0120A0E3           MOV      R2,#+1
   \   00000014   000050E3           CMP      R0,#+0
   \   00000018   0060A003           MOVEQ    R6,#+0
   \   0000001C   00604110           SUBNE    R6,R1,R0
   \   00000020   0400A0E1           MOV      R0,R4
   \   00000024   ........           _BLF     ??_Make_room_1,??_Make_room??rA_1
   \   00000028   0110A0E3           MOV      R1,#+1
   \                     ??_Insert_15:
   \   0000002C   ........           STR      R5,[R0], #+4
   \   00000030   011051E2           SUBS     R1,R1,#+1
   \   00000034   FCFFFF1A           BNE      ??_Insert_15
   \   00000038   000094E5           LDR      R0,[R4, #+0]
   \   0000003C   000086E0           ADD      R0,R6,R0
   \   00000040   7040BDE8           POP      {R4-R6,LR}
   \   00000044   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs AnalogInput ** _Vector_impl<AnalogInput *, allocator<AnalogInput *>>::_Make_room(AnalogInput **, unsigned int)
   \                     ??_Make_room:
   \   00000000   F0472DE9           PUSH     {R4-R10,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   000094E5           LDR      R0,[R4, #+0]
   \   0000000C   0150A0E1           MOV      R5,R1
   \   00000010   081094E5           LDR      R1,[R4, #+8]
   \   00000014   0260A0E1           MOV      R6,R2
   \   00000018   001041E0           SUB      R1,R1,R0
   \   0000001C   2171A0E1           LSR      R7,R1,#+2
   \   00000020   041094E5           LDR      R1,[R4, #+4]
   \   00000024   000056E3           CMP      R6,#+0
   \   00000028   000041E0           SUB      R0,R1,R0
   \   0000002C   2001A0E1           LSR      R0,R0,#+2
   \   00000030   2C00000A           BEQ      ??_Make_room_2
   \   00000034   C024E0E3           MVN      R2,#-1073741824
   \   00000038   002042E0           SUB      R2,R2,R0
   \   0000003C   060052E1           CMP      R2,R6
   \   00000040   2800003A           BCC      ??_Make_room_2
   \   00000044   008086E0           ADD      R8,R6,R0
   \   00000048   080057E1           CMP      R7,R8
   \   0000004C   1F00002A           BCS      ??_Make_room_3
   \   00000050   A700A0E1           LSR      R0,R7,#+1
   \   00000054   C014E0E3           MVN      R1,#-1073741824
   \   00000058   001041E0           SUB      R1,R1,R0
   \   0000005C   070051E1           CMP      R1,R7
   \   00000060   0070A033           MOVCC    R7,#+0
   \   00000064   07708020           ADDCS    R7,R0,R7
   \   00000068   080057E1           CMP      R7,R8
   \   0000006C   0870A031           MOVCC    R7,R8
   \   00000070   0701A0E1           LSL      R0,R7,#+2
   \   00000074   ........           _BLF     `??operator new`,`??operator new??rA`
   \   00000078   0090A0E1           MOV      R9,R0
   \   0000007C   000094E5           LDR      R0,[R4, #+0]
   \   00000080   0920A0E1           MOV      R2,R9
   \   00000084   0510A0E1           MOV      R1,R5
   \   00000088   ........           _BLF     _Copy_a4,??_Copy_a4??rA
   \   0000008C   041094E5           LDR      R1,[R4, #+4]
   \   00000090   00A0A0E1           MOV      R10,R0
   \   00000094   06218AE0           ADD      R2,R10,R6, LSL #+2
   \   00000098   0500A0E1           MOV      R0,R5
   \   0000009C   ........           _BLF     _Copy_a4,??_Copy_a4??rA
   \   000000A0   000094E5           LDR      R0,[R4, #+0]
   \   000000A4   000050E3           CMP      R0,#+0
   \   000000A8   0100000A           BEQ      ??_Make_room_4
   \   000000AC   040084E5           STR      R0,[R4, #+4]
   \   000000B0   ........           _BLF     `??operator delete`,`??operator delete??rA`
   \                     ??_Make_room_4:
   \   000000B4   070189E0           ADD      R0,R9,R7, LSL #+2
   \   000000B8   080084E5           STR      R0,[R4, #+8]
   \   000000BC   080189E0           ADD      R0,R9,R8, LSL #+2
   \   000000C0   040084E5           STR      R0,[R4, #+4]
   \   000000C4   009084E5           STR      R9,[R4, #+0]
   \   000000C8   0A50A0E1           MOV      R5,R10
   \   000000CC   050000EA           B        ??_Make_room_2
   \                     ??_Make_room_3:
   \   000000D0   062181E0           ADD      R2,R1,R6, LSL #+2
   \   000000D4   0500A0E1           MOV      R0,R5
   \   000000D8   ........           _BLF     _Copy_backward_a4,??_Copy_backward_a4??rA
   \   000000DC   040094E5           LDR      R0,[R4, #+4]
   \   000000E0   060180E0           ADD      R0,R0,R6, LSL #+2
   \   000000E4   040084E5           STR      R0,[R4, #+4]
   \                     ??_Make_room_2:
   \   000000E8   0500A0E1           MOV      R0,R5
   \   000000EC   F047BDE8           POP      {R4-R10,LR}
   \   000000F0   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs AIPressSensor ** _Vector_impl<AIPressSensor *, allocator<AIPressSensor *>>::_Make_room(AIPressSensor **, unsigned int)
   \                     ??_Make_room_1:
   \   00000000   F0472DE9           PUSH     {R4-R10,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   000094E5           LDR      R0,[R4, #+0]
   \   0000000C   0150A0E1           MOV      R5,R1
   \   00000010   081094E5           LDR      R1,[R4, #+8]
   \   00000014   0260A0E1           MOV      R6,R2
   \   00000018   001041E0           SUB      R1,R1,R0
   \   0000001C   2171A0E1           LSR      R7,R1,#+2
   \   00000020   041094E5           LDR      R1,[R4, #+4]
   \   00000024   000056E3           CMP      R6,#+0
   \   00000028   000041E0           SUB      R0,R1,R0
   \   0000002C   2001A0E1           LSR      R0,R0,#+2
   \   00000030   2900000A           BEQ      ??_Make_room_5
   \   00000034   C024E0E3           MVN      R2,#-1073741824
   \   00000038   002042E0           SUB      R2,R2,R0
   \   0000003C   060052E1           CMP      R2,R6
   \   00000040   2500003A           BCC      ??_Make_room_5
   \   00000044   008086E0           ADD      R8,R6,R0
   \   00000048   080057E1           CMP      R7,R8
   \   0000004C   1C00002A           BCS      ??_Make_room_6
   \   00000050   A700A0E1           LSR      R0,R7,#+1
   \   00000054   C014E0E3           MVN      R1,#-1073741824
   \   00000058   001041E0           SUB      R1,R1,R0
   \   0000005C   070051E1           CMP      R1,R7
   \   00000060   0070A033           MOVCC    R7,#+0
   \   00000064   07708020           ADDCS    R7,R0,R7
   \   00000068   080057E1           CMP      R7,R8
   \   0000006C   0870A031           MOVCC    R7,R8
   \   00000070   0701A0E1           LSL      R0,R7,#+2
   \   00000074   ........           _BLF     `??operator new`,`??operator new??rA`
   \   00000078   0090A0E1           MOV      R9,R0
   \   0000007C   000094E5           LDR      R0,[R4, #+0]
   \   00000080   0920A0E1           MOV      R2,R9
   \   00000084   0510A0E1           MOV      R1,R5
   \   00000088   ........           _BLF     _Copy_a4,??_Copy_a4??rA
   \   0000008C   041094E5           LDR      R1,[R4, #+4]
   \   00000090   00A0A0E1           MOV      R10,R0
   \   00000094   06218AE0           ADD      R2,R10,R6, LSL #+2
   \   00000098   0500A0E1           MOV      R0,R5
   \   0000009C   ........           _BLF     _Copy_a4,??_Copy_a4??rA
   \   000000A0   0400A0E1           MOV      R0,R4
   \   000000A4   ........           _BLF     ??_Tidy0,??_Tidy0??rA
   \   000000A8   070189E0           ADD      R0,R9,R7, LSL #+2
   \   000000AC   080084E5           STR      R0,[R4, #+8]
   \   000000B0   080189E0           ADD      R0,R9,R8, LSL #+2
   \   000000B4   040084E5           STR      R0,[R4, #+4]
   \   000000B8   009084E5           STR      R9,[R4, #+0]
   \   000000BC   0A50A0E1           MOV      R5,R10
   \   000000C0   050000EA           B        ??_Make_room_5
   \                     ??_Make_room_6:
   \   000000C4   062181E0           ADD      R2,R1,R6, LSL #+2
   \   000000C8   0500A0E1           MOV      R0,R5
   \   000000CC   ........           _BLF     _Copy_backward_a4,??_Copy_backward_a4??rA
   \   000000D0   040094E5           LDR      R0,[R4, #+4]
   \   000000D4   060180E0           ADD      R0,R0,R6, LSL #+2
   \   000000D8   040084E5           STR      R0,[R4, #+4]
   \                     ??_Make_room_5:
   \   000000DC   0500A0E1           MOV      R0,R5
   \   000000E0   F047BDE8           POP      {R4-R10,LR}
   \   000000E4   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void _Vector_impl<AIPressSensor *, allocator<AIPressSensor *>>::_Push_back0(AIPressSensor *)
   \                     ??_Push_back0:
   \   00000000   02402DE9           PUSH     {R1,LR}
   \   00000004   041090E5           LDR      R1,[R0, #+4]
   \   00000008   082090E5           LDR      R2,[R0, #+8]
   \   0000000C   020051E1           CMP      R1,R2
   \   00000010   0800002A           BCS      ??_Push_back0_2
   \   00000014   00209DE5           LDR      R2,[SP, #+0]
   \   00000018   0130A0E3           MOV      R3,#+1
   \   0000001C   01C0A0E1           MOV      R12,R1
   \                     ??_Push_back0_3:
   \   00000020   ........           STR      R2,[R12], #+4
   \   00000024   013053E2           SUBS     R3,R3,#+1
   \   00000028   FCFFFF1A           BNE      ??_Push_back0_3
   \   0000002C   041081E2           ADD      R1,R1,#+4
   \   00000030   041080E5           STR      R1,[R0, #+4]
   \   00000034   010000EA           B        ??_Push_back0_4
   \                     ??_Push_back0_2:
   \   00000038   0D20A0E1           MOV      R2,SP
   \   0000003C   ........           _BLF     ??_Insert_3,??_Insert??rA_2
   \                     ??_Push_back0_4:
   \   00000040   0140BDE8           POP      {R0,LR}
   \   00000044   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void _Vector_impl<AnalogInput *, allocator<AnalogInput *>>::_Push_back0(AnalogInput *)
   \                     ??_Push_back0_1:
   \   00000000   02402DE9           PUSH     {R1,LR}
   \   00000004   041090E5           LDR      R1,[R0, #+4]
   \   00000008   082090E5           LDR      R2,[R0, #+8]
   \   0000000C   020051E1           CMP      R1,R2
   \   00000010   0800002A           BCS      ??_Push_back0_5
   \   00000014   00209DE5           LDR      R2,[SP, #+0]
   \   00000018   0130A0E3           MOV      R3,#+1
   \   0000001C   01C0A0E1           MOV      R12,R1
   \                     ??_Push_back0_6:
   \   00000020   ........           STR      R2,[R12], #+4
   \   00000024   013053E2           SUBS     R3,R3,#+1
   \   00000028   FCFFFF1A           BNE      ??_Push_back0_6
   \   0000002C   041081E2           ADD      R1,R1,#+4
   \   00000030   041080E5           STR      R1,[R0, #+4]
   \   00000034   010000EA           B        ??_Push_back0_7
   \                     ??_Push_back0_5:
   \   00000038   0D20A0E1           MOV      R2,SP
   \   0000003C   ........           _BLF     ??_Insert_2,??_Insert??rA_3
   \                     ??_Push_back0_7:
   \   00000040   0140BDE8           POP      {R0,LR}
   \   00000044   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void operator+(string const &, string const &)
   \                     `??operator+`:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   1CD04DE2           SUB      SP,SP,#+28
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   0250A0E1           MOV      R5,R2
   \   00000010   0D00A0E1           MOV      R0,SP
   \   00000014   ........           _BLF     ??string,??string??rA
   \   00000018   34109FE5           LDR      R1,`??operator+_3`  ;; ??npos
   \   0000001C   0020A0E3           MOV      R2,#+0
   \   00000020   003091E5           LDR      R3,[R1, #+0]
   \   00000024   0510A0E1           MOV      R1,R5
   \   00000028   ........           _BLF     ??append,??append??rA
   \   0000002C   0010A0E1           MOV      R1,R0
   \   00000030   0400A0E1           MOV      R0,R4
   \   00000034   ........           _BLF     ??string,??string??rA
   \   00000038   0020A0E3           MOV      R2,#+0
   \   0000003C   0110A0E3           MOV      R1,#+1
   \   00000040   0D00A0E1           MOV      R0,SP
   \   00000044   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000048   1CD08DE2           ADD      SP,SP,#+28
   \   0000004C   3040BDE8           POP      {R4,R5,LR}
   \   00000050   1EFF2FE1           BX       LR               ;; return
   \                     `??operator+_3`:
   \   00000054   ........           DC32     ??npos

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void operator+(string const &, char const *)
   \                     `??operator+_1`:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   1CD04DE2           SUB      SP,SP,#+28
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   0250A0E1           MOV      R5,R2
   \   00000010   0D00A0E1           MOV      R0,SP
   \   00000014   ........           _BLF     ??string,??string??rA
   \   00000018   0060A0E1           MOV      R6,R0
   \   0000001C   0500A0E1           MOV      R0,R5
   \   00000020   ........           _BLF     strlen,??strlen??rA
   \   00000024   0020A0E1           MOV      R2,R0
   \   00000028   0510A0E1           MOV      R1,R5
   \   0000002C   0600A0E1           MOV      R0,R6
   \   00000030   ........           _BLF     ??append_1,??append??rA_1
   \   00000034   0010A0E1           MOV      R1,R0
   \   00000038   0400A0E1           MOV      R0,R4
   \   0000003C   ........           _BLF     ??string,??string??rA
   \   00000040   0020A0E3           MOV      R2,#+0
   \   00000044   0110A0E3           MOV      R1,#+1
   \   00000048   0D00A0E1           MOV      R0,SP
   \   0000004C   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000050   1CD08DE2           ADD      SP,SP,#+28
   \   00000054   7040BDE8           POP      {R4-R6,LR}
   \   00000058   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void operator+(string const &, char)
   \                     `??operator+_2`:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   1CD04DE2           SUB      SP,SP,#+28
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   0250A0E1           MOV      R5,R2
   \   00000010   0D00A0E1           MOV      R0,SP
   \   00000014   ........           _BLF     ??string,??string??rA
   \   00000018   0520A0E1           MOV      R2,R5
   \   0000001C   0110A0E3           MOV      R1,#+1
   \   00000020   ........           _BLF     ??append_2,??append??rA_2
   \   00000024   0010A0E1           MOV      R1,R0
   \   00000028   0400A0E1           MOV      R0,R4
   \   0000002C   ........           _BLF     ??string,??string??rA
   \   00000030   0020A0E3           MOV      R2,#+0
   \   00000034   0110A0E3           MOV      R1,#+1
   \   00000038   0D00A0E1           MOV      R0,SP
   \   0000003C   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000040   1CD08DE2           ADD      SP,SP,#+28
   \   00000044   3040BDE8           POP      {R4,R5,LR}
   \   00000048   1EFF2FE1           BX       LR               ;; return
      2          #pragma hdrstop
      3          #ifdef BORLAND
      4          #pragma package(smart_init)
      5          #endif
      6          
      7          //---------------------------------------------------------------------------
      8          

   \                                 In segment DATA_Z, align 4, align-sorted
      9          int PRODraft::NumberOfPRO       = 0;
   \                     ??NumberOfPRO:
   \   00000000                      DS8 4

   \                                 In segment DATA_Z, align 4, align-sorted
     10          int PRODraft::DraftFilterDegree = 0;
   \                     ??DraftFilterDegree:
   \   00000000                      DS8 4
     11          #ifdef S2TXU
     12          OS_TIMER PRODraft::FilterTimer;
   \                     ??FilterTimer:
   \   00000004                      DS8 20
     13          #endif

   \                                 In segment CODE, align 4, keep-with-next
     14          PRODraft::PRODraft(int DType) {
   \                     ??PRODraft:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
   \   0000000C   0110A0E3           MOV      R1,#+1
   \   00000010   ........           _BLF     ??PROXRefObject,??PROXRefObject??rA
   \   00000014   ........           LDR      R0,??DataTable10  ;; ??__vtbl
   \   00000018   0010A0E3           MOV      R1,#+0
   \   0000001C   A40084E5           STR      R0,[R4, #+164]
   \   00000020   5A0F84E2           ADD      R0,R4,#+360
   \   00000024   001080E5           STR      R1,[R0, #+0]
   \   00000028   041080E5           STR      R1,[R0, #+4]
   \   0000002C   081080E5           STR      R1,[R0, #+8]
     15              Type = DType;
     16              NumberOfPRO++;
   \   00000030   20009FE5           LDR      R0,??PRODraft_1  ;; ??NumberOfPRO
   \   00000034   A05084E5           STR      R5,[R4, #+160]
   \   00000038   001090E5           LDR      R1,[R0, #+0]
   \   0000003C   011081E2           ADD      R1,R1,#+1
   \   00000040   001080E5           STR      R1,[R0, #+0]
     17          
     18              Initiate();
   \   00000044   0400A0E1           MOV      R0,R4
   \   00000048   ........           BL       ??Initiate
     19          }
   \   0000004C   0400A0E1           MOV      R0,R4
   \   00000050   3040BDE8           POP      {R4,R5,LR}
   \   00000054   1EFF2FE1           BX       LR               ;; return
   \                     ??PRODraft_1:
   \   00000058   ........           DC32     ??NumberOfPRO
     20          //---------------------------------------------------------------------------
     21          

   \                                 In segment CODE, align 4, keep-with-next
     22          void PRODraft::Initiate(void) {
   \                     ??Initiate:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   E0D04DE2           SUB      SP,SP,#+224
   \   00000008   0040A0E1           MOV      R4,R0
     23              int DraftNum = 0;
     24              switch (Type) {
   \   0000000C   A00094E5           LDR      R0,[R4, #+160]
   \   00000010   0060A0E3           MOV      R6,#+0
   \   00000014   4B0040E2           SUB      R0,R0,#+75
   \   00000018   600E40E2           SUB      R0,R0,#+1536
   \   0000001C   070050E3           CMP      R0,#+7
   \   00000020   7B00008A           BHI      ??Initiate_2
   \   00000024   011F8FE2           ADR      R1,??Initiate_1
   \   00000028   0010D1E7           LDRB     R1,[R1, R0]
   \   0000002C   01F18FE0           ADD      PC,PC,R1, LSL #+2
   \                     ??Initiate_1:
   \   00000030   01101F2E           DC8      +1,+16,+31,+46
   \   00000034   3D4C5B6A           DC8      +61,+76,+91,+106
     25              case C_DRAFT_DF:
     26                  Name = "DF";
   \                     ??Initiate_3:
   \   00000038   B01F8FE2           ADR      R1,??Initiate_4  ;; "DF"
   \   0000003C   0D00A0E1           MOV      R0,SP
   \   00000040   ........           _BLF     ??AnsiString,??AnsiString??rA
   \   00000044   ........           LDR      R1,??DataTable14  ;; ??npos
   \   00000048   0020A0E3           MOV      R2,#+0
   \   0000004C   003091E5           LDR      R3,[R1, #+0]
   \   00000050   0010A0E1           MOV      R1,R0
   \   00000054   440084E2           ADD      R0,R4,#+68
   \   00000058   ........           _BLF     ??assign,??assign??rA
   \   0000005C   0620A0E1           MOV      R2,R6
   \   00000060   0110A0E3           MOV      R1,#+1
   \   00000064   0D00A0E1           MOV      R0,SP
   \   00000068   ........           _BLF     ??_Tidy,??_Tidy??rA
     27                  DraftNum = 1;
   \   0000006C   0160A0E3           MOV      R6,#+1
   \   00000070   670000EA           B        ??Initiate_2
     28                  break;
     29              case C_DRAFT_DP:
     30                  Name = "DP";
   \                     ??Initiate_5:
   \   00000074   A21F8FE2           ADR      R1,??Initiate_4+0x4  ;; "DP"
   \   00000078   1C008DE2           ADD      R0,SP,#+28
   \   0000007C   ........           _BLF     ??AnsiString,??AnsiString??rA
   \   00000080   0010A0E1           MOV      R1,R0
   \   00000084   ........           LDR      R0,??DataTable14  ;; ??npos
   \   00000088   0020A0E3           MOV      R2,#+0
   \   0000008C   003090E5           LDR      R3,[R0, #+0]
   \   00000090   440084E2           ADD      R0,R4,#+68
   \   00000094   ........           _BLF     ??assign,??assign??rA
   \   00000098   0620A0E1           MOV      R2,R6
   \   0000009C   0110A0E3           MOV      R1,#+1
   \   000000A0   1C008DE2           ADD      R0,SP,#+28
   \   000000A4   ........           _BLF     ??_Tidy,??_Tidy??rA
     31                  DraftNum = 2;
   \   000000A8   0260A0E3           MOV      R6,#+2
   \   000000AC   580000EA           B        ??Initiate_2
     32                  break;
     33              case C_DRAFT_DS:
     34                  Name = "DS";
   \                     ??Initiate_6:
   \   000000B0   941F8FE2           ADR      R1,??Initiate_4+0x8  ;; "DS"
   \   000000B4   38008DE2           ADD      R0,SP,#+56
   \   000000B8   ........           _BLF     ??AnsiString,??AnsiString??rA
   \   000000BC   ........           LDR      R1,??DataTable14  ;; ??npos
   \   000000C0   0020A0E3           MOV      R2,#+0
   \   000000C4   003091E5           LDR      R3,[R1, #+0]
   \   000000C8   0010A0E1           MOV      R1,R0
   \   000000CC   440084E2           ADD      R0,R4,#+68
   \   000000D0   ........           _BLF     ??assign,??assign??rA
   \   000000D4   0620A0E1           MOV      R2,R6
   \   000000D8   0110A0E3           MOV      R1,#+1
   \   000000DC   38008DE2           ADD      R0,SP,#+56
   \   000000E0   ........           _BLF     ??_Tidy,??_Tidy??rA
     35                  DraftNum = 3;
   \   000000E4   0360A0E3           MOV      R6,#+3
   \   000000E8   490000EA           B        ??Initiate_2
     36                  break;
     37              case C_DRAFT_DA:
     38                  Name = "DA";
   \                     ??Initiate_7:
   \   000000EC   861F8FE2           ADR      R1,??Initiate_4+0xC  ;; "DA"
   \   000000F0   54008DE2           ADD      R0,SP,#+84
   \   000000F4   ........           _BLF     ??AnsiString,??AnsiString??rA
   \   000000F8   ........           LDR      R1,??DataTable14  ;; ??npos
   \   000000FC   0020A0E3           MOV      R2,#+0
   \   00000100   003091E5           LDR      R3,[R1, #+0]
   \   00000104   0010A0E1           MOV      R1,R0
   \   00000108   440084E2           ADD      R0,R4,#+68
   \   0000010C   ........           _BLF     ??assign,??assign??rA
   \   00000110   0620A0E1           MOV      R2,R6
   \   00000114   0110A0E3           MOV      R1,#+1
   \   00000118   54008DE2           ADD      R0,SP,#+84
   \   0000011C   ........           _BLF     ??_Tidy,??_Tidy??rA
     39                  DraftNum = 4;
   \   00000120   0460A0E3           MOV      R6,#+4
   \   00000124   3A0000EA           B        ??Initiate_2
     40                  break;
     41              case C_DRAFT_DAP:
     42                  Name = "DAP";
   \                     ??Initiate_8:
   \   00000128   781F8FE2           ADR      R1,??Initiate_4+0x10  ;; "DAP"
   \   0000012C   70008DE2           ADD      R0,SP,#+112
   \   00000130   ........           _BLF     ??AnsiString,??AnsiString??rA
   \   00000134   ........           LDR      R1,??DataTable14  ;; ??npos
   \   00000138   0020A0E3           MOV      R2,#+0
   \   0000013C   003091E5           LDR      R3,[R1, #+0]
   \   00000140   0010A0E1           MOV      R1,R0
   \   00000144   440084E2           ADD      R0,R4,#+68
   \   00000148   ........           _BLF     ??assign,??assign??rA
   \   0000014C   0620A0E1           MOV      R2,R6
   \   00000150   0110A0E3           MOV      R1,#+1
   \   00000154   70008DE2           ADD      R0,SP,#+112
   \   00000158   ........           _BLF     ??_Tidy,??_Tidy??rA
     43                  DraftNum = 5;
   \   0000015C   0560A0E3           MOV      R6,#+5
   \   00000160   2B0000EA           B        ??Initiate_2
     44                  break;
     45              case C_DRAFT_DAS:
     46                  Name = "DAS";
   \                     ??Initiate_9:
   \   00000164   6A1F8FE2           ADR      R1,??Initiate_4+0x14  ;; "DAS"
   \   00000168   8C008DE2           ADD      R0,SP,#+140
   \   0000016C   ........           _BLF     ??AnsiString,??AnsiString??rA
   \   00000170   ........           LDR      R1,??DataTable14  ;; ??npos
   \   00000174   0020A0E3           MOV      R2,#+0
   \   00000178   003091E5           LDR      R3,[R1, #+0]
   \   0000017C   0010A0E1           MOV      R1,R0
   \   00000180   440084E2           ADD      R0,R4,#+68
   \   00000184   ........           _BLF     ??assign,??assign??rA
   \   00000188   0620A0E1           MOV      R2,R6
   \   0000018C   0110A0E3           MOV      R1,#+1
   \   00000190   8C008DE2           ADD      R0,SP,#+140
   \   00000194   ........           _BLF     ??_Tidy,??_Tidy??rA
     47                  DraftNum = 6;
   \   00000198   0660A0E3           MOV      R6,#+6
   \   0000019C   1C0000EA           B        ??Initiate_2
     48                  break;
     49              case C_DRAFT_DFP:
     50                  Name = "DFP";
   \                     ??Initiate_10:
   \   000001A0   5C1F8FE2           ADR      R1,??Initiate_4+0x18  ;; "DFP"
   \   000001A4   A8008DE2           ADD      R0,SP,#+168
   \   000001A8   ........           _BLF     ??AnsiString,??AnsiString??rA
   \   000001AC   ........           LDR      R1,??DataTable14  ;; ??npos
   \   000001B0   0020A0E3           MOV      R2,#+0
   \   000001B4   003091E5           LDR      R3,[R1, #+0]
   \   000001B8   0010A0E1           MOV      R1,R0
   \   000001BC   440084E2           ADD      R0,R4,#+68
   \   000001C0   ........           _BLF     ??assign,??assign??rA
   \   000001C4   0620A0E1           MOV      R2,R6
   \   000001C8   0110A0E3           MOV      R1,#+1
   \   000001CC   A8008DE2           ADD      R0,SP,#+168
   \   000001D0   ........           _BLF     ??_Tidy,??_Tidy??rA
     51                  DraftNum = 7;
   \   000001D4   0760A0E3           MOV      R6,#+7
   \   000001D8   0D0000EA           B        ??Initiate_2
     52                  break;
     53              case C_DRAFT_DFS:
     54                  Name = "DFS";
   \                     ??Initiate_11:
   \   000001DC   4E1F8FE2           ADR      R1,??Initiate_4+0x1C  ;; "DFS"
   \   000001E0   C4008DE2           ADD      R0,SP,#+196
   \   000001E4   ........           _BLF     ??AnsiString,??AnsiString??rA
   \   000001E8   ........           LDR      R1,??DataTable14  ;; ??npos
   \   000001EC   0020A0E3           MOV      R2,#+0
   \   000001F0   003091E5           LDR      R3,[R1, #+0]
   \   000001F4   0010A0E1           MOV      R1,R0
   \   000001F8   440084E2           ADD      R0,R4,#+68
   \   000001FC   ........           _BLF     ??assign,??assign??rA
   \   00000200   0620A0E1           MOV      R2,R6
   \   00000204   0110A0E3           MOV      R1,#+1
   \   00000208   C4008DE2           ADD      R0,SP,#+196
   \   0000020C   ........           _BLF     ??_Tidy,??_Tidy??rA
     55                  DraftNum = 8;
   \   00000210   0860A0E3           MOV      R6,#+8
     56                  break;
     57              }
     58              switch (Type) {
   \                     ??Initiate_2:
   \   00000214   A00094E5           LDR      R0,[R4, #+160]
   \   00000218   ........           LDR      R5,??DataTable9  ;; ??DraftFilterDegree
   \   0000021C   4B10A0E3           MOV      R1,#+75
   \   00000220   601E81E3           ORR      R1,R1,#0x600
   \   00000224   010050E1           CMP      R0,R1
   \   00000228   06108112           ADDNE    R1,R1,#+6
   \   0000022C   01005011           CMPNE    R0,R1
   \   00000230   0600001A           BNE      ??Initiate_12
     59              case C_DRAFT_DF :
     60              case C_DRAFT_DFP:
     61          #ifdef S2TXU
     62                  OS_CREATETIMER(&FilterTimer, SetDraftFilter, 60000);
   \   00000234   E4109FE5           LDR      R1,??Initiate_4+0x20  ;; ??SetDraftFilter
   \   00000238   6020A0E3           MOV      R2,#+96
   \   0000023C   EA2C82E3           ORR      R2,R2,#0xEA00
   \   00000240   040085E2           ADD      R0,R5,#+4
   \   00000244   ........           _BLF     OS_CreateTimer,??OS_CreateTimer??rA
   \   00000248   040085E2           ADD      R0,R5,#+4
   \   0000024C   ........           _BLF     OS_StartTimer,??OS_StartTimer??rA
     63          #endif
     64                  break;
     65              case C_DRAFT_DP :
     66              case C_DRAFT_DS :
     67              case C_DRAFT_DA :
     68              case C_DRAFT_DAP:
     69              case C_DRAFT_DAS:
     70              case C_DRAFT_DFS:
     71              default         :
     72                  break;
     73              }
     74          
     75              IDNumber = (C_PRO_DRAFT << 16) + DraftNum;
   \                     ??Initiate_12:
   \   00000250   4006A0E3           MOV      R0,#+67108864
   \   00000254   440980E3           ORR      R0,R0,#0x110000
   \   00000258   060080E0           ADD      R0,R0,R6
   \   0000025C   9C0084E5           STR      R0,[R4, #+156]
     76              HasMetriTapeSns       = false;
   \   00000260   0000A0E3           MOV      R0,#+0
   \   00000264   0010A0E3           MOV      R1,#+0
   \   00000268   5811C4E5           STRB     R1,[R4, #+344]
     77              DraftSensor           = NULL;
   \   0000026C   640184E5           STR      R0,[R4, #+356]
     78              DraftAtMark           = 0.0;
   \   00000270   741184E5           STR      R1,[R4, #+372]
     79              DraftAtPP             = 0.0;
   \   00000274   781184E5           STR      R1,[R4, #+376]
     80              DLMark1               = 0.0;
   \   00000278   801184E5           STR      R1,[R4, #+384]
     81              DTMark1               = 0.0;
   \   0000027C   841184E5           STR      R1,[R4, #+388]
     82              DLMark2               = 0.0;
   \   00000280   881184E5           STR      R1,[R4, #+392]
     83              DTMark2               = 0.0;
   \   00000284   8C1184E5           STR      R1,[R4, #+396]
     84              DLPerp                = 0.0;
   \   00000288   901184E5           STR      R1,[R4, #+400]
     85              DTPerp                = 0.0;
   \   0000028C   941184E5           STR      R1,[R4, #+404]
     86          
     87              DSnsToMid             = 0.0;
   \   00000290   981184E5           STR      R1,[R4, #+408]
     88              DSnsToCL              = 0.0;
   \   00000294   9C1184E5           STR      R1,[R4, #+412]
     89              DMarkToMid1           = 0.0;
   \   00000298   A01184E5           STR      R1,[R4, #+416]
     90              DMarkToCL1            = 0.0;
   \   0000029C   A41184E5           STR      R1,[R4, #+420]
     91              DMarkToMid2           = 0.0;
   \   000002A0   A81184E5           STR      R1,[R4, #+424]
     92              DMarkToCL2            = 0.0;
   \   000002A4   AC1184E5           STR      R1,[R4, #+428]
     93          
     94              DPerpToMid            = 0.0;
   \   000002A8   C81184E5           STR      R1,[R4, #+456]
     95              DPerpToCL             = 0.0;
   \   000002AC   CC1184E5           STR      R1,[R4, #+460]
     96          
     97              DLRef1                = 0.0;
   \   000002B0   B01184E5           STR      R1,[R4, #+432]
     98              DTRef1                = 0.0;
   \   000002B4   B41184E5           STR      R1,[R4, #+436]
     99              DLRef2                = 0.0;
   \   000002B8   B81184E5           STR      R1,[R4, #+440]
    100              DTRef2                = 0.0;
   \   000002BC   BC1184E5           STR      R1,[R4, #+444]
    101              DLFCenter             = 0.0;
   \   000002C0   C01184E5           STR      R1,[R4, #+448]
    102              DTFCenter             = 0.0;
   \   000002C4   C41184E5           STR      R1,[R4, #+452]
    103              DraftOffset           = 0.0;
   \   000002C8   5C1184E5           STR      R1,[R4, #+348]
    104              Draft                 = 0.0;
   \   000002CC   601184E5           STR      R1,[R4, #+352]
    105              MarkTable             = NULL;
   \   000002D0   D00184E5           STR      R0,[R4, #+464]
    106              DraftStatus           = GETVAL_NOT_AVAILABLE; // Start with this status
   \   000002D4   0110A0E3           MOV      R1,#+1
   \   000002D8   7C1184E5           STR      R1,[R4, #+380]
    107              if (DataFromOther) {
   \   000002DC   4411D4E5           LDRB     R1,[R4, #+324]
   \   000002E0   000051E3           CMP      R1,#+0
    108                  DraftFilterDegree = 0;
   \   000002E4   00008515           STRNE    R0,[R5, #+0]
    109              }
    110              AddToIOObjectList();
   \   000002E8   0400A0E1           MOV      R0,R4
   \   000002EC   ........           _BLF     ??AddToIOObjectList,??AddToIOObjectList??rA
    111              AddToScratchPageVector();
   \   000002F0   0400A0E1           MOV      R0,R4
   \   000002F4   ........           _BLF     ??AddToScratchPageVector,??AddToScratchPageVector??rA
    112          
    113          }
   \   000002F8   E0D08DE2           ADD      SP,SP,#+224
   \   000002FC   ........           B        ?Subroutine26
   \                     ??Initiate_4:
   \   00000300   44460000           DC8      "DF",+0
   \   00000304   44500000           DC8      "DP",+0
   \   00000308   44530000           DC8      "DS",+0
   \   0000030C   44410000           DC8      "DA",+0
   \   00000310   44415000           DC8      "DAP"
   \   00000314   44415300           DC8      "DAS"
   \   00000318   44465000           DC8      "DFP"
   \   0000031C   44465300           DC8      "DFS"
   \   00000320   ........           DC32     ??SetDraftFilter

   \                                 In segment CODE, align 4, keep-with-next
   \                     ?Subroutine26:
   \   00000000   7040BDE8           POP      {R4-R6,LR}
   \   00000004   1EFF2FE1           BX       LR               ;; return
    114          //---------------------------------------------------------------------------
    115          

   \                                 In segment CODE, align 4, keep-with-next
    116          PRODraft::~PRODraft(void) {
   \                     `?~PRODraft`:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
   \   0000000C   000054E3           CMP      R4,#+0
   \   00000010   0F00000A           BEQ      `?~PRODraft_1`
   \   00000014   ........           LDR      R0,??DataTable10  ;; ??__vtbl
    117              // Draftsensor assumed to be deleted via AnalogList[];
    118              //Only increase: NumberOfPRO--;
    119          }
   \   00000018   5A6F84E2           ADD      R6,R4,#+360
   \   0000001C   A40084E5           STR      R0,[R4, #+164]
   \   00000020   0600A0E1           MOV      R0,R6
   \   00000024   ........           _BLF     ??_Tidy0,??_Tidy0??rA
   \   00000028   0000A0E3           MOV      R0,#+0
   \   0000002C   000086E5           STR      R0,[R6, #+0]
   \   00000030   040086E5           STR      R0,[R6, #+4]
   \   00000034   080086E5           STR      R0,[R6, #+8]
   \   00000038   0010A0E3           MOV      R1,#+0
   \   0000003C   0400A0E1           MOV      R0,R4
   \   00000040   ........           _BLF     `?~PROXRefObject`,`?~PROXRefObject??rA`
   \   00000044   010015E3           TST      R5,#0x1
   \   00000048   0100000A           BEQ      `?~PRODraft_1`
   \   0000004C   0400A0E1           MOV      R0,R4
   \   00000050   ........           _BLF     `??operator delete`,`??operator delete??rA`
   \                     `?~PRODraft_1`:
   \   00000054                      REQUIRE ?Subroutine26
   \   00000054                      ;; // Fall through to label ?Subroutine26
    120          //---------------------------------------------------------------------------
    121          
    122          ///////////////////////////////////////////////////////////////
    123          //
    124          // Routines for the Configuration
    125          //
    126          ///////////////////////////////////////////////////////////////
    127          

   \                                 In segment CODE, align 4, keep-with-next
    128          AnsiString PRODraft::MakeConfigString(int ExtraTabs) {
   \                     ??MakeConfigString:
   \   00000000   F04F2DE9           PUSH     {R4-R11,LR}
    129              AnsiString LocalString;
    130              LocalString += TabStr1 + KeyWord(Type) + CrLfStr;
   \   00000004   ........           LDR      R6,??DataTable11  ;; TabStr1
   \   00000008   ........           LDR      R7,??DataTable12  ;; CrLfStr
   \   0000000C   FCDF4DE2           SUB      SP,SP,#+1008
   \   00000010   0040A0E1           MOV      R4,R0
    131              if (TagName != "0" && !TagName.IsEmpty() ) {
   \   00000014   ........           LDR      R9,??DataTable13  ;; TabStr2
   \   00000018   0150A0E1           MOV      R5,R1
   \   0000001C   0500A0E1           MOV      R0,R5
   \   00000020   ........           _BLF     ??AnsiString_1,??AnsiString??rA_1
   \   00000024   A01094E5           LDR      R1,[R4, #+160]
   \   00000028   E00F8DE2           ADD      R0,SP,#+896
   \   0000002C   ........           _BLF     ??KeyWord,??KeyWord??rA
   \   00000030   E02F8DE2           ADD      R2,SP,#+896
   \   00000034   0610A0E1           MOV      R1,R6
   \   00000038   D90F8DE2           ADD      R0,SP,#+868
   \   0000003C   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000040   0720A0E1           MOV      R2,R7
   \   00000044   D91F8DE2           ADD      R1,SP,#+868
   \   00000048   D20F8DE2           ADD      R0,SP,#+840
   \   0000004C   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000050   ........           LDR      R0,??DataTable14  ;; ??npos
   \   00000054   0020A0E3           MOV      R2,#+0
   \   00000058   008090E5           LDR      R8,[R0, #+0]
   \   0000005C   D21F8DE2           ADD      R1,SP,#+840
   \   00000060   0830A0E1           MOV      R3,R8
   \   00000064   0500A0E1           MOV      R0,R5
   \   00000068   ........           _BLF     ??append,??append??rA
   \   0000006C   0020A0E3           MOV      R2,#+0
   \   00000070   0110A0E3           MOV      R1,#+1
   \   00000074   D20F8DE2           ADD      R0,SP,#+840
   \   00000078   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   0000007C   0020A0E3           MOV      R2,#+0
   \   00000080   0110A0E3           MOV      R1,#+1
   \   00000084   D90F8DE2           ADD      R0,SP,#+868
   \   00000088   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   0000008C   0020A0E3           MOV      R2,#+0
   \   00000090   0110A0E3           MOV      R1,#+1
   \   00000094   E00F8DE2           ADD      R0,SP,#+896
   \   00000098   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   0000009C   47AF8FE2           ADR      R10,??MakeConfigString_2  ;; "0"
   \   000000A0   60B084E2           ADD      R11,R4,#+96
   \   000000A4   0A00A0E1           MOV      R0,R10
   \   000000A8   ........           _BLF     strlen,??strlen??rA
   \   000000AC   01002DE9           PUSH     {R0}
   \   000000B0   14209BE5           LDR      R2,[R11, #+20]
   \   000000B4   0A30A0E1           MOV      R3,R10
   \   000000B8   0010A0E3           MOV      R1,#+0
   \   000000BC   0B00A0E1           MOV      R0,R11
   \   000000C0   ........           _BLF     ??compare,??compare??rA
   \   000000C4   000050E3           CMP      R0,#+0
   \   000000C8   04D08DE2           ADD      SP,SP,#+4
   \   000000CC   2800000A           BEQ      ??MakeConfigString_3
   \   000000D0   600084E2           ADD      R0,R4,#+96
   \   000000D4   ........           _BLF     ??IsEmpty,??IsEmpty??rA
   \   000000D8   000050E3           CMP      R0,#+0
   \   000000DC   2400001A           BNE      ??MakeConfigString_3
    132                  LocalString += TabStr2 + KeyWord(C_PRO_TAGNAME) + TagName + CrLfStr;
   \   000000E0   1710A0E3           MOV      R1,#+23
   \   000000E4   501E81E3           ORR      R1,R1,#0x500
   \   000000E8   0D00A0E1           MOV      R0,SP
   \   000000EC   ........           _BLF     ??KeyWord,??KeyWord??rA
   \   000000F0   0D20A0E1           MOV      R2,SP
   \   000000F4   0910A0E1           MOV      R1,R9
   \   000000F8   54008DE2           ADD      R0,SP,#+84
   \   000000FC   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000100   602084E2           ADD      R2,R4,#+96
   \   00000104   54108DE2           ADD      R1,SP,#+84
   \   00000108   38008DE2           ADD      R0,SP,#+56
   \   0000010C   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000110   0720A0E1           MOV      R2,R7
   \   00000114   38108DE2           ADD      R1,SP,#+56
   \   00000118   1C008DE2           ADD      R0,SP,#+28
   \   0000011C   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000120   0830A0E1           MOV      R3,R8
   \   00000124   0020A0E3           MOV      R2,#+0
   \   00000128   1C108DE2           ADD      R1,SP,#+28
   \   0000012C   0500A0E1           MOV      R0,R5
   \   00000130   ........           _BLF     ??append,??append??rA
   \   00000134   0020A0E3           MOV      R2,#+0
   \   00000138   0110A0E3           MOV      R1,#+1
   \   0000013C   1C008DE2           ADD      R0,SP,#+28
   \   00000140   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000144   0020A0E3           MOV      R2,#+0
   \   00000148   0110A0E3           MOV      R1,#+1
   \   0000014C   38008DE2           ADD      R0,SP,#+56
   \   00000150   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000154   0020A0E3           MOV      R2,#+0
   \   00000158   0110A0E3           MOV      R1,#+1
   \   0000015C   54008DE2           ADD      R0,SP,#+84
   \   00000160   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000164   0020A0E3           MOV      R2,#+0
   \   00000168   0110A0E3           MOV      R1,#+1
   \   0000016C   0D00A0E1           MOV      R0,SP
   \   00000170   ........           _BLF     ??_Tidy,??_Tidy??rA
    133              }
    134              if (PRODraftSystem::PRODraftSysPtr->GlobalRefSystem) {
   \                     ??MakeConfigString_3:
   \   00000174   ........           LDR      R0,??DataTable15  ;; ??PRODraftSysPtr
   \   00000178   ........           LDR      R10,??DataTable16  ;; ??Has2ndMark
   \   0000017C   000090E5           LDR      R0,[R0, #+0]
   \   00000180   A801D0E5           LDRB     R0,[R0, #+424]
   \   00000184   000050E3           CMP      R0,#+0
   \   00000188   C800000A           BEQ      ??MakeConfigString_4
    135                  switch (Type) {
   \   0000018C   A00094E5           LDR      R0,[R4, #+160]
   \   00000190   4B0040E2           SUB      R0,R0,#+75
   \   00000194   600E40E2           SUB      R0,R0,#+1536
   \   00000198   070050E3           CMP      R0,#+7
   \   0000019C   DA01008A           BHI      ??MakeConfigString_5
   \   000001A0   021F8FE2           ADR      R1,??MakeConfigString_1
   \   000001A4   8000A0E1           MOV      R0,R0, LSL #+1
   \   000001A8   B01091E1           LDRH     R1,[R1, R0]
   \   000001AC   01F18FE0           ADD      PC,PC,R1, LSL #+2
   \                     ??MakeConfigString_1:
   \   000001B0   040063006300       DC16     +4,+99,+99,+4
   \              0400        
   \   000001B8   630063006300       DC16     +99,+99,+99,+99
   \              6300        
   \                     ??MakeConfigString_2:
   \   000001C0   30000000           DC8      "0",+0,+0
    136                  case C_DRAFT_DF:
    137                  case C_DRAFT_DA:
    138                      LocalString += TabStr2 + KeyWord(C_D_MARK_MID) + FloatToAnsiString(DMarkToMid1) + CrLfStr;
   \                     ??MakeConfigString_6:
   \   000001C4   A01194E5           LDR      R1,[R4, #+416]
   \   000001C8   0330A0E3           MOV      R3,#+3
   \   000001CC   0720A0E3           MOV      R2,#+7
   \   000001D0   690F8DE2           ADD      R0,SP,#+420
   \   000001D4   ........           _BLF     ??FloatToAnsiString,??FloatToAnsiString??rA
   \   000001D8   7A10A0E3           MOV      R1,#+122
   \   000001DC   601E81E3           ORR      R1,R1,#0x600
   \   000001E0   700F8DE2           ADD      R0,SP,#+448
   \   000001E4   ........           _BLF     ??KeyWord,??KeyWord??rA
   \   000001E8   702F8DE2           ADD      R2,SP,#+448
   \   000001EC   0910A0E1           MOV      R1,R9
   \   000001F0   770F8DE2           ADD      R0,SP,#+476
   \   000001F4   ........           _BLF     `??operator+`,`??operator+??rA`
   \   000001F8   692F8DE2           ADD      R2,SP,#+420
   \   000001FC   771F8DE2           ADD      R1,SP,#+476
   \   00000200   7E0F8DE2           ADD      R0,SP,#+504
   \   00000204   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000208   0720A0E1           MOV      R2,R7
   \   0000020C   7E1F8DE2           ADD      R1,SP,#+504
   \   00000210   850F8DE2           ADD      R0,SP,#+532
   \   00000214   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000218   0830A0E1           MOV      R3,R8
   \   0000021C   0020A0E3           MOV      R2,#+0
   \   00000220   851F8DE2           ADD      R1,SP,#+532
   \   00000224   0500A0E1           MOV      R0,R5
   \   00000228   ........           _BLF     ??append,??append??rA
   \   0000022C   0020A0E3           MOV      R2,#+0
   \   00000230   0110A0E3           MOV      R1,#+1
   \   00000234   850F8DE2           ADD      R0,SP,#+532
   \   00000238   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   0000023C   0020A0E3           MOV      R2,#+0
   \   00000240   0110A0E3           MOV      R1,#+1
   \   00000244   7E0F8DE2           ADD      R0,SP,#+504
   \   00000248   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   0000024C   0020A0E3           MOV      R2,#+0
   \   00000250   0110A0E3           MOV      R1,#+1
   \   00000254   690F8DE2           ADD      R0,SP,#+420
   \   00000258   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   0000025C   0020A0E3           MOV      R2,#+0
   \   00000260   0110A0E3           MOV      R1,#+1
   \   00000264   770F8DE2           ADD      R0,SP,#+476
   \   00000268   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   0000026C   0020A0E3           MOV      R2,#+0
   \   00000270   0110A0E3           MOV      R1,#+1
   \   00000274   700F8DE2           ADD      R0,SP,#+448
   \   00000278   ........           _BLF     ??_Tidy,??_Tidy??rA
    139                      if (PRODraftSystem::Has2ndMark) {
   \   0000027C   0000DAE5           LDRB     R0,[R10, #+0]
   \   00000280   000050E3           CMP      R0,#+0
   \   00000284   2D00000A           BEQ      ??MakeConfigString_7
    140                          LocalString += TabStr2 + KeyWord(C_D_MARK_MID2) + FloatToAnsiString(DMarkToMid2) + CrLfStr;
   \   00000288   A81194E5           LDR      R1,[R4, #+424]
   \   0000028C   0330A0E3           MOV      R3,#+3
   \   00000290   0720A0E3           MOV      R2,#+7
   \   00000294   70008DE2           ADD      R0,SP,#+112
   \   00000298   ........           _BLF     ??FloatToAnsiString,??FloatToAnsiString??rA
   \   0000029C   7E10A0E3           MOV      R1,#+126
   \   000002A0   601E81E3           ORR      R1,R1,#0x600
   \   000002A4   1C008DE2           ADD      R0,SP,#+28
   \   000002A8   ........           _BLF     ??KeyWord,??KeyWord??rA
   \   000002AC   1C208DE2           ADD      R2,SP,#+28
   \   000002B0   0910A0E1           MOV      R1,R9
   \   000002B4   38008DE2           ADD      R0,SP,#+56
   \   000002B8   ........           _BLF     `??operator+`,`??operator+??rA`
   \   000002BC   70208DE2           ADD      R2,SP,#+112
   \   000002C0   38108DE2           ADD      R1,SP,#+56
   \   000002C4   54008DE2           ADD      R0,SP,#+84
   \   000002C8   ........           _BLF     `??operator+`,`??operator+??rA`
   \   000002CC   0720A0E1           MOV      R2,R7
   \   000002D0   54108DE2           ADD      R1,SP,#+84
   \   000002D4   0D00A0E1           MOV      R0,SP
   \   000002D8   ........           _BLF     `??operator+`,`??operator+??rA`
   \   000002DC   0830A0E1           MOV      R3,R8
   \   000002E0   0020A0E3           MOV      R2,#+0
   \   000002E4   0D10A0E1           MOV      R1,SP
   \   000002E8   0500A0E1           MOV      R0,R5
   \   000002EC   ........           _BLF     ??append,??append??rA
   \   000002F0   0020A0E3           MOV      R2,#+0
   \   000002F4   0110A0E3           MOV      R1,#+1
   \   000002F8   0D00A0E1           MOV      R0,SP
   \   000002FC   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000300   0020A0E3           MOV      R2,#+0
   \   00000304   0110A0E3           MOV      R1,#+1
   \   00000308   54008DE2           ADD      R0,SP,#+84
   \   0000030C   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000310   0020A0E3           MOV      R2,#+0
   \   00000314   0110A0E3           MOV      R1,#+1
   \   00000318   70008DE2           ADD      R0,SP,#+112
   \   0000031C   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000320   0020A0E3           MOV      R2,#+0
   \   00000324   0110A0E3           MOV      R1,#+1
   \   00000328   38008DE2           ADD      R0,SP,#+56
   \   0000032C   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000330   0020A0E3           MOV      R2,#+0
   \   00000334   0110A0E3           MOV      R1,#+1
   \   00000338   1C008DE2           ADD      R0,SP,#+28
   \   0000033C   ........           _BLF     ??_Tidy,??_Tidy??rA
    141                      }
    142                  case C_DRAFT_DP:
    143                  case C_DRAFT_DS:
    144                  case C_DRAFT_DAP:
    145                  case C_DRAFT_DAS:
    146                  case C_DRAFT_DFP:
    147                  case C_DRAFT_DFS:
    148                      LocalString += TabStr2 + KeyWord(C_D_SNS_MID) + FloatToAnsiString(DSnsToMid) + CrLfStr;
   \                     ??MakeConfigString_7:
   \   00000340   981194E5           LDR      R1,[R4, #+408]
   \   00000344   0330A0E3           MOV      R3,#+3
   \   00000348   0720A0E3           MOV      R2,#+7
   \   0000034C   460F8DE2           ADD      R0,SP,#+280
   \   00000350   ........           _BLF     ??FloatToAnsiString,??FloatToAnsiString??rA
   \   00000354   6810A0E3           MOV      R1,#+104
   \   00000358   501E81E3           ORR      R1,R1,#0x500
   \   0000035C   4D0F8DE2           ADD      R0,SP,#+308
   \   00000360   ........           _BLF     ??KeyWord,??KeyWord??rA
   \   00000364   4D2F8DE2           ADD      R2,SP,#+308
   \   00000368   0910A0E1           MOV      R1,R9
   \   0000036C   540F8DE2           ADD      R0,SP,#+336
   \   00000370   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000374   462F8DE2           ADD      R2,SP,#+280
   \   00000378   541F8DE2           ADD      R1,SP,#+336
   \   0000037C   5B0F8DE2           ADD      R0,SP,#+364
   \   00000380   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000384   0720A0E1           MOV      R2,R7
   \   00000388   5B1F8DE2           ADD      R1,SP,#+364
   \   0000038C   620F8DE2           ADD      R0,SP,#+392
   \   00000390   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000394   0830A0E1           MOV      R3,R8
   \   00000398   0020A0E3           MOV      R2,#+0
   \   0000039C   621F8DE2           ADD      R1,SP,#+392
   \   000003A0   0500A0E1           MOV      R0,R5
   \   000003A4   ........           _BLF     ??append,??append??rA
   \   000003A8   0020A0E3           MOV      R2,#+0
   \   000003AC   0110A0E3           MOV      R1,#+1
   \   000003B0   620F8DE2           ADD      R0,SP,#+392
   \   000003B4   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000003B8   0020A0E3           MOV      R2,#+0
   \   000003BC   0110A0E3           MOV      R1,#+1
   \   000003C0   5B0F8DE2           ADD      R0,SP,#+364
   \   000003C4   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000003C8   0020A0E3           MOV      R2,#+0
   \   000003CC   0110A0E3           MOV      R1,#+1
   \   000003D0   460F8DE2           ADD      R0,SP,#+280
   \   000003D4   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000003D8   0020A0E3           MOV      R2,#+0
   \   000003DC   0110A0E3           MOV      R1,#+1
   \   000003E0   540F8DE2           ADD      R0,SP,#+336
   \   000003E4   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000003E8   0020A0E3           MOV      R2,#+0
   \   000003EC   0110A0E3           MOV      R1,#+1
   \   000003F0   4D0F8DE2           ADD      R0,SP,#+308
   \   000003F4   ........           _BLF     ??_Tidy,??_Tidy??rA
    149                      LocalString += TabStr2 + KeyWord(C_D_SNS_CL) + FloatToAnsiString(DSnsToCL) + CrLfStr;
   \   000003F8   9C1194E5           LDR      R1,[R4, #+412]
   \   000003FC   0330A0E3           MOV      R3,#+3
   \   00000400   0720A0E3           MOV      R2,#+7
   \   00000404   8C008DE2           ADD      R0,SP,#+140
   \   00000408   ........           _BLF     ??FloatToAnsiString,??FloatToAnsiString??rA
   \   0000040C   6A10A0E3           MOV      R1,#+106
   \   00000410   501E81E3           ORR      R1,R1,#0x500
   \   00000414   A8008DE2           ADD      R0,SP,#+168
   \   00000418   ........           _BLF     ??KeyWord,??KeyWord??rA
   \   0000041C   A8208DE2           ADD      R2,SP,#+168
   \   00000420   0910A0E1           MOV      R1,R9
   \   00000424   C4008DE2           ADD      R0,SP,#+196
   \   00000428   ........           _BLF     `??operator+`,`??operator+??rA`
   \   0000042C   8C208DE2           ADD      R2,SP,#+140
   \   00000430   C4108DE2           ADD      R1,SP,#+196
   \   00000434   E0008DE2           ADD      R0,SP,#+224
   \   00000438   ........           _BLF     `??operator+`,`??operator+??rA`
   \   0000043C   0720A0E1           MOV      R2,R7
   \   00000440   E0108DE2           ADD      R1,SP,#+224
   \   00000444   FC008DE2           ADD      R0,SP,#+252
   \   00000448   ........           _BLF     `??operator+`,`??operator+??rA`
   \   0000044C   0830A0E1           MOV      R3,R8
   \   00000450   0020A0E3           MOV      R2,#+0
   \   00000454   FC108DE2           ADD      R1,SP,#+252
   \   00000458   0500A0E1           MOV      R0,R5
   \   0000045C   ........           _BLF     ??append,??append??rA
   \   00000460   0020A0E3           MOV      R2,#+0
   \   00000464   0110A0E3           MOV      R1,#+1
   \   00000468   FC008DE2           ADD      R0,SP,#+252
   \   0000046C   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000470   0020A0E3           MOV      R2,#+0
   \   00000474   0110A0E3           MOV      R1,#+1
   \   00000478   E0008DE2           ADD      R0,SP,#+224
   \   0000047C   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000480   0020A0E3           MOV      R2,#+0
   \   00000484   0110A0E3           MOV      R1,#+1
   \   00000488   8C008DE2           ADD      R0,SP,#+140
   \   0000048C   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000490   0020A0E3           MOV      R2,#+0
   \   00000494   0110A0E3           MOV      R1,#+1
   \   00000498   C4008DE2           ADD      R0,SP,#+196
   \   0000049C   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000004A0   0020A0E3           MOV      R2,#+0
   \   000004A4   0110A0E3           MOV      R1,#+1
   \   000004A8   A8008DE2           ADD      R0,SP,#+168
   \   000004AC   150100EA           B        ??MakeConfigString_8
    150                      break;
    151                  }
    152              } else {
    153                  LocalString += TabStr2 + KeyWord(C_D_L_MARK) + FloatToAnsiString(DLMark1) + CrLfStr;
   \                     ??MakeConfigString_4:
   \   000004B0   801194E5           LDR      R1,[R4, #+384]
   \   000004B4   0330A0E3           MOV      R3,#+3
   \   000004B8   0720A0E3           MOV      R2,#+7
   \   000004BC   620F8DE2           ADD      R0,SP,#+392
   \   000004C0   ........           _BLF     ??FloatToAnsiString,??FloatToAnsiString??rA
   \   000004C4   7310A0E3           MOV      R1,#+115
   \   000004C8   601E81E3           ORR      R1,R1,#0x600
   \   000004CC   5B0F8DE2           ADD      R0,SP,#+364
   \   000004D0   ........           _BLF     ??KeyWord,??KeyWord??rA
   \   000004D4   5B2F8DE2           ADD      R2,SP,#+364
   \   000004D8   0910A0E1           MOV      R1,R9
   \   000004DC   540F8DE2           ADD      R0,SP,#+336
   \   000004E0   ........           _BLF     `??operator+`,`??operator+??rA`
   \   000004E4   622F8DE2           ADD      R2,SP,#+392
   \   000004E8   541F8DE2           ADD      R1,SP,#+336
   \   000004EC   4D0F8DE2           ADD      R0,SP,#+308
   \   000004F0   ........           _BLF     `??operator+`,`??operator+??rA`
   \   000004F4   0720A0E1           MOV      R2,R7
   \   000004F8   4D1F8DE2           ADD      R1,SP,#+308
   \   000004FC   460F8DE2           ADD      R0,SP,#+280
   \   00000500   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000504   0830A0E1           MOV      R3,R8
   \   00000508   0020A0E3           MOV      R2,#+0
   \   0000050C   461F8DE2           ADD      R1,SP,#+280
   \   00000510   0500A0E1           MOV      R0,R5
   \   00000514   ........           _BLF     ??append,??append??rA
   \   00000518   0020A0E3           MOV      R2,#+0
   \   0000051C   0110A0E3           MOV      R1,#+1
   \   00000520   460F8DE2           ADD      R0,SP,#+280
   \   00000524   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000528   0020A0E3           MOV      R2,#+0
   \   0000052C   0110A0E3           MOV      R1,#+1
   \   00000530   4D0F8DE2           ADD      R0,SP,#+308
   \   00000534   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000538   0020A0E3           MOV      R2,#+0
   \   0000053C   0110A0E3           MOV      R1,#+1
   \   00000540   620F8DE2           ADD      R0,SP,#+392
   \   00000544   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000548   0020A0E3           MOV      R2,#+0
   \   0000054C   0110A0E3           MOV      R1,#+1
   \   00000550   540F8DE2           ADD      R0,SP,#+336
   \   00000554   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000558   0020A0E3           MOV      R2,#+0
   \   0000055C   0110A0E3           MOV      R1,#+1
   \   00000560   5B0F8DE2           ADD      R0,SP,#+364
   \   00000564   ........           _BLF     ??_Tidy,??_Tidy??rA
    154                  LocalString += TabStr2 + KeyWord(C_D_T_MARK) + FloatToAnsiString(DTMark1) + CrLfStr;
   \   00000568   841194E5           LDR      R1,[R4, #+388]
   \   0000056C   0330A0E3           MOV      R3,#+3
   \   00000570   0720A0E3           MOV      R2,#+7
   \   00000574   850F8DE2           ADD      R0,SP,#+532
   \   00000578   ........           _BLF     ??FloatToAnsiString,??FloatToAnsiString??rA
   \   0000057C   7410A0E3           MOV      R1,#+116
   \   00000580   601E81E3           ORR      R1,R1,#0x600
   \   00000584   7E0F8DE2           ADD      R0,SP,#+504
   \   00000588   ........           _BLF     ??KeyWord,??KeyWord??rA
   \   0000058C   7E2F8DE2           ADD      R2,SP,#+504
   \   00000590   0910A0E1           MOV      R1,R9
   \   00000594   770F8DE2           ADD      R0,SP,#+476
   \   00000598   ........           _BLF     `??operator+`,`??operator+??rA`
   \   0000059C   852F8DE2           ADD      R2,SP,#+532
   \   000005A0   771F8DE2           ADD      R1,SP,#+476
   \   000005A4   700F8DE2           ADD      R0,SP,#+448
   \   000005A8   ........           _BLF     `??operator+`,`??operator+??rA`
   \   000005AC   0720A0E1           MOV      R2,R7
   \   000005B0   701F8DE2           ADD      R1,SP,#+448
   \   000005B4   690F8DE2           ADD      R0,SP,#+420
   \   000005B8   ........           _BLF     `??operator+`,`??operator+??rA`
   \   000005BC   0830A0E1           MOV      R3,R8
   \   000005C0   0020A0E3           MOV      R2,#+0
   \   000005C4   691F8DE2           ADD      R1,SP,#+420
   \   000005C8   0500A0E1           MOV      R0,R5
   \   000005CC   ........           _BLF     ??append,??append??rA
   \   000005D0   0020A0E3           MOV      R2,#+0
   \   000005D4   0110A0E3           MOV      R1,#+1
   \   000005D8   690F8DE2           ADD      R0,SP,#+420
   \   000005DC   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000005E0   0020A0E3           MOV      R2,#+0
   \   000005E4   0110A0E3           MOV      R1,#+1
   \   000005E8   700F8DE2           ADD      R0,SP,#+448
   \   000005EC   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000005F0   0020A0E3           MOV      R2,#+0
   \   000005F4   0110A0E3           MOV      R1,#+1
   \   000005F8   850F8DE2           ADD      R0,SP,#+532
   \   000005FC   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000600   0020A0E3           MOV      R2,#+0
   \   00000604   0110A0E3           MOV      R1,#+1
   \   00000608   770F8DE2           ADD      R0,SP,#+476
   \   0000060C   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000610   0020A0E3           MOV      R2,#+0
   \   00000614   0110A0E3           MOV      R1,#+1
   \   00000618   7E0F8DE2           ADD      R0,SP,#+504
   \   0000061C   ........           _BLF     ??_Tidy,??_Tidy??rA
    155                  if (PRODraftSystem::Has2ndMark) {
   \   00000620   0000DAE5           LDRB     R0,[R10, #+0]
   \   00000624   000050E3           CMP      R0,#+0
   \   00000628   5B00000A           BEQ      ??MakeConfigString_9
    156                      LocalString += TabStr2 + KeyWord(C_D_L_MARK2) + FloatToAnsiString(DLMark2) + CrLfStr;
   \   0000062C   881194E5           LDR      R1,[R4, #+392]
   \   00000630   0330A0E3           MOV      R3,#+3
   \   00000634   0720A0E3           MOV      R2,#+7
   \   00000638   70008DE2           ADD      R0,SP,#+112
   \   0000063C   ........           _BLF     ??FloatToAnsiString,??FloatToAnsiString??rA
   \   00000640   7C10A0E3           MOV      R1,#+124
   \   00000644   601E81E3           ORR      R1,R1,#0x600
   \   00000648   0D00A0E1           MOV      R0,SP
   \   0000064C   ........           _BLF     ??KeyWord,??KeyWord??rA
   \   00000650   0D20A0E1           MOV      R2,SP
   \   00000654   0910A0E1           MOV      R1,R9
   \   00000658   54008DE2           ADD      R0,SP,#+84
   \   0000065C   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000660   70208DE2           ADD      R2,SP,#+112
   \   00000664   54108DE2           ADD      R1,SP,#+84
   \   00000668   38008DE2           ADD      R0,SP,#+56
   \   0000066C   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000670   0720A0E1           MOV      R2,R7
   \   00000674   38108DE2           ADD      R1,SP,#+56
   \   00000678   1C008DE2           ADD      R0,SP,#+28
   \   0000067C   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000680   0830A0E1           MOV      R3,R8
   \   00000684   0020A0E3           MOV      R2,#+0
   \   00000688   1C108DE2           ADD      R1,SP,#+28
   \   0000068C   0500A0E1           MOV      R0,R5
   \   00000690   ........           _BLF     ??append,??append??rA
   \   00000694   0020A0E3           MOV      R2,#+0
   \   00000698   0110A0E3           MOV      R1,#+1
   \   0000069C   1C008DE2           ADD      R0,SP,#+28
   \   000006A0   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000006A4   0020A0E3           MOV      R2,#+0
   \   000006A8   0110A0E3           MOV      R1,#+1
   \   000006AC   38008DE2           ADD      R0,SP,#+56
   \   000006B0   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000006B4   0020A0E3           MOV      R2,#+0
   \   000006B8   0110A0E3           MOV      R1,#+1
   \   000006BC   70008DE2           ADD      R0,SP,#+112
   \   000006C0   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000006C4   0020A0E3           MOV      R2,#+0
   \   000006C8   0110A0E3           MOV      R1,#+1
   \   000006CC   54008DE2           ADD      R0,SP,#+84
   \   000006D0   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000006D4   0020A0E3           MOV      R2,#+0
   \   000006D8   0110A0E3           MOV      R1,#+1
   \   000006DC   0D00A0E1           MOV      R0,SP
   \   000006E0   ........           _BLF     ??_Tidy,??_Tidy??rA
    157                      LocalString += TabStr2 + KeyWord(C_D_T_MARK2) + FloatToAnsiString(DTMark2) + CrLfStr;
   \   000006E4   8C1194E5           LDR      R1,[R4, #+396]
   \   000006E8   0330A0E3           MOV      R3,#+3
   \   000006EC   0720A0E3           MOV      R2,#+7
   \   000006F0   FC008DE2           ADD      R0,SP,#+252
   \   000006F4   ........           _BLF     ??FloatToAnsiString,??FloatToAnsiString??rA
   \   000006F8   7D10A0E3           MOV      R1,#+125
   \   000006FC   601E81E3           ORR      R1,R1,#0x600
   \   00000700   E0008DE2           ADD      R0,SP,#+224
   \   00000704   ........           _BLF     ??KeyWord,??KeyWord??rA
   \   00000708   E0208DE2           ADD      R2,SP,#+224
   \   0000070C   0910A0E1           MOV      R1,R9
   \   00000710   C4008DE2           ADD      R0,SP,#+196
   \   00000714   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000718   FC208DE2           ADD      R2,SP,#+252
   \   0000071C   C4108DE2           ADD      R1,SP,#+196
   \   00000720   A8008DE2           ADD      R0,SP,#+168
   \   00000724   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000728   0720A0E1           MOV      R2,R7
   \   0000072C   A8108DE2           ADD      R1,SP,#+168
   \   00000730   8C008DE2           ADD      R0,SP,#+140
   \   00000734   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000738   0830A0E1           MOV      R3,R8
   \   0000073C   0020A0E3           MOV      R2,#+0
   \   00000740   8C108DE2           ADD      R1,SP,#+140
   \   00000744   0500A0E1           MOV      R0,R5
   \   00000748   ........           _BLF     ??append,??append??rA
   \   0000074C   0020A0E3           MOV      R2,#+0
   \   00000750   0110A0E3           MOV      R1,#+1
   \   00000754   8C008DE2           ADD      R0,SP,#+140
   \   00000758   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   0000075C   0020A0E3           MOV      R2,#+0
   \   00000760   0110A0E3           MOV      R1,#+1
   \   00000764   A8008DE2           ADD      R0,SP,#+168
   \   00000768   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   0000076C   0020A0E3           MOV      R2,#+0
   \   00000770   0110A0E3           MOV      R1,#+1
   \   00000774   FC008DE2           ADD      R0,SP,#+252
   \   00000778   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   0000077C   0020A0E3           MOV      R2,#+0
   \   00000780   0110A0E3           MOV      R1,#+1
   \   00000784   C4008DE2           ADD      R0,SP,#+196
   \   00000788   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   0000078C   0020A0E3           MOV      R2,#+0
   \   00000790   0110A0E3           MOV      R1,#+1
   \   00000794   E0008DE2           ADD      R0,SP,#+224
   \   00000798   ........           _BLF     ??_Tidy,??_Tidy??rA
    158                  }
    159          
    160                  LocalString += TabStr2 + KeyWord(C_D_L_PERP) + FloatToAnsiString(DLPerp) + CrLfStr;
   \                     ??MakeConfigString_9:
   \   0000079C   901194E5           LDR      R1,[R4, #+400]
   \   000007A0   0330A0E3           MOV      R3,#+3
   \   000007A4   0720A0E3           MOV      R2,#+7
   \   000007A8   A80F8DE2           ADD      R0,SP,#+672
   \   000007AC   ........           _BLF     ??FloatToAnsiString,??FloatToAnsiString??rA
   \   000007B0   7510A0E3           MOV      R1,#+117
   \   000007B4   601E81E3           ORR      R1,R1,#0x600
   \   000007B8   A10F8DE2           ADD      R0,SP,#+644
   \   000007BC   ........           _BLF     ??KeyWord,??KeyWord??rA
   \   000007C0   A12F8DE2           ADD      R2,SP,#+644
   \   000007C4   0910A0E1           MOV      R1,R9
   \   000007C8   9A0F8DE2           ADD      R0,SP,#+616
   \   000007CC   ........           _BLF     `??operator+`,`??operator+??rA`
   \   000007D0   A82F8DE2           ADD      R2,SP,#+672
   \   000007D4   9A1F8DE2           ADD      R1,SP,#+616
   \   000007D8   930F8DE2           ADD      R0,SP,#+588
   \   000007DC   ........           _BLF     `??operator+`,`??operator+??rA`
   \   000007E0   0720A0E1           MOV      R2,R7
   \   000007E4   931F8DE2           ADD      R1,SP,#+588
   \   000007E8   8C0F8DE2           ADD      R0,SP,#+560
   \   000007EC   ........           _BLF     `??operator+`,`??operator+??rA`
   \   000007F0   0830A0E1           MOV      R3,R8
   \   000007F4   0020A0E3           MOV      R2,#+0
   \   000007F8   8C1F8DE2           ADD      R1,SP,#+560
   \   000007FC   0500A0E1           MOV      R0,R5
   \   00000800   ........           _BLF     ??append,??append??rA
   \   00000804   0020A0E3           MOV      R2,#+0
   \   00000808   0110A0E3           MOV      R1,#+1
   \   0000080C   8C0F8DE2           ADD      R0,SP,#+560
   \   00000810   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000814   0020A0E3           MOV      R2,#+0
   \   00000818   0110A0E3           MOV      R1,#+1
   \   0000081C   930F8DE2           ADD      R0,SP,#+588
   \   00000820   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000824   0020A0E3           MOV      R2,#+0
   \   00000828   0110A0E3           MOV      R1,#+1
   \   0000082C   A80F8DE2           ADD      R0,SP,#+672
   \   00000830   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000834   0020A0E3           MOV      R2,#+0
   \   00000838   0110A0E3           MOV      R1,#+1
   \   0000083C   9A0F8DE2           ADD      R0,SP,#+616
   \   00000840   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000844   0020A0E3           MOV      R2,#+0
   \   00000848   0110A0E3           MOV      R1,#+1
   \   0000084C   A10F8DE2           ADD      R0,SP,#+644
   \   00000850   ........           _BLF     ??_Tidy,??_Tidy??rA
    161                  LocalString += TabStr2 + KeyWord(C_D_T_PERP) + FloatToAnsiString(DTPerp) + CrLfStr;
   \   00000854   941194E5           LDR      R1,[R4, #+404]
   \   00000858   0330A0E3           MOV      R3,#+3
   \   0000085C   0720A0E3           MOV      R2,#+7
   \   00000860   CB0F8DE2           ADD      R0,SP,#+812
   \   00000864   ........           _BLF     ??FloatToAnsiString,??FloatToAnsiString??rA
   \   00000868   7610A0E3           MOV      R1,#+118
   \   0000086C   601E81E3           ORR      R1,R1,#0x600
   \   00000870   C40F8DE2           ADD      R0,SP,#+784
   \   00000874   ........           _BLF     ??KeyWord,??KeyWord??rA
   \   00000878   C42F8DE2           ADD      R2,SP,#+784
   \   0000087C   0910A0E1           MOV      R1,R9
   \   00000880   BD0F8DE2           ADD      R0,SP,#+756
   \   00000884   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000888   CB2F8DE2           ADD      R2,SP,#+812
   \   0000088C   BD1F8DE2           ADD      R1,SP,#+756
   \   00000890   B60F8DE2           ADD      R0,SP,#+728
   \   00000894   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000898   0720A0E1           MOV      R2,R7
   \   0000089C   B61F8DE2           ADD      R1,SP,#+728
   \   000008A0   AF0F8DE2           ADD      R0,SP,#+700
   \   000008A4   ........           _BLF     `??operator+`,`??operator+??rA`
   \   000008A8   0830A0E1           MOV      R3,R8
   \   000008AC   0020A0E3           MOV      R2,#+0
   \   000008B0   AF1F8DE2           ADD      R1,SP,#+700
   \   000008B4   0500A0E1           MOV      R0,R5
   \   000008B8   ........           _BLF     ??append,??append??rA
   \   000008BC   0020A0E3           MOV      R2,#+0
   \   000008C0   0110A0E3           MOV      R1,#+1
   \   000008C4   AF0F8DE2           ADD      R0,SP,#+700
   \   000008C8   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000008CC   0020A0E3           MOV      R2,#+0
   \   000008D0   0110A0E3           MOV      R1,#+1
   \   000008D4   B60F8DE2           ADD      R0,SP,#+728
   \   000008D8   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000008DC   0020A0E3           MOV      R2,#+0
   \   000008E0   0110A0E3           MOV      R1,#+1
   \   000008E4   CB0F8DE2           ADD      R0,SP,#+812
   \   000008E8   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000008EC   0020A0E3           MOV      R2,#+0
   \   000008F0   0110A0E3           MOV      R1,#+1
   \   000008F4   BD0F8DE2           ADD      R0,SP,#+756
   \   000008F8   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000008FC   0020A0E3           MOV      R2,#+0
   \   00000900   0110A0E3           MOV      R1,#+1
   \   00000904   C40F8DE2           ADD      R0,SP,#+784
   \                     ??MakeConfigString_8:
   \   00000908   ........           _BLF     ??_Tidy,??_Tidy??rA
    162              }
    163              if (DraftSensor) {
   \                     ??MakeConfigString_5:
   \   0000090C   643194E5           LDR      R3,[R4, #+356]
   \   00000910   000053E3           CMP      R3,#+0
   \   00000914   0F00000A           BEQ      ??MakeConfigString_10
    164                  LocalString += DraftSensor->MakeConfigString(2);
   \   00000918   0300A0E1           MOV      R0,R3
   \   0000091C   A43093E5           LDR      R3,[R3, #+164]
   \   00000920   0220A0E3           MOV      R2,#+2
   \   00000924   0C3093E5           LDR      R3,[R3, #+12]
   \   00000928   0D10A0E1           MOV      R1,SP
   \   0000092C   0FE0A0E1           MOV      LR,PC
   \   00000930   13FF2FE1           BX       R3
   \   00000934   0830A0E1           MOV      R3,R8
   \   00000938   0020A0E3           MOV      R2,#+0
   \   0000093C   0D10A0E1           MOV      R1,SP
   \   00000940   0500A0E1           MOV      R0,R5
   \   00000944   ........           _BLF     ??append,??append??rA
   \   00000948   0020A0E3           MOV      R2,#+0
   \   0000094C   0110A0E3           MOV      R1,#+1
   \   00000950   0D00A0E1           MOV      R0,SP
   \   00000954   ........           _BLF     ??_Tidy,??_Tidy??rA
    165              }
    166              LocalString += TabStr1 + KeyWord(C_DRAFT_END) + CrLfStr;
   \                     ??MakeConfigString_10:
   \   00000958   641EA0E3           MOV      R1,#+1600
   \   0000095C   F50F8DE2           ADD      R0,SP,#+980
   \   00000960   ........           _BLF     ??KeyWord,??KeyWord??rA
   \   00000964   F52F8DE2           ADD      R2,SP,#+980
   \   00000968   0610A0E1           MOV      R1,R6
   \   0000096C   EE0F8DE2           ADD      R0,SP,#+952
   \   00000970   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000974   0720A0E1           MOV      R2,R7
   \   00000978   EE1F8DE2           ADD      R1,SP,#+952
   \   0000097C   E70F8DE2           ADD      R0,SP,#+924
   \   00000980   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000984   0830A0E1           MOV      R3,R8
   \   00000988   0020A0E3           MOV      R2,#+0
   \   0000098C   E71F8DE2           ADD      R1,SP,#+924
   \   00000990   0500A0E1           MOV      R0,R5
   \   00000994   ........           _BLF     ??append,??append??rA
   \   00000998   0020A0E3           MOV      R2,#+0
   \   0000099C   0110A0E3           MOV      R1,#+1
   \   000009A0   E70F8DE2           ADD      R0,SP,#+924
   \   000009A4   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000009A8   0020A0E3           MOV      R2,#+0
   \   000009AC   0110A0E3           MOV      R1,#+1
   \   000009B0   EE0F8DE2           ADD      R0,SP,#+952
   \   000009B4   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000009B8   0020A0E3           MOV      R2,#+0
   \   000009BC   0110A0E3           MOV      R1,#+1
   \   000009C0   F50F8DE2           ADD      R0,SP,#+980
   \   000009C4   ........           _BLF     ??_Tidy,??_Tidy??rA
    167              LocalString += CrLfStr;
   \   000009C8   0830A0E1           MOV      R3,R8
   \   000009CC   0020A0E3           MOV      R2,#+0
   \   000009D0   0710A0E1           MOV      R1,R7
   \   000009D4   0500A0E1           MOV      R0,R5
   \   000009D8   ........           _BLF     ??append,??append??rA
    168          
    169              return (LocalString);
   \   000009DC   FCDF8DE2           ADD      SP,SP,#+1008
   \   000009E0   ........           B        ?Subroutine27
    170          }

   \                                 In segment CODE, align 4, keep-with-next
   \                     ?Subroutine27:
   \   00000000   F04FBDE8           POP      {R4-R11,LR}
   \   00000004   1EFF2FE1           BX       LR               ;; return
   \                     ??Subroutine27_0:
   \   00000008   ........           DC32     `?<Constant "Draft">`
   \   0000000C   ........           DC32     ??LengthBetweenPP
   \   00000010   ........           DC32     ??Width
    171          //---------------------------------------------------------------------------
    172          

   \                                 In segment CODE, align 4, keep-with-next
    173          bool PRODraft::LoadConfigString(TSNConfigString &ConfigString) {
   \                     ??LoadConfigString:
   \   00000000   F04F2DE9           PUSH     {R4-R11,LR}
   \   00000004   A4D04DE2           SUB      SP,SP,#+164
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   0170A0E1           MOV      R7,R1
    174              bool NoError = true;
   \   00000010   0180A0E3           MOV      R8,#+1
   \   00000014   0160A0E3           MOV      R6,#+1
    175              int ErrorLine = 0;
   \   00000018   0010A0E3           MOV      R1,#+0
   \   0000001C   00108DE5           STR      R1,[SP, #+0]
   \   00000020   0150A0E1           MOV      R5,R1
   \   00000024   4B9FA0E3           MOV      R9,#+300
   \   00000028   DFA0A0E3           MOV      R10,#+223
   \   0000002C   80AE8AE3           ORR      R10,R10,#0x800
    176              int Key;
    177              do {
    178                  AnsiString InputKeyWord = ConfigString.NextWord(ErrorLine);
   \                     ??LoadConfigString_2:
   \   00000030   0030A0E3           MOV      R3,#+0
   \   00000034   0D20A0E1           MOV      R2,SP
   \   00000038   34108DE2           ADD      R1,SP,#+52
   \   0000003C   ........           LDR      R11,??Subroutine27_0  ;; `?<Constant "Draft">`
   \   00000040   0700A0E1           MOV      R0,R7
   \   00000044   ........           _BLF     ??NextWord,??NextWord??rA
   \   00000048   00009DE5           LDR      R0,[SP, #+0]
   \   0000004C   000050E3           CMP      R0,#+0
   \   00000050   0B00000A           BEQ      ??LoadConfigString_3
    179                  if (ErrorLine) {
    180                      if (ErrorLine != EOF) {
   \   00000054   010070E3           CMN      R0,#+1
   \   00000058   6301000A           BEQ      ??LoadConfigString_4
    181                          GiveConfigWarning("Draft", ErrorLine);
   \   0000005C   0B10A0E1           MOV      R1,R11
   \   00000060   18008DE2           ADD      R0,SP,#+24
   \   00000064   ........           _BLF     ??AnsiString,??AnsiString??rA
   \   00000068   00109DE5           LDR      R1,[SP, #+0]
   \   0000006C   ........           _BLF     ??GiveConfigWarning,??GiveConfigWarning??rA
   \   00000070   0020A0E3           MOV      R2,#+0
   \   00000074   0810A0E1           MOV      R1,R8
   \   00000078   18008DE2           ADD      R0,SP,#+24
   \                     ??LoadConfigString_5:
   \   0000007C   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000080   590100EA           B        ??LoadConfigString_4
    182                      }
    183                  } else {
    184                      Key = FindConfigKey(InputKeyWord);
   \                     ??LoadConfigString_3:
   \   00000084   34108DE2           ADD      R1,SP,#+52
   \   00000088   18008DE2           ADD      R0,SP,#+24
   \   0000008C   ........           _BLF     ??string,??string??rA
   \   00000090   18008DE2           ADD      R0,SP,#+24
   \   00000094   ........           _BLF     ??FindConfigKey,??FindConfigKey??rA
   \   00000098   04008DE5           STR      R0,[SP, #+4]
   \   0000009C   0020A0E3           MOV      R2,#+0
   \   000000A0   0810A0E1           MOV      R1,R8
   \   000000A4   18008DE2           ADD      R0,SP,#+24
   \   000000A8   ........           _BLF     ??_Tidy,??_Tidy??rA
    185                      switch (Key) {
   \   000000AC   04009DE5           LDR      R0,[SP, #+4]
   \   000000B0   F21F4AE2           SUB      R1,R10,#+968
   \   000000B4   010050E1           CMP      R0,R1
   \   000000B8   6300000A           BEQ      ??LoadConfigString_6
   \   000000BC   511081E2           ADD      R1,R1,#+81
   \   000000C0   010050E1           CMP      R0,R1
   \   000000C4   01108113           ORRNE    R1,R1,#0x1
   \   000000C8   01005011           CMPNE    R0,R1
   \   000000CC   AE00000A           BEQ      ??LoadConfigString_7
   \   000000D0   011081E2           ADD      R1,R1,#+1
   \   000000D4   010050E1           CMP      R0,R1
   \   000000D8   01108113           ORRNE    R1,R1,#0x1
   \   000000DC   01005011           CMPNE    R0,R1
   \   000000E0   B000000A           BEQ      ??LoadConfigString_8
   \   000000E4   640E50E3           CMP      R0,#+1600
   \   000000E8   3F01000A           BEQ      ??LoadConfigString_4
   \   000000EC   421F81E2           ADD      R1,R1,#+264
   \   000000F0   010050E1           CMP      R0,R1
   \   000000F4   6900000A           BEQ      ??LoadConfigString_9
   \   000000F8   011081E2           ADD      R1,R1,#+1
   \   000000FC   010050E1           CMP      R0,R1
   \   00000100   7000000A           BEQ      ??LoadConfigString_10
   \   00000104   011081E3           ORR      R1,R1,#0x1
   \   00000108   010050E1           CMP      R0,R1
   \   0000010C   8C00000A           BEQ      ??LoadConfigString_11
   \   00000110   011081E2           ADD      R1,R1,#+1
   \   00000114   010050E1           CMP      R0,R1
   \   00000118   9000000A           BEQ      ??LoadConfigString_12
   \   0000011C   031081E2           ADD      R1,R1,#+3
   \   00000120   010050E1           CMP      R0,R1
   \   00000124   A600000A           BEQ      ??LoadConfigString_13
   \   00000128   011081E2           ADD      R1,R1,#+1
   \   0000012C   010050E1           CMP      R0,R1
   \   00000130   AA00000A           BEQ      ??LoadConfigString_14
   \   00000134   021081E2           ADD      R1,R1,#+2
   \   00000138   010050E1           CMP      R0,R1
   \   0000013C   6B00000A           BEQ      ??LoadConfigString_15
   \   00000140   011081E3           ORR      R1,R1,#0x1
   \   00000144   010050E1           CMP      R0,R1
   \   00000148   7100000A           BEQ      ??LoadConfigString_16
   \   0000014C   011081E2           ADD      R1,R1,#+1
   \   00000150   010050E1           CMP      R0,R1
   \   00000154   AB00000A           BEQ      ??LoadConfigString_17
   \   00000158   701F81E2           ADD      R1,R1,#+448
   \   0000015C   010050E1           CMP      R0,R1
   \   00000160   01108113           ORRNE    R1,R1,#0x1
   \   00000164   01005011           CMPNE    R0,R1
   \   00000168   AF00000A           BEQ      ??LoadConfigString_18
   \   0000016C   091081E2           ADD      R1,R1,#+9
   \   00000170   010050E1           CMP      R0,R1
   \   00000174   01108113           ORRNE    R1,R1,#0x1
   \   00000178   01005011           CMPNE    R0,R1
   \   0000017C   01108112           ADDNE    R1,R1,#+1
   \   00000180   01005011           CMPNE    R0,R1
   \   00000184   01108113           ORRNE    R1,R1,#0x1
   \   00000188   01005011           CMPNE    R0,R1
   \   0000018C   01108112           ADDNE    R1,R1,#+1
   \   00000190   01005011           CMPNE    R0,R1
   \   00000194   01108113           ORRNE    R1,R1,#0x1
   \   00000198   01005011           CMPNE    R0,R1
   \   0000019C   05108112           ADDNE    R1,R1,#+5
   \   000001A0   01005011           CMPNE    R0,R1
   \   000001A4   B600000A           BEQ      ??LoadConfigString_19
   \   000001A8   011081E3           ORR      R1,R1,#0x1
   \   000001AC   010050E1           CMP      R0,R1
   \   000001B0   C400000A           BEQ      ??LoadConfigString_20
   \   000001B4   281081E3           ORR      R1,R1,#0x28
   \   000001B8   010050E1           CMP      R0,R1
   \   000001BC   C300000A           BEQ      ??LoadConfigString_21
   \   000001C0   021081E2           ADD      R1,R1,#+2
   \   000001C4   010050E1           CMP      R0,R1
   \   000001C8   D100000A           BEQ      ??LoadConfigString_22
   \   000001CC   041081E2           ADD      R1,R1,#+4
   \   000001D0   010050E1           CMP      R0,R1
   \   000001D4   DC00000A           BEQ      ??LoadConfigString_23
   \   000001D8   011081E2           ADD      R1,R1,#+1
   \   000001DC   010050E1           CMP      R0,R1
   \   000001E0   EA00000A           BEQ      ??LoadConfigString_24
   \   000001E4   011081E3           ORR      R1,R1,#0x1
   \   000001E8   010050E1           CMP      R0,R1
   \   000001EC   D600000A           BEQ      ??LoadConfigString_23
   \   000001F0   011081E2           ADD      R1,R1,#+1
   \   000001F4   010050E1           CMP      R0,R1
   \   000001F8   E400000A           BEQ      ??LoadConfigString_24
   \   000001FC   141081E2           ADD      R1,R1,#+20
   \   00000200   010050E1           CMP      R0,R1
   \   00000204   F800000A           BEQ      ??LoadConfigString_4
    186                      default:
    187                          GiveConfigWarning("Draft", InputKeyWord, ConfigString.LineCount);
   \   00000208   34108DE2           ADD      R1,SP,#+52
   \   0000020C   50008DE2           ADD      R0,SP,#+80
   \   00000210   ........           _BLF     ??string,??string??rA
   \   00000214   0B10A0E1           MOV      R1,R11
   \   00000218   6C008DE2           ADD      R0,SP,#+108
   \   0000021C   ........           _BLF     ??AnsiString,??AnsiString??rA
   \   00000220   1C2097E5           LDR      R2,[R7, #+28]
   \   00000224   50108DE2           ADD      R1,SP,#+80
   \   00000228   ........           _BLF     ??GiveConfigWarning_1,??GiveConfigWarning??rA_1
   \   0000022C   0020A0E3           MOV      R2,#+0
   \   00000230   0810A0E1           MOV      R1,R8
   \   00000234   50008DE2           ADD      R0,SP,#+80
   \   00000238   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   0000023C   0520A0E1           MOV      R2,R5
   \   00000240   0810A0E1           MOV      R1,R8
   \   00000244   6C008DE2           ADD      R0,SP,#+108
   \   00000248   8BFFFFEA           B        ??LoadConfigString_5
    188                          break;
    189                      case C_DRAFT_END:
    190                      case C_AI_END:          // If AI type not found can continue with this
    191                          break;
    192                      case C_PRO_TAGNAME:
    193                          TagName = ConfigString.GetRemainingLine(ErrorLine);
   \                     ??LoadConfigString_6:
   \   0000024C   0D20A0E1           MOV      R2,SP
   \   00000250   88108DE2           ADD      R1,SP,#+136
   \   00000254   0700A0E1           MOV      R0,R7
   \   00000258   ........           _BLF     ??GetRemainingLine,??GetRemainingLine??rA
   \   0000025C   ........           LDR      R0,??DataTable26  ;; ??npos
   \   00000260   0020A0E3           MOV      R2,#+0
   \   00000264   003090E5           LDR      R3,[R0, #+0]
   \   00000268   88108DE2           ADD      R1,SP,#+136
   \   0000026C   600084E2           ADD      R0,R4,#+96
   \   00000270   ........           _BLF     ??assign,??assign??rA
   \   00000274   0520A0E1           MOV      R2,R5
   \   00000278   0810A0E1           MOV      R1,R8
   \   0000027C   88008DE2           ADD      R0,SP,#+136
   \   00000280   ........           _BLF     ??_Tidy,??_Tidy??rA
    194                          NoError = !ErrorLine;
   \   00000284   00009DE5           LDR      R0,[SP, #+0]
   \   00000288   000050E3           CMP      R0,#+0
   \   0000028C   0100001A           BNE      ??LoadConfigString_25
   \                     ??LoadConfigString_26:
   \   00000290   0160A0E3           MOV      R6,#+1
   \   00000294   D40000EA           B        ??LoadConfigString_4
   \                     ??LoadConfigString_25:
   \   00000298   0060A0E3           MOV      R6,#+0
   \   0000029C   D20000EA           B        ??LoadConfigString_4
    195                          break;
    196                      case C_D_L_MARK  :
    197                          DLMark1 = ConfigString.ReadDouble(ErrorLine);
   \                     ??LoadConfigString_9:
   \   000002A0   0020A0E3           MOV      R2,#+0
   \   000002A4   0D10A0E1           MOV      R1,SP
   \   000002A8   0700A0E1           MOV      R0,R7
   \   000002AC   ........           _BLF     ??ReadDouble,??ReadDouble??rA
   \   000002B0   ........           _BLF     __doubleToFloat,??__doubleToFloat??rA
   \   000002B4   800184E5           STR      R0,[R4, #+384]
    198                          NoError = !ErrorLine;
   \                     ??LoadConfigString_27:
   \   000002B8   00009DE5           LDR      R0,[SP, #+0]
   \   000002BC   000050E3           CMP      R0,#+0
   \   000002C0   F4FFFF1A           BNE      ??LoadConfigString_25
   \   000002C4   F1FFFFEA           B        ??LoadConfigString_26
    199                          break;
    200                      case C_D_T_MARK  :
    201                          DTMark1 = ConfigString.ReadDouble(ErrorLine);
   \                     ??LoadConfigString_10:
   \   000002C8   0020A0E3           MOV      R2,#+0
   \   000002CC   0D10A0E1           MOV      R1,SP
   \   000002D0   0700A0E1           MOV      R0,R7
   \   000002D4   ........           _BLF     ??ReadDouble,??ReadDouble??rA
   \   000002D8   ........           _BLF     __doubleToFloat,??__doubleToFloat??rA
   \   000002DC   840184E5           STR      R0,[R4, #+388]
    202                          NoError = !ErrorLine;
   \   000002E0   00009DE5           LDR      R0,[SP, #+0]
   \   000002E4   000050E3           CMP      R0,#+0
   \   000002E8   E8FFFF0A           BEQ      ??LoadConfigString_26
   \   000002EC   E9FFFFEA           B        ??LoadConfigString_25
    203                          break;
    204                      case C_D_L_MARK2  :
    205                          DLMark2 = ConfigString.ReadDouble(ErrorLine);
   \                     ??LoadConfigString_15:
   \   000002F0   0020A0E3           MOV      R2,#+0
   \   000002F4   0D10A0E1           MOV      R1,SP
   \   000002F8   0700A0E1           MOV      R0,R7
   \   000002FC   ........           _BLF     ??ReadDouble,??ReadDouble??rA
   \   00000300   ........           _BLF     __doubleToFloat,??__doubleToFloat??rA
   \   00000304   880184E5           STR      R0,[R4, #+392]
    206                          PRODraftSystem::Has2ndMark = true;
   \   00000308   ........           LDR      R0,??DataTable23  ;; ??Has2ndMark
   \   0000030C   0080C0E5           STRB     R8,[R0, #+0]
    207                          NoError = !ErrorLine;
   \   00000310   E8FFFFEA           B        ??LoadConfigString_27
    208                          break;
    209                      case C_D_T_MARK2  :
    210                          DTMark2 = ConfigString.ReadDouble(ErrorLine);
   \                     ??LoadConfigString_16:
   \   00000314   0020A0E3           MOV      R2,#+0
   \   00000318   0D10A0E1           MOV      R1,SP
   \   0000031C   0700A0E1           MOV      R0,R7
   \   00000320   ........           _BLF     ??ReadDouble,??ReadDouble??rA
   \   00000324   ........           _BLF     __doubleToFloat,??__doubleToFloat??rA
   \   00000328   8C0184E5           STR      R0,[R4, #+396]
    211                          PRODraftSystem::Has2ndMark = true;
   \   0000032C   ........           LDR      R0,??DataTable23  ;; ??Has2ndMark
   \   00000330   0080C0E5           STRB     R8,[R0, #+0]
    212                          NoError = !ErrorLine;
   \                     ??LoadConfigString_28:
   \   00000334   00009DE5           LDR      R0,[SP, #+0]
   \   00000338   000050E3           CMP      R0,#+0
   \   0000033C   D5FFFF1A           BNE      ??LoadConfigString_25
   \   00000340   D2FFFFEA           B        ??LoadConfigString_26
    213                          break;
    214                      case C_D_L_PERP  :
    215                          DLPerp = ConfigString.ReadDouble(ErrorLine);
   \                     ??LoadConfigString_11:
   \   00000344   0020A0E3           MOV      R2,#+0
   \   00000348   0D10A0E1           MOV      R1,SP
   \   0000034C   0700A0E1           MOV      R0,R7
   \   00000350   ........           _BLF     ??ReadDouble,??ReadDouble??rA
   \   00000354   ........           _BLF     __doubleToFloat,??__doubleToFloat??rA
   \   00000358   900184E5           STR      R0,[R4, #+400]
    216                          NoError = !ErrorLine;
   \   0000035C   D5FFFFEA           B        ??LoadConfigString_27
    217                          break;
    218                      case C_D_T_PERP  :
    219                          DTPerp = ConfigString.ReadDouble(ErrorLine);
   \                     ??LoadConfigString_12:
   \   00000360   0020A0E3           MOV      R2,#+0
   \   00000364   0D10A0E1           MOV      R1,SP
   \   00000368   0700A0E1           MOV      R0,R7
   \   0000036C   ........           _BLF     ??ReadDouble,??ReadDouble??rA
   \   00000370   ........           _BLF     __doubleToFloat,??__doubleToFloat??rA
   \   00000374   940184E5           STR      R0,[R4, #+404]
    220                          NoError = !ErrorLine;
   \   00000378   00009DE5           LDR      R0,[SP, #+0]
   \   0000037C   000050E3           CMP      R0,#+0
   \   00000380   C2FFFF0A           BEQ      ??LoadConfigString_26
   \                     ??LoadConfigString_29:
   \   00000384   0060A0E3           MOV      R6,#+0
   \   00000388   970000EA           B        ??LoadConfigString_4
    221                          break;
    222                      case C_D_SNS_MID :
    223                      case C_D_SNS_MID2:
    224                          DSnsToMid = ConfigString.ReadDouble(ErrorLine);
   \                     ??LoadConfigString_7:
   \   0000038C   0020A0E3           MOV      R2,#+0
   \   00000390   0D10A0E1           MOV      R1,SP
   \   00000394   0700A0E1           MOV      R0,R7
   \   00000398   ........           _BLF     ??ReadDouble,??ReadDouble??rA
   \   0000039C   ........           _BLF     __doubleToFloat,??__doubleToFloat??rA
   \   000003A0   980184E5           STR      R0,[R4, #+408]
    225                          NoError = !ErrorLine;
   \   000003A4   C3FFFFEA           B        ??LoadConfigString_27
    226                          break;
    227                      case C_D_SNS_CL  :
    228                      case C_D_SNS_CL2 :
    229                          DSnsToCL = ConfigString.ReadDouble(ErrorLine);
   \                     ??LoadConfigString_8:
   \   000003A8   0020A0E3           MOV      R2,#+0
   \   000003AC   0D10A0E1           MOV      R1,SP
   \   000003B0   0700A0E1           MOV      R0,R7
   \   000003B4   ........           _BLF     ??ReadDouble,??ReadDouble??rA
   \   000003B8   ........           _BLF     __doubleToFloat,??__doubleToFloat??rA
   \   000003BC   9C0184E5           STR      R0,[R4, #+412]
    230                          NoError = !ErrorLine;
   \   000003C0   DBFFFFEA           B        ??LoadConfigString_28
    231                          break;
    232                      case C_D_PERP_MID:
    233                          DPerpToMid = ConfigString.ReadDouble(ErrorLine);
   \                     ??LoadConfigString_13:
   \   000003C4   0020A0E3           MOV      R2,#+0
   \   000003C8   0D10A0E1           MOV      R1,SP
   \   000003CC   0700A0E1           MOV      R0,R7
   \   000003D0   ........           _BLF     ??ReadDouble,??ReadDouble??rA
   \   000003D4   ........           _BLF     __doubleToFloat,??__doubleToFloat??rA
   \   000003D8   C80184E5           STR      R0,[R4, #+456]
    234                          NoError = !ErrorLine;
   \   000003DC   B5FFFFEA           B        ??LoadConfigString_27
    235                          break;
    236                      case C_D_MARK_MID:
    237                          DMarkToMid1 = ConfigString.ReadDouble(ErrorLine);
   \                     ??LoadConfigString_14:
   \   000003E0   0020A0E3           MOV      R2,#+0
   \   000003E4   0D10A0E1           MOV      R1,SP
   \   000003E8   0700A0E1           MOV      R0,R7
   \   000003EC   ........           _BLF     ??ReadDouble,??ReadDouble??rA
   \   000003F0   ........           _BLF     __doubleToFloat,??__doubleToFloat??rA
   \   000003F4   A00184E5           STR      R0,[R4, #+416]
    238                          NoError = !ErrorLine;
   \   000003F8   00009DE5           LDR      R0,[SP, #+0]
   \   000003FC   000050E3           CMP      R0,#+0
   \   00000400   DFFFFF1A           BNE      ??LoadConfigString_29
   \   00000404   A1FFFFEA           B        ??LoadConfigString_26
    239                          break;
    240                      case C_D_MARK_MID2:
    241                          DMarkToMid2 = ConfigString.ReadDouble(ErrorLine);
   \                     ??LoadConfigString_17:
   \   00000408   0020A0E3           MOV      R2,#+0
   \   0000040C   0D10A0E1           MOV      R1,SP
   \   00000410   0700A0E1           MOV      R0,R7
   \   00000414   ........           _BLF     ??ReadDouble,??ReadDouble??rA
   \   00000418   ........           _BLF     __doubleToFloat,??__doubleToFloat??rA
   \   0000041C   A80184E5           STR      R0,[R4, #+424]
    242                          PRODraftSystem::Has2ndMark = true;
   \   00000420   ........           LDR      R0,??DataTable23  ;; ??Has2ndMark
   \   00000424   0080C0E5           STRB     R8,[R0, #+0]
    243                          NoError = !ErrorLine;
   \   00000428   A2FFFFEA           B        ??LoadConfigString_27
    244                          break;
    245                      case C_AI_P906_0110:
    246                      case C_AI_P906_0111:
    247                          {
    248                              AIPressSensor_mV *AnalogInPtr = new AIPressSensor_mV(Key);
   \                     ??LoadConfigString_18:
   \   0000042C   0010A0E3           MOV      R1,#+0
   \   00000430   ........           _BLF     `??new AIPressSensor_mV`,`??new AIPressSensor_mV??rA`
   \   00000434   00B0A0E1           MOV      R11,R0
    249                              AnalogInPtr->LoadConfigString(ConfigString);
   \   00000438   A4209BE5           LDR      R2,[R11, #+164]
   \   0000043C   0710A0E1           MOV      R1,R7
   \   00000440   102092E5           LDR      R2,[R2, #+16]
   \   00000444   0FE0A0E1           MOV      LR,PC
   \   00000448   12FF2FE1           BX       R2
    250                              DraftSensor = AnalogInPtr;
   \   0000044C   64B184E5           STR      R11,[R4, #+356]
    251                              DraftSensor->Location = C_AI_LOC_BOTTOM;
   \   00000450   28A18BE5           STR      R10,[R11, #+296]
    252                              AnalogInList.push_back((AnalogInput *)AnalogInPtr);
   \   00000454   0B10A0E1           MOV      R1,R11
   \   00000458   040089E0           ADD      R0,R9,R4
   \   0000045C   ........           _BLF     ??_Push_back0_1,??_Push_back0??rA
    253                              LevelPressures.push_back((AIPressSensor *)AnalogInPtr);
   \   00000460   0B10A0E1           MOV      R1,R11
   \   00000464   5A0F84E2           ADD      R0,R4,#+360
   \   00000468   ........           _BLF     ??_Push_back0,??_Push_back0??rA_1
    254                              // This sensor will currently not be visible
    255                              AITempSensor_Pt1000 *tmpTempSnsPtr = new AITempSensor_Pt1000(AnalogInPtr);
   \   0000046C   0B00A0E1           MOV      R0,R11
   \   00000470   ........           _BLF     `??new AITempSensor_Pt1000`,`??new AITempSensor_Pt1000??rA`
   \   00000474   0010A0E1           MOV      R1,R0
    256                              AnalogInList.push_back((AnalogInput *)tmpTempSnsPtr);
   \   00000478   040089E0           ADD      R0,R9,R4
   \   0000047C   ........           _BLF     ??_Push_back0_1,??_Push_back0??rA
   \   00000480   590000EA           B        ??LoadConfigString_4
    257                          }
    258                          break;
    259                      case C_AI_ATM_N_Ex:
    260                      case C_AI_ATM_Ex:
    261                      case C_AI_ATM_Ex_H:
    262                      case C_AI_ATM_N_Ex_0_1:
    263          			case C_AI_APT500		  :
    264          			case C_AI_SPT900		  :
    265                      case C_AI_Gen_4_20mA:
    266                          {
    267                              AIPressSensor_mA *AnalogInPtr = new AIPressSensor_mA(Key);
   \                     ??LoadConfigString_19:
   \   00000484   0010A0E3           MOV      R1,#+0
   \   00000488   ........           _BLF     `??new AIPressSensor_mA`,`??new AIPressSensor_mA??rA`
   \                     ??LoadConfigString_30:
   \   0000048C   00B0A0E1           MOV      R11,R0
    268                              AnalogInPtr->LoadConfigString(ConfigString);
   \   00000490   A4209BE5           LDR      R2,[R11, #+164]
   \   00000494   0710A0E1           MOV      R1,R7
   \   00000498   102092E5           LDR      R2,[R2, #+16]
   \   0000049C   0FE0A0E1           MOV      LR,PC
   \   000004A0   12FF2FE1           BX       R2
    269                              DraftSensor           = AnalogInPtr;
   \   000004A4   64B184E5           STR      R11,[R4, #+356]
    270                              DraftSensor->Location = C_AI_LOC_BOTTOM;
   \   000004A8   28A18BE5           STR      R10,[R11, #+296]
    271                              AnalogInList.push_back((AnalogInput *)AnalogInPtr);
   \   000004AC   0B10A0E1           MOV      R1,R11
   \   000004B0   040089E0           ADD      R0,R9,R4
   \   000004B4   ........           _BLF     ??_Push_back0_1,??_Push_back0??rA
    272                              LevelPressures.push_back((AIPressSensor *)AnalogInPtr);
   \   000004B8   0B10A0E1           MOV      R1,R11
   \   000004BC   5A0F84E2           ADD      R0,R4,#+360
   \   000004C0   ........           _BLF     ??_Push_back0,??_Push_back0??rA_1
   \   000004C4   480000EA           B        ??LoadConfigString_4
    273                          }
    274                          break;
    275                      case C_AI_DIFF_PRESSURE_mA:
    276                          {
    277                              AIDiffPressSensor_mA *AnalogInPtr = new AIDiffPressSensor_mA(Key);
   \                     ??LoadConfigString_20:
   \   000004C8   ........           _BLF     `??new AIDiffPressSensor_mA`,`??new AIDiffPressSensor_mA??rA`
   \   000004CC   EEFFFFEA           B        ??LoadConfigString_30
    278                              AnalogInPtr->LoadConfigString(ConfigString);
    279                              DraftSensor           = AnalogInPtr;
    280                              DraftSensor->Location = C_AI_LOC_BOTTOM;
    281                              AnalogInList.push_back((AnalogInput *)AnalogInPtr);
    282                              LevelPressures.push_back((AIPressSensor *)AnalogInPtr);
    283                          }
    284                          break;
    285          
    286                      case C_AI_MetriTape:
    287                          HasMetriTapeSns = true; {
   \                     ??LoadConfigString_21:
   \   000004D0   5881C4E5           STRB     R8,[R4, #+344]
    288                              AIMetriTapeSensor *AnalogInPtr = new AIMetriTapeSensor();
   \   000004D4   5F0FA0E3           MOV      R0,#+380
   \   000004D8   ........           _BLF     `??operator new`,`??operator new??rA`
   \   000004DC   00B0B0E1           MOVS     R11,R0
   \   000004E0   0100000A           BEQ      ??LoadConfigString_31
   \   000004E4   ........           _BLF     ??AIMetriTapeSensor,??AIMetriTapeSensor??rA
   \   000004E8   000000EA           B        ??LoadConfigString_32
   \                     ??LoadConfigString_31:
   \   000004EC   00B0A0E3           MOV      R11,#+0
    289                              AnalogInPtr->LoadConfigString(ConfigString);
   \                     ??LoadConfigString_32:
   \   000004F0   A4209BE5           LDR      R2,[R11, #+164]
   \   000004F4   0710A0E1           MOV      R1,R7
   \   000004F8   102092E5           LDR      R2,[R2, #+16]
   \   000004FC   0B00A0E1           MOV      R0,R11
   \   00000500   0FE0A0E1           MOV      LR,PC
   \   00000504   12FF2FE1           BX       R2
    290                              DraftSensor           = AnalogInPtr;
   \                     ??LoadConfigString_33:
   \   00000508   64B184E5           STR      R11,[R4, #+356]
    291                              DraftSensor->Location = C_AI_LOC_BOTTOM;
   \   0000050C   28A18BE5           STR      R10,[R11, #+296]
    292                              AnalogInList.push_back((AnalogInput *)AnalogInPtr);
   \   00000510   2E0000EA           B        ??LoadConfigString_34
    293                              ModbusSensorSet.insert(AnalogInPtr);
    294                          }
    295                          break;
    296                      case C_AI_AirPurge:
    297                          {
    298                              AIAirPurgePressSensor *AnalogInPtr = new AIAirPurgePressSensor();
   \                     ??LoadConfigString_22:
   \   00000514   700FA0E3           MOV      R0,#+448
   \   00000518   ........           _BLF     `??operator new`,`??operator new??rA`
   \   0000051C   00B0B0E1           MOVS     R11,R0
   \   00000520   0100000A           BEQ      ??LoadConfigString_35
   \   00000524   ........           _BLF     ??AIAirPurgePressSensor,??AIAirPurgePressSensor??rA
   \   00000528   000000EA           B        ??LoadConfigString_36
   \                     ??LoadConfigString_35:
   \   0000052C   00B0A0E3           MOV      R11,#+0
    299                              AnalogInPtr->LoadConfigString(ConfigString);
   \                     ??LoadConfigString_36:
   \   00000530   A4209BE5           LDR      R2,[R11, #+164]
   \   00000534   0710A0E1           MOV      R1,R7
   \   00000538   102092E5           LDR      R2,[R2, #+16]
   \   0000053C   0B00A0E1           MOV      R0,R11
   \   00000540   0FE0A0E1           MOV      LR,PC
   \   00000544   12FF2FE1           BX       R2
    300                              DraftSensor           = AnalogInPtr;
   \   00000548   EEFFFFEA           B        ??LoadConfigString_33
    301                              DraftSensor->Location = C_AI_LOC_BOTTOM;
    302                              AnalogInList.push_back((AnalogInput *)AnalogInPtr);
    303                              ModbusSensorSet.insert(AnalogInPtr);
    304                          }
    305                          break;
    306                      case C_AI_MB_Press_0_20mA   :
    307                      case C_AI_MB_Press_4_20mA   :
    308                          {
    309                              AIModbusPressSensor_mA *AnalogInPtr = new AIModbusPressSensor_mA();
   \                     ??LoadConfigString_23:
   \   0000054C   820FA0E3           MOV      R0,#+520
   \   00000550   ........           _BLF     `??operator new`,`??operator new??rA`
   \   00000554   00B0B0E1           MOVS     R11,R0
   \   00000558   0200000A           BEQ      ??LoadConfigString_37
   \   0000055C   0010A0E3           MOV      R1,#+0
   \   00000560   ........           _BLF     ??AIModbusPressSensor_mA,??AIModbusPressSensor_mA??rA
   \   00000564   000000EA           B        ??LoadConfigString_38
   \                     ??LoadConfigString_37:
   \   00000568   00B0A0E3           MOV      R11,#+0
    310                              AnalogInPtr->LoadConfigString(ConfigString);
   \                     ??LoadConfigString_38:
   \   0000056C   A4209BE5           LDR      R2,[R11, #+164]
   \   00000570   0710A0E1           MOV      R1,R7
   \   00000574   102092E5           LDR      R2,[R2, #+16]
   \   00000578   0B00A0E1           MOV      R0,R11
   \   0000057C   0FE0A0E1           MOV      LR,PC
   \   00000580   12FF2FE1           BX       R2
    311                              DraftSensor           = AnalogInPtr;
   \   00000584   64B184E5           STR      R11,[R4, #+356]
    312                              DraftSensor->Location = C_AI_LOC_BOTTOM;
   \   00000588   28A18BE5           STR      R10,[R11, #+296]
    313                              AnalogInList.push_back((AnalogInput *)AnalogInPtr);
   \   0000058C   0F0000EA           B        ??LoadConfigString_34
    314                              ModbusSensorSet.insert(AnalogInPtr);
    315                          }
    316                          break;
    317                      case C_AI_MB_DiffPre_0_20mA :
    318                      case C_AI_MB_DiffPre_4_20mA :
    319                          {
    320                              AIModbusDiffPressSensor_mA *AnalogInPtr = new AIModbusDiffPressSensor_mA();
   \                     ??LoadConfigString_24:
   \   00000590   820FA0E3           MOV      R0,#+520
   \   00000594   ........           _BLF     `??operator new`,`??operator new??rA`
   \   00000598   00B0B0E1           MOVS     R11,R0
   \   0000059C   0200000A           BEQ      ??LoadConfigString_39
   \   000005A0   0010A0E3           MOV      R1,#+0
   \   000005A4   ........           _BLF     ??AIModbusDiffPressSensor_mA,??AIModbusDiffPressSensor_mA??rA
   \   000005A8   000000EA           B        ??LoadConfigString_40
   \                     ??LoadConfigString_39:
   \   000005AC   00B0A0E3           MOV      R11,#+0
    321                              DraftSensor           = AnalogInPtr;
   \                     ??LoadConfigString_40:
   \   000005B0   64B184E5           STR      R11,[R4, #+356]
    322                              DraftSensor->Location = C_AI_LOC_BOTTOM;
   \   000005B4   28A18BE5           STR      R10,[R11, #+296]
    323                              AnalogInPtr->LoadConfigString(ConfigString);
   \   000005B8   A4209BE5           LDR      R2,[R11, #+164]
   \   000005BC   0710A0E1           MOV      R1,R7
   \   000005C0   102092E5           LDR      R2,[R2, #+16]
   \   000005C4   0B00A0E1           MOV      R0,R11
   \   000005C8   0FE0A0E1           MOV      LR,PC
   \   000005CC   12FF2FE1           BX       R2
    324                              AnalogInList.push_back((AnalogInput *)AnalogInPtr);
   \                     ??LoadConfigString_34:
   \   000005D0   0B10A0E1           MOV      R1,R11
   \   000005D4   040089E0           ADD      R0,R9,R4
   \   000005D8   ........           _BLF     ??_Push_back0_1,??_Push_back0??rA
    325                              ModbusSensorSet.insert(AnalogInPtr);
   \   000005DC   0B20A0E1           MOV      R2,R11
   \   000005E0   AC1084E2           ADD      R1,R4,#+172
   \   000005E4   10008DE2           ADD      R0,SP,#+16
   \   000005E8   ........           _BLF     ??insert,??insert??rA
    326                          }
    327                          break;
    328          
    329                      }
    330                  }
    331              }while (NoError && (ErrorLine != EOF) && (Key != C_DRAFT_END));
   \                     ??LoadConfigString_4:
   \   000005EC   0020A0E3           MOV      R2,#+0
   \   000005F0   0810A0E1           MOV      R1,R8
   \   000005F4   34008DE2           ADD      R0,SP,#+52
   \   000005F8   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000005FC   000056E3           CMP      R6,#+0
   \   00000600   00009D15           LDRNE    R0,[SP, #+0]
   \   00000604   01007013           CMNNE    R0,#+1
   \   00000608   04009D15           LDRNE    R0,[SP, #+4]
   \   0000060C   640E5013           CMPNE    R0,#+1600
   \   00000610   86FEFF1A           BNE      ??LoadConfigString_2
    332              CopyAnalogList();
   \   00000614   0400A0E1           MOV      R0,R4
   \   00000618   ........           _BLF     ??CopyAnalogList,??CopyAnalogList??rA
    333              if (PRODraftSystem::PRODraftSysPtr->GlobalRefSystem) {
   \   0000061C   ........           LDR      R0,??DataTable28  ;; ??PRODraftSysPtr
   \   00000620   000090E5           LDR      R0,[R0, #+0]
   \   00000624   A801D0E5           LDRB     R0,[R0, #+424]
   \   00000628   000050E3           CMP      R0,#+0
   \   0000062C   6B00000A           BEQ      ??LoadConfigString_41
    334                  switch (Type) {
   \   00000630   ........           LDR      R0,??Subroutine27_0+0x4  ;; ??LengthBetweenPP
   \   00000634   A01094E5           LDR      R1,[R4, #+160]
   \   00000638   000090E5           LDR      R0,[R0, #+0]
   \   0000063C   ........           LDR      R8,??Subroutine27_0+0x8  ;; ??Width
   \   00000640   0070A0E3           MOV      R7,#+0
   \   00000644   4B1041E2           SUB      R1,R1,#+75
   \   00000648   601E41E2           SUB      R1,R1,#+1536
   \   0000064C   070051E3           CMP      R1,#+7
   \   00000650   3900008A           BHI      ??LoadConfigString_42
   \   00000654   012F8FE2           ADR      R2,??LoadConfigString_1
   \   00000658   0120D2E7           LDRB     R2,[R2, R1]
   \   0000065C   02F18FE0           ADD      PC,PC,R2, LSL #+2
   \                     ??LoadConfigString_1:
   \   00000660   01090D0F           DC8      +1,+9,+13,+15
   \   00000664   11192128           DC8      +17,+25,+33,+40
    335                  case C_DRAFT_DF:
    336                      DPerpToMid  = PROProjectInfo::LengthBetweenPP / 2.0;
   \                     ??LoadConfigString_43:
   \   00000668   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   0000066C   0020A0E3           MOV      R2,#+0
   \   00000670   4034A0E3           MOV      R3,#+1073741824
   \   00000674   ........           _BLF     __dDiv,??__dDiv??rA
   \   00000678   ........           _BLF     __doubleToFloat,??__doubleToFloat??rA
   \   0000067C   C80184E5           STR      R0,[R4, #+456]
    337                      DPerpToCL   = 0.0;
   \   00000680   CC7184E5           STR      R7,[R4, #+460]
   \   00000684   2C0000EA           B        ??LoadConfigString_42
    338                      break;
    339                  case C_DRAFT_DP:
    340                      DPerpToMid  = 0.0;      // No perpendicular at midship
   \                     ??LoadConfigString_44:
   \   00000688   C87184E5           STR      R7,[R4, #+456]
    341                      DPerpToCL   = -PROProjectInfo::Width / 2.0;
   \                     ??LoadConfigString_45:
   \   0000068C   000098E5           LDR      R0,[R8, #+0]
   \   00000690   800420E2           EOR      R0,R0,#0x80000000
   \   00000694   210000EA           B        ??LoadConfigString_46
    342                      DMarkToCL1  = DPerpToCL;
    343                      break;
    344                  case C_DRAFT_DS:
    345                      DPerpToMid  = 0.0;      // No perpendicular at midship
   \                     ??LoadConfigString_47:
   \   00000698   C87184E5           STR      R7,[R4, #+456]
    346                      DPerpToCL   = PROProjectInfo::Width / 2.0;
   \   0000069C   1E0000EA           B        ??LoadConfigString_48
    347                      DMarkToCL1  = DPerpToCL;
    348                      break;
    349                  case C_DRAFT_DA:
    350                      DPerpToMid  = -PROProjectInfo::LengthBetweenPP / 2.0;
   \                     ??LoadConfigString_49:
   \   000006A0   800420E2           EOR      R0,R0,#0x80000000
   \   000006A4   EFFFFFEA           B        ??LoadConfigString_43
    351                      DPerpToCL   = 0.0;
    352                      break;
    353                  case C_DRAFT_DAP:
    354                      DPerpToMid  = -PROProjectInfo::LengthBetweenPP / 2.0;
   \                     ??LoadConfigString_50:
   \   000006A8   800420E2           EOR      R0,R0,#0x80000000
   \   000006AC   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   000006B0   0020A0E3           MOV      R2,#+0
   \   000006B4   4034A0E3           MOV      R3,#+1073741824
   \   000006B8   ........           _BLF     __dDiv,??__dDiv??rA
   \   000006BC   ........           _BLF     __doubleToFloat,??__doubleToFloat??rA
   \   000006C0   C80184E5           STR      R0,[R4, #+456]
    355                      DPerpToCL   = -PROProjectInfo::Width / 2.0;
   \   000006C4   F0FFFFEA           B        ??LoadConfigString_45
    356                      DMarkToCL1  = DPerpToCL;
    357                      break;
    358                  case C_DRAFT_DAS:
    359                      DPerpToMid  = -PROProjectInfo::LengthBetweenPP / 2.0;
   \                     ??LoadConfigString_51:
   \   000006C8   800420E2           EOR      R0,R0,#0x80000000
   \   000006CC   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   000006D0   0020A0E3           MOV      R2,#+0
   \   000006D4   4034A0E3           MOV      R3,#+1073741824
   \   000006D8   ........           _BLF     __dDiv,??__dDiv??rA
   \   000006DC   ........           _BLF     __doubleToFloat,??__doubleToFloat??rA
   \   000006E0   C80184E5           STR      R0,[R4, #+456]
    360                      DPerpToCL   = PROProjectInfo::Width / 2.0;
   \   000006E4   0C0000EA           B        ??LoadConfigString_48
    361                      DMarkToCL1  = DPerpToCL;
    362                      break;
    363                  case C_DRAFT_DFP:
    364                      DPerpToMid  = PROProjectInfo::LengthBetweenPP / 2.0;
   \                     ??LoadConfigString_52:
   \   000006E8   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   000006EC   0020A0E3           MOV      R2,#+0
   \   000006F0   4034A0E3           MOV      R3,#+1073741824
   \   000006F4   ........           _BLF     __dDiv,??__dDiv??rA
   \   000006F8   ........           _BLF     __doubleToFloat,??__doubleToFloat??rA
   \   000006FC   C80184E5           STR      R0,[R4, #+456]
    365                      DPerpToCL   = -PROProjectInfo::Width / 2.0;
   \   00000700   E1FFFFEA           B        ??LoadConfigString_45
    366                      DMarkToCL1  = DPerpToCL;
    367                      break;
    368                  case C_DRAFT_DFS:
    369                      DPerpToMid  = PROProjectInfo::LengthBetweenPP / 2.0;
   \                     ??LoadConfigString_53:
   \   00000704   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   00000708   0020A0E3           MOV      R2,#+0
   \   0000070C   4034A0E3           MOV      R3,#+1073741824
   \   00000710   ........           _BLF     __dDiv,??__dDiv??rA
   \   00000714   ........           _BLF     __doubleToFloat,??__doubleToFloat??rA
   \   00000718   C80184E5           STR      R0,[R4, #+456]
    370                      DPerpToCL   = PROProjectInfo::Width / 2.0;
   \                     ??LoadConfigString_48:
   \   0000071C   000098E5           LDR      R0,[R8, #+0]
   \                     ??LoadConfigString_46:
   \   00000720   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   00000724   0020A0E3           MOV      R2,#+0
   \   00000728   4034A0E3           MOV      R3,#+1073741824
   \   0000072C   ........           _BLF     __dDiv,??__dDiv??rA
   \   00000730   ........           _BLF     __doubleToFloat,??__doubleToFloat??rA
   \   00000734   CC0184E5           STR      R0,[R4, #+460]
    371                      DMarkToCL1  = DPerpToCL;
   \   00000738   A40184E5           STR      R0,[R4, #+420]
    372                      break;
    373                  }
    374                  if (MarkTable) {
   \                     ??LoadConfigString_42:
   \   0000073C   D00194E5           LDR      R0,[R4, #+464]
   \   00000740   000050E3           CMP      R0,#+0
   \   00000744   0900000A           BEQ      ??LoadConfigString_54
    375                      float tableDLRef, tableDTRef;
    376                      MarkTable->Calculate(0.0, &tableDLRef, &tableDTRef);
   \   00000748   0C308DE2           ADD      R3,SP,#+12
   \   0000074C   08208DE2           ADD      R2,SP,#+8
   \   00000750   0010A0E3           MOV      R1,#+0
   \   00000754   ........           _BLF     ??Calculate_2,??Calculate??rA
    377                      DLRef1  = tableDLRef  - DSnsToMid;
   \   00000758   08009DE5           LDR      R0,[SP, #+8]
   \   0000075C   981194E5           LDR      R1,[R4, #+408]
   \   00000760   ........           _BLF     __fSub,??__fSub??rA
   \   00000764   B00184E5           STR      R0,[R4, #+432]
    378                      DTRef1  = tableDTRef  - DSnsToCL;
   \   00000768   0C009DE5           LDR      R0,[SP, #+12]
   \   0000076C   040000EA           B        ??LoadConfigString_55
    379                  } else {
    380                      DLRef1  = DMarkToMid1 - DSnsToMid;
   \                     ??LoadConfigString_54:
   \   00000770   A00194E5           LDR      R0,[R4, #+416]
   \   00000774   981194E5           LDR      R1,[R4, #+408]
   \   00000778   ........           _BLF     __fSub,??__fSub??rA
   \   0000077C   B00184E5           STR      R0,[R4, #+432]
    381                      DTRef1  = DMarkToCL1  - DSnsToCL;
   \   00000780   A40194E5           LDR      R0,[R4, #+420]
   \                     ??LoadConfigString_55:
   \   00000784   9C1194E5           LDR      R1,[R4, #+412]
   \   00000788   ........           _BLF     __fSub,??__fSub??rA
   \   0000078C   B40184E5           STR      R0,[R4, #+436]
    382                  }
    383                  if (PRODraftSystem::Has2ndMark) {
   \   00000790   ........           LDR      R0,??DataTable23  ;; ??Has2ndMark
   \   00000794   0000D0E5           LDRB     R0,[R0, #+0]
   \   00000798   000050E3           CMP      R0,#+0
   \   0000079C   0700000A           BEQ      ??LoadConfigString_56
    384                      DLRef2      = DMarkToMid2 - DSnsToMid;
   \   000007A0   A80194E5           LDR      R0,[R4, #+424]
   \   000007A4   981194E5           LDR      R1,[R4, #+408]
   \   000007A8   ........           _BLF     __fSub,??__fSub??rA
   \   000007AC   B80184E5           STR      R0,[R4, #+440]
    385                      DTRef2      = DMarkToCL2  - DSnsToCL;
   \   000007B0   AC0194E5           LDR      R0,[R4, #+428]
   \   000007B4   9C1194E5           LDR      R1,[R4, #+412]
   \   000007B8   ........           _BLF     __fSub,??__fSub??rA
   \   000007BC   BC0184E5           STR      R0,[R4, #+444]
    386                  }
    387                  DLFCenter   = DPerpToMid   - DSnsToMid;
   \                     ??LoadConfigString_56:
   \   000007C0   C80194E5           LDR      R0,[R4, #+456]
   \   000007C4   981194E5           LDR      R1,[R4, #+408]
   \   000007C8   ........           _BLF     __fSub,??__fSub??rA
    388                  DTFCenter   = DPerpToCL    - DSnsToCL;
   \   000007CC   9C1194E5           LDR      R1,[R4, #+412]
   \   000007D0   0070A0E1           MOV      R7,R0
   \   000007D4   CC0194E5           LDR      R0,[R4, #+460]
   \   000007D8   ........           _BLF     __fSub,??__fSub??rA
   \   000007DC   140000EA           B        ??LoadConfigString_57
    389              } else {
    390                  if (MarkTable) {
   \                     ??LoadConfigString_41:
   \   000007E0   D00194E5           LDR      R0,[R4, #+464]
   \   000007E4   000050E3           CMP      R0,#+0
   \   000007E8   0400000A           BEQ      ??LoadConfigString_58
    391                      MarkTable->Calculate(0.0, &DLRef1, &DTRef1);
   \   000007EC   6D3F84E2           ADD      R3,R4,#+436
   \   000007F0   6C2F84E2           ADD      R2,R4,#+432
   \   000007F4   0010A0E3           MOV      R1,#+0
   \   000007F8   ........           _BLF     ??Calculate_2,??Calculate??rA
   \   000007FC   030000EA           B        ??LoadConfigString_59
    392                  } else {
    393                      DLRef1     = DLMark1;
   \                     ??LoadConfigString_58:
   \   00000800   800194E5           LDR      R0,[R4, #+384]
   \   00000804   B00184E5           STR      R0,[R4, #+432]
    394                      DTRef1     = DTMark1;
   \   00000808   840194E5           LDR      R0,[R4, #+388]
   \   0000080C   B40184E5           STR      R0,[R4, #+436]
    395                  }
    396                  if (PRODraftSystem::Has2ndMark) {
   \                     ??LoadConfigString_59:
   \   00000810   ........           LDR      R0,??DataTable23  ;; ??Has2ndMark
   \   00000814   0000D0E5           LDRB     R0,[R0, #+0]
   \   00000818   000050E3           CMP      R0,#+0
    397                      DLRef2      = DLMark2;
   \   0000081C   88019415           LDRNE    R0,[R4, #+392]
   \   00000820   B8018415           STRNE    R0,[R4, #+440]
    398                      DTRef2      = DTMark2;
   \   00000824   8C019415           LDRNE    R0,[R4, #+396]
   \   00000828   BC018415           STRNE    R0,[R4, #+444]
    399                  }
    400                  DLFCenter = DLPerp;
   \   0000082C   907194E5           LDR      R7,[R4, #+400]
    401                  DTFCenter = DTPerp;
   \   00000830   940194E5           LDR      R0,[R4, #+404]
   \                     ??LoadConfigString_57:
   \   00000834   C40184E5           STR      R0,[R4, #+452]
   \   00000838   C07184E5           STR      R7,[R4, #+448]
    402              }
    403              for (unsigned i = 0; i < LevelPressures.size(); i++) {
   \   0000083C   050000EA           B        ??LoadConfigString_60
    404                  AIPressSensor *tmpPtr = LevelPressures[i];
    405                  tmpPtr->AddLevelPressSensor(LevelPressures[i]);
   \                     ??LoadConfigString_61:
   \   00000840   680194E5           LDR      R0,[R4, #+360]
   \   00000844   050180E0           ADD      R0,R0,R5, LSL #+2
   \   00000848   001090E5           LDR      R1,[R0, #+0]
    406              }
   \   0000084C   015085E2           ADD      R5,R5,#+1
   \   00000850   0100A0E1           MOV      R0,R1
   \   00000854   ........           _BLF     ??AddLevelPressSensor,??AddLevelPressSensor??rA
   \                     ??LoadConfigString_60:
   \   00000858   5A0F84E2           ADD      R0,R4,#+360
   \   0000085C   041090E5           LDR      R1,[R0, #+4]
   \   00000860   000090E5           LDR      R0,[R0, #+0]
   \   00000864   000041E0           SUB      R0,R1,R0
   \   00000868   200155E1           CMP      R5,R0, LSR #+2
   \   0000086C   F3FFFF3A           BCC      ??LoadConfigString_61
    407              AddAlarms(CompleteAlarmInfoList);
   \   00000870   FC1084E2           ADD      R1,R4,#+252
   \   00000874   0400A0E1           MOV      R0,R4
   \   00000878   ........           _BLF     ??AddAlarms,??AddAlarms??rA
    408              AddSensorAlarms();
   \   0000087C   0400A0E1           MOV      R0,R4
   \   00000880   ........           _BLF     ??AddSensorAlarms,??AddSensorAlarms??rA
    409          
    410              return (NoError);
   \   00000884   0600A0E1           MOV      R0,R6
   \   00000888   A4D08DE2           ADD      SP,SP,#+164
   \   0000088C                      REQUIRE ?Subroutine27
   \   0000088C                      ;; // Fall through to label ?Subroutine27
    411          }
    412          
    413          ///////////////////////////////////////////////////////////////
    414          //
    415          // Routines for Saving of Settings
    416          //
    417          ///////////////////////////////////////////////////////////////
    418          

   \                                 In segment CODE, align 4, keep-with-next
    419          void PRODraft::SaveSettings(TSNConfigString *SettingsString) {
   \                     ??SaveSettings:
   \   00000000   F0472DE9           PUSH     {R4-R10,LR}
   \   00000004   5BDF4DE2           SUB      SP,SP,#+364
   \   00000008   0040A0E1           MOV      R4,R0
    420              if (IsModified || WriteAll) {
   \   0000000C   0000D4E5           LDRB     R0,[R4, #+0]
   \   00000010   0150A0E1           MOV      R5,R1
   \   00000014   000050E3           CMP      R0,#+0
   \   00000018   B0029F05           LDREQ    R0,??SaveSettings_1  ;; ??WriteAll
   \   0000001C   0000D005           LDRBEQ   R0,[R0, #+0]
   \   00000020   00005003           CMPEQ    R0,#+0
   \   00000024   A600000A           BEQ      ??SaveSettings_2
    421                  IsModified = false;
    422                  AnsiString LocalString;
    423                  LocalString += TabStr1 + KeyWord(Type) + CrLfStr;
   \   00000028   ........           LDR      R6,??DataTable24  ;; TabStr1
   \   0000002C   ........           LDR      R7,??DataTable25  ;; CrLfStr
   \   00000030   0000A0E3           MOV      R0,#+0
   \   00000034   0000C4E5           STRB     R0,[R4, #+0]
   \   00000038   1C008DE2           ADD      R0,SP,#+28
   \   0000003C   ........           _BLF     ??AnsiString_1,??AnsiString??rA_1
   \   00000040   A01094E5           LDR      R1,[R4, #+160]
   \   00000044   E0008DE2           ADD      R0,SP,#+224
   \   00000048   ........           _BLF     ??KeyWord,??KeyWord??rA
   \   0000004C   E0208DE2           ADD      R2,SP,#+224
   \   00000050   0610A0E1           MOV      R1,R6
   \   00000054   C4008DE2           ADD      R0,SP,#+196
   \   00000058   ........           _BLF     `??operator+`,`??operator+??rA`
   \   0000005C   0720A0E1           MOV      R2,R7
   \   00000060   C4108DE2           ADD      R1,SP,#+196
   \   00000064   A8008DE2           ADD      R0,SP,#+168
   \   00000068   ........           _BLF     `??operator+`,`??operator+??rA`
   \   0000006C   ........           LDR      R0,??DataTable26  ;; ??npos
   \   00000070   0020A0E3           MOV      R2,#+0
   \   00000074   008090E5           LDR      R8,[R0, #+0]
   \   00000078   A8108DE2           ADD      R1,SP,#+168
   \   0000007C   0830A0E1           MOV      R3,R8
   \   00000080   1C008DE2           ADD      R0,SP,#+28
   \   00000084   ........           _BLF     ??append,??append??rA
   \   00000088   0020A0E3           MOV      R2,#+0
   \   0000008C   0110A0E3           MOV      R1,#+1
   \   00000090   A8008DE2           ADD      R0,SP,#+168
   \   00000094   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000098   0020A0E3           MOV      R2,#+0
   \   0000009C   0110A0E3           MOV      R1,#+1
   \   000000A0   C4008DE2           ADD      R0,SP,#+196
   \   000000A4   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000000A8   0020A0E3           MOV      R2,#+0
   \   000000AC   0110A0E3           MOV      R1,#+1
   \   000000B0   E0008DE2           ADD      R0,SP,#+224
   \   000000B4   ........           _BLF     ??_Tidy,??_Tidy??rA
    424                  if (DraftOffset) {
   \   000000B8   5C9194E5           LDR      R9,[R4, #+348]
   \   000000BC   0000A0E3           MOV      R0,#+0
   \   000000C0   0910A0E1           MOV      R1,R9
   \   000000C4   ........           _BLF     __fNotEqual,??__fNotEqual??rA
   \   000000C8   000050E3           CMP      R0,#+0
   \   000000CC   2D00000A           BEQ      ??SaveSettings_3
    425                      LocalString += TabStr2 + KeyWord(C_DRAFT_OFFSET) + FloatToAnsiString(DraftOffset) + CrLfStr;
   \   000000D0   0330A0E3           MOV      R3,#+3
   \   000000D4   0720A0E3           MOV      R2,#+7
   \   000000D8   0910A0E1           MOV      R1,R9
   \   000000DC   0D00A0E1           MOV      R0,SP
   \   000000E0   ........           _BLF     ??FloatToAnsiString,??FloatToAnsiString??rA
   \   000000E4   7710A0E3           MOV      R1,#+119
   \   000000E8   601E81E3           ORR      R1,R1,#0x600
   \   000000EC   8C008DE2           ADD      R0,SP,#+140
   \   000000F0   ........           _BLF     ??KeyWord,??KeyWord??rA
   \   000000F4   ........           LDR      R1,??DataTable27  ;; TabStr2
   \   000000F8   8C208DE2           ADD      R2,SP,#+140
   \   000000FC   70008DE2           ADD      R0,SP,#+112
   \   00000100   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000104   0D20A0E1           MOV      R2,SP
   \   00000108   70108DE2           ADD      R1,SP,#+112
   \   0000010C   54008DE2           ADD      R0,SP,#+84
   \   00000110   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000114   0720A0E1           MOV      R2,R7
   \   00000118   54108DE2           ADD      R1,SP,#+84
   \   0000011C   38008DE2           ADD      R0,SP,#+56
   \   00000120   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000124   0830A0E1           MOV      R3,R8
   \   00000128   0020A0E3           MOV      R2,#+0
   \   0000012C   38108DE2           ADD      R1,SP,#+56
   \   00000130   1C008DE2           ADD      R0,SP,#+28
   \   00000134   ........           _BLF     ??append,??append??rA
   \   00000138   0020A0E3           MOV      R2,#+0
   \   0000013C   0110A0E3           MOV      R1,#+1
   \   00000140   38008DE2           ADD      R0,SP,#+56
   \   00000144   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000148   0020A0E3           MOV      R2,#+0
   \   0000014C   0110A0E3           MOV      R1,#+1
   \   00000150   54008DE2           ADD      R0,SP,#+84
   \   00000154   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000158   0020A0E3           MOV      R2,#+0
   \   0000015C   0110A0E3           MOV      R1,#+1
   \   00000160   0D00A0E1           MOV      R0,SP
   \   00000164   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000168   0020A0E3           MOV      R2,#+0
   \   0000016C   0110A0E3           MOV      R1,#+1
   \   00000170   70008DE2           ADD      R0,SP,#+112
   \   00000174   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000178   0020A0E3           MOV      R2,#+0
   \   0000017C   0110A0E3           MOV      R1,#+1
   \   00000180   8C008DE2           ADD      R0,SP,#+140
   \   00000184   ........           _BLF     ??_Tidy,??_Tidy??rA
    426                  }
    427                  for (unsigned j = 0; j < AnalogInList.size(); j++) {
   \                     ??SaveSettings_3:
   \   00000188   0090A0E3           MOV      R9,#+0
   \   0000018C   4BAFA0E3           MOV      R10,#+300
   \   00000190   160000EA           B        ??SaveSettings_4
    428                      if (AnalogInList[j]) LocalString += AnalogInList[j]->SaveAISettings(1);
   \                     ??SaveSettings_5:
   \   00000194   04009AE7           LDR      R0,[R10, +R4]
   \   00000198   090180E0           ADD      R0,R0,R9, LSL #+2
   \   0000019C   001090E5           LDR      R1,[R0, #+0]
   \   000001A0   000051E3           CMP      R1,#+0
   \   000001A4   1000000A           BEQ      ??SaveSettings_6
   \   000001A8   0130A0E1           MOV      R3,R1
   \   000001AC   0300A0E1           MOV      R0,R3
   \   000001B0   A43093E5           LDR      R3,[R3, #+164]
   \   000001B4   0120A0E3           MOV      R2,#+1
   \   000001B8   6C3093E5           LDR      R3,[R3, #+108]
   \   000001BC   0D10A0E1           MOV      R1,SP
   \   000001C0   0FE0A0E1           MOV      LR,PC
   \   000001C4   13FF2FE1           BX       R3
   \   000001C8   0830A0E1           MOV      R3,R8
   \   000001CC   0020A0E3           MOV      R2,#+0
   \   000001D0   0D10A0E1           MOV      R1,SP
   \   000001D4   1C008DE2           ADD      R0,SP,#+28
   \   000001D8   ........           _BLF     ??append,??append??rA
   \   000001DC   0020A0E3           MOV      R2,#+0
   \   000001E0   0110A0E3           MOV      R1,#+1
   \   000001E4   0D00A0E1           MOV      R0,SP
   \   000001E8   ........           _BLF     ??_Tidy,??_Tidy??rA
    429                  }
   \                     ??SaveSettings_6:
   \   000001EC   019089E2           ADD      R9,R9,#+1
   \                     ??SaveSettings_4:
   \   000001F0   04008AE0           ADD      R0,R10,R4
   \   000001F4   041090E5           LDR      R1,[R0, #+4]
   \   000001F8   000090E5           LDR      R0,[R0, #+0]
   \   000001FC   000041E0           SUB      R0,R1,R0
   \   00000200   200159E1           CMP      R9,R0, LSR #+2
   \   00000204   E2FFFF3A           BCC      ??SaveSettings_5
    430                  LocalString += TabStr1 + KeyWord(C_DRAFT_END) + CrLfStr;
   \   00000208   641EA0E3           MOV      R1,#+1600
   \   0000020C   4D0F8DE2           ADD      R0,SP,#+308
   \   00000210   ........           _BLF     ??KeyWord,??KeyWord??rA
   \   00000214   4D2F8DE2           ADD      R2,SP,#+308
   \   00000218   0610A0E1           MOV      R1,R6
   \   0000021C   460F8DE2           ADD      R0,SP,#+280
   \   00000220   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000224   0720A0E1           MOV      R2,R7
   \   00000228   461F8DE2           ADD      R1,SP,#+280
   \   0000022C   FC008DE2           ADD      R0,SP,#+252
   \   00000230   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000234   0830A0E1           MOV      R3,R8
   \   00000238   0020A0E3           MOV      R2,#+0
   \   0000023C   FC108DE2           ADD      R1,SP,#+252
   \   00000240   1C008DE2           ADD      R0,SP,#+28
   \   00000244   ........           _BLF     ??append,??append??rA
   \   00000248   0020A0E3           MOV      R2,#+0
   \   0000024C   0110A0E3           MOV      R1,#+1
   \   00000250   FC008DE2           ADD      R0,SP,#+252
   \   00000254   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000258   0020A0E3           MOV      R2,#+0
   \   0000025C   0110A0E3           MOV      R1,#+1
   \   00000260   460F8DE2           ADD      R0,SP,#+280
   \   00000264   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000268   0020A0E3           MOV      R2,#+0
   \   0000026C   0110A0E3           MOV      R1,#+1
   \   00000270   4D0F8DE2           ADD      R0,SP,#+308
   \   00000274   ........           _BLF     ??_Tidy,??_Tidy??rA
    431                  LocalString += CrLfStr;
   \   00000278   0830A0E1           MOV      R3,R8
   \   0000027C   0020A0E3           MOV      R2,#+0
   \   00000280   0710A0E1           MOV      R1,R7
   \   00000284   1C008DE2           ADD      R0,SP,#+28
   \   00000288   ........           _BLF     ??append,??append??rA
    432                  SettingsString->AddString(LocalString);
   \   0000028C   1C108DE2           ADD      R1,SP,#+28
   \   00000290   540F8DE2           ADD      R0,SP,#+336
   \   00000294   ........           _BLF     ??string,??string??rA
   \   00000298   541F8DE2           ADD      R1,SP,#+336
   \   0000029C   0500A0E1           MOV      R0,R5
   \   000002A0   ........           _BLF     ??AddString,??AddString??rA
   \   000002A4   0020A0E3           MOV      R2,#+0
   \   000002A8   0110A0E3           MOV      R1,#+1
   \   000002AC   540F8DE2           ADD      R0,SP,#+336
   \   000002B0   ........           _BLF     ??_Tidy,??_Tidy??rA
    433              }
   \   000002B4   0020A0E3           MOV      R2,#+0
   \   000002B8   0110A0E3           MOV      R1,#+1
   \   000002BC   1C008DE2           ADD      R0,SP,#+28
   \   000002C0   ........           _BLF     ??_Tidy,??_Tidy??rA
    434          }
   \                     ??SaveSettings_2:
   \   000002C4   5BDF8DE2           ADD      SP,SP,#+364
   \   000002C8   F047BDE8           POP      {R4-R10,LR}
   \   000002CC   1EFF2FE1           BX       LR               ;; return
   \                     ??SaveSettings_1:
   \   000002D0   ........           DC32     ??WriteAll
    435          

   \                                 In segment CODE, align 4, keep-with-next
    436          bool PRODraft::RestoreSettings(TSNConfigString *SettingsString) {
   \                     ??RestoreSettings:
   \   00000000   F04F2DE9           PUSH     {R4-R11,LR}
    437              bool NoError = true;
    438              int ErrorLine = 0;
   \   00000004   B8939FE5           LDR      R9,??RestoreSettings_1  ;; NewLineStr
   \   00000008   B8A39FE5           LDR      R10,??RestoreSettings_1+0x4  ;; `?<Constant "Draft ">`
   \   0000000C   78DF4DE2           SUB      SP,SP,#+480
   \   00000010   0040A0E1           MOV      R4,R0
   \   00000014   0150A0E1           MOV      R5,R1
   \   00000018   0180A0E3           MOV      R8,#+1
   \   0000001C   0010A0E3           MOV      R1,#+0
   \   00000020   00108DE5           STR      R1,[SP, #+0]
   \   00000024   0160E0E1           MVN      R6,R1
    439              int Key;
    440              do {
    441                  AnsiString InputKeyWord = SettingsString->NextWord(ErrorLine);
   \                     ??RestoreSettings_2:
   \   00000028   0030A0E3           MOV      R3,#+0
   \   0000002C   0D20A0E1           MOV      R2,SP
   \   00000030   74108DE2           ADD      R1,SP,#+116
   \   00000034   0500A0E1           MOV      R0,R5
   \   00000038   ........           _BLF     ??NextWord,??NextWord??rA
    442                  if (ErrorLine) {
   \   0000003C   00009DE5           LDR      R0,[SP, #+0]
   \   00000040   000050E3           CMP      R0,#+0
   \   00000044   3900000A           BEQ      ??RestoreSettings_3
    443                      if (ErrorLine != EOF) {
   \   00000048   060050E1           CMP      R0,R6
   \   0000004C   D000000A           BEQ      ??RestoreSettings_4
    444                          RestoreSettingsWarning((AnsiString)"Draft " + Name + ":\nUnknown error started at line:" + (AnsiString)ErrorLine + NewLineStr);
   \   00000050   0010A0E1           MOV      R1,R0
   \   00000054   C8008DE2           ADD      R0,SP,#+200
   \   00000058   ........           _BLF     ??AnsiString_2,??AnsiString??rA_2
   \   0000005C   00B0A0E1           MOV      R11,R0
   \   00000060   0A10A0E1           MOV      R1,R10
   \   00000064   AC008DE2           ADD      R0,SP,#+172
   \   00000068   ........           _BLF     ??AnsiString,??AnsiString??rA
   \   0000006C   442084E2           ADD      R2,R4,#+68
   \   00000070   0010A0E1           MOV      R1,R0
   \   00000074   04008DE2           ADD      R0,SP,#+4
   \   00000078   ........           _BLF     `??operator+`,`??operator+??rA`
   \   0000007C   08208AE2           ADD      R2,R10,#+8
   \   00000080   04108DE2           ADD      R1,SP,#+4
   \   00000084   58008DE2           ADD      R0,SP,#+88
   \   00000088   ........           _BLF     `??operator+_1`,`??operator+??rA_1`
   \   0000008C   0B20A0E1           MOV      R2,R11
   \   00000090   58108DE2           ADD      R1,SP,#+88
   \   00000094   3C008DE2           ADD      R0,SP,#+60
   \   00000098   ........           _BLF     `??operator+`,`??operator+??rA`
   \   0000009C   0920A0E1           MOV      R2,R9
   \   000000A0   3C108DE2           ADD      R1,SP,#+60
   \   000000A4   20008DE2           ADD      R0,SP,#+32
   \   000000A8   ........           _BLF     `??operator+`,`??operator+??rA`
   \   000000AC   20108DE2           ADD      R1,SP,#+32
   \   000000B0   90008DE2           ADD      R0,SP,#+144
   \   000000B4   ........           _BLF     ??AnsiString_3,??AnsiString??rA_3
   \   000000B8   ........           _BLF     ??RestoreSettingsWarning,??RestoreSettingsWarning??rA
   \   000000BC   0020A0E3           MOV      R2,#+0
   \   000000C0   0110A0E3           MOV      R1,#+1
   \   000000C4   90008DE2           ADD      R0,SP,#+144
   \   000000C8   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000000CC   0020A0E3           MOV      R2,#+0
   \   000000D0   0110A0E3           MOV      R1,#+1
   \   000000D4   20008DE2           ADD      R0,SP,#+32
   \   000000D8   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000000DC   0020A0E3           MOV      R2,#+0
   \   000000E0   0110A0E3           MOV      R1,#+1
   \   000000E4   3C008DE2           ADD      R0,SP,#+60
   \   000000E8   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000000EC   0020A0E3           MOV      R2,#+0
   \   000000F0   0110A0E3           MOV      R1,#+1
   \   000000F4   C8008DE2           ADD      R0,SP,#+200
   \   000000F8   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000000FC   0020A0E3           MOV      R2,#+0
   \   00000100   0110A0E3           MOV      R1,#+1
   \   00000104   58008DE2           ADD      R0,SP,#+88
   \   00000108   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   0000010C   0020A0E3           MOV      R2,#+0
   \   00000110   0110A0E3           MOV      R1,#+1
   \   00000114   04008DE2           ADD      R0,SP,#+4
   \   00000118   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   0000011C   0020A0E3           MOV      R2,#+0
   \   00000120   0110A0E3           MOV      R1,#+1
   \   00000124   AC008DE2           ADD      R0,SP,#+172
   \                     ??RestoreSettings_5:
   \   00000128   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   0000012C   980000EA           B        ??RestoreSettings_4
    445                      }
    446                  } else {
    447                      Key = FindConfigKey(InputKeyWord);
   \                     ??RestoreSettings_3:
   \   00000130   74108DE2           ADD      R1,SP,#+116
   \   00000134   04008DE2           ADD      R0,SP,#+4
   \   00000138   ........           _BLF     ??string,??string??rA
   \   0000013C   04008DE2           ADD      R0,SP,#+4
   \   00000140   ........           _BLF     ??FindConfigKey,??FindConfigKey??rA
   \   00000144   0070A0E1           MOV      R7,R0
   \   00000148   0020A0E3           MOV      R2,#+0
   \   0000014C   0110A0E3           MOV      R1,#+1
   \   00000150   04008DE2           ADD      R0,SP,#+4
   \   00000154   ........           _BLF     ??_Tidy,??_Tidy??rA
    448                      switch (Key) {
   \   00000158   FA0F57E3           CMP      R7,#+1000
   \   0000015C   EA10A013           MOVNE    R1,#+234
   \   00000160   C01F8113           ORRNE    R1,R1,#0x300
   \   00000164   01005711           CMPNE    R7,R1
   \   00000168   FB0F5713           CMPNE    R7,#+1004
   \   0000016C   AF10A013           MOVNE    R1,#+175
   \   00000170   501E8113           ORRNE    R1,R1,#0x500
   \   00000174   01005711           CMPNE    R7,R1
   \   00000178   640E5713           CMPNE    R7,#+1600
   \   0000017C   6F00000A           BEQ      ??RestoreSettings_6
   \   00000180   C81081E2           ADD      R1,R1,#+200
   \   00000184   010057E1           CMP      R7,R1
   \   00000188   6E00000A           BEQ      ??RestoreSettings_7
   \   0000018C   721F81E2           ADD      R1,R1,#+456
   \   00000190   010057E1           CMP      R7,R1
   \   00000194   09108112           ADDNE    R1,R1,#+9
   \   00000198   01005711           CMPNE    R7,R1
   \   0000019C   01108113           ORRNE    R1,R1,#0x1
   \   000001A0   01005711           CMPNE    R7,R1
   \   000001A4   01108112           ADDNE    R1,R1,#+1
   \   000001A8   01005711           CMPNE    R7,R1
   \   000001AC   01108113           ORRNE    R1,R1,#0x1
   \   000001B0   01005711           CMPNE    R7,R1
   \   000001B4   01108112           ADDNE    R1,R1,#+1
   \   000001B8   01005711           CMPNE    R7,R1
   \   000001BC   01108113           ORRNE    R1,R1,#0x1
   \   000001C0   01005711           CMPNE    R7,R1
   \   000001C4   05108112           ADDNE    R1,R1,#+5
   \   000001C8   01005711           CMPNE    R7,R1
   \   000001CC   01108113           ORRNE    R1,R1,#0x1
   \   000001D0   01005711           CMPNE    R7,R1
   \   000001D4   0C108113           ORRNE    R1,R1,#0xC
   \   000001D8   01005711           CMPNE    R7,R1
   \   000001DC   1C108112           ADDNE    R1,R1,#+28
   \   000001E0   01005711           CMPNE    R7,R1
   \   000001E4   01108112           ADDNE    R1,R1,#+1
   \   000001E8   01005711           CMPNE    R7,R1
   \   000001EC   01108113           ORRNE    R1,R1,#0x1
   \   000001F0   01005711           CMPNE    R7,R1
   \   000001F4   06108112           ADDNE    R1,R1,#+6
   \   000001F8   01005711           CMPNE    R7,R1
   \   000001FC   01108112           ADDNE    R1,R1,#+1
   \   00000200   01005711           CMPNE    R7,R1
   \   00000204   5600000A           BEQ      ??RestoreSettings_8
   \   00000208   141081E2           ADD      R1,R1,#+20
   \   0000020C   010057E1           CMP      R7,R1
   \   00000210   B910A013           MOVNE    R1,#+185
   \   00000214   B01E8113           ORRNE    R1,R1,#0xB00
   \   00000218   01005711           CMPNE    R7,R1
   \   0000021C   4700000A           BEQ      ??RestoreSettings_6
    449                      default:
    450                          NoError = false;
    451                          RestoreSettingsWarning((AnsiString)"Draft " + Name + ":\nThe keyword " + InputKeyWord + " is not allowed here!! Line:" + (AnsiString)SettingsString->LineCount + NewLineStr);
   \   00000220   1C1095E5           LDR      R1,[R5, #+28]
   \   00000224   0080A0E3           MOV      R8,#+0
   \   00000228   710F8DE2           ADD      R0,SP,#+452
   \   0000022C   ........           _BLF     ??AnsiString_2,??AnsiString??rA_2
   \   00000230   00B0A0E1           MOV      R11,R0
   \   00000234   0A10A0E1           MOV      R1,R10
   \   00000238   6A0F8DE2           ADD      R0,SP,#+424
   \   0000023C   ........           _BLF     ??AnsiString,??AnsiString??rA
   \   00000240   0010A0E1           MOV      R1,R0
   \   00000244   442084E2           ADD      R2,R4,#+68
   \   00000248   630F8DE2           ADD      R0,SP,#+396
   \   0000024C   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000250   2C208AE2           ADD      R2,R10,#+44
   \   00000254   631F8DE2           ADD      R1,SP,#+396
   \   00000258   5C0F8DE2           ADD      R0,SP,#+368
   \   0000025C   ........           _BLF     `??operator+_1`,`??operator+??rA_1`
   \   00000260   74208DE2           ADD      R2,SP,#+116
   \   00000264   5C1F8DE2           ADD      R1,SP,#+368
   \   00000268   550F8DE2           ADD      R0,SP,#+340
   \   0000026C   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000270   3C208AE2           ADD      R2,R10,#+60
   \   00000274   551F8DE2           ADD      R1,SP,#+340
   \   00000278   4E0F8DE2           ADD      R0,SP,#+312
   \   0000027C   ........           _BLF     `??operator+_1`,`??operator+??rA_1`
   \   00000280   0B20A0E1           MOV      R2,R11
   \   00000284   4E1F8DE2           ADD      R1,SP,#+312
   \   00000288   470F8DE2           ADD      R0,SP,#+284
   \   0000028C   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000290   0920A0E1           MOV      R2,R9
   \   00000294   471F8DE2           ADD      R1,SP,#+284
   \   00000298   400F8DE2           ADD      R0,SP,#+256
   \   0000029C   ........           _BLF     `??operator+`,`??operator+??rA`
   \   000002A0   401F8DE2           ADD      R1,SP,#+256
   \   000002A4   E4008DE2           ADD      R0,SP,#+228
   \   000002A8   ........           _BLF     ??AnsiString_3,??AnsiString??rA_3
   \   000002AC   ........           _BLF     ??RestoreSettingsWarning,??RestoreSettingsWarning??rA
   \   000002B0   0020A0E3           MOV      R2,#+0
   \   000002B4   0110A0E3           MOV      R1,#+1
   \   000002B8   E4008DE2           ADD      R0,SP,#+228
   \   000002BC   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000002C0   0820A0E1           MOV      R2,R8
   \   000002C4   0110A0E3           MOV      R1,#+1
   \   000002C8   400F8DE2           ADD      R0,SP,#+256
   \   000002CC   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000002D0   0820A0E1           MOV      R2,R8
   \   000002D4   0110A0E3           MOV      R1,#+1
   \   000002D8   470F8DE2           ADD      R0,SP,#+284
   \   000002DC   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000002E0   0820A0E1           MOV      R2,R8
   \   000002E4   0110A0E3           MOV      R1,#+1
   \   000002E8   710F8DE2           ADD      R0,SP,#+452
   \   000002EC   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000002F0   0820A0E1           MOV      R2,R8
   \   000002F4   0110A0E3           MOV      R1,#+1
   \   000002F8   4E0F8DE2           ADD      R0,SP,#+312
   \   000002FC   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000300   0820A0E1           MOV      R2,R8
   \   00000304   0110A0E3           MOV      R1,#+1
   \   00000308   550F8DE2           ADD      R0,SP,#+340
   \   0000030C   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000310   0820A0E1           MOV      R2,R8
   \   00000314   0110A0E3           MOV      R1,#+1
   \   00000318   5C0F8DE2           ADD      R0,SP,#+368
   \   0000031C   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000320   0820A0E1           MOV      R2,R8
   \   00000324   0110A0E3           MOV      R1,#+1
   \   00000328   630F8DE2           ADD      R0,SP,#+396
   \   0000032C   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000330   0820A0E1           MOV      R2,R8
   \   00000334   0110A0E3           MOV      R1,#+1
   \   00000338   6A0F8DE2           ADD      R0,SP,#+424
   \   0000033C   79FFFFEA           B        ??RestoreSettings_5
    452                          break;
    453                      case C_AI_END:          // If AI type not found can continue with this
    454                      case C_AL_END:
    455                      case C_CT_END:
    456                      case C_PRO_END:
    457                      case C_PRO_END_COMMON:
    458                      case C_PRO_END_PRO:
    459                      case C_DRAFT_END:
    460                          Key = C_DRAFT_END;
   \                     ??RestoreSettings_6:
   \   00000340   647EA0E3           MOV      R7,#+1600
   \   00000344   120000EA           B        ??RestoreSettings_4
    461                          break;
    462                      case C_DRAFT_OFFSET:
    463                          DraftOffset = SettingsString->ReadDouble(ErrorLine);
   \                     ??RestoreSettings_7:
   \   00000348   0020A0E3           MOV      R2,#+0
   \   0000034C   0D10A0E1           MOV      R1,SP
   \   00000350   0500A0E1           MOV      R0,R5
   \   00000354   ........           _BLF     ??ReadDouble,??ReadDouble??rA
   \   00000358   ........           _BLF     __doubleToFloat,??__doubleToFloat??rA
   \   0000035C   5C0184E5           STR      R0,[R4, #+348]
   \   00000360   0B0000EA           B        ??RestoreSettings_4
    464                          break;
    465                      case C_AI_Pt1000            :
    466                      case C_AI_P906_0111         :
    467                      case C_AI_ATM_N_Ex          :
    468                      case C_AI_ATM_Ex            :
    469                      case C_AI_ATM_Ex_H          :
    470                      case C_AI_ATM_N_Ex_0_1      :
    471          			case C_AI_APT500		  	:
    472          			case C_AI_SPT900		  	:
    473                      case C_AI_Gen_4_20mA        :
    474                      case C_AI_DIFF_PRESSURE_mA  :
    475                      case C_AI_MB_Press_4_20mA   :
    476                      case C_AI_MB_DiffPre_4_20mA :
    477                      case C_AI_MetriTape         :
    478                      case C_AI_HSH_LNG_Float     :
    479                      case C_AI_AirPurge          :
    480                          {
    481                              int AIIDNumber = SettingsString->ReadInteger(ErrorLine);
   \                     ??RestoreSettings_8:
   \   00000364   0020A0E3           MOV      R2,#+0
   \   00000368   0D10A0E1           MOV      R1,SP
   \   0000036C   0500A0E1           MOV      R0,R5
   \   00000370   ........           _BLF     ??ReadInteger,??ReadInteger??rA
    482                              AnalogInput *AnalogInPtr = (AnalogInput *)FindObject(AIIDNumber);
   \   00000374   ........           _BLF     ??FindObject,??FindObject??rA
   \   00000378   0020B0E1           MOVS     R2,R0
    483                              if (AnalogInPtr) AnalogInPtr->RestoreAISettings(SettingsString);
   \   0000037C   0500000A           BEQ      ??RestoreSettings_9
   \   00000380   A42092E5           LDR      R2,[R2, #+164]
   \   00000384   0510A0E1           MOV      R1,R5
   \   00000388   702092E5           LDR      R2,[R2, #+112]
   \   0000038C   0FE0A0E1           MOV      LR,PC
   \   00000390   12FF2FE1           BX       R2
    484                          }
    485                          break;
    486                      }
    487                  }
    488              }while (NoError && (ErrorLine != EOF) && (Key != C_DRAFT_END));
   \                     ??RestoreSettings_4:
   \   00000394   0020A0E3           MOV      R2,#+0
   \                     ??RestoreSettings_9:
   \   00000398   0110A0E3           MOV      R1,#+1
   \   0000039C   74008DE2           ADD      R0,SP,#+116
   \   000003A0   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000003A4   000058E3           CMP      R8,#+0
   \   000003A8   00009D15           LDRNE    R0,[SP, #+0]
   \   000003AC   06005011           CMPNE    R0,R6
   \   000003B0   640E5713           CMPNE    R7,#+1600
   \   000003B4   1BFFFF1A           BNE      ??RestoreSettings_2
    489              return (NoError);
   \   000003B8   0800A0E1           MOV      R0,R8
   \   000003BC   78DF8DE2           ADD      SP,SP,#+480
   \   000003C0   ........           B        ?Subroutine27
   \                     ??RestoreSettings_1:
   \   000003C4   ........           DC32     NewLineStr
   \   000003C8   ........           DC32     `?<Constant "Draft ">`
    490          }
    491          
    492          
    493          //---------------------------------------------------------------------------
    494          

   \                                 In segment CODE, align 4, keep-with-next
    495          void PRODraft::Calculate(void) {
   \                     ??Calculate:
   \   00000000   F3412DE9           PUSH     {R0,R1,R4-R8,LR}
   \   00000004   0040A0E1           MOV      R4,R0
    496              bool  HasResult = false;
    497          
    498              if (DataFromOther) {
   \   00000008   4401D4E5           LDRB     R0,[R4, #+324]
   \   0000000C   0050A0E3           MOV      R5,#+0
   \   00000010   000050E3           CMP      R0,#+0
    499                  DraftStatus = GETVAL_NO_ERR;
   \   00000014   7C518415           STRNE    R5,[R4, #+380]
    500                  HasResult   = true;
   \   00000018   4800001A           BNE      ??Calculate_3
    501              } else if (DraftSensor) {
   \   0000001C   647194E5           LDR      R7,[R4, #+356]
   \   00000020   000057E3           CMP      R7,#+0
   \   00000024   9100000A           BEQ      ??Calculate_4
    502                  if (HasMetriTapeSns) {
   \   00000028   5801D4E5           LDRB     R0,[R4, #+344]
   \   0000002C   000050E3           CMP      R0,#+0
   \   00000030   380097E5           LDR      R0,[R7, #+56]
   \   00000034   1900000A           BEQ      ??Calculate_5
    503                      if (DraftSensor->ActiveAlarms) {
   \   00000038   000050E3           CMP      R0,#+0
   \   0000003C   0200000A           BEQ      ??Calculate_6
    504                          DraftStatus = GETVAL_HW_ALARM;
   \                     ??Calculate_7:
   \   00000040   0F00A0E3           MOV      R0,#+15
   \   00000044   7C0184E5           STR      R0,[R4, #+380]
   \   00000048   880000EA           B        ??Calculate_4
    505                      } else {
    506                          float tmpLevel = DraftSensor->Calculate();
   \                     ??Calculate_6:
   \   0000004C   A41097E5           LDR      R1,[R7, #+164]
   \   00000050   0700A0E1           MOV      R0,R7
   \   00000054   601091E5           LDR      R1,[R1, #+96]
   \   00000058   0FE0A0E1           MOV      LR,PC
   \   0000005C   11FF2FE1           BX       R1
   \   00000060   0060A0E1           MOV      R6,R0
    507                          if (tmpLevel >= LEVEL_NOISE_LIMIT_METRI_TAPE) {
   \   00000064   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   00000068   20229FE5           LDR      R2,??Calculate_8  ;; 0xffffffff9999999a
   \   0000006C   20329FE5           LDR      R3,??Calculate_8+0x4  ;; 0x3fa99999
   \   00000070   ........           _BLF     __dGreaterEqual,??__dGreaterEqual??rA
   \   00000074   000050E3           CMP      R0,#+0
    508                              Draft = tmpLevel + DraftSensor->Distance - DraftOffset;
   \   00000078   64019415           LDRNE    R0,[R4, #+356]
   \   0000007C   0610A011           MOVNE    R1,R6
   \   00000080   2C019015           LDRNE    R0,[R0, #+300]
   \   00000084   2900001A           BNE      ??Calculate_9
    509                              HasResult = true;
    510                          } else {
    511                              DraftStatus = GETVAL_DRY_SENSOR;
   \                     ??Calculate_10:
   \   00000088   0800A0E3           MOV      R0,#+8
   \   0000008C   7C0184E5           STR      R0,[R4, #+380]
    512                              DraftAtMark = 0.0;
   \   00000090   0000A0E3           MOV      R0,#+0
   \   00000094   740184E5           STR      R0,[R4, #+372]
    513                              DraftAtPP   = 0.0;
   \   00000098   780184E5           STR      R0,[R4, #+376]
   \   0000009C   730000EA           B        ??Calculate_4
    514                          }
    515                      }
    516                  } else {
    517                      if (DraftSensor->ActiveAlarms) {
   \                     ??Calculate_5:
   \   000000A0   000050E3           CMP      R0,#+0
   \   000000A4   E5FFFF1A           BNE      ??Calculate_7
    518                          DraftStatus = GETVAL_HW_ALARM;
    519                      } else {
    520                          float SWDensity = (PROSystemData::SeaWaterDensity - D_AIR_ADJ);
   \   000000A8   E8019FE5           LDR      R0,??Calculate_8+0x8  ;; ??SeaWaterDensity
   \   000000AC   000090E5           LDR      R0,[R0, #+0]
   \   000000B0   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   000000B4   E0219FE5           LDR      R2,??Calculate_8+0xC  ;; 0x1a36e2f
   \   000000B8   E0319FE5           LDR      R3,??Calculate_8+0x10  ;; 0xffffffffbf5205bc
   \   000000BC   ........           _BLF     __dAdd,??__dAdd??rA
   \   000000C0   ........           _BLF     __doubleToFloat,??__doubleToFloat??rA
   \   000000C4   0060A0E1           MOV      R6,R0
    521                          if (SWDensity < MIN_SW_DENSITY) {
   \   000000C8   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   000000CC   D0219FE5           LDR      R2,??Calculate_8+0x14  ;; 0x66666666
   \   000000D0   D0319FE5           LDR      R3,??Calculate_8+0x18  ;; 0x3fee6666
   \   000000D4   ........           _BLF     __dLess,??__dLess??rA
    522                              SWDensity = DNS_SEA_WATER;
    523                          }
    524                          float Pressure = DraftSensor->Calculate();
   \   000000D8   A41097E5           LDR      R1,[R7, #+164]
   \   000000DC   000050E3           CMP      R0,#+0
   \   000000E0   601091E5           LDR      R1,[R1, #+96]
   \   000000E4   C0619F15           LDRNE    R6,??Calculate_8+0x1C  ;; 0x3f833333
   \   000000E8   0700A0E1           MOV      R0,R7
   \   000000EC   0FE0A0E1           MOV      LR,PC
   \   000000F0   11FF2FE1           BX       R1
   \   000000F4   0070A0E1           MOV      R7,R0
    525                          if (Pressure >= LEVEL_NOISE_LIMIT_DRAFT) {
   \   000000F8   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   000000FC   8C219FE5           LDR      R2,??Calculate_8  ;; 0xffffffff9999999a
   \   00000100   A8319FE5           LDR      R3,??Calculate_8+0x20  ;; 0x3fb99999
   \   00000104   ........           _BLF     __dGreaterEqual,??__dGreaterEqual??rA
   \   00000108   000050E3           CMP      R0,#+0
   \   0000010C   DDFFFF0A           BEQ      ??Calculate_10
    526                              Draft = Pressure / SWDensity * PROTank::GravityCorrection + DraftSensor->Distance - DraftOffset;
   \   00000110   0700A0E1           MOV      R0,R7
   \   00000114   0610A0E1           MOV      R1,R6
   \   00000118   ........           _BLF     __fDiv,??__fDiv??rA
   \   0000011C   90119FE5           LDR      R1,??Calculate_8+0x24  ;; ??GravityCorrection
   \   00000120   001091E5           LDR      R1,[R1, #+0]
   \   00000124   ........           _BLF     __fMul,??__fMul??rA
   \   00000128   641194E5           LDR      R1,[R4, #+356]
   \   0000012C   2C1191E5           LDR      R1,[R1, #+300]
   \                     ??Calculate_9:
   \   00000130   ........           _BLF     __fAdd,??__fAdd??rA
   \   00000134   5C1194E5           LDR      R1,[R4, #+348]
   \   00000138   ........           _BLF     __fSub,??__fSub??rA
   \   0000013C   600184E5           STR      R0,[R4, #+352]
    527                              HasResult = true;
    528                          } else {
    529                              DraftStatus = GETVAL_DRY_SENSOR;
    530                              DraftAtMark = 0.0;
    531                              DraftAtPP   = 0.0;
    532                          }
    533                      }
    534                  }
    535              }
    536          
    537              if (HasResult) {
    538                  if (MarkTable) {
   \                     ??Calculate_3:
   \   00000140   D00194E5           LDR      R0,[R4, #+464]
   \   00000144   000050E3           CMP      R0,#+0
   \   00000148   1400000A           BEQ      ??Calculate_11
    539                      if (PRODraftSystem::PRODraftSysPtr->GlobalRefSystem) {
   \   0000014C   ........           LDR      R2,??DataTable28  ;; ??PRODraftSysPtr
   \   00000150   601194E5           LDR      R1,[R4, #+352]
   \   00000154   002092E5           LDR      R2,[R2, #+0]
   \   00000158   A821D2E5           LDRB     R2,[R2, #+424]
   \   0000015C   000052E3           CMP      R2,#+0
   \   00000160   0B00000A           BEQ      ??Calculate_12
    540                          float tableDLRef, tableDTRef;
    541                          MarkTable->Calculate(Draft, &tableDLRef, &tableDTRef);
   \   00000164   04308DE2           ADD      R3,SP,#+4
   \   00000168   0D20A0E1           MOV      R2,SP
   \   0000016C   ........           _BLF     ??Calculate_2,??Calculate??rA
    542                          DLRef1 = tableDLRef  - DSnsToMid;
   \   00000170   00009DE5           LDR      R0,[SP, #+0]
   \   00000174   981194E5           LDR      R1,[R4, #+408]
   \   00000178   ........           _BLF     __fSub,??__fSub??rA
   \   0000017C   B00184E5           STR      R0,[R4, #+432]
    543                          DTRef1 = tableDTRef  - DSnsToCL;
   \   00000180   04009DE5           LDR      R0,[SP, #+4]
   \   00000184   9C1194E5           LDR      R1,[R4, #+412]
   \   00000188   ........           _BLF     __fSub,??__fSub??rA
   \   0000018C   B40184E5           STR      R0,[R4, #+436]
   \   00000190   020000EA           B        ??Calculate_11
    544                      } else {
    545                          MarkTable->Calculate(Draft, &DLRef1, &DTRef1);
   \                     ??Calculate_12:
   \   00000194   6D3F84E2           ADD      R3,R4,#+436
   \   00000198   6C2F84E2           ADD      R2,R4,#+432
   \   0000019C   ........           _BLF     ??Calculate_2,??Calculate??rA
    546                      }
    547                  }
    548                  switch (Type) {
   \                     ??Calculate_11:
   \   000001A0   A00094E5           LDR      R0,[R4, #+160]
   \   000001A4   ........           LDR      R6,??DataTable31  ;; ??DraftFilterDegree
   \   000001A8   4B0040E2           SUB      R0,R0,#+75
   \   000001AC   600E40E2           SUB      R0,R0,#+1536
   \   000001B0   070050E3           CMP      R0,#+7
   \   000001B4   2C00008A           BHI      ??Calculate_13
   \   000001B8   011F8FE2           ADR      R1,??Calculate_1
   \   000001BC   0010D1E7           LDRB     R1,[R1, R0]
   \   000001C0   01F18FE0           ADD      PC,PC,R1, LSL #+2
   \                     ??Calculate_1:
   \   000001C4   011C1C01           DC8      +1,+28,+28,+1
   \   000001C8   01010101           DC8      +1,+1,+1,+1
    549                  case C_DRAFT_DF:
    550                  case C_DRAFT_DA:
    551                  case C_DRAFT_DAP:
    552                  case C_DRAFT_DAS:
    553                  case C_DRAFT_DFP:
    554                  case C_DRAFT_DFS:
    555                      {
    556                          float NewDraftAtMark = Draft + TrimListCorrectionRef();
   \                     ??Calculate_14:
   \   000001CC   0400A0E1           MOV      R0,R4
   \   000001D0   ........           BL       ??TrimListCorrectionRef
   \   000001D4   0010A0E1           MOV      R1,R0
   \   000001D8   600194E5           LDR      R0,[R4, #+352]
   \   000001DC   ........           _BLF     __fAdd,??__fAdd??rA
   \   000001E0   0070A0E1           MOV      R7,R0
    557                          float NewDraftAtPP   = Draft + TrimListCorrectionFC();
   \   000001E4   0400A0E1           MOV      R0,R4
   \   000001E8   ........           BL       ??TrimListCorrectionFC
   \   000001EC   0010A0E1           MOV      R1,R0
   \   000001F0   600194E5           LDR      R0,[R4, #+352]
   \   000001F4   ........           _BLF     __fAdd,??__fAdd??rA
   \   000001F8   0080A0E1           MOV      R8,R0
    558                          DraftAtMark  = FilterVal(DraftAtMark, NewDraftAtMark, DraftFilterDegree);
   \   000001FC   000096E5           LDR      R0,[R6, #+0]
   \   00000200   ........           _BLF     __longToFloat,??__longToFloat??rA
   \   00000204   0020A0E1           MOV      R2,R0
   \   00000208   740194E5           LDR      R0,[R4, #+372]
   \   0000020C   0710A0E1           MOV      R1,R7
   \   00000210   ........           _BLF     ??FilterVal,??FilterVal??rA
   \   00000214   740184E5           STR      R0,[R4, #+372]
    559                          DraftAtPP    = FilterVal(DraftAtPP, NewDraftAtPP, DraftFilterDegree);
   \   00000218   000096E5           LDR      R0,[R6, #+0]
   \   0000021C   ........           _BLF     __longToFloat,??__longToFloat??rA
   \   00000220   0020A0E1           MOV      R2,R0
   \   00000224   780194E5           LDR      R0,[R4, #+376]
   \   00000228   0810A0E1           MOV      R1,R8
   \   0000022C   ........           _BLF     ??FilterVal,??FilterVal??rA
   \   00000230   780184E5           STR      R0,[R4, #+376]
   \   00000234   0C0000EA           B        ??Calculate_13
    560                      }
    561                      break;
    562                  case C_DRAFT_DP:
    563                  case C_DRAFT_DS:
    564                      {
    565                          float NewDraftAtPP   = Draft + TrimListCorrectionFC();
   \                     ??Calculate_15:
   \   00000238   0400A0E1           MOV      R0,R4
   \   0000023C   ........           BL       ??TrimListCorrectionFC
   \   00000240   601194E5           LDR      R1,[R4, #+352]
   \   00000244   ........           _BLF     __fAdd,??__fAdd??rA
   \   00000248   0070A0E1           MOV      R7,R0
    566                          DraftAtPP = FilterVal(DraftAtPP, NewDraftAtPP, DraftFilterDegree);
   \   0000024C   000096E5           LDR      R0,[R6, #+0]
   \   00000250   ........           _BLF     __longToFloat,??__longToFloat??rA
   \   00000254   0020A0E1           MOV      R2,R0
   \   00000258   780194E5           LDR      R0,[R4, #+376]
   \   0000025C   0710A0E1           MOV      R1,R7
   \   00000260   ........           _BLF     ??FilterVal,??FilterVal??rA
   \   00000264   780184E5           STR      R0,[R4, #+376]
    567                          DraftAtMark  = DraftAtPP;
   \   00000268   740184E5           STR      R0,[R4, #+372]
    568                      }
    569                      break;
    570                  }
    571                  DraftStatus = GETVAL_NO_ERR;
   \                     ??Calculate_13:
   \   0000026C   7C5184E5           STR      R5,[R4, #+380]
    572              }
    573              SendData();
   \                     ??Calculate_4:
   \   00000270   A42094E5           LDR      R2,[R4, #+164]
   \   00000274   6510A0E3           MOV      R1,#+101
   \   00000278   402092E5           LDR      R2,[R2, #+64]
   \   0000027C   0400A0E1           MOV      R0,R4
   \   00000280   0FE0A0E1           MOV      LR,PC
   \   00000284   12FF2FE1           BX       R2
    574          }
   \   00000288   F341BDE8           POP      {R0,R1,R4-R8,LR}
   \   0000028C   1EFF2FE1           BX       LR               ;; return
   \                     ??Calculate_8:
   \   00000290   9A999999           DC32     0xffffffff9999999a
   \   00000294   9999A93F           DC32     0x3fa99999
   \   00000298   ........           DC32     ??SeaWaterDensity
   \   0000029C   2F6EA301           DC32     0x1a36e2f
   \   000002A0   BC0552BF           DC32     0xffffffffbf5205bc
   \   000002A4   66666666           DC32     0x66666666
   \   000002A8   6666EE3F           DC32     0x3fee6666
   \   000002AC   3333833F           DC32     0x3f833333
   \   000002B0   9999B93F           DC32     0x3fb99999
   \   000002B4   ........           DC32     ??GravityCorrection
    575          

   \                                 In segment CODE, align 4, keep-with-next
    576          float PRODraft::TrimListCorrectionRef(void) {
   \                     ??TrimListCorrectionRef:
   \   00000000   00402DE9           PUSH     {LR}
    577              return PROSystemData::TrimListCorrection(DLRef1, DTRef1);
   \   00000004   B41190E5           LDR      R1,[R0, #+436]
   \   00000008   B00190E5           LDR      R0,[R0, #+432]
   \   0000000C   ........           B        ?Subroutine25
    578          }

   \                                 In segment CODE, align 4, keep-with-next
   \                     ?Subroutine25:
   \   00000000   ........           _BLF     ??TrimListCorrection,??TrimListCorrection??rA
   \                     ??Subroutine25_0:
   \   00000004   0040BDE8           POP      {LR}
   \   00000008   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
    579          float PRODraft::TrimListCorrectionFC(void) {
   \                     ??TrimListCorrectionFC:
   \   00000000   00402DE9           PUSH     {LR}
    580              return PROSystemData::TrimListCorrection(DLFCenter, DTFCenter);
   \   00000004   C41190E5           LDR      R1,[R0, #+452]
   \   00000008   C00190E5           LDR      R0,[R0, #+448]
   \   0000000C                      REQUIRE ?Subroutine25
   \   0000000C                      ;; // Fall through to label ?Subroutine25
    581          }
    582          
    583          

   \                                 In segment CODE, align 4, keep-with-next
    584          int  PRODraft::GetCalcVal(float *DraftPP, float *DraftMark) {
    585              if (DraftPP) {
   \                     ??GetCalcVal:
   \   00000000   000051E3           CMP      R1,#+0
    586                  *DraftPP = DraftAtPP;
   \   00000004   78319015           LDRNE    R3,[R0, #+376]
   \   00000008   00308115           STRNE    R3,[R1, #+0]
    587              }
    588              if (DraftMark) {
   \   0000000C   000052E3           CMP      R2,#+0
    589                  *DraftMark = DraftAtMark;
   \   00000010   74119015           LDRNE    R1,[R0, #+372]
   \   00000014   00108215           STRNE    R1,[R2, #+0]
    590              }
    591              return (DraftStatus);
   \   00000018   7C0190E5           LDR      R0,[R0, #+380]
   \   0000001C   1EFF2FE1           BX       LR               ;; return
    592          }
    593          
    594          
    595          ///////////////////////////////////////////////////////////////
    596          //
    597          // Routines for the librarian
    598          //
    599          ///////////////////////////////////////////////////////////////
    600          

   \                                 In segment CODE, align 4, keep-with-next
    601          int PRODraft::GetValue(int ValueId, int Index, float &MyRetValue,  int &DecPnt, int &Unit) {
   \                     ??GetValue:
   \   00000000   F0432DE9           PUSH     {R4-R9,LR}
   \   00000004   1CE09DE5           LDR      LR,[SP, #+28]
   \   00000008   20509DE5           LDR      R5,[SP, #+32]
   \   0000000C   00C0A0E1           MOV      R12,R0
    602              int Status = GETVAL_NO_ERR;
    603              switch (ValueId) {
   \   00000010   64419CE5           LDR      R4,[R12, #+356]
   \   00000014   0000A0E3           MOV      R0,#+0
   \   00000018   0160A0E3           MOV      R6,#+1
   \   0000001C   0370A0E3           MOV      R7,#+3
   \   00000020   2890A0E3           MOV      R9,#+40
   \   00000024   409E89E3           ORR      R9,R9,#0x400
   \   00000028   090051E1           CMP      R1,R9
   \   0000002C   1900000A           BEQ      ??GetValue_2
   \   00000030   049089E3           ORR      R9,R9,#0x4
   \   00000034   090051E1           CMP      R1,R9
   \   00000038   10908913           ORRNE    R9,R9,#0x10
   \   0000003C   09005111           CMPNE    R1,R9
   \   00000040   0A908912           ADDNE    R9,R9,#+10
   \   00000044   09005111           CMPNE    R1,R9
   \   00000048   459E8713           ORRNE    R9,R7,#0x450
   \   0000004C   09005111           CMPNE    R1,R9
   \   00000050   469E8613           ORRNE    R9,R6,#0x460
   \   00000054   09005111           CMPNE    R1,R9
   \   00000058   1D00000A           BEQ      ??GetValue_3
   \   0000005C   219089E2           ADD      R9,R9,#+33
   \   00000060   090051E1           CMP      R1,R9
   \   00000064   02908912           ADDNE    R9,R9,#+2
   \   00000068   09005111           CMPNE    R1,R9
   \   0000006C   0E00000A           BEQ      ??GetValue_4
   \   00000070   FB90A0E3           MOV      R9,#+251
   \   00000074   509E89E3           ORR      R9,R9,#0x500
   \   00000078   090051E1           CMP      R1,R9
   \   0000007C   3800001A           BNE      ??GetValue_5
    604              case SVT_DRAFT:
    605                  DecPnt     = 3;
   \   00000080   00708EE5           STR      R7,[LR, #+0]
    606                  Unit       = LENGTH_UNIT;
   \   00000084   006085E5           STR      R6,[R5, #+0]
    607                  MyRetValue = Draft;
   \   00000088   60019CE5           LDR      R0,[R12, #+352]
   \   0000008C   000083E5           STR      R0,[R3, #+0]
    608                  Status     = DraftStatus;
   \   00000090   7C019CE5           LDR      R0,[R12, #+380]
   \   00000094   370000EA           B        ??GetValue_6
    609                  break;
    610              case SVT_LEVEL_OFFSET:
    611                  DecPnt     = 3;
   \                     ??GetValue_2:
   \   00000098   00708EE5           STR      R7,[LR, #+0]
    612                  Unit       = LENGTH_UNIT;
   \   0000009C   006085E5           STR      R6,[R5, #+0]
    613                  MyRetValue = DraftOffset;
   \   000000A0   5C119CE5           LDR      R1,[R12, #+348]
   \   000000A4   001083E5           STR      R1,[R3, #+0]
    614                  Status     = GETVAL_NO_ERR;
   \   000000A8   320000EA           B        ??GetValue_6
    615                  break;
    616              case SVT_AP_LEVEL_PRESSURE_MB   :
    617              case SVT_AP_LEVEL_PRESSURE_MH2O :
    618                  if (DraftSensor) {
   \                     ??GetValue_4:
   \   000000AC   000054E3           CMP      R4,#+0
   \   000000B0   3000000A           BEQ      ??GetValue_6
    619                      Status = DraftSensor->GetValue(ValueId, Index, MyRetValue,  DecPnt, Unit);
   \   000000B4   20002DE9           PUSH     {R5}
   \   000000B8   00402DE9           PUSH     {LR}
   \                     ??GetValue_7:
   \   000000BC   0400A0E1           MOV      R0,R4
   \   000000C0   A44094E5           LDR      R4,[R4, #+164]
   \   000000C4   244094E5           LDR      R4,[R4, #+36]
   \   000000C8   0FE0A0E1           MOV      LR,PC
   \   000000CC   14FF2FE1           BX       R4
   \   000000D0   270000EA           B        ??GetValue_8
    620                  }
    621                  break;
    622          
    623              case SVT_BP :
    624              case SVT_BP_OFFSET :
    625              case SVT_BP_GAIN :
    626              case SVT_BP_ENABLE :
    627              case SVT_BP_SERIAL_NO :
    628                  {
    629                      Unit = PRESSURE_UNIT1;
   \                     ??GetValue_3:
   \   000000D4   0600A0E3           MOV      R0,#+6
   \   000000D8   000085E5           STR      R0,[R5, #+0]
    630                      DecPnt = 3;
   \   000000DC   00708EE5           STR      R7,[LR, #+0]
    631          			int  SnsValId = SVT_NOT_DEFINED;
   \   000000E0   0000A0E3           MOV      R0,#+0
    632                      switch (ValueId) {
   \   000000E4   2C60A0E3           MOV      R6,#+44
   \   000000E8   406E86E3           ORR      R6,R6,#0x400
   \   000000EC   060051E1           CMP      R1,R6
   \   000000F0   1000000A           BEQ      ??GetValue_9
   \   000000F4   106086E3           ORR      R6,R6,#0x10
   \   000000F8   060051E1           CMP      R1,R6
   \   000000FC   0B00000A           BEQ      ??GetValue_10
   \   00000100   0A6086E2           ADD      R6,R6,#+10
   \   00000104   060051E1           CMP      R1,R6
   \   00000108   0600000A           BEQ      ??GetValue_11
   \   0000010C   0D6086E2           ADD      R6,R6,#+13
   \   00000110   060051E1           CMP      R1,R6
   \   00000114   0900000A           BEQ      ??GetValue_12
   \   00000118   0E6086E2           ADD      R6,R6,#+14
   \   0000011C   060051E1           CMP      R1,R6
   \   00000120   5B008602           ADDEQ    R0,R6,#+91
   \   00000124   060000EA           B        ??GetValue_13
    633          			case SVT_BP_GAIN :
    634          				SnsValId = SVT_AI_GAIN;
   \                     ??GetValue_11:
   \   00000128   6E0086E2           ADD      R0,R6,#+110
   \   0000012C   040000EA           B        ??GetValue_13
    635                          break;
    636                      case SVT_BP_OFFSET :
    637                          SnsValId = SVT_AI_OFFSET;
   \                     ??GetValue_10:
   \   00000130   790086E2           ADD      R0,R6,#+121
   \   00000134   020000EA           B        ??GetValue_13
    638                          break;
    639                      case SVT_BP :
    640                          SnsValId = SVT_AI_CALC_VAL;
   \                     ??GetValue_9:
   \   00000138   8C0086E2           ADD      R0,R6,#+140
   \   0000013C   000000EA           B        ??GetValue_13
    641                          break;
    642                      case SVT_BP_ENABLE :
    643                          SnsValId = SVT_AI_ENABLE;
   \                     ??GetValue_12:
   \   00000140   600086E2           ADD      R0,R6,#+96
    644                          break;
    645                      case SVT_BP_SERIAL_NO :
    646                          SnsValId = SVT_AI_SERIAL_NUMBER;
    647                          break;
    648          
    649                      }
    650                      if (DraftSensor) {
   \                     ??GetValue_13:
   \   00000144   000054E3           CMP      R4,#+0
   \   00000148   0300000A           BEQ      ??GetValue_14
    651                          Status = DraftSensor->GetValue( SnsValId, Index, MyRetValue, DecPnt, Unit );
   \   0000014C   20002DE9           PUSH     {R5}
   \   00000150   00402DE9           PUSH     {LR}
   \   00000154   0010A0E1           MOV      R1,R0
   \   00000158   D7FFFFEA           B        ??GetValue_7
    652                      } else {
    653                          Status = GETVAL_NOT_AVAILABLE;
   \                     ??GetValue_14:
   \   0000015C   0100A0E3           MOV      R0,#+1
   \   00000160   040000EA           B        ??GetValue_6
    654                      }
    655                  }
    656                  break;
    657              default:
    658                  Status = PRogramObject::GetValue(ValueId, Index, MyRetValue,  DecPnt, Unit);
   \                     ??GetValue_5:
   \   00000164   20002DE9           PUSH     {R5}
   \   00000168   00402DE9           PUSH     {LR}
   \   0000016C   0C00A0E1           MOV      R0,R12
   \   00000170   ........           _BLF     ??GetValue_1,??GetValue??rA
   \                     ??GetValue_8:
   \   00000174   08D08DE2           ADD      SP,SP,#+8        ;; stack cleaning
    659                  break;
    660              }
    661              return (Status);
   \                     ??GetValue_6:
   \   00000178   ........           B        ?Subroutine28
    662          }

   \                                 In segment CODE, align 4, keep-with-next
   \                     ?Subroutine28:
   \   00000000   F043BDE8           POP      {R4-R9,LR}
   \   00000004   1EFF2FE1           BX       LR               ;; return
   \                     ??Subroutine28_0:
   \   00000008   302E3000           DC8      "0.0"
   \   0000000C   ........           DC32     ??MaxSummerDraft
   \   00000010   ........           DC32     `?<Constant "Zero set warnings:">`
    663          

   \                                 In segment CODE, align 4, keep-with-next
    664          int PRODraft::GetStringValue(int ValueId, int Index, AnsiString &MyString) {
   \                     ??GetStringValue:
   \   00000000   00402DE9           PUSH     {LR}
    665              int Status = GETVAL_NO_ERR;
    666              //switch ( ValueId ) {
    667              //  default:
    668              Status = PRogramObject::GetStringValue(ValueId, Index, MyString);
    669              //      break;
    670              //}
    671              return (Status);
   \   00000004   ........           _BLF     ??GetStringValue_1,??GetStringValue??rA
   \   00000008   ........           B        ??Subroutine25_0
    672          }
    673          
    674          

   \                                 In segment CODE, align 4, keep-with-next
    675          int PRODraft::PutValue(int ValueId, int Index, AnsiString NewValue, bool Local, int *UnitId) {
   \                     ??PutValue:
   \   00000000   F0432DE9           PUSH     {R4-R9,LR}
    676              int Status = E_NO_ERR, ValUnitId = NO_UNIT;
    677              switch (ValueId) {
   \   00000004   ........           LDR      R9,??Subroutine28_0+0x4  ;; ??MaxSummerDraft
   \   00000008   B0D04DE2           SUB      SP,SP,#+176
   \   0000000C   CC70DDE5           LDRB     R7,[SP, #+204]
   \   00000010   D0509DE5           LDR      R5,[SP, #+208]
   \   00000014   0040A0E1           MOV      R4,R0
   \   00000018   0180A0E1           MOV      R8,R1
   \   0000001C   0260A0E1           MOV      R6,R2
   \   00000020   0310A0E1           MOV      R1,R3
   \   00000024   0020A0E3           MOV      R2,#+0
   \   00000028   00208DE5           STR      R2,[SP, #+0]
   \   0000002C   04208DE5           STR      R2,[SP, #+4]
   \   00000030   1F20A0E3           MOV      R2,#+31
   \   00000034   402E82E3           ORR      R2,R2,#0x400
   \   00000038   020058E1           CMP      R8,R2
   \   0000003C   6700000A           BEQ      ??PutValue_2
   \   00000040   092082E2           ADD      R2,R2,#+9
   \   00000044   020058E1           CMP      R8,R2
   \   00000048   4800000A           BEQ      ??PutValue_3
   \   0000004C   DD20A0E3           MOV      R2,#+221
   \   00000050   502E82E3           ORR      R2,R2,#0x500
   \   00000054   020058E1           CMP      R8,R2
   \   00000058   2700000A           BEQ      ??PutValue_4
   \   0000005C   1E2082E2           ADD      R2,R2,#+30
   \   00000060   020058E1           CMP      R8,R2
   \   00000064   A200001A           BNE      ??PutValue_5
    678              case SVT_DRAFT:
    679                  {
    680                      // Should have E.g.
    681                      float NewDft = ConvertToSi(NewValue, ValUnitId = LENGTH_UNIT, Status, 0.0, PRODraftSystem::MaxSummerDraft, 0.0);
   \   00000068   0120A0E3           MOV      R2,#+1
   \   0000006C   04208DE5           STR      R2,[SP, #+4]
   \   00000070   08008DE2           ADD      R0,SP,#+8
   \   00000074   ........           _BLF     ??string,??string??rA
   \   00000078   0000A0E3           MOV      R0,#+0
   \   0000007C   0010A0E3           MOV      R1,#+0
   \   00000080   03002DE9           PUSH     {R0,R1}
   \   00000084   000099E5           LDR      R0,[R9, #+0]
   \   00000088   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   0000008C   03002DE9           PUSH     {R0,R1}
   \   00000090   0000A0E3           MOV      R0,#+0
   \   00000094   0010A0E1           MOV      R1,R0
   \   00000098   03002DE9           PUSH     {R0,R1}
   \   0000009C   18208DE2           ADD      R2,SP,#+24
   \   000000A0   20008DE2           ADD      R0,SP,#+32
   \   000000A4   0800BDE8           POP      {R3}
   \   000000A8   0110A0E3           MOV      R1,#+1
   \   000000AC   ........           _BLF     ??ConvertToSi,??ConvertToSi??rA
   \   000000B0   0060A0E1           MOV      R6,R0
   \   000000B4   0020A0E3           MOV      R2,#+0
   \   000000B8   0110A0E3           MOV      R1,#+1
   \   000000BC   1C008DE2           ADD      R0,SP,#+28
   \   000000C0   ........           _BLF     ??_Tidy,??_Tidy??rA
    682                      if (Status == E_NO_ERR) {
   \   000000C4   14009DE5           LDR      R0,[SP, #+20]
   \   000000C8   14D08DE2           ADD      SP,SP,#+20
   \   000000CC   000050E3           CMP      R0,#+0
   \   000000D0   9700001A           BNE      ??PutValue_6
    683                          DraftOffset -=  NewDft - DraftAtMark;
   \   000000D4   741194E5           LDR      R1,[R4, #+372]
   \                     ??PutValue_7:
   \   000000D8   0600A0E1           MOV      R0,R6
   \   000000DC   ........           _BLF     __fSub,??__fSub??rA
   \   000000E0   0010A0E1           MOV      R1,R0
   \   000000E4   5C0194E5           LDR      R0,[R4, #+348]
   \   000000E8   ........           _BLF     __fSub,??__fSub??rA
   \   000000EC   5C0184E5           STR      R0,[R4, #+348]
    684                          SetDraftFilterTimer(0);
   \                     ??PutValue_8:
   \   000000F0   0000A0E3           MOV      R0,#+0
   \   000000F4   ........           BL       ??SetDraftFilterTimer
   \   000000F8   8D0000EA           B        ??PutValue_6
    685                      }
    686                  }
    687                  break;
    688              case SVT_DRAFT_PP:
    689                  {
    690                      // Should have E.g.
    691                      float NewDft = ConvertToSi(NewValue, ValUnitId = LENGTH_UNIT, Status, 0.0, PRODraftSystem::MaxSummerDraft, 0.0);
   \                     ??PutValue_4:
   \   000000FC   0120A0E3           MOV      R2,#+1
   \   00000100   04208DE5           STR      R2,[SP, #+4]
   \   00000104   08008DE2           ADD      R0,SP,#+8
   \   00000108   ........           _BLF     ??string,??string??rA
   \   0000010C   0000A0E3           MOV      R0,#+0
   \   00000110   0010A0E3           MOV      R1,#+0
   \   00000114   03002DE9           PUSH     {R0,R1}
   \   00000118   000099E5           LDR      R0,[R9, #+0]
   \   0000011C   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   00000120   03002DE9           PUSH     {R0,R1}
   \   00000124   0000A0E3           MOV      R0,#+0
   \   00000128   0010A0E1           MOV      R1,R0
   \   0000012C   03002DE9           PUSH     {R0,R1}
   \   00000130   18208DE2           ADD      R2,SP,#+24
   \   00000134   20008DE2           ADD      R0,SP,#+32
   \   00000138   0800BDE8           POP      {R3}
   \   0000013C   0110A0E3           MOV      R1,#+1
   \   00000140   ........           _BLF     ??ConvertToSi,??ConvertToSi??rA
   \   00000144   0060A0E1           MOV      R6,R0
   \   00000148   0020A0E3           MOV      R2,#+0
   \   0000014C   0110A0E3           MOV      R1,#+1
   \   00000150   1C008DE2           ADD      R0,SP,#+28
   \   00000154   ........           _BLF     ??_Tidy,??_Tidy??rA
    692                      if (Status == E_NO_ERR) {
   \   00000158   14009DE5           LDR      R0,[SP, #+20]
   \   0000015C   14D08DE2           ADD      SP,SP,#+20
   \   00000160   000050E3           CMP      R0,#+0
   \   00000164   7200001A           BNE      ??PutValue_6
    693                          DraftOffset -=  NewDft - DraftAtPP;
   \   00000168   781194E5           LDR      R1,[R4, #+376]
   \   0000016C   D9FFFFEA           B        ??PutValue_7
    694                          SetDraftFilterTimer(0);
    695                      }
    696                  }
    697                  break;
    698              case SVT_LEVEL_OFFSET:
    699                  DraftOffset = ConvertToSi(NewValue, ValUnitId = LENGTH_UNIT, Status, -1.0, 1.0, DraftOffset);
   \                     ??PutValue_3:
   \   00000170   0120A0E3           MOV      R2,#+1
   \   00000174   04208DE5           STR      R2,[SP, #+4]
   \   00000178   78008DE2           ADD      R0,SP,#+120
   \   0000017C   ........           _BLF     ??string,??string??rA
   \   00000180   5C0194E5           LDR      R0,[R4, #+348]
   \   00000184   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   00000188   03002DE9           PUSH     {R0,R1}
   \   0000018C   0000A0E3           MOV      R0,#+0
   \   00000190   C015A0E3           MOV      R1,#+805306368
   \   00000194   FF1681E3           ORR      R1,R1,#0xFF00000
   \   00000198   03002DE9           PUSH     {R0,R1}
   \   0000019C   801481E3           ORR      R1,R1,#0x80000000
   \   000001A0   03002DE9           PUSH     {R0,R1}
   \   000001A4   18208DE2           ADD      R2,SP,#+24
   \   000001A8   90008DE2           ADD      R0,SP,#+144
   \   000001AC   0800BDE8           POP      {R3}
   \   000001B0   0110A0E3           MOV      R1,#+1
   \   000001B4   ........           _BLF     ??ConvertToSi,??ConvertToSi??rA
   \   000001B8   5C0184E5           STR      R0,[R4, #+348]
   \   000001BC   0020A0E3           MOV      R2,#+0
   \   000001C0   0110A0E3           MOV      R1,#+1
   \   000001C4   8C008DE2           ADD      R0,SP,#+140
   \   000001C8   ........           _BLF     ??_Tidy,??_Tidy??rA
    700                  if (Status == E_NO_ERR) {
   \   000001CC   14009DE5           LDR      R0,[SP, #+20]
   \   000001D0   14D08DE2           ADD      SP,SP,#+20
   \   000001D4   000050E3           CMP      R0,#+0
   \   000001D8   5500001A           BNE      ??PutValue_6
    701                      SetDraftFilterTimer(0);
   \   000001DC   C3FFFFEA           B        ??PutValue_8
    702                  }
    703                  break;
    704              case SVT_ZEROSET_LEVEL:
    705                  if (!LevelPressures.empty()) {
   \                     ??PutValue_2:
   \   000001E0   5A0FA0E3           MOV      R0,#+360
   \   000001E4   041080E0           ADD      R1,R0,R4
   \   000001E8   042091E5           LDR      R2,[R1, #+4]
   \   000001EC   001091E5           LDR      R1,[R1, #+0]
   \   000001F0   011042E0           SUB      R1,R2,R1
   \   000001F4   2111B0E1           LSRS     R1,R1,#+2
   \   000001F8   1600001A           BNE      ??PutValue_9
    706                      AnsiString TmpString = ZeroSetDraftSensors(Local);
    707          #ifndef BORLAND
    708                      if (Local && TmpString.Length()) {
    709                          AnsiString Text1("Zero set warnings:");
    710                          DisplayMessage(Text1, TmpString);
    711                      }
    712          #endif
    713                      /*
    714                      for ( unsigned i=0; i < LevelPressures.size(); i++ ) {
    715                              int ErrorStatus = LevelPressures[i]->PutValue(SVT_AI_CALC_VAL,"0.0",Local);
    716                              if ( Local && ErrorStatus != E_NO_ERR ) {
    717                                      TmpString += Name + ": "+InputErrorMsg[ErrorStatus]+ '\n';
    718                              }
    719                              if ( ErrorStatus ) Status = E_NOT_ADJUSTABLE;
    720                      }
    721                      */
    722          
    723                  } else {
    724                      Status = LevelPressures[0]->PutValue(SVT_AI_CALC_VAL, Index, "0.0", Local);
   \   000001FC   040090E7           LDR      R0,[R0, +R4]
   \   00000200   ........           ADR      R1,??Subroutine28_0  ;; "0.0"
   \   00000204   008090E5           LDR      R8,[R0, #+0]
   \   00000208   A40098E5           LDR      R0,[R8, #+164]
   \   0000020C   309080E2           ADD      R9,R0,#+48
   \   00000210   08008DE2           ADD      R0,SP,#+8
   \   00000214   ........           _BLF     ??AnsiString,??AnsiString??rA
   \   00000218   0010A0E3           MOV      R1,#+0
   \   0000021C   02002DE9           PUSH     {R1}
   \   00000220   80002DE9           PUSH     {R7}
   \   00000224   0620A0E1           MOV      R2,R6
   \   00000228   006099E5           LDR      R6,[R9, #+0]
   \   0000022C   0030A0E1           MOV      R3,R0
   \   00000230   B810A0E3           MOV      R1,#+184
   \   00000234   401E81E3           ORR      R1,R1,#0x400
   \   00000238   0800A0E1           MOV      R0,R8
   \   0000023C   0FE0A0E1           MOV      LR,PC
   \   00000240   16FF2FE1           BX       R6
   \   00000244   08008DE5           STR      R0,[SP, #+8]
   \   00000248   0020A0E3           MOV      R2,#+0
   \   0000024C   0110A0E3           MOV      R1,#+1
   \   00000250   10008DE2           ADD      R0,SP,#+16
   \   00000254   340000EA           B        ??PutValue_10
    725                  }
   \                     ??PutValue_9:
   \   00000258   0720A0E1           MOV      R2,R7
   \   0000025C   5C108DE2           ADD      R1,SP,#+92
   \   00000260   0400A0E1           MOV      R0,R4
   \   00000264   ........           BL       ??ZeroSetDraftSensors
   \   00000268   000057E3           CMP      R7,#+0
   \   0000026C   1B00000A           BEQ      ??PutValue_11
   \   00000270   5C008DE2           ADD      R0,SP,#+92
   \   00000274   ........           _BLF     ??Length,??Length??rA
   \   00000278   000050E3           CMP      R0,#+0
   \   0000027C   1700000A           BEQ      ??PutValue_11
   \   00000280   ........           LDR      R1,??Subroutine28_0+0x8  ;; `?<Constant "Zero set warnings:">`
   \   00000284   40008DE2           ADD      R0,SP,#+64
   \   00000288   ........           _BLF     ??AnsiString,??AnsiString??rA
   \   0000028C   5C108DE2           ADD      R1,SP,#+92
   \   00000290   24008DE2           ADD      R0,SP,#+36
   \   00000294   ........           _BLF     ??string,??string??rA
   \   00000298   40108DE2           ADD      R1,SP,#+64
   \   0000029C   08008DE2           ADD      R0,SP,#+8
   \   000002A0   ........           _BLF     ??string,??string??rA
   \   000002A4   24108DE2           ADD      R1,SP,#+36
   \   000002A8   08008DE2           ADD      R0,SP,#+8
   \   000002AC   ........           _BLF     ??DisplayMessage,??DisplayMessage??rA
   \   000002B0   0020A0E3           MOV      R2,#+0
   \   000002B4   0110A0E3           MOV      R1,#+1
   \   000002B8   24008DE2           ADD      R0,SP,#+36
   \   000002BC   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000002C0   0020A0E3           MOV      R2,#+0
   \   000002C4   0110A0E3           MOV      R1,#+1
   \   000002C8   08008DE2           ADD      R0,SP,#+8
   \   000002CC   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000002D0   0020A0E3           MOV      R2,#+0
   \   000002D4   0110A0E3           MOV      R1,#+1
   \   000002D8   40008DE2           ADD      R0,SP,#+64
   \   000002DC   ........           _BLF     ??_Tidy,??_Tidy??rA
   \                     ??PutValue_11:
   \   000002E0   0020A0E3           MOV      R2,#+0
   \   000002E4   0110A0E3           MOV      R1,#+1
   \   000002E8   5C008DE2           ADD      R0,SP,#+92
   \   000002EC   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000002F0   0F0000EA           B        ??PutValue_6
    726                  break;
    727              default:
    728                  Status = PRogramObject::PutValue(ValueId, Index, NewValue, Local, &ValUnitId);
   \                     ??PutValue_5:
   \   000002F4   94008DE2           ADD      R0,SP,#+148
   \   000002F8   ........           _BLF     ??string,??string??rA
   \   000002FC   04008DE2           ADD      R0,SP,#+4
   \   00000300   01002DE9           PUSH     {R0}
   \   00000304   80002DE9           PUSH     {R7}
   \   00000308   9C308DE2           ADD      R3,SP,#+156
   \   0000030C   0620A0E1           MOV      R2,R6
   \   00000310   0810A0E1           MOV      R1,R8
   \   00000314   0400A0E1           MOV      R0,R4
   \   00000318   ........           _BLF     ??PutValue_1,??PutValue??rA
   \   0000031C   08008DE5           STR      R0,[SP, #+8]
   \   00000320   0020A0E3           MOV      R2,#+0
   \   00000324   0110A0E3           MOV      R1,#+1
   \   00000328   9C008DE2           ADD      R0,SP,#+156
   \                     ??PutValue_10:
   \   0000032C   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000330   08D08DE2           ADD      SP,SP,#+8
    729                  break;
    730              }
    731              if (Status == E_NO_ERR) {
   \                     ??PutValue_6:
   \   00000334   00009DE5           LDR      R0,[SP, #+0]
   \   00000338   000050E3           CMP      R0,#+0
   \   0000033C   0400001A           BNE      ??PutValue_12
    732                  SetModifiedFlag();
   \   00000340   A41094E5           LDR      R1,[R4, #+164]
   \   00000344   0400A0E1           MOV      R0,R4
   \   00000348   541091E5           LDR      R1,[R1, #+84]
   \   0000034C   0FE0A0E1           MOV      LR,PC
   \   00000350   11FF2FE1           BX       R1
    733              }
    734              if (UnitId) {
   \                     ??PutValue_12:
   \   00000354   000055E3           CMP      R5,#+0
    735                  *UnitId = ValUnitId;
   \   00000358   04009D15           LDRNE    R0,[SP, #+4]
   \   0000035C   00008515           STRNE    R0,[R5, #+0]
    736              }
    737              return (Status);
   \   00000360   00009DE5           LDR      R0,[SP, #+0]
   \   00000364   B0D08DE2           ADD      SP,SP,#+176
   \   00000368                      REQUIRE ?Subroutine28
   \   00000368                      ;; // Fall through to label ?Subroutine28
    738          }
    739          

   \                                 In segment CODE, align 4, keep-with-next
    740          int PRODraft::PutFloatValue(int ValueId, float NewValue) {
   \                     ??PutFloatValue:
   \   00000000   F0402DE9           PUSH     {R4-R7,LR}
   \   00000004   0050A0E1           MOV      R5,R0
    741              int Status = E_NO_ERR;
    742              switch (ValueId) {
   \   00000008   643195E5           LDR      R3,[R5, #+356]
   \   0000000C   0170A0E1           MOV      R7,R1
   \   00000010   0210A0E1           MOV      R1,R2
   \   00000014   0040A0E3           MOV      R4,#+0
   \   00000018   436FA0E3           MOV      R6,#+268
   \   0000001C   7920A0E3           MOV      R2,#+121
   \   00000020   402E82E3           ORR      R2,R2,#0x400
   \   00000024   020057E1           CMP      R7,R2
   \   00000028   1A00000A           BEQ      ??PutFloatValue_2
   \   0000002C   022082E3           ORR      R2,R2,#0x2
   \   00000030   020057E1           CMP      R7,R2
   \   00000034   01208212           ADDNE    R2,R2,#+1
   \   00000038   02005711           CMPNE    R7,R2
   \   0000003C   01208213           ORRNE    R2,R2,#0x1
   \   00000040   02005711           CMPNE    R7,R2
   \   00000044   01208212           ADDNE    R2,R2,#+1
   \   00000048   02005711           CMPNE    R7,R2
   \   0000004C   01208213           ORRNE    R2,R2,#0x1
   \   00000050   02005711           CMPNE    R7,R2
   \   00000054   03208212           ADDNE    R2,R2,#+3
   \   00000058   02005711           CMPNE    R7,R2
   \   0000005C   2700000A           BEQ      ??PutFloatValue_3
   \   00000060   022082E2           ADD      R2,R2,#+2
   \   00000064   020057E1           CMP      R7,R2
   \   00000068   4C00000A           BEQ      ??PutFloatValue_4
   \   0000006C   012082E3           ORR      R2,R2,#0x1
   \   00000070   020057E1           CMP      R7,R2
   \   00000074   2100000A           BEQ      ??PutFloatValue_3
   \   00000078   072082E2           ADD      R2,R2,#+7
   \   0000007C   020057E1           CMP      R7,R2
   \   00000080   3100000A           BEQ      ??PutFloatValue_5
   \   00000084   FB20A0E3           MOV      R2,#+251
   \   00000088   502E82E3           ORR      R2,R2,#0x500
   \   0000008C   020057E1           CMP      R7,R2
   \   00000090   2B00000A           BEQ      ??PutFloatValue_6
   \   00000094   4B0000EA           B        ??PutFloatValue_7
    743              case SVT_METRI_TAPE_SNS:
    744                  if (DraftSensor) {
   \                     ??PutFloatValue_2:
   \   00000098   000053E3           CMP      R3,#+0
   \   0000009C   4D00000A           BEQ      ??PutFloatValue_8
    745                      DraftSensor->NewValue(NewValue);
   \   000000A0   A42093E5           LDR      R2,[R3, #+164]
   \   000000A4   0300A0E1           MOV      R0,R3
   \   000000A8   682092E5           LDR      R2,[R2, #+104]
   \   000000AC   0FE0A0E1           MOV      LR,PC
   \   000000B0   12FF2FE1           BX       R2
    746                      DraftSensor->Calculate();
   \   000000B4   641195E5           LDR      R1,[R5, #+356]
   \   000000B8   0100A0E1           MOV      R0,R1
   \   000000BC   A41091E5           LDR      R1,[R1, #+164]
   \   000000C0   601091E5           LDR      R1,[R1, #+96]
   \   000000C4   0FE0A0E1           MOV      LR,PC
   \   000000C8   11FF2FE1           BX       R1
    747                      DraftSensor->ActiveAlarms = CheckAlarms(DraftSensor->AlarmSet, &DraftSensor->HWFailure);
   \   000000CC   640195E5           LDR      R0,[R5, #+356]
   \   000000D0   001086E0           ADD      R1,R6,R0
   \   000000D4   C00080E2           ADD      R0,R0,#+192
   \   000000D8   ........           _BLF     ??CheckAlarms,??CheckAlarms??rA
   \   000000DC   642195E5           LDR      R2,[R5, #+356]
   \   000000E0   380082E5           STR      R0,[R2, #+56]
    748                      DraftSensor->SendData();
   \                     ??PutFloatValue_9:
   \   000000E4   0200A0E1           MOV      R0,R2
   \   000000E8   A42092E5           LDR      R2,[R2, #+164]
   \   000000EC   6510A0E3           MOV      R1,#+101
   \   000000F0   402092E5           LDR      R2,[R2, #+64]
   \   000000F4   0FE0A0E1           MOV      LR,PC
   \   000000F8   12FF2FE1           BX       R2
   \   000000FC   350000EA           B        ??PutFloatValue_8
    749                  }
    750                  break;
    751              case SVT_HART_MA                :
    752              case SVT_HART_RADAR             :
    753              case SVT_HART_STATUS            :
    754              case SVT_HART_OPEN_LOOP         :
    755              case SVT_HART_SHORT_CIRCUIT     :
    756              case SVT_AP_LEVEL_PRESSURE_MH2O :
    757              case SVT_AP_LPRESS_SNS_FAIL     :
    758                  if (DraftSensor) {
   \                     ??PutFloatValue_3:
   \   00000100   000053E3           CMP      R3,#+0
   \   00000104   3300000A           BEQ      ??PutFloatValue_8
    759                      DraftSensor->PutFloatValue(ValueId, NewValue);
   \   00000108   0300A0E1           MOV      R0,R3
   \   0000010C   A43093E5           LDR      R3,[R3, #+164]
   \   00000110   0120A0E1           MOV      R2,R1
   \   00000114   343093E5           LDR      R3,[R3, #+52]
   \   00000118   0710A0E1           MOV      R1,R7
   \   0000011C   0FE0A0E1           MOV      LR,PC
   \   00000120   13FF2FE1           BX       R3
    760                      if ((ValueId == SVT_HART_RADAR) || ( ValueId == SVT_AP_LEVEL_PRESSURE_MH2O) ) {
   \   00000124   7B00A0E3           MOV      R0,#+123
   \   00000128   400E80E3           ORR      R0,R0,#0x400
   \   0000012C   000057E1           CMP      R7,R0
   \   00000130   07008012           ADDNE    R0,R0,#+7
   \   00000134   00005711           CMPNE    R7,R0
   \   00000138   2600001A           BNE      ??PutFloatValue_8
    761                          DraftSensor->SendData();
   \                     ??PutFloatValue_10:
   \   0000013C   642195E5           LDR      R2,[R5, #+356]
   \   00000140   E7FFFFEA           B        ??PutFloatValue_9
    762                      }
    763                  }
    764                  break;
    765              case SVT_DRAFT                  :
    766                  Draft = NewValue;
   \                     ??PutFloatValue_6:
   \   00000144   601185E5           STR      R1,[R5, #+352]
   \   00000148   220000EA           B        ??PutFloatValue_8
    767                  break;
    768              case SVT_MB_MA_PRESSURE:
    769                  if (DraftSensor) {
   \                     ??PutFloatValue_5:
   \   0000014C   000053E3           CMP      R3,#+0
   \   00000150   2000000A           BEQ      ??PutFloatValue_8
    770                      DraftSensor->NewValue(NewValue);
   \   00000154   A42093E5           LDR      R2,[R3, #+164]
   \   00000158   0300A0E1           MOV      R0,R3
   \   0000015C   682092E5           LDR      R2,[R2, #+104]
   \   00000160   0FE0A0E1           MOV      LR,PC
   \   00000164   12FF2FE1           BX       R2
    771                      DraftSensor->SendData();
   \   00000168   642195E5           LDR      R2,[R5, #+356]
   \   0000016C   6510A0E3           MOV      R1,#+101
   \   00000170   0200A0E1           MOV      R0,R2
   \   00000174   A42092E5           LDR      R2,[R2, #+164]
   \   00000178   402092E5           LDR      R2,[R2, #+64]
   \   0000017C   0FE0A0E1           MOV      LR,PC
   \   00000180   12FF2FE1           BX       R2
    772                      DraftSensor->ActiveAlarms = CheckAlarms(DraftSensor->AlarmSet, &DraftSensor->HWFailure);
   \   00000184   640195E5           LDR      R0,[R5, #+356]
   \   00000188   001086E0           ADD      R1,R6,R0
   \   0000018C   C00080E2           ADD      R0,R0,#+192
   \   00000190   ........           _BLF     ??CheckAlarms,??CheckAlarms??rA
   \   00000194   641195E5           LDR      R1,[R5, #+356]
   \   00000198   380081E5           STR      R0,[R1, #+56]
   \   0000019C   0D0000EA           B        ??PutFloatValue_8
    773                  }
    774                  break;
    775              case SVT_AP_LEVEL_PRESSURE_MB   :
    776                  if (DraftSensor) {
   \                     ??PutFloatValue_4:
   \   000001A0   000053E3           CMP      R3,#+0
   \   000001A4   0B00000A           BEQ      ??PutFloatValue_8
    777                      DraftSensor->PutFloatValue(ValueId, NewValue);
   \   000001A8   0300A0E1           MOV      R0,R3
   \   000001AC   A43093E5           LDR      R3,[R3, #+164]
   \   000001B0   0120A0E1           MOV      R2,R1
   \   000001B4   343093E5           LDR      R3,[R3, #+52]
   \   000001B8   0710A0E1           MOV      R1,R7
   \   000001BC   0FE0A0E1           MOV      LR,PC
   \   000001C0   13FF2FE1           BX       R3
    778                      DraftSensor->SendData();
   \   000001C4   DCFFFFEA           B        ??PutFloatValue_10
    779                  }
    780                  break;
    781              default:
    782                  Status = PRogramObject::PutFloatValue(ValueId, NewValue);
   \                     ??PutFloatValue_7:
   \   000001C8   0120A0E1           MOV      R2,R1
   \   000001CC   0710A0E1           MOV      R1,R7
   \   000001D0   ........           _BLF     ??PutFloatValue_1,??PutFloatValue??rA
   \   000001D4   0040A0E1           MOV      R4,R0
    783                  break;
    784              }
    785              return (Status);
   \                     ??PutFloatValue_8:
   \   000001D8   0400A0E1           MOV      R0,R4
   \   000001DC   F040BDE8           POP      {R4-R7,LR}
   \   000001E0   1EFF2FE1           BX       LR               ;; return
    786          
    787          }
    788          

   \                                 In segment CODE, align 4, keep-with-next
    789          ValueList* PRODraft::GetValueInfoTableStatic(int &Entries, int Index) {
    790              Entries = 0;
   \                     ??GetValueInfoTableStatic:
   \   00000000   0010A0E3           MOV      R1,#+0
   \   00000004   001080E5           STR      R1,[R0, #+0]
    791              return (NULL);
   \   00000008   0000A0E3           MOV      R0,#+0
   \   0000000C   1EFF2FE1           BX       LR               ;; return
    792          }
    793          

   \                                 In segment CODE, align 4, keep-with-next
    794          void PRODraft::SetDraftFilterTimer(int TempFilterDegree) {
    795          #ifdef S2TXU
    796              DraftFilterDegree = TempFilterDegree;
   \                     ??SetDraftFilterTimer:
   \   00000000   ........           LDR      R1,??DataTable31  ;; ??DraftFilterDegree
   \   00000004   00402DE9           PUSH     {LR}
   \   00000008   000081E5           STR      R0,[R1, #+0]
    797              OS_RetriggerTimer(&FilterTimer);
   \   0000000C   040081E2           ADD      R0,R1,#+4
   \   00000010   ........           _BLF     OS_RetriggerTimer,??OS_RetriggerTimer??rA
    798          #endif
    799          }
   \   00000014   ........           B        ??Subroutine25_0
    800          

   \                                 In segment CODE, align 4, keep-with-next
    801          void PRODraft::SetDraftFilter(void) {
    802              DraftFilterDegree = FILTER_DRAFT;
   \                     ??SetDraftFilter:
   \   00000000   ........           LDR      R0,??DataTable31  ;; ??DraftFilterDegree
   \   00000004   0F10A0E3           MOV      R1,#+15
   \   00000008   001080E5           STR      R1,[R0, #+0]
    803          }
   \   0000000C   1EFF2FE1           BX       LR               ;; return
    804          

   \                                 In segment CODE, align 4, keep-with-next
    805          int PRODraft::ReceiveData(U8 *data) {
   \                     ??ReceiveData:
   \   00000000   1F002DE9           PUSH     {R0-R4}
    806              int ErrorStatus = E_OK;
    807              ANPRO10_CommandHeading *pCH = (ANPRO10_CommandHeading *)data;
    808              switch (pCH->CommandNo) {
   \   00000004   0130D1E5           LDRB     R3,[R1, #+1]
   \   00000008   00C0D1E5           LDRB     R12,[R1, #+0]
   \   0000000C   0020A0E3           MOV      R2,#+0
   \   00000010   03348CE1           ORR      R3,R12,R3, LSL #+8
   \   00000014   653053E2           SUBS     R3,R3,#+101
   \   00000018   0200000A           BEQ      ??ReceiveData_1
   \   0000001C   013053E2           SUBS     R3,R3,#+1
   \   00000020   2700000A           BEQ      ??ReceiveData_2
   \   00000024   310000EA           B        ??ReceiveData_3
    809              case CMD_GENERIC_REALTIME_DATA:
    810                  {
    811                      ANPRO10_COMMAND_2732  *pData = (ANPRO10_COMMAND_2732 *)data;
    812                      DraftAtMark   = pData->DraftAtMark;
   \                     ??ReceiveData_1:
   \   00000028   0030A0E3           MOV      R3,#+0
   \   0000002C   0DC0A0E1           MOV      R12,SP
   \                     ??ReceiveData_4:
   \   00000030   0C4081E2           ADD      R4,R1,#+12
   \   00000034   0440D3E7           LDRB     R4,[R3, +R4]
   \   00000038   0C40C3E7           STRB     R4,[R3, +R12]
   \   0000003C   013083E2           ADD      R3,R3,#+1
   \   00000040   040053E3           CMP      R3,#+4
   \   00000044   F9FFFFBA           BLT      ??ReceiveData_4
   \   00000048   00309DE5           LDR      R3,[SP, #+0]
    813                      DraftAtPP     = pData->DraftAtPP;
   \   0000004C   04408DE2           ADD      R4,SP,#+4
   \   00000050   743180E5           STR      R3,[R0, #+372]
   \   00000054   0030A0E3           MOV      R3,#+0
   \                     ??ReceiveData_5:
   \   00000058   10C081E2           ADD      R12,R1,#+16
   \   0000005C   0CC0D3E7           LDRB     R12,[R3, +R12]
   \   00000060   04C0C3E7           STRB     R12,[R3, +R4]
   \   00000064   013083E2           ADD      R3,R3,#+1
   \   00000068   040053E3           CMP      R3,#+4
   \   0000006C   F9FFFFBA           BLT      ??ReceiveData_5
   \   00000070   04309DE5           LDR      R3,[SP, #+4]
    814                      Draft         = pData->Draft;
   \   00000074   08408DE2           ADD      R4,SP,#+8
   \   00000078   783180E5           STR      R3,[R0, #+376]
   \   0000007C   0030A0E3           MOV      R3,#+0
   \                     ??ReceiveData_6:
   \   00000080   08C081E2           ADD      R12,R1,#+8
   \   00000084   0CC0D3E7           LDRB     R12,[R3, +R12]
   \   00000088   04C0C3E7           STRB     R12,[R3, +R4]
   \   0000008C   013083E2           ADD      R3,R3,#+1
   \   00000090   040053E3           CMP      R3,#+4
   \   00000094   F9FFFFBA           BLT      ??ReceiveData_6
   \   00000098   08309DE5           LDR      R3,[SP, #+8]
   \   0000009C   603180E5           STR      R3,[R0, #+352]
    815                      DraftStatus   = pData->DraftStatus;
   \   000000A0   1730D1E5           LDRB     R3,[R1, #+23]
   \   000000A4   1640D1E5           LDRB     R4,[R1, #+22]
   \   000000A8   033484E1           ORR      R3,R4,R3, LSL #+8
   \   000000AC   1540D1E5           LDRB     R4,[R1, #+21]
   \   000000B0   1410D1E5           LDRB     R1,[R1, #+20]
   \   000000B4   033484E1           ORR      R3,R4,R3, LSL #+8
   \   000000B8   031481E1           ORR      R1,R1,R3, LSL #+8
   \   000000BC   7C1180E5           STR      R1,[R0, #+380]
   \   000000C0   0B0000EA           B        ??ReceiveData_7
    816                  }
    817                  break;
    818              case CMD_GENERIC_STATIC_DATA:
    819                  {
    820                      ANPRO10_COMMAND_2733  *pData = (ANPRO10_COMMAND_2733 *)data;
    821                      ErrorStatus = E_OK;
    822                      DraftOffset = pData->DraftOffset;
   \                     ??ReceiveData_2:
   \   000000C4   0030A0E3           MOV      R3,#+0
   \   000000C8   0C408DE2           ADD      R4,SP,#+12
   \                     ??ReceiveData_8:
   \   000000CC   08C081E2           ADD      R12,R1,#+8
   \   000000D0   0CC0D3E7           LDRB     R12,[R3, +R12]
   \   000000D4   04C0C3E7           STRB     R12,[R3, +R4]
   \   000000D8   013083E2           ADD      R3,R3,#+1
   \   000000DC   040053E3           CMP      R3,#+4
   \   000000E0   F9FFFFBA           BLT      ??ReceiveData_8
   \   000000E4   0C109DE5           LDR      R1,[SP, #+12]
   \   000000E8   5C1180E5           STR      R1,[R0, #+348]
   \   000000EC   000000EA           B        ??ReceiveData_7
    823                  }
    824                  break;
    825              default:
    826                  ErrorStatus = E_UNKNOWN_COMMAND;
   \                     ??ReceiveData_3:
   \   000000F0   0120A0E3           MOV      R2,#+1
    827                  break;
    828              }
    829              return (ErrorStatus);
   \                     ??ReceiveData_7:
   \   000000F4   10D08DE2           ADD      SP,SP,#+16
   \   000000F8   1000BDE8           POP      {R4}
   \   000000FC   0200A0E1           MOV      R0,R2
   \   00000100   1EFF2FE1           BX       LR               ;; return
    830          }
    831          
    832          

   \                                 In segment CODE, align 4, keep-with-next
    833          int PRODraft::SendData(U16 cmd) {
   \                     ??SendData:
   \   00000000   00402DE9           PUSH     {LR}
   \   00000004   34D04DE2           SUB      SP,SP,#+52
    834              int ErrorStatus = E_OK;
    835              switch (cmd) {
   \   00000008   0E20A0E3           MOV      R2,#+14
   \   0000000C   FF30A0E3           MOV      R3,#+255
   \   00000010   00C0A0E3           MOV      R12,#+0
   \   00000014   651051E2           SUBS     R1,R1,#+101
   \   00000018   0200000A           BEQ      ??SendData_1
   \   0000001C   011051E2           SUBS     R1,R1,#+1
   \   00000020   3700000A           BEQ      ??SendData_2
   \   00000024   520000EA           B        ??SendData_3
    836              case CMD_GENERIC_REALTIME_DATA:
    837                  {
    838                      QueueANPRO10_COMMAND_2732 Cmd;
    839                      Cmd.TxInfo.Port        = NULL;
   \                     ??SendData_1:
   \   00000028   00C08DE5           STR      R12,[SP, #+0]
    840                      Cmd.TxInfo.rxAddr      = DEVICE_BROADCAST_ADDR;
   \   0000002C   0430CDE5           STRB     R3,[SP, #+4]
    841                      Cmd.TxInfo.rxId        = DEVICE_BROADCAST_TXU;
   \   00000030   0520CDE5           STRB     R2,[SP, #+5]
    842          
    843                      Cmd.Data.ObjectId      = IDNumber;
   \   00000034   9C1090E5           LDR      R1,[R0, #+156]
    844                      Cmd.Data.ndb           = sizeof(Cmd) - sizeof(QueueANPRO10_CommandHeading);
   \   00000038   1420A0E3           MOV      R2,#+20
   \   0000003C   0A10CDE5           STRB     R1,[SP, #+10]
   \   00000040   2114A0E1           LSR      R1,R1,#+8
   \   00000044   0B10CDE5           STRB     R1,[SP, #+11]
   \   00000048   2114A0E1           LSR      R1,R1,#+8
   \   0000004C   0C10CDE5           STRB     R1,[SP, #+12]
   \   00000050   2114A0E1           LSR      R1,R1,#+8
   \   00000054   0D10CDE5           STRB     R1,[SP, #+13]
   \   00000058   B820CDE1           STRH     R2,[SP, #+8]
    845                      Cmd.Data.CommandNo     = CMD_GENERIC_REALTIME_DATA;
   \   0000005C   6520A0E3           MOV      R2,#+101
   \   00000060   B620CDE1           STRH     R2,[SP, #+6]
    846                      Cmd.Data.DraftAtMark   = DraftAtMark;
   \   00000064   0010A0E3           MOV      R1,#+0
   \   00000068   12208DE2           ADD      R2,SP,#+18
   \                     ??SendData_4:
   \   0000006C   5D3F80E2           ADD      R3,R0,#+372
   \   00000070   0330D1E7           LDRB     R3,[R1, +R3]
   \   00000074   0230C1E7           STRB     R3,[R1, +R2]
   \   00000078   011081E2           ADD      R1,R1,#+1
   \   0000007C   040051E3           CMP      R1,#+4
   \   00000080   F9FFFFBA           BLT      ??SendData_4
    847                      Cmd.Data.DraftAtPP     = DraftAtPP;
   \   00000084   0010A0E3           MOV      R1,#+0
   \   00000088   16208DE2           ADD      R2,SP,#+22
   \                     ??SendData_5:
   \   0000008C   5E3F80E2           ADD      R3,R0,#+376
   \   00000090   0330D1E7           LDRB     R3,[R1, +R3]
   \   00000094   0230C1E7           STRB     R3,[R1, +R2]
   \   00000098   011081E2           ADD      R1,R1,#+1
   \   0000009C   040051E3           CMP      R1,#+4
   \   000000A0   F9FFFFBA           BLT      ??SendData_5
    848                      Cmd.Data.DraftStatus   = DraftStatus;
   \   000000A4   7C1190E5           LDR      R1,[R0, #+380]
    849                      Cmd.Data.Draft         = Draft;
   \   000000A8   0E208DE2           ADD      R2,SP,#+14
   \   000000AC   1A10CDE5           STRB     R1,[SP, #+26]
   \   000000B0   2114A0E1           LSR      R1,R1,#+8
   \   000000B4   1B10CDE5           STRB     R1,[SP, #+27]
   \   000000B8   2114A0E1           LSR      R1,R1,#+8
   \   000000BC   1C10CDE5           STRB     R1,[SP, #+28]
   \   000000C0   2114A0E1           LSR      R1,R1,#+8
   \   000000C4   1D10CDE5           STRB     R1,[SP, #+29]
   \   000000C8   0010A0E3           MOV      R1,#+0
   \                     ??SendData_6:
   \   000000CC   583F80E2           ADD      R3,R0,#+352
   \   000000D0   0330D1E7           LDRB     R3,[R1, +R3]
   \   000000D4   0230C1E7           STRB     R3,[R1, +R2]
   \   000000D8   011081E2           ADD      R1,R1,#+1
   \   000000DC   040051E3           CMP      R1,#+4
   \   000000E0   F9FFFFBA           BLT      ??SendData_6
    850                      bool sent = ANPRO10SendNormal(&Cmd);
    851                      if (!sent) ErrorStatus =  E_QUEUE_FULL;
   \   000000E4   0D00A0E1           MOV      R0,SP
   \   000000E8   ........           _BLF     ??ANPRO10SendNormal,??ANPRO10SendNormal??rA
   \   000000EC   000050E3           CMP      R0,#+0
   \   000000F0   0100001A           BNE      ??SendData_7
   \                     ??SendData_8:
   \   000000F4   0300A0E3           MOV      R0,#+3
   \   000000F8   1E0000EA           B        ??SendData_9
    852                      else ErrorStatus =  E_OK;
   \                     ??SendData_7:
   \   000000FC   0000A0E3           MOV      R0,#+0
   \   00000100   1C0000EA           B        ??SendData_9
    853                  }
    854                  break;
    855              case CMD_GENERIC_STATIC_DATA:
    856                  {
    857                      QueueANPRO10_COMMAND_2733 Cmd;
    858                      Cmd.TxInfo.Port           = NULL;
   \                     ??SendData_2:
   \   00000104   20C08DE5           STR      R12,[SP, #+32]
    859                      Cmd.TxInfo.rxAddr         = DEVICE_BROADCAST_ADDR;
   \   00000108   2430CDE5           STRB     R3,[SP, #+36]
    860                      Cmd.TxInfo.rxId           = DEVICE_BROADCAST_TXU;
   \   0000010C   2520CDE5           STRB     R2,[SP, #+37]
    861                      Cmd.Data.ObjectId         = IDNumber;
   \   00000110   9C1090E5           LDR      R1,[R0, #+156]
    862                      Cmd.Data.ndb              = sizeof(Cmd) - sizeof(QueueANPRO10_CommandHeading);
   \   00000114   0820A0E3           MOV      R2,#+8
   \   00000118   2A10CDE5           STRB     R1,[SP, #+42]
   \   0000011C   2114A0E1           LSR      R1,R1,#+8
   \   00000120   2B10CDE5           STRB     R1,[SP, #+43]
   \   00000124   2114A0E1           LSR      R1,R1,#+8
   \   00000128   2C10CDE5           STRB     R1,[SP, #+44]
   \   0000012C   2114A0E1           LSR      R1,R1,#+8
   \   00000130   2D10CDE5           STRB     R1,[SP, #+45]
   \   00000134   B822CDE1           STRH     R2,[SP, #+40]
    863                      Cmd.Data.CommandNo        = CMD_GENERIC_STATIC_DATA;
   \   00000138   6620A0E3           MOV      R2,#+102
   \   0000013C   B622CDE1           STRH     R2,[SP, #+38]
    864                      Cmd.Data.DraftOffset      = DraftOffset;
   \   00000140   0010A0E3           MOV      R1,#+0
   \   00000144   2E208DE2           ADD      R2,SP,#+46
   \                     ??SendData_10:
   \   00000148   573F80E2           ADD      R3,R0,#+348
   \   0000014C   0330D1E7           LDRB     R3,[R1, +R3]
   \   00000150   0230C1E7           STRB     R3,[R1, +R2]
   \   00000154   011081E2           ADD      R1,R1,#+1
   \   00000158   040051E3           CMP      R1,#+4
   \   0000015C   F9FFFFBA           BLT      ??SendData_10
    865          
    866                      bool sent = ANPRO10SendNormal(&Cmd);
    867                      if (!sent) ErrorStatus =  E_QUEUE_FULL;
   \   00000160   20008DE2           ADD      R0,SP,#+32
   \   00000164   ........           _BLF     ??ANPRO10SendNormal,??ANPRO10SendNormal??rA
   \   00000168   000050E3           CMP      R0,#+0
   \   0000016C   E2FFFF1A           BNE      ??SendData_7
   \   00000170   DFFFFFEA           B        ??SendData_8
    868                      else ErrorStatus =  E_OK;
    869                  }
    870                  break;
    871              default:
    872                  ErrorStatus =  E_UNKNOWN_COMMAND;
   \                     ??SendData_3:
   \   00000174   0100A0E3           MOV      R0,#+1
    873                  break;
    874              }
    875              return (ErrorStatus);
   \                     ??SendData_9:
   \   00000178   34D08DE2           ADD      SP,SP,#+52
   \   0000017C   ........           B        ??Subroutine25_0
    876          }
    877          

   \                                 In segment CODE, align 4, keep-with-next
    878          float PRODraft::GetLDistanceMarkToPP(void) {
   \                     ??GetLDistanceMarkToPP:
   \   00000000   00402DE9           PUSH     {LR}
   \   00000004   0010A0E1           MOV      R1,R0
    879              return DLRef1 - DLFCenter;
   \   00000008   B00191E5           LDR      R0,[R1, #+432]
   \   0000000C   C01191E5           LDR      R1,[R1, #+448]
   \   00000010   ........           _BLF     __fSub,??__fSub??rA
   \   00000014   ........           B        ??Subroutine25_0
    880          }
    881          
    882          

   \                                 In segment CODE, align 4, keep-with-next
    883          AnsiString PRODraft::ZeroSetDraftSensors(bool Local) {
   \                     ??ZeroSetDraftSensors:
   \   00000000   F0412DE9           PUSH     {R4-R8,LR}
   \   00000004   70D04DE2           SUB      SP,SP,#+112
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   0150A0E1           MOV      R5,R1
   \   00000010   0260A0E1           MOV      R6,R2
    884              AnsiString TmpString;
   \   00000014   0500A0E1           MOV      R0,R5
   \   00000018   ........           _BLF     ??AnsiString_1,??AnsiString??rA_1
    885              for (unsigned i = 0; i < LevelPressures.size(); i++) {
   \   0000001C   0080A0E3           MOV      R8,#+0
   \   00000020   5A7FA0E3           MOV      R7,#+360
   \   00000024   2D0000EA           B        ??ZeroSetDraftSensors_1
    886                  int ErrorStatus = LevelPressures[i]->AdjustSensorF(0.0, Local);
   \                     ??ZeroSetDraftSensors_2:
   \   00000028   040097E7           LDR      R0,[R7, +R4]
   \   0000002C   0620A0E1           MOV      R2,R6
   \   00000030   080190E7           LDR      R0,[R0, +R8, LSL #+2]
   \   00000034   0010A0E3           MOV      R1,#+0
   \   00000038   ........           _BLF     ??AdjustSensorF,??AdjustSensorF??rA
    887                  if (Local && ErrorStatus != E_NO_ERR) {
   \   0000003C   000056E3           CMP      R6,#+0
   \   00000040   00005013           CMPNE    R0,#+0
   \   00000044   2400000A           BEQ      ??ZeroSetDraftSensors_3
    888                      TmpString += Name + ": " + GetErrorMsg(ErrorStatus) + '\n';
   \   00000048   0010A0E1           MOV      R1,R0
   \   0000004C   54008DE2           ADD      R0,SP,#+84
   \   00000050   ........           _BLF     ??GetErrorMsg,??GetErrorMsg??rA
   \   00000054   2A2F8FE2           ADR      R2,??ZeroSetDraftSensors_4  ;; ": "
   \   00000058   441084E2           ADD      R1,R4,#+68
   \   0000005C   38008DE2           ADD      R0,SP,#+56
   \   00000060   ........           _BLF     `??operator+_1`,`??operator+??rA_1`
   \   00000064   54208DE2           ADD      R2,SP,#+84
   \   00000068   38108DE2           ADD      R1,SP,#+56
   \   0000006C   1C008DE2           ADD      R0,SP,#+28
   \   00000070   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000074   0A20A0E3           MOV      R2,#+10
   \   00000078   1C108DE2           ADD      R1,SP,#+28
   \   0000007C   0D00A0E1           MOV      R0,SP
   \   00000080   ........           _BLF     `??operator+_2`,`??operator+??rA_2`
   \   00000084   ........           LDR      R0,??DataTable32  ;; ??npos
   \   00000088   0020A0E3           MOV      R2,#+0
   \   0000008C   003090E5           LDR      R3,[R0, #+0]
   \   00000090   0D10A0E1           MOV      R1,SP
   \   00000094   0500A0E1           MOV      R0,R5
   \   00000098   ........           _BLF     ??append,??append??rA
   \   0000009C   0020A0E3           MOV      R2,#+0
   \   000000A0   0110A0E3           MOV      R1,#+1
   \   000000A4   0D00A0E1           MOV      R0,SP
   \   000000A8   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000000AC   0020A0E3           MOV      R2,#+0
   \   000000B0   0110A0E3           MOV      R1,#+1
   \   000000B4   1C008DE2           ADD      R0,SP,#+28
   \   000000B8   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000000BC   0020A0E3           MOV      R2,#+0
   \   000000C0   0110A0E3           MOV      R1,#+1
   \   000000C4   54008DE2           ADD      R0,SP,#+84
   \   000000C8   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000000CC   0020A0E3           MOV      R2,#+0
   \   000000D0   0110A0E3           MOV      R1,#+1
   \   000000D4   38008DE2           ADD      R0,SP,#+56
   \   000000D8   ........           _BLF     ??_Tidy,??_Tidy??rA
    889                  }
    890              }
   \                     ??ZeroSetDraftSensors_3:
   \   000000DC   018088E2           ADD      R8,R8,#+1
   \                     ??ZeroSetDraftSensors_1:
   \   000000E0   040087E0           ADD      R0,R7,R4
   \   000000E4   041090E5           LDR      R1,[R0, #+4]
   \   000000E8   000090E5           LDR      R0,[R0, #+0]
   \   000000EC   000041E0           SUB      R0,R1,R0
   \   000000F0   200158E1           CMP      R8,R0, LSR #+2
   \   000000F4   CBFFFF3A           BCC      ??ZeroSetDraftSensors_2
    891              return (TmpString);
   \   000000F8   70D08DE2           ADD      SP,SP,#+112
   \   000000FC   F041BDE8           POP      {R4-R8,LR}
   \   00000100   1EFF2FE1           BX       LR               ;; return
   \                     ??ZeroSetDraftSensors_4:
   \   00000104   3A200000           DC8      ": ",+0
    892          }
    893          
    894          

   \                                 In segment DATA_I, align 4, align-sorted
    895          ValueList PRODraft::DraftValueList[ ]  = {
   \                     ??DraftValueList:
   \   00000000                      DS8 60
   \   0000003C                      REQUIRE `?<Initializer for DraftValueList>`
    896          
    897          	{ L_WORD1073, L_WORD1073, SVT_SUBMENU  },
    898          	{ L_WORD552, L_WORD552, SVT_DRAFT  },
    899          	{ L_WORD550, L_WORD1068, SVT_LEVEL_OFFSET },
    900          	{ L_WORD812, L_WORD812, SVT_SEPARATOR },
    901              { L_WORD813, L_WORD813, SVT_SUBMENU_END },
    902          };
    903          #define EXTERNAL_OBJECTS    5

   \                                 In segment CODE, align 4, keep-with-next
    904          ValueList* PRODraft::GetValueInfoTable(int &Entries, int Index) {
    905          #ifdef ANWIN
    906              ValueList SubMenuEnd=   { L_WORD813, L_WORD813, SVT_SUBMENU_END };
    907              ValueList SubMenuStart[EXTERNAL_OBJECTS];
    908          
    909              ValueList  *VInfoList[EXTERNAL_OBJECTS] = {NULL, NULL, NULL, NULL, NULL};
    910              int ExtEntries[EXTERNAL_OBJECTS] = { 0, 0, 0, 0, 0,};
    911              int Cnt = 0;
    912          	if ( !PROTank::TankVector.empty()){
    913                  ValueList TankSubMenuStart=   { L_WORD1074, L_WORD1074, SVT_SUBMENU };
    914          		VInfoList[Cnt] = PROTank::TankVector[0]->GetValueInfoTable(ExtEntries[Cnt],Index);
    915                  SubMenuStart[Cnt]=  TankSubMenuStart;
    916                  Cnt++;
    917              }
    918              if ( !PROLinePressure::ObjVector.empty()){
    919                  ValueList LPressSubMenuStart=   { L_WORD1075, L_WORD1075, SVT_SUBMENU };
    920          		VInfoList[Cnt] = PROLinePressure::ObjVector[0]->GetValueInfoTable(ExtEntries[Cnt],Index);
    921                  SubMenuStart[Cnt]=  LPressSubMenuStart;
    922                  Cnt++;
    923              }
    924          	Entries = NELEMENTS(DraftValueList);
    925              for (int i =0; i < Cnt; i++) {
    926                  if (VInfoList[i]) {
    927                      Entries   += ExtEntries[i]+1;  // Exclude "Unused" and add SubMenuStart and SubMenuEnd
    928                  }
    929              }
    930              ValueList *CombinedList = new ValueList[Entries];
    931              // First copy my own table (PRODraft)
    932              memcpy(CombinedList,DraftValueList, sizeof(DraftValueList) );
    933              char *ValKeyPtr = (char*)&CombinedList[NELEMENTS(DraftValueList)];
    934              for (int i =0; i < Cnt; i++) {
    935          		if (VInfoList[i]) {
    936          			// First SubMenu
    937          			int NumberOfBytesToCopy = sizeof(ValueList);
    938          			memcpy(ValKeyPtr,(char*)&SubMenuStart[i], NumberOfBytesToCopy);
    939          			ValKeyPtr += NumberOfBytesToCopy;
    940          			// Don't include "Unused"
    941          			NumberOfBytesToCopy = sizeof(ValueList)*(ExtEntries[i]-1);
    942          			memcpy(ValKeyPtr,&VInfoList[i][1], NumberOfBytesToCopy);
    943          			ValKeyPtr += NumberOfBytesToCopy;
    944          			// End Submenu
    945          			NumberOfBytesToCopy = sizeof(ValueList);
    946          			memcpy(ValKeyPtr,(char*)&SubMenuEnd, NumberOfBytesToCopy);
    947                      ValKeyPtr += NumberOfBytesToCopy;
    948          		}
    949              }
    950              return CombinedList;
    951          #else
    952              return GetValueInfoTableStatic( Entries, Index );
   \                     ??GetValueInfoTable:
   \   00000000   0000A0E3           MOV      R0,#+0
   \   00000004   000081E5           STR      R0,[R1, #+0]
   \   00000008   1EFF2FE1           BX       LR               ;; return
    953          #endif
    954          }

   \                                 In segment DATA_ID, align 4, align-sorted
   \                     `?<Initializer for DraftValueList>`:
   \   00000000   310400003104       DC32 1073, 1073, 101, 552, 552, 1531, 550, 1068, 1064, 812, 812, 100
   \              000065000000
   \              280200002802
   \              0000FB050000
   \              260200002C04
   \              000028040000
   \              2C0300002C03
   \              000064000000
   \   00000030   2D0300002D03       DC32 813, 813, 102
   \              000066000000

   \                                 In segment DIFUNCT, align 4, keep-with-next, root
   \   00000000                      REQUIRE ?call_ctors
   \   00000000   ........           DC32    ??__sti__routine

   \                                 In segment DATA_C, align 1, align-sorted
   \   00000000   444600             DC8 "DF"

   \                                 In segment DATA_C, align 1, align-sorted
   \   00000000   445000             DC8 "DP"

   \                                 In segment DATA_C, align 1, align-sorted
   \   00000000   445300             DC8 "DS"

   \                                 In segment DATA_C, align 1, align-sorted
   \   00000000   444100             DC8 "DA"

   \                                 In segment DATA_C, align 4, align-sorted
   \   00000000   44415000           DC8 "DAP"

   \                                 In segment DATA_C, align 4, align-sorted
   \   00000000   44415300           DC8 "DAS"

   \                                 In segment DATA_C, align 4, align-sorted
   \   00000000   44465000           DC8 "DFP"

   \                                 In segment DATA_C, align 4, align-sorted
   \   00000000   44465300           DC8 "DFS"

   \                                 In segment DATA_C, align 1, align-sorted
   \   00000000   3000               DC8 "0"

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "Draft">`:
   \   00000000   447261667400       DC8 "Draft"
   \   00000006   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "Draft ">`:
   \   00000000   447261667420       DC8 "Draft "
   \              00          
   \   00000007   00                 DC8 0
   \   00000008   3A0A556E6B6E       DC8 ":\012Unknown error started at line:"
   \              6F776E206572
   \              726F72207374
   \              617274656420
   \              6174206C696E
   \              653A00      
   \   00000029   000000             DC8 0, 0, 0
   \   0000002C   3A0A54686520       DC8 ":\012The keyword "
   \              6B6579776F72
   \              642000      
   \   0000003B   00                 DC8 0
   \   0000003C   206973206E6F       DC8 " is not allowed here!! Line:"
   \              7420616C6C6F
   \              776564206865
   \              72652121204C
   \              696E653A00  
   \   00000059   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "Zero set warnings:">`:
   \   00000000   5A65726F2073       DC8 "Zero set warnings:"
   \              657420776172
   \              6E696E67733A
   \              00          
   \   00000013   00                 DC8 0

   \                                 In segment DATA_C, align 4, align-sorted
   \   00000000   302E3000           DC8 "0.0"

   \                                 In segment DATA_C, align 1, align-sorted
   \   00000000   3A2000             DC8 ": "

   \                                 In segment CODE, align 4, keep-with-next
   \   static __??Code32?? __intrinsic __code __interwork __atpcs void __sti__routine()
   \                     ??__sti__routine:
   \   00000000   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs PRODraft &PRODraft::new PRODraft(int)
   \                     `??new PRODraft`:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   750FA0E3           MOV      R0,#+468
   \   0000000C   ........           _BLF     `??operator new`,`??operator new??rA`
   \   00000010   000050E3           CMP      R0,#+0
   \   00000014   0100000A           BEQ      `??new PRODraft_1`
   \   00000018   0410A0E1           MOV      R1,R4
   \   0000001C   ........           BL       ??PRODraft
   \                     `??new PRODraft_1`:
   \   00000020   1040BDE8           POP      {R4,LR}
   \   00000024   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable9:
   \   00000000   ........           DC32     ??DraftFilterDegree

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable10:
   \   00000000   ........           DC32     ??__vtbl

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable11:
   \   00000000   ........           DC32     TabStr1

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable12:
   \   00000000   ........           DC32     CrLfStr

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable13:
   \   00000000   ........           DC32     TabStr2

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable14:
   \   00000000   ........           DC32     ??npos

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable15:
   \   00000000   ........           DC32     ??PRODraftSysPtr

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable16:
   \   00000000   ........           DC32     ??Has2ndMark

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable23:
   \   00000000   ........           DC32     ??Has2ndMark

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable24:
   \   00000000   ........           DC32     TabStr1

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable25:
   \   00000000   ........           DC32     CrLfStr

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable26:
   \   00000000   ........           DC32     ??npos

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable27:
   \   00000000   ........           DC32     TabStr2

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable28:
   \   00000000   ........           DC32     ??PRODraftSysPtr

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable31:
   \   00000000   ........           DC32     ??DraftFilterDegree

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable32:
   \   00000000   ........           DC32     ??npos
    955          
    956          
    957          

   Maximum stack usage in bytes:

     Function                       CSTACK
     --------                       ------
     PRODraft::Calculate()             32
     PRODraft::GetCalcVal(float *, float *)
                                        0
     PRODraft::GetLDistanceMarkToPP()
                                        4
     PRODraft::GetStringValue(int, int, AnsiString &)
                                        4
     PRODraft::GetValue(int, int, float &, int &, int &)
                                       36
     PRODraft::GetValueInfoTable(int &, int)
                                        0
     PRODraft::GetValueInfoTableStatic(int &, int)
                                        0
     PRODraft::Initiate()             240
     PRODraft::LoadConfigString(TSNConfigString &)
                                      200
     PRODraft::MakeConfigString(int)
                                     1048
     PRODraft::PRODraft(int)           12
     PRODraft::PutFloatValue(int, float)
                                       20
     PRODraft::PutValue(int, int, AnsiString, bool, int *)
                                      228
     PRODraft::ReceiveData(unsigned char *)
                                       20
     PRODraft::RestoreSettings(TSNConfigString *)
                                      516
     PRODraft::SaveSettings(TSNConfigString *)
                                      396
     PRODraft::SendData(unsigned short)
                                       56
     PRODraft::SetDraftFilter()         0
     PRODraft::SetDraftFilterTimer(int)
                                        4
     PRODraft::TrimListCorrectionFC()
                                        4
     PRODraft::TrimListCorrectionRef()
                                        4
     PRODraft::ZeroSetDraftSensors(bool)
                                      136
     PRODraft::new PRODraft(int)        8
     PRODraft::~PRODraft()             16
     _Tree<_Tset_traits<AnalogInput *, less<AnalogInput *>, allocator<AnalogInput *>, false>>::_Insert(bool, _Tree<_Tset_traits<AnalogInput *, less<AnalogInput *>, allocator<AnalogInput *>, false>>::_Nodeptr, AnalogInput *)
                                       24
     _Tree<_Tset_traits<AnalogInput *, less<AnalogInput *>, allocator<AnalogInput *>, false>>::insert(AnalogInput *)
                                       44
     _Tree_algobase<allocator<void>>::_DecP(_Tree_algobase<allocator<void>>::_Genptr)
                                        0
     _Tree_algobase<allocator<void>>::_Insert(bool, _Tree_algobase<allocator<void>>::_Genptr, _Tree_algobase<allocator<void>>::_Genptr)
                                       20
     _Tree_algobase<allocator<void>>::_Lrotate(_Tree_algobase<allocator<void>>::_Genptr)
                                        0
     _Tree_algobase<allocator<void>>::_Rrotate(_Tree_algobase<allocator<void>>::_Genptr)
                                        0
     _Vector_impl<AIPressSensor *, allocator<AIPressSensor *>>::_Insert(AIPressSensor **, AIPressSensor * const &)
                                       16
     _Vector_impl<AIPressSensor *, allocator<AIPressSensor *>>::_Make_room(AIPressSensor **, unsigned int)
                                       32
     _Vector_impl<AIPressSensor *, allocator<AIPressSensor *>>::_Push_back0(AIPressSensor *)
                                        8
     _Vector_impl<AIPressSensor *, allocator<AIPressSensor *>>::_Tidy0()
                                        4
     _Vector_impl<AnalogInput *, allocator<AnalogInput *>>::_Insert(AnalogInput **, AnalogInput * const &)
                                       16
     _Vector_impl<AnalogInput *, allocator<AnalogInput *>>::_Make_room(AnalogInput **, unsigned int)
                                       32
     _Vector_impl<AnalogInput *, allocator<AnalogInput *>>::_Push_back0(AnalogInput *)
                                        8
     __sti__routine()                   0
     operator+(string const &, char const *)
                                       44
     operator+(string const &, char)
                                       40
     operator+(string const &, string const &)
                                       40
     string::string(string const &)    12


   Segment part sizes:

     Function/Label                 Bytes
     --------------                 -----
     string::string(string const &)   64
     _Tree_algobase<allocator<void>>::_DecP(_Tree_algobase<allocator<void>>::_Genptr)
                                     100
     _Tree_algobase<allocator<void>>::_Rrotate(_Tree_algobase<allocator<void>>::_Genptr)
                                      84
     _Tree_algobase<allocator<void>>::_Lrotate(_Tree_algobase<allocator<void>>::_Genptr)
                                      84
     _Tree_algobase<allocator<void>>::_Insert(bool, _Tree_algobase<allocator<void>>::_Genptr, _Tree_algobase<allocator<void>>::_Genptr)
                                     356
     _Tree<_Tset_traits<AnalogInput *, less<AnalogInput *>, allocator<AnalogInput *>, false>>::insert(AnalogInput *)
                                     200
     _Tree<_Tset_traits<AnalogInput *, less<AnalogInput *>, allocator<AnalogInput *>, false>>::_Insert(bool, _Tree<_Tset_traits<AnalogInput *, less<AnalogInput *>, allocator<AnalogInput *>, false>>::_Nodeptr, AnalogInput *)
                                      96
     _Vector_impl<AIPressSensor *, allocator<AIPressSensor *>>::_Tidy0()
                                      36
     _Vector_impl<AnalogInput *, allocator<AnalogInput *>>::_Insert(AnalogInput **, AnalogInput * const &)
                                      72
     _Vector_impl<AIPressSensor *, allocator<AIPressSensor *>>::_Insert(AIPressSensor **, AIPressSensor * const &)
                                      72
     _Vector_impl<AnalogInput *, allocator<AnalogInput *>>::_Make_room(AnalogInput **, unsigned int)
                                     244
     _Vector_impl<AIPressSensor *, allocator<AIPressSensor *>>::_Make_room(AIPressSensor **, unsigned int)
                                     232
     _Vector_impl<AIPressSensor *, allocator<AIPressSensor *>>::_Push_back0(AIPressSensor *)
                                      72
     _Vector_impl<AnalogInput *, allocator<AnalogInput *>>::_Push_back0(AnalogInput *)
                                      72
     operator+(string const &, string const &)
                                      88
     operator+(string const &, char const *)
                                      92
     operator+(string const &, char)
                                      76
     PRODraft::NumberOfPRO             4
     PRODraft::DraftFilterDegree      24
     PRODraft::PRODraft(int)          92
     PRODraft::Initiate()            804
     ?Subroutine26                     8
     PRODraft::~PRODraft()            84
     PRODraft::MakeConfigString(int)
                                    2532
     ?Subroutine27                    20
     PRODraft::LoadConfigString(TSNConfigString &)
                                    2188
     PRODraft::SaveSettings(TSNConfigString *)
                                     724
     PRODraft::RestoreSettings(TSNConfigString *)
                                     972
     PRODraft::Calculate()           696
     PRODraft::TrimListCorrectionRef()
                                      16
     ?Subroutine25                    12
     PRODraft::TrimListCorrectionFC()
                                      12
     PRODraft::GetCalcVal(float *, float *)
                                      32
     PRODraft::GetValue(int, int, float &, int &, int &)
                                     380
     ?Subroutine28                    20
     PRODraft::GetStringValue(int, int, AnsiString &)
                                      12
     PRODraft::PutValue(int, int, AnsiString, bool, int *)
                                     872
     PRODraft::PutFloatValue(int, float)
                                     484
     PRODraft::GetValueInfoTableStatic(int &, int)
                                      16
     PRODraft::SetDraftFilterTimer(int)
                                      24
     PRODraft::SetDraftFilter()       16
     PRODraft::ReceiveData(unsigned char *)
                                     260
     PRODraft::SendData(unsigned short)
                                     384
     PRODraft::GetLDistanceMarkToPP()
                                      24
     PRODraft::ZeroSetDraftSensors(bool)
                                     264
     PRODraft::DraftValueList         60
     PRODraft::GetValueInfoTable(int &, int)
                                      12
     ?<Initializer for DraftValueList>
                                      60
     ?<Constant "DF">                  3
     ?<Constant "DP">                  3
     ?<Constant "DS">                  3
     ?<Constant "DA">                  3
     ?<Constant "DAP">                 4
     ?<Constant "DAS">                 4
     ?<Constant "DFP">                 4
     ?<Constant "DFS">                 4
     ?<Constant "0">                   2
     ?<Constant "Draft">               8
     ?<Constant "Draft ">             92
     ?<Constant "Zero set warnings:">
                                      20
     ?<Constant "0.0">                 4
     ?<Constant ": ">                  3
     __sti__routine()                  4
     PRODraft::new PRODraft(int)      40
     ??DataTable9                      4
     ??DataTable10                     4
     ??DataTable11                     4
     ??DataTable12                     4
     ??DataTable13                     4
     ??DataTable14                     4
     ??DataTable15                     4
     ??DataTable16                     4
     ??DataTable23                     4
     ??DataTable24                     4
     ??DataTable25                     4
     ??DataTable26                     4
     ??DataTable27                     4
     ??DataTable28                     4
     ??DataTable31                     4
     ??DataTable32                     4
      Others                        1356

 
 14 288 bytes in segment CODE
    305 bytes in segment DATA_C
     60 bytes in segment DATA_I
     60 bytes in segment DATA_ID
     28 bytes in segment DATA_Z
      4 bytes in segment DIFUNCT
     24 bytes in segment INITTAB
 
 11 072 bytes of CODE  memory (+ 3 244 bytes shared)
    365 bytes of CONST memory
     88 bytes of DATA  memory

Errors: none
Warnings: none
