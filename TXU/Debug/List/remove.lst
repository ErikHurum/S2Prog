##############################################################################
#                                                                            #
# IAR ARM ANSI C/C++ Compiler V4.42A/W32               14/Sep/2022  15:20:16 #
# Copyright 1999-2005 IAR Systems. All rights reserved.                      #
#                                                                            #
#    Cpu mode        =  interwork                                            #
#    Endian          =  little                                               #
#    Stack alignment =  4                                                    #
#    Source file     =  C:\Program Files (x86)\IAR Systems\Embedded          #
#                       Workbench 4.0\arm\config\template\project\dlib\remov #
#                       e.c                                                  #
#    Command line    =  "C:\Program Files (x86)\IAR Systems\Embedded         #
#                       Workbench 4.0\arm\config\template\project\dlib\remov #
#                       e.c" --fpu None -D OS_LIBMODE_SP -D CPU_S3C2410 -D   #
#                       OS_RAMVECT=0 -D OS_UART=-1 -D S2TXU -D USE_LZO=1 -D  #
#                       __ARM_LIBRARY__ -D WATCHDOG=1 -D NETWORK=1 -lCN      #
#                       D:\S2Prog\TXU\Debug\List\ -o                         #
#                       D:\S2Prog\TXU\Debug\Obj\ -s9 --debug --cpu_mode arm  #
#                       --endian little --cpu ARM920T --stack_align 4        #
#                       --interwork -e --enable_multibytes --dlib_config     #
#                       "C:\Program Files (x86)\IAR Systems\Embedded         #
#                       Workbench 4.0\arm\LIB\dl4tpainl8n.h" -I              #
#                       D:\S2Prog\TXU\GUI\CORE\ -I D:\S2Prog\TXU\GUI\WM\ -I  #
#                       D:\S2Prog\TXU\GUI\WIDGET\ -I D:\S2Prog\TXU\CONFIG\   #
#                       -I D:\S2Prog\TXU\INC\ -I D:\S2Prog\TXU\..\SHARED\INC #
#                       \ -I D:\S2Prog\TXU\..\SHARED\SRC\ -I                 #
#                       D:\S2Prog\TXU\..\SHARED\LZO\minilzo.210\ -I          #
#                       D:\S2Prog\TXU\lwip-1.4.1\src\include\ -I             #
#                       D:\S2Prog\TXU\lwip-1.4.1\src\include\ipv4\ -I        #
#                       D:\S2Prog\TXU\lwip-1.4.1\src\ -I                     #
#                       D:\S2Prog\TXU\..\SHARED\Database\ -I                 #
#                       D:\S2Prog\TXU\src\ -I "C:\Program Files (x86)\IAR    #
#                       Systems\Embedded Workbench 4.0\arm\INC\"             #
#                       --inline_threshold=2                                 #
#    List file       =  D:\S2Prog\TXU\Debug\List\remove.lst                  #
#    Object file     =  D:\S2Prog\TXU\Debug\Obj\remove.r79                   #
#                                                                            #
#                                                                            #
##############################################################################

C:\Program Files (x86)\IAR Systems\Embedded Workbench 4.0\arm\config\template\project\dlib\remove.c
      1          /*******************
      2           *
      3           * Copyright 1998-2003 IAR Systems. All rights reserved.
      4           *
      5           * $Revision: 1.6 $
      6           *
      7           * This is a template implementation of the "remove" function of the
      8           * standard library.  Replace it with a system-specific
      9           * implementation.
     10           *
     11           * The "remove" function should remove the file named "filename".  It
     12           * should return 0 on success and nonzero on failure.
     13           *
     14           ********************/
     15          
     16          #include <stdio.h>
     17          
     18          _STD_BEGIN
     19          
     20          #pragma module_name = "?remove"
     21          
     22          #pragma diag_suppress = Pe826
     23          

   \                                 In segment CODE, align 4, keep-with-next
     24          int remove(const char * filename)
     25          {
     26            return 0;
   \                     remove:
   \   00000000   0000A0E3           MOV      R0,#+0
   \   00000004   1EFF2FE1           BX       LR               ;; return
     27          }
     28          
     29          _STD_END

   Maximum stack usage in bytes:

     Function CSTACK
     -------- ------
     remove       0


   Segment part sizes:

     Function/Label Bytes
     -------------- -----
     remove            8
      Others           4

 
 12 bytes in segment CODE
 
 8 bytes of CODE memory (+ 4 bytes shared)

Errors: none
Warnings: none
