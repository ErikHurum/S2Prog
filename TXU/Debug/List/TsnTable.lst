##############################################################################
#                                                                            #
# IAR ARM ANSI C/C++ Compiler V4.42A/W32               14/Sep/2022  15:20:02 #
# Copyright 1999-2005 IAR Systems. All rights reserved.                      #
#                                                                            #
#    Cpu mode        =  interwork                                            #
#    Endian          =  little                                               #
#    Stack alignment =  4                                                    #
#    Source file     =  D:\S2Prog\Shared\Src\TsnTable.Cpp                    #
#    Command line    =  D:\S2Prog\Shared\Src\TsnTable.Cpp --fpu None -D      #
#                       OS_LIBMODE_SP -D CPU_S3C2410 -D OS_RAMVECT=0 -D      #
#                       OS_UART=-1 -D S2TXU -D USE_LZO=1 -D __ARM_LIBRARY__  #
#                       -D WATCHDOG=1 -D NETWORK=1 -lCN                      #
#                       D:\S2Prog\TXU\Debug\List\ -o                         #
#                       D:\S2Prog\TXU\Debug\Obj\ -z9 --debug --cpu_mode arm  #
#                       --endian little --cpu ARM920T --stack_align 4        #
#                       --interwork -e --enable_multibytes --eec++           #
#                       --dlib_config "C:\Program Files (x86)\IAR            #
#                       Systems\Embedded Workbench                           #
#                       4.0\arm\LIB\dl4tpainl8n.h" -I                        #
#                       D:\S2Prog\TXU\GUI\CORE\ -I D:\S2Prog\TXU\GUI\WM\ -I  #
#                       D:\S2Prog\TXU\GUI\WIDGET\ -I D:\S2Prog\TXU\CONFIG\   #
#                       -I D:\S2Prog\TXU\INC\ -I D:\S2Prog\TXU\..\SHARED\INC #
#                       \ -I D:\S2Prog\TXU\..\SHARED\SRC\ -I                 #
#                       D:\S2Prog\TXU\..\SHARED\LZO\minilzo.210\ -I          #
#                       D:\S2Prog\TXU\lwip-1.4.1\src\include\ -I             #
#                       D:\S2Prog\TXU\lwip-1.4.1\src\include\ipv4\ -I        #
#                       D:\S2Prog\TXU\lwip-1.4.1\src\ -I                     #
#                       D:\S2Prog\TXU\..\SHARED\Database\ -I                 #
#                       D:\S2Prog\TXU\src\ -I "C:\Program Files (x86)\IAR    #
#                       Systems\Embedded Workbench 4.0\arm\INC\"             #
#                       --inline_threshold=2                                 #
#    List file       =  D:\S2Prog\TXU\Debug\List\TsnTable.lst                #
#    Object file     =  D:\S2Prog\TXU\Debug\Obj\TsnTable.r79                 #
#                                                                            #
#                                                                            #
##############################################################################

D:\S2Prog\Shared\Src\TsnTable.Cpp
      1          //---------------------------------------------------------------------------
      2          #include "TSNIncludes.h"
      3          #pragma hdrstop
      4          //---------------------------------------------------------------------------
      5          
      6          //////////////////////////////////////////////////////////////////
      7          //
      8          //	Linear table
      9          //
     10          //	Other tables like 2 degree tables inherit from this object
     11          //
     12          /////////////////////////////////////////////////////////////////
     13          

   \                                 In segment CODE, align 4, keep-with-next
     14          TSNTable::TSNTable(int TabType)
     15          {
   \                     ??TSNTable:
   \   00000000   18209FE5           LDR      R2,??TSNTable_1  ;; ??__vtbl
   \   00000004   0C2080E5           STR      R2,[R0, #+12]
     16              TableType        = TabType;
   \   00000008   001080E5           STR      R1,[R0, #+0]
     17              TableOffset      = 0.0;
   \   0000000C   0010A0E3           MOV      R1,#+0
   \   00000010   041080E5           STR      R1,[R0, #+4]
     18              CorrectionFactor = 1.0;
   \   00000014   FE15A0E3           MOV      R1,#+1065353216
   \   00000018   081080E5           STR      R1,[R0, #+8]
     19          }
   \   0000001C   1EFF2FE1           BX       LR               ;; return
   \                     ??TSNTable_1:
   \   00000020   ........           DC32     ??__vtbl
     20          
     21          
     22          

   \                                 In segment CODE, align 4, keep-with-next
     23          TSNTable::~TSNTable(void)
     24          {
     25          }
   \                     `?~TSNTable`:
   \   00000000   1EFF2FE1           BX       LR               ;; return
     26          //---------------------------------------------------------------------------
     27          
     28          ///////////////////////////////////////////////////////////////
     29          //
     30          // Routines for the Configuration
     31          //
     32          ///////////////////////////////////////////////////////////////
     33          

   \                                 In segment CODE, align 4, keep-with-next
     34          AnsiString TSNTable::MakeConfigString(int ExtraTabs)
     35          {
   \                     ??MakeConfigString:
   \   00000000   00402DE9           PUSH     {LR}
   \   00000004   0100A0E1           MOV      R0,R1
     36              return("");
   \   00000008   ........           ADR      R1,??Subroutine10_0  ;; ""
   \   0000000C   ........           _BLF     ??AnsiString,??AnsiString??rA
   \   00000010                      REQUIRE ?Subroutine10
   \   00000010                      ;; // Fall through to label ?Subroutine10
     37          }

   \                                 In segment CODE, align 4, keep-with-next
   \                     ?Subroutine10:
   \   00000000   0040BDE8           POP      {LR}
   \   00000004   1EFF2FE1           BX       LR               ;; return
   \                     ??Subroutine10_0:
   \   00000008   00000000           DC8      "",+0,+0,+0
     38          

   \                                 In segment CODE, align 4, keep-with-next
     39          bool TSNTable::LoadConfigString(TSNConfigString &ConfigString, PRogramObjectBase *PROPtr)
     40          {
     41              bool NoError = true;
     42              return(NoError);
   \                     ??LoadConfigString:
   \   00000000   0100A0E3           MOV      R0,#+1
   \   00000004   1EFF2FE1           BX       LR               ;; return
     43          }
     44          
     45          //---------------------------------------------------------------------------

   \                                 In segment CODE, align 4, keep-with-next
     46          void TSNTable::MakeConstants(void)
     47          {
     48          }
   \                     ??MakeConstants:
   \   00000000   1EFF2FE1           BX       LR               ;; return
     49          //---------------------------------------------------------------------------
     50          

   \                                 In segment CODE, align 4, keep-with-next
     51          void TSNTable::FindMinMax(void)
     52          {
     53          }
   \                     ??FindMinMax:
   \   00000000   1EFF2FE1           BX       LR               ;; return
     54          //---------------------------------------------------------------------------
     55          

   \                                 In segment CODE, align 4, keep-with-next
     56          void TSNTable::CheckTable(void)
     57          {
     58          }
   \                     ??CheckTable:
   \   00000000   1EFF2FE1           BX       LR               ;; return

   \                                 In segment DIFUNCT, align 4, keep-with-next, root
   \   00000000                      REQUIRE ?call_ctors
   \   00000000   ........           DC32    ??__sti__routine

   \                                 In segment DATA_C, align 1, align-sorted
   \   00000000   00                 DC8 ""

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs TSNTable &TSNTable::new TSNTable(int)
   \                     `??new TSNTable`:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   1000A0E3           MOV      R0,#+16
   \   0000000C   ........           _BLF     `??operator new`,`??operator new??rA`
   \   00000010   000050E3           CMP      R0,#+0
   \   00000014   0100000A           BEQ      `??new TSNTable_1`
   \   00000018   0410A0E1           MOV      R1,R4
   \   0000001C   ........           BL       ??TSNTable
   \                     `??new TSNTable_1`:
   \   00000020   1040BDE8           POP      {R4,LR}
   \   00000024   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void TSNTable::delete ~TSNTable(TSNTable *)
   \                     `??delete ~TSNTable`:
   \   00000000   00402DE9           PUSH     {LR}
   \   00000004   000050E3           CMP      R0,#+0
   \   00000008   0000000A           BEQ      `??delete ~TSNTable_1`
   \   0000000C   ........           _BLF     `??operator delete`,`??operator delete??rA`
   \                     `??delete ~TSNTable_1`:
   \   00000010   ........           B        ?Subroutine10

   \                                 In segment CODE, align 4, keep-with-next
   \   static __??Code32?? __intrinsic __code __interwork __atpcs void __sti__routine()
   \                     ??__sti__routine:
   \   00000000   1EFF2FE1           BX       LR               ;; return

   Maximum stack usage in bytes:

     Function                       CSTACK
     --------                       ------
     TSNTable::CheckTable()             0
     TSNTable::FindMinMax()             0
     TSNTable::LoadConfigString(TSNConfigString &, PRogramObjectBase *)
                                        0
     TSNTable::MakeConfigString(int)
                                        4
     TSNTable::MakeConstants()          0
     TSNTable::TSNTable(int)            0
     TSNTable::delete ~TSNTable(TSNTable *)
                                        4
     TSNTable::new TSNTable(int)        8
     TSNTable::~TSNTable()              0
     __sti__routine()                   0


   Segment part sizes:

     Function/Label                 Bytes
     --------------                 -----
     TSNTable::TSNTable(int)          36
     TSNTable::~TSNTable()             4
     TSNTable::MakeConfigString(int)
                                      16
     ?Subroutine10                    12
     TSNTable::LoadConfigString(TSNConfigString &, PRogramObjectBase *)
                                       8
     TSNTable::MakeConstants()         4
     TSNTable::FindMinMax()            4
     TSNTable::CheckTable()            4
     ?<Constant "">                    1
     TSNTable::new TSNTable(int)      40
     TSNTable::delete ~TSNTable(TSNTable *)
                                      20
     __sti__routine()                  4
      Others                         100

 
 228 bytes in segment CODE
  21 bytes in segment DATA_C
   4 bytes in segment DIFUNCT
 
 156 bytes of CODE  memory (+ 76 bytes shared)
  21 bytes of CONST memory

Errors: none
Warnings: none
