##############################################################################
#                                                                            #
# IAR ARM ANSI C/C++ Compiler V4.42A/W32               14/Sep/2022  15:18:59 #
# Copyright 1999-2005 IAR Systems. All rights reserved.                      #
#                                                                            #
#    Cpu mode        =  interwork                                            #
#    Endian          =  little                                               #
#    Stack alignment =  4                                                    #
#    Source file     =  D:\S2Prog\TXU\src\TDUTankCleaningWin.cpp             #
#    Command line    =  D:\S2Prog\TXU\src\TDUTankCleaningWin.cpp --fpu None  #
#                       -D OS_LIBMODE_SP -D CPU_S3C2410 -D OS_RAMVECT=0 -D   #
#                       OS_UART=-1 -D S2TXU -D USE_LZO=1 -D __ARM_LIBRARY__  #
#                       -D WATCHDOG=1 -D NETWORK=1 -lCN                      #
#                       D:\S2Prog\TXU\Debug\List\ -o                         #
#                       D:\S2Prog\TXU\Debug\Obj\ -s9 --debug --cpu_mode arm  #
#                       --endian little --cpu ARM920T --stack_align 4        #
#                       --interwork -e --enable_multibytes --eec++           #
#                       --dlib_config "C:\Program Files (x86)\IAR            #
#                       Systems\Embedded Workbench                           #
#                       4.0\arm\LIB\dl4tpainl8n.h" -I                        #
#                       D:\S2Prog\TXU\GUI\CORE\ -I D:\S2Prog\TXU\GUI\WM\ -I  #
#                       D:\S2Prog\TXU\GUI\WIDGET\ -I D:\S2Prog\TXU\CONFIG\   #
#                       -I D:\S2Prog\TXU\INC\ -I D:\S2Prog\TXU\..\SHARED\INC #
#                       \ -I D:\S2Prog\TXU\..\SHARED\SRC\ -I                 #
#                       D:\S2Prog\TXU\..\SHARED\LZO\minilzo.210\ -I          #
#                       D:\S2Prog\TXU\lwip-1.4.1\src\include\ -I             #
#                       D:\S2Prog\TXU\lwip-1.4.1\src\include\ipv4\ -I        #
#                       D:\S2Prog\TXU\lwip-1.4.1\src\ -I                     #
#                       D:\S2Prog\TXU\..\SHARED\Database\ -I                 #
#                       D:\S2Prog\TXU\src\ -I "C:\Program Files (x86)\IAR    #
#                       Systems\Embedded Workbench 4.0\arm\INC\"             #
#                       --inline_threshold=2                                 #
#    List file       =  D:\S2Prog\TXU\Debug\List\TDUTankCleaningWin.lst      #
#    Object file     =  D:\S2Prog\TXU\Debug\Obj\TDUTankCleaningWin.r79       #
#                                                                            #
#                                                                            #
##############################################################################

D:\S2Prog\TXU\src\TDUTankCleaningWin.cpp
      1          #include "TDUIncludes.h"

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void _Vector_impl<vector<vector<PROTank *>>, allocator<vector<vector<PROTank *>>>>::_Tidy0()
   \                     ??_Tidy0:
   \   00000000   F0402DE9           PUSH     {R4-R7,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   005094E5           LDR      R5,[R4, #+0]
   \   0000000C   000055E3           CMP      R5,#+0
   \   00000010   0E00000A           BEQ      ??_Tidy0_2
   \   00000014   046094E5           LDR      R6,[R4, #+4]
   \   00000018   060055E1           CMP      R5,R6
   \   0000001C   0800000A           BEQ      ??_Tidy0_3
   \   00000020   0070A0E3           MOV      R7,#+0
   \                     ??_Tidy0_4:
   \   00000024   0500A0E1           MOV      R0,R5
   \   00000028   ........           _BLF     ??_Tidy0_1,??_Tidy0??rA
   \   0000002C   007085E5           STR      R7,[R5, #+0]
   \   00000030   047085E5           STR      R7,[R5, #+4]
   \   00000034   087085E5           STR      R7,[R5, #+8]
   \   00000038   0C5085E2           ADD      R5,R5,#+12
   \   0000003C   060055E1           CMP      R5,R6
   \   00000040   F7FFFF1A           BNE      ??_Tidy0_4
   \                     ??_Tidy0_3:
   \   00000044   000094E5           LDR      R0,[R4, #+0]
   \   00000048   040084E5           STR      R0,[R4, #+4]
   \   0000004C   ........           _BLF     `??operator delete`,`??operator delete??rA`
   \                     ??_Tidy0_2:
   \   00000050   F040BDE8           POP      {R4-R7,LR}
   \   00000054   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void _Vector_impl<vector<PROTank *>, allocator<vector<PROTank *>>>::_Tidy0()
   \                     ??_Tidy0_1:
   \   00000000   F0402DE9           PUSH     {R4-R7,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   005094E5           LDR      R5,[R4, #+0]
   \   0000000C   000055E3           CMP      R5,#+0
   \   00000010   1100000A           BEQ      ??_Tidy0_5
   \   00000014   046094E5           LDR      R6,[R4, #+4]
   \   00000018   060055E1           CMP      R5,R6
   \   0000001C   0B00000A           BEQ      ??_Tidy0_6
   \   00000020   0070A0E3           MOV      R7,#+0
   \                     ??_Tidy0_7:
   \   00000024   000095E5           LDR      R0,[R5, #+0]
   \   00000028   000050E3           CMP      R0,#+0
   \   0000002C   0100000A           BEQ      ??_Tidy0_8
   \   00000030   040085E5           STR      R0,[R5, #+4]
   \   00000034   ........           _BLF     `??operator delete`,`??operator delete??rA`
   \                     ??_Tidy0_8:
   \   00000038   007085E5           STR      R7,[R5, #+0]
   \   0000003C   047085E5           STR      R7,[R5, #+4]
   \   00000040   087085E5           STR      R7,[R5, #+8]
   \   00000044   0C5085E2           ADD      R5,R5,#+12
   \   00000048   060055E1           CMP      R5,R6
   \   0000004C   F4FFFF1A           BNE      ??_Tidy0_7
   \                     ??_Tidy0_6:
   \   00000050   000094E5           LDR      R0,[R4, #+0]
   \   00000054   040084E5           STR      R0,[R4, #+4]
   \   00000058   ........           _BLF     `??operator delete`,`??operator delete??rA`
   \                     ??_Tidy0_5:
   \   0000005C   F040BDE8           POP      {R4-R7,LR}
   \   00000060   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void _Vector_impl<vector<PROTank *>, allocator<vector<PROTank *>>>::_Assign(_Vector_impl<vector<PROTank *>, allocator<vector<PROTank *>>> const &)
   \                     ??_Assign:
   \   00000000   F0432DE9           PUSH     {R4-R9,LR}
   \   00000004   04D04DE2           SUB      SP,SP,#+4
   \   00000008   0050A0E1           MOV      R5,R0
   \   0000000C   0160A0E1           MOV      R6,R1
   \   00000010   060055E1           CMP      R5,R6
   \   00000014   3600000A           BEQ      ??_Assign_2
   \   00000018   049096E5           LDR      R9,[R6, #+4]
   \   0000001C   008096E5           LDR      R8,[R6, #+0]
   \   00000020   2C229FE5           LDR      R2,??_Assign_3   ;; 0xffffffffaaaaaaab
   \   00000024   080049E0           SUB      R0,R9,R8
   \   00000028   923081E0           UMULL    R3,R1,R2,R0
   \   0000002C   A111B0E1           LSRS     R1,R1,#+3
   \   00000030   0070A0E3           MOV      R7,#+0
   \   00000034   0500001A           BNE      ??_Assign_4
   \   00000038   0500A0E1           MOV      R0,R5
   \   0000003C   ........           _BLF     ??_Tidy0_1,??_Tidy0??rA
   \   00000040   007085E5           STR      R7,[R5, #+0]
   \   00000044   047085E5           STR      R7,[R5, #+4]
   \   00000048   087085E5           STR      R7,[R5, #+8]
   \   0000004C   280000EA           B        ??_Assign_2
   \                     ??_Assign_4:
   \   00000050   004095E5           LDR      R4,[R5, #+0]
   \   00000054   040095E5           LDR      R0,[R5, #+4]
   \   00000058   02C0A0E1           MOV      R12,R2
   \   0000005C   043040E0           SUB      R3,R0,R4
   \   00000060   9CE382E0           UMULL    LR,R2,R12,R3
   \   00000064   A221A0E1           LSR      R2,R2,#+3
   \   00000068   010052E1           CMP      R2,R1
   \   0000006C   2200003A           BCC      ??_Assign_5
   \   00000070   090058E1           CMP      R8,R9
   \   00000074   0600000A           BEQ      ??_Assign_6
   \                     ??_Assign_7:
   \   00000078   0810A0E1           MOV      R1,R8
   \   0000007C   0400A0E1           MOV      R0,R4
   \   00000080   ........           _BLF     ??_Assign_1,??_Assign??rA
   \   00000084   0C4084E2           ADD      R4,R4,#+12
   \   00000088   0C8088E2           ADD      R8,R8,#+12
   \   0000008C   090058E1           CMP      R8,R9
   \   00000090   F8FFFF1A           BNE      ??_Assign_7
   \                     ??_Assign_6:
   \   00000094   048095E5           LDR      R8,[R5, #+4]
   \   00000098   080054E1           CMP      R4,R8
   \   0000009C   0A00000A           BEQ      ??_Assign_8
   \                     ??_Assign_9:
   \   000000A0   000094E5           LDR      R0,[R4, #+0]
   \   000000A4   000050E3           CMP      R0,#+0
   \   000000A8   0100000A           BEQ      ??_Assign_10
   \   000000AC   040084E5           STR      R0,[R4, #+4]
   \   000000B0   ........           _BLF     `??operator delete`,`??operator delete??rA`
   \                     ??_Assign_10:
   \   000000B4   007084E5           STR      R7,[R4, #+0]
   \   000000B8   047084E5           STR      R7,[R4, #+4]
   \   000000BC   087084E5           STR      R7,[R4, #+8]
   \   000000C0   0C4084E2           ADD      R4,R4,#+12
   \   000000C4   080054E1           CMP      R4,R8
   \   000000C8   F4FFFF1A           BNE      ??_Assign_9
   \                     ??_Assign_8:
   \   000000CC   040096E5           LDR      R0,[R6, #+4]
   \   000000D0   001096E5           LDR      R1,[R6, #+0]
   \   000000D4   010040E0           SUB      R0,R0,R1
   \   000000D8   74119FE5           LDR      R1,??_Assign_3   ;; 0xffffffffaaaaaaab
   \   000000DC   912083E0           UMULL    R2,R3,R1,R0
   \   000000E0   001095E5           LDR      R1,[R5, #+0]
   \   000000E4   A331A0E1           LSR      R3,R3,#+3
   \   000000E8   0C00A0E3           MOV      R0,#+12
   \   000000EC   901321E0           MLA      R1,R0,R3,R1
   \   000000F0   041085E5           STR      R1,[R5, #+4]
   \                     ??_Assign_2:
   \   000000F4   F143BDE8           POP      {R0,R4-R9,LR}
   \   000000F8   1EFF2FE1           BX       LR
   \                     ??_Assign_5:
   \   000000FC   083095E5           LDR      R3,[R5, #+8]
   \   00000100   0C90A0E1           MOV      R9,R12
   \   00000104   043043E0           SUB      R3,R3,R4
   \   00000108   99C38EE0           UMULL    R12,LR,R9,R3
   \   0000010C   AEE1A0E1           LSR      LR,LR,#+3
   \   00000110   01005EE1           CMP      LR,R1
   \   00000114   1C00003A           BCC      ??_Assign_11
   \   00000118   0C00A0E3           MOV      R0,#+12
   \   0000011C   908229E0           MLA      R9,R0,R2,R8
   \   00000120   090058E1           CMP      R8,R9
   \   00000124   0600000A           BEQ      ??_Assign_12
   \                     ??_Assign_13:
   \   00000128   0810A0E1           MOV      R1,R8
   \   0000012C   0400A0E1           MOV      R0,R4
   \   00000130   ........           _BLF     ??_Assign_1,??_Assign??rA
   \   00000134   0C4084E2           ADD      R4,R4,#+12
   \   00000138   0C8088E2           ADD      R8,R8,#+12
   \   0000013C   090058E1           CMP      R8,R9
   \   00000140   F8FFFF1A           BNE      ??_Assign_13
   \                     ??_Assign_12:
   \   00000144   044096E5           LDR      R4,[R6, #+4]
   \   00000148   046095E5           LDR      R6,[R5, #+4]
   \   0000014C   040059E1           CMP      R9,R4
   \   00000150   0B00000A           BEQ      ??_Assign_14
   \                     ??_Assign_15:
   \   00000154   000056E3           CMP      R6,#+0
   \   00000158   0500000A           BEQ      ??_Assign_16
   \   0000015C   007086E5           STR      R7,[R6, #+0]
   \   00000160   047086E5           STR      R7,[R6, #+4]
   \   00000164   087086E5           STR      R7,[R6, #+8]
   \   00000168   0910A0E1           MOV      R1,R9
   \   0000016C   0600A0E1           MOV      R0,R6
   \   00000170   ........           _BLF     ??_Assign_1,??_Assign??rA
   \                     ??_Assign_16:
   \   00000174   0C6086E2           ADD      R6,R6,#+12
   \   00000178   0C9089E2           ADD      R9,R9,#+12
   \   0000017C   040059E1           CMP      R9,R4
   \   00000180   F3FFFF1A           BNE      ??_Assign_15
   \                     ??_Assign_14:
   \   00000184   046085E5           STR      R6,[R5, #+4]
   \   00000188   D9FFFFEA           B        ??_Assign_2
   \                     ??_Assign_11:
   \   0000018C   000054E3           CMP      R4,#+0
   \   00000190   0F00000A           BEQ      ??_Assign_17
   \   00000194   0080A0E1           MOV      R8,R0
   \   00000198   080054E1           CMP      R4,R8
   \   0000019C   0A00000A           BEQ      ??_Assign_18
   \                     ??_Assign_19:
   \   000001A0   000094E5           LDR      R0,[R4, #+0]
   \   000001A4   000050E3           CMP      R0,#+0
   \   000001A8   0100000A           BEQ      ??_Assign_20
   \   000001AC   040084E5           STR      R0,[R4, #+4]
   \   000001B0   ........           _BLF     `??operator delete`,`??operator delete??rA`
   \                     ??_Assign_20:
   \   000001B4   007084E5           STR      R7,[R4, #+0]
   \   000001B8   047084E5           STR      R7,[R4, #+4]
   \   000001BC   087084E5           STR      R7,[R4, #+8]
   \   000001C0   0C4084E2           ADD      R4,R4,#+12
   \   000001C4   080054E1           CMP      R4,R8
   \   000001C8   F4FFFF1A           BNE      ??_Assign_19
   \                     ??_Assign_18:
   \   000001CC   000095E5           LDR      R0,[R5, #+0]
   \   000001D0   ........           _BLF     `??operator delete`,`??operator delete??rA`
   \                     ??_Assign_17:
   \   000001D4   040096E5           LDR      R0,[R6, #+4]
   \   000001D8   001096E5           LDR      R1,[R6, #+0]
   \   000001DC   007085E5           STR      R7,[R5, #+0]
   \   000001E0   014050E0           SUBS     R4,R0,R1
   \   000001E4   047085E5           STR      R7,[R5, #+4]
   \   000001E8   087085E5           STR      R7,[R5, #+8]
   \   000001EC   C0FFFF0A           BEQ      ??_Assign_2
   \   000001F0   0400A0E1           MOV      R0,R4
   \   000001F4   ........           _BLF     `??operator new`,`??operator new??rA`
   \   000001F8   000085E5           STR      R0,[R5, #+0]
   \   000001FC   0080A0E1           MOV      R8,R0
   \   00000200   048085E5           STR      R8,[R5, #+4]
   \   00000204   080084E0           ADD      R0,R4,R8
   \   00000208   080085E5           STR      R0,[R5, #+8]
   \   0000020C   044096E5           LDR      R4,[R6, #+4]
   \   00000210   006096E5           LDR      R6,[R6, #+0]
   \   00000214   040056E1           CMP      R6,R4
   \   00000218   0B00000A           BEQ      ??_Assign_21
   \                     ??_Assign_22:
   \   0000021C   000058E3           CMP      R8,#+0
   \   00000220   0500000A           BEQ      ??_Assign_23
   \   00000224   007088E5           STR      R7,[R8, #+0]
   \   00000228   047088E5           STR      R7,[R8, #+4]
   \   0000022C   087088E5           STR      R7,[R8, #+8]
   \   00000230   0610A0E1           MOV      R1,R6
   \   00000234   0800A0E1           MOV      R0,R8
   \   00000238   ........           _BLF     ??_Assign_1,??_Assign??rA
   \                     ??_Assign_23:
   \   0000023C   0C8088E2           ADD      R8,R8,#+12
   \   00000240   0C6086E2           ADD      R6,R6,#+12
   \   00000244   040056E1           CMP      R6,R4
   \   00000248   F3FFFF1A           BNE      ??_Assign_22
   \                     ??_Assign_21:
   \   0000024C   048085E5           STR      R8,[R5, #+4]
   \                     ??_Assign_24:
   \   00000250   A7FFFFEA           B        ??_Assign_2
   \                     ??_Assign_3:
   \   00000254   ABAAAAAA           DC32     0xffffffffaaaaaaab

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void _Vector_impl<PROTank *, allocator<PROTank *>>::_Assign(_Vector_impl<PROTank *, allocator<PROTank *>> const &)
   \                     ??_Assign_1:
   \   00000000   F0402DE9           PUSH     {R4-R7,LR}
   \   00000004   04D04DE2           SUB      SP,SP,#+4
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   0150A0E1           MOV      R5,R1
   \   00000010   050054E1           CMP      R4,R5
   \   00000014   3500000A           BEQ      ??_Assign_25
   \   00000018   041095E5           LDR      R1,[R5, #+4]
   \   0000001C   000095E5           LDR      R0,[R5, #+0]
   \   00000020   0060A0E3           MOV      R6,#+0
   \   00000024   002041E0           SUB      R2,R1,R0
   \   00000028   2231B0E1           LSRS     R3,R2,#+2
   \   0000002C   002094E5           LDR      R2,[R4, #+0]
   \   00000030   0800001A           BNE      ??_Assign_26
   \   00000034   000052E3           CMP      R2,#+0
   \   00000038   0200000A           BEQ      ??_Assign_27
   \   0000003C   042084E5           STR      R2,[R4, #+4]
   \   00000040   0200A0E1           MOV      R0,R2
   \   00000044   ........           _BLF     `??operator delete`,`??operator delete??rA`
   \                     ??_Assign_27:
   \   00000048   006084E5           STR      R6,[R4, #+0]
   \   0000004C   046084E5           STR      R6,[R4, #+4]
   \   00000050   086084E5           STR      R6,[R4, #+8]
   \   00000054   250000EA           B        ??_Assign_25
   \                     ??_Assign_26:
   \   00000058   047094E5           LDR      R7,[R4, #+4]
   \   0000005C   027047E0           SUB      R7,R7,R2
   \   00000060   270153E1           CMP      R3,R7, LSR #+2
   \   00000064   0700008A           BHI      ??_Assign_28
   \   00000068   ........           _BLF     _Copy_a4,??_Copy_a4??rA
   \   0000006C   040095E5           LDR      R0,[R5, #+4]
   \   00000070   001095E5           LDR      R1,[R5, #+0]
   \   00000074   010040E0           SUB      R0,R0,R1
   \   00000078   001094E5           LDR      R1,[R4, #+0]
   \   0000007C   2001A0E1           LSR      R0,R0,#+2
   \   00000080   000181E0           ADD      R0,R1,R0, LSL #+2
   \   00000084   180000EA           B        ??_Assign_29
   \                     ??_Assign_28:
   \   00000088   087094E5           LDR      R7,[R4, #+8]
   \   0000008C   027047E0           SUB      R7,R7,R2
   \   00000090   270153E1           CMP      R3,R7, LSR #+2
   \   00000094   1300009A           BLS      ??_Assign_30
   \                     ??_Assign_31:
   \   00000098   000052E3           CMP      R2,#+0
   \   0000009C   0100000A           BEQ      ??_Assign_32
   \   000000A0   0200A0E1           MOV      R0,R2
   \   000000A4   ........           _BLF     `??operator delete`,`??operator delete??rA`
   \                     ??_Assign_32:
   \   000000A8   040095E5           LDR      R0,[R5, #+4]
   \   000000AC   001095E5           LDR      R1,[R5, #+0]
   \   000000B0   006084E5           STR      R6,[R4, #+0]
   \   000000B4   017050E0           SUBS     R7,R0,R1
   \   000000B8   046084E5           STR      R6,[R4, #+4]
   \   000000BC   086084E5           STR      R6,[R4, #+8]
   \   000000C0   0A00000A           BEQ      ??_Assign_25
   \   000000C4   0700A0E1           MOV      R0,R7
   \   000000C8   ........           _BLF     `??operator new`,`??operator new??rA`
   \   000000CC   000084E5           STR      R0,[R4, #+0]
   \   000000D0   0020A0E1           MOV      R2,R0
   \   000000D4   042084E5           STR      R2,[R4, #+4]
   \   000000D8   020087E0           ADD      R0,R7,R2
   \   000000DC   080084E5           STR      R0,[R4, #+8]
   \   000000E0   041095E5           LDR      R1,[R5, #+4]
   \   000000E4   000095E5           LDR      R0,[R5, #+0]
   \                     ??_Assign_30:
   \   000000E8   ........           _BLF     _Copy_a4,??_Copy_a4??rA
   \                     ??_Assign_29:
   \   000000EC   040084E5           STR      R0,[R4, #+4]
   \                     ??_Assign_25:
   \   000000F0   F140BDE8           POP      {R0,R4-R7,LR}
   \   000000F4   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs vector<PROTank *> * _Vector_impl<vector<PROTank *>, allocator<vector<PROTank *>>>::_Make_room(vector<PROTank *> *, unsigned int)
   \                     ??_Make_room:
   \   00000000   F04F2DE9           PUSH     {R4-R11,LR}
   \   00000004   10D04DE2           SUB      SP,SP,#+16
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   000094E5           LDR      R0,[R4, #+0]
   \   00000010   049094E5           LDR      R9,[R4, #+4]
   \   00000014   0150A0E1           MOV      R5,R1
   \   00000018   081094E5           LDR      R1,[R4, #+8]
   \   0000001C   0270A0E1           MOV      R7,R2
   \   00000020   B0229FE5           LDR      R2,??_Make_room_4  ;; 0xffffffffaaaaaaab
   \   00000024   001041E0           SUB      R1,R1,R0
   \   00000028   923188E0           UMULL    R3,R8,R2,R1
   \   0000002C   A881A0E1           LSR      R8,R8,#+3
   \   00000030   000049E0           SUB      R0,R9,R0
   \   00000034   923086E0           UMULL    R3,R6,R2,R0
   \   00000038   A661A0E1           LSR      R6,R6,#+3
   \   0000003C   00608DE5           STR      R6,[SP, #+0]
   \   00000040   000057E3           CMP      R7,#+0
   \   00000044   9F00000A           BEQ      ??_Make_room_5
   \   00000048   A201A0E1           MOV      R0,R2, LSR #+3
   \   0000004C   061040E0           SUB      R1,R0,R6
   \   00000050   070051E1           CMP      R1,R7
   \   00000054   9B00003A           BCC      ??_Make_room_5
   \   00000058   00109DE5           LDR      R1,[SP, #+0]
   \   0000005C   0C20A0E3           MOV      R2,#+12
   \   00000060   920703E0           MUL      R3,R2,R7
   \   00000064   04308DE5           STR      R3,[SP, #+4]
   \   00000068   0060A0E3           MOV      R6,#+0
   \   0000006C   011087E0           ADD      R1,R7,R1
   \   00000070   010058E1           CMP      R8,R1
   \   00000074   3C00002A           BCS      ??_Make_room_6
   \   00000078   A810A0E1           LSR      R1,R8,#+1
   \   0000007C   010040E0           SUB      R0,R0,R1
   \   00000080   080050E1           CMP      R0,R8
   \   00000084   00009DE5           LDR      R0,[SP, #+0]
   \   00000088   0080A033           MOVCC    R8,#+0
   \   0000008C   08808120           ADDCS    R8,R1,R8
   \   00000090   000087E0           ADD      R0,R7,R0
   \   00000094   000058E1           CMP      R8,R0
   \   00000098   00009D35           LDRCC    R0,[SP, #+0]
   \   0000009C   00808730           ADDCC    R8,R7,R0
   \   000000A0   920800E0           MUL      R0,R2,R8
   \   000000A4   ........           _BLF     `??operator new`,`??operator new??rA`
   \   000000A8   00B094E5           LDR      R11,[R4, #+0]
   \   000000AC   0090A0E1           MOV      R9,R0
   \   000000B0   09A0A0E1           MOV      R10,R9
   \   000000B4   05005BE1           CMP      R11,R5
   \   000000B8   0B00000A           BEQ      ??_Make_room_7
   \                     ??_Make_room_8:
   \   000000BC   00005AE3           CMP      R10,#+0
   \   000000C0   0500000A           BEQ      ??_Make_room_9
   \   000000C4   00608AE5           STR      R6,[R10, #+0]
   \   000000C8   04608AE5           STR      R6,[R10, #+4]
   \   000000CC   08608AE5           STR      R6,[R10, #+8]
   \   000000D0   0B10A0E1           MOV      R1,R11
   \   000000D4   0A00A0E1           MOV      R0,R10
   \   000000D8   ........           _BLF     ??_Assign_1,??_Assign??rA
   \                     ??_Make_room_9:
   \   000000DC   0CA08AE2           ADD      R10,R10,#+12
   \   000000E0   0CB08BE2           ADD      R11,R11,#+12
   \   000000E4   05005BE1           CMP      R11,R5
   \   000000E8   F3FFFF1A           BNE      ??_Make_room_8
   \                     ??_Make_room_7:
   \   000000EC   041094E5           LDR      R1,[R4, #+4]
   \   000000F0   08108DE5           STR      R1,[SP, #+8]
   \   000000F4   04009DE5           LDR      R0,[SP, #+4]
   \   000000F8   010055E1           CMP      R5,R1
   \   000000FC   0AB080E0           ADD      R11,R0,R10
   \   00000100   0C00000A           BEQ      ??_Make_room_10
   \                     ??_Make_room_11:
   \   00000104   00005BE3           CMP      R11,#+0
   \   00000108   0500000A           BEQ      ??_Make_room_12
   \   0000010C   00608BE5           STR      R6,[R11, #+0]
   \   00000110   04608BE5           STR      R6,[R11, #+4]
   \   00000114   08608BE5           STR      R6,[R11, #+8]
   \   00000118   0510A0E1           MOV      R1,R5
   \   0000011C   0B00A0E1           MOV      R0,R11
   \   00000120   ........           _BLF     ??_Assign_1,??_Assign??rA
   \                     ??_Make_room_12:
   \   00000124   08009DE5           LDR      R0,[SP, #+8]
   \   00000128   0CB08BE2           ADD      R11,R11,#+12
   \   0000012C   0C5085E2           ADD      R5,R5,#+12
   \   00000130   000055E1           CMP      R5,R0
   \   00000134   F2FFFF1A           BNE      ??_Make_room_11
   \                     ??_Make_room_10:
   \   00000138   0400A0E1           MOV      R0,R4
   \   0000013C   ........           _BLF     ??_Tidy0_1,??_Tidy0??rA
   \   00000140   0C00A0E3           MOV      R0,#+12
   \   00000144   909821E0           MLA      R1,R0,R8,R9
   \   00000148   081084E5           STR      R1,[R4, #+8]
   \   0000014C   00009DE5           LDR      R0,[SP, #+0]
   \   00000150   0C10A0E3           MOV      R1,#+12
   \   00000154   070080E0           ADD      R0,R0,R7
   \   00000158   919020E0           MLA      R0,R1,R0,R9
   \   0000015C   040084E5           STR      R0,[R4, #+4]
   \   00000160   009084E5           STR      R9,[R4, #+0]
   \   00000164   0A50A0E1           MOV      R5,R10
   \   00000168   560000EA           B        ??_Make_room_5
   \                     ??_Make_room_6:
   \   0000016C   64019FE5           LDR      R0,??_Make_room_4  ;; 0xffffffffaaaaaaab
   \   00000170   058083E0           ADD      R8,R3,R5
   \   00000174   901982E0           UMULL    R1,R2,R0,R9
   \   00000178   A221A0E1           LSR      R2,R2,#+3
   \   0000017C   901583E0           UMULL    R1,R3,R0,R5
   \   00000180   A331A0E1           LSR      R3,R3,#+3
   \   00000184   030042E0           SUB      R0,R2,R3
   \   00000188   070050E1           CMP      R0,R7
   \   0000018C   2200002A           BCS      ??_Make_room_13
   \   00000190   0570A0E1           MOV      R7,R5
   \   00000194   090057E1           CMP      R7,R9
   \   00000198   0B00000A           BEQ      ??_Make_room_14
   \                     ??_Make_room_15:
   \   0000019C   000058E3           CMP      R8,#+0
   \   000001A0   0500000A           BEQ      ??_Make_room_16
   \   000001A4   006088E5           STR      R6,[R8, #+0]
   \   000001A8   046088E5           STR      R6,[R8, #+4]
   \   000001AC   086088E5           STR      R6,[R8, #+8]
   \   000001B0   0710A0E1           MOV      R1,R7
   \   000001B4   0800A0E1           MOV      R0,R8
   \   000001B8   ........           _BLF     ??_Assign_1,??_Assign??rA
   \                     ??_Make_room_16:
   \   000001BC   0C8088E2           ADD      R8,R8,#+12
   \   000001C0   0C7087E2           ADD      R7,R7,#+12
   \   000001C4   090057E1           CMP      R7,R9
   \   000001C8   F3FFFF1A           BNE      ??_Make_room_15
   \                     ??_Make_room_14:
   \   000001CC   047094E5           LDR      R7,[R4, #+4]
   \   000001D0   0580A0E1           MOV      R8,R5
   \   000001D4   070058E1           CMP      R8,R7
   \   000001D8   0A00000A           BEQ      ??_Make_room_17
   \                     ??_Make_room_18:
   \   000001DC   000098E5           LDR      R0,[R8, #+0]
   \   000001E0   000050E3           CMP      R0,#+0
   \   000001E4   0100000A           BEQ      ??_Make_room_19
   \   000001E8   040088E5           STR      R0,[R8, #+4]
   \   000001EC   ........           _BLF     `??operator delete`,`??operator delete??rA`
   \                     ??_Make_room_19:
   \   000001F0   006088E5           STR      R6,[R8, #+0]
   \   000001F4   046088E5           STR      R6,[R8, #+4]
   \   000001F8   086088E5           STR      R6,[R8, #+8]
   \   000001FC   0C8088E2           ADD      R8,R8,#+12
   \   00000200   070058E1           CMP      R8,R7
   \   00000204   F4FFFF1A           BNE      ??_Make_room_18
   \                     ??_Make_room_17:
   \   00000208   04009DE5           LDR      R0,[SP, #+4]
   \   0000020C   041094E5           LDR      R1,[R4, #+4]
   \   00000210   010080E0           ADD      R0,R0,R1
   \   00000214   040084E5           STR      R0,[R4, #+4]
   \   00000218   2A0000EA           B        ??_Make_room_5
   \                     ??_Make_room_13:
   \   0000021C   04009DE5           LDR      R0,[SP, #+4]
   \   00000220   0970A0E1           MOV      R7,R9
   \   00000224   000060E2           RSB      R0,R0,#+0
   \   00000228   09A080E0           ADD      R10,R0,R9
   \   0000022C   0AB0A0E1           MOV      R11,R10
   \   00000230   09005BE1           CMP      R11,R9
   \   00000234   0B00000A           BEQ      ??_Make_room_20
   \                     ??_Make_room_21:
   \   00000238   000057E3           CMP      R7,#+0
   \   0000023C   0500000A           BEQ      ??_Make_room_22
   \   00000240   006087E5           STR      R6,[R7, #+0]
   \   00000244   046087E5           STR      R6,[R7, #+4]
   \   00000248   086087E5           STR      R6,[R7, #+8]
   \   0000024C   0B10A0E1           MOV      R1,R11
   \   00000250   0700A0E1           MOV      R0,R7
   \   00000254   ........           _BLF     ??_Assign_1,??_Assign??rA
   \                     ??_Make_room_22:
   \   00000258   0C7087E2           ADD      R7,R7,#+12
   \   0000025C   0CB08BE2           ADD      R11,R11,#+12
   \   00000260   09005BE1           CMP      R11,R9
   \   00000264   F3FFFF1A           BNE      ??_Make_room_21
   \                     ??_Make_room_20:
   \   00000268   047084E5           STR      R7,[R4, #+4]
   \   0000026C   0A0055E1           CMP      R5,R10
   \   00000270   0600000A           BEQ      ??_Make_room_23
   \                     ??_Make_room_24:
   \   00000274   0CA04AE2           SUB      R10,R10,#+12
   \   00000278   0A10A0E1           MOV      R1,R10
   \   0000027C   0C9049E2           SUB      R9,R9,#+12
   \   00000280   0900A0E1           MOV      R0,R9
   \   00000284   ........           _BLF     ??_Assign_1,??_Assign??rA
   \   00000288   0A0055E1           CMP      R5,R10
   \   0000028C   F8FFFF1A           BNE      ??_Make_room_24
   \                     ??_Make_room_23:
   \   00000290   0540A0E1           MOV      R4,R5
   \   00000294   080054E1           CMP      R4,R8
   \   00000298   0A00000A           BEQ      ??_Make_room_5
   \                     ??_Make_room_25:
   \   0000029C   000094E5           LDR      R0,[R4, #+0]
   \   000002A0   000050E3           CMP      R0,#+0
   \   000002A4   0100000A           BEQ      ??_Make_room_26
   \   000002A8   040084E5           STR      R0,[R4, #+4]
   \   000002AC   ........           _BLF     `??operator delete`,`??operator delete??rA`
   \                     ??_Make_room_26:
   \   000002B0   006084E5           STR      R6,[R4, #+0]
   \   000002B4   046084E5           STR      R6,[R4, #+4]
   \   000002B8   086084E5           STR      R6,[R4, #+8]
   \   000002BC   0C4084E2           ADD      R4,R4,#+12
   \   000002C0   080054E1           CMP      R4,R8
   \   000002C4   F4FFFF1A           BNE      ??_Make_room_25
   \                     ??_Make_room_5:
   \   000002C8   0500A0E1           MOV      R0,R5
   \   000002CC   10D08DE2           ADD      SP,SP,#+16
   \   000002D0   F04FBDE8           POP      {R4-R11,LR}
   \   000002D4   1EFF2FE1           BX       LR               ;; return
   \                     ??_Make_room_4:
   \   000002D8   ABAAAAAA           DC32     0xffffffffaaaaaaab

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs vector<vector<PROTank *>> * _Vector_impl<vector<vector<PROTank *>>, allocator<vector<vector<PROTank *>>>>::_Make_room(vector<vector<PROTank *>> *, unsigned int)
   \                     ??_Make_room_1:
   \   00000000   F04F2DE9           PUSH     {R4-R11,LR}
   \   00000004   10D04DE2           SUB      SP,SP,#+16
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   000094E5           LDR      R0,[R4, #+0]
   \   00000010   048094E5           LDR      R8,[R4, #+4]
   \   00000014   01B0A0E1           MOV      R11,R1
   \   00000018   081094E5           LDR      R1,[R4, #+8]
   \   0000001C   0250A0E1           MOV      R5,R2
   \   00000020   98229FE5           LDR      R2,??_Make_room_27  ;; 0xffffffffaaaaaaab
   \   00000024   001041E0           SUB      R1,R1,R0
   \   00000028   923187E0           UMULL    R3,R7,R2,R1
   \   0000002C   A771A0E1           LSR      R7,R7,#+3
   \   00000030   000048E0           SUB      R0,R8,R0
   \   00000034   923086E0           UMULL    R3,R6,R2,R0
   \   00000038   A661A0E1           LSR      R6,R6,#+3
   \   0000003C   00608DE5           STR      R6,[SP, #+0]
   \   00000040   000055E3           CMP      R5,#+0
   \   00000044   9900000A           BEQ      ??_Make_room_28
   \   00000048   A201A0E1           MOV      R0,R2, LSR #+3
   \   0000004C   061040E0           SUB      R1,R0,R6
   \   00000050   050051E1           CMP      R1,R5
   \   00000054   9500003A           BCC      ??_Make_room_28
   \   00000058   00109DE5           LDR      R1,[SP, #+0]
   \   0000005C   0C20A0E3           MOV      R2,#+12
   \   00000060   920503E0           MUL      R3,R2,R5
   \   00000064   04308DE5           STR      R3,[SP, #+4]
   \   00000068   0060A0E3           MOV      R6,#+0
   \   0000006C   011085E0           ADD      R1,R5,R1
   \   00000070   010057E1           CMP      R7,R1
   \   00000074   3C00002A           BCS      ??_Make_room_29
   \   00000078   A710A0E1           LSR      R1,R7,#+1
   \   0000007C   010040E0           SUB      R0,R0,R1
   \   00000080   070050E1           CMP      R0,R7
   \   00000084   00009DE5           LDR      R0,[SP, #+0]
   \   00000088   0070A033           MOVCC    R7,#+0
   \   0000008C   07708120           ADDCS    R7,R1,R7
   \   00000090   000085E0           ADD      R0,R5,R0
   \   00000094   000057E1           CMP      R7,R0
   \   00000098   00009D35           LDRCC    R0,[SP, #+0]
   \   0000009C   00708530           ADDCC    R7,R5,R0
   \   000000A0   920700E0           MUL      R0,R2,R7
   \   000000A4   ........           _BLF     `??operator new`,`??operator new??rA`
   \   000000A8   00A094E5           LDR      R10,[R4, #+0]
   \   000000AC   0080A0E1           MOV      R8,R0
   \   000000B0   0890A0E1           MOV      R9,R8
   \   000000B4   0B005AE1           CMP      R10,R11
   \   000000B8   0B00000A           BEQ      ??_Make_room_30
   \                     ??_Make_room_31:
   \   000000BC   000059E3           CMP      R9,#+0
   \   000000C0   0500000A           BEQ      ??_Make_room_32
   \   000000C4   006089E5           STR      R6,[R9, #+0]
   \   000000C8   046089E5           STR      R6,[R9, #+4]
   \   000000CC   086089E5           STR      R6,[R9, #+8]
   \   000000D0   0A10A0E1           MOV      R1,R10
   \   000000D4   0900A0E1           MOV      R0,R9
   \   000000D8   ........           _BLF     ??_Assign,??_Assign??rA_1
   \                     ??_Make_room_32:
   \   000000DC   0C9089E2           ADD      R9,R9,#+12
   \   000000E0   0CA08AE2           ADD      R10,R10,#+12
   \   000000E4   0B005AE1           CMP      R10,R11
   \   000000E8   F3FFFF1A           BNE      ??_Make_room_31
   \                     ??_Make_room_30:
   \   000000EC   041094E5           LDR      R1,[R4, #+4]
   \   000000F0   08108DE5           STR      R1,[SP, #+8]
   \   000000F4   04009DE5           LDR      R0,[SP, #+4]
   \   000000F8   01005BE1           CMP      R11,R1
   \   000000FC   09A080E0           ADD      R10,R0,R9
   \   00000100   0C00000A           BEQ      ??_Make_room_33
   \                     ??_Make_room_34:
   \   00000104   00005AE3           CMP      R10,#+0
   \   00000108   0500000A           BEQ      ??_Make_room_35
   \   0000010C   00608AE5           STR      R6,[R10, #+0]
   \   00000110   04608AE5           STR      R6,[R10, #+4]
   \   00000114   08608AE5           STR      R6,[R10, #+8]
   \   00000118   0B10A0E1           MOV      R1,R11
   \   0000011C   0A00A0E1           MOV      R0,R10
   \   00000120   ........           _BLF     ??_Assign,??_Assign??rA_1
   \                     ??_Make_room_35:
   \   00000124   08009DE5           LDR      R0,[SP, #+8]
   \   00000128   0CA08AE2           ADD      R10,R10,#+12
   \   0000012C   0CB08BE2           ADD      R11,R11,#+12
   \   00000130   00005BE1           CMP      R11,R0
   \   00000134   F2FFFF1A           BNE      ??_Make_room_34
   \                     ??_Make_room_33:
   \   00000138   0400A0E1           MOV      R0,R4
   \   0000013C   ........           _BLF     ??_Tidy0,??_Tidy0??rA_1
   \   00000140   0C00A0E3           MOV      R0,#+12
   \   00000144   908721E0           MLA      R1,R0,R7,R8
   \   00000148   081084E5           STR      R1,[R4, #+8]
   \   0000014C   00009DE5           LDR      R0,[SP, #+0]
   \   00000150   0C10A0E3           MOV      R1,#+12
   \   00000154   050080E0           ADD      R0,R0,R5
   \   00000158   918020E0           MLA      R0,R1,R0,R8
   \   0000015C   040084E5           STR      R0,[R4, #+4]
   \   00000160   008084E5           STR      R8,[R4, #+0]
   \   00000164   09B0A0E1           MOV      R11,R9
   \   00000168   500000EA           B        ??_Make_room_28
   \                     ??_Make_room_29:
   \   0000016C   4C019FE5           LDR      R0,??_Make_room_27  ;; 0xffffffffaaaaaaab
   \   00000170   0B7083E0           ADD      R7,R3,R11
   \   00000174   901882E0           UMULL    R1,R2,R0,R8
   \   00000178   A221A0E1           LSR      R2,R2,#+3
   \   0000017C   901B83E0           UMULL    R1,R3,R0,R11
   \   00000180   A331A0E1           LSR      R3,R3,#+3
   \   00000184   030042E0           SUB      R0,R2,R3
   \   00000188   050050E1           CMP      R0,R5
   \   0000018C   1F00002A           BCS      ??_Make_room_36
   \   00000190   0B50A0E1           MOV      R5,R11
   \   00000194   080055E1           CMP      R5,R8
   \   00000198   0B00000A           BEQ      ??_Make_room_37
   \                     ??_Make_room_38:
   \   0000019C   000057E3           CMP      R7,#+0
   \   000001A0   0500000A           BEQ      ??_Make_room_39
   \   000001A4   006087E5           STR      R6,[R7, #+0]
   \   000001A8   046087E5           STR      R6,[R7, #+4]
   \   000001AC   086087E5           STR      R6,[R7, #+8]
   \   000001B0   0510A0E1           MOV      R1,R5
   \   000001B4   0700A0E1           MOV      R0,R7
   \   000001B8   ........           _BLF     ??_Assign,??_Assign??rA_1
   \                     ??_Make_room_39:
   \   000001BC   0C7087E2           ADD      R7,R7,#+12
   \   000001C0   0C5085E2           ADD      R5,R5,#+12
   \   000001C4   080055E1           CMP      R5,R8
   \   000001C8   F3FFFF1A           BNE      ??_Make_room_38
   \                     ??_Make_room_37:
   \   000001CC   045094E5           LDR      R5,[R4, #+4]
   \   000001D0   0B70A0E1           MOV      R7,R11
   \   000001D4   050057E1           CMP      R7,R5
   \   000001D8   0700000A           BEQ      ??_Make_room_40
   \                     ??_Make_room_41:
   \   000001DC   0700A0E1           MOV      R0,R7
   \   000001E0   ........           _BLF     ??_Tidy0_1,??_Tidy0??rA
   \   000001E4   006087E5           STR      R6,[R7, #+0]
   \   000001E8   046087E5           STR      R6,[R7, #+4]
   \   000001EC   086087E5           STR      R6,[R7, #+8]
   \   000001F0   0C7087E2           ADD      R7,R7,#+12
   \   000001F4   050057E1           CMP      R7,R5
   \   000001F8   F7FFFF1A           BNE      ??_Make_room_41
   \                     ??_Make_room_40:
   \   000001FC   04009DE5           LDR      R0,[SP, #+4]
   \   00000200   041094E5           LDR      R1,[R4, #+4]
   \   00000204   010080E0           ADD      R0,R0,R1
   \   00000208   040084E5           STR      R0,[R4, #+4]
   \   0000020C   270000EA           B        ??_Make_room_28
   \                     ??_Make_room_36:
   \   00000210   04009DE5           LDR      R0,[SP, #+4]
   \   00000214   0850A0E1           MOV      R5,R8
   \   00000218   000060E2           RSB      R0,R0,#+0
   \   0000021C   089080E0           ADD      R9,R0,R8
   \   00000220   09A0A0E1           MOV      R10,R9
   \   00000224   08005AE1           CMP      R10,R8
   \   00000228   0B00000A           BEQ      ??_Make_room_42
   \                     ??_Make_room_43:
   \   0000022C   000055E3           CMP      R5,#+0
   \   00000230   0500000A           BEQ      ??_Make_room_44
   \   00000234   006085E5           STR      R6,[R5, #+0]
   \   00000238   046085E5           STR      R6,[R5, #+4]
   \   0000023C   086085E5           STR      R6,[R5, #+8]
   \   00000240   0A10A0E1           MOV      R1,R10
   \   00000244   0500A0E1           MOV      R0,R5
   \   00000248   ........           _BLF     ??_Assign,??_Assign??rA_1
   \                     ??_Make_room_44:
   \   0000024C   0C5085E2           ADD      R5,R5,#+12
   \   00000250   0CA08AE2           ADD      R10,R10,#+12
   \   00000254   08005AE1           CMP      R10,R8
   \   00000258   F3FFFF1A           BNE      ??_Make_room_43
   \                     ??_Make_room_42:
   \   0000025C   045084E5           STR      R5,[R4, #+4]
   \   00000260   09005BE1           CMP      R11,R9
   \   00000264   0600000A           BEQ      ??_Make_room_45
   \                     ??_Make_room_46:
   \   00000268   0C9049E2           SUB      R9,R9,#+12
   \   0000026C   0910A0E1           MOV      R1,R9
   \   00000270   0C8048E2           SUB      R8,R8,#+12
   \   00000274   0800A0E1           MOV      R0,R8
   \   00000278   ........           _BLF     ??_Assign,??_Assign??rA_1
   \   0000027C   09005BE1           CMP      R11,R9
   \   00000280   F8FFFF1A           BNE      ??_Make_room_46
   \                     ??_Make_room_45:
   \   00000284   0B40A0E1           MOV      R4,R11
   \   00000288   070054E1           CMP      R4,R7
   \   0000028C   0700000A           BEQ      ??_Make_room_28
   \                     ??_Make_room_47:
   \   00000290   0400A0E1           MOV      R0,R4
   \   00000294   ........           _BLF     ??_Tidy0_1,??_Tidy0??rA
   \   00000298   006084E5           STR      R6,[R4, #+0]
   \   0000029C   046084E5           STR      R6,[R4, #+4]
   \   000002A0   086084E5           STR      R6,[R4, #+8]
   \   000002A4   0C4084E2           ADD      R4,R4,#+12
   \   000002A8   070054E1           CMP      R4,R7
   \   000002AC   F7FFFF1A           BNE      ??_Make_room_47
   \                     ??_Make_room_28:
   \   000002B0   0B00A0E1           MOV      R0,R11
   \   000002B4   10D08DE2           ADD      SP,SP,#+16
   \   000002B8   F04FBDE8           POP      {R4-R11,LR}
   \   000002BC   1EFF2FE1           BX       LR               ;; return
   \                     ??_Make_room_27:
   \   000002C0   ABAAAAAA           DC32     0xffffffffaaaaaaab

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs PROTank ** _Vector_impl<PROTank *, allocator<PROTank *>>::_Make_room(PROTank **, unsigned int)
   \                     ??_Make_room_2:
   \   00000000   F0472DE9           PUSH     {R4-R10,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   000094E5           LDR      R0,[R4, #+0]
   \   0000000C   0150A0E1           MOV      R5,R1
   \   00000010   081094E5           LDR      R1,[R4, #+8]
   \   00000014   0260A0E1           MOV      R6,R2
   \   00000018   001041E0           SUB      R1,R1,R0
   \   0000001C   2171A0E1           LSR      R7,R1,#+2
   \   00000020   041094E5           LDR      R1,[R4, #+4]
   \   00000024   000056E3           CMP      R6,#+0
   \   00000028   000041E0           SUB      R0,R1,R0
   \   0000002C   2001A0E1           LSR      R0,R0,#+2
   \   00000030   2C00000A           BEQ      ??_Make_room_48
   \   00000034   C024E0E3           MVN      R2,#-1073741824
   \   00000038   002042E0           SUB      R2,R2,R0
   \   0000003C   060052E1           CMP      R2,R6
   \   00000040   2800003A           BCC      ??_Make_room_48
   \   00000044   008086E0           ADD      R8,R6,R0
   \   00000048   080057E1           CMP      R7,R8
   \   0000004C   1F00002A           BCS      ??_Make_room_49
   \   00000050   A700A0E1           LSR      R0,R7,#+1
   \   00000054   C014E0E3           MVN      R1,#-1073741824
   \   00000058   001041E0           SUB      R1,R1,R0
   \   0000005C   070051E1           CMP      R1,R7
   \   00000060   0070A033           MOVCC    R7,#+0
   \   00000064   07708020           ADDCS    R7,R0,R7
   \   00000068   080057E1           CMP      R7,R8
   \   0000006C   0870A031           MOVCC    R7,R8
   \   00000070   0701A0E1           LSL      R0,R7,#+2
   \   00000074   ........           _BLF     `??operator new`,`??operator new??rA`
   \   00000078   0090A0E1           MOV      R9,R0
   \   0000007C   000094E5           LDR      R0,[R4, #+0]
   \   00000080   0920A0E1           MOV      R2,R9
   \   00000084   0510A0E1           MOV      R1,R5
   \   00000088   ........           _BLF     _Copy_a4,??_Copy_a4??rA
   \   0000008C   041094E5           LDR      R1,[R4, #+4]
   \   00000090   00A0A0E1           MOV      R10,R0
   \   00000094   06218AE0           ADD      R2,R10,R6, LSL #+2
   \   00000098   0500A0E1           MOV      R0,R5
   \   0000009C   ........           _BLF     _Copy_a4,??_Copy_a4??rA
   \   000000A0   000094E5           LDR      R0,[R4, #+0]
   \   000000A4   000050E3           CMP      R0,#+0
   \   000000A8   0100000A           BEQ      ??_Make_room_50
   \   000000AC   040084E5           STR      R0,[R4, #+4]
   \   000000B0   ........           _BLF     `??operator delete`,`??operator delete??rA`
   \                     ??_Make_room_50:
   \   000000B4   070189E0           ADD      R0,R9,R7, LSL #+2
   \   000000B8   080084E5           STR      R0,[R4, #+8]
   \   000000BC   080189E0           ADD      R0,R9,R8, LSL #+2
   \   000000C0   040084E5           STR      R0,[R4, #+4]
   \   000000C4   009084E5           STR      R9,[R4, #+0]
   \   000000C8   0A50A0E1           MOV      R5,R10
   \   000000CC   050000EA           B        ??_Make_room_48
   \                     ??_Make_room_49:
   \   000000D0   062181E0           ADD      R2,R1,R6, LSL #+2
   \   000000D4   0500A0E1           MOV      R0,R5
   \   000000D8   ........           _BLF     _Copy_backward_a4,??_Copy_backward_a4??rA
   \   000000DC   040094E5           LDR      R0,[R4, #+4]
   \   000000E0   060180E0           ADD      R0,R0,R6, LSL #+2
   \   000000E4   040084E5           STR      R0,[R4, #+4]
   \                     ??_Make_room_48:
   \   000000E8   0500A0E1           MOV      R0,R5
   \   000000EC   F047BDE8           POP      {R4-R10,LR}
   \   000000F0   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs TDUTankCleaningWin_ButtonToTankMapping * _Vector_impl<TDUTankCleaningWin_ButtonToTankMapping, allocator<TDUTankCleaningWin_ButtonToTankMapping>>::_Make_room(TDUTankCleaningWin_ButtonToTankMapping *, unsigned int)
   \                     ??_Make_room_3:
   \   00000000   F0472DE9           PUSH     {R4-R10,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   000094E5           LDR      R0,[R4, #+0]
   \   0000000C   0150A0E1           MOV      R5,R1
   \   00000010   081094E5           LDR      R1,[R4, #+8]
   \   00000014   0260A0E1           MOV      R6,R2
   \   00000018   001041E0           SUB      R1,R1,R0
   \   0000001C   A171A0E1           LSR      R7,R1,#+3
   \   00000020   041094E5           LDR      R1,[R4, #+4]
   \   00000024   000056E3           CMP      R6,#+0
   \   00000028   000041E0           SUB      R0,R1,R0
   \   0000002C   A001A0E1           LSR      R0,R0,#+3
   \   00000030   2C00000A           BEQ      ??_Make_room_51
   \   00000034   E024E0E3           MVN      R2,#-536870912
   \   00000038   002042E0           SUB      R2,R2,R0
   \   0000003C   060052E1           CMP      R2,R6
   \   00000040   2800003A           BCC      ??_Make_room_51
   \   00000044   008086E0           ADD      R8,R6,R0
   \   00000048   080057E1           CMP      R7,R8
   \   0000004C   1F00002A           BCS      ??_Make_room_52
   \   00000050   A700A0E1           LSR      R0,R7,#+1
   \   00000054   E014E0E3           MVN      R1,#-536870912
   \   00000058   001041E0           SUB      R1,R1,R0
   \   0000005C   070051E1           CMP      R1,R7
   \   00000060   0070A033           MOVCC    R7,#+0
   \   00000064   07708020           ADDCS    R7,R0,R7
   \   00000068   080057E1           CMP      R7,R8
   \   0000006C   0870A031           MOVCC    R7,R8
   \   00000070   8701A0E1           LSL      R0,R7,#+3
   \   00000074   ........           _BLF     `??operator new`,`??operator new??rA`
   \   00000078   0090A0E1           MOV      R9,R0
   \   0000007C   000094E5           LDR      R0,[R4, #+0]
   \   00000080   0920A0E1           MOV      R2,R9
   \   00000084   0510A0E1           MOV      R1,R5
   \   00000088   ........           _BLF     _Copy_a4,??_Copy_a4??rA
   \   0000008C   041094E5           LDR      R1,[R4, #+4]
   \   00000090   00A0A0E1           MOV      R10,R0
   \   00000094   86218AE0           ADD      R2,R10,R6, LSL #+3
   \   00000098   0500A0E1           MOV      R0,R5
   \   0000009C   ........           _BLF     _Copy_a4,??_Copy_a4??rA
   \   000000A0   000094E5           LDR      R0,[R4, #+0]
   \   000000A4   000050E3           CMP      R0,#+0
   \   000000A8   0100000A           BEQ      ??_Make_room_53
   \   000000AC   040084E5           STR      R0,[R4, #+4]
   \   000000B0   ........           _BLF     `??operator delete`,`??operator delete??rA`
   \                     ??_Make_room_53:
   \   000000B4   870189E0           ADD      R0,R9,R7, LSL #+3
   \   000000B8   080084E5           STR      R0,[R4, #+8]
   \   000000BC   880189E0           ADD      R0,R9,R8, LSL #+3
   \   000000C0   040084E5           STR      R0,[R4, #+4]
   \   000000C4   009084E5           STR      R9,[R4, #+0]
   \   000000C8   0A50A0E1           MOV      R5,R10
   \   000000CC   050000EA           B        ??_Make_room_51
   \                     ??_Make_room_52:
   \   000000D0   862181E0           ADD      R2,R1,R6, LSL #+3
   \   000000D4   0500A0E1           MOV      R0,R5
   \   000000D8   ........           _BLF     _Copy_backward_a4,??_Copy_backward_a4??rA
   \   000000DC   040094E5           LDR      R0,[R4, #+4]
   \   000000E0   860180E0           ADD      R0,R0,R6, LSL #+3
   \   000000E4   040084E5           STR      R0,[R4, #+4]
   \                     ??_Make_room_51:
   \   000000E8   0500A0E1           MOV      R0,R5
   \   000000EC   F047BDE8           POP      {R4-R10,LR}
   \   000000F0   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void vector<vector<PROTank *>>::resize(unsigned int)
   \                     ??resize:
   \   00000000   F0412DE9           PUSH     {R4-R8,LR}
   \   00000004   3C419FE5           LDR      R4,??resize_2    ;; 0xffffffffaaaaaaab
   \   00000008   18D04DE2           SUB      SP,SP,#+24
   \   0000000C   0050A0E1           MOV      R5,R0
   \   00000010   046095E5           LDR      R6,[R5, #+4]
   \   00000014   000095E5           LDR      R0,[R5, #+0]
   \   00000018   003046E0           SUB      R3,R6,R0
   \   0000001C   947382E0           UMULL    R7,R2,R4,R3
   \   00000020   A221A0E1           LSR      R2,R2,#+3
   \   00000024   0040A0E3           MOV      R4,#+0
   \   00000028   010052E1           CMP      R2,R1
   \   0000002C   2F00002A           BCS      ??resize_3
   \   00000030   10219FE5           LDR      R2,??resize_2    ;; 0xffffffffaaaaaaab
   \   00000034   0C408DE5           STR      R4,[SP, #+12]
   \   00000038   10408DE5           STR      R4,[SP, #+16]
   \   0000003C   14408DE5           STR      R4,[SP, #+20]
   \   00000040   046095E5           LDR      R6,[R5, #+4]
   \   00000044   000095E5           LDR      R0,[R5, #+0]
   \   00000048   00408DE5           STR      R4,[SP, #+0]
   \   0000004C   000046E0           SUB      R0,R6,R0
   \   00000050   923087E0           UMULL    R3,R7,R2,R0
   \   00000054   A771A0E1           LSR      R7,R7,#+3
   \   00000058   077041E0           SUB      R7,R1,R7
   \   0000005C   04408DE5           STR      R4,[SP, #+4]
   \   00000060   08408DE5           STR      R4,[SP, #+8]
   \   00000064   0C108DE2           ADD      R1,SP,#+12
   \   00000068   0D00A0E1           MOV      R0,SP
   \   0000006C   ........           _BLF     ??_Assign_1,??_Assign??rA
   \   00000070   0720A0E1           MOV      R2,R7
   \   00000074   0610A0E1           MOV      R1,R6
   \   00000078   0500A0E1           MOV      R0,R5
   \   0000007C   ........           _BLF     ??_Make_room,??_Make_room??rA
   \   00000080   0050A0E1           MOV      R5,R0
   \   00000084   000057E3           CMP      R7,#+0
   \   00000088   0B00000A           BEQ      ??resize_4
   \                     ??resize_5:
   \   0000008C   000055E3           CMP      R5,#+0
   \   00000090   0500000A           BEQ      ??resize_6
   \   00000094   004085E5           STR      R4,[R5, #+0]
   \   00000098   044085E5           STR      R4,[R5, #+4]
   \   0000009C   084085E5           STR      R4,[R5, #+8]
   \   000000A0   0D10A0E1           MOV      R1,SP
   \   000000A4   0500A0E1           MOV      R0,R5
   \   000000A8   ........           _BLF     ??_Assign_1,??_Assign??rA
   \                     ??resize_6:
   \   000000AC   017047E2           SUB      R7,R7,#+1
   \   000000B0   0C5085E2           ADD      R5,R5,#+12
   \   000000B4   000057E3           CMP      R7,#+0
   \   000000B8   F3FFFF1A           BNE      ??resize_5
   \                     ??resize_4:
   \   000000BC   00009DE5           LDR      R0,[SP, #+0]
   \   000000C0   000050E3           CMP      R0,#+0
   \   000000C4   0200000A           BEQ      ??resize_7
   \   000000C8   0010A0E1           MOV      R1,R0
   \   000000CC   04108DE5           STR      R1,[SP, #+4]
   \   000000D0   ........           _BLF     `??operator delete`,`??operator delete??rA`
   \                     ??resize_7:
   \   000000D4   0C009DE5           LDR      R0,[SP, #+12]
   \   000000D8   000050E3           CMP      R0,#+0
   \   000000DC   1600000A           BEQ      ??resize_8
   \   000000E0   0010A0E1           MOV      R1,R0
   \   000000E4   10108DE5           STR      R1,[SP, #+16]
   \   000000E8   ........           _BLF     `??operator delete`,`??operator delete??rA`
   \   000000EC   120000EA           B        ??resize_8
   \                     ??resize_3:
   \   000000F0   020051E1           CMP      R1,R2
   \   000000F4   1000002A           BCS      ??resize_8
   \   000000F8   0C20A0E3           MOV      R2,#+12
   \   000000FC   920127E0           MLA      R7,R2,R1,R0
   \   00000100   060057E1           CMP      R7,R6
   \   00000104   0C00000A           BEQ      ??resize_8
   \   00000108   0780A0E1           MOV      R8,R7
   \                     ??resize_9:
   \   0000010C   000098E5           LDR      R0,[R8, #+0]
   \   00000110   000050E3           CMP      R0,#+0
   \   00000114   0100000A           BEQ      ??resize_10
   \   00000118   040088E5           STR      R0,[R8, #+4]
   \   0000011C   ........           _BLF     `??operator delete`,`??operator delete??rA`
   \                     ??resize_10:
   \   00000120   004088E5           STR      R4,[R8, #+0]
   \   00000124   044088E5           STR      R4,[R8, #+4]
   \   00000128   084088E5           STR      R4,[R8, #+8]
   \   0000012C   0C8088E2           ADD      R8,R8,#+12
   \   00000130   060058E1           CMP      R8,R6
   \   00000134   F4FFFF1A           BNE      ??resize_9
   \   00000138   047085E5           STR      R7,[R5, #+4]
   \                     ??resize_8:
   \   0000013C   18D08DE2           ADD      SP,SP,#+24
   \   00000140   F041BDE8           POP      {R4-R8,LR}
   \   00000144   1EFF2FE1           BX       LR               ;; return
   \                     ??resize_2:
   \   00000148   ABAAAAAA           DC32     0xffffffffaaaaaaab

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void vector<vector<vector<PROTank *>>>::resize(unsigned int)
   \                     ??resize_1:
   \   00000000   F0412DE9           PUSH     {R4-R8,LR}
   \   00000004   10419FE5           LDR      R4,??resize_11   ;; 0xffffffffaaaaaaab
   \   00000008   18D04DE2           SUB      SP,SP,#+24
   \   0000000C   0050A0E1           MOV      R5,R0
   \   00000010   046095E5           LDR      R6,[R5, #+4]
   \   00000014   000095E5           LDR      R0,[R5, #+0]
   \   00000018   003046E0           SUB      R3,R6,R0
   \   0000001C   947382E0           UMULL    R7,R2,R4,R3
   \   00000020   A221A0E1           LSR      R2,R2,#+3
   \   00000024   0040A0E3           MOV      R4,#+0
   \   00000028   010052E1           CMP      R2,R1
   \   0000002C   2700002A           BCS      ??resize_12
   \   00000030   E4209FE5           LDR      R2,??resize_11   ;; 0xffffffffaaaaaaab
   \   00000034   00408DE5           STR      R4,[SP, #+0]
   \   00000038   04408DE5           STR      R4,[SP, #+4]
   \   0000003C   08408DE5           STR      R4,[SP, #+8]
   \   00000040   046095E5           LDR      R6,[R5, #+4]
   \   00000044   000095E5           LDR      R0,[R5, #+0]
   \   00000048   0C408DE5           STR      R4,[SP, #+12]
   \   0000004C   000046E0           SUB      R0,R6,R0
   \   00000050   923087E0           UMULL    R3,R7,R2,R0
   \   00000054   A771A0E1           LSR      R7,R7,#+3
   \   00000058   077041E0           SUB      R7,R1,R7
   \   0000005C   10408DE5           STR      R4,[SP, #+16]
   \   00000060   14408DE5           STR      R4,[SP, #+20]
   \   00000064   0D10A0E1           MOV      R1,SP
   \   00000068   0C008DE2           ADD      R0,SP,#+12
   \   0000006C   ........           _BLF     ??_Assign,??_Assign??rA_1
   \   00000070   0720A0E1           MOV      R2,R7
   \   00000074   0610A0E1           MOV      R1,R6
   \   00000078   0500A0E1           MOV      R0,R5
   \   0000007C   ........           _BLF     ??_Make_room_1,??_Make_room??rA_1
   \   00000080   0050A0E1           MOV      R5,R0
   \   00000084   000057E3           CMP      R7,#+0
   \   00000088   0B00000A           BEQ      ??resize_13
   \                     ??resize_14:
   \   0000008C   000055E3           CMP      R5,#+0
   \   00000090   0500000A           BEQ      ??resize_15
   \   00000094   004085E5           STR      R4,[R5, #+0]
   \   00000098   044085E5           STR      R4,[R5, #+4]
   \   0000009C   084085E5           STR      R4,[R5, #+8]
   \   000000A0   0C108DE2           ADD      R1,SP,#+12
   \   000000A4   0500A0E1           MOV      R0,R5
   \   000000A8   ........           _BLF     ??_Assign,??_Assign??rA_1
   \                     ??resize_15:
   \   000000AC   017047E2           SUB      R7,R7,#+1
   \   000000B0   0C5085E2           ADD      R5,R5,#+12
   \   000000B4   000057E3           CMP      R7,#+0
   \   000000B8   F3FFFF1A           BNE      ??resize_14
   \                     ??resize_13:
   \   000000BC   0C008DE2           ADD      R0,SP,#+12
   \   000000C0   ........           _BLF     ??_Tidy0_1,??_Tidy0??rA
   \   000000C4   0D00A0E1           MOV      R0,SP
   \   000000C8   ........           _BLF     ??_Tidy0_1,??_Tidy0??rA
   \   000000CC   0F0000EA           B        ??resize_16
   \                     ??resize_12:
   \   000000D0   020051E1           CMP      R1,R2
   \   000000D4   0D00002A           BCS      ??resize_16
   \   000000D8   0C20A0E3           MOV      R2,#+12
   \   000000DC   920127E0           MLA      R7,R2,R1,R0
   \   000000E0   060057E1           CMP      R7,R6
   \   000000E4   0900000A           BEQ      ??resize_16
   \   000000E8   0780A0E1           MOV      R8,R7
   \                     ??resize_17:
   \   000000EC   0800A0E1           MOV      R0,R8
   \   000000F0   ........           _BLF     ??_Tidy0_1,??_Tidy0??rA
   \   000000F4   004088E5           STR      R4,[R8, #+0]
   \   000000F8   044088E5           STR      R4,[R8, #+4]
   \   000000FC   084088E5           STR      R4,[R8, #+8]
   \   00000100   0C8088E2           ADD      R8,R8,#+12
   \   00000104   060058E1           CMP      R8,R6
   \   00000108   F7FFFF1A           BNE      ??resize_17
   \   0000010C   047085E5           STR      R7,[R5, #+4]
   \                     ??resize_16:
   \   00000110   18D08DE2           ADD      SP,SP,#+24
   \   00000114   F041BDE8           POP      {R4-R8,LR}
   \   00000118   1EFF2FE1           BX       LR               ;; return
   \                     ??resize_11:
   \   0000011C   ABAAAAAA           DC32     0xffffffffaaaaaaab

   \                                 In segment DATA_Z, align 4, align-sorted
   \   static GUI_FONT const __data TDU_FONT_BIG
   \                     TDU_FONT_BIG:
   \   00000000                      DS8 36
      2          
      3          
      4          

   \                                 In segment CODE, align 4, keep-with-next
      5          TDUTankCleaningWin::TDUTankCleaningWin(void)
   \                     ??TDUTankCleaningWin:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0040A0E1           MOV      R4,R0
      6          {
   \   00000008   ........           _BLF     ??TDUPresentWin,??TDUPresentWin??rA
   \   0000000C   ........           LDR      R0,??DataTable2  ;; ??__vtbl
   \   00000010   0010A0E3           MOV      R1,#+0
   \   00000014   440084E5           STR      R0,[R4, #+68]
   \   00000018   500084E2           ADD      R0,R4,#+80
   \   0000001C   001080E5           STR      R1,[R0, #+0]
   \   00000020   041080E5           STR      R1,[R0, #+4]
   \   00000024   081080E5           STR      R1,[R0, #+8]
      7          	countTimerTicks = 0;
   \   00000028   481084E5           STR      R1,[R4, #+72]
      8          	
      9          	CreateTankButtonGrid();
   \   0000002C   0400A0E1           MOV      R0,R4
   \   00000030   ........           BL       ??CreateTankButtonGrid
     10          
     11          	ResetWinRefreshTimer(UI_Refresh_Timer_First_Wait_Secs);
   \   00000034   1910A0E3           MOV      R1,#+25
   \   00000038   0400A0E1           MOV      R0,R4
   \   0000003C   ........           BL       ??ResetWinRefreshTimer
     12          }
   \   00000040   0400A0E1           MOV      R0,R4
   \   00000044   1040BDE8           POP      {R4,LR}
   \   00000048   1EFF2FE1           BX       LR               ;; return
     13          
     14          

   \                                 In segment CODE, align 4, keep-with-next
     15          TDUTankCleaningWin::~TDUTankCleaningWin(void)
     16          {
   \                     `?~TDUTankCleaningWin`:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   ........           LDR      R0,??DataTable2  ;; ??__vtbl
     17          }
   \   0000000C   505084E2           ADD      R5,R4,#+80
   \   00000010   440084E5           STR      R0,[R4, #+68]
   \   00000014   000095E5           LDR      R0,[R5, #+0]
   \   00000018   000050E3           CMP      R0,#+0
   \   0000001C   0200000A           BEQ      `?~TDUTankCleaningWin_1`
   \   00000020   040085E5           STR      R0,[R5, #+4]
   \   00000024   ........           _BLF     `??operator delete`,`??operator delete??rA`
   \   00000028   0000A0E3           MOV      R0,#+0
   \                     `?~TDUTankCleaningWin_1`:
   \   0000002C   000085E5           STR      R0,[R5, #+0]
   \   00000030   040085E5           STR      R0,[R5, #+4]
   \   00000034   080085E5           STR      R0,[R5, #+8]
   \   00000038   0400A0E1           MOV      R0,R4
   \   0000003C   ........           _BLF     `?~TDUPresentWin`,`?~TDUPresentWin??rA`
   \   00000040   3040BDE8           POP      {R4,R5,LR}
   \   00000044   1EFF2FE1           BX       LR               ;; return
     18          
     19          
     20          /// Virtual method declared in class TDUPresentWin

   \                                 In segment CODE, align 4, keep-with-next
     21          void TDUTankCleaningWin::SetButton(void)
     22          {
   \                     ??SetButton:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   08D04DE2           SUB      SP,SP,#+8
     23          	bool Enable[NUMBER_OF_BUTTONS]={
     24          		(bool)(NumberOfPages>1),
     25          		(bool)(NumberOfPages>1),
     26          		false,
     27          		(bool)!PROPrinter::ObjectSet.empty(),
     28          		false
     29          	};
   \   00000008   0D10A0E1           MOV      R1,SP
   \   0000000C   0020A0E3           MOV      R2,#+0
     30          	ButWindow->EnableButtons(Enable);
   \   00000010   94409FE5           LDR      R4,??SetButton_1  ;; ButWindow
   \   00000014   0030A0E3           MOV      R3,#+0
   \   00000018   0C0081E8           STM      R1,{R2,R3}
   \   0000001C   5C0090E5           LDR      R0,[R0, #+92]
   \   00000020   0120A0E3           MOV      R2,#+1
   \   00000024   020050E3           CMP      R0,#+2
   \   00000028   0130A0A3           MOVGE    R3,#+1
   \   0000002C   020050E3           CMP      R0,#+2
   \   00000030   0100A0A3           MOVGE    R0,#+1
   \   00000034   0000A0B3           MOVLT    R0,#+0
   \   00000038   0100CDE5           STRB     R0,[SP, #+1]
   \   0000003C   6C009FE5           LDR      R0,??SetButton_1+0x4  ;; ??ObjectSet + 16
   \   00000040   0030CDE5           STRB     R3,[SP, #+0]
   \   00000044   000090E5           LDR      R0,[R0, #+0]
   \   00000048   000050E3           CMP      R0,#+0
   \   0000004C   000094E5           LDR      R0,[R4, #+0]
   \   00000050   0020A013           MOVNE    R2,#+0
   \   00000054   011022E2           EOR      R1,R2,#0x1
   \   00000058   0310CDE5           STRB     R1,[SP, #+3]
   \   0000005C   0D10A0E1           MOV      R1,SP
   \   00000060   ........           _BLF     ??EnableButtons,??EnableButtons??rA
     31          
     32          	if (!PROTank::TankVector.empty())
   \   00000064   ........           LDR      R0,??DataTable7  ;; ??TankVector
   \   00000068   041090E5           LDR      R1,[R0, #+4]
   \   0000006C   000090E5           LDR      R0,[R0, #+0]
   \   00000070   000041E0           SUB      R0,R1,R0
   \   00000074   2001B0E1           LSRS     R0,R0,#+2
   \   00000078   0900000A           BEQ      ??SetButton_2
     33          	{
     34          		ButWindow->ChangeButtonText(L_WORD87,L_WORD88,L_WORD89,L_WORD237,L_WORD90);
   \   0000007C   5A00A0E3           MOV      R0,#+90
   \   00000080   01002DE9           PUSH     {R0}
   \   00000084   ED00A0E3           MOV      R0,#+237
   \   00000088   01002DE9           PUSH     {R0}
   \   0000008C   000094E5           LDR      R0,[R4, #+0]
   \   00000090   5930A0E3           MOV      R3,#+89
   \   00000094   5820A0E3           MOV      R2,#+88
   \   00000098   5710A0E3           MOV      R1,#+87
   \   0000009C   ........           _BLF     ??ChangeButtonText,??ChangeButtonText??rA
   \   000000A0   08D08DE2           ADD      SP,SP,#+8
     35          	} 
     36          }
   \                     ??SetButton_2:
   \   000000A4   1340BDE8           POP      {R0,R1,R4,LR}
   \   000000A8   1EFF2FE1           BX       LR               ;; return
   \                     ??SetButton_1:
   \   000000AC   ........           DC32     ButWindow
   \   000000B0   ........           DC32     ??ObjectSet + 16
     37          
     38          

   \                                 In segment CODE, align 4, keep-with-next
     39          void TDUTankCleaningWin::ButtonClicked(int btnID)
     40          {
   \                     ??ButtonClicked:
   \   00000000   00402DE9           PUSH     {LR}
     41          	switch ( btnID ) {
   \   00000004   602090E5           LDR      R2,[R0, #+96]
   \   00000008   D130A0E3           MOV      R3,#+209
   \   0000000C   803E83E3           ORR      R3,R3,#0x800
   \   00000010   030051E1           CMP      R1,R3
   \   00000014   0300000A           BEQ      ??ButtonClicked_1
   \   00000018   013083E2           ADD      R3,R3,#+1
   \   0000001C   030051E1           CMP      R1,R3
   \   00000020   0700000A           BEQ      ??ButtonClicked_2
   \   00000024   040000EA           B        ??ButtonClicked_3
     42          	case TDU_BUTTON_ID_PW1:
     43          		if ( CurrentPage <= 0 ) {
   \                     ??ButtonClicked_1:
   \   00000028   010052E3           CMP      R2,#+1
     44          			CurrentPage = 0;
   \   0000002C   0010A0B3           MOVLT    R1,#+0
     45          		} else {
     46          			CurrentPage--;
   \   00000030   011042A2           SUBGE    R1,R2,#+1
   \                     ??ButtonClicked_4:
   \   00000034   601080E5           STR      R1,[R0, #+96]
     47          		}
     48          		MoveWin();
   \   00000038   ........           BL       ??MoveWin
     49          		break;
     50          	case TDU_BUTTON_ID_PW2:
     51          		if ( CurrentPage >= (NumberOfPages-1) ) {
     52          			CurrentPage = (NumberOfPages-1);
     53          		} else {
     54          			CurrentPage++;
     55          		}
     56          		MoveWin();
     57          		break;
     58          	}
     59          
     60          }
   \                     ??ButtonClicked_3:
   \   0000003C   0040BDE8           POP      {LR}
   \   00000040   1EFF2FE1           BX       LR               ;; return
   \                     ??ButtonClicked_2:
   \   00000044   5C1090E5           LDR      R1,[R0, #+92]
   \   00000048   011041E2           SUB      R1,R1,#+1
   \   0000004C   010052E1           CMP      R2,R1
   \   00000050   F7FFFFAA           BGE      ??ButtonClicked_4
   \   00000054   011082E2           ADD      R1,R2,#+1
   \   00000058   F5FFFFEA           B        ??ButtonClicked_4
     61          
     62          

   \                                 In segment CODE, align 4, keep-with-next
     63          void TDUTankCleaningWin::MoveWin(void)
     64          {
   \                     ??MoveWin:
   \   00000000   00402DE9           PUSH     {LR}
     65          	int y =  -CurrentPage * PWinYSize;
     66          	WM_MoveChildTo(MainWinHandle, 0, y);
   \   00000004   601090E5           LDR      R1,[R0, #+96]
   \   00000008   382090E5           LDR      R2,[R0, #+56]
   \   0000000C   FC04D0E1           LDRSH    R0,[R0, #+76]
   \   00000010   920101E0           MUL      R1,R2,R1
   \   00000014   002061E2           RSB      R2,R1,#+0
   \   00000018   0010A0E3           MOV      R1,#+0
   \   0000001C   ........           _BLF     WM_MoveChildTo,??WM_MoveChildTo??rA
     67          }
   \   00000020   0040BDE8           POP      {LR}
   \   00000024   1EFF2FE1           BX       LR               ;; return
     68          
     69          

   \                                 In segment CODE, align 4, keep-with-next
     70          void TDUTankCleaningWin::UnitClicked(WM_HWIN hWin,int btnHandle)
     71          {
   \                     ??UnitClicked:
   \   00000000   10402DE9           PUSH     {R4,LR}
     72          	PROTank *pTank = FindTankByButtonHandle(btnHandle);
   \   00000004   0218A0E1           MOV      R1,R2, LSL #+16
   \   00000008   4118A0E1           MOV      R1,R1, ASR #+16
   \   0000000C   ........           BL       ??FindTankByButtonHandle
   \   00000010   0010B0E1           MOVS     R1,R0
     73          
     74          	// Use tank 
     75          	if (pTank != NULL)
   \   00000014   0C00000A           BEQ      ??UnitClicked_1
     76          	{
     77          		TankCleaningDetailsWindow->SetTankToDisplay(pTank);
   \   00000018   34409FE5           LDR      R4,??UnitClicked_2  ;; TankCleaningDetailsWindow
   \   0000001C   000094E5           LDR      R0,[R4, #+0]
   \   00000020   ........           _BLF     ??SetTankToDisplay,??SetTankToDisplay??rA
     78          		MainWindow->SetWindow(TDU_TANK_CLEANING_DETAILS_WIN);
   \   00000024   2C009FE5           LDR      R0,??UnitClicked_2+0x4  ;; MainWindow
   \   00000028   A610A0E3           MOV      R1,#+166
   \   0000002C   000090E5           LDR      R0,[R0, #+0]
   \   00000030   801E81E3           ORR      R1,R1,#0x800
   \   00000034   ........           _BLF     ??SetWindow,??SetWindow??rA
     79          
     80          		TankCleaningDetailsWindow->TableUpdate();
   \   00000038   000094E5           LDR      R0,[R4, #+0]
   \   0000003C   ........           _BLF     ??TableUpdate,??TableUpdate??rA
     81          		WM_InvalidateWindow(TankCleaningDetailsWindow->WinHandl);	
   \   00000040   000094E5           LDR      R0,[R4, #+0]
   \   00000044   FA02D0E1           LDRSH    R0,[R0, #+42]
   \   00000048   ........           _BLF     WM_InvalidateWindow,??WM_InvalidateWindow??rA
     82          	}
     83          }
   \                     ??UnitClicked_1:
   \   0000004C   1040BDE8           POP      {R4,LR}
   \   00000050   1EFF2FE1           BX       LR               ;; return
   \                     ??UnitClicked_2:
   \   00000054   ........           DC32     TankCleaningDetailsWindow
   \   00000058   ........           DC32     MainWindow
     84          
     85          

   \                                 In segment CODE, align 4, keep-with-next
     86          void TDUTankCleaningWin::cbEventHandler(WM_MESSAGE* pMsg)
     87          {
   \                     ??cbEventHandler:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0100A0E1           MOV      R0,R1
     88          	WM_HWIN hWin = pMsg->hWin;
     89          
     90          	switch ( pMsg->MsgId ) {
   \   0000000C   003090E5           LDR      R3,[R0, #+0]
   \   00000010   F410D0E1           LDRSH    R1,[R0, #+4]
   \   00000014   082090E5           LDR      R2,[R0, #+8]
   \   00000018   013053E2           SUBS     R3,R3,#+1
   \   0000001C   2300000A           BEQ      ??cbEventHandler_1
   \   00000020   0E3053E2           SUBS     R3,R3,#+14
   \   00000024   0400000A           BEQ      ??cbEventHandler_2
   \   00000028   173053E2           SUBS     R3,R3,#+23
   \   0000002C   2100000A           BEQ      ??cbEventHandler_3
   \   00000030   ED3053E2           SUBS     R3,R3,#+237
   \   00000034   1200000A           BEQ      ??cbEventHandler_4
   \   00000038   240000EA           B        ??cbEventHandler_5
     91          	case WM_PAINT:
     92          		//Protect();
     93          		GUI_SetBkColor(TDU_C_BACK_DEFAULT);
   \                     ??cbEventHandler_2:
   \   0000003C   ........           LDR      R0,??DataTable8  ;; 0xd3d3d3
   \   00000040   ........           _BLF     GUI_SetBkColor,??GUI_SetBkColor??rA
     94          		GUI_Clear();
   \   00000044   ........           _BLF     GUI_Clear,??GUI_Clear??rA
     95          		GUI_SetColor(TDU_C_PW_TEXT);
   \   00000048   FF0CA0E3           MOV      R0,#+65280
   \   0000004C   ........           _BLF     GUI_SetColor,??GUI_SetColor??rA
     96          		GUI_SetTextMode(GUI_TM_TRANS);
   \   00000050   0200A0E3           MOV      R0,#+2
   \   00000054   ........           _BLF     GUI_SetTextMode,??GUI_SetTextMode??rA
     97          		GUI_SetFont(&TDU_FONT_BIG);
   \   00000058   ........           LDR      R0,??DataTable5  ;; TDU_FONT_BIG
   \   0000005C   ........           _BLF     GUI_SetFont,??GUI_SetFont??rA
     98          		UpdateFields(true);
   \   00000060   0110A0E3           MOV      R1,#+1
   \   00000064   0400A0E1           MOV      R0,R4
   \   00000068   ........           _BLF     ??UpdateFields,??UpdateFields??rA
     99          		
    100          		if (countTimerTicks > 0)								// Changing gui element colors etc too early will crash the program..
   \   0000006C   480094E5           LDR      R0,[R4, #+72]
   \   00000070   010050E3           CMP      R0,#+1
   \   00000074   0D0000BA           BLT      ??cbEventHandler_1
    101          		{
    102          			UpdateButtonColors();
   \   00000078   0400A0E1           MOV      R0,R4
   \   0000007C   ........           BL       ??UpdateButtonColors
   \   00000080   0A0000EA           B        ??cbEventHandler_1
    103          		}
    104          		//UnProtect();
    105          		break;
    106          	case WM_CREATE:
    107          		break;
    108          	case WM_TIMER:
    109          		if (pMsg->Data.v == hTimer)
   \                     ??cbEventHandler_4:
   \   00000084   FC02D4E1           LDRSH    R0,[R4, #+44]
   \   00000088   000052E1           CMP      R2,R0
   \   0000008C   0700001A           BNE      ??cbEventHandler_1
    110          		{
    111          			WM_InvalidateWindow(MainWinHandle);					// schedule redrawing of this window
   \   00000090   FC04D4E1           LDRSH    R0,[R4, #+76]
   \   00000094   ........           _BLF     WM_InvalidateWindow,??WM_InvalidateWindow??rA
    112          			ResetWinRefreshTimer(UI_Refresh_Timer_Interval_Secs);
   \   00000098   0210A0E3           MOV      R1,#+2
   \   0000009C   0400A0E1           MOV      R0,R4
   \   000000A0   ........           BL       ??ResetWinRefreshTimer
    113          			countTimerTicks++;
   \   000000A4   480094E5           LDR      R0,[R4, #+72]
   \   000000A8   010080E2           ADD      R0,R0,#+1
   \   000000AC   480084E5           STR      R0,[R4, #+72]
   \                     ??cbEventHandler_1:
   \   000000B0   1040BDE8           POP      {R4,LR}
   \   000000B4   1EFF2FE1           BX       LR
    114          		}
    115          		break;
    116          	case WM_NOTIFY_PARENT:
    117          		{
    118          			int ncode, handle;
    119          			handle = pMsg->hWinSrc;							// Id of widget
    120          			ncode = pMsg->Data.v;							// Notification code
    121          			if (ncode == WM_NOTIFICATION_CLICKED)			//WM_NOTIFICATION_RELEASED)
   \                     ??cbEventHandler_3:
   \   000000B8   010052E3           CMP      R2,#+1
   \   000000BC   FBFFFF1A           BNE      ??cbEventHandler_1
    122          			{
    123          				UnitClicked(hWin, handle);
   \   000000C0   F620D0E1           LDRSH    R2,[R0, #+6]
   \   000000C4   0400A0E1           MOV      R0,R4
   \   000000C8   ........           BL       ??UnitClicked
   \   000000CC   F7FFFFEA           B        ??cbEventHandler_1
    124          			}
    125          		}
    126          		break;
    127          	default:
    128          		WM_DefaultProc(pMsg);
   \                     ??cbEventHandler_5:
   \   000000D0   ........           _BLF     WM_DefaultProc,??WM_DefaultProc??rA
    129          	}
    130          }
   \                     ??cbEventHandler_6:
   \   000000D4   F5FFFFEA           B        ??cbEventHandler_1
    131          
    132          
    133          
    134          /// Static function EventLoopTankCleaningWindow

   \                                 In segment CODE, align 4, keep-with-next
    135          void TDUTankCleaningWin::EventLoopTankCleaningWindow(WM_MESSAGE * pMsg)
    136          {
   \                     ??EventLoopTankCleaningWindow:
   \   00000000   00402DE9           PUSH     {LR}
    137          	// Route events to the tank cleaning window or just let the base system handle it
    138          	switch ( pMsg->MsgId ) {
   \   00000004   001090E5           LDR      R1,[R0, #+0]
   \   00000008   011051E2           SUBS     R1,R1,#+1
   \   0000000C   0E105112           SUBSNE   R1,R1,#+14
   \   00000010   17105112           SUBSNE   R1,R1,#+23
   \   00000014   ED105112           SUBSNE   R1,R1,#+237
   \   00000018   0A00001A           BNE      ??EventLoopTankCleaningWindow_1
    139          	case WM_PAINT:
    140          	case WM_CREATE:
    141          	case WM_NOTIFY_PARENT:
    142          	case WM_TIMER:
    143          		if (TankCleaningWindow != NULL)
   \   0000001C   30109FE5           LDR      R1,??EventLoopTankCleaningWindow_2  ;; TankCleaningWindow
   \   00000020   002091E5           LDR      R2,[R1, #+0]
   \   00000024   000052E3           CMP      R2,#+0
   \   00000028   0700000A           BEQ      ??EventLoopTankCleaningWindow_3
    144          		{
    145          			TankCleaningWindow->cbEventHandler(pMsg);
   \   0000002C   0010A0E1           MOV      R1,R0
   \   00000030   0200A0E1           MOV      R0,R2
   \   00000034   442092E5           LDR      R2,[R2, #+68]
   \   00000038   082092E5           LDR      R2,[R2, #+8]
   \   0000003C   0FE0A0E1           MOV      LR,PC
   \   00000040   12FF2FE1           BX       R2
   \   00000044   000000EA           B        ??EventLoopTankCleaningWindow_3
    146          		}
    147          		break;
    148          	default:
    149          		WM_DefaultProc(pMsg);
   \                     ??EventLoopTankCleaningWindow_1:
   \   00000048   ........           _BLF     WM_DefaultProc,??WM_DefaultProc??rA
    150          	}
    151          }
   \                     ??EventLoopTankCleaningWindow_3:
   \   0000004C   0040BDE8           POP      {LR}
   \   00000050   1EFF2FE1           BX       LR               ;; return
   \                     ??EventLoopTankCleaningWindow_2:
   \   00000054   ........           DC32     TankCleaningWindow
    152          
    153          
    154          

   \                                 In segment CODE, align 4, keep-with-next
    155          PROTank* TDUTankCleaningWin::FindTankByButtonHandle(BUTTON_Handle handle)
    156          {
    157          	PROTank *pTank = NULL;
    158          	vector<TDUTankCleaningWin_ButtonToTankMapping>::iterator iter = tankMapVector.begin();
   \                     ??FindTankByButtonHandle:
   \   00000000   503090E5           LDR      R3,[R0, #+80]
   \   00000004   0020A0E3           MOV      R2,#+0
   \   00000008   000000EA           B        ??FindTankByButtonHandle_1
    159          
    160          	// Get a pointer to the tank that was clicked
    161          	for (; iter != tankMapVector.end(); iter++)
   \                     ??FindTankByButtonHandle_2:
   \   0000000C   083083E2           ADD      R3,R3,#+8
   \                     ??FindTankByButtonHandle_1:
   \   00000010   54C090E5           LDR      R12,[R0, #+84]
   \   00000014   0C0053E1           CMP      R3,R12
   \   00000018   0300000A           BEQ      ??FindTankByButtonHandle_3
    162          	{
    163          		if (handle == (*iter).btnHandle)
   \   0000001C   F0C0D3E1           LDRSH    R12,[R3, #+0]
   \   00000020   0C0051E1           CMP      R1,R12
   \   00000024   F8FFFF1A           BNE      ??FindTankByButtonHandle_2
    164          		{
    165          			pTank = (*iter).pTank;
   \   00000028   042093E5           LDR      R2,[R3, #+4]
    166          			break;
    167          		}
    168          	}
    169          	return pTank;
   \                     ??FindTankByButtonHandle_3:
   \   0000002C   0200A0E1           MOV      R0,R2
   \   00000030   1EFF2FE1           BX       LR               ;; return
    170          }
    171          
    172          
    173          

   \                                 In segment CODE, align 4, keep-with-next
    174          void TDUTankCleaningWin::ResetWinRefreshTimer(int seconds)
    175          {
   \                     ??ResetWinRefreshTimer:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0040A0E1           MOV      R4,R0
    176          	int updateTimeMillis = seconds * 1000;
   \   00000008   FA0FA0E3           MOV      R0,#+1000
   \   0000000C   900102E0           MUL      R2,R0,R1
    177          
    178          	if (hTimer == 0)
   \   00000010   FC02D4E1           LDRSH    R0,[R4, #+44]
   \   00000014   000050E3           CMP      R0,#+0
   \   00000018   0500001A           BNE      ??ResetWinRefreshTimer_1
    179          	{
    180          		hTimer = WM_CreateTimer(MainWinHandle, UI_Refresh_Timer_UserId, updateTimeMillis, 0);
   \   0000001C   FC04D4E1           LDRSH    R0,[R4, #+76]
   \   00000020   0030A0E3           MOV      R3,#+0
   \   00000024   0110A0E3           MOV      R1,#+1
   \   00000028   ........           _BLF     WM_CreateTimer,??WM_CreateTimer??rA
   \   0000002C   BC02C4E1           STRH     R0,[R4, #+44]
   \   00000030   010000EA           B        ??ResetWinRefreshTimer_2
    181          	}
    182          	else
    183          	{
    184          		WM_RestartTimer(hTimer, updateTimeMillis);
   \                     ??ResetWinRefreshTimer_1:
   \   00000034   0210A0E1           MOV      R1,R2
   \   00000038   ........           _BLF     WM_RestartTimer,??WM_RestartTimer??rA
    185          	}
    186          }
   \                     ??ResetWinRefreshTimer_2:
   \   0000003C   1040BDE8           POP      {R4,LR}
   \   00000040   1EFF2FE1           BX       LR               ;; return
    187          
    188          
    189          

   \                                 In segment CODE, align 4, keep-with-next
    190          void TDUTankCleaningWin::UpdateButtonColors(void)
    191          {
   \                     ??UpdateButtonColors:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
    192          	vector<TDUTankCleaningWin_ButtonToTankMapping>::iterator it = tankMapVector.begin();
   \   00000004   504090E5           LDR      R4,[R0, #+80]
    193          	vector<TDUTankCleaningWin_ButtonToTankMapping>::iterator end = tankMapVector.end();
   \   00000008   545090E5           LDR      R5,[R0, #+84]
   \   0000000C   050054E1           CMP      R4,R5
   \   00000010   0D00000A           BEQ      ??UpdateButtonColors_1
    194          
    195          	for (;it != end; it++)
    196          	{
    197          		TDUTankCleaningWin_ButtonToTankMapping btm = *it;
    198          		PROTank* pTank = btm.pTank;
   \                     ??UpdateButtonColors_2:
   \   00000014   040094E5           LDR      R0,[R4, #+4]
    199          		BUTTON_Handle btnHandle = btm.btnHandle;
   \   00000018   F060D4E1           LDRSH    R6,[R4, #+0]
    200          
    201          		if (pTank != NULL)
   \   0000001C   000050E3           CMP      R0,#+0
   \   00000020   0600000A           BEQ      ??UpdateButtonColors_3
    202          		{
    203          			bool washRunning = TankWashingAPI::GetPROTankWashingStatus(pTank);
    204          
    205          			if (washRunning)
   \   00000024   ........           _BLF     ??GetPROTankWashingStatus,??GetPROTankWashingStatus??rA
   \   00000028   000050E3           CMP      R0,#+0
    206          			{
    207          				BUTTON_SetBkColor(btnHandle, BUTTON_CI_UNPRESSED, UI_Button_Running_Tank_Color);
    208          			}
    209          			else
    210          			{
    211          				BUTTON_SetBkColor(btnHandle, BUTTON_CI_UNPRESSED, UI_Button_Idle_Tank_Color);
   \   0000002C   ........           LDREQ    R2,??DataTable8  ;; 0xd3d3d3
   \   00000030   0010A0E3           MOV      R1,#+0
   \   00000034   FF2CA013           MOVNE    R2,#+65280
   \   00000038   0600A0E1           MOV      R0,R6
   \   0000003C   ........           _BLF     BUTTON_SetBkColor,??BUTTON_SetBkColor??rA
    212          			}
    213          		}
    214          	}
   \                     ??UpdateButtonColors_3:
   \   00000040   084084E2           ADD      R4,R4,#+8
   \   00000044   050054E1           CMP      R4,R5
   \   00000048   F1FFFF1A           BNE      ??UpdateButtonColors_2
    215          }
   \                     ??UpdateButtonColors_1:
   \   0000004C   7040BDE8           POP      {R4-R6,LR}
   \   00000050   1EFF2FE1           BX       LR               ;; return
    216          
    217          

   \                                 In segment CODE, align 4, keep-with-next
    218          void TDUTankCleaningWin::CreateTankButtonGrid(void)
    219          {
   \                     ??CreateTankButtonGrid:
   \   00000000   F04F2DE9           PUSH     {R4-R11,LR}
   \   00000004   0040A0E1           MOV      R4,R0
    220          	// Build up a grid of pointers to TWM objects. We'll use this to figure out how to place elements on the screen:
    221          	vector< vector< vector< PROTank* > > > tankGrid;		// levels: page, row, column
    222          	unsigned maxCol = 0;									// Essentially gives the number of columns of the whole tank grid
    223          
    224          	vector<PROTank*>::iterator tankIter = PROTank::TankVector.begin();
   \   00000008   ........           LDR      R0,??DataTable7  ;; ??TankVector
   \   0000000C   2CD04DE2           SUB      SP,SP,#+44
   \   00000010   005090E5           LDR      R5,[R0, #+0]
    225          	vector<PROTank*>::iterator tankEnd = PROTank::TankVector.end();
   \   00000014   040090E5           LDR      R0,[R0, #+4]
   \   00000018   0010A0E3           MOV      R1,#+0
   \   0000001C   00108DE5           STR      R1,[SP, #+0]
   \   00000020   04108DE5           STR      R1,[SP, #+4]
   \   00000024   08108DE5           STR      R1,[SP, #+8]
   \   00000028   10108DE5           STR      R1,[SP, #+16]
   \   0000002C   14008DE5           STR      R0,[SP, #+20]
   \   00000030   000055E1           CMP      R5,R0
   \   00000034   5400000A           BEQ      ??CreateTankButtonGrid_1
    226          	
    227          	for (;tankIter != tankEnd; tankIter++)
    228          	{
    229          		PROTank *pTank = *tankIter;
   \                     ??CreateTankButtonGrid_2:
   \   00000038   006095E5           LDR      R6,[R5, #+0]
    230          		if (pTank->TankWashingMachineVector.empty() == false)
   \   0000003C   870F86E2           ADD      R0,R6,#+540
   \   00000040   041090E5           LDR      R1,[R0, #+4]
   \   00000044   000090E5           LDR      R0,[R0, #+0]
   \   00000048   000041E0           SUB      R0,R1,R0
   \   0000004C   2001B0E1           LSRS     R0,R0,#+2
   \   00000050   4900000A           BEQ      ??CreateTankButtonGrid_3
    231          		{
    232          			unsigned row = pTank->TDUTankPlacement.ypos;
    233          			unsigned col = pTank->TDUTankPlacement.xpos;
    234          			unsigned page = pTank->TDUTankPlacement.page;
    235          
    236          			if ((page+1) > tankGrid.size())					// Add a page if necessary
   \   00000054   04009DE5           LDR      R0,[SP, #+4]
   \   00000058   00209DE5           LDR      R2,[SP, #+0]
   \   0000005C   448296E5           LDR      R8,[R6, #+580]
   \   00000060   409296E5           LDR      R9,[R6, #+576]
   \   00000064   3C7296E5           LDR      R7,[R6, #+572]
   \   00000068   020040E0           SUB      R0,R0,R2
   \   0000006C   40249FE5           LDR      R2,??CreateTankButtonGrid_4  ;; 0xffffffffaaaaaaab
   \   00000070   011088E2           ADD      R1,R8,#+1
   \   00000074   92308AE0           UMULL    R3,R10,R2,R0
   \   00000078   AAA1A0E1           LSR      R10,R10,#+3
   \   0000007C   01005AE1           CMP      R10,R1
   \   00000080   0100002A           BCS      ??CreateTankButtonGrid_5
    237          			{
    238          				tankGrid.resize(page+1);
   \   00000084   0D00A0E1           MOV      R0,SP
   \   00000088   ........           _BLF     ??resize_1,??resize??rA
    239          			}
    240          						
    241          			if (row >= tankGrid[page].size())				// Add row on this page if necessary
   \                     ??CreateTankButtonGrid_5:
   \   0000008C   0C00A0E3           MOV      R0,#+12
   \   00000090   900808E0           MUL      R8,R0,R8
   \   00000094   00009DE5           LDR      R0,[SP, #+0]
   \   00000098   000088E0           ADD      R0,R8,R0
   \   0000009C   041090E5           LDR      R1,[R0, #+4]
   \   000000A0   002090E5           LDR      R2,[R0, #+0]
   \   000000A4   021041E0           SUB      R1,R1,R2
   \   000000A8   04249FE5           LDR      R2,??CreateTankButtonGrid_4  ;; 0xffffffffaaaaaaab
   \   000000AC   92318AE0           UMULL    R3,R10,R2,R1
   \   000000B0   AAA1A0E1           LSR      R10,R10,#+3
   \   000000B4   0A0059E1           CMP      R9,R10
   \   000000B8   0100003A           BCC      ??CreateTankButtonGrid_6
    242          			{
    243          				tankGrid[page].resize( row+1 );
   \   000000BC   011089E2           ADD      R1,R9,#+1
   \   000000C0   ........           _BLF     ??resize,??resize??rA_1
    244          			}
    245          
    246          			if (col >= tankGrid[page][row].size())			// Add columns if necessary
   \                     ??CreateTankButtonGrid_6:
   \   000000C4   00009DE5           LDR      R0,[SP, #+0]
   \   000000C8   0C10A0E3           MOV      R1,#+12
   \   000000CC   000088E0           ADD      R0,R8,R0
   \   000000D0   910909E0           MUL      R9,R1,R9
   \   000000D4   001090E5           LDR      R1,[R0, #+0]
   \   000000D8   011089E0           ADD      R1,R9,R1
   \   000000DC   042091E5           LDR      R2,[R1, #+4]
   \   000000E0   001091E5           LDR      R1,[R1, #+0]
   \   000000E4   011042E0           SUB      R1,R2,R1
   \   000000E8   210157E1           CMP      R7,R1, LSR #+2
   \   000000EC   1E00003A           BCC      ??CreateTankButtonGrid_7
    247          			{
    248          				tankGrid[page][row].resize(col+1, NULL);
   \   000000F0   000090E5           LDR      R0,[R0, #+0]
   \   000000F4   012087E2           ADD      R2,R7,#+1
   \   000000F8   00A089E0           ADD      R10,R9,R0
   \   000000FC   04109AE5           LDR      R1,[R10, #+4]
   \   00000100   00309AE5           LDR      R3,[R10, #+0]
   \   00000104   030041E0           SUB      R0,R1,R3
   \   00000108   2001A0E1           LSR      R0,R0,#+2
   \   0000010C   020050E1           CMP      R0,R2
   \   00000110   0A00002A           BCS      ??CreateTankButtonGrid_8
   \   00000114   00B042E0           SUB      R11,R2,R0
   \   00000118   0B20A0E1           MOV      R2,R11
   \   0000011C   0A00A0E1           MOV      R0,R10
   \   00000120   ........           _BLF     ??_Make_room_2,??_Make_room??rA_2
   \   00000124   00005BE3           CMP      R11,#+0
   \   00000128   0010A0E3           MOV      R1,#+0
   \   0000012C   0B00000A           BEQ      ??CreateTankButtonGrid_9
   \                     ??CreateTankButtonGrid_10:
   \   00000130   ........           STR      R1,[R0], #+4
   \   00000134   01B05BE2           SUBS     R11,R11,#+1
   \   00000138   FCFFFF1A           BNE      ??CreateTankButtonGrid_10
   \   0000013C   070000EA           B        ??CreateTankButtonGrid_9
   \                     ??CreateTankButtonGrid_8:
   \   00000140   000052E1           CMP      R2,R0
   \   00000144   0500002A           BCS      ??CreateTankButtonGrid_9
   \   00000148   0100A0E1           MOV      R0,R1
   \   0000014C   022183E0           ADD      R2,R3,R2, LSL #+2
   \   00000150   000052E1           CMP      R2,R0
   \   00000154   0100000A           BEQ      ??CreateTankButtonGrid_9
   \   00000158   ........           _BLF     _Copy_a4,??_Copy_a4??rA
   \   0000015C   04008AE5           STR      R0,[R10, #+4]
    249          
    250          				if (col > maxCol)
   \                     ??CreateTankButtonGrid_9:
   \   00000160   10009DE5           LDR      R0,[SP, #+16]
   \   00000164   070050E1           CMP      R0,R7
    251          				{
    252          					maxCol = col;
   \   00000168   10708D35           STRCC    R7,[SP, #+16]
    253          				}
    254          			}
    255          
    256          			tankGrid[page][row][col] = pTank;
   \                     ??CreateTankButtonGrid_7:
   \   0000016C   00009DE5           LDR      R0,[SP, #+0]
   \   00000170   000098E7           LDR      R0,[R8, +R0]
   \   00000174   000099E7           LDR      R0,[R9, +R0]
   \   00000178   076180E7           STR      R6,[R0, +R7, LSL #+2]
    257          		}
    258          	}
   \                     ??CreateTankButtonGrid_3:
   \   0000017C   14009DE5           LDR      R0,[SP, #+20]
   \   00000180   045085E2           ADD      R5,R5,#+4
   \   00000184   000055E1           CMP      R5,R0
   \   00000188   AAFFFF1A           BNE      ??CreateTankButtonGrid_2
    259          	
    260          
    261          	// Do calculations. You can change these constants to alter the positioning of buttons:
    262          	const int minStartY = 8;
    263          	const int minStartX = 8;
    264          	const int btnWidth = 40;
    265          	const int btnHeight = 30;
    266          	const int btnSpacingHoriz = 5;
    267          	const int btnSpacingVert = 5;
    268          	const int screenCenterX = PWinXSize / 2 - 18;
   \                     ??CreateTankButtonGrid_1:
   \   0000018C   340094E5           LDR      R0,[R4, #+52]
    269          	const int screenCenterY = PWinYSize / 2;
    270          
    271          	// May be necessary with multiple pages:
    272          	NumberOfPages = tankGrid.size();
    273          	CurrentPage = 0;
    274          
    275          	// Create window controls/widgets
    276          	MainWinHandle = WM_CreateWindowAsChild(  0, 0, PWinXSize, PWinYSize * NumberOfPages,  WinHandl, WM_CF_SHOW, TDUTankCleaningWin::EventLoopTankCleaningWindow, 0);
    277          	WM_EnableMemdev(MainWinHandle);
    278          
    279          	int tankCount = 0;
    280          	int tankButtonId = TDU_TANK_CLEANING_BUTTON_0_ID;
   \   00000190   905EA0E3           MOV      R5,#+2304
   \   00000194   A00F80E0           ADD      R0,R0,R0, LSR #+31
   \   00000198   C000A0E1           ASR      R0,R0,#+1
   \   0000019C   120040E2           SUB      R0,R0,#+18
   \   000001A0   14008DE5           STR      R0,[SP, #+20]
   \   000001A4   380094E5           LDR      R0,[R4, #+56]
   \   000001A8   A00F80E0           ADD      R0,R0,R0, LSR #+31
   \   000001AC   C000A0E1           ASR      R0,R0,#+1
   \   000001B0   28008DE5           STR      R0,[SP, #+40]
   \   000001B4   04009DE5           LDR      R0,[SP, #+4]
   \   000001B8   00109DE5           LDR      R1,[SP, #+0]
   \   000001BC   010040E0           SUB      R0,R0,R1
   \   000001C0   EC129FE5           LDR      R1,??CreateTankButtonGrid_4  ;; 0xffffffffaaaaaaab
   \   000001C4   912083E0           UMULL    R2,R3,R1,R0
   \   000001C8   A331A0E1           LSR      R3,R3,#+3
   \   000001CC   5C3084E5           STR      R3,[R4, #+92]
   \   000001D0   0000A0E3           MOV      R0,#+0
   \   000001D4   600084E5           STR      R0,[R4, #+96]
   \   000001D8   01002DE9           PUSH     {R0}
   \   000001DC   D4029FE5           LDR      R0,??CreateTankButtonGrid_4+0x4  ;; ??EventLoopTankCleaningWindow
   \   000001E0   01002DE9           PUSH     {R0}
   \   000001E4   0200A0E3           MOV      R0,#+2
   \   000001E8   01002DE9           PUSH     {R0}
   \   000001EC   FA02D4E1           LDRSH    R0,[R4, #+42]
   \   000001F0   01002DE9           PUSH     {R0}
   \   000001F4   380094E5           LDR      R0,[R4, #+56]
   \   000001F8   5C1094E5           LDR      R1,[R4, #+92]
   \   000001FC   342094E5           LDR      R2,[R4, #+52]
   \   00000200   910003E0           MUL      R3,R1,R0
   \   00000204   0010A0E3           MOV      R1,#+0
   \   00000208   0000A0E3           MOV      R0,#+0
   \   0000020C   ........           _BLF     WM_CreateWindowAsChild,??WM_CreateWindowAsChild??rA
   \   00000210   BC04C4E1           STRH     R0,[R4, #+76]
   \   00000214   ........           _BLF     WM_EnableMemdev,??WM_EnableMemdev??rA
    281          	
    282          
    283          	for (unsigned pageCount = 0; pageCount < tankGrid.size(); pageCount++)
   \   00000218   0010A0E3           MOV      R1,#+0
   \   0000021C   1C108DE5           STR      R1,[SP, #+28]
   \   00000220   14009DE5           LDR      R0,[SP, #+20]
   \   00000224   10109DE5           LDR      R1,[SP, #+16]
   \   00000228   10D08DE2           ADD      SP,SP,#+16
   \   0000022C   010040E0           SUB      R0,R0,R1
   \   00000230   7C129FE5           LDR      R1,??CreateTankButtonGrid_4  ;; 0xffffffffaaaaaaab
   \   00000234   912083E0           UMULL    R2,R3,R1,R0
   \   00000238   A331B0E1           LSRS     R3,R3,#+3
   \   0000023C   0700001A           BNE      ??CreateTankButtonGrid_11
    284          	{
    285          		unsigned numRowsOnPage = tankGrid[pageCount].size();
    286          		int pageGridHeight = (btnHeight * numRowsOnPage) + (btnSpacingVert * (numRowsOnPage-1));
    287          		int pageGridWidth = (btnWidth * maxCol) + (btnSpacingHoriz * (maxCol-1));
    288          
    289          		int startX = screenCenterX - (pageGridWidth / 2);		
    290          		int drawPosY = (pageCount * PWinYSize) + (screenCenterY - pageGridHeight / 2);
    291          
    292          		if (startX < minStartX)
    293          		{
    294          			startX = minStartX;
    295          		}
    296          		if (drawPosY < minStartY)
    297          		{
    298          			drawPosY = minStartY;
    299          		}
    300          	
    301          		
    302          		// Draw buttons representing tanks:
    303          		for (unsigned rowDraw = 0; rowDraw < tankGrid[pageCount].size(); rowDraw++)
    304          		{
    305          			int drawPosX = startX;
    306          
    307          			for (unsigned colDraw = 0; colDraw < tankGrid[pageCount][rowDraw].size(); colDraw++)
    308          			{
    309          				if (tankGrid[pageCount][rowDraw][colDraw] != NULL)
    310          				{
    311          					// Create button representing a cargo tank:
    312          					PROTank *pTank = tankGrid[pageCount][rowDraw][colDraw];
    313          					BUTTON_Handle btnHandle = BUTTON_CreateEx(drawPosX, drawPosY, btnWidth, btnHeight, MainWinHandle, WM_CF_SHOW, 0, tankButtonId);
    314          					BUTTON_SetBkColor(btnHandle, 0, UI_Button_Idle_Tank_Color); 
    315          					BUTTON_SetText(btnHandle, tankGrid[pageCount][rowDraw][colDraw]->Name.c_str() );
    316          
    317          					// Store info about the button created. Need to remember which tank it represents, for later use:
    318          					int btnId = WM_GetId(btnHandle);
    319          					TDUTankCleaningWin_ButtonToTankMapping btnMapTank(btnHandle, pTank);
    320          					tankMapVector.push_back(btnMapTank);
    321          				
    322          					tankCount++;
    323          					tankButtonId++;
    324          				}
    325          				// Advance to drawing the next button to the right
    326          				drawPosX += btnWidth + btnSpacingHoriz;
    327          			}
    328          
    329          			// Advance to drawing the next row
    330          			drawPosY += btnHeight + btnSpacingVert;
    331          		}
    332          	}
    333          }
   \                     ??CreateTankButtonGrid_12:
   \   00000240   0D00A0E1           MOV      R0,SP
   \   00000244   ........           _BLF     ??_Tidy0,??_Tidy0??rA_1
   \   00000248   2CD08DE2           ADD      SP,SP,#+44
   \   0000024C   F04FBDE8           POP      {R4-R11,LR}
   \   00000250   1EFF2FE1           BX       LR               ;; return
   \                     ??CreateTankButtonGrid_13:
   \   00000254   0C109DE5           LDR      R1,[SP, #+12]
   \   00000258   011081E2           ADD      R1,R1,#+1
   \   0000025C   0C108DE5           STR      R1,[SP, #+12]
   \                     ??CreateTankButtonGrid_11:
   \   00000260   04109DE5           LDR      R1,[SP, #+4]
   \   00000264   00209DE5           LDR      R2,[SP, #+0]
   \   00000268   0C009DE5           LDR      R0,[SP, #+12]
   \   0000026C   021041E0           SUB      R1,R1,R2
   \   00000270   3C229FE5           LDR      R2,??CreateTankButtonGrid_4  ;; 0xffffffffaaaaaaab
   \   00000274   923186E0           UMULL    R3,R6,R2,R1
   \   00000278   A661A0E1           LSR      R6,R6,#+3
   \   0000027C   060050E1           CMP      R0,R6
   \   00000280   EEFFFF2A           BCS      ??CreateTankButtonGrid_12
   \   00000284   0010A0E1           MOV      R1,R0
   \   00000288   0C20A0E3           MOV      R2,#+12
   \   0000028C   920101E0           MUL      R1,R2,R1
   \   00000290   18108DE5           STR      R1,[SP, #+24]
   \   00000294   18229FE5           LDR      R2,??CreateTankButtonGrid_4  ;; 0xffffffffaaaaaaab
   \   00000298   0100A0E1           MOV      R0,R1
   \   0000029C   00109DE5           LDR      R1,[SP, #+0]
   \   000002A0   010080E0           ADD      R0,R0,R1
   \   000002A4   041090E5           LDR      R1,[R0, #+4]
   \   000002A8   000090E5           LDR      R0,[R0, #+0]
   \   000002AC   001041E0           SUB      R1,R1,R0
   \   000002B0   923180E0           UMULL    R3,R0,R2,R1
   \   000002B4   10109DE5           LDR      R1,[SP, #+16]
   \   000002B8   2820A0E3           MOV      R2,#+40
   \   000002BC   013041E2           SUB      R3,R1,#+1
   \   000002C0   033183E0           ADD      R3,R3,R3, LSL #+2
   \   000002C4   923121E0           MLA      R1,R2,R1,R3
   \   000002C8   14309DE5           LDR      R3,[SP, #+20]
   \   000002CC   A001A0E1           LSR      R0,R0,#+3
   \   000002D0   A11F81E0           ADD      R1,R1,R1, LSR #+31
   \   000002D4   C11043E0           SUB      R1,R3,R1, ASR #+1
   \   000002D8   20108DE5           STR      R1,[SP, #+32]
   \   000002DC   28309DE5           LDR      R3,[SP, #+40]
   \   000002E0   1E10A0E3           MOV      R1,#+30
   \   000002E4   012040E2           SUB      R2,R0,#+1
   \   000002E8   022182E0           ADD      R2,R2,R2, LSL #+2
   \   000002EC   912020E0           MLA      R0,R1,R0,R2
   \   000002F0   0C109DE5           LDR      R1,[SP, #+12]
   \   000002F4   382094E5           LDR      R2,[R4, #+56]
   \   000002F8   A00F80E0           ADD      R0,R0,R0, LSR #+31
   \   000002FC   923121E0           MLA      R1,R2,R1,R3
   \   00000300   C06041E0           SUB      R6,R1,R0, ASR #+1
   \   00000304   20009DE5           LDR      R0,[SP, #+32]
   \   00000308   080050E3           CMP      R0,#+8
   \   0000030C   0810A0B3           MOVLT    R1,#+8
   \   00000310   20108DB5           STRLT    R1,[SP, #+32]
   \   00000314   080056E3           CMP      R6,#+8
   \   00000318   0860A0B3           MOVLT    R6,#+8
   \   0000031C   0010A0E3           MOV      R1,#+0
   \   00000320   020000EA           B        ??CreateTankButtonGrid_14
   \                     ??CreateTankButtonGrid_15:
   \   00000324   1C109DE5           LDR      R1,[SP, #+28]
   \   00000328   236086E2           ADD      R6,R6,#+35
   \   0000032C   011081E2           ADD      R1,R1,#+1
   \                     ??CreateTankButtonGrid_14:
   \   00000330   1C108DE5           STR      R1,[SP, #+28]
   \   00000334   18009DE5           LDR      R0,[SP, #+24]
   \   00000338   00109DE5           LDR      R1,[SP, #+0]
   \   0000033C   010080E0           ADD      R0,R0,R1
   \   00000340   042090E5           LDR      R2,[R0, #+4]
   \   00000344   000090E5           LDR      R0,[R0, #+0]
   \   00000348   1C109DE5           LDR      R1,[SP, #+28]
   \   0000034C   000042E0           SUB      R0,R2,R0
   \   00000350   5C219FE5           LDR      R2,??CreateTankButtonGrid_4  ;; 0xffffffffaaaaaaab
   \   00000354   923087E0           UMULL    R3,R7,R2,R0
   \   00000358   A771A0E1           LSR      R7,R7,#+3
   \   0000035C   070051E1           CMP      R1,R7
   \   00000360   BBFFFF2A           BCS      ??CreateTankButtonGrid_13
   \   00000364   20709DE5           LDR      R7,[SP, #+32]
   \   00000368   0100A0E1           MOV      R0,R1
   \   0000036C   0C10A0E3           MOV      R1,#+12
   \   00000370   910009E0           MUL      R9,R1,R0
   \   00000374   0080A0E3           MOV      R8,#+0
   \   00000378   0C0000EA           B        ??CreateTankButtonGrid_16
   \                     ??CreateTankButtonGrid_17:
   \   0000037C   B422CDE1           STRH     R2,[SP, #+36]
   \   00000380   0120A0E3           MOV      R2,#+1
   \   00000384   ........           _BLF     ??_Make_room_3,??_Make_room??rA_3
   \                     ??CreateTankButtonGrid_18:
   \   00000388   F412DDE1           LDRSH    R1,[SP, #+36]
   \   0000038C   01A04AE2           SUB      R10,R10,#+1
   \   00000390   00005AE3           CMP      R10,#+0
   \   00000394   B010C0E1           STRH     R1,[R0, #+0]
   \   00000398   04B080E5           STR      R11,[R0, #+4]
   \   0000039C   080080E2           ADD      R0,R0,#+8
   \   000003A0   F8FFFF1A           BNE      ??CreateTankButtonGrid_18
   \                     ??CreateTankButtonGrid_19:
   \   000003A4   015085E2           ADD      R5,R5,#+1
   \                     ??CreateTankButtonGrid_20:
   \   000003A8   2D7087E2           ADD      R7,R7,#+45
   \   000003AC   018088E2           ADD      R8,R8,#+1
   \                     ??CreateTankButtonGrid_16:
   \   000003B0   18009DE5           LDR      R0,[SP, #+24]
   \   000003B4   00109DE5           LDR      R1,[SP, #+0]
   \   000003B8   010080E0           ADD      R0,R0,R1
   \   000003BC   001090E5           LDR      R1,[R0, #+0]
   \   000003C0   011089E0           ADD      R1,R9,R1
   \   000003C4   042091E5           LDR      R2,[R1, #+4]
   \   000003C8   001091E5           LDR      R1,[R1, #+0]
   \   000003CC   011042E0           SUB      R1,R2,R1
   \   000003D0   210158E1           CMP      R8,R1, LSR #+2
   \   000003D4   D2FFFF2A           BCS      ??CreateTankButtonGrid_15
   \   000003D8   001090E5           LDR      R1,[R0, #+0]
   \   000003DC   011099E7           LDR      R1,[R9, +R1]
   \   000003E0   081191E7           LDR      R1,[R1, +R8, LSL #+2]
   \   000003E4   000051E3           CMP      R1,#+0
   \   000003E8   EEFFFF0A           BEQ      ??CreateTankButtonGrid_20
   \   000003EC   0500A0E1           MOV      R0,R5
   \   000003F0   01002DE9           PUSH     {R0}
   \   000003F4   0000A0E3           MOV      R0,#+0
   \   000003F8   01002DE9           PUSH     {R0}
   \   000003FC   0200A0E3           MOV      R0,#+2
   \   00000400   01002DE9           PUSH     {R0}
   \   00000404   FC04D4E1           LDRSH    R0,[R4, #+76]
   \   00000408   01B0A0E1           MOV      R11,R1
   \   0000040C   1E30A0E3           MOV      R3,#+30
   \   00000410   01002DE9           PUSH     {R0}
   \   00000414   2820A0E3           MOV      R2,#+40
   \   00000418   0610A0E1           MOV      R1,R6
   \   0000041C   0700A0E1           MOV      R0,R7
   \   00000420   ........           _BLF     BUTTON_CreateEx,??BUTTON_CreateEx??rA
   \   00000424   ........           LDR      R2,??DataTable8  ;; 0xd3d3d3
   \   00000428   00A0A0E1           MOV      R10,R0
   \   0000042C   0010A0E3           MOV      R1,#+0
   \   00000430   ........           _BLF     BUTTON_SetBkColor,??BUTTON_SetBkColor??rA
   \   00000434   28009DE5           LDR      R0,[SP, #+40]
   \   00000438   10109DE5           LDR      R1,[SP, #+16]
   \   0000043C   010090E7           LDR      R0,[R0, +R1]
   \   00000440   000099E7           LDR      R0,[R9, +R0]
   \   00000444   080190E7           LDR      R0,[R0, +R8, LSL #+2]
   \   00000448   440080E2           ADD      R0,R0,#+68
   \   0000044C   181090E5           LDR      R1,[R0, #+24]
   \   00000450   10D08DE2           ADD      SP,SP,#+16
   \   00000454   100051E3           CMP      R1,#+16
   \   00000458   04109025           LDRCS    R1,[R0, #+4]
   \   0000045C   04108032           ADDCC    R1,R0,#+4
   \   00000460   0A00A0E1           MOV      R0,R10
   \   00000464   ........           _BLF     BUTTON_SetText,??BUTTON_SetText??rA
   \   00000468   0A00A0E1           MOV      R0,R10
   \   0000046C   ........           _BLF     WM_GetId,??WM_GetId??rA
   \   00000470   500084E2           ADD      R0,R4,#+80
   \   00000474   041090E5           LDR      R1,[R0, #+4]
   \   00000478   083090E5           LDR      R3,[R0, #+8]
   \   0000047C   0A20A0E1           MOV      R2,R10
   \   00000480   01A0A0E3           MOV      R10,#+1
   \   00000484   030051E1           CMP      R1,R3
   \   00000488   BBFFFF2A           BCS      ??CreateTankButtonGrid_17
   \   0000048C   0130A0E1           MOV      R3,R1
   \                     ??CreateTankButtonGrid_21:
   \   00000490   B020C3E1           STRH     R2,[R3, #+0]
   \   00000494   04B083E5           STR      R11,[R3, #+4]
   \   00000498   01A04AE2           SUB      R10,R10,#+1
   \   0000049C   083083E2           ADD      R3,R3,#+8
   \   000004A0   00005AE3           CMP      R10,#+0
   \   000004A4   F9FFFF1A           BNE      ??CreateTankButtonGrid_21
   \   000004A8   081081E2           ADD      R1,R1,#+8
   \   000004AC   041080E5           STR      R1,[R0, #+4]
   \   000004B0   BBFFFFEA           B        ??CreateTankButtonGrid_19
   \                     ??CreateTankButtonGrid_4:
   \   000004B4   ABAAAAAA           DC32     0xffffffffaaaaaaab
   \   000004B8   ........           DC32     ??EventLoopTankCleaningWindow

   \                                 In segment DIFUNCT, align 4, keep-with-next, root
   \   00000000                      REQUIRE ?call_ctors
   \   00000000   ........           DC32    ??__sti__routine

   \                                 In segment DATA_C, align 4, align-sorted
   \   00000000   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0
   \              0000        

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void TDUTankCleaningWin::delete ~TDUTankCleaningWin(TDUTankCleaningWin *)
   \                     `??delete ~TDUTankCleaningWin`:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0040B0E1           MOVS     R4,R0
   \   00000008   0200000A           BEQ      `??delete ~TDUTankCleaningWin_1`
   \   0000000C   ........           BL       `?~TDUTankCleaningWin`
   \   00000010   0400A0E1           MOV      R0,R4
   \   00000014   ........           _BLF     `??operator delete`,`??operator delete??rA`
   \                     `??delete ~TDUTankCleaningWin_1`:
   \   00000018   1040BDE8           POP      {R4,LR}
   \   0000001C   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs TDUTankCleaningWin &TDUTankCleaningWin::new TDUTankCleaningWin()
   \                     `??new TDUTankCleaningWin`:
   \   00000000   00402DE9           PUSH     {LR}
   \   00000004   6400A0E3           MOV      R0,#+100
   \   00000008   ........           _BLF     `??operator new`,`??operator new??rA`
   \   0000000C   000050E3           CMP      R0,#+0
   \   00000010   0000000A           BEQ      `??new TDUTankCleaningWin_1`
   \   00000014   ........           BL       ??TDUTankCleaningWin
   \                     `??new TDUTankCleaningWin_1`:
   \   00000018   0040BDE8           POP      {LR}
   \   0000001C   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   static __??Code32?? __intrinsic __code __interwork __atpcs void __sti__routine()
   \                     ??__sti__routine:
   \   00000000   1C109FE5           LDR      R1,??__sti__routine_1  ;; GUI_Font24_1
   \   00000004   ........           LDR      R0,??DataTable5  ;; TDU_FONT_BIG
   \   00000008   30002DE9           PUSH     {R4,R5}
   \   0000000C   3C10B1E8           LDM      R1!,{R2-R5,R12}
   \   00000010   3C10A0E8           STM      R0!,{R2-R5,R12}
   \   00000014   1C1091E8           LDM      R1,{R2-R4,R12}
   \   00000018   1C1080E8           STM      R0,{R2-R4,R12}
   \   0000001C   3000BDE8           POP      {R4,R5}
   \   00000020   1EFF2FE1           BX       LR               ;; return
   \                     ??__sti__routine_1:
   \   00000024   ........           DC32     GUI_Font24_1

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable2:
   \   00000000   ........           DC32     ??__vtbl

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable5:
   \   00000000   ........           DC32     TDU_FONT_BIG

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable7:
   \   00000000   ........           DC32     ??TankVector

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable8:
   \   00000000   D3D3D300           DC32     0xd3d3d3
    334          

   Maximum stack usage in bytes:

     Function                       CSTACK
     --------                       ------
     TDUTankCleaningWin::ButtonClicked(int)
                                        4
     TDUTankCleaningWin::CreateTankButtonGrid()
                                       96
     TDUTankCleaningWin::EventLoopTankCleaningWindow(WM_MESSAGE *)
                                        4
     TDUTankCleaningWin::FindTankByButtonHandle(signed short)
                                        0
     TDUTankCleaningWin::MoveWin()      4
     TDUTankCleaningWin::ResetWinRefreshTimer(int)
                                        8
     TDUTankCleaningWin::SetButton()
                                       24
     TDUTankCleaningWin::TDUTankCleaningWin()
                                        8
     TDUTankCleaningWin::UnitClicked(GUI_HWIN, int)
                                        8
     TDUTankCleaningWin::UpdateButtonColors()
                                       16
     TDUTankCleaningWin::cbEventHandler(WM_MESSAGE *)
                                        8
     TDUTankCleaningWin::delete ~TDUTankCleaningWin(TDUTankCleaningWin *)
                                        8
     TDUTankCleaningWin::new TDUTankCleaningWin()
                                        4
     TDUTankCleaningWin::~TDUTankCleaningWin()
                                       12
     _Vector_impl<PROTank *, allocator<PROTank *>>::_Assign(_Vector_impl<PROTank *, allocator<PROTank *>> const &)
                                       24
     _Vector_impl<PROTank *, allocator<PROTank *>>::_Make_room(PROTank **, unsigned int)
                                       32
     _Vector_impl<TDUTankCleaningWin_ButtonToTankMapping, allocator<TDUTankCleaningWin_ButtonToTankMapping>>::_Make_room(TDUTankCleaningWin_ButtonToTankMapping *, unsigned int)
                                       32
     _Vector_impl<vector<PROTank *>, allocator<vector<PROTank *>>>::_Assign(_Vector_impl<vector<PROTank *>, allocator<vector<PROTank *>>> const &)
                                       32
     _Vector_impl<vector<PROTank *>, allocator<vector<PROTank *>>>::_Make_room(vector<PROTank *> *, unsigned int)
                                       52
     _Vector_impl<vector<PROTank *>, allocator<vector<PROTank *>>>::_Tidy0()
                                       20
     _Vector_impl<vector<vector<PROTank *>>, allocator<vector<vector<PROTank *>>>>::_Make_room(vector<vector<PROTank *>> *, unsigned int)
                                       52
     _Vector_impl<vector<vector<PROTank *>>, allocator<vector<vector<PROTank *>>>>::_Tidy0()
                                       20
     __sti__routine()                   8
     vector<vector<PROTank *>>::resize(unsigned int)
                                       48
     vector<vector<vector<PROTank *>>>::resize(unsigned int)
                                       48


   Segment part sizes:

     Function/Label                 Bytes
     --------------                 -----
     _Vector_impl<vector<vector<PROTank *>>, allocator<vector<vector<PROTank *>>>>::_Tidy0()
                                      88
     _Vector_impl<vector<PROTank *>, allocator<vector<PROTank *>>>::_Tidy0()
                                     100
     _Vector_impl<vector<PROTank *>, allocator<vector<PROTank *>>>::_Assign(_Vector_impl<vector<PROTank *>, allocator<vector<PROTank *>>> const &)
                                     600
     _Vector_impl<PROTank *, allocator<PROTank *>>::_Assign(_Vector_impl<PROTank *, allocator<PROTank *>> const &)
                                     248
     _Vector_impl<vector<PROTank *>, allocator<vector<PROTank *>>>::_Make_room(vector<PROTank *> *, unsigned int)
                                     732
     _Vector_impl<vector<vector<PROTank *>>, allocator<vector<vector<PROTank *>>>>::_Make_room(vector<vector<PROTank *>> *, unsigned int)
                                     708
     _Vector_impl<PROTank *, allocator<PROTank *>>::_Make_room(PROTank **, unsigned int)
                                     244
     _Vector_impl<TDUTankCleaningWin_ButtonToTankMapping, allocator<TDUTankCleaningWin_ButtonToTankMapping>>::_Make_room(TDUTankCleaningWin_ButtonToTankMapping *, unsigned int)
                                     244
     vector<vector<PROTank *>>::resize(unsigned int)
                                     332
     vector<vector<vector<PROTank *>>>::resize(unsigned int)
                                     288
     TDU_FONT_BIG                     36
     TDUTankCleaningWin::TDUTankCleaningWin()
                                      76
     TDUTankCleaningWin::~TDUTankCleaningWin()
                                      72
     TDUTankCleaningWin::SetButton()
                                     180
     TDUTankCleaningWin::ButtonClicked(int)
                                      92
     TDUTankCleaningWin::MoveWin()    40
     TDUTankCleaningWin::UnitClicked(GUI_HWIN, int)
                                      92
     TDUTankCleaningWin::cbEventHandler(WM_MESSAGE *)
                                     216
     TDUTankCleaningWin::EventLoopTankCleaningWindow(WM_MESSAGE *)
                                      88
     TDUTankCleaningWin::FindTankByButtonHandle(signed short)
                                      52
     TDUTankCleaningWin::ResetWinRefreshTimer(int)
                                      68
     TDUTankCleaningWin::UpdateButtonColors()
                                      84
     TDUTankCleaningWin::CreateTankButtonGrid()
                                    1212
     ?<Constant {false, false, false, false, false}
                                       8
     TDUTankCleaningWin::delete ~TDUTankCleaningWin(TDUTankCleaningWin *)
                                      32
     TDUTankCleaningWin::new TDUTankCleaningWin()
                                      32
     __sti__routine()                 40
     ??DataTable2                      4
     ??DataTable5                      4
     ??DataTable7                      4
     ??DataTable8                      4
      Others                         556

 
 6 504 bytes in segment CODE
    20 bytes in segment DATA_C
    36 bytes in segment DATA_Z
     4 bytes in segment DIFUNCT
    12 bytes in segment INITTAB
 
 2 396 bytes of CODE  memory (+ 4 124 bytes shared)
    20 bytes of CONST memory
    36 bytes of DATA  memory

Errors: none
Warnings: none
