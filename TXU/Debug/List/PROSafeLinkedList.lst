##############################################################################
#                                                                            #
# IAR ARM ANSI C/C++ Compiler V4.42A/W32               14/Sep/2022  15:15:50 #
# Copyright 1999-2005 IAR Systems. All rights reserved.                      #
#                                                                            #
#    Cpu mode        =  interwork                                            #
#    Endian          =  little                                               #
#    Stack alignment =  4                                                    #
#    Source file     =  D:\S2Prog\Shared\Src\PROSafeLinkedList.cpp           #
#    Command line    =  D:\S2Prog\Shared\Src\PROSafeLinkedList.cpp --fpu     #
#                       None -D OS_LIBMODE_SP -D CPU_S3C2410 -D              #
#                       OS_RAMVECT=0 -D OS_UART=-1 -D S2TXU -D USE_LZO=1 -D  #
#                       __ARM_LIBRARY__ -D WATCHDOG=1 -D NETWORK=1 -lCN      #
#                       D:\S2Prog\TXU\Debug\List\ -o                         #
#                       D:\S2Prog\TXU\Debug\Obj\ -z9 --debug --cpu_mode arm  #
#                       --endian little --cpu ARM920T --stack_align 4        #
#                       --interwork -e --enable_multibytes --eec++           #
#                       --dlib_config "C:\Program Files (x86)\IAR            #
#                       Systems\Embedded Workbench                           #
#                       4.0\arm\LIB\dl4tpainl8n.h" -I                        #
#                       D:\S2Prog\TXU\GUI\CORE\ -I D:\S2Prog\TXU\GUI\WM\ -I  #
#                       D:\S2Prog\TXU\GUI\WIDGET\ -I D:\S2Prog\TXU\CONFIG\   #
#                       -I D:\S2Prog\TXU\INC\ -I D:\S2Prog\TXU\..\SHARED\INC #
#                       \ -I D:\S2Prog\TXU\..\SHARED\SRC\ -I                 #
#                       D:\S2Prog\TXU\..\SHARED\LZO\minilzo.210\ -I          #
#                       D:\S2Prog\TXU\lwip-1.4.1\src\include\ -I             #
#                       D:\S2Prog\TXU\lwip-1.4.1\src\include\ipv4\ -I        #
#                       D:\S2Prog\TXU\lwip-1.4.1\src\ -I                     #
#                       D:\S2Prog\TXU\..\SHARED\Database\ -I                 #
#                       D:\S2Prog\TXU\src\ -I "C:\Program Files (x86)\IAR    #
#                       Systems\Embedded Workbench 4.0\arm\INC\"             #
#                       --inline_threshold=2                                 #
#    List file       =  D:\S2Prog\TXU\Debug\List\PROSafeLinkedList.lst       #
#    Object file     =  D:\S2Prog\TXU\Debug\Obj\PROSafeLinkedList.r79        #
#                                                                            #
#                                                                            #
##############################################################################

D:\S2Prog\Shared\Src\PROSafeLinkedList.cpp
      1          #include "TSNIncludes.h"
      2          #pragma hdrstop
      3          #ifdef BORLAND
      4          	#pragma package(smart_init)
      5          #endif
      6          

   \                                 In segment CODE, align 4, keep-with-next
      7          PROSafeLinkedList::PROSafeLinkedList(bool CanDelete):PROLinkedList(true,CanDelete)
   \                     ??PROSafeLinkedList:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0040A0E1           MOV      R4,R0
      8          {
   \   00000008   0120A0E1           MOV      R2,R1
   \   0000000C   0110A0E3           MOV      R1,#+1
   \   00000010   ........           _BLF     ??PROLinkedList,??PROLinkedList??rA
      9          }
   \   00000014   0400A0E1           MOV      R0,R4
   \   00000018                      REQUIRE ?Subroutine3
   \   00000018                      ;; // Fall through to label ?Subroutine3

   \                                 In segment CODE, align 4, keep-with-next
   \                     ?Subroutine3:
   \   00000000   1040BDE8           POP      {R4,LR}
   \   00000004   1EFF2FE1           BX       LR               ;; return

   \                                 In segment DIFUNCT, align 4, keep-with-next, root
   \   00000000                      REQUIRE ?call_ctors
   \   00000000   ........           DC32    ??__sti__routine

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs PROSafeLinkedList &PROSafeLinkedList::new PROSafeLinkedList(bool)
   \                     `??new PROSafeLinkedList`:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   1C00A0E3           MOV      R0,#+28
   \   0000000C   ........           _BLF     `??operator new`,`??operator new??rA`
   \   00000010   000050E3           CMP      R0,#+0
   \   00000014   0100000A           BEQ      `??new PROSafeLinkedList_1`
   \   00000018   0410A0E1           MOV      R1,R4
   \   0000001C   ........           BL       ??PROSafeLinkedList
   \                     `??new PROSafeLinkedList_1`:
   \   00000020   ........           B        ?Subroutine3

   \                                 In segment CODE, align 4, keep-with-next
   \   static __??Code32?? __intrinsic __code __interwork __atpcs void __sti__routine()
   \                     ??__sti__routine:
   \   00000000   1EFF2FE1           BX       LR               ;; return
     10          
     11          

   Maximum stack usage in bytes:

     Function                       CSTACK
     --------                       ------
     PROSafeLinkedList::PROSafeLinkedList(bool)
                                        8
     PROSafeLinkedList::new PROSafeLinkedList(bool)
                                        8
     __sti__routine()                   0


   Segment part sizes:

     Function/Label                 Bytes
     --------------                 -----
     PROSafeLinkedList::PROSafeLinkedList(bool)
                                      24
     ?Subroutine3                      8
     PROSafeLinkedList::new PROSafeLinkedList(bool)
                                      36
     __sti__routine()                  4
      Others                          40

 
 108 bytes in segment CODE
   4 bytes in segment DIFUNCT
 
 76 bytes of CODE memory (+ 36 bytes shared)

Errors: none
Warnings: none
