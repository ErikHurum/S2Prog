##############################################################################
#                                                                            #
# IAR ARM ANSI C/C++ Compiler V4.42A/W32               14/Sep/2022  15:18:44 #
# Copyright 1999-2005 IAR Systems. All rights reserved.                      #
#                                                                            #
#    Cpu mode        =  interwork                                            #
#    Endian          =  little                                               #
#    Stack alignment =  4                                                    #
#    Source file     =  D:\S2Prog\TXU\src\TDUSysSetupWin.cpp                 #
#    Command line    =  D:\S2Prog\TXU\src\TDUSysSetupWin.cpp --fpu None -D   #
#                       OS_LIBMODE_SP -D CPU_S3C2410 -D OS_RAMVECT=0 -D      #
#                       OS_UART=-1 -D S2TXU -D USE_LZO=1 -D __ARM_LIBRARY__  #
#                       -D WATCHDOG=1 -D NETWORK=1 -lCN                      #
#                       D:\S2Prog\TXU\Debug\List\ -o                         #
#                       D:\S2Prog\TXU\Debug\Obj\ -s9 --debug --cpu_mode arm  #
#                       --endian little --cpu ARM920T --stack_align 4        #
#                       --interwork -e --enable_multibytes --eec++           #
#                       --dlib_config "C:\Program Files (x86)\IAR            #
#                       Systems\Embedded Workbench                           #
#                       4.0\arm\LIB\dl4tpainl8n.h" -I                        #
#                       D:\S2Prog\TXU\GUI\CORE\ -I D:\S2Prog\TXU\GUI\WM\ -I  #
#                       D:\S2Prog\TXU\GUI\WIDGET\ -I D:\S2Prog\TXU\CONFIG\   #
#                       -I D:\S2Prog\TXU\INC\ -I D:\S2Prog\TXU\..\SHARED\INC #
#                       \ -I D:\S2Prog\TXU\..\SHARED\SRC\ -I                 #
#                       D:\S2Prog\TXU\..\SHARED\LZO\minilzo.210\ -I          #
#                       D:\S2Prog\TXU\lwip-1.4.1\src\include\ -I             #
#                       D:\S2Prog\TXU\lwip-1.4.1\src\include\ipv4\ -I        #
#                       D:\S2Prog\TXU\lwip-1.4.1\src\ -I                     #
#                       D:\S2Prog\TXU\..\SHARED\Database\ -I                 #
#                       D:\S2Prog\TXU\src\ -I "C:\Program Files (x86)\IAR    #
#                       Systems\Embedded Workbench 4.0\arm\INC\"             #
#                       --inline_threshold=2                                 #
#    List file       =  D:\S2Prog\TXU\Debug\List\TDUSysSetupWin.lst          #
#    Object file     =  D:\S2Prog\TXU\Debug\Obj\TDUSysSetupWin.r79           #
#                                                                            #
#                                                                            #
##############################################################################

D:\S2Prog\TXU\src\TDUSysSetupWin.cpp
      1          #include "TDUIncludes.h"
      2          
      3          

   \                                 In segment CODE, align 4, keep-with-next
      4          TDUSysSetupWin::~TDUSysSetupWin(void)
      5          {
   \                     `?~TDUSysSetupWin`:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0040A0E1           MOV      R4,R0
      6          }
   \   00000008   880084E2           ADD      R0,R4,#+136
   \   0000000C   ........           _BLF     `?~CloseWindowTimer`,`?~CloseWindowTimer??rA`
   \   00000010   0020A0E3           MOV      R2,#+0
   \   00000014   0110A0E3           MOV      R1,#+1
   \   00000018   680084E2           ADD      R0,R4,#+104
   \   0000001C   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000020   0020A0E3           MOV      R2,#+0
   \   00000024   0110A0E3           MOV      R1,#+1
   \   00000028   480084E2           ADD      R0,R4,#+72
   \   0000002C   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000030   0400A0E1           MOV      R0,R4
   \   00000034   ........           _BLF     `?~TDUBasicWin`,`?~TDUBasicWin??rA`
   \   00000038   1040BDE8           POP      {R4,LR}
   \   0000003C   1EFF2FE1           BX       LR               ;; return
      7          

   \                                 In segment CODE, align 4, keep-with-next
      8          TDUSysSetupWin::TDUSysSetupWin(void)
   \                     ??TDUSysSetupWin:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0040A0E1           MOV      R4,R0
      9          {
   \   00000008   ........           _BLF     ??TDUBasicWin,??TDUBasicWin??rA
   \   0000000C   480084E2           ADD      R0,R4,#+72
   \   00000010   ........           _BLF     ??AnsiString,??AnsiString??rA
   \   00000014   680084E2           ADD      R0,R4,#+104
   \   00000018   ........           _BLF     ??AnsiString,??AnsiString??rA
   \   0000001C   880084E2           ADD      R0,R4,#+136
   \   00000020   ........           _BLF     ??CloseWindowTimer,??CloseWindowTimer??rA
     10              Closed = true;
   \   00000024   0100A0E3           MOV      R0,#+1
   \   00000028   8400C4E5           STRB     R0,[R4, #+132]
     11              PinCodeOK = false;
   \   0000002C   0000A0E3           MOV      R0,#+0
   \   00000030   6400C4E5           STRB     R0,[R4, #+100]
     12          }
   \   00000034   0400A0E1           MOV      R0,R4
   \   00000038   1040BDE8           POP      {R4,LR}
   \   0000003C   1EFF2FE1           BX       LR               ;; return
     13          

   \                                 In segment DATA_I, align 4, align-sorted
     14          ValueList PWBackColorList[] =  {
   \                     PWBackColorList:
   \   00000000                      DS8 60
   \   0000003C                      REQUIRE `?<Initializer for PWBackColorList>`
     15              {L_WORD462          ,L_WORD237,GUI_BLACK},                              // {"Black"          ,"",GUI_BLACK},
     16              {L_WORD463          ,L_WORD237,GUI_DARKGRAY},                           // {"Dark Gray"      ,"",GUI_DARKGRAY},
     17              {L_WORD464          ,L_WORD237,GUI_LIGHTGRAY},                          // {"Light Gray"     ,"",GUI_LIGHTGRAY},
     18              {L_WORD465          ,L_WORD237,GUI_WHITE},                              // {"White"          ,"",GUI_WHITE},
     19              {L_WORD466          ,L_WORD237,GUI_BLUE},                               // {"Blue"           ,"",GUI_BLUE},
     20          };
     21          
     22          ValueList PWTextColorList[] =  {
   \                     PWTextColorList:
   \   0000003C                      DS8 60
   \   00000078                      REQUIRE `?<Initializer for PWTextColorList>`
     23              {L_WORD462          ,L_WORD237,GUI_BLACK},                              //   {"Black"          ,"",GUI_BLACK},
     24              {L_WORD463          ,L_WORD237,GUI_DARKGRAY},                           //   {"Dark Gray"      ,"",GUI_DARKGRAY},
     25              {L_WORD464          ,L_WORD237,GUI_LIGHTGRAY},                          //   {"Light Gray"     ,"",GUI_LIGHTGRAY},
     26              {L_WORD465          ,L_WORD237,GUI_WHITE},                              //   {"White"          ,"",GUI_WHITE},
     27              {L_WORD565          ,L_WORD237,GUI_GREEN},                              //   {"Green"          ,"",GUI_GREEN},
     28          };
     29          
     30          int SizeofPWBackColorList = NELEMENTS(PWBackColorList);
   \                     SizeofPWBackColorList:
   \   00000078                      DS8 4
   \   0000007C                      REQUIRE `?<Initializer for SizeofPWBackColorList>`
     31          int SizeofPWTextColorList = NELEMENTS(PWTextColorList);
   \                     SizeofPWTextColorList:
   \   0000007C                      DS8 4
   \   00000080                      REQUIRE `?<Initializer for SizeofPWTextColorList>`
     32          
     33          

   \                                 In segment DATA_C, align 4, align-sorted
     34          const GUI_WIDGET_CREATE_INFO TDUSysSetupWin::aDialogCreate[] =
   \                     ??aDialogCreate:
   \   00000000   ............       DC32 FRAMEWIN_CreateIndirect, `?<Constant "System setup page">`
   \              ....        
   \   00000008   930800000000       DC16 2195, 0, 0, 0, 0, 128
   \              000000008000
   \   00000014   00000000....       DC32 0, BUTTON_CreateIndirect, `?<Constant "Close">`
   \              ............
   \   00000020   0500C3009B00       DC16 5, 195, 155, 80, 20
   \              50001400    
   \   0000002A   000000000000       DC8 0, 0, 0, 0, 0, 0
   \   00000030   ............       DC32 TEXT_CreateIndirect, `?<Constant "Screen saver:">`
   \              ....        
   \   00000038   600106000600       DC16 352, 6, 6, 80, 20, 0
   \              500014000000
   \   00000044   00000000           DC8 0, 0, 0, 0
   \   00000048   ............       DC32 EDIT_CreateIndirect, `?<Constant "">`
   \              ....        
   \   00000050   010106001A00       DC16 257, 6, 26, 41, 15, 14
   \              29000F000E00
   \   0000005C   14000000....       DC32 20, TEXT_CreateIndirect, `?<Constant "minutes">`
   \              ............
   \   00000068   610132001A00       DC16 353, 50, 26, 40, 20, 0
   \              280014000000
   \   00000074   00000000           DC8 0, 0, 0, 0
   \   00000078   ............       DC32 TEXT_CreateIndirect, `?<Constant "Alarm off delay:">`
   \              ....        
   \   00000080   620106003C00       DC16 354, 6, 60, 80, 20, 0
   \              500014000000
   \   0000008C   00000000           DC8 0, 0, 0, 0
   \   00000090   ............       DC32 EDIT_CreateIndirect, `?<Constant "">`
   \              ....        
   \   00000098   020106005000       DC16 258, 6, 80, 41, 15, 14
   \              29000F000E00
   \   000000A4   14000000....       DC32 20, TEXT_CreateIndirect, `?<Constant "seconds">`
   \              ............
   \   000000B0   630132005000       DC16 355, 50, 80, 40, 20, 0
   \              280014000000
   \   000000BC   00000000           DC8 0, 0, 0, 0
   \   000000C0   ............       DC32 TEXT_CreateIndirect, `?<Constant "Set color:">`
   \              ....        
   \   000000C8   64016E000600       DC16 356, 110, 6, 90, 18, 0
   \              5A0012000000
   \   000000D4   00000000           DC8 0, 0, 0, 0
   \   000000D8   ............       DC32 TEXT_CreateIndirect, `?<Constant "Background">`
   \              ....        
   \   000000E0   65016E001800       DC16 357, 110, 24, 90, 18, 0
   \              5A0012000000
   \   000000EC   00000000           DC8 0, 0, 0, 0
   \   000000F0   ........0000       DC32 DROPDOWN_CreateIndirect, 0H
   \              0000        
   \   000000F8   80016E002A00       DC16 384, 110, 42, 74, 70, 0
   \              4A0046000000
   \   00000104   03000000....       DC32 3, TEXT_CreateIndirect, `?<Constant "Foreground">`
   \              ............
   \   00000110   6601BE001800       DC16 358, 190, 24, 90, 18, 0
   \              5A0012000000
   \   0000011C   00000000           DC8 0, 0, 0, 0
   \   00000120   ........0000       DC32 DROPDOWN_CreateIndirect, 0H
   \              0000        
   \   00000128   C00ABE002A00       DC16 2752, 190, 42, 74, 70, 0
   \              4A0046000000
   \   00000134   03000000....       DC32 3, TEXT_CreateIndirect, `?<Constant "Brightness:">`
   \              ............
   \   00000140   67016E005000       DC16 359, 110, 80, 80, 20, 0
   \              500014000000
   \   0000014C   00000000           DC8 0, 0, 0, 0
   \   00000150   ............       DC32 BUTTON_CreateIndirect, `?<Constant "/\\\\">`
   \              ....        
   \   00000158   720170006400       DC16 370, 112, 100, 25, 25
   \              19001900    
   \   00000162   000000000000       DC8 0, 0, 0, 0, 0, 0
   \   00000168   ............       DC32 BUTTON_CreateIndirect, `?<Constant "\\\\/">`
   \              ....        
   \   00000170   730194006400       DC16 371, 148, 100, 25, 25
   \              19001900    
   \   0000017A   000000000000       DC8 0, 0, 0, 0, 0, 0
   \   00000180   ............       DC32 BUTTON_CreateIndirect, `?<Constant "Buzzer /\\nLight test">`
   \              ....        
   \   00000188   7001C3004B00       DC16 368, 195, 75, 80, 35
   \              50002300    
   \   00000192   000000000000       DC8 0, 0, 0, 0, 0, 0
   \   00000198   ............       DC32 BUTTON_CreateIndirect, `?<Constant "Change Pin code">`
   \              ....        
   \   000001A0   740104006900       DC16 372, 4, 105, 90, 20
   \              5A001400    
   \   000001AA   000000000000       DC8 0, 0, 0, 0, 0, 0
   \   000001B0   ............       DC32 BUTTON_CreateIndirect, `?<Constant "Calibrate screen">`
   \              ....        
   \   000001B8   750104008200       DC16 373, 4, 130, 90, 20
   \              5A001400    
   \   000001C2   000000000000       DC8 0, 0, 0, 0, 0, 0
   \   000001C8   ............       DC32 BUTTON_CreateIndirect, `?<Constant "Factory defaults">`
   \              ....        
   \   000001D0   760104009B00       DC16 374, 4, 155, 90, 20
   \              5A001400    
   \   000001DA   000000000000       DC8 0, 0, 0, 0, 0, 0
     35          {
     36              { FRAMEWIN_CreateIndirect,"System setup page"   ,TDU_SYSSETUP_WIN, 0, 0, 0, 0, FRAMEWIN_CF_MAXIMIZED, 0},
     37              { BUTTON_CreateIndirect, "Close"                ,   GUI_ID_CLOSE, 195, 155,  80, 20},
     38              { TEXT_CreateIndirect,   "Screen saver:"        ,   GUI_ID_TEXT0,   6,   6,  80, 20, TEXT_CF_LEFT},
     39              { EDIT_CreateIndirect,   ""                     ,   GUI_ID_EDIT1,   6,  26,  41, 15, GUI_TA_HCENTER | GUI_TA_VCENTER, 20},
     40              { TEXT_CreateIndirect,   "minutes"              ,   GUI_ID_TEXT1,  50,  26,  40, 20, TEXT_CF_LEFT},
     41              { TEXT_CreateIndirect,   "Alarm off delay:"     ,   GUI_ID_TEXT2,   6,  60,  80, 20, TEXT_CF_LEFT},
     42              { EDIT_CreateIndirect,   ""                     ,   GUI_ID_EDIT2,   6,  80,  41, 15, GUI_TA_HCENTER | GUI_TA_VCENTER, 20},
     43              { TEXT_CreateIndirect,   "seconds"              ,   GUI_ID_TEXT3,  50,  80,  40, 20, TEXT_CF_LEFT},
     44              //   { TEXT_CreateIndirect,   "Change Pin code:"     ,		       0,   6, 122,  80, 20, TEXT_CF_LEFT },
     45          //	{ EDIT_CreateIndirect,	 "****"                 ,	GUI_ID_EDIT3,   6, 142,	 40, 15, GUI_TA_HCENTER | GUI_TA_VCENTER, 20 },
     46          
     47              { TEXT_CreateIndirect,   "Set color:"           ,   GUI_ID_TEXT4, 110,   6,  90,  18, TEXT_CF_LEFT},
     48              { TEXT_CreateIndirect,   "Background"           ,   GUI_ID_TEXT5, 110,  24,  90,  18, TEXT_CF_LEFT},
     49              { DROPDOWN_CreateIndirect, NULL                ,GUI_ID_DROPDOWN0, 110,  42,  74,  70, 0, 3},
     50              { TEXT_CreateIndirect,   "Foreground"           ,   GUI_ID_TEXT6, 190,  24,  90,  18, TEXT_CF_LEFT},
     51              { DROPDOWN_CreateIndirect, NULL                ,GUI_ID_DROPDOWN4, 190,  42,  74,  70, 0, 3},
     52          
     53              { TEXT_CreateIndirect,   "Brightness:"          , GUI_ID_TEXT7, 110,  80,  80, 20, TEXT_CF_LEFT},
     54              { BUTTON_CreateIndirect, "/\\"                  , GUI_ID_BUTTON2, 112, 100,  25, 25},
     55              { BUTTON_CreateIndirect, "\\/"                  , GUI_ID_BUTTON3, 148, 100,  25, 25},
     56          
     57              { BUTTON_CreateIndirect, "Buzzer /\nLight test" , GUI_ID_BUTTON0, 195,  75,  80, 35},
     58              { BUTTON_CreateIndirect, "Change Pin code"      , GUI_ID_BUTTON4,   4, 105,  90, 20},
     59              { BUTTON_CreateIndirect, "Calibrate screen"     , GUI_ID_BUTTON5,   4, 130,  90, 20},
     60              { BUTTON_CreateIndirect, "Factory defaults"     , GUI_ID_BUTTON6,   4, 155,  90, 20},
     61          //    { BUTTON_CreateIndirect, "Write\nconfig file"   , GUI_ID_BUTTON7, 195, 115,  80, 35},// EHSMark Disable writing config file
     62          };
     63          
     64          

   \                                 In segment CODE, align 4, keep-with-next
     65          void TDUSysSetupWin::ExecDialogBox(WM_HWIN hCurrentWin)
     66          {
   \                     ??ExecDialogBox:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0040A0E1           MOV      R4,R0
     67              //if ( !Closed ) {
     68              //	if ( WinHandl ) {
     69              //		CloseTimer.Stop();
     70              //	}
     71              //}
     72              //Closed = false;
     73              //WinHandl = GUI_CreateDialogBox(aDialogCreate, GUI_COUNTOF(aDialogCreate),&cbSysWin,
     74              //											hCurrentWin, 0, 0);
     75              //CloseTimer.Init(WinHandl,true,&Closed,TimeOut);
     76              // WM_EnableMemdev(WinHandl);
     77          
     78              if ( Closed ) {
   \   00000008   8400D4E5           LDRB     R0,[R4, #+132]
   \   0000000C   000050E3           CMP      R0,#+0
   \   00000010   1A00000A           BEQ      ??ExecDialogBox_1
     79                  Closed = false;
     80                  WinHandl = GUI_CreateDialogBox(aDialogCreate, GUI_COUNTOF(aDialogCreate),&cbSysWin,
     81                                                 hCurrentWin, 0, 0);
   \   00000014   74209FE5           LDR      R2,??ExecDialogBox_2  ;; ??cbSysWin
   \   00000018   0000A0E3           MOV      R0,#+0
   \   0000001C   8400C4E5           STRB     R0,[R4, #+132]
   \   00000020   01002DE9           PUSH     {R0}
   \   00000024   01002DE9           PUSH     {R0}
   \   00000028   64009FE5           LDR      R0,??ExecDialogBox_2+0x4  ;; ??aDialogCreate
   \   0000002C   0130A0E1           MOV      R3,R1
   \   00000030   1410A0E3           MOV      R1,#+20
   \   00000034   ........           _BLF     GUI_CreateDialogBox,??GUI_CreateDialogBox??rA
   \   00000038   BA02C4E1           STRH     R0,[R4, #+42]
     82                  DROPDOWN_SetAutoScroll( WM_GetDialogItem(WinHandl, GUI_ID_DROPDOWN0), 1 );
   \   0000003C   601FA0E3           MOV      R1,#+384
   \   00000040   ........           _BLF     WM_GetDialogItem,??WM_GetDialogItem??rA
   \   00000044   0110A0E3           MOV      R1,#+1
   \   00000048   ........           _BLF     DROPDOWN_SetAutoScroll,??DROPDOWN_SetAutoScroll??rA
     83                  DROPDOWN_SetAutoScroll( WM_GetDialogItem(WinHandl, GUI_ID_DROPDOWN4), 1 );
   \   0000004C   FA02D4E1           LDRSH    R0,[R4, #+42]
   \   00000050   AC1EA0E3           MOV      R1,#+2752
   \   00000054   ........           _BLF     WM_GetDialogItem,??WM_GetDialogItem??rA
   \   00000058   0110A0E3           MOV      R1,#+1
   \   0000005C   ........           _BLF     DROPDOWN_SetAutoScroll,??DROPDOWN_SetAutoScroll??rA
     84                  WM_EnableMemdev(WinHandl);
   \   00000060   FA02D4E1           LDRSH    R0,[R4, #+42]
   \   00000064   ........           _BLF     WM_EnableMemdev,??WM_EnableMemdev??rA
     85                  PinCodeOK = false;
   \   00000068   0000A0E3           MOV      R0,#+0
   \   0000006C   6400C4E5           STRB     R0,[R4, #+100]
     86                  GetDialogHandles();
   \   00000070   0400A0E1           MOV      R0,R4
   \   00000074   ........           BL       ??GetDialogHandles
   \   00000078   08D08DE2           ADD      SP,SP,#+8
   \   0000007C   010000EA           B        ??ExecDialogBox_3
     87              } else {
     88                  WM_BringToTop(WinHandl);
   \                     ??ExecDialogBox_1:
   \   00000080   FA02D4E1           LDRSH    R0,[R4, #+42]
   \   00000084   ........           _BLF     WM_BringToTop,??WM_BringToTop??rA
     89              }
     90          }
   \                     ??ExecDialogBox_3:
   \   00000088   1040BDE8           POP      {R4,LR}
   \   0000008C   1EFF2FE1           BX       LR               ;; return
   \                     ??ExecDialogBox_2:
   \   00000090   ........           DC32     ??cbSysWin
   \   00000094   ........           DC32     ??aDialogCreate
     91          
     92          /*********************************************************************
     93          *
     94          * Dialog procedure
     95          */

   \                                 In segment CODE, align 4, keep-with-next
     96          void TDUSysSetupWin::GetDialogHandles(void)
     97          {
   \                     ??GetDialogHandles:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0040A0E1           MOV      R4,R0
     98              hButBuzzer      = WM_GetDialogItem(WinHandl, GUI_ID_BUTTON0);
   \   00000008   FA02D4E1           LDRSH    R0,[R4, #+42]
   \   0000000C   5C1FA0E3           MOV      R1,#+368
   \   00000010   ........           _BLF     WM_GetDialogItem,??WM_GetDialogItem??rA
   \   00000014   B403C4E1           STRH     R0,[R4, #+52]
     99              hButUpp         = WM_GetDialogItem(WinHandl, GUI_ID_BUTTON2);
   \   00000018   FA02D4E1           LDRSH    R0,[R4, #+42]
   \   0000001C   7210A0E3           MOV      R1,#+114
   \   00000020   401F81E3           ORR      R1,R1,#0x100
   \   00000024   ........           _BLF     WM_GetDialogItem,??WM_GetDialogItem??rA
   \   00000028   B603C4E1           STRH     R0,[R4, #+54]
    100              hButDown        = WM_GetDialogItem(WinHandl, GUI_ID_BUTTON3);
   \   0000002C   FA02D4E1           LDRSH    R0,[R4, #+42]
   \   00000030   7310A0E3           MOV      R1,#+115
   \   00000034   401F81E3           ORR      R1,R1,#0x100
   \   00000038   ........           _BLF     WM_GetDialogItem,??WM_GetDialogItem??rA
   \   0000003C   B803C4E1           STRH     R0,[R4, #+56]
    101              hButFactDef     = WM_GetDialogItem(WinHandl, GUI_ID_BUTTON6);
   \   00000040   FA02D4E1           LDRSH    R0,[R4, #+42]
   \   00000044   7610A0E3           MOV      R1,#+118
   \   00000048   401F81E3           ORR      R1,R1,#0x100
   \   0000004C   ........           _BLF     WM_GetDialogItem,??WM_GetDialogItem??rA
   \   00000050   BA03C4E1           STRH     R0,[R4, #+58]
    102              hButWriteConfig = WM_GetDialogItem(WinHandl, GUI_ID_BUTTON7);
   \   00000054   FA02D4E1           LDRSH    R0,[R4, #+42]
   \   00000058   7710A0E3           MOV      R1,#+119
   \   0000005C   401F81E3           ORR      R1,R1,#0x100
   \   00000060   ........           _BLF     WM_GetDialogItem,??WM_GetDialogItem??rA
   \   00000064   BC03C4E1           STRH     R0,[R4, #+60]
    103          
    104              hEditScreen     = WM_GetDialogItem(WinHandl, GUI_ID_EDIT1);
   \   00000068   FA02D4E1           LDRSH    R0,[R4, #+42]
   \   0000006C   0110A0E3           MOV      R1,#+1
   \   00000070   401F81E3           ORR      R1,R1,#0x100
   \   00000074   ........           _BLF     WM_GetDialogItem,??WM_GetDialogItem??rA
   \   00000078   BE03C4E1           STRH     R0,[R4, #+62]
    105              hEditAlOffTime  = WM_GetDialogItem(WinHandl, GUI_ID_EDIT2);
   \   0000007C   FA02D4E1           LDRSH    R0,[R4, #+42]
   \   00000080   0210A0E3           MOV      R1,#+2
   \   00000084   401F81E3           ORR      R1,R1,#0x100
   \   00000088   ........           _BLF     WM_GetDialogItem,??WM_GetDialogItem??rA
   \   0000008C   B004C4E1           STRH     R0,[R4, #+64]
    106              hDropdBackColor = WM_GetDialogItem(WinHandl, GUI_ID_DROPDOWN0);
   \   00000090   FA02D4E1           LDRSH    R0,[R4, #+42]
   \   00000094   601FA0E3           MOV      R1,#+384
   \   00000098   ........           _BLF     WM_GetDialogItem,??WM_GetDialogItem??rA
   \   0000009C   B204C4E1           STRH     R0,[R4, #+66]
    107              hDropdForeColor = WM_GetDialogItem(WinHandl, GUI_ID_DROPDOWN4);
   \   000000A0   FA02D4E1           LDRSH    R0,[R4, #+42]
   \   000000A4   AC1EA0E3           MOV      R1,#+2752
   \   000000A8   ........           _BLF     WM_GetDialogItem,??WM_GetDialogItem??rA
   \   000000AC   B404C4E1           STRH     R0,[R4, #+68]
    108              InitSysWin();
   \   000000B0   0400A0E1           MOV      R0,R4
   \   000000B4   ........           BL       ??InitSysWin
    109          }
   \   000000B8   1040BDE8           POP      {R4,LR}
   \   000000BC   1EFF2FE1           BX       LR               ;; return
    110          

   \                                 In segment CODE, align 4, keep-with-next
    111          void TDUSysSetupWin::InitSysWin(void)
    112          {
   \                     ??InitSysWin:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   E0D04DE2           SUB      SP,SP,#+224
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   020000EA           B        ??InitSysWin_1
    113          
    114              while ( DROPDOWN_GetNumItems(hDropdBackColor)>0 ) {
    115                  DROPDOWN_DeleteItem(hDropdBackColor, 0);
   \                     ??InitSysWin_2:
   \   00000010   F204D4E1           LDRSH    R0,[R4, #+66]
   \   00000014   0010A0E3           MOV      R1,#+0
   \   00000018   ........           _BLF     DROPDOWN_DeleteItem,??DROPDOWN_DeleteItem??rA
    116              }
   \                     ??InitSysWin_1:
   \   0000001C   F204D4E1           LDRSH    R0,[R4, #+66]
   \   00000020   ........           _BLF     DROPDOWN_GetNumItems,??DROPDOWN_GetNumItems??rA
   \   00000024   010050E3           CMP      R0,#+1
   \   00000028   F8FFFFAA           BGE      ??InitSysWin_2
    117              while ( DROPDOWN_GetNumItems(hDropdForeColor)>0 ) {
   \                     ??InitSysWin_3:
   \   0000002C   F404D4E1           LDRSH    R0,[R4, #+68]
   \   00000030   ........           _BLF     DROPDOWN_GetNumItems,??DROPDOWN_GetNumItems??rA
   \   00000034   010050E3           CMP      R0,#+1
   \   00000038   030000BA           BLT      ??InitSysWin_4
    118                  DROPDOWN_DeleteItem(hDropdForeColor, 0);
   \   0000003C   F404D4E1           LDRSH    R0,[R4, #+68]
   \   00000040   0010A0E3           MOV      R1,#+0
   \   00000044   ........           _BLF     DROPDOWN_DeleteItem,??DROPDOWN_DeleteItem??rA
   \   00000048   F7FFFFEA           B        ??InitSysWin_3
    119              }
    120              {
    121                  int WordKey[]={L_WORD462, L_WORD463, L_WORD464, L_WORD465, L_WORD466};
   \                     ??InitSysWin_4:
   \   0000004C   EC109FE5           LDR      R1,??InitSysWin_5  ;; `?<Constant {462, 463, 464, 465, 466}>`
   \   00000050   B8008DE2           ADD      R0,SP,#+184
   \   00000054   6C1091E8           LDM      R1,{R2,R3,R5,R6,R12}
    122                  AddToDropDownsList(GUI_ID_DROPDOWN0,WordKey,NELEMENTS(WordKey));
   \   00000058   601FA0E3           MOV      R1,#+384
   \   0000005C   6C1080E8           STM      R0,{R2,R3,R5,R6,R12}
   \   00000060   0530A0E3           MOV      R3,#+5
   \   00000064   B8208DE2           ADD      R2,SP,#+184
   \   00000068   0400A0E1           MOV      R0,R4
   \   0000006C   ........           _BLF     ??AddToDropDownsList,??AddToDropDownsList??rA
    123              }
    124              {
    125                  int WordKey[]={L_WORD462, L_WORD463, L_WORD464, L_WORD465, L_WORD565};
   \   00000070   CC109FE5           LDR      R1,??InitSysWin_5+0x4  ;; `?<Constant {462, 463, 464, 465, 565}>`
   \   00000074   CC008DE2           ADD      R0,SP,#+204
   \   00000078   6C1091E8           LDM      R1,{R2,R3,R5,R6,R12}
    126                  AddToDropDownsList(GUI_ID_DROPDOWN4,WordKey,NELEMENTS(WordKey));
   \   0000007C   AC1EA0E3           MOV      R1,#+2752
   \   00000080   6C1080E8           STM      R0,{R2,R3,R5,R6,R12}
   \   00000084   0530A0E3           MOV      R3,#+5
   \   00000088   CC208DE2           ADD      R2,SP,#+204
    127              }
    128          
    129              BUTTON_SetBkColor(hButBuzzer, BUTTON_CI_PRESSED, TDU_C_AL_BACK_ACTIVE);
    130              U8 Arrow[2];
    131              Arrow[0]  = 146;
    132              Arrow[1]  = 0;
    133              BUTTON_SetFont(hButUpp,&GUI_Font8x16);
   \   0000008C   B4609FE5           LDR      R6,??InitSysWin_5+0x8  ;; GUI_Font8x16
   \   00000090   0400A0E1           MOV      R0,R4
   \   00000094   ........           _BLF     ??AddToDropDownsList,??AddToDropDownsList??rA
   \   00000098   F403D4E1           LDRSH    R0,[R4, #+52]
   \   0000009C   FF20A0E3           MOV      R2,#+255
   \   000000A0   0110A0E3           MOV      R1,#+1
   \   000000A4   ........           _BLF     BUTTON_SetBkColor,??BUTTON_SetBkColor??rA
   \   000000A8   9210A0E3           MOV      R1,#+146
   \   000000AC   0010CDE5           STRB     R1,[SP, #+0]
   \   000000B0   0050A0E3           MOV      R5,#+0
   \   000000B4   0150CDE5           STRB     R5,[SP, #+1]
   \   000000B8   F603D4E1           LDRSH    R0,[R4, #+54]
   \   000000BC   0610A0E1           MOV      R1,R6
   \   000000C0   ........           _BLF     BUTTON_SetFont,??BUTTON_SetFont??rA
    134              BUTTON_SetText(hButUpp,(char*)Arrow);
   \   000000C4   F603D4E1           LDRSH    R0,[R4, #+54]
   \   000000C8   0D10A0E1           MOV      R1,SP
   \   000000CC   ........           _BLF     BUTTON_SetText,??BUTTON_SetText??rA
    135              Arrow[0]  = 147;
   \   000000D0   9310A0E3           MOV      R1,#+147
   \   000000D4   0010CDE5           STRB     R1,[SP, #+0]
    136              Arrow[1]  = 0;
   \   000000D8   0150CDE5           STRB     R5,[SP, #+1]
    137              BUTTON_SetFont(hButDown,&GUI_Font8x16);
   \   000000DC   F803D4E1           LDRSH    R0,[R4, #+56]
   \   000000E0   0610A0E1           MOV      R1,R6
   \   000000E4   ........           _BLF     BUTTON_SetFont,??BUTTON_SetFont??rA
    138              BUTTON_SetText(hButDown,(char*)Arrow);
   \   000000E8   F803D4E1           LDRSH    R0,[R4, #+56]
   \   000000EC   0D10A0E1           MOV      R1,SP
   \   000000F0   ........           _BLF     BUTTON_SetText,??BUTTON_SetText??rA
    139              HoldSound = true;
   \   000000F4   0100A0E3           MOV      R0,#+1
   \   000000F8   4600C4E5           STRB     R0,[R4, #+70]
    140              UpdateSysWin();
   \   000000FC   0400A0E1           MOV      R0,R4
   \   00000100   ........           BL       ??UpdateSysWin
    141              {
    142                  const GUIKey Words[] ={
    143                      {TDU_SYSSETUP_WIN   ,0,L_WORD54},
    144                      {GUI_ID_CLOSE       ,0,L_WORD18},
    145                      {GUI_ID_TEXT0       ,0,L_WORD55},
    146                      {GUI_ID_TEXT1       ,0,L_WORD56},
    147                      {GUI_ID_TEXT2       ,0,L_WORD57},
    148                      {GUI_ID_TEXT3       ,0,L_WORD58},
    149                      {GUI_ID_TEXT4       ,0,L_WORD61},
    150                      {GUI_ID_TEXT5       ,0,L_WORD62},
    151                      {GUI_ID_TEXT6       ,0,L_WORD63},
    152                      {GUI_ID_TEXT7       ,0,L_WORD64},
    153                      {GUI_ID_BUTTON0     ,0,L_WORD65},
    154                      {GUI_ID_BUTTON4     ,0,L_WORD66},
    155                      {GUI_ID_BUTTON5     ,0,L_WORD67},
    156                      {GUI_ID_BUTTON6     ,0,L_WORD770},
    157                      {GUI_ID_BUTTON7     ,0,L_WORD920},
    158                  };
   \   00000104   40109FE5           LDR      R1,??InitSysWin_5+0xC  ;; `?<Constant {{2195, 0, 54}, {5, 0, 18}, {352, 0`
   \   00000108   04008DE2           ADD      R0,SP,#+4
   \   0000010C   B430A0E3           MOV      R3,#+180
   \                     ??InitSysWin_6:
   \   00000110   043053E2           SUBS     R3,R3,#+4
   \   00000114   032091E7           LDR      R2,[R1, R3]
   \   00000118   032080E7           STR      R2,[R0, R3]
   \   0000011C   FBFFFF1A           BNE      ??InitSysWin_6
    159                  AddToSKeyList((GUIKey*)Words,NELEMENTS(Words));
   \   00000120   0130A0E3           MOV      R3,#+1
   \   00000124   0F20A0E3           MOV      R2,#+15
   \   00000128   04108DE2           ADD      R1,SP,#+4
   \   0000012C   0400A0E1           MOV      R0,R4
   \   00000130   ........           _BLF     ??AddToSKeyList,??AddToSKeyList??rA
    160              }
    161          }
   \   00000134   E0D08DE2           ADD      SP,SP,#+224
   \   00000138   7040BDE8           POP      {R4-R6,LR}
   \   0000013C   1EFF2FE1           BX       LR               ;; return
   \                     ??InitSysWin_5:
   \   00000140   ........           DC32     `?<Constant {462, 463, 464, 465, 466}>`
   \   00000144   ........           DC32     `?<Constant {462, 463, 464, 465, 565}>`
   \   00000148   ........           DC32     GUI_Font8x16
   \   0000014C   ........           DC32     `?<Constant {{2195, 0, 54}, {5, 0, 18}, {352, 0`
    162          

   \                                 In segment CODE, align 4, keep-with-next
    163          void TDUSysSetupWin::UpdateSysWin(void)
    164          {
   \                     ??UpdateSysWin:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
    165              AnsiString TimeStr = LibGetValue(SVT_TOUCH_SCREEN_TIMEOUT,PROSystemData::TXUSystemData);
   \   00000004   ........           LDR      R5,??DataTable31  ;; ??TXUSystemData
   \   00000008   38D04DE2           SUB      SP,SP,#+56
   \   0000000C   002095E5           LDR      R2,[R5, #+0]
   \   00000010   0040A0E1           MOV      R4,R0
   \   00000014   0030A0E3           MOV      R3,#+0
   \   00000018   591EA0E3           MOV      R1,#+1424
   \   0000001C   0D00A0E1           MOV      R0,SP
   \   00000020   ........           _BLF     ??LibGetValue,??LibGetValue??rA
    166              EDIT_SetText(hEditScreen,TimeStr.c_str());
   \   00000024   18009DE5           LDR      R0,[SP, #+24]
   \   00000028   100050E3           CMP      R0,#+16
   \   0000002C   FE03D4E1           LDRSH    R0,[R4, #+62]
   \   00000030   04109D25           LDRCS    R1,[SP, #+4]
   \   00000034   04108D32           ADDCC    R1,SP,#+4
   \   00000038   ........           _BLF     EDIT_SetText,??EDIT_SetText??rA
    167          //	Time =(AnsiString)PROProjectInfo::WaterIngrAlOffDelay;
    168              TimeStr = LibGetValue(SVT_ALARM_OFF_DELAY,PROSystemData::TXUSystemData);
   \   0000003C   002095E5           LDR      R2,[R5, #+0]
   \   00000040   0030A0E3           MOV      R3,#+0
   \   00000044   8E10A0E3           MOV      R1,#+142
   \   00000048   501E81E3           ORR      R1,R1,#0x500
   \   0000004C   1C008DE2           ADD      R0,SP,#+28
   \   00000050   ........           _BLF     ??LibGetValue,??LibGetValue??rA
   \   00000054   ........           LDR      R0,??DataTable33  ;; ??npos
   \   00000058   0020A0E3           MOV      R2,#+0
   \   0000005C   003090E5           LDR      R3,[R0, #+0]
   \   00000060   1C108DE2           ADD      R1,SP,#+28
   \   00000064   0D00A0E1           MOV      R0,SP
   \   00000068   ........           _BLF     ??assign,??assign??rA
   \   0000006C   0020A0E3           MOV      R2,#+0
   \   00000070   0110A0E3           MOV      R1,#+1
   \   00000074   1C008DE2           ADD      R0,SP,#+28
   \   00000078   ........           _BLF     ??_Tidy,??_Tidy??rA
    169              EDIT_SetText(hEditAlOffTime,TimeStr.c_str());
   \   0000007C   18009DE5           LDR      R0,[SP, #+24]
   \   00000080   100050E3           CMP      R0,#+16
   \   00000084   F004D4E1           LDRSH    R0,[R4, #+64]
   \   00000088   04109D25           LDRCS    R1,[SP, #+4]
   \   0000008C   04108D32           ADDCC    R1,SP,#+4
   \   00000090   ........           _BLF     EDIT_SetText,??EDIT_SetText??rA
    170          }
   \   00000094   0020A0E3           MOV      R2,#+0
   \   00000098   0110A0E3           MOV      R1,#+1
   \   0000009C   0D00A0E1           MOV      R0,SP
   \   000000A0   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000000A4   38D08DE2           ADD      SP,SP,#+56
   \   000000A8   3040BDE8           POP      {R4,R5,LR}
   \   000000AC   1EFF2FE1           BX       LR               ;; return
    171          

   \                                 In segment CODE, align 4, keep-with-next
    172          void TDUSysSetupWin::SetAppColor(WM_HWIN hWin,int Key)
    173          {
   \                     ??SetAppColor:
   \   00000000   F0412DE9           PUSH     {R4-R8,LR}
    174              WM_HWIN hDropd0;
    175              hDropd0 = WM_GetDialogItem(hWin, Key);
    176              switch ( Key ) {
   \   00000004   ........           LDR      R4,??DataTable2  ;; TextColor
   \   00000008   ........           LDR      R5,??DataTable3  ;; SystemWindow
   \   0000000C   ........           LDR      R6,??DataTable4  ;; BackColor
   \   00000010   ........           LDR      R7,??DataTable5  ;; PWBackColorList
   \   00000014   0100A0E1           MOV      R0,R1
   \   00000018   0280A0E1           MOV      R8,R2
   \   0000001C   0810A0E1           MOV      R1,R8
   \   00000020   ........           _BLF     WM_GetDialogItem,??WM_GetDialogItem??rA
   \   00000024   608F58E2           SUBS     R8,R8,#+384
   \   00000028   0200000A           BEQ      ??SetAppColor_1
   \   0000002C   948E58E2           SUBS     R8,R8,#+2368
   \   00000030   0B00000A           BEQ      ??SetAppColor_2
   \   00000034   180000EA           B        ??SetAppColor_3
    177              case GUI_ID_DROPDOWN0:
    178                  {
    179                      int color = DROPDOWN_GetSel(hDropd0);
   \                     ??SetAppColor_1:
   \   00000038   ........           _BLF     DROPDOWN_GetSel,??DROPDOWN_GetSel??rA
    180                      if ( color>-1 ) {
   \   0000003C   000050E3           CMP      R0,#+0
   \   00000040   1500004A           BMI      ??SetAppColor_3
   \   00000044   0C10A0E3           MOV      R1,#+12
   \   00000048   917020E0           MLA      R0,R1,R0,R7
   \   0000004C   080090E5           LDR      R0,[R0, #+8]
   \   00000050   001094E5           LDR      R1,[R4, #+0]
   \   00000054   010050E1           CMP      R0,R1
   \   00000058   0B00000A           BEQ      ??SetAppColor_4
    181                          if ( PWBackColorList[color].Value != TextColor ) {
    182                              BackColor = PWBackColorList[color].Value;
   \   0000005C   000086E5           STR      R0,[R6, #+0]
   \   00000060   0D0000EA           B        ??SetAppColor_3
    183                              //	SetListViewColor();
    184                          } else {
    185                              SystemWindow->SysWin1->SysSetupWin->InitSysWin();
    186                          }
    187                      }
    188                  }
    189                  break;
    190              case GUI_ID_DROPDOWN4:
    191                  {
    192                      int color = DROPDOWN_GetSel(hDropd0);
   \                     ??SetAppColor_2:
   \   00000064   ........           _BLF     DROPDOWN_GetSel,??DROPDOWN_GetSel??rA
    193                      if ( color>-1 ) {
   \   00000068   000050E3           CMP      R0,#+0
   \   0000006C   0A00004A           BMI      ??SetAppColor_3
   \   00000070   0C10A0E3           MOV      R1,#+12
   \   00000074   917020E0           MLA      R0,R1,R0,R7
   \   00000078   440090E5           LDR      R0,[R0, #+68]
   \   0000007C   001096E5           LDR      R1,[R6, #+0]
   \   00000080   010050E1           CMP      R0,R1
    194                          if ( PWTextColorList[color].Value != BackColor ) {
    195                              TextColor = PWTextColorList[color].Value;
   \   00000084   00008415           STRNE    R0,[R4, #+0]
   \   00000088   0300001A           BNE      ??SetAppColor_3
    196                              //	SetListViewColor();
    197                          } else {
    198                              SystemWindow->SysWin1->SysSetupWin->InitSysWin();
   \                     ??SetAppColor_4:
   \   0000008C   000095E5           LDR      R0,[R5, #+0]
   \   00000090   580090E5           LDR      R0,[R0, #+88]
   \   00000094   7C0090E5           LDR      R0,[R0, #+124]
   \   00000098   ........           BL       ??InitSysWin
    199                          }
    200                      }
    201                  }
    202                  break;
    203              }
    204              SystemWindow->IsModified = true;
   \                     ??SetAppColor_3:
   \   0000009C   000095E5           LDR      R0,[R5, #+0]
   \   000000A0   0110A0E3           MOV      R1,#+1
   \   000000A4   7510C0E5           STRB     R1,[R0, #+117]
    205              SignalSaveSettings(FLASH_SAVE_SETTINGS);
   \   000000A8   0100A0E3           MOV      R0,#+1
   \   000000AC   ........           _BLF     ??SignalSaveSettings,??SignalSaveSettings??rA
    206          }
   \   000000B0   F041BDE8           POP      {R4-R8,LR}
   \   000000B4   1EFF2FE1           BX       LR               ;; return
    207          

   \                                 In segment CODE, align 4, keep-with-next
    208          void TDUSysSetupWin::SetScreenOffTime(AnsiString StringBuf)
    209          {
   \                     ??SetScreenOffTime:
   \   00000000   F0412DE9           PUSH     {R4-R8,LR}
   \   00000004   62DF4DE2           SUB      SP,SP,#+392
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   0150A0E1           MOV      R5,R1
    210              int Time = atoi(StringBuf.c_str());
   \   00000010   180095E5           LDR      R0,[R5, #+24]
   \   00000014   0A20A0E3           MOV      R2,#+10
   \   00000018   100050E3           CMP      R0,#+16
   \   0000001C   04009525           LDRCS    R0,[R5, #+4]
   \   00000020   0010A0E3           MOV      R1,#+0
   \   00000024   04008532           ADDCC    R0,R5,#+4
   \   00000028   ........           _BLF     _Stoul,??_Stoul??rA
    211              if ( (Time>=TOUCH_MIN_TIMEOUT) && (Time<=TOUCH_MAX_TIMEOUT) ) {
   \   0000002C   010050E3           CMP      R0,#+1
   \   00000030   150000BA           BLT      ??SetScreenOffTime_1
   \   00000034   790050E3           CMP      R0,#+121
   \   00000038   130000AA           BGE      ??SetScreenOffTime_1
    212                  LibPutValue( SVT_TOUCH_SCREEN_TIMEOUT, PROSystemData::TXUSystemData, StringBuf);
   \   0000003C   0020A0E3           MOV      R2,#+0
   \   00000040   0010A0E3           MOV      R1,#+0
   \   00000044   0D00A0E1           MOV      R0,SP
   \   00000048   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   0000004C   ........           LDR      R0,??DataTable33  ;; ??npos
   \   00000050   0020A0E3           MOV      R2,#+0
   \   00000054   003090E5           LDR      R3,[R0, #+0]
   \   00000058   0510A0E1           MOV      R1,R5
   \   0000005C   0D00A0E1           MOV      R0,SP
   \   00000060   ........           _BLF     ??assign,??assign??rA
   \   00000064   ........           LDR      R0,??DataTable31  ;; ??TXUSystemData
   \   00000068   0030A0E3           MOV      R3,#+0
   \   0000006C   001090E5           LDR      R1,[R0, #+0]
   \   00000070   0D20A0E1           MOV      R2,SP
   \   00000074   590EA0E3           MOV      R0,#+1424
   \   00000078   ........           _BLF     ??LibPutValue,??LibPutValue??rA
   \   0000007C   0020A0E3           MOV      R2,#+0
   \   00000080   0110A0E3           MOV      R1,#+1
   \   00000084   0D00A0E1           MOV      R0,SP
   \   00000088   C20000EA           B        ??SetScreenOffTime_2
    213              } else {
    214                  AnsiString Text1("Fault in insert of time!");
   \                     ??SetScreenOffTime_1:
   \   0000008C   ........           LDR      R5,??DataTable13  ;; `?<Constant "Fault in insert of time!">`
   \   00000090   A8008DE2           ADD      R0,SP,#+168
   \   00000094   0510A0E1           MOV      R1,R5
   \   00000098   ........           _BLF     ??AnsiString_1,??AnsiString??rA_1
    215                  AnsiString Text2("Time must be between "+(AnsiString)TOUCH_MIN_TIMEOUT+" and "+(AnsiString)TOUCH_MAX_TIMEOUT+" minutes");
   \   0000009C   7810A0E3           MOV      R1,#+120
   \   000000A0   5B0F8DE2           ADD      R0,SP,#+364
   \   000000A4   ........           _BLF     ??AnsiString_2,??AnsiString??rA_2
   \   000000A8   0070A0E1           MOV      R7,R0
   \   000000AC   0110A0E3           MOV      R1,#+1
   \   000000B0   540F8DE2           ADD      R0,SP,#+336
   \   000000B4   ........           _BLF     ??AnsiString_2,??AnsiString??rA_2
   \   000000B8   0080A0E1           MOV      R8,R0
   \   000000BC   0020A0E3           MOV      R2,#+0
   \   000000C0   0010A0E3           MOV      R1,#+0
   \   000000C4   E0008DE2           ADD      R0,SP,#+224
   \   000000C8   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000000CC   1C0085E2           ADD      R0,R5,#+28
   \   000000D0   ........           _BLF     strlen,??strlen??rA
   \   000000D4   0020A0E1           MOV      R2,R0
   \   000000D8   1C1085E2           ADD      R1,R5,#+28
   \   000000DC   E0008DE2           ADD      R0,SP,#+224
   \   000000E0   ........           _BLF     ??assign_1,??assign??rA_1
   \   000000E4   ........           LDR      R0,??DataTable33  ;; ??npos
   \   000000E8   0020A0E3           MOV      R2,#+0
   \   000000EC   006090E5           LDR      R6,[R0, #+0]
   \   000000F0   0810A0E1           MOV      R1,R8
   \   000000F4   0630A0E1           MOV      R3,R6
   \   000000F8   E0008DE2           ADD      R0,SP,#+224
   \   000000FC   ........           _BLF     ??append,??append??rA
   \   00000100   0080A0E1           MOV      R8,R0
   \   00000104   0020A0E3           MOV      R2,#+0
   \   00000108   0210A0E1           MOV      R1,R2
   \   0000010C   54008DE2           ADD      R0,SP,#+84
   \   00000110   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000114   0630A0E1           MOV      R3,R6
   \   00000118   0020A0E3           MOV      R2,#+0
   \   0000011C   0810A0E1           MOV      R1,R8
   \   00000120   54008DE2           ADD      R0,SP,#+84
   \   00000124   ........           _BLF     ??assign,??assign??rA
   \   00000128   0020A0E3           MOV      R2,#+0
   \   0000012C   0110A0E3           MOV      R1,#+1
   \   00000130   E0008DE2           ADD      R0,SP,#+224
   \   00000134   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000138   0020A0E3           MOV      R2,#+0
   \   0000013C   0210A0E1           MOV      R1,R2
   \   00000140   FC008DE2           ADD      R0,SP,#+252
   \   00000144   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000148   0630A0E1           MOV      R3,R6
   \   0000014C   0020A0E3           MOV      R2,#+0
   \   00000150   54108DE2           ADD      R1,SP,#+84
   \   00000154   FC008DE2           ADD      R0,SP,#+252
   \   00000158   ........           _BLF     ??assign,??assign??rA
   \   0000015C   340085E2           ADD      R0,R5,#+52
   \   00000160   ........           _BLF     strlen,??strlen??rA
   \   00000164   0020A0E1           MOV      R2,R0
   \   00000168   341085E2           ADD      R1,R5,#+52
   \   0000016C   FC008DE2           ADD      R0,SP,#+252
   \   00000170   ........           _BLF     ??append_1,??append??rA_1
   \   00000174   0080A0E1           MOV      R8,R0
   \   00000178   0020A0E3           MOV      R2,#+0
   \   0000017C   0210A0E1           MOV      R1,R2
   \   00000180   38008DE2           ADD      R0,SP,#+56
   \   00000184   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000188   0630A0E1           MOV      R3,R6
   \   0000018C   0020A0E3           MOV      R2,#+0
   \   00000190   0810A0E1           MOV      R1,R8
   \   00000194   38008DE2           ADD      R0,SP,#+56
   \   00000198   ........           _BLF     ??assign,??assign??rA
   \   0000019C   0020A0E3           MOV      R2,#+0
   \   000001A0   0110A0E3           MOV      R1,#+1
   \   000001A4   FC008DE2           ADD      R0,SP,#+252
   \   000001A8   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000001AC   0020A0E3           MOV      R2,#+0
   \   000001B0   0210A0E1           MOV      R1,R2
   \   000001B4   460F8DE2           ADD      R0,SP,#+280
   \   000001B8   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000001BC   0630A0E1           MOV      R3,R6
   \   000001C0   0020A0E3           MOV      R2,#+0
   \   000001C4   38108DE2           ADD      R1,SP,#+56
   \   000001C8   460F8DE2           ADD      R0,SP,#+280
   \   000001CC   ........           _BLF     ??assign,??assign??rA
   \   000001D0   0630A0E1           MOV      R3,R6
   \   000001D4   0020A0E3           MOV      R2,#+0
   \   000001D8   0710A0E1           MOV      R1,R7
   \   000001DC   460F8DE2           ADD      R0,SP,#+280
   \   000001E0   ........           _BLF     ??append,??append??rA
   \   000001E4   0070A0E1           MOV      R7,R0
   \   000001E8   0020A0E3           MOV      R2,#+0
   \   000001EC   0210A0E1           MOV      R1,R2
   \   000001F0   1C008DE2           ADD      R0,SP,#+28
   \   000001F4   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000001F8   0630A0E1           MOV      R3,R6
   \   000001FC   0020A0E3           MOV      R2,#+0
   \   00000200   0710A0E1           MOV      R1,R7
   \   00000204   1C008DE2           ADD      R0,SP,#+28
   \   00000208   ........           _BLF     ??assign,??assign??rA
   \   0000020C   0020A0E3           MOV      R2,#+0
   \   00000210   0110A0E3           MOV      R1,#+1
   \   00000214   460F8DE2           ADD      R0,SP,#+280
   \   00000218   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   0000021C   0020A0E3           MOV      R2,#+0
   \   00000220   0210A0E1           MOV      R1,R2
   \   00000224   4D0F8DE2           ADD      R0,SP,#+308
   \   00000228   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   0000022C   0630A0E1           MOV      R3,R6
   \   00000230   0020A0E3           MOV      R2,#+0
   \   00000234   1C108DE2           ADD      R1,SP,#+28
   \   00000238   4D0F8DE2           ADD      R0,SP,#+308
   \   0000023C   ........           _BLF     ??assign,??assign??rA
   \   00000240   3C0085E2           ADD      R0,R5,#+60
   \   00000244   ........           _BLF     strlen,??strlen??rA
   \   00000248   0020A0E1           MOV      R2,R0
   \   0000024C   3C1085E2           ADD      R1,R5,#+60
   \   00000250   4D0F8DE2           ADD      R0,SP,#+308
   \   00000254   ........           _BLF     ??append_1,??append??rA_1
   \   00000258   0050A0E1           MOV      R5,R0
   \   0000025C   0020A0E3           MOV      R2,#+0
   \   00000260   0210A0E1           MOV      R1,R2
   \   00000264   0D00A0E1           MOV      R0,SP
   \   00000268   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   0000026C   0630A0E1           MOV      R3,R6
   \   00000270   0020A0E3           MOV      R2,#+0
   \   00000274   0510A0E1           MOV      R1,R5
   \   00000278   0D00A0E1           MOV      R0,SP
   \   0000027C   ........           _BLF     ??assign,??assign??rA
   \   00000280   0020A0E3           MOV      R2,#+0
   \   00000284   0110A0E3           MOV      R1,#+1
   \   00000288   4D0F8DE2           ADD      R0,SP,#+308
   \   0000028C   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000290   0D10A0E1           MOV      R1,SP
   \   00000294   C4008DE2           ADD      R0,SP,#+196
   \   00000298   ........           _BLF     ??AnsiString_3,??AnsiString??rA_3
   \   0000029C   0020A0E3           MOV      R2,#+0
   \   000002A0   0110A0E3           MOV      R1,#+1
   \   000002A4   0D00A0E1           MOV      R0,SP
   \   000002A8   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000002AC   0020A0E3           MOV      R2,#+0
   \   000002B0   0110A0E3           MOV      R1,#+1
   \   000002B4   1C008DE2           ADD      R0,SP,#+28
   \   000002B8   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000002BC   0020A0E3           MOV      R2,#+0
   \   000002C0   0110A0E3           MOV      R1,#+1
   \   000002C4   5B0F8DE2           ADD      R0,SP,#+364
   \   000002C8   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000002CC   0020A0E3           MOV      R2,#+0
   \   000002D0   0110A0E3           MOV      R1,#+1
   \   000002D4   38008DE2           ADD      R0,SP,#+56
   \   000002D8   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000002DC   0020A0E3           MOV      R2,#+0
   \   000002E0   0110A0E3           MOV      R1,#+1
   \   000002E4   54008DE2           ADD      R0,SP,#+84
   \   000002E8   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000002EC   0020A0E3           MOV      R2,#+0
   \   000002F0   0110A0E3           MOV      R1,#+1
   \   000002F4   540F8DE2           ADD      R0,SP,#+336
   \   000002F8   ........           _BLF     ??_Tidy,??_Tidy??rA
    216                  OKMessageBox->Exec(WinHandl,Text1 , Text2);
   \   000002FC   0020A0E3           MOV      R2,#+0
   \   00000300   0210A0E1           MOV      R1,R2
   \   00000304   8C008DE2           ADD      R0,SP,#+140
   \   00000308   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   0000030C   0630A0E1           MOV      R3,R6
   \   00000310   0020A0E3           MOV      R2,#+0
   \   00000314   C4108DE2           ADD      R1,SP,#+196
   \   00000318   8C008DE2           ADD      R0,SP,#+140
   \   0000031C   ........           _BLF     ??assign,??assign??rA
   \   00000320   0020A0E3           MOV      R2,#+0
   \   00000324   0210A0E1           MOV      R1,R2
   \   00000328   70008DE2           ADD      R0,SP,#+112
   \   0000032C   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000330   0630A0E1           MOV      R3,R6
   \   00000334   0020A0E3           MOV      R2,#+0
   \   00000338   A8108DE2           ADD      R1,SP,#+168
   \   0000033C   70008DE2           ADD      R0,SP,#+112
   \   00000340   ........           _BLF     ??assign,??assign??rA
   \   00000344   FA12D4E1           LDRSH    R1,[R4, #+42]
   \   00000348   ........           LDR      R0,??DataTable34  ;; OKMessageBox
   \   0000034C   8C308DE2           ADD      R3,SP,#+140
   \   00000350   000090E5           LDR      R0,[R0, #+0]
   \   00000354   70208DE2           ADD      R2,SP,#+112
   \   00000358   ........           _BLF     ??Exec,??Exec??rA
   \   0000035C   0020A0E3           MOV      R2,#+0
   \   00000360   0110A0E3           MOV      R1,#+1
   \   00000364   8C008DE2           ADD      R0,SP,#+140
   \   00000368   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   0000036C   0020A0E3           MOV      R2,#+0
   \   00000370   0110A0E3           MOV      R1,#+1
   \   00000374   70008DE2           ADD      R0,SP,#+112
   \   00000378   ........           _BLF     ??_Tidy,??_Tidy??rA
    217              }
   \   0000037C   0020A0E3           MOV      R2,#+0
   \   00000380   0110A0E3           MOV      R1,#+1
   \   00000384   C4008DE2           ADD      R0,SP,#+196
   \   00000388   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   0000038C   0020A0E3           MOV      R2,#+0
   \   00000390   0110A0E3           MOV      R1,#+1
   \   00000394   A8008DE2           ADD      R0,SP,#+168
   \                     ??SetScreenOffTime_2:
   \   00000398   ........           _BLF     ??_Tidy,??_Tidy??rA
    218          }
   \   0000039C   62DF8DE2           ADD      SP,SP,#+392
   \   000003A0   F041BDE8           POP      {R4-R8,LR}
   \   000003A4   1EFF2FE1           BX       LR               ;; return
    219          

   \                                 In segment CODE, align 4, keep-with-next
    220          void TDUSysSetupWin::SetAlarmOffTime(AnsiString StringBuf)
    221          {
   \                     ??SetAlarmOffTime:
   \   00000000   F0412DE9           PUSH     {R4-R8,LR}
   \   00000004   54DF4DE2           SUB      SP,SP,#+336
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   0150A0E1           MOV      R5,R1
    222              int Time = atoi(StringBuf.c_str());
   \   00000010   180095E5           LDR      R0,[R5, #+24]
   \   00000014   0A20A0E3           MOV      R2,#+10
   \   00000018   100050E3           CMP      R0,#+16
   \   0000001C   04009525           LDRCS    R0,[R5, #+4]
   \   00000020   0010A0E3           MOV      R1,#+0
   \   00000024   04008532           ADDCC    R0,R5,#+4
   \   00000028   ........           _BLF     _Stoul,??_Stoul??rA
    223              int Min = MIN_ALARM_OFF_DELAY/1000;
    224              int Max = MAX_ALARM_OFF_DELAY/1000;
    225              if ( (Time>=Min) && (Time<=Max) ) {
   \   0000002C   010050E3           CMP      R0,#+1
   \   00000030   180000BA           BLT      ??SetAlarmOffTime_1
   \   00000034   5910A0E3           MOV      R1,#+89
   \   00000038   801F81E3           ORR      R1,R1,#0x200
   \   0000003C   010050E1           CMP      R0,R1
   \   00000040   140000AA           BGE      ??SetAlarmOffTime_1
    226                  LibPutValue( SVT_ALARM_OFF_DELAY, PROSystemData::TXUSystemData, StringBuf);
   \   00000044   0020A0E3           MOV      R2,#+0
   \   00000048   0010A0E3           MOV      R1,#+0
   \   0000004C   0D00A0E1           MOV      R0,SP
   \   00000050   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000054   ........           LDR      R0,??DataTable33  ;; ??npos
   \   00000058   0020A0E3           MOV      R2,#+0
   \   0000005C   003090E5           LDR      R3,[R0, #+0]
   \   00000060   0510A0E1           MOV      R1,R5
   \   00000064   0D00A0E1           MOV      R0,SP
   \   00000068   ........           _BLF     ??assign,??assign??rA
   \   0000006C   ........           LDR      R0,??DataTable31  ;; ??TXUSystemData
   \   00000070   0030A0E3           MOV      R3,#+0
   \   00000074   001090E5           LDR      R1,[R0, #+0]
   \   00000078   0D20A0E1           MOV      R2,SP
   \   0000007C   8E00A0E3           MOV      R0,#+142
   \   00000080   500E80E3           ORR      R0,R0,#0x500
   \   00000084   ........           _BLF     ??LibPutValue,??LibPutValue??rA
   \   00000088   0020A0E3           MOV      R2,#+0
   \   0000008C   0110A0E3           MOV      R1,#+1
   \   00000090   0D00A0E1           MOV      R0,SP
   \   00000094   A10000EA           B        ??SetAlarmOffTime_2
    227              } else {
    228                  AnsiString Text1("Fault in insert of time!");
   \                     ??SetAlarmOffTime_1:
   \   00000098   ........           LDR      R7,??DataTable13  ;; `?<Constant "Fault in insert of time!">`
   \   0000009C   8C008DE2           ADD      R0,SP,#+140
   \   000000A0   0710A0E1           MOV      R1,R7
   \   000000A4   ........           _BLF     ??AnsiString_1,??AnsiString??rA_1
    229                  AnsiString Text2("Time must be between "+(AnsiString)Min+" and "+(AnsiString)Max);
   \   000000A8   961FA0E3           MOV      R1,#+600
   \   000000AC   4D0F8DE2           ADD      R0,SP,#+308
   \   000000B0   ........           _BLF     ??AnsiString_2,??AnsiString??rA_2
   \   000000B4   0060A0E1           MOV      R6,R0
   \   000000B8   0110A0E3           MOV      R1,#+1
   \   000000BC   460F8DE2           ADD      R0,SP,#+280
   \   000000C0   ........           _BLF     ??AnsiString_2,??AnsiString??rA_2
   \   000000C4   0080A0E1           MOV      R8,R0
   \   000000C8   0020A0E3           MOV      R2,#+0
   \   000000CC   0010A0E3           MOV      R1,#+0
   \   000000D0   C4008DE2           ADD      R0,SP,#+196
   \   000000D4   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000000D8   1C0087E2           ADD      R0,R7,#+28
   \   000000DC   ........           _BLF     strlen,??strlen??rA
   \   000000E0   0020A0E1           MOV      R2,R0
   \   000000E4   1C1087E2           ADD      R1,R7,#+28
   \   000000E8   C4008DE2           ADD      R0,SP,#+196
   \   000000EC   ........           _BLF     ??assign_1,??assign??rA_1
   \   000000F0   ........           LDR      R0,??DataTable33  ;; ??npos
   \   000000F4   0020A0E3           MOV      R2,#+0
   \   000000F8   005090E5           LDR      R5,[R0, #+0]
   \   000000FC   0810A0E1           MOV      R1,R8
   \   00000100   0530A0E1           MOV      R3,R5
   \   00000104   C4008DE2           ADD      R0,SP,#+196
   \   00000108   ........           _BLF     ??append,??append??rA
   \   0000010C   0080A0E1           MOV      R8,R0
   \   00000110   0020A0E3           MOV      R2,#+0
   \   00000114   0210A0E1           MOV      R1,R2
   \   00000118   38008DE2           ADD      R0,SP,#+56
   \   0000011C   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000120   0530A0E1           MOV      R3,R5
   \   00000124   0020A0E3           MOV      R2,#+0
   \   00000128   0810A0E1           MOV      R1,R8
   \   0000012C   38008DE2           ADD      R0,SP,#+56
   \   00000130   ........           _BLF     ??assign,??assign??rA
   \   00000134   0020A0E3           MOV      R2,#+0
   \   00000138   0110A0E3           MOV      R1,#+1
   \   0000013C   C4008DE2           ADD      R0,SP,#+196
   \   00000140   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000144   0020A0E3           MOV      R2,#+0
   \   00000148   0210A0E1           MOV      R1,R2
   \   0000014C   E0008DE2           ADD      R0,SP,#+224
   \   00000150   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000154   0530A0E1           MOV      R3,R5
   \   00000158   0020A0E3           MOV      R2,#+0
   \   0000015C   38108DE2           ADD      R1,SP,#+56
   \   00000160   E0008DE2           ADD      R0,SP,#+224
   \   00000164   ........           _BLF     ??assign,??assign??rA
   \   00000168   340087E2           ADD      R0,R7,#+52
   \   0000016C   ........           _BLF     strlen,??strlen??rA
   \   00000170   0020A0E1           MOV      R2,R0
   \   00000174   341087E2           ADD      R1,R7,#+52
   \   00000178   E0008DE2           ADD      R0,SP,#+224
   \   0000017C   ........           _BLF     ??append_1,??append??rA_1
   \   00000180   0070A0E1           MOV      R7,R0
   \   00000184   0020A0E3           MOV      R2,#+0
   \   00000188   0210A0E1           MOV      R1,R2
   \   0000018C   1C008DE2           ADD      R0,SP,#+28
   \   00000190   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000194   0530A0E1           MOV      R3,R5
   \   00000198   0020A0E3           MOV      R2,#+0
   \   0000019C   0710A0E1           MOV      R1,R7
   \   000001A0   1C008DE2           ADD      R0,SP,#+28
   \   000001A4   ........           _BLF     ??assign,??assign??rA
   \   000001A8   0020A0E3           MOV      R2,#+0
   \   000001AC   0110A0E3           MOV      R1,#+1
   \   000001B0   E0008DE2           ADD      R0,SP,#+224
   \   000001B4   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000001B8   0020A0E3           MOV      R2,#+0
   \   000001BC   0210A0E1           MOV      R1,R2
   \   000001C0   FC008DE2           ADD      R0,SP,#+252
   \   000001C4   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000001C8   0530A0E1           MOV      R3,R5
   \   000001CC   0020A0E3           MOV      R2,#+0
   \   000001D0   1C108DE2           ADD      R1,SP,#+28
   \   000001D4   FC008DE2           ADD      R0,SP,#+252
   \   000001D8   ........           _BLF     ??assign,??assign??rA
   \   000001DC   0530A0E1           MOV      R3,R5
   \   000001E0   0020A0E3           MOV      R2,#+0
   \   000001E4   0610A0E1           MOV      R1,R6
   \   000001E8   FC008DE2           ADD      R0,SP,#+252
   \   000001EC   ........           _BLF     ??append,??append??rA
   \   000001F0   0060A0E1           MOV      R6,R0
   \   000001F4   0020A0E3           MOV      R2,#+0
   \   000001F8   0210A0E1           MOV      R1,R2
   \   000001FC   0D00A0E1           MOV      R0,SP
   \   00000200   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000204   0530A0E1           MOV      R3,R5
   \   00000208   0020A0E3           MOV      R2,#+0
   \   0000020C   0610A0E1           MOV      R1,R6
   \   00000210   0D00A0E1           MOV      R0,SP
   \   00000214   ........           _BLF     ??assign,??assign??rA
   \   00000218   0020A0E3           MOV      R2,#+0
   \   0000021C   0110A0E3           MOV      R1,#+1
   \   00000220   FC008DE2           ADD      R0,SP,#+252
   \   00000224   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000228   0D10A0E1           MOV      R1,SP
   \   0000022C   A8008DE2           ADD      R0,SP,#+168
   \   00000230   ........           _BLF     ??AnsiString_3,??AnsiString??rA_3
   \   00000234   0020A0E3           MOV      R2,#+0
   \   00000238   0110A0E3           MOV      R1,#+1
   \   0000023C   0D00A0E1           MOV      R0,SP
   \   00000240   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000244   0020A0E3           MOV      R2,#+0
   \   00000248   0110A0E3           MOV      R1,#+1
   \   0000024C   4D0F8DE2           ADD      R0,SP,#+308
   \   00000250   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000254   0020A0E3           MOV      R2,#+0
   \   00000258   0110A0E3           MOV      R1,#+1
   \   0000025C   1C008DE2           ADD      R0,SP,#+28
   \   00000260   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000264   0020A0E3           MOV      R2,#+0
   \   00000268   0110A0E3           MOV      R1,#+1
   \   0000026C   38008DE2           ADD      R0,SP,#+56
   \   00000270   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000274   0020A0E3           MOV      R2,#+0
   \   00000278   0110A0E3           MOV      R1,#+1
   \   0000027C   460F8DE2           ADD      R0,SP,#+280
   \   00000280   ........           _BLF     ??_Tidy,??_Tidy??rA
    230                  OKMessageBox->Exec(WinHandl,Text1 , Text2);
   \   00000284   0020A0E3           MOV      R2,#+0
   \   00000288   0210A0E1           MOV      R1,R2
   \   0000028C   70008DE2           ADD      R0,SP,#+112
   \   00000290   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000294   0530A0E1           MOV      R3,R5
   \   00000298   0020A0E3           MOV      R2,#+0
   \   0000029C   A8108DE2           ADD      R1,SP,#+168
   \   000002A0   70008DE2           ADD      R0,SP,#+112
   \   000002A4   ........           _BLF     ??assign,??assign??rA
   \   000002A8   0020A0E3           MOV      R2,#+0
   \   000002AC   0210A0E1           MOV      R1,R2
   \   000002B0   54008DE2           ADD      R0,SP,#+84
   \   000002B4   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000002B8   0530A0E1           MOV      R3,R5
   \   000002BC   0020A0E3           MOV      R2,#+0
   \   000002C0   8C108DE2           ADD      R1,SP,#+140
   \   000002C4   54008DE2           ADD      R0,SP,#+84
   \   000002C8   ........           _BLF     ??assign,??assign??rA
   \   000002CC   FA12D4E1           LDRSH    R1,[R4, #+42]
   \   000002D0   ........           LDR      R0,??DataTable34  ;; OKMessageBox
   \   000002D4   70308DE2           ADD      R3,SP,#+112
   \   000002D8   000090E5           LDR      R0,[R0, #+0]
   \   000002DC   54208DE2           ADD      R2,SP,#+84
   \   000002E0   ........           _BLF     ??Exec,??Exec??rA
   \   000002E4   0020A0E3           MOV      R2,#+0
   \   000002E8   0110A0E3           MOV      R1,#+1
   \   000002EC   70008DE2           ADD      R0,SP,#+112
   \   000002F0   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000002F4   0020A0E3           MOV      R2,#+0
   \   000002F8   0110A0E3           MOV      R1,#+1
   \   000002FC   54008DE2           ADD      R0,SP,#+84
   \   00000300   ........           _BLF     ??_Tidy,??_Tidy??rA
    231              }
   \   00000304   0020A0E3           MOV      R2,#+0
   \   00000308   0110A0E3           MOV      R1,#+1
   \   0000030C   A8008DE2           ADD      R0,SP,#+168
   \   00000310   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000314   0020A0E3           MOV      R2,#+0
   \   00000318   0110A0E3           MOV      R1,#+1
   \   0000031C   8C008DE2           ADD      R0,SP,#+140
   \                     ??SetAlarmOffTime_2:
   \   00000320   ........           _BLF     ??_Tidy,??_Tidy??rA
    232          }
   \   00000324   54DF8DE2           ADD      SP,SP,#+336
   \   00000328   F041BDE8           POP      {R4-R8,LR}
   \   0000032C   1EFF2FE1           BX       LR               ;; return
    233          

   \                                 In segment CODE, align 4, keep-with-next
    234          void TDUSysSetupWin::ChangePinCode(AnsiString PinCodeStr)
    235          {
   \                     ??ChangePinCode:
   \   00000000   F0472DE9           PUSH     {R4-R10,LR}
   \   00000004   70D04DE2           SUB      SP,SP,#+112
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   0170A0E1           MOV      R7,R1
    236          //    int pin = atoi(PinCodeStr);
    237              int length = PinCodeStr.length();
    238              int pin = atoi(PinCodeStr.c_str());
   \   00000010   180097E5           LDR      R0,[R7, #+24]
   \   00000014   148097E5           LDR      R8,[R7, #+20]
   \   00000018   100050E3           CMP      R0,#+16
   \   0000001C   04009725           LDRCS    R0,[R7, #+4]
   \   00000020   0A20A0E3           MOV      R2,#+10
   \   00000024   04008732           ADDCC    R0,R7,#+4
   \   00000028   0010A0E3           MOV      R1,#+0
   \   0000002C   ........           _BLF     _Stoul,??_Stoul??rA
   \   00000030   0090A0E1           MOV      R9,R0
    239              if ( pin>0 ) {
   \   00000034   010059E3           CMP      R9,#+1
   \   00000038   290000BA           BLT      ??ChangePinCode_1
    240                  if ( PinCodeStr.compare(PROSystemData::TXUSystemData->UserPinCode)==0 ) {
   \   0000003C   ........           LDR      R0,??DataTable31  ;; ??TXUSystemData
   \   00000040   ........           LDR      R5,??DataTable26  ;; KeyBoard
   \   00000044   000090E5           LDR      R0,[R0, #+0]
   \   00000048   9960A0E3           MOV      R6,#+153
   \   0000004C   620F80E2           ADD      R0,R0,#+392
   \   00000050   181090E5           LDR      R1,[R0, #+24]
   \   00000054   806F86E3           ORR      R6,R6,#0x200
   \   00000058   100051E3           CMP      R1,#+16
   \   0000005C   04309025           LDRCS    R3,[R0, #+4]
   \   00000060   01A0A0E3           MOV      R10,#+1
   \   00000064   04308032           ADDCC    R3,R0,#+4
   \   00000068   140090E5           LDR      R0,[R0, #+20]
   \   0000006C   0010A0E3           MOV      R1,#+0
   \   00000070   01002DE9           PUSH     {R0}
   \   00000074   142097E5           LDR      R2,[R7, #+20]
   \   00000078   0700A0E1           MOV      R0,R7
   \   0000007C   ........           _BLF     ??compare,??compare??rA
   \   00000080   000050E3           CMP      R0,#+0
   \   00000084   04D08DE2           ADD      SP,SP,#+4
   \   00000088   0800001A           BNE      ??ChangePinCode_2
    241                      PinCodeOK = true;
   \   0000008C   64A0C4E5           STRB     R10,[R4, #+100]
    242                      KeyBoard->ExecKeyBoardPinCode(WM_GetClientWindow(WinHandl),L_WORD665,GUI_ID_BUTTON8);//"Enter new pin code:"
   \   00000090   FA02D4E1           LDRSH    R0,[R4, #+42]
   \   00000094   ........           _BLF     WM_GetClientWindow,??WM_GetClientWindow??rA
   \   00000098   0010A0E1           MOV      R1,R0
   \   0000009C   5E3FA0E3           MOV      R3,#+376
   \   000000A0   0620A0E1           MOV      R2,R6
   \                     ??ChangePinCode_3:
   \   000000A4   000095E5           LDR      R0,[R5, #+0]
   \   000000A8   ........           _BLF     ??ExecKeyBoardPinCode,??ExecKeyBoardPinCode??rA
   \   000000AC   0E0000EA           B        ??ChangePinCode_4
    243                  } else if ( (length>4) && (pin == UNLOCK_PIN_CODE) ) {
   \                     ??ChangePinCode_2:
   \   000000B0   050058E3           CMP      R8,#+5
   \   000000B4   0A0000BA           BLT      ??ChangePinCode_1
   \   000000B8   3900A0E3           MOV      R0,#+57
   \   000000BC   C00D80E3           ORR      R0,R0,#0x3000
   \   000000C0   000059E1           CMP      R9,R0
   \   000000C4   0600001A           BNE      ??ChangePinCode_1
    244                      PinCodeOK = true;
   \   000000C8   64A0C4E5           STRB     R10,[R4, #+100]
    245                      KeyBoard->ExecKeyBoardPinCode(WM_GetClientWindow(WinHandl),L_WORD665,GUI_ID_BUTTON8);//"Enter new pin code:"
   \   000000CC   FA02D4E1           LDRSH    R0,[R4, #+42]
   \   000000D0   ........           _BLF     WM_GetClientWindow,??WM_GetClientWindow??rA
   \   000000D4   5E3FA0E3           MOV      R3,#+376
   \   000000D8   0620A0E1           MOV      R2,R6
   \   000000DC   0010A0E1           MOV      R1,R0
   \   000000E0   EFFFFFEA           B        ??ChangePinCode_3
    246                  } else {
    247                      PinCodeOK = false;
   \                     ??ChangePinCode_1:
   \   000000E4   0000A0E3           MOV      R0,#+0
   \   000000E8   6400C4E5           STRB     R0,[R4, #+100]
    248                  }
    249              } else {
    250                  PinCodeOK = false;
    251              }
    252              if ( !PinCodeOK ) {
   \                     ??ChangePinCode_4:
   \   000000EC   6400D4E5           LDRB     R0,[R4, #+100]
   \   000000F0   000050E3           CMP      R0,#+0
   \   000000F4   3000001A           BNE      ??ChangePinCode_5
    253                  AnsiString Text1("Message!");
   \   000000F8   ........           LDR      R5,??DataTable32  ;; `?<Constant "Message!">`
   \   000000FC   38008DE2           ADD      R0,SP,#+56
   \   00000100   0510A0E1           MOV      R1,R5
   \   00000104   ........           _BLF     ??AnsiString_1,??AnsiString??rA_1
    254                  AnsiString Text2("Invalid pin code.");
   \   00000108   0C1085E2           ADD      R1,R5,#+12
   \   0000010C   54008DE2           ADD      R0,SP,#+84
   \   00000110   ........           _BLF     ??AnsiString_1,??AnsiString??rA_1
    255                  OKMessageBox->Exec(WinHandl,Text1 , Text2);
   \   00000114   0020A0E3           MOV      R2,#+0
   \   00000118   0010A0E3           MOV      R1,#+0
   \   0000011C   1C008DE2           ADD      R0,SP,#+28
   \   00000120   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000124   ........           LDR      R0,??DataTable33  ;; ??npos
   \   00000128   0020A0E3           MOV      R2,#+0
   \   0000012C   005090E5           LDR      R5,[R0, #+0]
   \   00000130   54108DE2           ADD      R1,SP,#+84
   \   00000134   0530A0E1           MOV      R3,R5
   \   00000138   1C008DE2           ADD      R0,SP,#+28
   \   0000013C   ........           _BLF     ??assign,??assign??rA
   \   00000140   0020A0E3           MOV      R2,#+0
   \   00000144   0210A0E1           MOV      R1,R2
   \   00000148   0D00A0E1           MOV      R0,SP
   \   0000014C   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000150   0530A0E1           MOV      R3,R5
   \   00000154   0020A0E3           MOV      R2,#+0
   \   00000158   38108DE2           ADD      R1,SP,#+56
   \   0000015C   0D00A0E1           MOV      R0,SP
   \   00000160   ........           _BLF     ??assign,??assign??rA
   \   00000164   FA12D4E1           LDRSH    R1,[R4, #+42]
   \   00000168   ........           LDR      R0,??DataTable34  ;; OKMessageBox
   \   0000016C   1C308DE2           ADD      R3,SP,#+28
   \   00000170   000090E5           LDR      R0,[R0, #+0]
   \   00000174   0D20A0E1           MOV      R2,SP
   \   00000178   ........           _BLF     ??Exec,??Exec??rA
   \   0000017C   0020A0E3           MOV      R2,#+0
   \   00000180   0110A0E3           MOV      R1,#+1
   \   00000184   1C008DE2           ADD      R0,SP,#+28
   \   00000188   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   0000018C   0020A0E3           MOV      R2,#+0
   \   00000190   0110A0E3           MOV      R1,#+1
   \   00000194   0D00A0E1           MOV      R0,SP
   \   00000198   ........           _BLF     ??_Tidy,??_Tidy??rA
    256              }
   \   0000019C   0020A0E3           MOV      R2,#+0
   \   000001A0   0110A0E3           MOV      R1,#+1
   \   000001A4   54008DE2           ADD      R0,SP,#+84
   \   000001A8   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000001AC   0020A0E3           MOV      R2,#+0
   \   000001B0   0110A0E3           MOV      R1,#+1
   \   000001B4   38008DE2           ADD      R0,SP,#+56
   \   000001B8   ........           _BLF     ??_Tidy,??_Tidy??rA
    257          }
   \                     ??ChangePinCode_5:
   \   000001BC   70D08DE2           ADD      SP,SP,#+112
   \   000001C0   F047BDE8           POP      {R4-R10,LR}
   \   000001C4   1EFF2FE1           BX       LR               ;; return
    258          

   \                                 In segment CODE, align 4, keep-with-next
    259          bool TDUSysSetupWin::CheckPinCode(AnsiString PinCodeStr)
    260          {
   \                     ??CheckPinCode:
   \   00000000   F0432DE9           PUSH     {R4-R9,LR}
   \   00000004   70D04DE2           SUB      SP,SP,#+112
   \   00000008   0050A0E1           MOV      R5,R0
   \   0000000C   0160A0E1           MOV      R6,R1
    261              bool PCodeOK = false;
    262              int length = PinCodeStr.length();
    263              int pin = atoi(PinCodeStr.c_str());
   \   00000010   180096E5           LDR      R0,[R6, #+24]
   \   00000014   147096E5           LDR      R7,[R6, #+20]
   \   00000018   100050E3           CMP      R0,#+16
   \   0000001C   04009625           LDRCS    R0,[R6, #+4]
   \   00000020   0040A0E3           MOV      R4,#+0
   \   00000024   04008632           ADDCC    R0,R6,#+4
   \   00000028   0A20A0E3           MOV      R2,#+10
   \   0000002C   0010A0E3           MOV      R1,#+0
   \   00000030   ........           _BLF     _Stoul,??_Stoul??rA
   \   00000034   0080A0E1           MOV      R8,R0
    264              if ( pin>0 ) {
   \   00000038   010058E3           CMP      R8,#+1
   \   0000003C   170000BA           BLT      ??CheckPinCode_1
    265                  if ( PinCodeStr.compare(PROSystemData::TXUSystemData->UserPinCode)==0 ) {
   \   00000040   ........           LDR      R0,??DataTable31  ;; ??TXUSystemData
   \   00000044   0190A0E3           MOV      R9,#+1
   \   00000048   000090E5           LDR      R0,[R0, #+0]
   \   0000004C   620F80E2           ADD      R0,R0,#+392
   \   00000050   181090E5           LDR      R1,[R0, #+24]
   \   00000054   100051E3           CMP      R1,#+16
   \   00000058   04309025           LDRCS    R3,[R0, #+4]
   \   0000005C   0010A0E3           MOV      R1,#+0
   \   00000060   04308032           ADDCC    R3,R0,#+4
   \   00000064   140090E5           LDR      R0,[R0, #+20]
   \   00000068   01002DE9           PUSH     {R0}
   \   0000006C   142096E5           LDR      R2,[R6, #+20]
   \   00000070   0600A0E1           MOV      R0,R6
   \   00000074   ........           _BLF     ??compare,??compare??rA
   \   00000078   000050E3           CMP      R0,#+0
   \   0000007C   04D08DE2           ADD      SP,SP,#+4
    266                      PCodeOK = true;
   \   00000080   0140A003           MOVEQ    R4,#+1
   \   00000084   3600000A           BEQ      ??CheckPinCode_2
    267                  } else if ( (length>4) && (pin == UNLOCK_PIN_CODE) ) {
   \   00000088   050057E3           CMP      R7,#+5
   \   0000008C   030000BA           BLT      ??CheckPinCode_1
   \   00000090   3900A0E3           MOV      R0,#+57
   \   00000094   C00D80E3           ORR      R0,R0,#0x3000
   \   00000098   000058E1           CMP      R8,R0
    268                      PinCodeOK = true;
   \   0000009C   6490C505           STRBEQ   R9,[R5, #+100]
    269                  } else {
    270                      PCodeOK = false;
    271                  }
    272              } else {
    273                  PCodeOK = false;
    274              }
    275              if ( !PCodeOK ) {
    276                  AnsiString Text1("Message!");
   \                     ??CheckPinCode_1:
   \   000000A0   ........           LDR      R6,??DataTable32  ;; `?<Constant "Message!">`
   \   000000A4   38008DE2           ADD      R0,SP,#+56
   \   000000A8   0610A0E1           MOV      R1,R6
   \   000000AC   ........           _BLF     ??AnsiString_1,??AnsiString??rA_1
    277                  AnsiString Text2("Invalid pin code.");
   \   000000B0   0C1086E2           ADD      R1,R6,#+12
   \   000000B4   54008DE2           ADD      R0,SP,#+84
   \   000000B8   ........           _BLF     ??AnsiString_1,??AnsiString??rA_1
    278                  OKMessageBox->Exec(WinHandl,Text1 , Text2);
   \   000000BC   0020A0E3           MOV      R2,#+0
   \   000000C0   0210A0E1           MOV      R1,R2
   \   000000C4   1C008DE2           ADD      R0,SP,#+28
   \   000000C8   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000000CC   ........           LDR      R0,??DataTable33  ;; ??npos
   \   000000D0   0420A0E1           MOV      R2,R4
   \   000000D4   006090E5           LDR      R6,[R0, #+0]
   \   000000D8   54108DE2           ADD      R1,SP,#+84
   \   000000DC   0630A0E1           MOV      R3,R6
   \   000000E0   1C008DE2           ADD      R0,SP,#+28
   \   000000E4   ........           _BLF     ??assign,??assign??rA
   \   000000E8   0420A0E1           MOV      R2,R4
   \   000000EC   0210A0E1           MOV      R1,R2
   \   000000F0   0D00A0E1           MOV      R0,SP
   \   000000F4   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000000F8   0630A0E1           MOV      R3,R6
   \   000000FC   0420A0E1           MOV      R2,R4
   \   00000100   38108DE2           ADD      R1,SP,#+56
   \   00000104   0D00A0E1           MOV      R0,SP
   \   00000108   ........           _BLF     ??assign,??assign??rA
   \   0000010C   FA12D5E1           LDRSH    R1,[R5, #+42]
   \   00000110   ........           LDR      R0,??DataTable34  ;; OKMessageBox
   \   00000114   1C308DE2           ADD      R3,SP,#+28
   \   00000118   000090E5           LDR      R0,[R0, #+0]
   \   0000011C   0D20A0E1           MOV      R2,SP
   \   00000120   ........           _BLF     ??Exec,??Exec??rA
   \   00000124   0420A0E1           MOV      R2,R4
   \   00000128   0110A0E3           MOV      R1,#+1
   \   0000012C   1C008DE2           ADD      R0,SP,#+28
   \   00000130   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000134   0420A0E1           MOV      R2,R4
   \   00000138   0110A0E3           MOV      R1,#+1
   \   0000013C   0D00A0E1           MOV      R0,SP
   \   00000140   ........           _BLF     ??_Tidy,??_Tidy??rA
    279              }
   \   00000144   0420A0E1           MOV      R2,R4
   \   00000148   0110A0E3           MOV      R1,#+1
   \   0000014C   54008DE2           ADD      R0,SP,#+84
   \   00000150   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000154   0420A0E1           MOV      R2,R4
   \   00000158   0110A0E3           MOV      R1,#+1
   \   0000015C   38008DE2           ADD      R0,SP,#+56
   \   00000160   ........           _BLF     ??_Tidy,??_Tidy??rA
    280          	return PCodeOK;
   \                     ??CheckPinCode_2:
   \   00000164   0400A0E1           MOV      R0,R4
   \   00000168   70D08DE2           ADD      SP,SP,#+112
   \   0000016C   F043BDE8           POP      {R4-R9,LR}
   \   00000170   1EFF2FE1           BX       LR               ;; return
    281          
    282          }

   \                                 In segment CODE, align 4, keep-with-next
    283          void TDUSysSetupWin::FirstNewPinCode(AnsiString PinCodeStr)
    284          {
   \                     ??FirstNewPinCode:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   70D04DE2           SUB      SP,SP,#+112
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   0150A0E1           MOV      R5,R1
    285              int length = PinCodeStr.length();
    286              int pin = atoi(PinCodeStr.c_str());
   \   00000010   180095E5           LDR      R0,[R5, #+24]
   \   00000014   146095E5           LDR      R6,[R5, #+20]
   \   00000018   100050E3           CMP      R0,#+16
   \   0000001C   04009525           LDRCS    R0,[R5, #+4]
   \   00000020   0A20A0E3           MOV      R2,#+10
   \   00000024   04008532           ADDCC    R0,R5,#+4
   \   00000028   0010A0E3           MOV      R1,#+0
   \   0000002C   ........           _BLF     _Stoul,??_Stoul??rA
    287          //new keyboard for pin    int foundPtr = PinCodeStr.find(".-");
    288              if ( pin<0 ) {
   \   00000030   000050E3           CMP      R0,#+0
   \   00000034   0200005A           BPL      ??FirstNewPinCode_1
    289                  PinCodeOK = false;
   \                     ??FirstNewPinCode_2:
   \   00000038   0000A0E3           MOV      R0,#+0
   \   0000003C   6400C4E5           STRB     R0,[R4, #+100]
   \   00000040   160000EA           B        ??FirstNewPinCode_3
    290              } else {
    291                  if ( (length<5)&&(length>3) ) {
   \                     ??FirstNewPinCode_1:
   \   00000044   050056E3           CMP      R6,#+5
   \   00000048   FAFFFFAA           BGE      ??FirstNewPinCode_2
   \   0000004C   040056E3           CMP      R6,#+4
   \   00000050   F8FFFFBA           BLT      ??FirstNewPinCode_2
    292                      PinCodeOK = true;
   \   00000054   0100A0E3           MOV      R0,#+1
   \   00000058   6400C4E5           STRB     R0,[R4, #+100]
    293                      TempPinCode = PinCodeStr;
   \   0000005C   ........           LDR      R0,??DataTable33  ;; ??npos
   \   00000060   0020A0E3           MOV      R2,#+0
   \   00000064   003090E5           LDR      R3,[R0, #+0]
   \   00000068   0510A0E1           MOV      R1,R5
   \   0000006C   680084E2           ADD      R0,R4,#+104
   \   00000070   ........           _BLF     ??assign,??assign??rA
    294                      TSN_Delay(50);
   \   00000074   3200A0E3           MOV      R0,#+50
   \   00000078   ........           _BLF     OS_Delay,??OS_Delay??rA
    295                      KeyBoard->ExecKeyBoardPinCode(WM_GetClientWindow(WinHandl),L_WORD669,GUI_ID_BUTTON9); //"Re-enter new pin code:"
   \   0000007C   FA02D4E1           LDRSH    R0,[R4, #+42]
   \   00000080   ........           _BLF     WM_GetClientWindow,??WM_GetClientWindow??rA
   \   00000084   0010A0E1           MOV      R1,R0
   \   00000088   ........           LDR      R0,??DataTable26  ;; KeyBoard
   \   0000008C   7930A0E3           MOV      R3,#+121
   \   00000090   000090E5           LDR      R0,[R0, #+0]
   \   00000094   403F83E3           ORR      R3,R3,#0x100
   \   00000098   492F83E2           ADD      R2,R3,#+292
   \   0000009C   ........           _BLF     ??ExecKeyBoardPinCode,??ExecKeyBoardPinCode??rA
    296                  } else {
    297                      PinCodeOK = false;
    298                  }
    299              }
    300              if ( !PinCodeOK ) {
   \                     ??FirstNewPinCode_3:
   \   000000A0   6400D4E5           LDRB     R0,[R4, #+100]
   \   000000A4   000050E3           CMP      R0,#+0
   \   000000A8   3000001A           BNE      ??FirstNewPinCode_4
    301                  AnsiString Text1("Message!");
   \   000000AC   ........           LDR      R5,??DataTable32  ;; `?<Constant "Message!">`
   \   000000B0   38008DE2           ADD      R0,SP,#+56
   \   000000B4   0510A0E1           MOV      R1,R5
   \   000000B8   ........           _BLF     ??AnsiString_1,??AnsiString??rA_1
    302                  AnsiString Text2("Invalid pin code, must be 4 digit");
   \   000000BC   201085E2           ADD      R1,R5,#+32
   \   000000C0   54008DE2           ADD      R0,SP,#+84
   \   000000C4   ........           _BLF     ??AnsiString_1,??AnsiString??rA_1
    303                  OKMessageBox->Exec(WinHandl,Text1 , Text2);
   \   000000C8   0020A0E3           MOV      R2,#+0
   \   000000CC   0010A0E3           MOV      R1,#+0
   \   000000D0   1C008DE2           ADD      R0,SP,#+28
   \   000000D4   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000000D8   ........           LDR      R0,??DataTable33  ;; ??npos
   \   000000DC   0020A0E3           MOV      R2,#+0
   \   000000E0   005090E5           LDR      R5,[R0, #+0]
   \   000000E4   54108DE2           ADD      R1,SP,#+84
   \   000000E8   0530A0E1           MOV      R3,R5
   \   000000EC   1C008DE2           ADD      R0,SP,#+28
   \   000000F0   ........           _BLF     ??assign,??assign??rA
   \   000000F4   0020A0E3           MOV      R2,#+0
   \   000000F8   0210A0E1           MOV      R1,R2
   \   000000FC   0D00A0E1           MOV      R0,SP
   \   00000100   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000104   0530A0E1           MOV      R3,R5
   \   00000108   0020A0E3           MOV      R2,#+0
   \   0000010C   38108DE2           ADD      R1,SP,#+56
   \   00000110   0D00A0E1           MOV      R0,SP
   \   00000114   ........           _BLF     ??assign,??assign??rA
   \   00000118   FA12D4E1           LDRSH    R1,[R4, #+42]
   \   0000011C   ........           LDR      R0,??DataTable34  ;; OKMessageBox
   \   00000120   1C308DE2           ADD      R3,SP,#+28
   \   00000124   000090E5           LDR      R0,[R0, #+0]
   \   00000128   0D20A0E1           MOV      R2,SP
   \   0000012C   ........           _BLF     ??Exec,??Exec??rA
   \   00000130   0020A0E3           MOV      R2,#+0
   \   00000134   0110A0E3           MOV      R1,#+1
   \   00000138   1C008DE2           ADD      R0,SP,#+28
   \   0000013C   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000140   0020A0E3           MOV      R2,#+0
   \   00000144   0110A0E3           MOV      R1,#+1
   \   00000148   0D00A0E1           MOV      R0,SP
   \   0000014C   ........           _BLF     ??_Tidy,??_Tidy??rA
    304          //        KeyBoard->ExecKeyBoardNum(WM_GetClientWindow(WinHandl),"Enter new pin code:",GUI_ID_BUTTON8);
    305              }
   \   00000150   0020A0E3           MOV      R2,#+0
   \   00000154   0110A0E3           MOV      R1,#+1
   \   00000158   54008DE2           ADD      R0,SP,#+84
   \   0000015C   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000160   0020A0E3           MOV      R2,#+0
   \   00000164   0110A0E3           MOV      R1,#+1
   \   00000168   38008DE2           ADD      R0,SP,#+56
   \   0000016C   ........           _BLF     ??_Tidy,??_Tidy??rA
    306          }
   \                     ??FirstNewPinCode_4:
   \   00000170   70D08DE2           ADD      SP,SP,#+112
   \   00000174   7040BDE8           POP      {R4-R6,LR}
   \   00000178   1EFF2FE1           BX       LR               ;; return
    307          

   \                                 In segment CODE, align 4, keep-with-next
    308          void TDUSysSetupWin::SecondNewPinCode(AnsiString PinCodeStr)
    309          {
   \                     ??SecondNewPinCode:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   70D04DE2           SUB      SP,SP,#+112
   \   00000008   0150A0E1           MOV      R5,R1
    310              if ( TempPinCode.compare(PinCodeStr)==0 ) {
   \   0000000C   181095E5           LDR      R1,[R5, #+24]
   \   00000010   0040A0E1           MOV      R4,R0
   \   00000014   100051E3           CMP      R1,#+16
   \   00000018   141095E5           LDR      R1,[R5, #+20]
   \   0000001C   04309525           LDRCS    R3,[R5, #+4]
   \   00000020   680084E2           ADD      R0,R4,#+104
   \   00000024   02002DE9           PUSH     {R1}
   \   00000028   142090E5           LDR      R2,[R0, #+20]
   \   0000002C   04308532           ADDCC    R3,R5,#+4
   \   00000030   0010A0E3           MOV      R1,#+0
   \   00000034   ........           _BLF     ??compare,??compare??rA
   \   00000038   000050E3           CMP      R0,#+0
   \   0000003C   04D08DE2           ADD      SP,SP,#+4
   \   00000040   1B00001A           BNE      ??SecondNewPinCode_1
    311                  LibPutValue(SVT_USER_PIN_CODE, PROSystemData::TXUSystemData, PinCodeStr, true);
   \   00000044   0020A0E3           MOV      R2,#+0
   \   00000048   0010A0E3           MOV      R1,#+0
   \   0000004C   0D00A0E1           MOV      R0,SP
   \   00000050   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000054   ........           LDR      R0,??DataTable33  ;; ??npos
   \   00000058   0020A0E3           MOV      R2,#+0
   \   0000005C   003090E5           LDR      R3,[R0, #+0]
   \   00000060   0510A0E1           MOV      R1,R5
   \   00000064   0D00A0E1           MOV      R0,SP
   \   00000068   ........           _BLF     ??assign,??assign??rA
   \   0000006C   0000E0E3           MVN      R0,#+0
   \   00000070   01002DE9           PUSH     {R0}
   \   00000074   01002DE9           PUSH     {R0}
   \   00000078   0000A0E3           MOV      R0,#+0
   \   0000007C   01002DE9           PUSH     {R0}
   \   00000080   01002DE9           PUSH     {R0}
   \   00000084   ........           LDR      R0,??DataTable31  ;; ??TXUSystemData
   \   00000088   0130A0E3           MOV      R3,#+1
   \   0000008C   001090E5           LDR      R1,[R0, #+0]
   \   00000090   10208DE2           ADD      R2,SP,#+16
   \   00000094   590E83E3           ORR      R0,R3,#0x590
   \   00000098   ........           _BLF     ??LibPutValue_1,??LibPutValue??rA_1
   \   0000009C   0020A0E3           MOV      R2,#+0
   \   000000A0   0110A0E3           MOV      R1,#+1
   \   000000A4   10008DE2           ADD      R0,SP,#+16
   \   000000A8   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000000AC   10D08DE2           ADD      SP,SP,#+16
   \   000000B0   320000EA           B        ??SecondNewPinCode_2
    312              } else {
    313                  PinCodeOK = false;
    314                  AnsiString Text1("Message!");
   \                     ??SecondNewPinCode_1:
   \   000000B4   ........           LDR      R5,??DataTable32  ;; `?<Constant "Message!">`
   \   000000B8   0000A0E3           MOV      R0,#+0
   \   000000BC   6400C4E5           STRB     R0,[R4, #+100]
   \   000000C0   0510A0E1           MOV      R1,R5
   \   000000C4   38008DE2           ADD      R0,SP,#+56
   \   000000C8   ........           _BLF     ??AnsiString_1,??AnsiString??rA_1
    315                  AnsiString Text2("Not equal to first new pin code");
   \   000000CC   441085E2           ADD      R1,R5,#+68
   \   000000D0   54008DE2           ADD      R0,SP,#+84
   \   000000D4   ........           _BLF     ??AnsiString_1,??AnsiString??rA_1
    316                  OKMessageBox->Exec(WinHandl,Text1 , Text2);
   \   000000D8   0020A0E3           MOV      R2,#+0
   \   000000DC   0010A0E3           MOV      R1,#+0
   \   000000E0   1C008DE2           ADD      R0,SP,#+28
   \   000000E4   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000000E8   ........           LDR      R0,??DataTable33  ;; ??npos
   \   000000EC   0020A0E3           MOV      R2,#+0
   \   000000F0   005090E5           LDR      R5,[R0, #+0]
   \   000000F4   54108DE2           ADD      R1,SP,#+84
   \   000000F8   0530A0E1           MOV      R3,R5
   \   000000FC   1C008DE2           ADD      R0,SP,#+28
   \   00000100   ........           _BLF     ??assign,??assign??rA
   \   00000104   0020A0E3           MOV      R2,#+0
   \   00000108   0210A0E1           MOV      R1,R2
   \   0000010C   0D00A0E1           MOV      R0,SP
   \   00000110   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000114   0530A0E1           MOV      R3,R5
   \   00000118   0020A0E3           MOV      R2,#+0
   \   0000011C   38108DE2           ADD      R1,SP,#+56
   \   00000120   0D00A0E1           MOV      R0,SP
   \   00000124   ........           _BLF     ??assign,??assign??rA
   \   00000128   FA12D4E1           LDRSH    R1,[R4, #+42]
   \   0000012C   ........           LDR      R0,??DataTable34  ;; OKMessageBox
   \   00000130   1C308DE2           ADD      R3,SP,#+28
   \   00000134   000090E5           LDR      R0,[R0, #+0]
   \   00000138   0D20A0E1           MOV      R2,SP
   \   0000013C   ........           _BLF     ??Exec,??Exec??rA
   \   00000140   0020A0E3           MOV      R2,#+0
   \   00000144   0110A0E3           MOV      R1,#+1
   \   00000148   1C008DE2           ADD      R0,SP,#+28
   \   0000014C   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000150   0020A0E3           MOV      R2,#+0
   \   00000154   0110A0E3           MOV      R1,#+1
   \   00000158   0D00A0E1           MOV      R0,SP
   \   0000015C   ........           _BLF     ??_Tidy,??_Tidy??rA
    317              }
   \   00000160   0020A0E3           MOV      R2,#+0
   \   00000164   0110A0E3           MOV      R1,#+1
   \   00000168   54008DE2           ADD      R0,SP,#+84
   \   0000016C   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000170   0020A0E3           MOV      R2,#+0
   \   00000174   0110A0E3           MOV      R1,#+1
   \   00000178   38008DE2           ADD      R0,SP,#+56
   \   0000017C   ........           _BLF     ??_Tidy,??_Tidy??rA
    318          }
   \                     ??SecondNewPinCode_2:
   \   00000180   70D08DE2           ADD      SP,SP,#+112
   \   00000184   3040BDE8           POP      {R4,R5,LR}
   \   00000188   1EFF2FE1           BX       LR               ;; return
    319          

   \                                 In segment CODE, align 4, keep-with-next
    320          void TDUSysSetupWin::MakeSound(void)
    321          {
    322          #ifdef WIN32
    323              int Max = 200;
    324              int count = 0;
    325              while ( HoldSound && (count++<Max) ) {
    326                  Beep(500,10);
    327                  TSN_Delay(10);
    328                  WM_ExecIdle();
    329              }
    330          #endif
    331          }
   \                     ??MakeSound:
   \   00000000   1EFF2FE1           BX       LR               ;; return
    332          

   \                                 In segment CODE, align 4, keep-with-next
    333          void TDUSysSetupWin::cbSysWin(WM_MESSAGE *pMsg)
    334          {
   \                     ??cbSysWin:
   \   00000000   F0412DE9           PUSH     {R4-R8,LR}
   \   00000004   A8D04DE2           SUB      SP,SP,#+168
    335              int NCode, Id;
    336              WM_HWIN hWin = pMsg->hWin;
    337              switch ( pMsg->MsgId ) {
   \   00000008   ........           LDR      R4,??DataTable35  ;; KeyBoard
   \   0000000C   ........           LDR      R5,??DataTable36  ;; SystemWindow
   \   00000010   0080A0E1           MOV      R8,R0
   \   00000014   000098E5           LDR      R0,[R8, #+0]
   \   00000018   F470D8E1           LDRSH    R7,[R8, #+4]
   \   0000001C   F660D8E1           LDRSH    R6,[R8, #+6]
   \   00000020   0D0040E2           SUB      R0,R0,#+13
   \   00000024   FF10A0E3           MOV      R1,#+255
   \   00000028   C01F81E3           ORR      R1,R1,#0x300
   \   0000002C   010050E1           CMP      R0,R1
   \   00000030   6C03008A           BHI      ??cbSysWin_3
   \   00000034   021F8FE2           ADR      R1,??cbSysWin_1
   \   00000038   8000A0E1           MOV      R0,R0, LSL #+1
   \   0000003C   B01091E1           LDRH     R1,[R1, R0]
   \   00000040   01F18FE0           ADD      PC,PC,R1, LSL #+2
   \                     ??cbSysWin_1:
   \   00000044   00036803FF01       DC16     +768,+872,+511,+872
   \              6803        
   \   0000004C   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   00000054   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   0000005C   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   00000064   440268036803       DC16     +580,+872,+872,+872
   \              6803        
   \   0000006C   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   00000074   680319036803       DC16     +872,+793,+872,+872
   \              6803        
   \   0000007C   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   00000084   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   0000008C   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   00000094   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   0000009C   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   000000A4   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   000000AC   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   000000B4   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   000000BC   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   000000C4   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   000000CC   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   000000D4   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   000000DC   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   000000E4   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   000000EC   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   000000F4   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   000000FC   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   00000104   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   0000010C   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   00000114   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   0000011C   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   00000124   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   0000012C   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   00000134   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   0000013C   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   00000144   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   0000014C   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   00000154   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   0000015C   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   00000164   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   0000016C   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   00000174   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   0000017C   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   00000184   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   0000018C   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   00000194   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   0000019C   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   000001A4   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   000001AC   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   000001B4   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   000001BC   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   000001C4   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   000001CC   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   000001D4   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   000001DC   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   000001E4   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   000001EC   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   000001F4   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   000001FC   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   00000204   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   0000020C   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   00000214   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   0000021C   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   00000224   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   0000022C   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   00000234   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   0000023C   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   00000244   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   0000024C   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   00000254   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   0000025C   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   00000264   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   0000026C   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   00000274   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   0000027C   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   00000284   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   0000028C   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   00000294   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   0000029C   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   000002A4   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   000002AC   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   000002B4   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   000002BC   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   000002C4   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   000002CC   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   000002D4   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   000002DC   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   000002E4   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   000002EC   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   000002F4   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   000002FC   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   00000304   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   0000030C   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   00000314   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   0000031C   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   00000324   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   0000032C   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   00000334   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   0000033C   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   00000344   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   0000034C   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   00000354   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   0000035C   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   00000364   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   0000036C   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   00000374   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   0000037C   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   00000384   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   0000038C   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   00000394   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   0000039C   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   000003A4   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   000003AC   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   000003B4   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   000003BC   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   000003C4   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   000003CC   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   000003D4   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   000003DC   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   000003E4   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   000003EC   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   000003F4   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   000003FC   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   00000404   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   0000040C   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   00000414   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   0000041C   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   00000424   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   0000042C   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   00000434   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   0000043C   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   00000444   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   0000044C   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   00000454   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   0000045C   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   00000464   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   0000046C   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   00000474   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   0000047C   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   00000484   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   0000048C   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   00000494   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   0000049C   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   000004A4   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   000004AC   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   000004B4   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   000004BC   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   000004C4   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   000004CC   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   000004D4   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   000004DC   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   000004E4   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   000004EC   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   000004F4   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   000004FC   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   00000504   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   0000050C   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   00000514   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   0000051C   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   00000524   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   0000052C   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   00000534   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   0000053C   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   00000544   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   0000054C   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   00000554   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   0000055C   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   00000564   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   0000056C   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   00000574   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   0000057C   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   00000584   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   0000058C   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   00000594   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   0000059C   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   000005A4   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   000005AC   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   000005B4   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   000005BC   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   000005C4   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   000005CC   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   000005D4   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   000005DC   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   000005E4   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   000005EC   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   000005F4   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   000005FC   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   00000604   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   0000060C   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   00000614   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   0000061C   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   00000624   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   0000062C   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   00000634   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   0000063C   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   00000644   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   0000064C   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   00000654   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   0000065C   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   00000664   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   0000066C   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   00000674   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   0000067C   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   00000684   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   0000068C   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   00000694   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   0000069C   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   000006A4   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   000006AC   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   000006B4   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   000006BC   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   000006C4   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   000006CC   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   000006D4   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   000006DC   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   000006E4   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   000006EC   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   000006F4   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   000006FC   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   00000704   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   0000070C   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   00000714   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   0000071C   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   00000724   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   0000072C   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   00000734   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   0000073C   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   00000744   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   0000074C   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   00000754   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   0000075C   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   00000764   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   0000076C   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   00000774   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   0000077C   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   00000784   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   0000078C   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   00000794   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   0000079C   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   000007A4   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   000007AC   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   000007B4   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   000007BC   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   000007C4   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   000007CC   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   000007D4   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   000007DC   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   000007E4   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   000007EC   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   000007F4   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   000007FC   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   00000804   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   0000080C   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   00000814   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   0000081C   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   00000824   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   0000082C   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   00000834   680368036803       DC16     +872,+872,+872,+872
   \              6803        
   \   0000083C   68036803C602       DC16     +872,+872,+710,+588
   \              4C02        
    338              case WM_PAINT:
    339                  GUI_DrawRect(   2,   2,  94,  50);
   \                     ??cbSysWin_4:
   \   00000844   3230A0E3           MOV      R3,#+50
   \   00000848   5E20A0E3           MOV      R2,#+94
   \   0000084C   0210A0E3           MOV      R1,#+2
   \   00000850   0200A0E3           MOV      R0,#+2
   \   00000854   ........           _BLF     GUI_DrawRect,??GUI_DrawRect??rA
    340                  GUI_DrawRect(   2,  56,  94, 100);
   \   00000858   6430A0E3           MOV      R3,#+100
   \   0000085C   5E20A0E3           MOV      R2,#+94
   \   00000860   3810A0E3           MOV      R1,#+56
   \   00000864   0200A0E3           MOV      R0,#+2
   \   00000868   ........           _BLF     GUI_DrawRect,??GUI_DrawRect??rA
    341                  GUI_DrawRect( 104,   2, 270,  66);
   \   0000086C   4230A0E3           MOV      R3,#+66
   \   00000870   CC2083E2           ADD      R2,R3,#+204
   \   00000874   0210A0E3           MOV      R1,#+2
   \   00000878   6800A0E3           MOV      R0,#+104
   \   0000087C   ........           _BLF     GUI_DrawRect,??GUI_DrawRect??rA
    342                  GUI_DrawRect( 104,  76, 180, 132);
   \   00000880   8430A0E3           MOV      R3,#+132
   \   00000884   B420A0E3           MOV      R2,#+180
   \   00000888   4C10A0E3           MOV      R1,#+76
   \   0000088C   6800A0E3           MOV      R0,#+104
   \   00000890   ........           _BLF     GUI_DrawRect,??GUI_DrawRect??rA
    343                  SystemWindow->SysWin1->SysSetupWin->UpdateLanguage();
   \   00000894   000095E5           LDR      R0,[R5, #+0]
   \   00000898   580090E5           LDR      R0,[R0, #+88]
   \   0000089C   7C0090E5           LDR      R0,[R0, #+124]
   \   000008A0   ........           _BLF     ??UpdateLanguage,??UpdateLanguage??rA
    344                  {
    345                      int ind0 = -1;
    346                      int ind4 = -1;
    347                      for ( int j=0; j<SizeofPWBackColorList; j++ ) {
   \   000008A4   ........           LDR      R0,??DataTable37  ;; PWBackColorList
   \   000008A8   0010E0E3           MVN      R1,#+0
   \   000008AC   783090E5           LDR      R3,[R0, #+120]
   \   000008B0   0140A0E1           MOV      R4,R1
   \   000008B4   0020A0E3           MOV      R2,#+0
   \   000008B8   010053E3           CMP      R3,#+1
   \   000008BC   080000AA           BGE      ??cbSysWin_5
   \   000008C0   090000EA           B        ??cbSysWin_6
    348                          if ( PWBackColorList[j].Value==BackColor )ind0=j;
   \                     ??cbSysWin_7:
   \   000008C4   0C60A0E3           MOV      R6,#+12
   \   000008C8   960227E0           MLA      R7,R6,R2,R0
   \   000008CC   086097E5           LDR      R6,[R7, #+8]
   \   000008D0   ........           LDR      R7,??DataTable38  ;; BackColor
   \   000008D4   007097E5           LDR      R7,[R7, #+0]
   \   000008D8   070056E1           CMP      R6,R7
   \   000008DC   0210A001           MOVEQ    R1,R2
    349                      }
   \   000008E0   012082E2           ADD      R2,R2,#+1
   \                     ??cbSysWin_5:
   \   000008E4   030052E1           CMP      R2,R3
   \   000008E8   F5FFFFBA           BLT      ??cbSysWin_7
    350                      for ( int j=0; j<SizeofPWTextColorList; j++ ) {
   \                     ??cbSysWin_6:
   \   000008EC   7C3090E5           LDR      R3,[R0, #+124]
   \   000008F0   0020A0E3           MOV      R2,#+0
   \   000008F4   010053E3           CMP      R3,#+1
   \   000008F8   080000AA           BGE      ??cbSysWin_8
   \   000008FC   090000EA           B        ??cbSysWin_9
    351                          if ( PWTextColorList[j].Value==TextColor )ind4=j;
   \                     ??cbSysWin_10:
   \   00000900   0C60A0E3           MOV      R6,#+12
   \   00000904   960227E0           MLA      R7,R6,R2,R0
   \   00000908   446097E5           LDR      R6,[R7, #+68]
   \   0000090C   ........           LDR      R7,??DataTable39  ;; TextColor
   \   00000910   007097E5           LDR      R7,[R7, #+0]
   \   00000914   070056E1           CMP      R6,R7
   \   00000918   0240A001           MOVEQ    R4,R2
    352                      }
   \   0000091C   012082E2           ADD      R2,R2,#+1
   \                     ??cbSysWin_8:
   \   00000920   030052E1           CMP      R2,R3
   \   00000924   F5FFFFBA           BLT      ??cbSysWin_10
    353          
    354                      DROPDOWN_SetSel(SystemWindow->SysWin1->SysSetupWin->hDropdBackColor,ind0);
   \                     ??cbSysWin_9:
   \   00000928   000095E5           LDR      R0,[R5, #+0]
   \   0000092C   580090E5           LDR      R0,[R0, #+88]
   \   00000930   7C0090E5           LDR      R0,[R0, #+124]
   \   00000934   F204D0E1           LDRSH    R0,[R0, #+66]
   \   00000938   ........           _BLF     DROPDOWN_SetSel,??DROPDOWN_SetSel??rA
    355                      DROPDOWN_SetSel(SystemWindow->SysWin1->SysSetupWin->hDropdForeColor,ind4);
   \   0000093C   000095E5           LDR      R0,[R5, #+0]
   \   00000940   0410A0E1           MOV      R1,R4
   \   00000944   580090E5           LDR      R0,[R0, #+88]
   \   00000948   7C0090E5           LDR      R0,[R0, #+124]
   \   0000094C   F404D0E1           LDRSH    R0,[R0, #+68]
   \   00000950   ........           _BLF     DROPDOWN_SetSel,??DROPDOWN_SetSel??rA
   \   00000954   040000EA           B        ??cbSysWin_11
    356                  }
    357                  break;
    358              case WM_INIT_DIALOG:
    359                  SystemWindow->SysWin1->SysSetupWin->FirstTime = true;
   \                     ??cbSysWin_12:
   \   00000958   000095E5           LDR      R0,[R5, #+0]
   \   0000095C   0110A0E3           MOV      R1,#+1
   \   00000960   580090E5           LDR      R0,[R0, #+88]
   \   00000964   7C0090E5           LDR      R0,[R0, #+124]
   \   00000968   2810C0E5           STRB     R1,[R0, #+40]
   \                     ??cbSysWin_11:
   \   0000096C   A8D08DE2           ADD      SP,SP,#+168
   \   00000970   F041BDE8           POP      {R4-R8,LR}
   \   00000974   1EFF2FE1           BX       LR
    360                  break;
    361              case MESSAGE_PINCODE_RETURN:
    362                  {
    363                      int ValueId = pMsg->hWinSrc;
    364                      AnsiString StringBuf =(char*)pMsg->Data.p;
   \                     ??cbSysWin_13:
   \   00000978   081098E5           LDR      R1,[R8, #+8]
   \   0000097C   0D00A0E1           MOV      R0,SP
   \   00000980   ........           _BLF     ??AnsiString_1,??AnsiString??rA_1
    365                      switch ( ValueId ) {
   \   00000984   5D6F56E2           SUBS     R6,R6,#+372
   \   00000988   0600000A           BEQ      ??cbSysWin_14
   \   0000098C   036056E2           SUBS     R6,R6,#+3
   \   00000990   1700000A           BEQ      ??cbSysWin_15
   \   00000994   016056E2           SUBS     R6,R6,#+1
   \   00000998   4500000A           BEQ      ??cbSysWin_16
   \   0000099C   016056E2           SUBS     R6,R6,#+1
   \   000009A0   5600000A           BEQ      ??cbSysWin_17
   \   000009A4   680000EA           B        ??cbSysWin_18
    366                      case GUI_ID_BUTTON4:
    367                          SystemWindow->SysWin1->SysSetupWin->ChangePinCode(StringBuf);
   \                     ??cbSysWin_14:
   \   000009A8   0020A0E3           MOV      R2,#+0
   \   000009AC   0010A0E3           MOV      R1,#+0
   \   000009B0   54008DE2           ADD      R0,SP,#+84
   \   000009B4   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000009B8   ........           LDR      R0,??DataTable46  ;; ??npos
   \   000009BC   0020A0E3           MOV      R2,#+0
   \   000009C0   003090E5           LDR      R3,[R0, #+0]
   \   000009C4   0D10A0E1           MOV      R1,SP
   \   000009C8   54008DE2           ADD      R0,SP,#+84
   \   000009CC   ........           _BLF     ??assign,??assign??rA
   \   000009D0   000095E5           LDR      R0,[R5, #+0]
   \   000009D4   54108DE2           ADD      R1,SP,#+84
   \   000009D8   580090E5           LDR      R0,[R0, #+88]
   \   000009DC   7C0090E5           LDR      R0,[R0, #+124]
   \   000009E0   ........           BL       ??ChangePinCode
   \   000009E4   0020A0E3           MOV      R2,#+0
   \   000009E8   0110A0E3           MOV      R1,#+1
   \   000009EC   54008DE2           ADD      R0,SP,#+84
   \   000009F0   540000EA           B        ??cbSysWin_19
    368                          break;
    369                      case GUI_ID_BUTTON7:
    370                          if ( SystemWindow->SysWin1->SysSetupWin->CheckPinCode(StringBuf) ) {
   \                     ??cbSysWin_15:
   \   000009F4   0020A0E3           MOV      R2,#+0
   \   000009F8   0010A0E3           MOV      R1,#+0
   \   000009FC   70008DE2           ADD      R0,SP,#+112
   \   00000A00   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000A04   ........           LDR      R0,??DataTable46  ;; ??npos
   \   00000A08   0020A0E3           MOV      R2,#+0
   \   00000A0C   003090E5           LDR      R3,[R0, #+0]
   \   00000A10   0D10A0E1           MOV      R1,SP
   \   00000A14   70008DE2           ADD      R0,SP,#+112
   \   00000A18   ........           _BLF     ??assign,??assign??rA
   \   00000A1C   000095E5           LDR      R0,[R5, #+0]
   \   00000A20   70108DE2           ADD      R1,SP,#+112
   \   00000A24   580090E5           LDR      R0,[R0, #+88]
   \   00000A28   7C0090E5           LDR      R0,[R0, #+124]
   \   00000A2C   ........           BL       ??CheckPinCode
   \   00000A30   0040A0E1           MOV      R4,R0
   \   00000A34   0020A0E3           MOV      R2,#+0
   \   00000A38   0110A0E3           MOV      R1,#+1
   \   00000A3C   70008DE2           ADD      R0,SP,#+112
   \   00000A40   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000A44   000054E3           CMP      R4,#+0
   \   00000A48   3F00000A           BEQ      ??cbSysWin_18
    371                              int State;
    372          
    373                              if ( PROSystemData::HasConfigWritePermission ) {
   \   00000A4C   A0039FE5           LDR      R0,??cbSysWin_20  ;; ??HasConfigWritePermission
   \   00000A50   0000D0E5           LDRB     R0,[R0, #+0]
   \   00000A54   000050E3           CMP      R0,#+0
    374                                  State = C_DISABLE;
   \   00000A58   6510A013           MOVNE    R1,#+101
    375                              } else {
    376                                  State = C_ENABLE;
   \   00000A5C   6410A003           MOVEQ    R1,#+100
    377                              }
    378                              LibPutValue(SVT_FORCE_WRITE_CONFIG, PROSystemData::TXUSystemData, FindKeyWord(State), true);
   \   00000A60   38008DE2           ADD      R0,SP,#+56
   \   00000A64   ........           _BLF     ??FindKeyWord,??FindKeyWord??rA
   \   00000A68   0000E0E3           MVN      R0,#+0
   \   00000A6C   01002DE9           PUSH     {R0}
   \   00000A70   01002DE9           PUSH     {R0}
   \   00000A74   0000A0E3           MOV      R0,#+0
   \   00000A78   01002DE9           PUSH     {R0}
   \   00000A7C   01002DE9           PUSH     {R0}
   \   00000A80   ........           LDR      R0,??DataTable42  ;; ??TXUSystemData
   \   00000A84   0130A0E3           MOV      R3,#+1
   \   00000A88   001090E5           LDR      R1,[R0, #+0]
   \   00000A8C   48208DE2           ADD      R2,SP,#+72
   \   00000A90   9200A0E3           MOV      R0,#+146
   \   00000A94   500E80E3           ORR      R0,R0,#0x500
   \   00000A98   ........           _BLF     ??LibPutValue_1,??LibPutValue??rA_1
   \   00000A9C   0020A0E3           MOV      R2,#+0
   \   00000AA0   0110A0E3           MOV      R1,#+1
   \   00000AA4   48008DE2           ADD      R0,SP,#+72
   \   00000AA8   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000AAC   10D08DE2           ADD      SP,SP,#+16
   \   00000AB0   250000EA           B        ??cbSysWin_18
    379                          }
    380                          break;
    381                      case GUI_ID_BUTTON8:
    382                          SystemWindow->SysWin1->SysSetupWin->FirstNewPinCode(StringBuf);
   \                     ??cbSysWin_16:
   \   00000AB4   0020A0E3           MOV      R2,#+0
   \   00000AB8   0010A0E3           MOV      R1,#+0
   \   00000ABC   8C008DE2           ADD      R0,SP,#+140
   \   00000AC0   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000AC4   ........           LDR      R0,??DataTable46  ;; ??npos
   \   00000AC8   0020A0E3           MOV      R2,#+0
   \   00000ACC   003090E5           LDR      R3,[R0, #+0]
   \   00000AD0   0D10A0E1           MOV      R1,SP
   \   00000AD4   8C008DE2           ADD      R0,SP,#+140
   \   00000AD8   ........           _BLF     ??assign,??assign??rA
   \   00000ADC   000095E5           LDR      R0,[R5, #+0]
   \   00000AE0   8C108DE2           ADD      R1,SP,#+140
   \   00000AE4   580090E5           LDR      R0,[R0, #+88]
   \   00000AE8   7C0090E5           LDR      R0,[R0, #+124]
   \   00000AEC   ........           BL       ??FirstNewPinCode
   \   00000AF0   0020A0E3           MOV      R2,#+0
   \   00000AF4   0110A0E3           MOV      R1,#+1
   \   00000AF8   8C008DE2           ADD      R0,SP,#+140
   \   00000AFC   110000EA           B        ??cbSysWin_19
    383                          break;
    384                      case GUI_ID_BUTTON9:
    385                          SystemWindow->SysWin1->SysSetupWin->SecondNewPinCode(StringBuf);
   \                     ??cbSysWin_17:
   \   00000B00   0020A0E3           MOV      R2,#+0
   \   00000B04   0010A0E3           MOV      R1,#+0
   \   00000B08   1C008DE2           ADD      R0,SP,#+28
   \   00000B0C   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000B10   ........           LDR      R0,??DataTable46  ;; ??npos
   \   00000B14   0020A0E3           MOV      R2,#+0
   \   00000B18   003090E5           LDR      R3,[R0, #+0]
   \   00000B1C   0D10A0E1           MOV      R1,SP
   \   00000B20   1C008DE2           ADD      R0,SP,#+28
   \   00000B24   ........           _BLF     ??assign,??assign??rA
   \   00000B28   000095E5           LDR      R0,[R5, #+0]
   \   00000B2C   1C108DE2           ADD      R1,SP,#+28
   \   00000B30   580090E5           LDR      R0,[R0, #+88]
   \   00000B34   7C0090E5           LDR      R0,[R0, #+124]
   \   00000B38   ........           BL       ??SecondNewPinCode
   \   00000B3C   0020A0E3           MOV      R2,#+0
   \   00000B40   0110A0E3           MOV      R1,#+1
   \   00000B44   1C008DE2           ADD      R0,SP,#+28
   \                     ??cbSysWin_19:
   \   00000B48   ........           _BLF     ??_Tidy,??_Tidy??rA
    386                          break;
    387                      }
    388                  }
   \                     ??cbSysWin_18:
   \   00000B4C   0020A0E3           MOV      R2,#+0
   \   00000B50   0110A0E3           MOV      R1,#+1
   \   00000B54   0D00A0E1           MOV      R0,SP
   \   00000B58   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000B5C   82FFFFEA           B        ??cbSysWin_11
    389                  break;
    390              case MESSAGE_KEYPAD_RETURN:
    391                  {
    392                      int ValueId = pMsg->hWinSrc;
    393                      AnsiString StringBuf =(char*)pMsg->Data.p;
   \                     ??cbSysWin_21:
   \   00000B60   081098E5           LDR      R1,[R8, #+8]
   \   00000B64   1C008DE2           ADD      R0,SP,#+28
   \   00000B68   ........           _BLF     ??AnsiString_1,??AnsiString??rA_1
    394                      if ( ValueId == GUI_ID_EDIT1 ) {
   \   00000B6C   0100A0E3           MOV      R0,#+1
   \   00000B70   400F80E3           ORR      R0,R0,#0x100
   \   00000B74   000056E1           CMP      R6,R0
   \   00000B78   0F00001A           BNE      ??cbSysWin_22
    395                          SystemWindow->SysWin1->SysSetupWin->SetScreenOffTime(StringBuf);
   \   00000B7C   0020A0E3           MOV      R2,#+0
   \   00000B80   0010A0E3           MOV      R1,#+0
   \   00000B84   0D00A0E1           MOV      R0,SP
   \   00000B88   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000B8C   ........           LDR      R0,??DataTable46  ;; ??npos
   \   00000B90   0020A0E3           MOV      R2,#+0
   \   00000B94   003090E5           LDR      R3,[R0, #+0]
   \   00000B98   1C108DE2           ADD      R1,SP,#+28
   \   00000B9C   0D00A0E1           MOV      R0,SP
   \   00000BA0   ........           _BLF     ??assign,??assign??rA
   \   00000BA4   000095E5           LDR      R0,[R5, #+0]
   \   00000BA8   0D10A0E1           MOV      R1,SP
   \   00000BAC   580090E5           LDR      R0,[R0, #+88]
   \   00000BB0   7C0090E5           LDR      R0,[R0, #+124]
   \   00000BB4   ........           BL       ??SetScreenOffTime
   \   00000BB8   110000EA           B        ??cbSysWin_23
    396                      }
    397                      if ( ValueId == GUI_ID_EDIT2 ) {
   \                     ??cbSysWin_22:
   \   00000BBC   010080E2           ADD      R0,R0,#+1
   \   00000BC0   000056E1           CMP      R6,R0
   \   00000BC4   1200001A           BNE      ??cbSysWin_24
    398                          SystemWindow->SysWin1->SysSetupWin->SetAlarmOffTime(StringBuf);
   \   00000BC8   0020A0E3           MOV      R2,#+0
   \   00000BCC   0010A0E3           MOV      R1,#+0
   \   00000BD0   0D00A0E1           MOV      R0,SP
   \   00000BD4   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000BD8   ........           LDR      R0,??DataTable46  ;; ??npos
   \   00000BDC   0020A0E3           MOV      R2,#+0
   \   00000BE0   003090E5           LDR      R3,[R0, #+0]
   \   00000BE4   1C108DE2           ADD      R1,SP,#+28
   \   00000BE8   0D00A0E1           MOV      R0,SP
   \   00000BEC   ........           _BLF     ??assign,??assign??rA
   \   00000BF0   000095E5           LDR      R0,[R5, #+0]
   \   00000BF4   0D10A0E1           MOV      R1,SP
   \   00000BF8   580090E5           LDR      R0,[R0, #+88]
   \   00000BFC   7C0090E5           LDR      R0,[R0, #+124]
   \   00000C00   ........           BL       ??SetAlarmOffTime
   \                     ??cbSysWin_23:
   \   00000C04   0020A0E3           MOV      R2,#+0
   \   00000C08   0110A0E3           MOV      R1,#+1
   \   00000C0C   0D00A0E1           MOV      R0,SP
   \   00000C10   ........           _BLF     ??_Tidy,??_Tidy??rA
    399                      }
    400                  }
   \                     ??cbSysWin_24:
   \   00000C14   0020A0E3           MOV      R2,#+0
   \   00000C18   0110A0E3           MOV      R1,#+1
   \   00000C1C   1C008DE2           ADD      R0,SP,#+28
   \   00000C20   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000C24   000095E5           LDR      R0,[R5, #+0]
   \   00000C28   580090E5           LDR      R0,[R0, #+88]
   \   00000C2C   7C1090E5           LDR      R1,[R0, #+124]
   \   00000C30   8410D1E5           LDRB     R1,[R1, #+132]
   \   00000C34   000051E3           CMP      R1,#+0
   \   00000C38   4BFFFF1A           BNE      ??cbSysWin_11
    401                  if ( !SystemWindow->SysWin1->SysSetupWin->Closed ) {
    402                      SystemWindow->SysWin1->SysSetupWin->UpdateSysWin();
   \   00000C3C   7C0090E5           LDR      R0,[R0, #+124]
   \   00000C40   ........           BL       ??UpdateSysWin
   \   00000C44   48FFFFEA           B        ??cbSysWin_11
    403                  }
    404                  break;
    405              case WM_TOUCH_CHILD:
    406                  {
    407                      Id    = WM_GetId(pMsg->hWinSrc);    /* Id of widget */
   \                     ??cbSysWin_25:
   \   00000C48   0600A0E1           MOV      R0,R6
   \   00000C4C   ........           _BLF     WM_GetId,??WM_GetId??rA
   \   00000C50   0060A0E1           MOV      R6,R0
    408                      switch ( Id ) {
   \   00000C54   0110A0E3           MOV      R1,#+1
   \   00000C58   401F81E3           ORR      R1,R1,#0x100
   \   00000C5C   010050E1           CMP      R0,R1
   \   00000C60   0300000A           BEQ      ??cbSysWin_26
   \   00000C64   011081E2           ADD      R1,R1,#+1
   \   00000C68   010050E1           CMP      R0,R1
   \   00000C6C   0900000A           BEQ      ??cbSysWin_27
   \   00000C70   3DFFFFEA           B        ??cbSysWin_11
    409                      case GUI_ID_EDIT1:
    410                          KeyBoard->ExecKeyBoardNum(WM_GetClientWindow(hWin),L_WORD666,Id);//"Screen saver time, min."
   \                     ??cbSysWin_26:
   \   00000C74   0700A0E1           MOV      R0,R7
   \   00000C78   ........           _BLF     WM_GetClientWindow,??WM_GetClientWindow??rA
   \   00000C7C   0630A0E1           MOV      R3,R6
   \   00000C80   9A20A0E3           MOV      R2,#+154
   \                     ??cbSysWin_28:
   \   00000C84   0010A0E1           MOV      R1,R0
   \   00000C88   000094E5           LDR      R0,[R4, #+0]
   \   00000C8C   802F82E3           ORR      R2,R2,#0x200
   \   00000C90   ........           _BLF     ??ExecKeyBoardNum,??ExecKeyBoardNum??rA
   \   00000C94   34FFFFEA           B        ??cbSysWin_11
    411                          break;
    412                      case GUI_ID_EDIT2:
    413                          KeyBoard->ExecKeyBoardNum(WM_GetClientWindow(hWin),L_WORD667,Id);//Alarm delay time, sec.
   \                     ??cbSysWin_27:
   \   00000C98   0700A0E1           MOV      R0,R7
   \   00000C9C   ........           _BLF     WM_GetClientWindow,??WM_GetClientWindow??rA
   \   00000CA0   0630A0E1           MOV      R3,R6
   \   00000CA4   9B20A0E3           MOV      R2,#+155
   \   00000CA8   F5FFFFEA           B        ??cbSysWin_28
    414                          break;
    415                      }
    416                  }
    417                  break;
    418              case WM_NOTIFY_PARENT:
    419                  {
    420                      Id    = WM_GetId(pMsg->hWinSrc);    /* Id of widget */
   \                     ??cbSysWin_29:
   \   00000CAC   0600A0E1           MOV      R0,R6
   \   00000CB0   ........           _BLF     WM_GetId,??WM_GetId??rA
   \   00000CB4   0060A0E1           MOV      R6,R0
    421                      NCode = pMsg->Data.v;               /* Notification code */
    422                      switch ( NCode ) {
   \   00000CB8   080098E5           LDR      R0,[R8, #+8]
   \   00000CBC   010050E2           SUBS     R0,R0,#+1
   \   00000CC0   0D00000A           BEQ      ??cbSysWin_30
   \   00000CC4   010050E2           SUBS     R0,R0,#+1
   \   00000CC8   3C00000A           BEQ      ??cbSysWin_31
   \   00000CCC   020050E2           SUBS     R0,R0,#+2
   \   00000CD0   25FFFF1A           BNE      ??cbSysWin_11
    423                      case WM_NOTIFICATION_SEL_CHANGED:
    424                          {
    425                              switch ( Id ) {
   \   00000CD4   600F56E2           SUBS     R0,R6,#+384
   \   00000CD8   940E5012           SUBSNE   R0,R0,#+2368
   \   00000CDC   22FFFF1A           BNE      ??cbSysWin_11
    426                              case GUI_ID_DROPDOWN0:
    427                              case GUI_ID_DROPDOWN4:
    428                                  SystemWindow->SysWin1->SysSetupWin->SetAppColor(hWin,Id);
   \   00000CE0   000095E5           LDR      R0,[R5, #+0]
   \   00000CE4   0620A0E1           MOV      R2,R6
   \   00000CE8   580090E5           LDR      R0,[R0, #+88]
   \   00000CEC   0710A0E1           MOV      R1,R7
   \   00000CF0   7C0090E5           LDR      R0,[R0, #+124]
   \   00000CF4   ........           BL       ??SetAppColor
   \   00000CF8   1BFFFFEA           B        ??cbSysWin_11
    429                                  break;
    430                              }
    431                          }
    432                          break;
    433                      case WM_NOTIFICATION_CLICKED:    /* React only if released */
    434                          switch ( Id ) {
   \                     ??cbSysWin_30:
   \   00000CFC   5C0F46E2           SUB      R0,R6,#+368
   \   00000D00   070050E3           CMP      R0,#+7
   \   00000D04   18FFFF8A           BHI      ??cbSysWin_11
   \   00000D08   021F8FE2           ADR      R1,??cbSysWin_2
   \   00000D0C   8000A0E1           MOV      R0,R0, LSL #+1
   \   00000D10   F01091E1           LDRSH    R1,[R1, R0]
   \   00000D14   01F18FE0           ADD      PC,PC,R1, LSL #+2
   \                     ??cbSysWin_2:
   \   00000D18   030014FF0600       DC16     +3,+65300,+6,+9
   \              0900        
   \   00000D20   15001A000B00       DC16     +21,+26,+11,+13
   \              0D00        
    435                          case GUI_ID_BUTTON0: /* TestBuzzer Button */
    436          #ifdef WIN32
    437                              SystemWindow->SysWin1->SysSetupWin->HoldSound = true;
    438                              SystemWindow->SysWin1->SysSetupWin->MakeSound();
    439          #else
    440                              ANPRO10_SendBuzzerTest(BUZZER_TEST_PRESSED);
   \                     ??cbSysWin_32:
   \   00000D28   0100A0E3           MOV      R0,#+1
   \                     ??cbSysWin_33:
   \   00000D2C   ........           _BLF     ??ANPRO10_SendBuzzerTest,??ANPRO10_SendBuzzerTest??rA
   \   00000D30   0DFFFFEA           B        ??cbSysWin_11
    441          #endif
    442                              break;
    443                          case GUI_ID_BUTTON2:
    444                              LCD_BACKLIGHT_ADJUST(-10);  // Up
   \                     ??cbSysWin_34:
   \   00000D34   0900E0E3           MVN      R0,#+9
   \                     ??cbSysWin_35:
   \   00000D38   ........           _BLF     ??LCD_BackLightAdjust,??LCD_BackLightAdjust??rA
   \   00000D3C   0AFFFFEA           B        ??cbSysWin_11
    445                              break;
    446                          case GUI_ID_BUTTON3:
    447                              LCD_BACKLIGHT_ADJUST(10); // Down
   \                     ??cbSysWin_36:
   \   00000D40   0A00A0E3           MOV      R0,#+10
   \   00000D44   FBFFFFEA           B        ??cbSysWin_35
    448                              break;
    449                          case GUI_ID_BUTTON6:
    450          #ifdef S2TXU
    451                              SetFactoryDefaults();
   \                     ??cbSysWin_37:
   \   00000D48   ........           _BLF     ??SetFactoryDefaults,??SetFactoryDefaults??rA
   \   00000D4C   06FFFFEA           B        ??cbSysWin_11
    452          #endif
    453                              break;
    454          
    455                          case GUI_ID_BUTTON7:
    456                              KeyBoard->ExecKeyBoardPinCode(WM_GetClientWindow(hWin),L_WORD150,Id);//"Enter old pin code:"
   \                     ??cbSysWin_38:
   \   00000D50   0700A0E1           MOV      R0,R7
   \   00000D54   ........           _BLF     WM_GetClientWindow,??WM_GetClientWindow??rA
   \   00000D58   0630A0E1           MOV      R3,R6
   \   00000D5C   9620A0E3           MOV      R2,#+150
   \                     ??cbSysWin_39:
   \   00000D60   0010A0E1           MOV      R1,R0
   \   00000D64   000094E5           LDR      R0,[R4, #+0]
   \   00000D68   ........           _BLF     ??ExecKeyBoardPinCode,??ExecKeyBoardPinCode??rA
   \   00000D6C   FEFEFFEA           B        ??cbSysWin_11
    457                              break;
    458                          case GUI_ID_BUTTON4: /* Change pin code */
    459                              KeyBoard->ExecKeyBoardPinCode(WM_GetClientWindow(hWin),L_WORD668,Id);//"Enter old pin code:"
   \                     ??cbSysWin_40:
   \   00000D70   0700A0E1           MOV      R0,R7
   \   00000D74   ........           _BLF     WM_GetClientWindow,??WM_GetClientWindow??rA
   \   00000D78   0630A0E1           MOV      R3,R6
   \   00000D7C   A72FA0E3           MOV      R2,#+668
   \   00000D80   F6FFFFEA           B        ??cbSysWin_39
    460                              break;
    461                          case GUI_ID_BUTTON5: /* Calibrate screen */
    462                              PreviousWinID = CurrentWinID;
   \                     ??cbSysWin_41:
   \   00000D84   6C009FE5           LDR      R0,??cbSysWin_20+0x4  ;; CurrentWinID
   \   00000D88   6C109FE5           LDR      R1,??cbSysWin_20+0x8  ;; PreviousWinID
   \   00000D8C   002090E5           LDR      R2,[R0, #+0]
   \   00000D90   002081E5           STR      R2,[R1, #+0]
    463                              CurrentWinID = TDU_CALIBRATE_WIN;
   \   00000D94   8C10A0E3           MOV      R1,#+140
   \   00000D98   801E81E3           ORR      R1,R1,#0x800
   \   00000D9C   001080E5           STR      R1,[R0, #+0]
    464                              MainWindow->SetWindow(CurrentWinID);
   \   00000DA0   001090E5           LDR      R1,[R0, #+0]
   \   00000DA4   54009FE5           LDR      R0,??cbSysWin_20+0xC  ;; MainWindow
   \   00000DA8   000090E5           LDR      R0,[R0, #+0]
   \   00000DAC   ........           _BLF     ??SetWindow,??SetWindow??rA
    465                              CalibrateScreen->Exec();
   \   00000DB0   4C009FE5           LDR      R0,??cbSysWin_20+0x10  ;; CalibrateScreen
   \   00000DB4   000090E5           LDR      R0,[R0, #+0]
   \   00000DB8   ........           _BLF     ??Exec_1,??Exec??rA_1
   \   00000DBC   EAFEFFEA           B        ??cbSysWin_11
    466                              break;
    467                          }
    468                          break;
    469                      case WM_NOTIFICATION_RELEASED:      /* React only if released */
    470                          switch ( Id ) {
   \                     ??cbSysWin_31:
   \   00000DC0   050056E3           CMP      R6,#+5
   \   00000DC4   0300000A           BEQ      ??cbSysWin_42
   \   00000DC8   5C0F56E3           CMP      R6,#+368
   \   00000DCC   E6FEFF1A           BNE      ??cbSysWin_11
    471                          case GUI_ID_BUTTON0:    /* TestBuzzer Button */
    472                              {
    473          #ifdef WIN32
    474                                  SystemWindow->SysWin1->SysSetupWin->HoldSound = false;
    475          #else
    476                                  ANPRO10_SendBuzzerTest(BUZZER_TEST_RELEASED);
   \   00000DD0   0200A0E3           MOV      R0,#+2
   \   00000DD4   D4FFFFEA           B        ??cbSysWin_33
    477          #endif
    478                              }
    479                              break;
    480                          case GUI_ID_CLOSE:   /* Close Button */
    481                              SystemWindow->SysWin1->CloseSysWin();
   \                     ??cbSysWin_42:
   \   00000DD8   000095E5           LDR      R0,[R5, #+0]
   \   00000DDC   580090E5           LDR      R0,[R0, #+88]
   \   00000DE0   ........           _BLF     ??CloseSysWin,??CloseSysWin??rA
   \   00000DE4   E0FEFFEA           B        ??cbSysWin_11
    482                              break;
    483                          }
    484                          break;
    485                      }
    486                  }
    487                  break;
    488              default:
    489                  WM_DefaultProc(pMsg);
   \                     ??cbSysWin_3:
   \   00000DE8   0800A0E1           MOV      R0,R8
   \   00000DEC   ........           _BLF     WM_DefaultProc,??WM_DefaultProc??rA
    490                  break;
    491              }
    492          }
   \                     ??cbSysWin_43:
   \   00000DF0   DDFEFFEA           B        ??cbSysWin_11
   \                     ??cbSysWin_20:
   \   00000DF4   ........           DC32     ??HasConfigWritePermission
   \   00000DF8   ........           DC32     CurrentWinID
   \   00000DFC   ........           DC32     PreviousWinID
   \   00000E00   ........           DC32     MainWindow
   \   00000E04   ........           DC32     CalibrateScreen

   \                                 In segment DATA_ID, align 4, align-sorted
   \                     `?<Initializer for PWBackColorList>`:
   \   00000000   CE010000ED00       DC32 462, 237, 0, 463, 237, 4210752, 464, 237, 13882323, 465, 237
   \              000000000000
   \              CF010000ED00
   \              000040404000
   \              D0010000ED00
   \              0000D3D3D300
   \              D1010000ED00
   \              0000        
   \   0000002C   FFFFFF00D201       DC32 16777215, 466, 237, 16711680
   \              0000ED000000
   \              0000FF00    
   \                     `?<Initializer for PWTextColorList>`:
   \   0000003C   CE010000ED00       DC32 462, 237, 0, 463, 237, 4210752, 464, 237, 13882323, 465, 237
   \              000000000000
   \              CF010000ED00
   \              000040404000
   \              D0010000ED00
   \              0000D3D3D300
   \              D1010000ED00
   \              0000        
   \   00000068   FFFFFF003502       DC32 16777215, 565, 237, 65280
   \              0000ED000000
   \              00FF0000    
   \                     `?<Initializer for SizeofPWBackColorList>`:
   \   00000078   05000000           DC32 5
   \                     `?<Initializer for SizeofPWTextColorList>`:
   \   0000007C   05000000           DC32 5

   \                                 In segment DIFUNCT, align 4, keep-with-next, root
   \   00000000                      REQUIRE ?call_ctors
   \   00000000   ........           DC32    ??__sti__routine

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "Background">`:
   \   00000000   4261636B6772       DC8 "Background"
   \              6F756E6400  
   \   0000000B   00                 DC8 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant {462, 463, 464, 465, 466}>`:
   \   00000000   CE010000CF01       DC32 462, 463, 464, 465, 466
   \              0000D0010000
   \              D1010000D201
   \              0000        

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant {462, 463, 464, 465, 565}>`:
   \   00000000   CE010000CF01       DC32 462, 463, 464, 465, 565
   \              0000D0010000
   \              D10100003502
   \              0000        

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant {{2195, 0, 54}, {5, 0, 18}, {352, 0`:
   \   00000000   930800000000       DC32 2195, 0, 54, 5, 0, 18, 352, 0, 55, 353, 0, 56, 354, 0, 57, 355, 0
   \              000036000000
   \              050000000000
   \              000012000000
   \              600100000000
   \              000037000000
   \              610100000000
   \              000038000000
   \              620100000000
   \              000039000000
   \              630100000000
   \              0000        
   \   00000044   3A0000006401       DC32 58, 356, 0, 61, 357, 0, 62, 358, 0, 63, 359, 0, 64, 368, 0, 65
   \              000000000000
   \              3D0000006501
   \              000000000000
   \              3E0000006601
   \              000000000000
   \              3F0000006701
   \              000000000000
   \              400000007001
   \              000000000000
   \              41000000    
   \   00000084   740100000000       DC32 372, 0, 66, 373, 0, 67, 374, 0, 770, 375, 0, 920
   \              000042000000
   \              750100000000
   \              000043000000
   \              760100000000
   \              000002030000
   \              770100000000
   \              000098030000

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "Fault in insert of time!">`:
   \   00000000   4661756C7420       DC8 "Fault in insert of time!"
   \              696E20696E73
   \              657274206F66
   \              2074696D6521
   \              00          
   \   00000019   000000             DC8 0, 0, 0
   \   0000001C   54696D65206D       DC8 "Time must be between "
   \              757374206265
   \              206265747765
   \              656E2000    
   \   00000032   0000               DC8 0, 0
   \   00000034   20616E642000       DC8 " and "
   \   0000003A   0000               DC8 0, 0
   \   0000003C   206D696E7574       DC8 " minutes"
   \              657300      
   \   00000045   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "Message!">`:
   \   00000000   4D6573736167       DC8 "Message!"
   \              652100      
   \   00000009   000000             DC8 0, 0, 0
   \   0000000C   496E76616C69       DC8 "Invalid pin code."
   \              642070696E20
   \              636F64652E00
   \   0000001E   0000               DC8 0, 0
   \   00000020   496E76616C69       DC8 "Invalid pin code, must be 4 digit"
   \              642070696E20
   \              636F64652C20
   \              6D7573742062
   \              652034206469
   \              67697400    
   \   00000042   0000               DC8 0, 0
   \   00000044   4E6F74206571       DC8 "Not equal to first new pin code"
   \              75616C20746F
   \              206669727374
   \              206E65772070
   \              696E20636F64
   \              6500        

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "System setup page">`:
   \   00000000   53797374656D       DC8 "System setup page"
   \              207365747570
   \              207061676500
   \   00000012   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "Close">`:
   \   00000000   436C6F736500       DC8 "Close"
   \   00000006   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "Screen saver:">`:
   \   00000000   53637265656E       DC8 "Screen saver:"
   \              207361766572
   \              3A00        
   \   0000000E   0000               DC8 0, 0

   \                                 In segment DATA_C, align 1, align-sorted
   \                     `?<Constant "">`:
   \   00000000   00                 DC8 ""

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "minutes">`:
   \   00000000   6D696E757465       DC8 "minutes"
   \              7300        

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "Alarm off delay:">`:
   \   00000000   416C61726D20       DC8 "Alarm off delay:"
   \              6F6666206465
   \              6C61793A00  
   \   00000011   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "seconds">`:
   \   00000000   7365636F6E64       DC8 "seconds"
   \              7300        

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "Set color:">`:
   \   00000000   53657420636F       DC8 "Set color:"
   \              6C6F723A00  
   \   0000000B   00                 DC8 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "Foreground">`:
   \   00000000   466F72656772       DC8 "Foreground"
   \              6F756E6400  
   \   0000000B   00                 DC8 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "Brightness:">`:
   \   00000000   427269676874       DC8 "Brightness:"
   \              6E6573733A00

   \                                 In segment DATA_C, align 1, align-sorted
   \                     `?<Constant "/\\\\">`:
   \   00000000   2F5C00             DC8 "/\\"

   \                                 In segment DATA_C, align 1, align-sorted
   \                     `?<Constant "\\\\/">`:
   \   00000000   5C2F00             DC8 "\\/"

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "Buzzer /\\nLight test">`:
   \   00000000   42757A7A6572       DC8 "Buzzer /\012Light test"
   \              202F0A4C6967
   \              687420746573
   \              7400        

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "Change Pin code">`:
   \   00000000   4368616E6765       DC8 "Change Pin code"
   \              2050696E2063
   \              6F646500    

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "Calibrate screen">`:
   \   00000000   43616C696272       DC8 "Calibrate screen"
   \              617465207363
   \              7265656E00  
   \   00000011   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "Factory defaults">`:
   \   00000000   466163746F72       DC8 "Factory defaults"
   \              792064656661
   \              756C747300  
   \   00000011   000000             DC8 0, 0, 0

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void TDUSysSetupWin::delete ~TDUSysSetupWin(TDUSysSetupWin *)
   \                     `??delete ~TDUSysSetupWin`:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0040B0E1           MOVS     R4,R0
   \   00000008   0200000A           BEQ      `??delete ~TDUSysSetupWin_1`
   \   0000000C   ........           BL       `?~TDUSysSetupWin`
   \   00000010   0400A0E1           MOV      R0,R4
   \   00000014   ........           _BLF     `??operator delete`,`??operator delete??rA`
   \                     `??delete ~TDUSysSetupWin_1`:
   \   00000018   1040BDE8           POP      {R4,LR}
   \   0000001C   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   static __??Code32?? __intrinsic __code __interwork __atpcs void __sti__routine()
   \                     ??__sti__routine:
   \   00000000   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs TDUSysSetupWin &TDUSysSetupWin::new TDUSysSetupWin()
   \                     `??new TDUSysSetupWin`:
   \   00000000   00402DE9           PUSH     {LR}
   \   00000004   B000A0E3           MOV      R0,#+176
   \   00000008   ........           _BLF     `??operator new`,`??operator new??rA`
   \   0000000C   000050E3           CMP      R0,#+0
   \   00000010   0000000A           BEQ      `??new TDUSysSetupWin_1`
   \   00000014   ........           BL       ??TDUSysSetupWin
   \                     `??new TDUSysSetupWin_1`:
   \   00000018   0040BDE8           POP      {LR}
   \   0000001C   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable2:
   \   00000000   ........           DC32     TextColor

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable3:
   \   00000000   ........           DC32     SystemWindow

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable4:
   \   00000000   ........           DC32     BackColor

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable5:
   \   00000000   ........           DC32     PWBackColorList

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable13:
   \   00000000   ........           DC32     `?<Constant "Fault in insert of time!">`

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable26:
   \   00000000   ........           DC32     KeyBoard

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable31:
   \   00000000   ........           DC32     ??TXUSystemData

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable32:
   \   00000000   ........           DC32     `?<Constant "Message!">`

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable33:
   \   00000000   ........           DC32     ??npos

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable34:
   \   00000000   ........           DC32     OKMessageBox

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable35:
   \   00000000   ........           DC32     KeyBoard

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable36:
   \   00000000   ........           DC32     SystemWindow

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable37:
   \   00000000   ........           DC32     PWBackColorList

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable38:
   \   00000000   ........           DC32     BackColor

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable39:
   \   00000000   ........           DC32     TextColor

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable42:
   \   00000000   ........           DC32     ??TXUSystemData

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable46:
   \   00000000   ........           DC32     ??npos

   Maximum stack usage in bytes:

     Function                       CSTACK
     --------                       ------
     TDUSysSetupWin::ChangePinCode(AnsiString)
                                      148
     TDUSysSetupWin::CheckPinCode(AnsiString)
                                      144
     TDUSysSetupWin::ExecDialogBox(GUI_HWIN)
                                       20
     TDUSysSetupWin::FirstNewPinCode(AnsiString)
                                      128
     TDUSysSetupWin::GetDialogHandles()
                                        8
     TDUSysSetupWin::InitSysWin()     240
     TDUSysSetupWin::MakeSound()        0
     TDUSysSetupWin::SecondNewPinCode(AnsiString)
                                      140
     TDUSysSetupWin::SetAlarmOffTime(AnsiString)
                                      360
     TDUSysSetupWin::SetAppColor(GUI_HWIN, int)
                                       24
     TDUSysSetupWin::SetScreenOffTime(AnsiString)
                                      416
     TDUSysSetupWin::TDUSysSetupWin()
                                        8
     TDUSysSetupWin::UpdateSysWin()    68
     TDUSysSetupWin::cbSysWin(WM_MESSAGE *)
                                      208
     TDUSysSetupWin::delete ~TDUSysSetupWin(TDUSysSetupWin *)
                                        8
     TDUSysSetupWin::new TDUSysSetupWin()
                                        4
     TDUSysSetupWin::~TDUSysSetupWin()
                                        8
     __sti__routine()                   0


   Segment part sizes:

     Function/Label                 Bytes
     --------------                 -----
     TDUSysSetupWin::~TDUSysSetupWin()
                                      64
     TDUSysSetupWin::TDUSysSetupWin()
                                      64
     PWBackColorList                 128
     TDUSysSetupWin::aDialogCreate   480
     TDUSysSetupWin::ExecDialogBox(GUI_HWIN)
                                     152
     TDUSysSetupWin::GetDialogHandles()
                                     192
     TDUSysSetupWin::InitSysWin()    336
     TDUSysSetupWin::UpdateSysWin()  176
     TDUSysSetupWin::SetAppColor(GUI_HWIN, int)
                                     184
     TDUSysSetupWin::SetScreenOffTime(AnsiString)
                                     936
     TDUSysSetupWin::SetAlarmOffTime(AnsiString)
                                     816
     TDUSysSetupWin::ChangePinCode(AnsiString)
                                     456
     TDUSysSetupWin::CheckPinCode(AnsiString)
                                     372
     TDUSysSetupWin::FirstNewPinCode(AnsiString)
                                     380
     TDUSysSetupWin::SecondNewPinCode(AnsiString)
                                     396
     TDUSysSetupWin::MakeSound()       4
     TDUSysSetupWin::cbSysWin(WM_MESSAGE *)
                                    3592
     ?<Initializer for PWBackColorList>
                                     128
     ?<Constant "Background">         12
     ?<Constant {462, 463, 464, 465, 466}>
                                      20
     ?<Constant {462, 463, 464, 465, 565}>
                                      20
     ?<Constant {{2195, 0, 54}, {5, 0, 18}, {352, 0
                                     180
     ?<Constant "Fault in insert of time!">
                                      72
     ?<Constant "Message!">          100
     ?<Constant "System setup page">
                                      20
     ?<Constant "Close">               8
     ?<Constant "Screen saver:">      16
     ?<Constant "">                    1
     ?<Constant "minutes">             8
     ?<Constant "Alarm off delay:">   20
     ?<Constant "seconds">             8
     ?<Constant "Set color:">         12
     ?<Constant "Foreground">         12
     ?<Constant "Brightness:">        12
     ?<Constant "/\\">                 3
     ?<Constant "\\/">                 3
     ?<Constant "Buzzer /\nLight test">
                                      20
     ?<Constant "Change Pin code">    16
     ?<Constant "Calibrate screen">   20
     ?<Constant "Factory defaults">   20
     TDUSysSetupWin::delete ~TDUSysSetupWin(TDUSysSetupWin *)
                                      32
     __sti__routine()                  4
     TDUSysSetupWin::new TDUSysSetupWin()
                                      32
     ??DataTable2                      4
     ??DataTable3                      4
     ??DataTable4                      4
     ??DataTable5                      4
     ??DataTable13                     4
     ??DataTable26                     4
     ??DataTable31                     4
     ??DataTable32                     4
     ??DataTable33                     4
     ??DataTable34                     4
     ??DataTable35                     4
     ??DataTable36                     4
     ??DataTable37                     4
     ??DataTable38                     4
     ??DataTable39                     4
     ??DataTable42                     4
     ??DataTable46                     4
      Others                         724

 
 8 964 bytes in segment CODE
 1 083 bytes in segment DATA_C
   128 bytes in segment DATA_I
   128 bytes in segment DATA_ID
     4 bytes in segment DIFUNCT
    12 bytes in segment INITTAB
 
 8 260 bytes of CODE  memory (+ 720 bytes shared)
 1 211 bytes of CONST memory
   128 bytes of DATA  memory

Errors: none
Warnings: none
