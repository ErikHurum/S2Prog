##############################################################################
#                                                                            #
# IAR ARM ANSI C/C++ Compiler V4.42A/W32               14/Sep/2022  15:15:21 #
# Copyright 1999-2005 IAR Systems. All rights reserved.                      #
#                                                                            #
#    Cpu mode        =  interwork                                            #
#    Endian          =  little                                               #
#    Stack alignment =  4                                                    #
#    Source file     =  D:\S2Prog\Shared\Src\PROPrinter.cpp                  #
#    Command line    =  D:\S2Prog\Shared\Src\PROPrinter.cpp --fpu None -D    #
#                       OS_LIBMODE_SP -D CPU_S3C2410 -D OS_RAMVECT=0 -D      #
#                       OS_UART=-1 -D S2TXU -D USE_LZO=1 -D __ARM_LIBRARY__  #
#                       -D WATCHDOG=1 -D NETWORK=1 -lCN                      #
#                       D:\S2Prog\TXU\Debug\List\ -o                         #
#                       D:\S2Prog\TXU\Debug\Obj\ -z9 --debug --cpu_mode arm  #
#                       --endian little --cpu ARM920T --stack_align 4        #
#                       --interwork -e --enable_multibytes --eec++           #
#                       --dlib_config "C:\Program Files (x86)\IAR            #
#                       Systems\Embedded Workbench                           #
#                       4.0\arm\LIB\dl4tpainl8n.h" -I                        #
#                       D:\S2Prog\TXU\GUI\CORE\ -I D:\S2Prog\TXU\GUI\WM\ -I  #
#                       D:\S2Prog\TXU\GUI\WIDGET\ -I D:\S2Prog\TXU\CONFIG\   #
#                       -I D:\S2Prog\TXU\INC\ -I D:\S2Prog\TXU\..\SHARED\INC #
#                       \ -I D:\S2Prog\TXU\..\SHARED\SRC\ -I                 #
#                       D:\S2Prog\TXU\..\SHARED\LZO\minilzo.210\ -I          #
#                       D:\S2Prog\TXU\lwip-1.4.1\src\include\ -I             #
#                       D:\S2Prog\TXU\lwip-1.4.1\src\include\ipv4\ -I        #
#                       D:\S2Prog\TXU\lwip-1.4.1\src\ -I                     #
#                       D:\S2Prog\TXU\..\SHARED\Database\ -I                 #
#                       D:\S2Prog\TXU\src\ -I "C:\Program Files (x86)\IAR    #
#                       Systems\Embedded Workbench 4.0\arm\INC\"             #
#                       --inline_threshold=2                                 #
#    List file       =  D:\S2Prog\TXU\Debug\List\PROPrinter.lst              #
#    Object file     =  D:\S2Prog\TXU\Debug\Obj\PROPrinter.r79               #
#                                                                            #
#                                                                            #
##############################################################################

D:\S2Prog\Shared\Src\PROPrinter.cpp
      1          #include "TSNIncludes.h"

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs string::string(string const &)
   \                     ??string:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
   \   0000000C   0020A0E3           MOV      R2,#+0
   \   00000010   0010A0E3           MOV      R1,#+0
   \   00000014   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000018   1C009FE5           LDR      R0,??string_1    ;; ??npos
   \   0000001C   0020A0E3           MOV      R2,#+0
   \   00000020   003090E5           LDR      R3,[R0, #+0]
   \   00000024   0510A0E1           MOV      R1,R5
   \   00000028   0400A0E1           MOV      R0,R4
   \   0000002C   ........           _BLF     ??assign,??assign??rA
   \   00000030   0400A0E1           MOV      R0,R4
   \   00000034   3040BDE8           POP      {R4,R5,LR}
   \   00000038   1EFF2FE1           BX       LR               ;; return
   \                     ??string_1:
   \   0000003C   ........           DC32     ??npos

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs _Tree_algobase<allocator<void>>::_Genptr _Tree_algobase<allocator<void>>::_DecP(_Tree_algobase<allocator<void>>::_Genptr)
   \                     ??_DecP:
   \   00000000   0D10D0E5           LDRB     R1,[R0, #+13]
   \   00000004   000051E3           CMP      R1,#+0
   \   00000008   08009015           LDRNE    R0,[R0, #+8]
   \   0000000C   1EFF2F11           BXNE     LR
   \   00000010   001090E5           LDR      R1,[R0, #+0]
   \   00000014   0D20D1E5           LDRB     R2,[R1, #+13]
   \   00000018   000052E3           CMP      R2,#+0
   \   0000001C   0700001A           BNE      ??_DecP_1
   \   00000020   000000EA           B        ??_DecP_2
   \                     ??_DecP_3:
   \   00000024   0010A0E1           MOV      R1,R0
   \                     ??_DecP_2:
   \   00000028   080091E5           LDR      R0,[R1, #+8]
   \   0000002C   0D20D0E5           LDRB     R2,[R0, #+13]
   \   00000030   000052E3           CMP      R2,#+0
   \   00000034   FAFFFF0A           BEQ      ??_DecP_3
   \   00000038   0100A0E1           MOV      R0,R1
   \   0000003C   1EFF2FE1           BX       LR
   \                     ??_DecP_1:
   \   00000040   041090E5           LDR      R1,[R0, #+4]
   \   00000044   0D20D1E5           LDRB     R2,[R1, #+13]
   \   00000048   000052E3           CMP      R2,#+0
   \   0000004C   1EFF2F11           BXNE     LR
   \   00000050   002091E5           LDR      R2,[R1, #+0]
   \   00000054   020050E1           CMP      R0,R2
   \   00000058   0100A0E1           MOV      R0,R1
   \   0000005C   F7FFFF0A           BEQ      ??_DecP_1
   \   00000060   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs _Tree_algobase<allocator<void>>::_Genptr _Tree_algobase<allocator<void>>::_IncP(_Tree_algobase<allocator<void>>::_Genptr)
   \                     ??_IncP:
   \   00000000   0D10D0E5           LDRB     R1,[R0, #+13]
   \   00000004   000051E3           CMP      R1,#+0
   \   00000008   1EFF2F11           BXNE     LR
   \   0000000C   081090E5           LDR      R1,[R0, #+8]
   \   00000010   0D20D1E5           LDRB     R2,[R1, #+13]
   \   00000014   000052E3           CMP      R2,#+0
   \   00000018   0700001A           BNE      ??_IncP_1
   \   0000001C   000000EA           B        ??_IncP_2
   \                     ??_IncP_3:
   \   00000020   0010A0E1           MOV      R1,R0
   \                     ??_IncP_2:
   \   00000024   000091E5           LDR      R0,[R1, #+0]
   \   00000028   0D20D0E5           LDRB     R2,[R0, #+13]
   \   0000002C   000052E3           CMP      R2,#+0
   \   00000030   FAFFFF0A           BEQ      ??_IncP_3
   \   00000034   060000EA           B        ??_IncP_4
   \                     ??_IncP_5:
   \   00000038   0100A0E1           MOV      R0,R1
   \                     ??_IncP_1:
   \   0000003C   041090E5           LDR      R1,[R0, #+4]
   \   00000040   0D20D1E5           LDRB     R2,[R1, #+13]
   \   00000044   000052E3           CMP      R2,#+0
   \   00000048   08209105           LDREQ    R2,[R1, #+8]
   \   0000004C   02005001           CMPEQ    R0,R2
   \   00000050   F8FFFF0A           BEQ      ??_IncP_5
   \                     ??_IncP_4:
   \   00000054   0100A0E1           MOV      R0,R1
   \   00000058   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void _Tree_algobase<allocator<void>>::_Clear()
   \                     ??_Clear:
   \   00000000   040080E5           STR      R0,[R0, #+4]
   \   00000004   000080E5           STR      R0,[R0, #+0]
   \   00000008   080080E5           STR      R0,[R0, #+8]
   \   0000000C   0110A0E3           MOV      R1,#+1
   \   00000010   0D10C0E5           STRB     R1,[R0, #+13]
   \   00000014   0C10C0E5           STRB     R1,[R0, #+12]
   \   00000018   0010A0E3           MOV      R1,#+0
   \   0000001C   101080E5           STR      R1,[R0, #+16]
   \   00000020   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void _Tree_algobase<allocator<void>>::_Rrotate(_Tree_algobase<allocator<void>>::_Genptr)
   \                     ??_Rrotate:
   \   00000000   002091E5           LDR      R2,[R1, #+0]
   \   00000004   083092E5           LDR      R3,[R2, #+8]
   \   00000008   003081E5           STR      R3,[R1, #+0]
   \   0000000C   083092E5           LDR      R3,[R2, #+8]
   \   00000010   0DC0D3E5           LDRB     R12,[R3, #+13]
   \   00000014   00005CE3           CMP      R12,#+0
   \   00000018   04108305           STREQ    R1,[R3, #+4]
   \   0000001C   043091E5           LDR      R3,[R1, #+4]
   \   00000020   043082E5           STR      R3,[R2, #+4]
   \   00000024   043090E5           LDR      R3,[R0, #+4]
   \   00000028   030051E1           CMP      R1,R3
   \   0000002C   04208005           STREQ    R2,[R0, #+4]
   \   00000030   0400000A           BEQ      ??_Rrotate_1
   \   00000034   040091E5           LDR      R0,[R1, #+4]
   \   00000038   083090E5           LDR      R3,[R0, #+8]
   \   0000003C   030051E1           CMP      R1,R3
   \   00000040   08208005           STREQ    R2,[R0, #+8]
   \   00000044   00208015           STRNE    R2,[R0, #+0]
   \                     ??_Rrotate_1:
   \   00000048   081082E5           STR      R1,[R2, #+8]
   \   0000004C   042081E5           STR      R2,[R1, #+4]
   \   00000050   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void _Tree_algobase<allocator<void>>::_Lrotate(_Tree_algobase<allocator<void>>::_Genptr)
   \                     ??_Lrotate:
   \   00000000   082091E5           LDR      R2,[R1, #+8]
   \   00000004   003092E5           LDR      R3,[R2, #+0]
   \   00000008   083081E5           STR      R3,[R1, #+8]
   \   0000000C   003092E5           LDR      R3,[R2, #+0]
   \   00000010   0DC0D3E5           LDRB     R12,[R3, #+13]
   \   00000014   00005CE3           CMP      R12,#+0
   \   00000018   04108305           STREQ    R1,[R3, #+4]
   \   0000001C   043091E5           LDR      R3,[R1, #+4]
   \   00000020   043082E5           STR      R3,[R2, #+4]
   \   00000024   043090E5           LDR      R3,[R0, #+4]
   \   00000028   030051E1           CMP      R1,R3
   \   0000002C   04208005           STREQ    R2,[R0, #+4]
   \   00000030   0400000A           BEQ      ??_Lrotate_1
   \   00000034   040091E5           LDR      R0,[R1, #+4]
   \   00000038   003090E5           LDR      R3,[R0, #+0]
   \   0000003C   030051E1           CMP      R1,R3
   \   00000040   00208005           STREQ    R2,[R0, #+0]
   \   00000044   08208015           STRNE    R2,[R0, #+8]
   \                     ??_Lrotate_1:
   \   00000048   001082E5           STR      R1,[R2, #+0]
   \   0000004C   042081E5           STR      R2,[R1, #+4]
   \   00000050   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void _Tree_algobase<allocator<void>>::_Insert(bool, _Tree_algobase<allocator<void>>::_Genptr, _Tree_algobase<allocator<void>>::_Genptr)
   \                     ??_Insert:
   \   00000000   F0402DE9           PUSH     {R4-R7,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   100094E5           LDR      R0,[R4, #+16]
   \   0000000C   0350A0E1           MOV      R5,R3
   \   00000010   010080E2           ADD      R0,R0,#+1
   \   00000014   100084E5           STR      R0,[R4, #+16]
   \   00000018   040052E1           CMP      R2,R4
   \   0000001C   0300001A           BNE      ??_Insert_2
   \   00000020   045084E5           STR      R5,[R4, #+4]
   \   00000024   005084E5           STR      R5,[R4, #+0]
   \                     ??_Insert_3:
   \   00000028   085084E5           STR      R5,[R4, #+8]
   \   0000002C   130000EA           B        ??_Insert_4
   \                     ??_Insert_2:
   \   00000030   000051E3           CMP      R1,#+0
   \   00000034   0500000A           BEQ      ??_Insert_5
   \   00000038   005082E5           STR      R5,[R2, #+0]
   \   0000003C   000094E5           LDR      R0,[R4, #+0]
   \   00000040   000052E1           CMP      R2,R0
   \   00000044   0D00001A           BNE      ??_Insert_4
   \   00000048   005084E5           STR      R5,[R4, #+0]
   \   0000004C   0B0000EA           B        ??_Insert_4
   \                     ??_Insert_5:
   \   00000050   085082E5           STR      R5,[R2, #+8]
   \   00000054   080094E5           LDR      R0,[R4, #+8]
   \   00000058   000052E1           CMP      R2,R0
   \   0000005C   0700001A           BNE      ??_Insert_4
   \   00000060   F0FFFFEA           B        ??_Insert_3
   \                     ??_Insert_6:
   \   00000064   0C70C0E5           STRB     R7,[R0, #+12]
   \   00000068   0C70C2E5           STRB     R7,[R2, #+12]
   \   0000006C   040095E5           LDR      R0,[R5, #+4]
   \   00000070   040090E5           LDR      R0,[R0, #+4]
   \   00000074   0C60C0E5           STRB     R6,[R0, #+12]
   \   00000078   040095E5           LDR      R0,[R5, #+4]
   \   0000007C   045090E5           LDR      R5,[R0, #+4]
   \                     ??_Insert_4:
   \   00000080   0170A0E3           MOV      R7,#+1
   \   00000084   040095E5           LDR      R0,[R5, #+4]
   \   00000088   0C10D0E5           LDRB     R1,[R0, #+12]
   \   0000008C   000051E3           CMP      R1,#+0
   \   00000090   2F00001A           BNE      ??_Insert_7
   \   00000094   041090E5           LDR      R1,[R0, #+4]
   \   00000098   0060A0E3           MOV      R6,#+0
   \   0000009C   001091E5           LDR      R1,[R1, #+0]
   \   000000A0   010050E1           CMP      R0,R1
   \   000000A4   041090E5           LDR      R1,[R0, #+4]
   \   000000A8   1400001A           BNE      ??_Insert_8
   \   000000AC   082091E5           LDR      R2,[R1, #+8]
   \   000000B0   0C10D2E5           LDRB     R1,[R2, #+12]
   \   000000B4   000051E3           CMP      R1,#+0
   \   000000B8   E9FFFF0A           BEQ      ??_Insert_6
   \   000000BC   081090E5           LDR      R1,[R0, #+8]
   \   000000C0   010055E1           CMP      R5,R1
   \   000000C4   0300001A           BNE      ??_Insert_9
   \   000000C8   0050A0E1           MOV      R5,R0
   \   000000CC   0510A0E1           MOV      R1,R5
   \   000000D0   0400A0E1           MOV      R0,R4
   \   000000D4   ........           _BLF     ??_Lrotate,??_Lrotate??rA
   \                     ??_Insert_9:
   \   000000D8   040095E5           LDR      R0,[R5, #+4]
   \   000000DC   0C70C0E5           STRB     R7,[R0, #+12]
   \   000000E0   040095E5           LDR      R0,[R5, #+4]
   \   000000E4   040090E5           LDR      R0,[R0, #+4]
   \   000000E8   0C60C0E5           STRB     R6,[R0, #+12]
   \   000000EC   040095E5           LDR      R0,[R5, #+4]
   \   000000F0   041090E5           LDR      R1,[R0, #+4]
   \   000000F4   0400A0E1           MOV      R0,R4
   \   000000F8   ........           _BLF     ??_Rrotate,??_Rrotate??rA
   \   000000FC   DFFFFFEA           B        ??_Insert_4
   \                     ??_Insert_8:
   \   00000100   002091E5           LDR      R2,[R1, #+0]
   \   00000104   0C10D2E5           LDRB     R1,[R2, #+12]
   \   00000108   000051E3           CMP      R1,#+0
   \   0000010C   D4FFFF0A           BEQ      ??_Insert_6
   \   00000110   001090E5           LDR      R1,[R0, #+0]
   \   00000114   010055E1           CMP      R5,R1
   \   00000118   0300001A           BNE      ??_Insert_10
   \   0000011C   0050A0E1           MOV      R5,R0
   \   00000120   0510A0E1           MOV      R1,R5
   \   00000124   0400A0E1           MOV      R0,R4
   \   00000128   ........           _BLF     ??_Rrotate,??_Rrotate??rA
   \                     ??_Insert_10:
   \   0000012C   040095E5           LDR      R0,[R5, #+4]
   \   00000130   0C70C0E5           STRB     R7,[R0, #+12]
   \   00000134   040095E5           LDR      R0,[R5, #+4]
   \   00000138   040090E5           LDR      R0,[R0, #+4]
   \   0000013C   0C60C0E5           STRB     R6,[R0, #+12]
   \   00000140   040095E5           LDR      R0,[R5, #+4]
   \   00000144   041090E5           LDR      R1,[R0, #+4]
   \   00000148   0400A0E1           MOV      R0,R4
   \   0000014C   ........           _BLF     ??_Lrotate,??_Lrotate??rA
   \   00000150   CAFFFFEA           B        ??_Insert_4
   \                     ??_Insert_7:
   \   00000154   040094E5           LDR      R0,[R4, #+4]
   \   00000158   0C70C0E5           STRB     R7,[R0, #+12]
   \   0000015C   F040BDE8           POP      {R4-R7,LR}
   \   00000160   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::_Pairib _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::insert(PRogramObjectBase *)
   \                     ??insert:
   \   00000000   F34C2DE9           PUSH     {R0,R1,R4-R7,R10,R11,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
   \   0000000C   040095E5           LDR      R0,[R5, #+4]
   \   00000010   0260A0E1           MOV      R6,R2
   \   00000014   05B0A0E1           MOV      R11,R5
   \   00000018   0170A0E3           MOV      R7,#+1
   \                     ??insert_1:
   \   0000001C   0D10D0E5           LDRB     R1,[R0, #+13]
   \   00000020   000051E3           CMP      R1,#+0
   \   00000024   0700001A           BNE      ??insert_2
   \   00000028   101090E5           LDR      R1,[R0, #+16]
   \   0000002C   00B0A0E1           MOV      R11,R0
   \   00000030   010056E1           CMP      R6,R1
   \   00000034   00009035           LDRCC    R0,[R0, #+0]
   \   00000038   0170A033           MOVCC    R7,#+1
   \   0000003C   08009025           LDRCS    R0,[R0, #+8]
   \   00000040   0070A023           MOVCS    R7,#+0
   \   00000044   F4FFFFEA           B        ??insert_1
   \                     ??insert_2:
   \   00000048   0B00A0E1           MOV      R0,R11
   \   0000004C   01A0A0E3           MOV      R10,#+1
   \   00000050   000057E3           CMP      R7,#+0
   \   00000054   0B00000A           BEQ      ??insert_3
   \   00000058   001095E5           LDR      R1,[R5, #+0]
   \   0000005C   010050E1           CMP      R0,R1
   \   00000060   0700001A           BNE      ??insert_4
   \   00000064   0630A0E1           MOV      R3,R6
   \   00000068   0B20A0E1           MOV      R2,R11
   \   0000006C   0110A0E3           MOV      R1,#+1
   \                     ??insert_5:
   \   00000070   0500A0E1           MOV      R0,R5
   \   00000074   ........           _BLF     ??_Insert_1,??_Insert??rA
   \   00000078   00008DE5           STR      R0,[SP, #+0]
   \   0000007C   04A0CDE5           STRB     R10,[SP, #+4]
   \   00000080   0A0000EA           B        ??insert_6
   \                     ??insert_4:
   \   00000084   ........           _BLF     ??_DecP,??_DecP??rA
   \                     ??insert_3:
   \   00000088   101090E5           LDR      R1,[R0, #+16]
   \   0000008C   060051E1           CMP      R1,R6
   \   00000090   0300002A           BCS      ??insert_7
   \   00000094   0630A0E1           MOV      R3,R6
   \   00000098   0B20A0E1           MOV      R2,R11
   \   0000009C   0710A0E1           MOV      R1,R7
   \   000000A0   F2FFFFEA           B        ??insert_5
   \                     ??insert_7:
   \   000000A4   00008DE5           STR      R0,[SP, #+0]
   \   000000A8   0010A0E3           MOV      R1,#+0
   \   000000AC   0410CDE5           STRB     R1,[SP, #+4]
   \                     ??insert_6:
   \   000000B0   0D00A0E1           MOV      R0,SP
   \   000000B4   030090E8           LDM      R0,{R0,R1}
   \   000000B8   030084E8           STM      R4,{R0,R1}
   \   000000BC   0400A0E1           MOV      R0,R4
   \   000000C0   F64CBDE8           POP      {R1,R2,R4-R7,R10,R11,LR}
   \   000000C4   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::_Erase(_Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::_Nodeptr)
   \                     ??_Erase:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
   \   0000000C   0560A0E1           MOV      R6,R5
   \   00000010   060000EA           B        ??_Erase_1
   \                     ??_Erase_2:
   \   00000014   081096E5           LDR      R1,[R6, #+8]
   \   00000018   0400A0E1           MOV      R0,R4
   \   0000001C   F7FFFFEB           BL       ??_Erase
   \   00000020   006096E5           LDR      R6,[R6, #+0]
   \   00000024   0500A0E1           MOV      R0,R5
   \   00000028   ........           _BLF     `??operator delete`,`??operator delete??rA`
   \   0000002C   0650A0E1           MOV      R5,R6
   \                     ??_Erase_1:
   \   00000030   0D00D6E5           LDRB     R0,[R6, #+13]
   \   00000034   000050E3           CMP      R0,#+0
   \   00000038   F5FFFF0A           BEQ      ??_Erase_2
   \   0000003C   7040BDE8           POP      {R4-R6,LR}
   \   00000040   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::iterator _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::_Insert(bool, _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::_Nodeptr, PRogramObjectBase *)
   \                     ??_Insert_1:
   \   00000000   F0412DE9           PUSH     {R4-R8,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
   \   0000000C   0260A0E1           MOV      R6,R2
   \   00000010   0370A0E1           MOV      R7,R3
   \   00000014   1400A0E3           MOV      R0,#+20
   \   00000018   ........           _BLF     `??operator new`,`??operator new??rA`
   \   0000001C   0080B0E1           MOVS     R8,R0
   \   00000020   0600000A           BEQ      ??_Insert_11
   \   00000024   004088E5           STR      R4,[R8, #+0]
   \   00000028   046088E5           STR      R6,[R8, #+4]
   \   0000002C   084088E5           STR      R4,[R8, #+8]
   \   00000030   0000A0E3           MOV      R0,#+0
   \   00000034   0C00C8E5           STRB     R0,[R8, #+12]
   \   00000038   0D00C8E5           STRB     R0,[R8, #+13]
   \   0000003C   107088E5           STR      R7,[R8, #+16]
   \                     ??_Insert_11:
   \   00000040   0830A0E1           MOV      R3,R8
   \   00000044   0620A0E1           MOV      R2,R6
   \   00000048   0510A0E1           MOV      R1,R5
   \   0000004C   0400A0E1           MOV      R0,R4
   \   00000050   ........           _BLF     ??_Insert,??_Insert??rA_1
   \   00000054   0800A0E1           MOV      R0,R8
   \   00000058   F041BDE8           POP      {R4-R8,LR}
   \   0000005C   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs set<PRogramObjectBase *>::~set()
   \                     `?~set`:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   041094E5           LDR      R1,[R4, #+4]
   \   0000000C   ........           _BLF     ??_Erase,??_Erase??rA
   \   00000010   0400A0E1           MOV      R0,R4
   \   00000014   ........           _BLF     ??_Clear,??_Clear??rA
   \   00000018   1040BDE8           POP      {R4,LR}
   \   0000001C   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void operator+(string const &, string const &)
   \                     `??operator+`:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   1CD04DE2           SUB      SP,SP,#+28
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   0250A0E1           MOV      R5,R2
   \   00000010   0D00A0E1           MOV      R0,SP
   \   00000014   ........           _BLF     ??string,??string??rA
   \   00000018   34109FE5           LDR      R1,`??operator+_2`  ;; ??npos
   \   0000001C   0020A0E3           MOV      R2,#+0
   \   00000020   003091E5           LDR      R3,[R1, #+0]
   \   00000024   0510A0E1           MOV      R1,R5
   \   00000028   ........           _BLF     ??append,??append??rA
   \   0000002C   0010A0E1           MOV      R1,R0
   \   00000030   0400A0E1           MOV      R0,R4
   \   00000034   ........           _BLF     ??string,??string??rA
   \   00000038   0020A0E3           MOV      R2,#+0
   \   0000003C   0110A0E3           MOV      R1,#+1
   \   00000040   0D00A0E1           MOV      R0,SP
   \   00000044   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000048   1CD08DE2           ADD      SP,SP,#+28
   \   0000004C   3040BDE8           POP      {R4,R5,LR}
   \   00000050   1EFF2FE1           BX       LR               ;; return
   \                     `??operator+_2`:
   \   00000054   ........           DC32     ??npos

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void operator+(string const &, char const *)
   \                     `??operator+_1`:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   1CD04DE2           SUB      SP,SP,#+28
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   0250A0E1           MOV      R5,R2
   \   00000010   0D00A0E1           MOV      R0,SP
   \   00000014   ........           _BLF     ??string,??string??rA
   \   00000018   0060A0E1           MOV      R6,R0
   \   0000001C   0500A0E1           MOV      R0,R5
   \   00000020   ........           _BLF     strlen,??strlen??rA
   \   00000024   0020A0E1           MOV      R2,R0
   \   00000028   0510A0E1           MOV      R1,R5
   \   0000002C   0600A0E1           MOV      R0,R6
   \   00000030   ........           _BLF     ??append_1,??append??rA_1
   \   00000034   0010A0E1           MOV      R1,R0
   \   00000038   0400A0E1           MOV      R0,R4
   \   0000003C   ........           _BLF     ??string,??string??rA
   \   00000040   0020A0E3           MOV      R2,#+0
   \   00000044   0110A0E3           MOV      R1,#+1
   \   00000048   0D00A0E1           MOV      R0,SP
   \   0000004C   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000050   1CD08DE2           ADD      SP,SP,#+28
   \   00000054   7040BDE8           POP      {R4-R6,LR}
   \   00000058   1EFF2FE1           BX       LR               ;; return
      2          #pragma hdrstop
      3          #ifdef BORLAND
      4          	#pragma package(smart_init)
      5          #endif
      6          
      7          #ifdef WIN32
      8          	#include "WinUart.h"
      9          #else
     10          	#include "SC2410Uart.h"
     11          	#include "ST16554Uart.h"
     12          #endif
     13          //---------------------------------------------------------------------------
     14          
     15          #ifdef S2TXU

   \                                 In segment DATA_Z, align 4, align-sorted
     16          OS_TASK* PROPrinter::PrinterTaskPtr         = NULL;
   \                     ??PrinterTaskPtr:
   \   00000000                      DS8 4
     17          #endif

   \                                 In segment DATA_Z, align 4, align-sorted
     18          set<PRogramObjectBase*>PROPrinter::ObjectSet;
   \                     ??ObjectSet:
   \   00000000                      DS8 24
     19          int PROPrinter::CurPrinterId                        = 0;
   \                     ??CurPrinterId:
   \   00000018                      DS8 4
     20          int PROPrinter::LogPrinterId                        = 0;
   \                     ??LogPrinterId:
   \   0000001C                      DS8 4
     21          PROPrinter *PROPrinter::LastDefPrinter  = NULL;
   \                     ??LastDefPrinter:
   \   00000020                      DS8 4
     22          //#ifdef S2TXU
     23          //OS_STACKPTR int PROPrinter::TaskStack[2024];
     24          //OS_TASK PROPrinter::TaskHandle;			 /* Task control blocks */
     25          //#endif
     26          #define PRN_BUF_SIZE	0x8FFF

   \                                 In segment CODE, align 4, keep-with-next
     27          PROPrinter::PROPrinter(int PortNo, int TxId, int TxAddr)
   \                     ??PROPrinter:
   \   00000000   F3412DE9           PUSH     {R0,R1,R4-R8,LR}
     28          {
     29          	ObjectSet.insert(this);
   \   00000004   ........           LDR      R8,??DataTable5  ;; ??ObjectSet
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   0150A0E1           MOV      R5,R1
   \   00000010   0260A0E1           MOV      R6,R2
   \   00000014   0370A0E1           MOV      R7,R3
   \   00000018   0110A0E3           MOV      R1,#+1
   \   0000001C   ........           _BLF     ??PRogramObjectBase,??PRogramObjectBase??rA
   \   00000020   ........           LDR      R0,??DataTable3  ;; ??__vtbl
   \   00000024   A40084E5           STR      R0,[R4, #+164]
   \   00000028   B80084E2           ADD      R0,R4,#+184
   \   0000002C   ........           _BLF     ??TSNMessageQ,??TSNMessageQ??rA
   \   00000030   0420A0E1           MOV      R2,R4
   \   00000034   0810A0E1           MOV      R1,R8
   \   00000038   0D00A0E1           MOV      R0,SP
   \   0000003C   ........           _BLF     ??insert,??insert??rA
     30          	IDNumber            = (C_PRO_PRINTER << 16 )+ObjectSet.size();
   \   00000040   100098E5           LDR      R0,[R8, #+16]
   \   00000044   4016A0E3           MOV      R1,#+67108864
   \   00000048   7F1881E3           ORR      R1,R1,#0x7F0000
   \   0000004C   000081E0           ADD      R0,R1,R0
   \   00000050   9C0084E5           STR      R0,[R4, #+156]
     31          	// Must be improved later
     32          	if ( !CurPrinterId ) {
   \   00000054   181098E5           LDR      R1,[R8, #+24]
   \   00000058   000051E3           CMP      R1,#+0
     33          		CurPrinterId        = IDNumber;
   \   0000005C   18008805           STREQ    R0,[R8, #+24]
     34          		LogPrinterId        = IDNumber;
   \   00000060   9C009405           LDREQ    R0,[R4, #+156]
   \   00000064   1C008805           STREQ    R0,[R8, #+28]
     35          	}
     36          	Type                = C_PRO_PRINTER;
   \   00000068   7F00A0E3           MOV      R0,#+127
   \   0000006C   400E80E3           ORR      R0,R0,#0x400
   \   00000070   A00084E5           STR      R0,[R4, #+160]
     37          	UnitID                  = TxId;
   \   00000074   C46084E5           STR      R6,[R4, #+196]
     38          	Address             = TxAddr;
   \   00000078   C87084E5           STR      R7,[R4, #+200]
     39          	PortNum             = PortNo;
   \   0000007C   CC5084E5           STR      R5,[R4, #+204]
     40          	LastDefPrinter  = this;
   \   00000080   204088E5           STR      R4,[R8, #+32]
     41          #ifdef S2TXU
     42          
     43          	Offline     = false;
   \   00000084   0050A0E3           MOV      R5,#+0
   \   00000088   0000A0E3           MOV      R0,#+0
   \   0000008C   A800C4E5           STRB     R0,[R4, #+168]
     44          	Progress    = 0;
   \   00000090   AC5084E5           STR      R5,[R4, #+172]
     45          	PrintBuf    = new char[PRN_BUF_SIZE];	 // See TSNMessageQ
   \   00000094   FF00A0E3           MOV      R0,#+255
   \   00000098   8F0C80E3           ORR      R0,R0,#0x8F00
   \   0000009C   ........           _BLF     `??operator new[]`,`??operator new[]??rA`
   \   000000A0   B00084E5           STR      R0,[R4, #+176]
     46          	PrintSize   = 0;
   \   000000A4   B45084E5           STR      R5,[R4, #+180]
     47          	//PrintBuffer	=(U8*)malloc(PRN_BUF_SIZE);
     48          	//OS_CreateMB(&PrintMailBox,1,PRN_BUF_SIZE,(char*)PrintBuffer);
     49          #else
     50          	PrintBuf    = NULL;
     51          #endif
     52          	// Should maybe add one HW-alarm
     53          	// This is special for the printer object because it's not configured
     54          	// other place
     55          }
   \   000000A8   0400A0E1           MOV      R0,R4
   \   000000AC   F641BDE8           POP      {R1,R2,R4-R8,LR}
   \   000000B0   1EFF2FE1           BX       LR               ;; return
     56          

   \                                 In segment CODE, align 4, keep-with-next
     57          PROPrinter::~PROPrinter(void)
     58          {
   \                     `?~PROPrinter`:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
   \   0000000C   000054E3           CMP      R4,#+0
   \   00000010   0E00000A           BEQ      `?~PROPrinter_1`
   \   00000014   ........           LDR      R0,??DataTable3  ;; ??__vtbl
   \   00000018   A40084E5           STR      R0,[R4, #+164]
     59          	if ( PrintBuf )	delete [] PrintBuf;
   \   0000001C   B00094E5           LDR      R0,[R4, #+176]
   \   00000020   000050E3           CMP      R0,#+0
   \   00000024   0000000A           BEQ      `?~PROPrinter_2`
   \   00000028   ........           _BLF     `??operator delete[]`,`??operator delete[]??rA`
     60          
     61          }
   \                     `?~PROPrinter_2`:
   \   0000002C   B80084E2           ADD      R0,R4,#+184
   \   00000030   ........           _BLF     `?~TSNMessageQ`,`?~TSNMessageQ??rA`
   \   00000034   0010A0E3           MOV      R1,#+0
   \   00000038   0400A0E1           MOV      R0,R4
   \   0000003C   ........           _BLF     `?~PRogramObjectBase`,`?~PRogramObjectBase??rA`
   \   00000040   010015E3           TST      R5,#0x1
   \   00000044   0100000A           BEQ      `?~PROPrinter_1`
   \   00000048   0400A0E1           MOV      R0,R4
   \   0000004C   ........           _BLF     `??operator delete`,`??operator delete??rA`
   \                     `?~PROPrinter_1`:
   \   00000050   ........           B        ?Subroutine17

   \                                 In segment CODE, align 4, keep-with-next
   \                     ?Subroutine17:
   \   00000000   3040BDE8           POP      {R4,R5,LR}
   \   00000004   1EFF2FE1           BX       LR               ;; return
     62          
     63          
     64          ///////////////////////////////////////////////////////////////
     65          //
     66          // Routines for Saving of Settings
     67          //
     68          ///////////////////////////////////////////////////////////////
     69          

   \                                 In segment CODE, align 4, keep-with-next
     70          void PROPrinter::SaveSettings(TSNConfigString *SettingsString)
     71          {
   \                     ??SaveSettings:
   \   00000000   F0402DE9           PUSH     {R4-R7,LR}
   \   00000004   E0D04DE2           SUB      SP,SP,#+224
   \   00000008   0050A0E1           MOV      R5,R0
     72          	if ( IsModified || WriteAll ) {
   \   0000000C   0000D5E5           LDRB     R0,[R5, #+0]
   \   00000010   0140A0E1           MOV      R4,R1
   \   00000014   000050E3           CMP      R0,#+0
   \   00000018   60019F05           LDREQ    R0,??SaveSettings_1  ;; ??WriteAll
   \   0000001C   0000D005           LDRBEQ   R0,[R0, #+0]
   \   00000020   00005003           CMPEQ    R0,#+0
   \   00000024   5200000A           BEQ      ??SaveSettings_2
     73          		IsModified = false;
     74          		AnsiString LocalString;
     75          		LocalString +=TabStr1+KeyWord(Type)+CrLfStr;
   \   00000028   54619FE5           LDR      R6,??SaveSettings_1+0x4  ;; CrLfStr
   \   0000002C   0000A0E3           MOV      R0,#+0
   \   00000030   0000C5E5           STRB     R0,[R5, #+0]
   \   00000034   0D00A0E1           MOV      R0,SP
   \   00000038   ........           _BLF     ??AnsiString,??AnsiString??rA
   \   0000003C   A01095E5           LDR      R1,[R5, #+160]
   \   00000040   40519FE5           LDR      R5,??SaveSettings_1+0x8  ;; TabStr1
   \   00000044   54008DE2           ADD      R0,SP,#+84
   \   00000048   ........           _BLF     ??KeyWord,??KeyWord??rA
   \   0000004C   54208DE2           ADD      R2,SP,#+84
   \   00000050   0510A0E1           MOV      R1,R5
   \   00000054   38008DE2           ADD      R0,SP,#+56
   \   00000058   ........           _BLF     `??operator+`,`??operator+??rA`
   \   0000005C   0620A0E1           MOV      R2,R6
   \   00000060   38108DE2           ADD      R1,SP,#+56
   \   00000064   1C008DE2           ADD      R0,SP,#+28
   \   00000068   ........           _BLF     `??operator+`,`??operator+??rA`
   \   0000006C   18019FE5           LDR      R0,??SaveSettings_1+0xC  ;; ??npos
   \   00000070   0020A0E3           MOV      R2,#+0
   \   00000074   007090E5           LDR      R7,[R0, #+0]
   \   00000078   1C108DE2           ADD      R1,SP,#+28
   \   0000007C   0730A0E1           MOV      R3,R7
   \   00000080   0D00A0E1           MOV      R0,SP
   \   00000084   ........           _BLF     ??append,??append??rA
   \   00000088   0020A0E3           MOV      R2,#+0
   \   0000008C   0110A0E3           MOV      R1,#+1
   \   00000090   1C008DE2           ADD      R0,SP,#+28
   \   00000094   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000098   0020A0E3           MOV      R2,#+0
   \   0000009C   0110A0E3           MOV      R1,#+1
   \   000000A0   38008DE2           ADD      R0,SP,#+56
   \   000000A4   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000000A8   0020A0E3           MOV      R2,#+0
   \   000000AC   0110A0E3           MOV      R1,#+1
   \   000000B0   54008DE2           ADD      R0,SP,#+84
   \   000000B4   ........           _BLF     ??_Tidy,??_Tidy??rA
     76          		LocalString +=TabStr1+KeyWord(C_PRO_END)+CrLfStr;
   \   000000B8   FA1FA0E3           MOV      R1,#+1000
   \   000000BC   A8008DE2           ADD      R0,SP,#+168
   \   000000C0   ........           _BLF     ??KeyWord,??KeyWord??rA
   \   000000C4   A8208DE2           ADD      R2,SP,#+168
   \   000000C8   0510A0E1           MOV      R1,R5
   \   000000CC   8C008DE2           ADD      R0,SP,#+140
   \   000000D0   ........           _BLF     `??operator+`,`??operator+??rA`
   \   000000D4   0620A0E1           MOV      R2,R6
   \   000000D8   8C108DE2           ADD      R1,SP,#+140
   \   000000DC   70008DE2           ADD      R0,SP,#+112
   \   000000E0   ........           _BLF     `??operator+`,`??operator+??rA`
   \   000000E4   0730A0E1           MOV      R3,R7
   \   000000E8   0020A0E3           MOV      R2,#+0
   \   000000EC   70108DE2           ADD      R1,SP,#+112
   \   000000F0   0D00A0E1           MOV      R0,SP
   \   000000F4   ........           _BLF     ??append,??append??rA
   \   000000F8   0020A0E3           MOV      R2,#+0
   \   000000FC   0110A0E3           MOV      R1,#+1
   \   00000100   70008DE2           ADD      R0,SP,#+112
   \   00000104   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000108   0020A0E3           MOV      R2,#+0
   \   0000010C   0110A0E3           MOV      R1,#+1
   \   00000110   8C008DE2           ADD      R0,SP,#+140
   \   00000114   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000118   0020A0E3           MOV      R2,#+0
   \   0000011C   0110A0E3           MOV      R1,#+1
   \   00000120   A8008DE2           ADD      R0,SP,#+168
   \   00000124   ........           _BLF     ??_Tidy,??_Tidy??rA
     77          		LocalString += CrLfStr;
   \   00000128   0730A0E1           MOV      R3,R7
   \   0000012C   0020A0E3           MOV      R2,#+0
   \   00000130   0610A0E1           MOV      R1,R6
   \   00000134   0D00A0E1           MOV      R0,SP
   \   00000138   ........           _BLF     ??append,??append??rA
     78          		SettingsString->AddString(LocalString);
   \   0000013C   0D10A0E1           MOV      R1,SP
   \   00000140   C4008DE2           ADD      R0,SP,#+196
   \   00000144   ........           _BLF     ??string,??string??rA
   \   00000148   C4108DE2           ADD      R1,SP,#+196
   \   0000014C   0400A0E1           MOV      R0,R4
   \   00000150   ........           _BLF     ??AddString,??AddString??rA
   \   00000154   0020A0E3           MOV      R2,#+0
   \   00000158   0110A0E3           MOV      R1,#+1
   \   0000015C   C4008DE2           ADD      R0,SP,#+196
   \   00000160   ........           _BLF     ??_Tidy,??_Tidy??rA
     79          	}
   \   00000164   0020A0E3           MOV      R2,#+0
   \   00000168   0110A0E3           MOV      R1,#+1
   \   0000016C   0D00A0E1           MOV      R0,SP
   \   00000170   ........           _BLF     ??_Tidy,??_Tidy??rA
     80          }
   \                     ??SaveSettings_2:
   \   00000174   E0D08DE2           ADD      SP,SP,#+224
   \   00000178   F040BDE8           POP      {R4-R7,LR}
   \   0000017C   1EFF2FE1           BX       LR               ;; return
   \                     ??SaveSettings_1:
   \   00000180   ........           DC32     ??WriteAll
   \   00000184   ........           DC32     CrLfStr
   \   00000188   ........           DC32     TabStr1
   \   0000018C   ........           DC32     ??npos
     81          

   \                                 In segment CODE, align 4, keep-with-next
     82          bool PROPrinter::RestoreSettings(TSNConfigString *SettingsString)
     83          {
   \                     ??RestoreSettings:
   \   00000000   F04F2DE9           PUSH     {R4-R11,LR}
     84          	bool NoError = true;
     85          	int ErrorLine=0;
   \   00000004   EC929FE5           LDR      R9,??RestoreSettings_1  ;; NewLineStr
   \   00000008   ECA29FE5           LDR      R10,??RestoreSettings_1+0x4  ;; `?<Constant "Printer ">`
   \   0000000C   78DF4DE2           SUB      SP,SP,#+480
   \   00000010   0040A0E1           MOV      R4,R0
   \   00000014   0150A0E1           MOV      R5,R1
   \   00000018   0170A0E3           MOV      R7,#+1
   \   0000001C   0010A0E3           MOV      R1,#+0
   \   00000020   00108DE5           STR      R1,[SP, #+0]
   \   00000024   0180E0E1           MVN      R8,R1
     86          	int Key;
     87          	do {
     88          		AnsiString InputKeyWord= SettingsString->NextWord(ErrorLine);
   \                     ??RestoreSettings_2:
   \   00000028   0030A0E3           MOV      R3,#+0
   \   0000002C   0D20A0E1           MOV      R2,SP
   \   00000030   74108DE2           ADD      R1,SP,#+116
   \   00000034   0500A0E1           MOV      R0,R5
   \   00000038   ........           _BLF     ??NextWord,??NextWord??rA
     89          		if ( ErrorLine ) {
   \   0000003C   00009DE5           LDR      R0,[SP, #+0]
   \   00000040   000050E3           CMP      R0,#+0
   \   00000044   3900000A           BEQ      ??RestoreSettings_3
     90          			if ( ErrorLine != EOF ) {
   \   00000048   080050E1           CMP      R0,R8
   \   0000004C   9C00000A           BEQ      ??RestoreSettings_4
     91          				RestoreSettingsWarning((AnsiString)"Printer "+Name+":\nUnknown error started at line:"+(AnsiString)ErrorLine+NewLineStr);
   \   00000050   0010A0E1           MOV      R1,R0
   \   00000054   C8008DE2           ADD      R0,SP,#+200
   \   00000058   ........           _BLF     ??AnsiString_1,??AnsiString??rA_1
   \   0000005C   00B0A0E1           MOV      R11,R0
   \   00000060   0A10A0E1           MOV      R1,R10
   \   00000064   AC008DE2           ADD      R0,SP,#+172
   \   00000068   ........           _BLF     ??AnsiString_2,??AnsiString??rA_2
   \   0000006C   442084E2           ADD      R2,R4,#+68
   \   00000070   0010A0E1           MOV      R1,R0
   \   00000074   04008DE2           ADD      R0,SP,#+4
   \   00000078   ........           _BLF     `??operator+`,`??operator+??rA`
   \   0000007C   0C208AE2           ADD      R2,R10,#+12
   \   00000080   04108DE2           ADD      R1,SP,#+4
   \   00000084   58008DE2           ADD      R0,SP,#+88
   \   00000088   ........           _BLF     `??operator+_1`,`??operator+??rA_1`
   \   0000008C   0B20A0E1           MOV      R2,R11
   \   00000090   58108DE2           ADD      R1,SP,#+88
   \   00000094   3C008DE2           ADD      R0,SP,#+60
   \   00000098   ........           _BLF     `??operator+`,`??operator+??rA`
   \   0000009C   0920A0E1           MOV      R2,R9
   \   000000A0   3C108DE2           ADD      R1,SP,#+60
   \   000000A4   20008DE2           ADD      R0,SP,#+32
   \   000000A8   ........           _BLF     `??operator+`,`??operator+??rA`
   \   000000AC   20108DE2           ADD      R1,SP,#+32
   \   000000B0   90008DE2           ADD      R0,SP,#+144
   \   000000B4   ........           _BLF     ??AnsiString_3,??AnsiString??rA_3
   \   000000B8   ........           _BLF     ??RestoreSettingsWarning,??RestoreSettingsWarning??rA
   \   000000BC   0020A0E3           MOV      R2,#+0
   \   000000C0   0110A0E3           MOV      R1,#+1
   \   000000C4   90008DE2           ADD      R0,SP,#+144
   \   000000C8   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000000CC   0020A0E3           MOV      R2,#+0
   \   000000D0   0110A0E3           MOV      R1,#+1
   \   000000D4   20008DE2           ADD      R0,SP,#+32
   \   000000D8   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000000DC   0020A0E3           MOV      R2,#+0
   \   000000E0   0110A0E3           MOV      R1,#+1
   \   000000E4   3C008DE2           ADD      R0,SP,#+60
   \   000000E8   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000000EC   0020A0E3           MOV      R2,#+0
   \   000000F0   0110A0E3           MOV      R1,#+1
   \   000000F4   C8008DE2           ADD      R0,SP,#+200
   \   000000F8   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000000FC   0020A0E3           MOV      R2,#+0
   \   00000100   0110A0E3           MOV      R1,#+1
   \   00000104   58008DE2           ADD      R0,SP,#+88
   \   00000108   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   0000010C   0020A0E3           MOV      R2,#+0
   \   00000110   0110A0E3           MOV      R1,#+1
   \   00000114   04008DE2           ADD      R0,SP,#+4
   \   00000118   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   0000011C   0020A0E3           MOV      R2,#+0
   \   00000120   0110A0E3           MOV      R1,#+1
   \   00000124   AC008DE2           ADD      R0,SP,#+172
   \                     ??RestoreSettings_5:
   \   00000128   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   0000012C   640000EA           B        ??RestoreSettings_4
     92          			}
     93          		} else {
     94          			Key = FindConfigKey(InputKeyWord);
   \                     ??RestoreSettings_3:
   \   00000130   74108DE2           ADD      R1,SP,#+116
   \   00000134   04008DE2           ADD      R0,SP,#+4
   \   00000138   ........           _BLF     ??string,??string??rA
   \   0000013C   04008DE2           ADD      R0,SP,#+4
   \   00000140   ........           _BLF     ??FindConfigKey,??FindConfigKey??rA
   \   00000144   0060A0E1           MOV      R6,R0
   \   00000148   0020A0E3           MOV      R2,#+0
   \   0000014C   0110A0E3           MOV      R1,#+1
   \   00000150   04008DE2           ADD      R0,SP,#+4
   \   00000154   ........           _BLF     ??_Tidy,??_Tidy??rA
     95          			switch ( Key ) {
   \   00000158   FA0F56E3           CMP      R6,#+1000
   \   0000015C   5700000A           BEQ      ??RestoreSettings_6
   \   00000160   EA20A0E3           MOV      R2,#+234
   \   00000164   C02F82E3           ORR      R2,R2,#0x300
   \   00000168   020056E1           CMP      R6,R2
   \   0000016C   FB0F5613           CMPNE    R6,#+1004
   \   00000170   AF20A013           MOVNE    R2,#+175
   \   00000174   502E8213           ORRNE    R2,R2,#0x500
   \   00000178   02005611           CMPNE    R6,R2
   \   0000017C   640E5613           CMPNE    R6,#+1600
   \   00000180   9820A013           MOVNE    R2,#+152
   \   00000184   802E8213           ORRNE    R2,R2,#0x800
   \   00000188   02005611           CMPNE    R6,R2
   \   0000018C   B920A013           MOVNE    R2,#+185
   \   00000190   B02E8213           ORRNE    R2,R2,#0xB00
   \   00000194   02005611           CMPNE    R6,R2
   \   00000198   4700000A           BEQ      ??RestoreSettings_7
     96          			default:
     97          				NoError = false;
     98          				RestoreSettingsWarning((AnsiString)"Printer "+Name+":\nThe keyword " + InputKeyWord +" is not allowed here!! Line:"+(AnsiString)SettingsString->LineCount+NewLineStr);
   \   0000019C   1C1095E5           LDR      R1,[R5, #+28]
   \   000001A0   0070A0E3           MOV      R7,#+0
   \   000001A4   710F8DE2           ADD      R0,SP,#+452
   \   000001A8   ........           _BLF     ??AnsiString_1,??AnsiString??rA_1
   \   000001AC   00B0A0E1           MOV      R11,R0
   \   000001B0   0A10A0E1           MOV      R1,R10
   \   000001B4   6A0F8DE2           ADD      R0,SP,#+424
   \   000001B8   ........           _BLF     ??AnsiString_2,??AnsiString??rA_2
   \   000001BC   0010A0E1           MOV      R1,R0
   \   000001C0   442084E2           ADD      R2,R4,#+68
   \   000001C4   630F8DE2           ADD      R0,SP,#+396
   \   000001C8   ........           _BLF     `??operator+`,`??operator+??rA`
   \   000001CC   30208AE2           ADD      R2,R10,#+48
   \   000001D0   631F8DE2           ADD      R1,SP,#+396
   \   000001D4   5C0F8DE2           ADD      R0,SP,#+368
   \   000001D8   ........           _BLF     `??operator+_1`,`??operator+??rA_1`
   \   000001DC   74208DE2           ADD      R2,SP,#+116
   \   000001E0   5C1F8DE2           ADD      R1,SP,#+368
   \   000001E4   550F8DE2           ADD      R0,SP,#+340
   \   000001E8   ........           _BLF     `??operator+`,`??operator+??rA`
   \   000001EC   40208AE2           ADD      R2,R10,#+64
   \   000001F0   551F8DE2           ADD      R1,SP,#+340
   \   000001F4   4E0F8DE2           ADD      R0,SP,#+312
   \   000001F8   ........           _BLF     `??operator+_1`,`??operator+??rA_1`
   \   000001FC   0B20A0E1           MOV      R2,R11
   \   00000200   4E1F8DE2           ADD      R1,SP,#+312
   \   00000204   470F8DE2           ADD      R0,SP,#+284
   \   00000208   ........           _BLF     `??operator+`,`??operator+??rA`
   \   0000020C   0920A0E1           MOV      R2,R9
   \   00000210   471F8DE2           ADD      R1,SP,#+284
   \   00000214   400F8DE2           ADD      R0,SP,#+256
   \   00000218   ........           _BLF     `??operator+`,`??operator+??rA`
   \   0000021C   401F8DE2           ADD      R1,SP,#+256
   \   00000220   E4008DE2           ADD      R0,SP,#+228
   \   00000224   ........           _BLF     ??AnsiString_3,??AnsiString??rA_3
   \   00000228   ........           _BLF     ??RestoreSettingsWarning,??RestoreSettingsWarning??rA
   \   0000022C   0020A0E3           MOV      R2,#+0
   \   00000230   0110A0E3           MOV      R1,#+1
   \   00000234   E4008DE2           ADD      R0,SP,#+228
   \   00000238   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   0000023C   0720A0E1           MOV      R2,R7
   \   00000240   0110A0E3           MOV      R1,#+1
   \   00000244   400F8DE2           ADD      R0,SP,#+256
   \   00000248   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   0000024C   0720A0E1           MOV      R2,R7
   \   00000250   0110A0E3           MOV      R1,#+1
   \   00000254   470F8DE2           ADD      R0,SP,#+284
   \   00000258   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   0000025C   0720A0E1           MOV      R2,R7
   \   00000260   0110A0E3           MOV      R1,#+1
   \   00000264   710F8DE2           ADD      R0,SP,#+452
   \   00000268   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   0000026C   0720A0E1           MOV      R2,R7
   \   00000270   0110A0E3           MOV      R1,#+1
   \   00000274   4E0F8DE2           ADD      R0,SP,#+312
   \   00000278   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   0000027C   0720A0E1           MOV      R2,R7
   \   00000280   0110A0E3           MOV      R1,#+1
   \   00000284   550F8DE2           ADD      R0,SP,#+340
   \   00000288   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   0000028C   0720A0E1           MOV      R2,R7
   \   00000290   0110A0E3           MOV      R1,#+1
   \   00000294   5C0F8DE2           ADD      R0,SP,#+368
   \   00000298   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   0000029C   0720A0E1           MOV      R2,R7
   \   000002A0   0110A0E3           MOV      R1,#+1
   \   000002A4   630F8DE2           ADD      R0,SP,#+396
   \   000002A8   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000002AC   0720A0E1           MOV      R2,R7
   \   000002B0   0110A0E3           MOV      R1,#+1
   \   000002B4   6A0F8DE2           ADD      R0,SP,#+424
   \   000002B8   9AFFFFEA           B        ??RestoreSettings_5
     99          				break;
    100          			case C_AI_END:			// If AI type not found can continue with this
    101          			case C_AL_END:
    102          			case C_CT_END:
    103          			case C_PRO_END_COMMON:
    104          			case C_PRO_END_PRO:
    105          			case C_DRAFT_END:
    106          				NoError = false;	 // EHSMark
   \                     ??RestoreSettings_7:
   \   000002BC   0070A0E3           MOV      R7,#+0
    107          			case C_PRO_END:
    108          				Key = C_PRO_END;
   \                     ??RestoreSettings_6:
   \   000002C0   FA6FA0E3           MOV      R6,#+1000
    109          				break;
    110          			}
    111          		}
    112          	}while ( NoError && ( ErrorLine != EOF )&& ( Key != C_PRO_END ) );
   \                     ??RestoreSettings_4:
   \   000002C4   0020A0E3           MOV      R2,#+0
   \   000002C8   0110A0E3           MOV      R1,#+1
   \   000002CC   74008DE2           ADD      R0,SP,#+116
   \   000002D0   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000002D4   000057E3           CMP      R7,#+0
   \   000002D8   00009D15           LDRNE    R0,[SP, #+0]
   \   000002DC   08005011           CMPNE    R0,R8
   \   000002E0   FA0F5613           CMPNE    R6,#+1000
   \   000002E4   4FFFFF1A           BNE      ??RestoreSettings_2
    113          	return(NoError);
   \   000002E8   0700A0E1           MOV      R0,R7
   \   000002EC   78DF8DE2           ADD      SP,SP,#+480
   \   000002F0   F04FBDE8           POP      {R4-R11,LR}
   \   000002F4   1EFF2FE1           BX       LR               ;; return
   \                     ??RestoreSettings_1:
   \   000002F8   ........           DC32     NewLineStr
   \   000002FC   ........           DC32     `?<Constant "Printer ">`
    114          }
    115          
    116          //////////////////////////////////////////////////////////////
    117          //
    118          // Routines for the librarian
    119          ///////////////////////////////////////////////////////////////
    120          

   \                                 In segment CODE, align 4, keep-with-next
    121          int PROPrinter::GetValue(int ValueId, int Index, float &MyRetValue,  int &DecPnt, int &Unit)
    122          {
   \                     ??GetValue:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   08C09DE5           LDR      R12,[SP, #+8]
   \   00000008   0C409DE5           LDR      R4,[SP, #+12]
    123          	int Status = GETVAL_NO_ERR;
    124          	switch ( ValueId ) {
    125          	default:
    126          		Status = PRogramObjectBase::GetValue(ValueId, Index, MyRetValue,  DecPnt,Unit);
    127          		break;
    128          	}
    129          	return(Status);
   \   0000000C   10002DE9           PUSH     {R4}
   \   00000010   00102DE9           PUSH     {R12}
   \   00000014   ........           _BLF     ??GetValue_1,??GetValue??rA
   \   00000018   1640BDE8           POP      {R1,R2,R4,LR}
   \   0000001C   1EFF2FE1           BX       LR               ;; return
    130          }
    131          

   \                                 In segment CODE, align 4, keep-with-next
    132          int PROPrinter::GetStringValue(int ValueId, int Index, AnsiString &MyString)
    133          {
   \                     ??GetStringValue:
   \   00000000   00402DE9           PUSH     {LR}
    134          	int Status = GETVAL_NO_ERR;
    135          	switch ( ValueId ) {
    136          	default:
    137          		Status = PRogramObjectBase::GetStringValue(ValueId,Index, MyString);
    138          		break;
    139          	}
    140          	return(Status);
   \   00000004   ........           _BLF     ??GetStringValue_1,??GetStringValue??rA
   \   00000008   ........           B        ?Subroutine18
    141          }

   \                                 In segment CODE, align 4, keep-with-next
   \                     ?Subroutine18:
   \   00000000   0040BDE8           POP      {LR}
   \   00000004   1EFF2FE1           BX       LR               ;; return
    142          

   \                                 In segment CODE, align 4, keep-with-next
    143          int PROPrinter::PutValue( int ValueId, int Index, AnsiString NewValue,bool Local, int *UnitId)
    144          {
   \                     ??PutValue:
   \   00000000   F0412DE9           PUSH     {R4-R8,LR}
   \   00000004   20D04DE2           SUB      SP,SP,#+32
   \   00000008   3870DDE5           LDRB     R7,[SP, #+56]
   \   0000000C   3C809DE5           LDR      R8,[SP, #+60]
   \   00000010   0040A0E1           MOV      R4,R0
   \   00000014   0150A0E1           MOV      R5,R1
   \   00000018   0260A0E1           MOV      R6,R2
   \   0000001C   0310A0E1           MOV      R1,R3
    145          	int Status=E_NO_ERR, ValUnitId = NO_UNIT;
   \   00000020   0020A0E3           MOV      R2,#+0
   \   00000024   00208DE5           STR      R2,[SP, #+0]
    146          	//switch ( ValueId ) {
    147          	//  default:
    148          	Status = PRogramObjectBase::PutValue( ValueId, Index,NewValue,Local,&ValUnitId);
   \   00000028   04008DE2           ADD      R0,SP,#+4
   \   0000002C   ........           _BLF     ??string,??string??rA
   \   00000030   0D00A0E1           MOV      R0,SP
   \   00000034   01002DE9           PUSH     {R0}
   \   00000038   80002DE9           PUSH     {R7}
   \   0000003C   0C308DE2           ADD      R3,SP,#+12
   \   00000040   0620A0E1           MOV      R2,R6
   \   00000044   0510A0E1           MOV      R1,R5
   \   00000048   0400A0E1           MOV      R0,R4
   \   0000004C   ........           _BLF     ??PutValue_1,??PutValue??rA
   \   00000050   0040A0E1           MOV      R4,R0
   \   00000054   0020A0E3           MOV      R2,#+0
   \   00000058   0110A0E3           MOV      R1,#+1
   \   0000005C   0C008DE2           ADD      R0,SP,#+12
   \   00000060   ........           _BLF     ??_Tidy,??_Tidy??rA
    149          	//     break;
    150          	//}
    151          	if ( UnitId ) {
   \   00000064   000058E3           CMP      R8,#+0
   \   00000068   08D08DE2           ADD      SP,SP,#+8
    152          		*UnitId = ValUnitId;
   \   0000006C   00009D15           LDRNE    R0,[SP, #+0]
   \   00000070   00008815           STRNE    R0,[R8, #+0]
    153          	}
    154          	return(Status);
   \   00000074   0400A0E1           MOV      R0,R4
   \   00000078   20D08DE2           ADD      SP,SP,#+32
   \   0000007C   F041BDE8           POP      {R4-R8,LR}
   \   00000080   1EFF2FE1           BX       LR               ;; return
    155          }
    156          

   \                                 In segment CODE, align 4, keep-with-next
    157          int PROPrinter::PutFloatValue( int ValueId, float NewValue)
    158          {
   \                     ??PutFloatValue:
   \   00000000   00402DE9           PUSH     {LR}
    159          	int Status = E_NO_ERR;
    160          	//switch ( ValueId ) {
    161          	//   default:
    162          	Status = PRogramObjectBase::PutFloatValue(ValueId,NewValue);
    163          	//     break;
    164          	//}
    165          	return(Status);
   \   00000004   ........           _BLF     ??PutFloatValue_1,??PutFloatValue??rA
   \   00000008                      REQUIRE ?Subroutine18
   \   00000008                      ;; // Fall through to label ?Subroutine18
    166          }
    167          
    168          

   \                                 In segment CODE, align 4, keep-with-next
    169          int PROPrinter::ReceiveData(U8* data)
    170          {
   \                     ??ReceiveData:
   \   00000000   10402DE9           PUSH     {R4,LR}
    171          	int ErrorStatus = E_OK;
    172          	ANPRO10_CommandHeading *pCH = (ANPRO10_CommandHeading*)data;
    173          	switch ( pCH->CommandNo ) {
   \   00000004   0030D1E5           LDRB     R3,[R1, #+0]
   \   00000008   0020A0E1           MOV      R2,R0
   \   0000000C   0100D1E5           LDRB     R0,[R1, #+1]
   \   00000010   000483E1           ORR      R0,R3,R0, LSL #+8
   \   00000014   650050E3           CMP      R0,#+101
   \   00000018   1500001A           BNE      ??ReceiveData_1
    174          	case CMD_GENERIC_REALTIME_DATA:
    175          		{
    176          			ANPRO10_COMMAND_2400  *pData = (ANPRO10_COMMAND_2400*) data;
    177          			Offline     = pData->Offline;
   \   0000001C   0C00D1E5           LDRB     R0,[R1, #+12]
    178          			Progress    = pData->Progress;
    179          			ErrorStatus = E_OK;
   \   00000020   0040A0E3           MOV      R4,#+0
   \   00000024   A800C2E5           STRB     R0,[R2, #+168]
   \   00000028   0B00D1E5           LDRB     R0,[R1, #+11]
   \   0000002C   0A30D1E5           LDRB     R3,[R1, #+10]
   \   00000030   000483E1           ORR      R0,R3,R0, LSL #+8
   \   00000034   0930D1E5           LDRB     R3,[R1, #+9]
   \   00000038   0810D1E5           LDRB     R1,[R1, #+8]
   \   0000003C   000483E1           ORR      R0,R3,R0, LSL #+8
   \   00000040   000481E1           ORR      R0,R1,R0, LSL #+8
   \   00000044   AC0082E5           STR      R0,[R2, #+172]
    180          			if ( Master ) {
   \   00000048   30009FE5           LDR      R0,??ReceiveData_2  ;; Master
   \   0000004C   0000D0E5           LDRB     R0,[R0, #+0]
   \   00000050   000050E3           CMP      R0,#+0
   \   00000054   0700000A           BEQ      ??ReceiveData_3
    181          				SendData();
   \   00000058   0200A0E1           MOV      R0,R2
   \   0000005C   A42092E5           LDR      R2,[R2, #+164]
   \   00000060   6510A0E3           MOV      R1,#+101
   \   00000064   402092E5           LDR      R2,[R2, #+64]
   \   00000068   0FE0A0E1           MOV      LR,PC
   \   0000006C   12FF2FE1           BX       R2
   \   00000070   000000EA           B        ??ReceiveData_3
    182          			}
    183          		}
    184          		break;
    185          	default:
    186          		ErrorStatus = E_UNKNOWN_COMMAND;
   \                     ??ReceiveData_1:
   \   00000074   0140A0E3           MOV      R4,#+1
    187          		break;
    188          	}
    189          	return(ErrorStatus);
   \                     ??ReceiveData_3:
   \   00000078   0400A0E1           MOV      R0,R4
   \   0000007C   ........           B        ?Subroutine19
   \                     ??ReceiveData_2:
   \   00000080   ........           DC32     Master
    190          }

   \                                 In segment CODE, align 4, keep-with-next
   \                     ?Subroutine19:
   \   00000000   1040BDE8           POP      {R4,LR}
   \   00000004   1EFF2FE1           BX       LR               ;; return
    191          

   \                                 In segment CODE, align 4, keep-with-next
    192          int PROPrinter::SendData(U16 cmd)
    193          {
   \                     ??SendData:
   \   00000000   00402DE9           PUSH     {LR}
   \   00000004   14D04DE2           SUB      SP,SP,#+20
    194          	int ErrorStatus = E_OK;
    195          	switch ( cmd ) {
   \   00000008   650051E3           CMP      R1,#+101
   \   0000000C   2100001A           BNE      ??SendData_1
    196          	case CMD_GENERIC_REALTIME_DATA:
    197          		{
    198          			QueueANPRO10_COMMAND_2400 Cmd;
    199          			Cmd.TxInfo.Port      = NULL;
   \   00000010   0020A0E3           MOV      R2,#+0
   \   00000014   00208DE5           STR      R2,[SP, #+0]
    200          			Cmd.TxInfo.rxAddr    = DEVICE_BROADCAST_ADDR;
   \   00000018   FF20A0E3           MOV      R2,#+255
   \   0000001C   0420CDE5           STRB     R2,[SP, #+4]
    201          			Cmd.TxInfo.rxId      = DEVICE_BROADCAST_TXU;
   \   00000020   0E20A0E3           MOV      R2,#+14
   \   00000024   0520CDE5           STRB     R2,[SP, #+5]
    202          			Cmd.Data.ObjectId    = IDNumber;
   \   00000028   9C1090E5           LDR      R1,[R0, #+156]
    203          			Cmd.Data.ndb         = sizeof(Cmd)-sizeof(QueueANPRO10_CommandHeading);
   \   0000002C   0920A0E3           MOV      R2,#+9
   \   00000030   0A10CDE5           STRB     R1,[SP, #+10]
   \   00000034   2114A0E1           LSR      R1,R1,#+8
   \   00000038   0B10CDE5           STRB     R1,[SP, #+11]
   \   0000003C   2114A0E1           LSR      R1,R1,#+8
   \   00000040   0C10CDE5           STRB     R1,[SP, #+12]
   \   00000044   2114A0E1           LSR      R1,R1,#+8
   \   00000048   0D10CDE5           STRB     R1,[SP, #+13]
   \   0000004C   B820CDE1           STRH     R2,[SP, #+8]
    204          			Cmd.Data.CommandNo   = CMD_GENERIC_REALTIME_DATA;
   \   00000050   6520A0E3           MOV      R2,#+101
   \   00000054   B620CDE1           STRH     R2,[SP, #+6]
    205          			Cmd.Data.Offline     = Offline;
   \   00000058   A820D0E5           LDRB     R2,[R0, #+168]
   \   0000005C   1220CDE5           STRB     R2,[SP, #+18]
    206          			Cmd.Data.Progress    = Progress;
   \   00000060   AC0090E5           LDR      R0,[R0, #+172]
   \   00000064   0E00CDE5           STRB     R0,[SP, #+14]
   \   00000068   2004A0E1           LSR      R0,R0,#+8
   \   0000006C   0F00CDE5           STRB     R0,[SP, #+15]
   \   00000070   2004A0E1           LSR      R0,R0,#+8
   \   00000074   1000CDE5           STRB     R0,[SP, #+16]
   \   00000078   2004A0E1           LSR      R0,R0,#+8
   \   0000007C   1100CDE5           STRB     R0,[SP, #+17]
    207          			bool sent = ANPRO10SendNormal(&Cmd);
    208          			if ( !sent )
   \   00000080   0D00A0E1           MOV      R0,SP
   \   00000084   ........           _BLF     ??ANPRO10SendNormal,??ANPRO10SendNormal??rA
   \   00000088   000050E3           CMP      R0,#+0
   \   0000008C   0000A013           MOVNE    R0,#+0
    209          				ErrorStatus =  E_QUEUE_FULL;
   \   00000090   0300A003           MOVEQ    R0,#+3
   \   00000094   000000EA           B        ??SendData_2
    210          			else
    211          				ErrorStatus	=  E_OK;
    212          		}
    213          		break;
    214          	case CMD_GENERIC_STATIC_DATA:
    215          	default:
    216          		ErrorStatus =  E_UNKNOWN_COMMAND;
   \                     ??SendData_1:
   \   00000098   0100A0E3           MOV      R0,#+1
    217          		break;
    218          	}
    219          	return(ErrorStatus);
   \                     ??SendData_2:
   \   0000009C   14D08DE2           ADD      SP,SP,#+20
   \   000000A0   ........           B        ?Subroutine18
    220          }
    221          
    222          

   \                                 In segment CODE, align 4, keep-with-next
    223          bool PROPrinter::Print(char* PBuf)
    224          {
   \                     ??Print:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
    225          	int PSize = strlen(PBuf);
   \   0000000C   0500A0E1           MOV      R0,R5
   \   00000010   ........           _BLF     strlen,??strlen??rA
    226          	bool Status=PrintQueue.PostMessage(PBuf,PSize);
    227          	return(Status);
   \   00000014   0020A0E1           MOV      R2,R0
   \   00000018   0510A0E1           MOV      R1,R5
   \   0000001C   B80084E2           ADD      R0,R4,#+184
   \   00000020   ........           _BLF     ??PostMessage,??PostMessage??rA
   \   00000024                      REQUIRE ?Subroutine17
   \   00000024                      ;; // Fall through to label ?Subroutine17
    228          }
    229          
    230          

   \                                 In segment CODE, align 4, keep-with-next
    231          void PROPrinter::PrinterTask(TSNUart *Port)
    232          {
   \                     ??PrinterTask:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
    233          	//PrintQueue
    234          	//
    235          #ifdef S2TXU
    236          	//bool PrintOK=true;
    237          	while ( true ) {
    238          		PrintQueue.GetMessage(PrintBuf,&PrintSize);
   \                     ??PrinterTask_1:
   \   0000000C   B01094E5           LDR      R1,[R4, #+176]
   \   00000010   0030E0E3           MVN      R3,#+0
   \   00000014   B42084E2           ADD      R2,R4,#+180
   \   00000018   B80084E2           ADD      R0,R4,#+184
   \   0000001C   ........           _BLF     ??GetMessage,??GetMessage??rA
    239          		if ( PrintSize ) {
   \   00000020   B42094E5           LDR      R2,[R4, #+180]
   \   00000024   000052E3           CMP      R2,#+0
   \   00000028   F7FFFF0A           BEQ      ??PrinterTask_1
    240          			/*PrintOK = */
    241          			Port->Send((U8*)PrintBuf,PrintSize,1,true);
   \   0000002C   0100A0E3           MOV      R0,#+1
   \   00000030   01002DE9           PUSH     {R0}
   \   00000034   DCC095E5           LDR      R12,[R5, #+220]
   \   00000038   B01094E5           LDR      R1,[R4, #+176]
   \   0000003C   04C09CE5           LDR      R12,[R12, #+4]
   \   00000040   0130A0E3           MOV      R3,#+1
   \   00000044   0500A0E1           MOV      R0,R5
   \   00000048   0FE0A0E1           MOV      LR,PC
   \   0000004C   1CFF2FE1           BX       R12
   \   00000050   04D08DE2           ADD      SP,SP,#+4
   \   00000054   ECFFFFEA           B        ??PrinterTask_1
    242          		}
    243          	}
    244          #endif
    245          
    246          }
    247          ////////////////////////////////////////////////
    248          //
    249          // Static
    250          //
    251          

   \                                 In segment CODE, align 4, keep-with-next
    252          PROPrinter* PROPrinter::FindPrinter(unsigned PrinterId)
    253          {
   \                     ??FindPrinter:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
    254          	// First see if I have own the printer
    255          	// Now we should locate the printer
    256          	set<PRogramObjectBase*>::iterator pBIt;
    257          	for ( pBIt=ObjectSet.begin(); pBIt!=ObjectSet.end(); pBIt++ ) {
   \   00000004   ........           LDR      R5,??DataTable5  ;; ??ObjectSet
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   000095E5           LDR      R0,[R5, #+0]
   \   00000010   000000EA           B        ??FindPrinter_1
   \                     ??FindPrinter_2:
   \   00000014   ........           _BLF     ??_IncP,??_IncP??rA
   \                     ??FindPrinter_1:
   \   00000018   050050E1           CMP      R0,R5
    258          		PROPrinter *TempElement = (PROPrinter*)(*pBIt);
    259          		if ( PrinterId == TempElement->IDNumber ) {
    260          			return(TempElement); // Quick and dirty, simply return
    261          		}
    262          	}
    263          	return(NULL);
   \   0000001C   0000A003           MOVEQ    R0,#+0
   \   00000020   0400000A           BEQ      ??FindPrinter_3
   \   00000024   101090E5           LDR      R1,[R0, #+16]
   \   00000028   9C2091E5           LDR      R2,[R1, #+156]
   \   0000002C   020054E1           CMP      R4,R2
   \   00000030   F7FFFF1A           BNE      ??FindPrinter_2
   \   00000034   0100A0E1           MOV      R0,R1
   \                     ??FindPrinter_3:
   \   00000038   ........           B        ?Subroutine17
    264          }
    265          

   \                                 In segment CODE, align 4, keep-with-next
    266          PROPrinter* PROPrinter::FindPrinterPort(int PortNum)
    267          {
   \                     ??FindPrinterPort:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
    268          	// First see if I have own the printer
    269          	// Now we should locate the printer
    270          	set<PRogramObjectBase*>::iterator pBIt;
    271          	for ( pBIt=ObjectSet.begin(); pBIt!=ObjectSet.end(); pBIt++ ) {
   \   00000004   ........           LDR      R5,??DataTable5  ;; ??ObjectSet
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   000095E5           LDR      R0,[R5, #+0]
   \   00000010   000000EA           B        ??FindPrinterPort_1
   \                     ??FindPrinterPort_2:
   \   00000014   ........           _BLF     ??_IncP,??_IncP??rA
   \                     ??FindPrinterPort_1:
   \   00000018   050050E1           CMP      R0,R5
    272          		PROPrinter *TempElement = (PROPrinter*)(*pBIt);
    273          		if ( (PortNum == TempElement->PortNum )
    274          			 && (TempElement->UnitID ==  PROTanksystemUnit::MySelf->UnitID)
    275          			 && (TempElement->Address == PROTanksystemUnit::MySelf->Address) ) {
    276          			return(TempElement); // Quick and dirty, simply return
    277          		}
    278          	}
    279          	return(NULL);
   \   0000001C   0000A003           MOVEQ    R0,#+0
   \   00000020   0D00000A           BEQ      ??FindPrinterPort_3
   \   00000024   101090E5           LDR      R1,[R0, #+16]
   \   00000028   CC2091E5           LDR      R2,[R1, #+204]
   \   0000002C   020054E1           CMP      R4,R2
   \   00000030   F7FFFF1A           BNE      ??FindPrinterPort_2
   \   00000034   24209FE5           LDR      R2,??FindPrinterPort_4  ;; ??MySelf
   \   00000038   C43091E5           LDR      R3,[R1, #+196]
   \   0000003C   002092E5           LDR      R2,[R2, #+0]
   \   00000040   24C392E5           LDR      R12,[R2, #+804]
   \   00000044   0C0053E1           CMP      R3,R12
   \   00000048   C8309105           LDREQ    R3,[R1, #+200]
   \   0000004C   2C239205           LDREQ    R2,[R2, #+812]
   \   00000050   02005301           CMPEQ    R3,R2
   \   00000054   EEFFFF1A           BNE      ??FindPrinterPort_2
   \   00000058   0100A0E1           MOV      R0,R1
   \                     ??FindPrinterPort_3:
   \   0000005C   ........           B        ?Subroutine17
   \                     ??FindPrinterPort_4:
   \   00000060   ........           DC32     ??MySelf
    280          }
    281          
    282          

   \                                 In segment CODE, align 4, keep-with-next
    283          bool PROPrinter::Print(int PortId, char *PBuf)
    284          {
   \                     ??Print_1:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0140A0E1           MOV      R4,R1
    285          	bool Status;
    286          	PROPrinter *Prn = FindPrinter(PortId);
   \   00000008   ........           BL       ??FindPrinter
    287          	if ( Prn ) {
   \   0000000C   000050E3           CMP      R0,#+0
   \   00000010   0100000A           BEQ      ??Print_2
    288          		Status = Prn->Print(PBuf);
   \   00000014   0410A0E1           MOV      R1,R4
   \   00000018   ........           BL       ??Print
    289          	} else {
    290          		Status = false;
    291          	}
    292          	return(Status);
   \                     ??Print_2:
   \   0000001C                      REQUIRE ?Subroutine19
   \   0000001C                      ;; // Fall through to label ?Subroutine19
    293          }

   \                                 In segment DIFUNCT, align 4, keep-with-next, root
   \   00000000                      REQUIRE ?call_ctors
   \   00000000   ........           DC32    ??__sti__routine

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "Printer ">`:
   \   00000000   5072696E7465       DC8 "Printer "
   \              722000      
   \   00000009   000000             DC8 0, 0, 0
   \   0000000C   3A0A556E6B6E       DC8 ":\012Unknown error started at line:"
   \              6F776E206572
   \              726F72207374
   \              617274656420
   \              6174206C696E
   \              653A00      
   \   0000002D   000000             DC8 0, 0, 0
   \   00000030   3A0A54686520       DC8 ":\012The keyword "
   \              6B6579776F72
   \              642000      
   \   0000003F   00                 DC8 0
   \   00000040   206973206E6F       DC8 " is not allowed here!! Line:"
   \              7420616C6C6F
   \              776564206865
   \              72652121204C
   \              696E653A00  
   \   0000005D   000000             DC8 0, 0, 0

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs PROPrinter &PROPrinter::new PROPrinter(int, int, int)
   \                     `??new PROPrinter`:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
   \   0000000C   0260A0E1           MOV      R6,R2
   \   00000010   D000A0E3           MOV      R0,#+208
   \   00000014   ........           _BLF     `??operator new`,`??operator new??rA`
   \   00000018   000050E3           CMP      R0,#+0
   \   0000001C   0300000A           BEQ      `??new PROPrinter_1`
   \   00000020   0630A0E1           MOV      R3,R6
   \   00000024   0520A0E1           MOV      R2,R5
   \   00000028   0410A0E1           MOV      R1,R4
   \   0000002C   ........           BL       ??PROPrinter
   \                     `??new PROPrinter_1`:
   \   00000030   7040BDE8           POP      {R4-R6,LR}
   \   00000034   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   static __??Code32?? __intrinsic __code __interwork __atpcs void __sti__routine()
   \                     ??__sti__routine:
   \   00000000   11402DE9           PUSH     {R0,R4,LR}
   \   00000004   ........           LDR      R4,??DataTable5  ;; ??ObjectSet
   \   00000008   0110A0E3           MOV      R1,#+1
   \   0000000C   0D00A0E1           MOV      R0,SP
   \   00000010   ........           _BLF     __data_memzero,??__data_memzero??rA
   \   00000014   0400A0E1           MOV      R0,R4
   \   00000018   ........           _BLF     ??_Clear,??_Clear??rA
   \   0000001C   0000DDE5           LDRB     R0,[SP, #+0]
   \   00000020   1400C4E5           STRB     R0,[R4, #+20]
   \   00000024   08009FE5           LDR      R0,??__sti__routine_1  ;; ?_0
   \   00000028   ........           _BLF     __record_needed_destruction,??__record_needed_destruction??rA
   \   0000002C   1140BDE8           POP      {R0,R4,LR}
   \   00000030   1EFF2FE1           BX       LR               ;; return
   \                     ??__sti__routine_1:
   \   00000034   ........           DC32     ?_0

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable3:
   \   00000000   ........           DC32     ??__vtbl

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable5:
   \   00000000   ........           DC32     ??ObjectSet
    294          

   Maximum stack usage in bytes:

     Function                       CSTACK
     --------                       ------
     PROPrinter::FindPrinter(unsigned int)
                                       12
     PROPrinter::FindPrinterPort(int)
                                       12
     PROPrinter::GetStringValue(int, int, AnsiString &)
                                        4
     PROPrinter::GetValue(int, int, float &, int &, int &)
                                       16
     PROPrinter::PROPrinter(int, int, int)
                                       32
     PROPrinter::Print(char *)         12
     PROPrinter::Print(int, char *)     8
     PROPrinter::PrinterTask(TSNUart *)
                                       16
     PROPrinter::PutFloatValue(int, float)
                                        4
     PROPrinter::PutValue(int, int, AnsiString, bool, int *)
                                       64
     PROPrinter::ReceiveData(unsigned char *)
                                        8
     PROPrinter::RestoreSettings(TSNConfigString *)
                                      516
     PROPrinter::SaveSettings(TSNConfigString *)
                                      244
     PROPrinter::SendData(unsigned short)
                                       24
     PROPrinter::new PROPrinter(int, int, int)
                                       16
     PROPrinter::~PROPrinter()         12
     _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::_Erase(_Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::_Nodeptr)
                                       16
     _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::_Insert(bool, _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::_Nodeptr, PRogramObjectBase *)
                                       24
     _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::insert(PRogramObjectBase *)
                                       44
     _Tree_algobase<allocator<void>>::_Clear()
                                        0
     _Tree_algobase<allocator<void>>::_DecP(_Tree_algobase<allocator<void>>::_Genptr)
                                        0
     _Tree_algobase<allocator<void>>::_IncP(_Tree_algobase<allocator<void>>::_Genptr)
                                        0
     _Tree_algobase<allocator<void>>::_Insert(bool, _Tree_algobase<allocator<void>>::_Genptr, _Tree_algobase<allocator<void>>::_Genptr)
                                       20
     _Tree_algobase<allocator<void>>::_Lrotate(_Tree_algobase<allocator<void>>::_Genptr)
                                        0
     _Tree_algobase<allocator<void>>::_Rrotate(_Tree_algobase<allocator<void>>::_Genptr)
                                        0
     __sti__routine()                  12
     operator+(string const &, char const *)
                                       44
     operator+(string const &, string const &)
                                       40
     set<PRogramObjectBase *>::~set()
                                        8
     string::string(string const &)    12


   Segment part sizes:

     Function/Label                 Bytes
     --------------                 -----
     string::string(string const &)   64
     _Tree_algobase<allocator<void>>::_DecP(_Tree_algobase<allocator<void>>::_Genptr)
                                     100
     _Tree_algobase<allocator<void>>::_IncP(_Tree_algobase<allocator<void>>::_Genptr)
                                      92
     _Tree_algobase<allocator<void>>::_Clear()
                                      36
     _Tree_algobase<allocator<void>>::_Rrotate(_Tree_algobase<allocator<void>>::_Genptr)
                                      84
     _Tree_algobase<allocator<void>>::_Lrotate(_Tree_algobase<allocator<void>>::_Genptr)
                                      84
     _Tree_algobase<allocator<void>>::_Insert(bool, _Tree_algobase<allocator<void>>::_Genptr, _Tree_algobase<allocator<void>>::_Genptr)
                                     356
     _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::insert(PRogramObjectBase *)
                                     200
     _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::_Erase(_Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::_Nodeptr)
                                      68
     _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::_Insert(bool, _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::_Nodeptr, PRogramObjectBase *)
                                      96
     set<PRogramObjectBase *>::~set()
                                      32
     operator+(string const &, string const &)
                                      88
     operator+(string const &, char const *)
                                      92
     PROPrinter::PrinterTaskPtr        4
     PROPrinter::ObjectSet            36
     PROPrinter::PROPrinter(int, int, int)
                                     180
     PROPrinter::~PROPrinter()        84
     ?Subroutine17                     8
     PROPrinter::SaveSettings(TSNConfigString *)
                                     400
     PROPrinter::RestoreSettings(TSNConfigString *)
                                     768
     PROPrinter::GetValue(int, int, float &, int &, int &)
                                      32
     PROPrinter::GetStringValue(int, int, AnsiString &)
                                      12
     ?Subroutine18                     8
     PROPrinter::PutValue(int, int, AnsiString, bool, int *)
                                     132
     PROPrinter::PutFloatValue(int, float)
                                       8
     PROPrinter::ReceiveData(unsigned char *)
                                     132
     ?Subroutine19                     8
     PROPrinter::SendData(unsigned short)
                                     164
     PROPrinter::Print(char *)        36
     PROPrinter::PrinterTask(TSNUart *)
                                      88
     PROPrinter::FindPrinter(unsigned int)
                                      60
     PROPrinter::FindPrinterPort(int)
                                     100
     PROPrinter::Print(int, char *)   28
     ?<Constant "Printer ">           96
     PROPrinter::new PROPrinter(int, int, int)
                                      56
     __sti__routine()                 56
     ??DataTable3                      4
     ??DataTable5                      4
      Others                         708

 
 4 344 bytes in segment CODE
   200 bytes in segment DATA_C
    44 bytes in segment DATA_Z
     4 bytes in segment DIFUNCT
    12 bytes in segment INITTAB
 
 2 372 bytes of CODE  memory (+ 1 988 bytes shared)
   200 bytes of CONST memory
    44 bytes of DATA  memory

Errors: none
Warnings: none
