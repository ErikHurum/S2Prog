##############################################################################
#                                                                            #
# IAR ARM ANSI C/C++ Compiler V4.42A/W32               14/Sep/2022  15:17:05 #
# Copyright 1999-2005 IAR Systems. All rights reserved.                      #
#                                                                            #
#    Cpu mode        =  interwork                                            #
#    Endian          =  little                                               #
#    Stack alignment =  4                                                    #
#    Source file     =  D:\S2Prog\Shared\Src\PROWaterIngress.cpp             #
#    Command line    =  D:\S2Prog\Shared\Src\PROWaterIngress.cpp --fpu None  #
#                       -D OS_LIBMODE_SP -D CPU_S3C2410 -D OS_RAMVECT=0 -D   #
#                       OS_UART=-1 -D S2TXU -D USE_LZO=1 -D __ARM_LIBRARY__  #
#                       -D WATCHDOG=1 -D NETWORK=1 -lCN                      #
#                       D:\S2Prog\TXU\Debug\List\ -o                         #
#                       D:\S2Prog\TXU\Debug\Obj\ -z9 --debug --cpu_mode arm  #
#                       --endian little --cpu ARM920T --stack_align 4        #
#                       --interwork -e --enable_multibytes --eec++           #
#                       --dlib_config "C:\Program Files (x86)\IAR            #
#                       Systems\Embedded Workbench                           #
#                       4.0\arm\LIB\dl4tpainl8n.h" -I                        #
#                       D:\S2Prog\TXU\GUI\CORE\ -I D:\S2Prog\TXU\GUI\WM\ -I  #
#                       D:\S2Prog\TXU\GUI\WIDGET\ -I D:\S2Prog\TXU\CONFIG\   #
#                       -I D:\S2Prog\TXU\INC\ -I D:\S2Prog\TXU\..\SHARED\INC #
#                       \ -I D:\S2Prog\TXU\..\SHARED\SRC\ -I                 #
#                       D:\S2Prog\TXU\..\SHARED\LZO\minilzo.210\ -I          #
#                       D:\S2Prog\TXU\lwip-1.4.1\src\include\ -I             #
#                       D:\S2Prog\TXU\lwip-1.4.1\src\include\ipv4\ -I        #
#                       D:\S2Prog\TXU\lwip-1.4.1\src\ -I                     #
#                       D:\S2Prog\TXU\..\SHARED\Database\ -I                 #
#                       D:\S2Prog\TXU\src\ -I "C:\Program Files (x86)\IAR    #
#                       Systems\Embedded Workbench 4.0\arm\INC\"             #
#                       --inline_threshold=2                                 #
#    List file       =  D:\S2Prog\TXU\Debug\List\PROWaterIngress.lst         #
#    Object file     =  D:\S2Prog\TXU\Debug\Obj\PROWaterIngress.r79          #
#                                                                            #
#                                                                            #
##############################################################################

D:\S2Prog\Shared\Src\PROWaterIngress.cpp
      1          #include "TSNIncludes.h"

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs string::string(string const &)
   \                     ??string:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
   \   0000000C   0020A0E3           MOV      R2,#+0
   \   00000010   0010A0E3           MOV      R1,#+0
   \   00000014   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000018   1C009FE5           LDR      R0,??string_1    ;; ??npos
   \   0000001C   0020A0E3           MOV      R2,#+0
   \   00000020   003090E5           LDR      R3,[R0, #+0]
   \   00000024   0510A0E1           MOV      R1,R5
   \   00000028   0400A0E1           MOV      R0,R4
   \   0000002C   ........           _BLF     ??assign,??assign??rA
   \   00000030   0400A0E1           MOV      R0,R4
   \   00000034   3040BDE8           POP      {R4,R5,LR}
   \   00000038   1EFF2FE1           BX       LR               ;; return
   \                     ??string_1:
   \   0000003C   ........           DC32     ??npos

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs _Tree_algobase<allocator<void>>::_Genptr _Tree_algobase<allocator<void>>::_Max(_Tree_algobase<allocator<void>>::_Genptr)
   \                     ??_Max:
   \   00000000   000000EA           B        ??_Max_1
   \                     ??_Max_2:
   \   00000004   080090E5           LDR      R0,[R0, #+8]
   \                     ??_Max_1:
   \   00000008   081090E5           LDR      R1,[R0, #+8]
   \   0000000C   0D10D1E5           LDRB     R1,[R1, #+13]
   \   00000010   000051E3           CMP      R1,#+0
   \   00000014   FAFFFF0A           BEQ      ??_Max_2
   \   00000018   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs _Tree_algobase<allocator<void>>::_Genptr _Tree_algobase<allocator<void>>::_DecP(_Tree_algobase<allocator<void>>::_Genptr)
   \                     ??_DecP:
   \   00000000   00402DE9           PUSH     {LR}
   \   00000004   0D10D0E5           LDRB     R1,[R0, #+13]
   \   00000008   000051E3           CMP      R1,#+0
   \   0000000C   08009015           LDRNE    R0,[R0, #+8]
   \   00000010   0E00001A           BNE      ??_DecP_1
   \   00000014   001090E5           LDR      R1,[R0, #+0]
   \   00000018   0D20D1E5           LDRB     R2,[R1, #+13]
   \   0000001C   000052E3           CMP      R2,#+0
   \   00000020   0200001A           BNE      ??_DecP_2
   \   00000024   0100A0E1           MOV      R0,R1
   \   00000028   ........           _BLF     ??_Max,??_Max??rA
   \   0000002C   070000EA           B        ??_DecP_1
   \                     ??_DecP_2:
   \   00000030   041090E5           LDR      R1,[R0, #+4]
   \   00000034   0D20D1E5           LDRB     R2,[R1, #+13]
   \   00000038   000052E3           CMP      R2,#+0
   \   0000003C   0300001A           BNE      ??_DecP_1
   \   00000040   002091E5           LDR      R2,[R1, #+0]
   \   00000044   020050E1           CMP      R0,R2
   \   00000048   0100A0E1           MOV      R0,R1
   \   0000004C   F7FFFF0A           BEQ      ??_DecP_2
   \                     ??_DecP_1:
   \   00000050   0040BDE8           POP      {LR}
   \   00000054   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs _Tree_algobase<allocator<void>>::_Genptr _Tree_algobase<allocator<void>>::_IncP(_Tree_algobase<allocator<void>>::_Genptr)
   \                     ??_IncP:
   \   00000000   0D10D0E5           LDRB     R1,[R0, #+13]
   \   00000004   000051E3           CMP      R1,#+0
   \   00000008   1EFF2F11           BXNE     LR
   \   0000000C   081090E5           LDR      R1,[R0, #+8]
   \   00000010   0D20D1E5           LDRB     R2,[R1, #+13]
   \   00000014   000052E3           CMP      R2,#+0
   \   00000018   0700001A           BNE      ??_IncP_1
   \   0000001C   000000EA           B        ??_IncP_2
   \                     ??_IncP_3:
   \   00000020   0010A0E1           MOV      R1,R0
   \                     ??_IncP_2:
   \   00000024   000091E5           LDR      R0,[R1, #+0]
   \   00000028   0D20D0E5           LDRB     R2,[R0, #+13]
   \   0000002C   000052E3           CMP      R2,#+0
   \   00000030   FAFFFF0A           BEQ      ??_IncP_3
   \   00000034   060000EA           B        ??_IncP_4
   \                     ??_IncP_5:
   \   00000038   0100A0E1           MOV      R0,R1
   \                     ??_IncP_1:
   \   0000003C   041090E5           LDR      R1,[R0, #+4]
   \   00000040   0D20D1E5           LDRB     R2,[R1, #+13]
   \   00000044   000052E3           CMP      R2,#+0
   \   00000048   08209105           LDREQ    R2,[R1, #+8]
   \   0000004C   02005001           CMPEQ    R0,R2
   \   00000050   F8FFFF0A           BEQ      ??_IncP_5
   \                     ??_IncP_4:
   \   00000054   0100A0E1           MOV      R0,R1
   \   00000058   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void _Tree_algobase<allocator<void>>::_Clear()
   \                     ??_Clear:
   \   00000000   040080E5           STR      R0,[R0, #+4]
   \   00000004   000080E5           STR      R0,[R0, #+0]
   \   00000008   080080E5           STR      R0,[R0, #+8]
   \   0000000C   0110A0E3           MOV      R1,#+1
   \   00000010   0D10C0E5           STRB     R1,[R0, #+13]
   \   00000014   0C10C0E5           STRB     R1,[R0, #+12]
   \   00000018   0010A0E3           MOV      R1,#+0
   \   0000001C   101080E5           STR      R1,[R0, #+16]
   \   00000020   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void _Tree_algobase<allocator<void>>::_Rrotate(_Tree_algobase<allocator<void>>::_Genptr)
   \                     ??_Rrotate:
   \   00000000   002091E5           LDR      R2,[R1, #+0]
   \   00000004   083092E5           LDR      R3,[R2, #+8]
   \   00000008   003081E5           STR      R3,[R1, #+0]
   \   0000000C   083092E5           LDR      R3,[R2, #+8]
   \   00000010   0DC0D3E5           LDRB     R12,[R3, #+13]
   \   00000014   00005CE3           CMP      R12,#+0
   \   00000018   04108305           STREQ    R1,[R3, #+4]
   \   0000001C   043091E5           LDR      R3,[R1, #+4]
   \   00000020   043082E5           STR      R3,[R2, #+4]
   \   00000024   043090E5           LDR      R3,[R0, #+4]
   \   00000028   030051E1           CMP      R1,R3
   \   0000002C   04208005           STREQ    R2,[R0, #+4]
   \   00000030   0400000A           BEQ      ??_Rrotate_1
   \   00000034   040091E5           LDR      R0,[R1, #+4]
   \   00000038   083090E5           LDR      R3,[R0, #+8]
   \   0000003C   030051E1           CMP      R1,R3
   \   00000040   08208005           STREQ    R2,[R0, #+8]
   \   00000044   00208015           STRNE    R2,[R0, #+0]
   \                     ??_Rrotate_1:
   \   00000048   081082E5           STR      R1,[R2, #+8]
   \   0000004C   042081E5           STR      R2,[R1, #+4]
   \   00000050   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void _Tree_algobase<allocator<void>>::_Lrotate(_Tree_algobase<allocator<void>>::_Genptr)
   \                     ??_Lrotate:
   \   00000000   082091E5           LDR      R2,[R1, #+8]
   \   00000004   003092E5           LDR      R3,[R2, #+0]
   \   00000008   083081E5           STR      R3,[R1, #+8]
   \   0000000C   003092E5           LDR      R3,[R2, #+0]
   \   00000010   0DC0D3E5           LDRB     R12,[R3, #+13]
   \   00000014   00005CE3           CMP      R12,#+0
   \   00000018   04108305           STREQ    R1,[R3, #+4]
   \   0000001C   043091E5           LDR      R3,[R1, #+4]
   \   00000020   043082E5           STR      R3,[R2, #+4]
   \   00000024   043090E5           LDR      R3,[R0, #+4]
   \   00000028   030051E1           CMP      R1,R3
   \   0000002C   04208005           STREQ    R2,[R0, #+4]
   \   00000030   0400000A           BEQ      ??_Lrotate_1
   \   00000034   040091E5           LDR      R0,[R1, #+4]
   \   00000038   003090E5           LDR      R3,[R0, #+0]
   \   0000003C   030051E1           CMP      R1,R3
   \   00000040   00208005           STREQ    R2,[R0, #+0]
   \   00000044   08208015           STRNE    R2,[R0, #+8]
   \                     ??_Lrotate_1:
   \   00000048   001082E5           STR      R1,[R2, #+0]
   \   0000004C   042081E5           STR      R2,[R1, #+4]
   \   00000050   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs _Tree_algobase<allocator<void>>::_Genptr _Tree_algobase<allocator<void>>::_Erase(_Tree_algobase<allocator<void>>::_Genptr)
   \                     ??_Erase:
   \   00000000   F0472DE9           PUSH     {R4-R10,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0160A0E1           MOV      R6,R1
   \   0000000C   0680A0E1           MOV      R8,R6
   \   00000010   0600A0E1           MOV      R0,R6
   \   00000014   ........           _BLF     ??_IncP,??_IncP??rA
   \   00000018   007098E5           LDR      R7,[R8, #+0]
   \   0000001C   0D10D7E5           LDRB     R1,[R7, #+13]
   \   00000020   000051E3           CMP      R1,#+0
   \   00000024   0400001A           BNE      ??_Erase_3
   \   00000028   081098E5           LDR      R1,[R8, #+8]
   \   0000002C   0D10D1E5           LDRB     R1,[R1, #+13]
   \   00000030   000051E3           CMP      R1,#+0
   \   00000034   0100001A           BNE      ??_Erase_4
   \   00000038   0080A0E1           MOV      R8,R0
   \                     ??_Erase_3:
   \   0000003C   087098E5           LDR      R7,[R8, #+8]
   \                     ??_Erase_4:
   \   00000040   060058E1           CMP      R8,R6
   \   00000044   2500001A           BNE      ??_Erase_5
   \   00000048   0D00D7E5           LDRB     R0,[R7, #+13]
   \   0000004C   045096E5           LDR      R5,[R6, #+4]
   \   00000050   000050E3           CMP      R0,#+0
   \   00000054   04508705           STREQ    R5,[R7, #+4]
   \   00000058   040094E5           LDR      R0,[R4, #+4]
   \   0000005C   060050E1           CMP      R0,R6
   \   00000060   04708405           STREQ    R7,[R4, #+4]
   \   00000064   0300000A           BEQ      ??_Erase_6
   \   00000068   000095E5           LDR      R0,[R5, #+0]
   \   0000006C   060050E1           CMP      R0,R6
   \   00000070   00708505           STREQ    R7,[R5, #+0]
   \   00000074   08708515           STRNE    R7,[R5, #+8]
   \                     ??_Erase_6:
   \   00000078   000094E5           LDR      R0,[R4, #+0]
   \   0000007C   060050E1           CMP      R0,R6
   \   00000080   0B00001A           BNE      ??_Erase_7
   \   00000084   0D00D7E5           LDRB     R0,[R7, #+13]
   \   00000088   000050E3           CMP      R0,#+0
   \   0000008C   0500A011           MOVNE    R0,R5
   \   00000090   0600001A           BNE      ??_Erase_8
   \   00000094   0700A0E1           MOV      R0,R7
   \   00000098   000000EA           B        ??_Erase_9
   \                     ??_Erase_10:
   \   0000009C   0100A0E1           MOV      R0,R1
   \                     ??_Erase_9:
   \   000000A0   001090E5           LDR      R1,[R0, #+0]
   \   000000A4   0D20D1E5           LDRB     R2,[R1, #+13]
   \   000000A8   000052E3           CMP      R2,#+0
   \   000000AC   FAFFFF0A           BEQ      ??_Erase_10
   \                     ??_Erase_8:
   \   000000B0   000084E5           STR      R0,[R4, #+0]
   \                     ??_Erase_7:
   \   000000B4   080094E5           LDR      R0,[R4, #+8]
   \   000000B8   060050E1           CMP      R0,R6
   \   000000BC   2900001A           BNE      ??_Erase_11
   \   000000C0   0D00D7E5           LDRB     R0,[R7, #+13]
   \   000000C4   000050E3           CMP      R0,#+0
   \   000000C8   0500A011           MOVNE    R0,R5
   \   000000CC   0100001A           BNE      ??_Erase_12
   \   000000D0   0700A0E1           MOV      R0,R7
   \   000000D4   ........           _BLF     ??_Max,??_Max??rA
   \                     ??_Erase_12:
   \   000000D8   080084E5           STR      R0,[R4, #+8]
   \   000000DC   210000EA           B        ??_Erase_11
   \                     ??_Erase_5:
   \   000000E0   000096E5           LDR      R0,[R6, #+0]
   \   000000E4   048080E5           STR      R8,[R0, #+4]
   \   000000E8   000096E5           LDR      R0,[R6, #+0]
   \   000000EC   000088E5           STR      R0,[R8, #+0]
   \   000000F0   080096E5           LDR      R0,[R6, #+8]
   \   000000F4   000058E1           CMP      R8,R0
   \   000000F8   0850A001           MOVEQ    R5,R8
   \   000000FC   0800000A           BEQ      ??_Erase_13
   \   00000100   0D00D7E5           LDRB     R0,[R7, #+13]
   \   00000104   045098E5           LDR      R5,[R8, #+4]
   \   00000108   000050E3           CMP      R0,#+0
   \   0000010C   04508705           STREQ    R5,[R7, #+4]
   \   00000110   007085E5           STR      R7,[R5, #+0]
   \   00000114   080096E5           LDR      R0,[R6, #+8]
   \   00000118   080088E5           STR      R0,[R8, #+8]
   \   0000011C   080096E5           LDR      R0,[R6, #+8]
   \   00000120   048080E5           STR      R8,[R0, #+4]
   \                     ??_Erase_13:
   \   00000124   040094E5           LDR      R0,[R4, #+4]
   \   00000128   060050E1           CMP      R0,R6
   \   0000012C   04808405           STREQ    R8,[R4, #+4]
   \   00000130   0400000A           BEQ      ??_Erase_14
   \   00000134   040096E5           LDR      R0,[R6, #+4]
   \   00000138   001090E5           LDR      R1,[R0, #+0]
   \   0000013C   060051E1           CMP      R1,R6
   \   00000140   00808005           STREQ    R8,[R0, #+0]
   \   00000144   08808015           STRNE    R8,[R0, #+8]
   \                     ??_Erase_14:
   \   00000148   040096E5           LDR      R0,[R6, #+4]
   \   0000014C   0C1088E2           ADD      R1,R8,#+12
   \   00000150   040088E5           STR      R0,[R8, #+4]
   \   00000154   0020D1E5           LDRB     R2,[R1, #+0]
   \   00000158   0C0086E2           ADD      R0,R6,#+12
   \   0000015C   0030D0E5           LDRB     R3,[R0, #+0]
   \   00000160   0030C1E5           STRB     R3,[R1, #+0]
   \   00000164   0020C0E5           STRB     R2,[R0, #+0]
   \                     ??_Erase_11:
   \   00000168   0C00D6E5           LDRB     R0,[R6, #+12]
   \   0000016C   010050E3           CMP      R0,#+1
   \   00000170   5E00001A           BNE      ??_Erase_15
   \   00000174   0090A0E3           MOV      R9,#+0
   \   00000178   01A0A0E3           MOV      R10,#+1
   \   0000017C   060000EA           B        ??_Erase_16
   \                     ??_Erase_17:
   \   00000180   080098E5           LDR      R0,[R8, #+8]
   \   00000184   0C00D0E5           LDRB     R0,[R0, #+12]
   \   00000188   010050E3           CMP      R0,#+1
   \   0000018C   1C00001A           BNE      ??_Erase_18
   \                     ??_Erase_19:
   \   00000190   0C90C8E5           STRB     R9,[R8, #+12]
   \                     ??_Erase_20:
   \   00000194   0570A0E1           MOV      R7,R5
   \   00000198   045097E5           LDR      R5,[R7, #+4]
   \                     ??_Erase_16:
   \   0000019C   040094E5           LDR      R0,[R4, #+4]
   \   000001A0   000057E1           CMP      R7,R0
   \   000001A4   5000000A           BEQ      ??_Erase_21
   \   000001A8   0C00D7E5           LDRB     R0,[R7, #+12]
   \   000001AC   010050E3           CMP      R0,#+1
   \   000001B0   4D00001A           BNE      ??_Erase_21
   \   000001B4   008095E5           LDR      R8,[R5, #+0]
   \   000001B8   080057E1           CMP      R7,R8
   \   000001BC   2400001A           BNE      ??_Erase_22
   \   000001C0   088095E5           LDR      R8,[R5, #+8]
   \   000001C4   0C00D8E5           LDRB     R0,[R8, #+12]
   \   000001C8   000050E3           CMP      R0,#+0
   \   000001CC   0500001A           BNE      ??_Erase_23
   \   000001D0   0CA0C8E5           STRB     R10,[R8, #+12]
   \   000001D4   0C90C5E5           STRB     R9,[R5, #+12]
   \   000001D8   0510A0E1           MOV      R1,R5
   \   000001DC   0400A0E1           MOV      R0,R4
   \   000001E0   ........           _BLF     ??_Lrotate,??_Lrotate??rA
   \   000001E4   088095E5           LDR      R8,[R5, #+8]
   \                     ??_Erase_23:
   \   000001E8   0D00D8E5           LDRB     R0,[R8, #+13]
   \   000001EC   000050E3           CMP      R0,#+0
   \   000001F0   E7FFFF1A           BNE      ??_Erase_20
   \   000001F4   000098E5           LDR      R0,[R8, #+0]
   \   000001F8   0C00D0E5           LDRB     R0,[R0, #+12]
   \   000001FC   010050E3           CMP      R0,#+1
   \   00000200   DEFFFF0A           BEQ      ??_Erase_17
   \                     ??_Erase_18:
   \   00000204   080098E5           LDR      R0,[R8, #+8]
   \   00000208   0C00D0E5           LDRB     R0,[R0, #+12]
   \   0000020C   010050E3           CMP      R0,#+1
   \   00000210   0600001A           BNE      ??_Erase_24
   \   00000214   000098E5           LDR      R0,[R8, #+0]
   \   00000218   0810A0E1           MOV      R1,R8
   \   0000021C   0CA0C0E5           STRB     R10,[R0, #+12]
   \   00000220   0C90C8E5           STRB     R9,[R8, #+12]
   \   00000224   0400A0E1           MOV      R0,R4
   \   00000228   ........           _BLF     ??_Rrotate,??_Rrotate??rA
   \   0000022C   088095E5           LDR      R8,[R5, #+8]
   \                     ??_Erase_24:
   \   00000230   0C00D5E5           LDRB     R0,[R5, #+12]
   \   00000234   0510A0E1           MOV      R1,R5
   \   00000238   0C00C8E5           STRB     R0,[R8, #+12]
   \   0000023C   0CA0C5E5           STRB     R10,[R5, #+12]
   \   00000240   080098E5           LDR      R0,[R8, #+8]
   \   00000244   0CA0C0E5           STRB     R10,[R0, #+12]
   \   00000248   0400A0E1           MOV      R0,R4
   \   0000024C   ........           _BLF     ??_Lrotate,??_Lrotate??rA
   \   00000250   250000EA           B        ??_Erase_21
   \                     ??_Erase_22:
   \   00000254   0C00D8E5           LDRB     R0,[R8, #+12]
   \   00000258   000050E3           CMP      R0,#+0
   \   0000025C   0500001A           BNE      ??_Erase_25
   \   00000260   0CA0C8E5           STRB     R10,[R8, #+12]
   \   00000264   0C90C5E5           STRB     R9,[R5, #+12]
   \   00000268   0510A0E1           MOV      R1,R5
   \   0000026C   0400A0E1           MOV      R0,R4
   \   00000270   ........           _BLF     ??_Rrotate,??_Rrotate??rA
   \   00000274   008095E5           LDR      R8,[R5, #+0]
   \                     ??_Erase_25:
   \   00000278   0D00D8E5           LDRB     R0,[R8, #+13]
   \   0000027C   000050E3           CMP      R0,#+0
   \   00000280   C3FFFF1A           BNE      ??_Erase_20
   \   00000284   080098E5           LDR      R0,[R8, #+8]
   \   00000288   0C00D0E5           LDRB     R0,[R0, #+12]
   \   0000028C   010050E3           CMP      R0,#+1
   \   00000290   00009805           LDREQ    R0,[R8, #+0]
   \   00000294   0C00D005           LDRBEQ   R0,[R0, #+12]
   \   00000298   01005003           CMPEQ    R0,#+1
   \   0000029C   BBFFFF0A           BEQ      ??_Erase_19
   \   000002A0   000098E5           LDR      R0,[R8, #+0]
   \   000002A4   0C00D0E5           LDRB     R0,[R0, #+12]
   \   000002A8   010050E3           CMP      R0,#+1
   \   000002AC   0600001A           BNE      ??_Erase_26
   \   000002B0   080098E5           LDR      R0,[R8, #+8]
   \   000002B4   0810A0E1           MOV      R1,R8
   \   000002B8   0CA0C0E5           STRB     R10,[R0, #+12]
   \   000002BC   0C90C8E5           STRB     R9,[R8, #+12]
   \   000002C0   0400A0E1           MOV      R0,R4
   \   000002C4   ........           _BLF     ??_Lrotate,??_Lrotate??rA
   \   000002C8   008095E5           LDR      R8,[R5, #+0]
   \                     ??_Erase_26:
   \   000002CC   0C00D5E5           LDRB     R0,[R5, #+12]
   \   000002D0   0510A0E1           MOV      R1,R5
   \   000002D4   0C00C8E5           STRB     R0,[R8, #+12]
   \   000002D8   0CA0C5E5           STRB     R10,[R5, #+12]
   \   000002DC   000098E5           LDR      R0,[R8, #+0]
   \   000002E0   0CA0C0E5           STRB     R10,[R0, #+12]
   \   000002E4   0400A0E1           MOV      R0,R4
   \   000002E8   ........           _BLF     ??_Rrotate,??_Rrotate??rA
   \                     ??_Erase_21:
   \   000002EC   0CA0C7E5           STRB     R10,[R7, #+12]
   \                     ??_Erase_15:
   \   000002F0   100094E5           LDR      R0,[R4, #+16]
   \   000002F4   000050E3           CMP      R0,#+0
   \   000002F8   01004012           SUBNE    R0,R0,#+1
   \   000002FC   10008415           STRNE    R0,[R4, #+16]
   \   00000300   0600A0E1           MOV      R0,R6
   \   00000304   F047BDE8           POP      {R4-R10,LR}
   \   00000308   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void _Tree_algobase<allocator<void>>::_Insert(bool, _Tree_algobase<allocator<void>>::_Genptr, _Tree_algobase<allocator<void>>::_Genptr)
   \                     ??_Insert:
   \   00000000   F0402DE9           PUSH     {R4-R7,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   100094E5           LDR      R0,[R4, #+16]
   \   0000000C   0350A0E1           MOV      R5,R3
   \   00000010   010080E2           ADD      R0,R0,#+1
   \   00000014   100084E5           STR      R0,[R4, #+16]
   \   00000018   040052E1           CMP      R2,R4
   \   0000001C   0300001A           BNE      ??_Insert_5
   \   00000020   045084E5           STR      R5,[R4, #+4]
   \   00000024   005084E5           STR      R5,[R4, #+0]
   \                     ??_Insert_6:
   \   00000028   085084E5           STR      R5,[R4, #+8]
   \   0000002C   130000EA           B        ??_Insert_7
   \                     ??_Insert_5:
   \   00000030   000051E3           CMP      R1,#+0
   \   00000034   0500000A           BEQ      ??_Insert_8
   \   00000038   005082E5           STR      R5,[R2, #+0]
   \   0000003C   000094E5           LDR      R0,[R4, #+0]
   \   00000040   000052E1           CMP      R2,R0
   \   00000044   0D00001A           BNE      ??_Insert_7
   \   00000048   005084E5           STR      R5,[R4, #+0]
   \   0000004C   0B0000EA           B        ??_Insert_7
   \                     ??_Insert_8:
   \   00000050   085082E5           STR      R5,[R2, #+8]
   \   00000054   080094E5           LDR      R0,[R4, #+8]
   \   00000058   000052E1           CMP      R2,R0
   \   0000005C   0700001A           BNE      ??_Insert_7
   \   00000060   F0FFFFEA           B        ??_Insert_6
   \                     ??_Insert_9:
   \   00000064   0C70C0E5           STRB     R7,[R0, #+12]
   \   00000068   0C70C2E5           STRB     R7,[R2, #+12]
   \   0000006C   040095E5           LDR      R0,[R5, #+4]
   \   00000070   040090E5           LDR      R0,[R0, #+4]
   \   00000074   0C60C0E5           STRB     R6,[R0, #+12]
   \   00000078   040095E5           LDR      R0,[R5, #+4]
   \   0000007C   045090E5           LDR      R5,[R0, #+4]
   \                     ??_Insert_7:
   \   00000080   0170A0E3           MOV      R7,#+1
   \   00000084   040095E5           LDR      R0,[R5, #+4]
   \   00000088   0C10D0E5           LDRB     R1,[R0, #+12]
   \   0000008C   000051E3           CMP      R1,#+0
   \   00000090   2F00001A           BNE      ??_Insert_10
   \   00000094   041090E5           LDR      R1,[R0, #+4]
   \   00000098   0060A0E3           MOV      R6,#+0
   \   0000009C   001091E5           LDR      R1,[R1, #+0]
   \   000000A0   010050E1           CMP      R0,R1
   \   000000A4   041090E5           LDR      R1,[R0, #+4]
   \   000000A8   1400001A           BNE      ??_Insert_11
   \   000000AC   082091E5           LDR      R2,[R1, #+8]
   \   000000B0   0C10D2E5           LDRB     R1,[R2, #+12]
   \   000000B4   000051E3           CMP      R1,#+0
   \   000000B8   E9FFFF0A           BEQ      ??_Insert_9
   \   000000BC   081090E5           LDR      R1,[R0, #+8]
   \   000000C0   010055E1           CMP      R5,R1
   \   000000C4   0300001A           BNE      ??_Insert_12
   \   000000C8   0050A0E1           MOV      R5,R0
   \   000000CC   0510A0E1           MOV      R1,R5
   \   000000D0   0400A0E1           MOV      R0,R4
   \   000000D4   ........           _BLF     ??_Lrotate,??_Lrotate??rA
   \                     ??_Insert_12:
   \   000000D8   040095E5           LDR      R0,[R5, #+4]
   \   000000DC   0C70C0E5           STRB     R7,[R0, #+12]
   \   000000E0   040095E5           LDR      R0,[R5, #+4]
   \   000000E4   040090E5           LDR      R0,[R0, #+4]
   \   000000E8   0C60C0E5           STRB     R6,[R0, #+12]
   \   000000EC   040095E5           LDR      R0,[R5, #+4]
   \   000000F0   041090E5           LDR      R1,[R0, #+4]
   \   000000F4   0400A0E1           MOV      R0,R4
   \   000000F8   ........           _BLF     ??_Rrotate,??_Rrotate??rA
   \   000000FC   DFFFFFEA           B        ??_Insert_7
   \                     ??_Insert_11:
   \   00000100   002091E5           LDR      R2,[R1, #+0]
   \   00000104   0C10D2E5           LDRB     R1,[R2, #+12]
   \   00000108   000051E3           CMP      R1,#+0
   \   0000010C   D4FFFF0A           BEQ      ??_Insert_9
   \   00000110   001090E5           LDR      R1,[R0, #+0]
   \   00000114   010055E1           CMP      R5,R1
   \   00000118   0300001A           BNE      ??_Insert_13
   \   0000011C   0050A0E1           MOV      R5,R0
   \   00000120   0510A0E1           MOV      R1,R5
   \   00000124   0400A0E1           MOV      R0,R4
   \   00000128   ........           _BLF     ??_Rrotate,??_Rrotate??rA
   \                     ??_Insert_13:
   \   0000012C   040095E5           LDR      R0,[R5, #+4]
   \   00000130   0C70C0E5           STRB     R7,[R0, #+12]
   \   00000134   040095E5           LDR      R0,[R5, #+4]
   \   00000138   040090E5           LDR      R0,[R0, #+4]
   \   0000013C   0C60C0E5           STRB     R6,[R0, #+12]
   \   00000140   040095E5           LDR      R0,[R5, #+4]
   \   00000144   041090E5           LDR      R1,[R0, #+4]
   \   00000148   0400A0E1           MOV      R0,R4
   \   0000014C   ........           _BLF     ??_Lrotate,??_Lrotate??rA
   \   00000150   CAFFFFEA           B        ??_Insert_7
   \                     ??_Insert_10:
   \   00000154   040094E5           LDR      R0,[R4, #+4]
   \   00000158   0C70C0E5           STRB     R7,[R0, #+12]
   \   0000015C   F040BDE8           POP      {R4-R7,LR}
   \   00000160   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs _Tree<_Tset_traits<AlarmBasic *, less<AlarmBasic *>, allocator<AlarmBasic *>, false>>::_Pairib _Tree<_Tset_traits<AlarmBasic *, less<AlarmBasic *>, allocator<AlarmBasic *>, false>>::insert(AlarmBasic *)
   \                     ??insert:
   \   00000000   F34C2DE9           PUSH     {R0,R1,R4-R7,R10,R11,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
   \   0000000C   040095E5           LDR      R0,[R5, #+4]
   \   00000010   0260A0E1           MOV      R6,R2
   \   00000014   05B0A0E1           MOV      R11,R5
   \   00000018   0170A0E3           MOV      R7,#+1
   \                     ??insert_2:
   \   0000001C   0D10D0E5           LDRB     R1,[R0, #+13]
   \   00000020   000051E3           CMP      R1,#+0
   \   00000024   0700001A           BNE      ??insert_3
   \   00000028   101090E5           LDR      R1,[R0, #+16]
   \   0000002C   00B0A0E1           MOV      R11,R0
   \   00000030   010056E1           CMP      R6,R1
   \   00000034   00009035           LDRCC    R0,[R0, #+0]
   \   00000038   0170A033           MOVCC    R7,#+1
   \   0000003C   08009025           LDRCS    R0,[R0, #+8]
   \   00000040   0070A023           MOVCS    R7,#+0
   \   00000044   F4FFFFEA           B        ??insert_2
   \                     ??insert_3:
   \   00000048   0B00A0E1           MOV      R0,R11
   \   0000004C   01A0A0E3           MOV      R10,#+1
   \   00000050   000057E3           CMP      R7,#+0
   \   00000054   0B00000A           BEQ      ??insert_4
   \   00000058   001095E5           LDR      R1,[R5, #+0]
   \   0000005C   010050E1           CMP      R0,R1
   \   00000060   0700001A           BNE      ??insert_5
   \   00000064   0630A0E1           MOV      R3,R6
   \   00000068   0B20A0E1           MOV      R2,R11
   \   0000006C   0110A0E3           MOV      R1,#+1
   \                     ??insert_6:
   \   00000070   0500A0E1           MOV      R0,R5
   \   00000074   ........           _BLF     ??_Insert_2,??_Insert??rA
   \   00000078   00008DE5           STR      R0,[SP, #+0]
   \   0000007C   04A0CDE5           STRB     R10,[SP, #+4]
   \   00000080   0A0000EA           B        ??insert_7
   \                     ??insert_5:
   \   00000084   ........           _BLF     ??_DecP,??_DecP??rA
   \                     ??insert_4:
   \   00000088   101090E5           LDR      R1,[R0, #+16]
   \   0000008C   060051E1           CMP      R1,R6
   \   00000090   0300002A           BCS      ??insert_8
   \   00000094   0630A0E1           MOV      R3,R6
   \   00000098   0B20A0E1           MOV      R2,R11
   \   0000009C   0710A0E1           MOV      R1,R7
   \   000000A0   F2FFFFEA           B        ??insert_6
   \                     ??insert_8:
   \   000000A4   00008DE5           STR      R0,[SP, #+0]
   \   000000A8   0010A0E3           MOV      R1,#+0
   \   000000AC   0410CDE5           STRB     R1,[SP, #+4]
   \                     ??insert_7:
   \   000000B0   0D00A0E1           MOV      R0,SP
   \   000000B4   030090E8           LDM      R0,{R0,R1}
   \   000000B8   030084E8           STM      R4,{R0,R1}
   \   000000BC   0400A0E1           MOV      R0,R4
   \   000000C0   F64CBDE8           POP      {R1,R2,R4-R7,R10,R11,LR}
   \   000000C4   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::_Pairib _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::insert(PRogramObjectBase *)
   \                     ??insert_1:
   \   00000000   F34C2DE9           PUSH     {R0,R1,R4-R7,R10,R11,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
   \   0000000C   040095E5           LDR      R0,[R5, #+4]
   \   00000010   0260A0E1           MOV      R6,R2
   \   00000014   05B0A0E1           MOV      R11,R5
   \   00000018   0170A0E3           MOV      R7,#+1
   \                     ??insert_9:
   \   0000001C   0D10D0E5           LDRB     R1,[R0, #+13]
   \   00000020   000051E3           CMP      R1,#+0
   \   00000024   0700001A           BNE      ??insert_10
   \   00000028   101090E5           LDR      R1,[R0, #+16]
   \   0000002C   00B0A0E1           MOV      R11,R0
   \   00000030   010056E1           CMP      R6,R1
   \   00000034   00009035           LDRCC    R0,[R0, #+0]
   \   00000038   0170A033           MOVCC    R7,#+1
   \   0000003C   08009025           LDRCS    R0,[R0, #+8]
   \   00000040   0070A023           MOVCS    R7,#+0
   \   00000044   F4FFFFEA           B        ??insert_9
   \                     ??insert_10:
   \   00000048   0B00A0E1           MOV      R0,R11
   \   0000004C   01A0A0E3           MOV      R10,#+1
   \   00000050   000057E3           CMP      R7,#+0
   \   00000054   0B00000A           BEQ      ??insert_11
   \   00000058   001095E5           LDR      R1,[R5, #+0]
   \   0000005C   010050E1           CMP      R0,R1
   \   00000060   0700001A           BNE      ??insert_12
   \   00000064   0630A0E1           MOV      R3,R6
   \   00000068   0B20A0E1           MOV      R2,R11
   \   0000006C   0110A0E3           MOV      R1,#+1
   \                     ??insert_13:
   \   00000070   0500A0E1           MOV      R0,R5
   \   00000074   ........           _BLF     ??_Insert_1,??_Insert??rA_1
   \   00000078   00008DE5           STR      R0,[SP, #+0]
   \   0000007C   04A0CDE5           STRB     R10,[SP, #+4]
   \   00000080   0A0000EA           B        ??insert_14
   \                     ??insert_12:
   \   00000084   ........           _BLF     ??_DecP,??_DecP??rA
   \                     ??insert_11:
   \   00000088   101090E5           LDR      R1,[R0, #+16]
   \   0000008C   060051E1           CMP      R1,R6
   \   00000090   0300002A           BCS      ??insert_15
   \   00000094   0630A0E1           MOV      R3,R6
   \   00000098   0B20A0E1           MOV      R2,R11
   \   0000009C   0710A0E1           MOV      R1,R7
   \   000000A0   F2FFFFEA           B        ??insert_13
   \                     ??insert_15:
   \   000000A4   00008DE5           STR      R0,[SP, #+0]
   \   000000A8   0010A0E3           MOV      R1,#+0
   \   000000AC   0410CDE5           STRB     R1,[SP, #+4]
   \                     ??insert_14:
   \   000000B0   0D00A0E1           MOV      R0,SP
   \   000000B4   030090E8           LDM      R0,{R0,R1}
   \   000000B8   030084E8           STM      R4,{R0,R1}
   \   000000BC   0400A0E1           MOV      R0,R4
   \   000000C0   F64CBDE8           POP      {R1,R2,R4-R7,R10,R11,LR}
   \   000000C4   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::iterator _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::erase(_Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::iterator, _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::iterator)
   \                     ??erase:
   \   00000000   F0402DE9           PUSH     {R4-R7,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   000094E5           LDR      R0,[R4, #+0]
   \   0000000C   0150A0E1           MOV      R5,R1
   \   00000010   0260A0E1           MOV      R6,R2
   \   00000014   000055E1           CMP      R5,R0
   \   00000018   04005601           CMPEQ    R6,R4
   \   0000001C   0D00001A           BNE      ??erase_3
   \   00000020   0400A0E1           MOV      R0,R4
   \   00000024   ........           _BLF     ??clear,??clear??rA
   \   00000028   000094E5           LDR      R0,[R4, #+0]
   \   0000002C   0C0000EA           B        ??erase_4
   \                     ??erase_5:
   \   00000030   0570A0E1           MOV      R7,R5
   \   00000034   0500A0E1           MOV      R0,R5
   \   00000038   ........           _BLF     ??_IncP,??_IncP??rA
   \   0000003C   0050A0E1           MOV      R5,R0
   \   00000040   0700A0E1           MOV      R0,R7
   \   00000044   ........           _BLF     ??_IncP,??_IncP??rA
   \   00000048   0710A0E1           MOV      R1,R7
   \   0000004C   0400A0E1           MOV      R0,R4
   \   00000050   ........           _BLF     ??_Erase,??_Erase??rA
   \   00000054   ........           _BLF     `??operator delete`,`??operator delete??rA`
   \                     ??erase_3:
   \   00000058   060055E1           CMP      R5,R6
   \   0000005C   F3FFFF1A           BNE      ??erase_5
   \   00000060   0500A0E1           MOV      R0,R5
   \                     ??erase_4:
   \   00000064   F040BDE8           POP      {R4-R7,LR}
   \   00000068   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs _Tree<_Tset_traits<unsigned int, less<unsigned int>, allocator<unsigned int>, false>>::iterator _Tree<_Tset_traits<unsigned int, less<unsigned int>, allocator<unsigned int>, false>>::erase(_Tree<_Tset_traits<unsigned int, less<unsigned int>, allocator<unsigned int>, false>>::iterator, _Tree<_Tset_traits<unsigned int, less<unsigned int>, allocator<unsigned int>, false>>::iterator)
   \                     ??erase_1:
   \   00000000   F0402DE9           PUSH     {R4-R7,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   000094E5           LDR      R0,[R4, #+0]
   \   0000000C   0150A0E1           MOV      R5,R1
   \   00000010   0260A0E1           MOV      R6,R2
   \   00000014   000055E1           CMP      R5,R0
   \   00000018   04005601           CMPEQ    R6,R4
   \   0000001C   1000001A           BNE      ??erase_6
   \   00000020   041094E5           LDR      R1,[R4, #+4]
   \   00000024   0400A0E1           MOV      R0,R4
   \   00000028   ........           _BLF     ??_Erase_2,??_Erase??rA_1
   \   0000002C   0400A0E1           MOV      R0,R4
   \   00000030   ........           _BLF     ??_Clear,??_Clear??rA
   \   00000034   000094E5           LDR      R0,[R4, #+0]
   \   00000038   0C0000EA           B        ??erase_7
   \                     ??erase_8:
   \   0000003C   0570A0E1           MOV      R7,R5
   \   00000040   0500A0E1           MOV      R0,R5
   \   00000044   ........           _BLF     ??_IncP,??_IncP??rA
   \   00000048   0050A0E1           MOV      R5,R0
   \   0000004C   0700A0E1           MOV      R0,R7
   \   00000050   ........           _BLF     ??_IncP,??_IncP??rA
   \   00000054   0710A0E1           MOV      R1,R7
   \   00000058   0400A0E1           MOV      R0,R4
   \   0000005C   ........           _BLF     ??_Erase,??_Erase??rA
   \   00000060   ........           _BLF     `??operator delete`,`??operator delete??rA`
   \                     ??erase_6:
   \   00000064   060055E1           CMP      R5,R6
   \   00000068   F3FFFF1A           BNE      ??erase_8
   \   0000006C   0500A0E1           MOV      R0,R5
   \                     ??erase_7:
   \   00000070   F040BDE8           POP      {R4-R7,LR}
   \   00000074   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs unsigned int _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::erase(PRogramObjectBase *)
   \                     ??erase_2:
   \   00000000   73402DE9           PUSH     {R0,R1,R4-R6,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0120A0E1           MOV      R2,R1
   \   0000000C   0410A0E1           MOV      R1,R4
   \   00000010   0D00A0E1           MOV      R0,SP
   \   00000014   ........           _BLF     ??equal_range,??equal_range??rA
   \   00000018   04509DE5           LDR      R5,[SP, #+4]
   \   0000001C   00009DE5           LDR      R0,[SP, #+0]
   \   00000020   0060A0E3           MOV      R6,#+0
   \   00000024   010000EA           B        ??erase_9
   \                     ??erase_10:
   \   00000028   016086E2           ADD      R6,R6,#+1
   \   0000002C   ........           _BLF     ??_IncP,??_IncP??rA
   \                     ??erase_9:
   \   00000030   050050E1           CMP      R0,R5
   \   00000034   FBFFFF1A           BNE      ??erase_10
   \   00000038   04209DE5           LDR      R2,[SP, #+4]
   \   0000003C   00109DE5           LDR      R1,[SP, #+0]
   \   00000040   0400A0E1           MOV      R0,R4
   \   00000044   ........           _BLF     ??erase,??erase??rA
   \   00000048   0600A0E1           MOV      R0,R6
   \   0000004C   7640BDE8           POP      {R1,R2,R4-R6,LR}
   \   00000050   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::clear()
   \                     ??clear:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   041094E5           LDR      R1,[R4, #+4]
   \   0000000C   ........           _BLF     ??_Erase_1,??_Erase??rA_2
   \   00000010   0400A0E1           MOV      R0,R4
   \   00000014   ........           _BLF     ??_Clear,??_Clear??rA
   \   00000018   1040BDE8           POP      {R4,LR}
   \   0000001C   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::_Pairii _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::equal_range(PRogramObjectBase *)
   \                     ??equal_range:
   \   00000000   F3402DE9           PUSH     {R0,R1,R4-R7,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
   \   0000000C   0260A0E1           MOV      R6,R2
   \   00000010   0610A0E1           MOV      R1,R6
   \   00000014   0500A0E1           MOV      R0,R5
   \   00000018   ........           _BLF     ??_Ubound,??_Ubound??rA
   \   0000001C   0070A0E1           MOV      R7,R0
   \   00000020   0610A0E1           MOV      R1,R6
   \   00000024   0500A0E1           MOV      R0,R5
   \   00000028   ........           _BLF     ??_Lbound,??_Lbound??rA
   \   0000002C   00008DE5           STR      R0,[SP, #+0]
   \   00000030   04708DE5           STR      R7,[SP, #+4]
   \   00000034   0D00A0E1           MOV      R0,SP
   \   00000038   030090E8           LDM      R0,{R0,R1}
   \   0000003C   030084E8           STM      R4,{R0,R1}
   \   00000040   0400A0E1           MOV      R0,R4
   \   00000044   F640BDE8           POP      {R1,R2,R4-R7,LR}
   \   00000048   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void _Tree<_Tset_traits<unsigned int, less<unsigned int>, allocator<unsigned int>, false>>::_Copy(_Tree<_Tset_traits<unsigned int, less<unsigned int>, allocator<unsigned int>, false>> const &)
   \                     ??_Copy:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   0150A0E1           MOV      R5,R1
   \   00000008   041095E5           LDR      R1,[R5, #+4]
   \   0000000C   0040A0E1           MOV      R4,R0
   \   00000010   0420A0E1           MOV      R2,R4
   \   00000014   ........           _BLF     ??_Copy_1,??_Copy??rA
   \   00000018   040084E5           STR      R0,[R4, #+4]
   \   0000001C   100095E5           LDR      R0,[R5, #+16]
   \   00000020   100084E5           STR      R0,[R4, #+16]
   \   00000024   040094E5           LDR      R0,[R4, #+4]
   \   00000028   0D10D0E5           LDRB     R1,[R0, #+13]
   \   0000002C   000051E3           CMP      R1,#+0
   \   00000030   0900001A           BNE      ??_Copy_2
   \   00000034   0010A0E1           MOV      R1,R0
   \   00000038   000000EA           B        ??_Copy_3
   \                     ??_Copy_4:
   \   0000003C   0210A0E1           MOV      R1,R2
   \                     ??_Copy_3:
   \   00000040   002091E5           LDR      R2,[R1, #+0]
   \   00000044   0D30D2E5           LDRB     R3,[R2, #+13]
   \   00000048   000053E3           CMP      R3,#+0
   \   0000004C   FAFFFF0A           BEQ      ??_Copy_4
   \   00000050   001084E5           STR      R1,[R4, #+0]
   \   00000054   ........           _BLF     ??_Max,??_Max??rA
   \   00000058   010000EA           B        ??_Copy_5
   \                     ??_Copy_2:
   \   0000005C   004084E5           STR      R4,[R4, #+0]
   \   00000060   0400A0E1           MOV      R0,R4
   \                     ??_Copy_5:
   \   00000064   080084E5           STR      R0,[R4, #+8]
   \   00000068   3040BDE8           POP      {R4,R5,LR}
   \   0000006C   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs _Tree<_Tset_traits<unsigned int, less<unsigned int>, allocator<unsigned int>, false>>::_Nodeptr _Tree<_Tset_traits<unsigned int, less<unsigned int>, allocator<unsigned int>, false>>::_Copy(_Tree<_Tset_traits<unsigned int, less<unsigned int>, allocator<unsigned int>, false>>::_Nodeptr, _Tree<_Tset_traits<unsigned int, less<unsigned int>, allocator<unsigned int>, false>>::_Nodeptr)
   \                     ??_Copy_1:
   \   00000000   F0472DE9           PUSH     {R4-R10,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
   \   0000000C   0D00D5E5           LDRB     R0,[R5, #+13]
   \   00000010   0280A0E1           MOV      R8,R2
   \   00000014   0460A0E1           MOV      R6,R4
   \   00000018   000050E3           CMP      R0,#+0
   \   0000001C   1900001A           BNE      ??_Copy_6
   \   00000020   0C90D5E5           LDRB     R9,[R5, #+12]
   \   00000024   10A095E5           LDR      R10,[R5, #+16]
   \   00000028   1400A0E3           MOV      R0,#+20
   \   0000002C   ........           _BLF     `??operator new`,`??operator new??rA`
   \   00000030   0070B0E1           MOVS     R7,R0
   \   00000034   0600000A           BEQ      ??_Copy_7
   \   00000038   004087E5           STR      R4,[R7, #+0]
   \   0000003C   048087E5           STR      R8,[R7, #+4]
   \   00000040   084087E5           STR      R4,[R7, #+8]
   \   00000044   0C90C7E5           STRB     R9,[R7, #+12]
   \   00000048   0000A0E3           MOV      R0,#+0
   \   0000004C   0D00C7E5           STRB     R0,[R7, #+13]
   \   00000050   10A087E5           STR      R10,[R7, #+16]
   \                     ??_Copy_7:
   \   00000054   0D00D6E5           LDRB     R0,[R6, #+13]
   \   00000058   001095E5           LDR      R1,[R5, #+0]
   \   0000005C   0720A0E1           MOV      R2,R7
   \   00000060   000050E3           CMP      R0,#+0
   \   00000064   0760A011           MOVNE    R6,R7
   \   00000068   0400A0E1           MOV      R0,R4
   \   0000006C   E3FFFFEB           BL       ??_Copy_1
   \   00000070   000087E5           STR      R0,[R7, #+0]
   \   00000074   081095E5           LDR      R1,[R5, #+8]
   \   00000078   0720A0E1           MOV      R2,R7
   \   0000007C   0400A0E1           MOV      R0,R4
   \   00000080   DEFFFFEB           BL       ??_Copy_1
   \   00000084   080087E5           STR      R0,[R7, #+8]
   \                     ??_Copy_6:
   \   00000088   0600A0E1           MOV      R0,R6
   \   0000008C   F047BDE8           POP      {R4-R10,LR}
   \   00000090   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::_Erase(_Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::_Nodeptr)
   \                     ??_Erase_1:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
   \   0000000C   0560A0E1           MOV      R6,R5
   \   00000010   060000EA           B        ??_Erase_27
   \                     ??_Erase_28:
   \   00000014   081096E5           LDR      R1,[R6, #+8]
   \   00000018   0400A0E1           MOV      R0,R4
   \   0000001C   F7FFFFEB           BL       ??_Erase_1
   \   00000020   006096E5           LDR      R6,[R6, #+0]
   \   00000024   0500A0E1           MOV      R0,R5
   \   00000028   ........           _BLF     `??operator delete`,`??operator delete??rA`
   \   0000002C   0650A0E1           MOV      R5,R6
   \                     ??_Erase_27:
   \   00000030   0D00D6E5           LDRB     R0,[R6, #+13]
   \   00000034   000050E3           CMP      R0,#+0
   \   00000038   F5FFFF0A           BEQ      ??_Erase_28
   \   0000003C   7040BDE8           POP      {R4-R6,LR}
   \   00000040   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void _Tree<_Tset_traits<unsigned int, less<unsigned int>, allocator<unsigned int>, false>>::_Erase(_Tree<_Tset_traits<unsigned int, less<unsigned int>, allocator<unsigned int>, false>>::_Nodeptr)
   \                     ??_Erase_2:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
   \   0000000C   0560A0E1           MOV      R6,R5
   \   00000010   060000EA           B        ??_Erase_29
   \                     ??_Erase_30:
   \   00000014   081096E5           LDR      R1,[R6, #+8]
   \   00000018   0400A0E1           MOV      R0,R4
   \   0000001C   F7FFFFEB           BL       ??_Erase_2
   \   00000020   006096E5           LDR      R6,[R6, #+0]
   \   00000024   0500A0E1           MOV      R0,R5
   \   00000028   ........           _BLF     `??operator delete`,`??operator delete??rA`
   \   0000002C   0650A0E1           MOV      R5,R6
   \                     ??_Erase_29:
   \   00000030   0D00D6E5           LDRB     R0,[R6, #+13]
   \   00000034   000050E3           CMP      R0,#+0
   \   00000038   F5FFFF0A           BEQ      ??_Erase_30
   \   0000003C   7040BDE8           POP      {R4-R6,LR}
   \   00000040   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::iterator _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::_Insert(bool, _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::_Nodeptr, PRogramObjectBase *)
   \                     ??_Insert_1:
   \   00000000   F0412DE9           PUSH     {R4-R8,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
   \   0000000C   0260A0E1           MOV      R6,R2
   \   00000010   0370A0E1           MOV      R7,R3
   \   00000014   1400A0E3           MOV      R0,#+20
   \   00000018   ........           _BLF     `??operator new`,`??operator new??rA`
   \   0000001C   0080B0E1           MOVS     R8,R0
   \   00000020   0600000A           BEQ      ??_Insert_14
   \   00000024   004088E5           STR      R4,[R8, #+0]
   \   00000028   046088E5           STR      R6,[R8, #+4]
   \   0000002C   084088E5           STR      R4,[R8, #+8]
   \   00000030   0000A0E3           MOV      R0,#+0
   \   00000034   0C00C8E5           STRB     R0,[R8, #+12]
   \   00000038   0D00C8E5           STRB     R0,[R8, #+13]
   \   0000003C   107088E5           STR      R7,[R8, #+16]
   \                     ??_Insert_14:
   \   00000040   0830A0E1           MOV      R3,R8
   \   00000044   0620A0E1           MOV      R2,R6
   \   00000048   0510A0E1           MOV      R1,R5
   \   0000004C   0400A0E1           MOV      R0,R4
   \   00000050   ........           _BLF     ??_Insert,??_Insert??rA_2
   \   00000054   0800A0E1           MOV      R0,R8
   \   00000058   F041BDE8           POP      {R4-R8,LR}
   \   0000005C   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs _Tree<_Tset_traits<AlarmBasic *, less<AlarmBasic *>, allocator<AlarmBasic *>, false>>::iterator _Tree<_Tset_traits<AlarmBasic *, less<AlarmBasic *>, allocator<AlarmBasic *>, false>>::_Insert(bool, _Tree<_Tset_traits<AlarmBasic *, less<AlarmBasic *>, allocator<AlarmBasic *>, false>>::_Nodeptr, AlarmBasic *)
   \                     ??_Insert_2:
   \   00000000   F0412DE9           PUSH     {R4-R8,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
   \   0000000C   0260A0E1           MOV      R6,R2
   \   00000010   0370A0E1           MOV      R7,R3
   \   00000014   1400A0E3           MOV      R0,#+20
   \   00000018   ........           _BLF     `??operator new`,`??operator new??rA`
   \   0000001C   0080B0E1           MOVS     R8,R0
   \   00000020   0600000A           BEQ      ??_Insert_15
   \   00000024   004088E5           STR      R4,[R8, #+0]
   \   00000028   046088E5           STR      R6,[R8, #+4]
   \   0000002C   084088E5           STR      R4,[R8, #+8]
   \   00000030   0000A0E3           MOV      R0,#+0
   \   00000034   0C00C8E5           STRB     R0,[R8, #+12]
   \   00000038   0D00C8E5           STRB     R0,[R8, #+13]
   \   0000003C   107088E5           STR      R7,[R8, #+16]
   \                     ??_Insert_15:
   \   00000040   0830A0E1           MOV      R3,R8
   \   00000044   0620A0E1           MOV      R2,R6
   \   00000048   0510A0E1           MOV      R1,R5
   \   0000004C   0400A0E1           MOV      R0,R4
   \   00000050   ........           _BLF     ??_Insert,??_Insert??rA_2
   \   00000054   0800A0E1           MOV      R0,R8
   \   00000058   F041BDE8           POP      {R4-R8,LR}
   \   0000005C   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::_Nodeptr _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::_Lbound(PRogramObjectBase *) const
   \                     ??_Lbound:
   \   00000000   042090E5           LDR      R2,[R0, #+4]
   \                     ??_Lbound_1:
   \   00000004   0D30D2E5           LDRB     R3,[R2, #+13]
   \   00000008   000053E3           CMP      R3,#+0
   \   0000000C   1EFF2F11           BXNE     LR
   \   00000010   103092E5           LDR      R3,[R2, #+16]
   \   00000014   010053E1           CMP      R3,R1
   \   00000018   08209235           LDRCC    R2,[R2, #+8]
   \   0000001C   0200A021           MOVCS    R0,R2
   \   00000020   00209225           LDRCS    R2,[R2, #+0]
   \   00000024   F6FFFFEA           B        ??_Lbound_1

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::_Nodeptr _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::_Ubound(PRogramObjectBase *) const
   \                     ??_Ubound:
   \   00000000   042090E5           LDR      R2,[R0, #+4]
   \                     ??_Ubound_1:
   \   00000004   0D30D2E5           LDRB     R3,[R2, #+13]
   \   00000008   000053E3           CMP      R3,#+0
   \   0000000C   1EFF2F11           BXNE     LR
   \   00000010   103092E5           LDR      R3,[R2, #+16]
   \   00000014   030051E1           CMP      R1,R3
   \   00000018   08209225           LDRCS    R2,[R2, #+8]
   \   0000001C   0200A031           MOVCC    R0,R2
   \   00000020   00209235           LDRCC    R2,[R2, #+0]
   \   00000024   F6FFFFEA           B        ??_Ubound_1

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs set<PRogramObjectBase *>::~set()
   \                     `?~set`:
   \   00000000   00402DE9           PUSH     {LR}
   \   00000004   ........           _BLF     ??clear,??clear??rA
   \   00000008   0040BDE8           POP      {LR}
   \   0000000C   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs set<unsigned int> &set<unsigned int>::operator=(set<unsigned int> const &)
   \                     `??operator=`:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
   \   0000000C   050054E1           CMP      R4,R5
   \   00000010   0500000A           BEQ      `??operator=_1`
   \   00000014   001094E5           LDR      R1,[R4, #+0]
   \   00000018   0420A0E1           MOV      R2,R4
   \   0000001C   ........           _BLF     ??erase_1,??erase??rA_1
   \   00000020   0510A0E1           MOV      R1,R5
   \   00000024   0400A0E1           MOV      R0,R4
   \   00000028   ........           _BLF     ??_Copy,??_Copy??rA_1
   \                     `??operator=_1`:
   \   0000002C   0400A0E1           MOV      R0,R4
   \   00000030   3040BDE8           POP      {R4,R5,LR}
   \   00000034   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void _Vector_impl<PRogramObjectBase *, allocator<PRogramObjectBase *>>::_Tidy0()
   \                     ??_Tidy0:
   \   00000000   00402DE9           PUSH     {LR}
   \   00000004   001090E5           LDR      R1,[R0, #+0]
   \   00000008   000051E3           CMP      R1,#+0
   \   0000000C   0200000A           BEQ      ??_Tidy0_1
   \   00000010   041080E5           STR      R1,[R0, #+4]
   \   00000014   0100A0E1           MOV      R0,R1
   \   00000018   ........           _BLF     `??operator delete`,`??operator delete??rA`
   \                     ??_Tidy0_1:
   \   0000001C   0040BDE8           POP      {LR}
   \   00000020   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs AnalogInput ** _Vector_impl<AnalogInput *, allocator<AnalogInput *>>::_Insert(AnalogInput **, AnalogInput * const &)
   \                     ??_Insert_3:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   005092E5           LDR      R5,[R2, #+0]
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   000094E5           LDR      R0,[R4, #+0]
   \   00000010   0120A0E3           MOV      R2,#+1
   \   00000014   000050E3           CMP      R0,#+0
   \   00000018   0060A003           MOVEQ    R6,#+0
   \   0000001C   00604110           SUBNE    R6,R1,R0
   \   00000020   0400A0E1           MOV      R0,R4
   \   00000024   ........           _BLF     ??_Make_room,??_Make_room??rA
   \   00000028   0110A0E3           MOV      R1,#+1
   \                     ??_Insert_16:
   \   0000002C   ........           STR      R5,[R0], #+4
   \   00000030   011051E2           SUBS     R1,R1,#+1
   \   00000034   FCFFFF1A           BNE      ??_Insert_16
   \   00000038   000094E5           LDR      R0,[R4, #+0]
   \   0000003C   000086E0           ADD      R0,R6,R0
   \   00000040   7040BDE8           POP      {R4-R6,LR}
   \   00000044   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs PRogramObjectBase ** _Vector_impl<PRogramObjectBase *, allocator<PRogramObjectBase *>>::_Insert(PRogramObjectBase **, PRogramObjectBase * const &)
   \                     ??_Insert_4:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   005092E5           LDR      R5,[R2, #+0]
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   000094E5           LDR      R0,[R4, #+0]
   \   00000010   0120A0E3           MOV      R2,#+1
   \   00000014   000050E3           CMP      R0,#+0
   \   00000018   0060A003           MOVEQ    R6,#+0
   \   0000001C   00604110           SUBNE    R6,R1,R0
   \   00000020   0400A0E1           MOV      R0,R4
   \   00000024   ........           _BLF     ??_Make_room_1,??_Make_room??rA_1
   \   00000028   0110A0E3           MOV      R1,#+1
   \                     ??_Insert_17:
   \   0000002C   ........           STR      R5,[R0], #+4
   \   00000030   011051E2           SUBS     R1,R1,#+1
   \   00000034   FCFFFF1A           BNE      ??_Insert_17
   \   00000038   000094E5           LDR      R0,[R4, #+0]
   \   0000003C   000086E0           ADD      R0,R6,R0
   \   00000040   7040BDE8           POP      {R4-R6,LR}
   \   00000044   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs AnalogInput ** _Vector_impl<AnalogInput *, allocator<AnalogInput *>>::_Make_room(AnalogInput **, unsigned int)
   \                     ??_Make_room:
   \   00000000   F0472DE9           PUSH     {R4-R10,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   000094E5           LDR      R0,[R4, #+0]
   \   0000000C   0150A0E1           MOV      R5,R1
   \   00000010   081094E5           LDR      R1,[R4, #+8]
   \   00000014   0260A0E1           MOV      R6,R2
   \   00000018   001041E0           SUB      R1,R1,R0
   \   0000001C   2171A0E1           LSR      R7,R1,#+2
   \   00000020   041094E5           LDR      R1,[R4, #+4]
   \   00000024   000056E3           CMP      R6,#+0
   \   00000028   000041E0           SUB      R0,R1,R0
   \   0000002C   2001A0E1           LSR      R0,R0,#+2
   \   00000030   2C00000A           BEQ      ??_Make_room_2
   \   00000034   C024E0E3           MVN      R2,#-1073741824
   \   00000038   002042E0           SUB      R2,R2,R0
   \   0000003C   060052E1           CMP      R2,R6
   \   00000040   2800003A           BCC      ??_Make_room_2
   \   00000044   008086E0           ADD      R8,R6,R0
   \   00000048   080057E1           CMP      R7,R8
   \   0000004C   1F00002A           BCS      ??_Make_room_3
   \   00000050   A700A0E1           LSR      R0,R7,#+1
   \   00000054   C014E0E3           MVN      R1,#-1073741824
   \   00000058   001041E0           SUB      R1,R1,R0
   \   0000005C   070051E1           CMP      R1,R7
   \   00000060   0070A033           MOVCC    R7,#+0
   \   00000064   07708020           ADDCS    R7,R0,R7
   \   00000068   080057E1           CMP      R7,R8
   \   0000006C   0870A031           MOVCC    R7,R8
   \   00000070   0701A0E1           LSL      R0,R7,#+2
   \   00000074   ........           _BLF     `??operator new`,`??operator new??rA`
   \   00000078   0090A0E1           MOV      R9,R0
   \   0000007C   000094E5           LDR      R0,[R4, #+0]
   \   00000080   0920A0E1           MOV      R2,R9
   \   00000084   0510A0E1           MOV      R1,R5
   \   00000088   ........           _BLF     _Copy_a4,??_Copy_a4??rA
   \   0000008C   041094E5           LDR      R1,[R4, #+4]
   \   00000090   00A0A0E1           MOV      R10,R0
   \   00000094   06218AE0           ADD      R2,R10,R6, LSL #+2
   \   00000098   0500A0E1           MOV      R0,R5
   \   0000009C   ........           _BLF     _Copy_a4,??_Copy_a4??rA
   \   000000A0   000094E5           LDR      R0,[R4, #+0]
   \   000000A4   000050E3           CMP      R0,#+0
   \   000000A8   0100000A           BEQ      ??_Make_room_4
   \   000000AC   040084E5           STR      R0,[R4, #+4]
   \   000000B0   ........           _BLF     `??operator delete`,`??operator delete??rA`
   \                     ??_Make_room_4:
   \   000000B4   070189E0           ADD      R0,R9,R7, LSL #+2
   \   000000B8   080084E5           STR      R0,[R4, #+8]
   \   000000BC   080189E0           ADD      R0,R9,R8, LSL #+2
   \   000000C0   040084E5           STR      R0,[R4, #+4]
   \   000000C4   009084E5           STR      R9,[R4, #+0]
   \   000000C8   0A50A0E1           MOV      R5,R10
   \   000000CC   050000EA           B        ??_Make_room_2
   \                     ??_Make_room_3:
   \   000000D0   062181E0           ADD      R2,R1,R6, LSL #+2
   \   000000D4   0500A0E1           MOV      R0,R5
   \   000000D8   ........           _BLF     _Copy_backward_a4,??_Copy_backward_a4??rA
   \   000000DC   040094E5           LDR      R0,[R4, #+4]
   \   000000E0   060180E0           ADD      R0,R0,R6, LSL #+2
   \   000000E4   040084E5           STR      R0,[R4, #+4]
   \                     ??_Make_room_2:
   \   000000E8   0500A0E1           MOV      R0,R5
   \   000000EC   F047BDE8           POP      {R4-R10,LR}
   \   000000F0   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs PRogramObjectBase ** _Vector_impl<PRogramObjectBase *, allocator<PRogramObjectBase *>>::_Make_room(PRogramObjectBase **, unsigned int)
   \                     ??_Make_room_1:
   \   00000000   F0472DE9           PUSH     {R4-R10,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   000094E5           LDR      R0,[R4, #+0]
   \   0000000C   0150A0E1           MOV      R5,R1
   \   00000010   081094E5           LDR      R1,[R4, #+8]
   \   00000014   0260A0E1           MOV      R6,R2
   \   00000018   001041E0           SUB      R1,R1,R0
   \   0000001C   2171A0E1           LSR      R7,R1,#+2
   \   00000020   041094E5           LDR      R1,[R4, #+4]
   \   00000024   000056E3           CMP      R6,#+0
   \   00000028   000041E0           SUB      R0,R1,R0
   \   0000002C   2001A0E1           LSR      R0,R0,#+2
   \   00000030   2900000A           BEQ      ??_Make_room_5
   \   00000034   C024E0E3           MVN      R2,#-1073741824
   \   00000038   002042E0           SUB      R2,R2,R0
   \   0000003C   060052E1           CMP      R2,R6
   \   00000040   2500003A           BCC      ??_Make_room_5
   \   00000044   008086E0           ADD      R8,R6,R0
   \   00000048   080057E1           CMP      R7,R8
   \   0000004C   1C00002A           BCS      ??_Make_room_6
   \   00000050   A700A0E1           LSR      R0,R7,#+1
   \   00000054   C014E0E3           MVN      R1,#-1073741824
   \   00000058   001041E0           SUB      R1,R1,R0
   \   0000005C   070051E1           CMP      R1,R7
   \   00000060   0070A033           MOVCC    R7,#+0
   \   00000064   07708020           ADDCS    R7,R0,R7
   \   00000068   080057E1           CMP      R7,R8
   \   0000006C   0870A031           MOVCC    R7,R8
   \   00000070   0701A0E1           LSL      R0,R7,#+2
   \   00000074   ........           _BLF     `??operator new`,`??operator new??rA`
   \   00000078   0090A0E1           MOV      R9,R0
   \   0000007C   000094E5           LDR      R0,[R4, #+0]
   \   00000080   0920A0E1           MOV      R2,R9
   \   00000084   0510A0E1           MOV      R1,R5
   \   00000088   ........           _BLF     _Copy_a4,??_Copy_a4??rA
   \   0000008C   041094E5           LDR      R1,[R4, #+4]
   \   00000090   00A0A0E1           MOV      R10,R0
   \   00000094   06218AE0           ADD      R2,R10,R6, LSL #+2
   \   00000098   0500A0E1           MOV      R0,R5
   \   0000009C   ........           _BLF     _Copy_a4,??_Copy_a4??rA
   \   000000A0   0400A0E1           MOV      R0,R4
   \   000000A4   ........           _BLF     ??_Tidy0,??_Tidy0??rA
   \   000000A8   070189E0           ADD      R0,R9,R7, LSL #+2
   \   000000AC   080084E5           STR      R0,[R4, #+8]
   \   000000B0   080189E0           ADD      R0,R9,R8, LSL #+2
   \   000000B4   040084E5           STR      R0,[R4, #+4]
   \   000000B8   009084E5           STR      R9,[R4, #+0]
   \   000000BC   0A50A0E1           MOV      R5,R10
   \   000000C0   050000EA           B        ??_Make_room_5
   \                     ??_Make_room_6:
   \   000000C4   062181E0           ADD      R2,R1,R6, LSL #+2
   \   000000C8   0500A0E1           MOV      R0,R5
   \   000000CC   ........           _BLF     _Copy_backward_a4,??_Copy_backward_a4??rA
   \   000000D0   040094E5           LDR      R0,[R4, #+4]
   \   000000D4   060180E0           ADD      R0,R0,R6, LSL #+2
   \   000000D8   040084E5           STR      R0,[R4, #+4]
   \                     ??_Make_room_5:
   \   000000DC   0500A0E1           MOV      R0,R5
   \   000000E0   F047BDE8           POP      {R4-R10,LR}
   \   000000E4   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void _Vector_impl<AnalogInput *, allocator<AnalogInput *>>::_Push_back0(AnalogInput *)
   \                     ??_Push_back0:
   \   00000000   02402DE9           PUSH     {R1,LR}
   \   00000004   041090E5           LDR      R1,[R0, #+4]
   \   00000008   082090E5           LDR      R2,[R0, #+8]
   \   0000000C   020051E1           CMP      R1,R2
   \   00000010   0800002A           BCS      ??_Push_back0_2
   \   00000014   00209DE5           LDR      R2,[SP, #+0]
   \   00000018   0130A0E3           MOV      R3,#+1
   \   0000001C   01C0A0E1           MOV      R12,R1
   \                     ??_Push_back0_3:
   \   00000020   ........           STR      R2,[R12], #+4
   \   00000024   013053E2           SUBS     R3,R3,#+1
   \   00000028   FCFFFF1A           BNE      ??_Push_back0_3
   \   0000002C   041081E2           ADD      R1,R1,#+4
   \   00000030   041080E5           STR      R1,[R0, #+4]
   \   00000034   010000EA           B        ??_Push_back0_4
   \                     ??_Push_back0_2:
   \   00000038   0D20A0E1           MOV      R2,SP
   \   0000003C   ........           _BLF     ??_Insert_3,??_Insert??rA_3
   \                     ??_Push_back0_4:
   \   00000040   0140BDE8           POP      {R0,LR}
   \   00000044   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void _Vector_impl<PRogramObjectBase *, allocator<PRogramObjectBase *>>::_Push_back0(PRogramObjectBase *)
   \                     ??_Push_back0_1:
   \   00000000   02402DE9           PUSH     {R1,LR}
   \   00000004   041090E5           LDR      R1,[R0, #+4]
   \   00000008   082090E5           LDR      R2,[R0, #+8]
   \   0000000C   020051E1           CMP      R1,R2
   \   00000010   0800002A           BCS      ??_Push_back0_5
   \   00000014   00209DE5           LDR      R2,[SP, #+0]
   \   00000018   0130A0E3           MOV      R3,#+1
   \   0000001C   01C0A0E1           MOV      R12,R1
   \                     ??_Push_back0_6:
   \   00000020   ........           STR      R2,[R12], #+4
   \   00000024   013053E2           SUBS     R3,R3,#+1
   \   00000028   FCFFFF1A           BNE      ??_Push_back0_6
   \   0000002C   041081E2           ADD      R1,R1,#+4
   \   00000030   041080E5           STR      R1,[R0, #+4]
   \   00000034   010000EA           B        ??_Push_back0_7
   \                     ??_Push_back0_5:
   \   00000038   0D20A0E1           MOV      R2,SP
   \   0000003C   ........           _BLF     ??_Insert_4,??_Insert??rA_4
   \                     ??_Push_back0_7:
   \   00000040   0140BDE8           POP      {R0,LR}
   \   00000044   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs vector<PRogramObjectBase *>::~vector()
   \                     `?~vector`:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   ........           _BLF     ??_Tidy0,??_Tidy0??rA
   \   0000000C   0000A0E3           MOV      R0,#+0
   \   00000010   000084E5           STR      R0,[R4, #+0]
   \   00000014   040084E5           STR      R0,[R4, #+4]
   \   00000018   080084E5           STR      R0,[R4, #+8]
   \   0000001C   1040BDE8           POP      {R4,LR}
   \   00000020   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void operator+(string const &, string const &)
   \                     `??operator+`:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   1CD04DE2           SUB      SP,SP,#+28
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   0250A0E1           MOV      R5,R2
   \   00000010   0D00A0E1           MOV      R0,SP
   \   00000014   ........           _BLF     ??string,??string??rA
   \   00000018   34109FE5           LDR      R1,`??operator+_2`  ;; ??npos
   \   0000001C   0020A0E3           MOV      R2,#+0
   \   00000020   003091E5           LDR      R3,[R1, #+0]
   \   00000024   0510A0E1           MOV      R1,R5
   \   00000028   ........           _BLF     ??append,??append??rA
   \   0000002C   0010A0E1           MOV      R1,R0
   \   00000030   0400A0E1           MOV      R0,R4
   \   00000034   ........           _BLF     ??string,??string??rA
   \   00000038   0020A0E3           MOV      R2,#+0
   \   0000003C   0110A0E3           MOV      R1,#+1
   \   00000040   0D00A0E1           MOV      R0,SP
   \   00000044   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000048   1CD08DE2           ADD      SP,SP,#+28
   \   0000004C   3040BDE8           POP      {R4,R5,LR}
   \   00000050   1EFF2FE1           BX       LR               ;; return
   \                     `??operator+_2`:
   \   00000054   ........           DC32     ??npos

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void operator+(string const &, char const *)
   \                     `??operator+_1`:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   1CD04DE2           SUB      SP,SP,#+28
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   0250A0E1           MOV      R5,R2
   \   00000010   0D00A0E1           MOV      R0,SP
   \   00000014   ........           _BLF     ??string,??string??rA
   \   00000018   0060A0E1           MOV      R6,R0
   \   0000001C   0500A0E1           MOV      R0,R5
   \   00000020   ........           _BLF     strlen,??strlen??rA
   \   00000024   0020A0E1           MOV      R2,R0
   \   00000028   0510A0E1           MOV      R1,R5
   \   0000002C   0600A0E1           MOV      R0,R6
   \   00000030   ........           _BLF     ??append_1,??append??rA_1
   \   00000034   0010A0E1           MOV      R1,R0
   \   00000038   0400A0E1           MOV      R0,R4
   \   0000003C   ........           _BLF     ??string,??string??rA
   \   00000040   0020A0E3           MOV      R2,#+0
   \   00000044   0110A0E3           MOV      R1,#+1
   \   00000048   0D00A0E1           MOV      R0,SP
   \   0000004C   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000050   1CD08DE2           ADD      SP,SP,#+28
   \   00000054   7040BDE8           POP      {R4-R6,LR}
   \   00000058   1EFF2FE1           BX       LR               ;; return
      2          #pragma hdrstop
      3          #ifdef BORLAND
      4              #pragma package(smart_init)
      5          #endif
      6          
      7          //---------------------------------------------------------------------------
      8          

   \                                 In segment DATA_C, align 4, align-sorted
      9          vector<PRogramObjectBase*>PROWaterIngress::AllObjVector;
   \                     ?_0:
   \   00000000   ............       DC32 ?_1, ??AllObjVector, `?~vector`
   \              ............
   \   0000000C   ............       DC32 ?_3, ??ObjVector, `?~vector`
   \              ............
   \   00000018   ............       DC32 ?_5, ??ObjectSet, `?~set`
   \              ............

   \                                 In segment DATA_Z, align 4, align-sorted
     10          vector<PRogramObjectBase*>PROWaterIngress::ObjVector;
     11          set<PRogramObjectBase*>PROWaterIngress::ObjectSet;
   \                     ??ObjectSet:
   \   00000000                      DS8 24
   \                     ??AllObjVector:
   \   00000018                      DS8 12
   \                     ??ObjVector:
   \   00000024                      DS8 12
     12          
     13          

   \                                 In segment CODE, align 4, keep-with-next
     14          PROWaterIngress::PROWaterIngress(int number,bool AddToList):PROXRefObject(AddToList)
   \                     ??PROWaterIngress:
   \   00000000   F3402DE9           PUSH     {R0,R1,R4-R7,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
     15          {
     16              if ( AddToList ) {
   \   0000000C   ........           LDR      R7,??DataTable4  ;; ??ObjectSet
   \   00000010   0260A0E1           MOV      R6,R2
   \   00000014   0610A0E1           MOV      R1,R6
   \   00000018   ........           _BLF     ??PROXRefObject,??PROXRefObject??rA
   \   0000001C   ........           LDR      R0,??DataTable3  ;; ??__vtbl
   \   00000020   000056E3           CMP      R6,#+0
   \   00000024   A40084E5           STR      R0,[R4, #+164]
   \   00000028   0800000A           BEQ      ??PROWaterIngress_1
     17                  ObjectSet.insert(this);
   \   0000002C   0420A0E1           MOV      R2,R4
   \   00000030   0710A0E1           MOV      R1,R7
   \   00000034   0D00A0E1           MOV      R0,SP
   \   00000038   ........           _BLF     ??insert_1,??insert??rA
     18                  AllObjVector.push_back(this);
   \   0000003C   0410A0E1           MOV      R1,R4
   \   00000040   180087E2           ADD      R0,R7,#+24
   \   00000044   ........           _BLF     ??_Push_back0_1,??_Push_back0??rA
     19                  AddToIOObjectList();
   \   00000048   0400A0E1           MOV      R0,R4
   \   0000004C   ........           _BLF     ??AddToIOObjectList,??AddToIOObjectList??rA
     20              }
     21              Type = C_PRO_WATERINGRESS;
   \                     ??PROWaterIngress_1:
   \   00000050   4C00A0E3           MOV      R0,#+76
   \   00000054   400E80E3           ORR      R0,R0,#0x400
   \   00000058   A00084E5           STR      R0,[R4, #+160]
     22              if ( number == 0 ) {
   \   0000005C   000055E3           CMP      R5,#+0
     23                  IDNumber = (C_PRO_WATERINGRESS << 16 )+ObjectSet.size();
   \   00000060   10009705           LDREQ    R0,[R7, #+16]
   \   00000064   4016A003           MOVEQ    R1,#+67108864
   \   00000068   4C188103           ORREQ    R1,R1,#0x4C0000
   \   0000006C   00508100           ADDEQ    R5,R1,R0
     24              } else {
     25                  IDNumber = number;
   \   00000070   9C5084E5           STR      R5,[R4, #+156]
     26              }
     27              Initiate(AddToList);
   \   00000074   0610A0E1           MOV      R1,R6
   \   00000078   0400A0E1           MOV      R0,R4
   \   0000007C   ........           BL       ??Initiate
     28          }
   \   00000080   0400A0E1           MOV      R0,R4
   \   00000084   ........           B        ?Subroutine21

   \                                 In segment CODE, align 4, keep-with-next
   \                     ?Subroutine21:
   \   00000000   F640BDE8           POP      {R1,R2,R4-R7,LR}
   \   00000004   1EFF2FE1           BX       LR               ;; return
     29          //---------------------------------------------------------------------------
     30          

   \                                 In segment CODE, align 4, keep-with-next
     31          void PROWaterIngress::Initiate(bool AddToList)
     32          {
   \                     ??Initiate:
   \   00000000   00402DE9           PUSH     {LR}
     33          
     34              SimulatorLevel          = 0.0;
   \   00000004   0010A0E3           MOV      R1,#+0
   \   00000008   5C1180E5           STR      R1,[R0, #+348]
     35              DisableOverride         = false;
   \   0000000C   0020A0E3           MOV      R2,#+0
   \   00000010   5821C0E5           STRB     R2,[R0, #+344]
     36              MainWaterIngrSensor     = NULL;
   \   00000014   641180E5           STR      R1,[R0, #+356]
     37              PreWaterIngrSensor      = NULL;
   \   00000018   681180E5           STR      R1,[R0, #+360]
     38          
     39              Override                = false;
   \   0000001C   6021C0E5           STRB     R2,[R0, #+352]
     40              HasProtection           = false;
   \   00000020   6121C0E5           STRB     R2,[R0, #+353]
     41              MainAlarmValue          = false;
   \   00000024   6221C0E5           STRB     R2,[R0, #+354]
     42              PreAlarmValue           = false;
   \   00000028   6321C0E5           STRB     R2,[R0, #+355]
     43              MainWaterIngressPtr     = NULL;
   \   0000002C   6C1180E5           STR      R1,[R0, #+364]
     44              PreWaterIngressPtr      = NULL;
   \   00000030   701180E5           STR      R1,[R0, #+368]
     45              TemperaturePtr          = NULL;
   \   00000034   741180E5           STR      R1,[R0, #+372]
     46              AddAlarms(CompleteAlarmInfoList);
   \   00000038   FC1080E2           ADD      R1,R0,#+252
   \   0000003C   ........           _BLF     ??AddAlarms,??AddAlarms??rA
     47          }
   \   00000040   ........           B        ?Subroutine22

   \                                 In segment CODE, align 4, keep-with-next
   \                     ?Subroutine22:
   \   00000000   0040BDE8           POP      {LR}
   \   00000004   1EFF2FE1           BX       LR               ;; return
     48          //---------------------------------------------------------------------------
     49          

   \                                 In segment CODE, align 4, keep-with-next
     50          PROWaterIngress::~PROWaterIngress(void)
     51          {
   \                     `?~PROWaterIngress`:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
   \   0000000C   000054E3           CMP      R4,#+0
   \   00000010   1400000A           BEQ      `?~PROWaterIngress_1`
   \   00000014   ........           LDR      R0,??DataTable3  ;; ??__vtbl
     52              ObjectSet.erase(this);
   \   00000018   ........           LDR      R6,??DataTable4  ;; ??ObjectSet
   \   0000001C   A40084E5           STR      R0,[R4, #+164]
   \   00000020   0410A0E1           MOV      R1,R4
   \   00000024   0600A0E1           MOV      R0,R6
   \   00000028   ........           _BLF     ??erase_2,??erase??rA_2
     53              EraseFromVector(ObjVector,this);
   \   0000002C   0420A0E1           MOV      R2,R4
   \   00000030   241086E2           ADD      R1,R6,#+36
   \   00000034   0400A0E1           MOV      R0,R4
   \   00000038   ........           _BLF     ??EraseFromVector,??EraseFromVector??rA
     54              EraseFromVector(AllObjVector,this);
   \   0000003C   0420A0E1           MOV      R2,R4
   \   00000040   181086E2           ADD      R1,R6,#+24
   \   00000044   0400A0E1           MOV      R0,R4
   \   00000048   ........           _BLF     ??EraseFromVector,??EraseFromVector??rA
     55          }
   \   0000004C   0010A0E3           MOV      R1,#+0
   \   00000050   0400A0E1           MOV      R0,R4
   \   00000054   ........           _BLF     `?~PROXRefObject`,`?~PROXRefObject??rA`
   \   00000058   010015E3           TST      R5,#0x1
   \   0000005C   0100000A           BEQ      `?~PROWaterIngress_1`
   \   00000060   0400A0E1           MOV      R0,R4
   \   00000064   ........           _BLF     `??operator delete`,`??operator delete??rA`
   \                     `?~PROWaterIngress_1`:
   \   00000068   7040BDE8           POP      {R4-R6,LR}
   \   0000006C   1EFF2FE1           BX       LR               ;; return
     56          //---------------------------------------------------------------------------
     57          

   \                                 In segment CODE, align 4, keep-with-next
     58          void PROWaterIngress::WriteConfigToFile(TSNConfigString &ConfigString)
     59          {
   \                     ??WriteConfigToFile:
   \   00000000   F0412DE9           PUSH     {R4-R8,LR}
     60              AnsiString LocalString;
     61              AnsiString IdNumStr;
     62              IdNumStr.cat_sprintf("0x%0x",IDNumber);
     63              LocalString += KeyWord(C_PRO_WATERINGRESS)+TabStr1+IdNumStr+CrLfStr;
   \   00000004   ........           LDR      R8,??DataTable11  ;; TabStr1
   \   00000008   ........           LDR      R5,??DataTable10  ;; CrLfStr
   \   0000000C   62DF4DE2           SUB      SP,SP,#+392
   \   00000010   0060A0E1           MOV      R6,R0
   \   00000014   0140A0E1           MOV      R4,R1
   \   00000018   1C008DE2           ADD      R0,SP,#+28
   \   0000001C   ........           _BLF     ??AnsiString,??AnsiString??rA
   \   00000020   540F8DE2           ADD      R0,SP,#+336
   \   00000024   ........           _BLF     ??AnsiString,??AnsiString??rA
   \   00000028   9C3096E5           LDR      R3,[R6, #+156]
   \   0000002C   ........           LDR      R2,??DataTable12  ;; `?<Constant "0x%0x">`
   \   00000030   5B1F8DE2           ADD      R1,SP,#+364
   \   00000034   540F8DE2           ADD      R0,SP,#+336
   \   00000038   ........           _BLF     ??cat_sprintf,??cat_sprintf??rA
   \   0000003C   0020A0E3           MOV      R2,#+0
   \   00000040   0110A0E3           MOV      R1,#+1
   \   00000044   5B0F8DE2           ADD      R0,SP,#+364
   \   00000048   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   0000004C   4C10A0E3           MOV      R1,#+76
   \   00000050   401E81E3           ORR      R1,R1,#0x400
   \   00000054   C4008DE2           ADD      R0,SP,#+196
   \   00000058   ........           _BLF     ??KeyWord,??KeyWord??rA
   \   0000005C   0820A0E1           MOV      R2,R8
   \   00000060   C4108DE2           ADD      R1,SP,#+196
   \   00000064   A8008DE2           ADD      R0,SP,#+168
   \   00000068   ........           _BLF     `??operator+`,`??operator+??rA`
   \   0000006C   542F8DE2           ADD      R2,SP,#+336
   \   00000070   A8108DE2           ADD      R1,SP,#+168
   \   00000074   8C008DE2           ADD      R0,SP,#+140
   \   00000078   ........           _BLF     `??operator+`,`??operator+??rA`
   \   0000007C   0520A0E1           MOV      R2,R5
   \   00000080   8C108DE2           ADD      R1,SP,#+140
   \   00000084   70008DE2           ADD      R0,SP,#+112
   \   00000088   ........           _BLF     `??operator+`,`??operator+??rA`
   \   0000008C   ........           LDR      R0,??DataTable15  ;; ??npos
   \   00000090   0020A0E3           MOV      R2,#+0
   \   00000094   007090E5           LDR      R7,[R0, #+0]
   \   00000098   70108DE2           ADD      R1,SP,#+112
   \   0000009C   0730A0E1           MOV      R3,R7
   \   000000A0   1C008DE2           ADD      R0,SP,#+28
   \   000000A4   ........           _BLF     ??append,??append??rA
   \   000000A8   0020A0E3           MOV      R2,#+0
   \   000000AC   0110A0E3           MOV      R1,#+1
   \   000000B0   70008DE2           ADD      R0,SP,#+112
   \   000000B4   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000000B8   0020A0E3           MOV      R2,#+0
   \   000000BC   0110A0E3           MOV      R1,#+1
   \   000000C0   8C008DE2           ADD      R0,SP,#+140
   \   000000C4   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000000C8   0020A0E3           MOV      R2,#+0
   \   000000CC   0110A0E3           MOV      R1,#+1
   \   000000D0   A8008DE2           ADD      R0,SP,#+168
   \   000000D4   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000000D8   0020A0E3           MOV      R2,#+0
   \   000000DC   0110A0E3           MOV      R1,#+1
   \   000000E0   C4008DE2           ADD      R0,SP,#+196
   \   000000E4   ........           _BLF     ??_Tidy,??_Tidy??rA
     64              LocalString += MakeConfigString();   //common
   \   000000E8   A43096E5           LDR      R3,[R6, #+164]
   \   000000EC   0020A0E3           MOV      R2,#+0
   \   000000F0   0C3093E5           LDR      R3,[R3, #+12]
   \   000000F4   E0108DE2           ADD      R1,SP,#+224
   \   000000F8   0600A0E1           MOV      R0,R6
   \   000000FC   0FE0A0E1           MOV      LR,PC
   \   00000100   13FF2FE1           BX       R3
   \   00000104   0730A0E1           MOV      R3,R7
   \   00000108   0020A0E3           MOV      R2,#+0
   \   0000010C   E0108DE2           ADD      R1,SP,#+224
   \   00000110   1C008DE2           ADD      R0,SP,#+28
   \   00000114   ........           _BLF     ??append,??append??rA
   \   00000118   0020A0E3           MOV      R2,#+0
   \   0000011C   0110A0E3           MOV      R1,#+1
   \   00000120   E0008DE2           ADD      R0,SP,#+224
   \   00000124   ........           _BLF     ??_Tidy,??_Tidy??rA
     65              if ( DisableOverride ) {
   \   00000128   5801D6E5           LDRB     R0,[R6, #+344]
   \   0000012C   000050E3           CMP      R0,#+0
   \   00000130   1C00000A           BEQ      ??WriteConfigToFile_1
     66                  LocalString += TabStr1+KeyWord(C_WIS_OVERIDE_LOC)+CrLfStr;
   \   00000134   C810A0E3           MOV      R1,#+200
   \   00000138   501E81E3           ORR      R1,R1,#0x500
   \   0000013C   0D00A0E1           MOV      R0,SP
   \   00000140   ........           _BLF     ??KeyWord,??KeyWord??rA
   \   00000144   0D20A0E1           MOV      R2,SP
   \   00000148   0810A0E1           MOV      R1,R8
   \   0000014C   54008DE2           ADD      R0,SP,#+84
   \   00000150   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000154   0520A0E1           MOV      R2,R5
   \   00000158   54108DE2           ADD      R1,SP,#+84
   \   0000015C   38008DE2           ADD      R0,SP,#+56
   \   00000160   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000164   0730A0E1           MOV      R3,R7
   \   00000168   0020A0E3           MOV      R2,#+0
   \   0000016C   38108DE2           ADD      R1,SP,#+56
   \   00000170   1C008DE2           ADD      R0,SP,#+28
   \   00000174   ........           _BLF     ??append,??append??rA
   \   00000178   0020A0E3           MOV      R2,#+0
   \   0000017C   0110A0E3           MOV      R1,#+1
   \   00000180   38008DE2           ADD      R0,SP,#+56
   \   00000184   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000188   0020A0E3           MOV      R2,#+0
   \   0000018C   0110A0E3           MOV      R1,#+1
   \   00000190   54008DE2           ADD      R0,SP,#+84
   \   00000194   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000198   0020A0E3           MOV      R2,#+0
   \   0000019C   0110A0E3           MOV      R1,#+1
   \   000001A0   0D00A0E1           MOV      R0,SP
   \   000001A4   ........           _BLF     ??_Tidy,??_Tidy??rA
     67              }
     68              if ( MainWaterIngrSensor )
   \                     ??WriteConfigToFile_1:
   \   000001A8   643196E5           LDR      R3,[R6, #+356]
   \   000001AC   000053E3           CMP      R3,#+0
   \   000001B0   0F00000A           BEQ      ??WriteConfigToFile_2
     69                  LocalString += MainWaterIngrSensor->MakeConfigString();
   \   000001B4   0300A0E1           MOV      R0,R3
   \   000001B8   A43093E5           LDR      R3,[R3, #+164]
   \   000001BC   0020A0E3           MOV      R2,#+0
   \   000001C0   0C3093E5           LDR      R3,[R3, #+12]
   \   000001C4   0D10A0E1           MOV      R1,SP
   \   000001C8   0FE0A0E1           MOV      LR,PC
   \   000001CC   13FF2FE1           BX       R3
   \   000001D0   0730A0E1           MOV      R3,R7
   \   000001D4   0020A0E3           MOV      R2,#+0
   \   000001D8   0D10A0E1           MOV      R1,SP
   \   000001DC   1C008DE2           ADD      R0,SP,#+28
   \   000001E0   ........           _BLF     ??append,??append??rA
   \   000001E4   0020A0E3           MOV      R2,#+0
   \   000001E8   0110A0E3           MOV      R1,#+1
   \   000001EC   0D00A0E1           MOV      R0,SP
   \   000001F0   ........           _BLF     ??_Tidy,??_Tidy??rA
     70              if ( PreWaterIngrSensor )
   \                     ??WriteConfigToFile_2:
   \   000001F4   683196E5           LDR      R3,[R6, #+360]
   \   000001F8   000053E3           CMP      R3,#+0
   \   000001FC   0F00000A           BEQ      ??WriteConfigToFile_3
     71                  LocalString += PreWaterIngrSensor->MakeConfigString();
   \   00000200   0300A0E1           MOV      R0,R3
   \   00000204   A43093E5           LDR      R3,[R3, #+164]
   \   00000208   0020A0E3           MOV      R2,#+0
   \   0000020C   0C3093E5           LDR      R3,[R3, #+12]
   \   00000210   0D10A0E1           MOV      R1,SP
   \   00000214   0FE0A0E1           MOV      LR,PC
   \   00000218   13FF2FE1           BX       R3
   \   0000021C   0730A0E1           MOV      R3,R7
   \   00000220   0020A0E3           MOV      R2,#+0
   \   00000224   0D10A0E1           MOV      R1,SP
   \   00000228   1C008DE2           ADD      R0,SP,#+28
   \   0000022C   ........           _BLF     ??append,??append??rA
   \   00000230   0020A0E3           MOV      R2,#+0
   \   00000234   0110A0E3           MOV      R1,#+1
   \   00000238   0D00A0E1           MOV      R0,SP
   \   0000023C   ........           _BLF     ??_Tidy,??_Tidy??rA
     72          
     73              LocalString +=KeyWord(C_PRO_END)+CrLfStr;
   \                     ??WriteConfigToFile_3:
   \   00000240   FA1FA0E3           MOV      R1,#+1000
   \   00000244   460F8DE2           ADD      R0,SP,#+280
   \   00000248   ........           _BLF     ??KeyWord,??KeyWord??rA
   \   0000024C   0520A0E1           MOV      R2,R5
   \   00000250   461F8DE2           ADD      R1,SP,#+280
   \   00000254   FC008DE2           ADD      R0,SP,#+252
   \   00000258   ........           _BLF     `??operator+`,`??operator+??rA`
   \   0000025C   0730A0E1           MOV      R3,R7
   \   00000260   0020A0E3           MOV      R2,#+0
   \   00000264   FC108DE2           ADD      R1,SP,#+252
   \   00000268   1C008DE2           ADD      R0,SP,#+28
   \   0000026C   ........           _BLF     ??append,??append??rA
   \   00000270   0020A0E3           MOV      R2,#+0
   \   00000274   0110A0E3           MOV      R1,#+1
   \   00000278   FC008DE2           ADD      R0,SP,#+252
   \   0000027C   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000280   0020A0E3           MOV      R2,#+0
   \   00000284   0110A0E3           MOV      R1,#+1
   \   00000288   460F8DE2           ADD      R0,SP,#+280
   \   0000028C   ........           _BLF     ??_Tidy,??_Tidy??rA
     74              LocalString += CrLfStr;
   \   00000290   0730A0E1           MOV      R3,R7
   \   00000294   0020A0E3           MOV      R2,#+0
   \   00000298   0510A0E1           MOV      R1,R5
   \   0000029C   1C008DE2           ADD      R0,SP,#+28
   \   000002A0   ........           _BLF     ??append,??append??rA
     75          
     76              ConfigString.AddString(LocalString);
   \   000002A4   1C108DE2           ADD      R1,SP,#+28
   \   000002A8   4D0F8DE2           ADD      R0,SP,#+308
   \   000002AC   ........           _BLF     ??string,??string??rA
   \   000002B0   4D1F8DE2           ADD      R1,SP,#+308
   \   000002B4   0400A0E1           MOV      R0,R4
   \   000002B8   ........           _BLF     ??AddString,??AddString??rA
   \   000002BC   0020A0E3           MOV      R2,#+0
   \   000002C0   0110A0E3           MOV      R1,#+1
   \   000002C4   4D0F8DE2           ADD      R0,SP,#+308
   \   000002C8   ........           _BLF     ??_Tidy,??_Tidy??rA
     77          }
   \   000002CC   0020A0E3           MOV      R2,#+0
   \   000002D0   0110A0E3           MOV      R1,#+1
   \   000002D4   540F8DE2           ADD      R0,SP,#+336
   \   000002D8   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000002DC   0020A0E3           MOV      R2,#+0
   \   000002E0   0110A0E3           MOV      R1,#+1
   \   000002E4   1C008DE2           ADD      R0,SP,#+28
   \   000002E8   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000002EC   62DF8DE2           ADD      SP,SP,#+392
   \   000002F0   ........           B        ?Subroutine23

   \                                 In segment CODE, align 4, keep-with-next
   \                     ?Subroutine23:
   \   00000000   F041BDE8           POP      {R4-R8,LR}
   \   00000004   1EFF2FE1           BX       LR               ;; return
   \                     ??Subroutine23_0:
   \   00000008   ........           DC32     ??WriteAll
     78          //---------------------------------------------------------------------------
     79          

   \                                 In segment CODE, align 4, keep-with-next
     80          int PROWaterIngress::LoadConfigFromFile(TSNConfigString &ConfigString)
     81          {
   \                     ??LoadConfigFromFile:
   \   00000000   F0432DE9           PUSH     {R4-R9,LR}
   \   00000004   ECD04DE2           SUB      SP,SP,#+236
   \   00000008   0150A0E1           MOV      R5,R1
     82              SetLineNumber(ConfigString.LineCount);
   \   0000000C   1C1095E5           LDR      R1,[R5, #+28]
   \   00000010   0040A0E1           MOV      R4,R0
   \   00000014   ........           _BLF     ??SetLineNumber,??SetLineNumber??rA
     83              bool NoError = true;
     84              int ErrorLine=0;
   \   00000018   0010A0E3           MOV      R1,#+0
   \   0000001C   00108DE5           STR      R1,[SP, #+0]
   \   00000020   0160E0E1           MVN      R6,R1
   \   00000024   4B8FA0E3           MOV      R8,#+300
     85              int Key;
     86              do {
     87                  AnsiString InputKeyWord= ConfigString.NextWord(ErrorLine);
   \                     ??LoadConfigFromFile_1:
   \   00000028   0030A0E3           MOV      R3,#+0
   \   0000002C   0D20A0E1           MOV      R2,SP
   \   00000030   28108DE2           ADD      R1,SP,#+40
     88                  if ( ErrorLine ) {
   \   00000034   F8929FE5           LDR      R9,??LoadConfigFromFile_2  ;; `?<Constant "Water Ingress ">`
   \   00000038   0500A0E1           MOV      R0,R5
   \   0000003C   ........           _BLF     ??NextWord,??NextWord??rA
   \   00000040   00009DE5           LDR      R0,[SP, #+0]
   \   00000044   000050E3           CMP      R0,#+0
   \   00000048   1A00000A           BEQ      ??LoadConfigFromFile_3
     89                      if ( ErrorLine != EOF ) {
   \   0000004C   060050E1           CMP      R0,R6
   \   00000050   A000000A           BEQ      ??LoadConfigFromFile_4
     90                          GiveConfigWarning((AnsiString)"Water Ingress "+Name,ErrorLine);
   \   00000054   0910A0E1           MOV      R1,R9
   \   00000058   60008DE2           ADD      R0,SP,#+96
   \   0000005C   ........           _BLF     ??AnsiString_1,??AnsiString??rA_1
   \   00000060   442084E2           ADD      R2,R4,#+68
   \   00000064   0010A0E1           MOV      R1,R0
   \   00000068   04008DE2           ADD      R0,SP,#+4
   \   0000006C   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000070   04108DE2           ADD      R1,SP,#+4
   \   00000074   44008DE2           ADD      R0,SP,#+68
   \   00000078   ........           _BLF     ??AnsiString_2,??AnsiString??rA_2
   \   0000007C   00109DE5           LDR      R1,[SP, #+0]
   \   00000080   ........           _BLF     ??GiveConfigWarning,??GiveConfigWarning??rA
   \   00000084   0020A0E3           MOV      R2,#+0
   \   00000088   0110A0E3           MOV      R1,#+1
   \   0000008C   44008DE2           ADD      R0,SP,#+68
   \   00000090   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000094   0020A0E3           MOV      R2,#+0
   \   00000098   0110A0E3           MOV      R1,#+1
   \   0000009C   04008DE2           ADD      R0,SP,#+4
   \   000000A0   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000000A4   0020A0E3           MOV      R2,#+0
   \   000000A8   0110A0E3           MOV      R1,#+1
   \   000000AC   60008DE2           ADD      R0,SP,#+96
   \                     ??LoadConfigFromFile_5:
   \   000000B0   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000000B4   870000EA           B        ??LoadConfigFromFile_4
     91                      }
     92                  } else {
     93                      Key = FindConfigKey(InputKeyWord);
   \                     ??LoadConfigFromFile_3:
   \   000000B8   28108DE2           ADD      R1,SP,#+40
   \   000000BC   04008DE2           ADD      R0,SP,#+4
   \   000000C0   ........           _BLF     ??string,??string??rA
   \   000000C4   04008DE2           ADD      R0,SP,#+4
   \   000000C8   ........           _BLF     ??FindConfigKey,??FindConfigKey??rA
   \   000000CC   0070A0E1           MOV      R7,R0
   \   000000D0   0020A0E3           MOV      R2,#+0
   \   000000D4   0110A0E3           MOV      R1,#+1
   \   000000D8   04008DE2           ADD      R0,SP,#+4
   \   000000DC   ........           _BLF     ??_Tidy,??_Tidy??rA
     94                      switch ( Key ) {
   \   000000E0   0700A0E1           MOV      R0,R7
   \   000000E4   FA0F50E3           CMP      R0,#+1000
   \   000000E8   EA10A013           MOVNE    R1,#+234
   \   000000EC   C01F8113           ORRNE    R1,R1,#0x300
   \   000000F0   01005011           CMPNE    R0,R1
   \   000000F4   7700000A           BEQ      ??LoadConfigFromFile_4
   \   000000F8   011081E3           ORR      R1,R1,#0x1
   \   000000FC   010050E1           CMP      R0,R1
   \   00000100   3800000A           BEQ      ??LoadConfigFromFile_6
   \   00000104   FB0F50E3           CMP      R0,#+1004
   \   00000108   7200000A           BEQ      ??LoadConfigFromFile_4
   \   0000010C   C810A0E3           MOV      R1,#+200
   \   00000110   501E81E3           ORR      R1,R1,#0x500
   \   00000114   010050E1           CMP      R0,R1
   \   00000118   3D00000A           BEQ      ??LoadConfigFromFile_7
   \   0000011C   8510A0E3           MOV      R1,#+133
   \   00000120   801E81E3           ORR      R1,R1,#0x800
   \   00000124   010050E1           CMP      R0,R1
   \   00000128   01108112           ADDNE    R1,R1,#+1
   \   0000012C   01005011           CMPNE    R0,R1
   \   00000130   3A00000A           BEQ      ??LoadConfigFromFile_8
   \   00000134   011081E3           ORR      R1,R1,#0x1
   \   00000138   010050E1           CMP      R0,R1
   \   0000013C   4D00000A           BEQ      ??LoadConfigFromFile_9
   \   00000140   111081E2           ADD      R1,R1,#+17
   \   00000144   010050E1           CMP      R0,R1
   \   00000148   B910A013           MOVNE    R1,#+185
   \   0000014C   B01E8113           ORRNE    R1,R1,#0xB00
   \   00000150   01005011           CMPNE    R0,R1
   \   00000154   5F00000A           BEQ      ??LoadConfigFromFile_4
   \   00000158   3410A0E3           MOV      R1,#+52
   \   0000015C   841D81E3           ORR      R1,R1,#0x2100
   \   00000160   010050E1           CMP      R0,R1
   \   00000164   2300000A           BEQ      ??LoadConfigFromFile_10
     95                      default:
     96                          GiveConfigWarning((AnsiString)"Water Ingress "+Name,InputKeyWord,ConfigString.LineCount);
   \   00000168   28108DE2           ADD      R1,SP,#+40
   \   0000016C   7C008DE2           ADD      R0,SP,#+124
   \   00000170   ........           _BLF     ??string,??string??rA
   \   00000174   0910A0E1           MOV      R1,R9
   \   00000178   D0008DE2           ADD      R0,SP,#+208
   \   0000017C   ........           _BLF     ??AnsiString_1,??AnsiString??rA_1
   \   00000180   0010A0E1           MOV      R1,R0
   \   00000184   442084E2           ADD      R2,R4,#+68
   \   00000188   B4008DE2           ADD      R0,SP,#+180
   \   0000018C   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000190   B4108DE2           ADD      R1,SP,#+180
   \   00000194   98008DE2           ADD      R0,SP,#+152
   \   00000198   ........           _BLF     ??AnsiString_2,??AnsiString??rA_2
   \   0000019C   1C2095E5           LDR      R2,[R5, #+28]
   \   000001A0   7C108DE2           ADD      R1,SP,#+124
   \   000001A4   ........           _BLF     ??GiveConfigWarning_1,??GiveConfigWarning??rA_1
   \   000001A8   0020A0E3           MOV      R2,#+0
   \   000001AC   0110A0E3           MOV      R1,#+1
   \   000001B0   7C008DE2           ADD      R0,SP,#+124
   \   000001B4   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000001B8   0020A0E3           MOV      R2,#+0
   \   000001BC   0110A0E3           MOV      R1,#+1
   \   000001C0   98008DE2           ADD      R0,SP,#+152
   \   000001C4   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000001C8   0020A0E3           MOV      R2,#+0
   \   000001CC   0110A0E3           MOV      R1,#+1
   \   000001D0   B4008DE2           ADD      R0,SP,#+180
   \   000001D4   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000001D8   0020A0E3           MOV      R2,#+0
   \   000001DC   0110A0E3           MOV      R1,#+1
   \   000001E0   D0008DE2           ADD      R0,SP,#+208
   \   000001E4   B1FFFFEA           B        ??LoadConfigFromFile_5
     97                          break;
     98                      case C_AI_END:      // If AI type not found can continue with this
     99                      case C_AL_END:
    100                      case C_PRO_END:
    101                      case C_PRO_END_COMMON:
    102                      case C_PRO_END_PRO:
    103                          break;
    104                      case C_PRO_START_PRO:
    105                          PRogramObject::LoadConfigString(ConfigString);
   \                     ??LoadConfigFromFile_6:
   \   000001E8   0510A0E1           MOV      R1,R5
   \   000001EC   0400A0E1           MOV      R0,R4
   \   000001F0   ........           _BLF     ??LoadConfigString_1,??LoadConfigString??rA
   \   000001F4   370000EA           B        ??LoadConfigFromFile_4
    106                          break;
    107                      case C_XREF_START:
    108                          LoadConfigString(ConfigString);
   \                     ??LoadConfigFromFile_10:
   \   000001F8   A42094E5           LDR      R2,[R4, #+164]
   \   000001FC   0510A0E1           MOV      R1,R5
   \   00000200   102092E5           LDR      R2,[R2, #+16]
   \   00000204   0400A0E1           MOV      R0,R4
   \   00000208   0FE0A0E1           MOV      LR,PC
   \   0000020C   12FF2FE1           BX       R2
   \   00000210   300000EA           B        ??LoadConfigFromFile_4
    109                          break;
    110                      case C_WIS_OVERIDE_LOC:
    111                          DisableOverride = true;
   \                     ??LoadConfigFromFile_7:
   \   00000214   0100A0E3           MOV      R0,#+1
   \   00000218   5801C4E5           STRB     R0,[R4, #+344]
   \   0000021C   2D0000EA           B        ??LoadConfigFromFile_4
    112                          break;
    113                      case C_AI_WATERINGRESS:
    114                      case C_AI_WATERINGR_MAIN:
    115                          {
    116                              MainWaterIngrSensor = new AIWaterIngressSensor(Key);
   \                     ??LoadConfigFromFile_8:
   \   00000220   0010A0E3           MOV      R1,#+0
   \   00000224   ........           _BLF     `??new AIWaterIngressSensor`,`??new AIWaterIngressSensor??rA`
   \   00000228   640184E5           STR      R0,[R4, #+356]
    117                              MainWaterIngrSensor->LoadConfigString(ConfigString);
   \   0000022C   A42090E5           LDR      R2,[R0, #+164]
   \   00000230   0510A0E1           MOV      R1,R5
   \   00000234   102092E5           LDR      R2,[R2, #+16]
   \   00000238   0FE0A0E1           MOV      LR,PC
   \   0000023C   12FF2FE1           BX       R2
    118                              MainWaterIngressPtr = new AlarmMainWaterIngress( this);
   \   00000240   0400A0E1           MOV      R0,R4
   \   00000244   ........           _BLF     `??new AlarmMainWaterIngress`,`??new AlarmMainWaterIngress??rA`
   \   00000248   6C0184E5           STR      R0,[R4, #+364]
    119                              AIWIngressTempSensor *TempSensor = new AIWIngressTempSensor(MainWaterIngrSensor);
   \   0000024C   640194E5           LDR      R0,[R4, #+356]
   \   00000250   ........           _BLF     `??new AIWIngressTempSensor`,`??new AIWIngressTempSensor??rA`
    120                              AnalogInList.push_back((AnalogInput*)MainWaterIngrSensor);
   \   00000254   641194E5           LDR      R1,[R4, #+356]
   \   00000258   0090A0E1           MOV      R9,R0
   \   0000025C   040088E0           ADD      R0,R8,R4
   \   00000260   ........           _BLF     ??_Push_back0,??_Push_back0??rA_1
    121                              AnalogInList.push_back((AnalogInput*)TempSensor);
   \   00000264   0910A0E1           MOV      R1,R9
   \   00000268   040088E0           ADD      R0,R8,R4
   \   0000026C   ........           _BLF     ??_Push_back0,??_Push_back0??rA_1
    122                              AlarmSet.insert(MainWaterIngressPtr);
   \   00000270   6C2194E5           LDR      R2,[R4, #+364]
   \   00000274   140000EA           B        ??LoadConfigFromFile_11
    123                          }
    124                          break;
    125                      case C_AI_WATERINGR_PRE:
    126                          {
    127                              PreWaterIngrSensor = new AIWaterIngressSensor(Key);
   \                     ??LoadConfigFromFile_9:
   \   00000278   0010A0E3           MOV      R1,#+0
   \   0000027C   ........           _BLF     `??new AIWaterIngressSensor`,`??new AIWaterIngressSensor??rA`
   \   00000280   680184E5           STR      R0,[R4, #+360]
    128                              PreWaterIngrSensor->LoadConfigString(ConfigString);
   \   00000284   A42090E5           LDR      R2,[R0, #+164]
   \   00000288   0510A0E1           MOV      R1,R5
   \   0000028C   102092E5           LDR      R2,[R2, #+16]
   \   00000290   0FE0A0E1           MOV      LR,PC
   \   00000294   12FF2FE1           BX       R2
    129                              AIWIngressTempSensor *TempSensor = new AIWIngressTempSensor(PreWaterIngrSensor);
   \   00000298   680194E5           LDR      R0,[R4, #+360]
   \   0000029C   ........           _BLF     `??new AIWIngressTempSensor`,`??new AIWIngressTempSensor??rA`
    130                              AnalogInList.push_back((AnalogInput*)PreWaterIngrSensor);
   \   000002A0   681194E5           LDR      R1,[R4, #+360]
   \   000002A4   0090A0E1           MOV      R9,R0
   \   000002A8   040088E0           ADD      R0,R8,R4
   \   000002AC   ........           _BLF     ??_Push_back0,??_Push_back0??rA_1
    131                              AnalogInList.push_back((AnalogInput*)TempSensor);
   \   000002B0   0910A0E1           MOV      R1,R9
   \   000002B4   040088E0           ADD      R0,R8,R4
   \   000002B8   ........           _BLF     ??_Push_back0,??_Push_back0??rA_1
    132                              PreWaterIngressPtr  = new AlarmPreWaterIngress( this);
   \   000002BC   0400A0E1           MOV      R0,R4
   \   000002C0   ........           _BLF     `??new AlarmPreWaterIngress`,`??new AlarmPreWaterIngress??rA`
   \   000002C4   700184E5           STR      R0,[R4, #+368]
    133                              AlarmSet.insert(PreWaterIngressPtr);
   \   000002C8   0020A0E1           MOV      R2,R0
   \                     ??LoadConfigFromFile_11:
   \   000002CC   E41084E2           ADD      R1,R4,#+228
   \   000002D0   20008DE2           ADD      R0,SP,#+32
   \   000002D4   ........           _BLF     ??insert,??insert??rA_1
    134                          }
    135                          break;
    136                      }
    137                  }
    138              }while ( NoError && ( ErrorLine != EOF )&& ( Key != C_PRO_END ) );
   \                     ??LoadConfigFromFile_4:
   \   000002D8   0020A0E3           MOV      R2,#+0
   \   000002DC   0110A0E3           MOV      R1,#+1
   \   000002E0   28008DE2           ADD      R0,SP,#+40
   \   000002E4   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000002E8   00009DE5           LDR      R0,[SP, #+0]
   \   000002EC   060050E1           CMP      R0,R6
   \   000002F0   FA0F5713           CMPNE    R7,#+1000
   \   000002F4   4BFFFF1A           BNE      ??LoadConfigFromFile_1
    139              CopyAnalogList();
   \   000002F8   0400A0E1           MOV      R0,R4
   \   000002FC   ........           _BLF     ??CopyAnalogList,??CopyAnalogList??rA
    140              AddAlarms(CompleteAlarmInfoList);
   \   00000300   FC1084E2           ADD      R1,R4,#+252
   \   00000304   0400A0E1           MOV      R0,R4
   \   00000308   ........           _BLF     ??AddAlarms,??AddAlarms??rA
    141              SetChildUserRights();
   \   0000030C   0400A0E1           MOV      R0,R4
   \   00000310   ........           _BLF     ??SetChildUserRights,??SetChildUserRights??rA
    142              AddTemperature();
   \   00000314   0400A0E1           MOV      R0,R4
   \   00000318   ........           BL       ??AddTemperature
    143              AddSensorAlarms();
   \   0000031C   0400A0E1           MOV      R0,R4
   \   00000320   ........           _BLF     ??AddSensorAlarms,??AddSensorAlarms??rA
    144              return ErrorLine;
   \   00000324   00009DE5           LDR      R0,[SP, #+0]
   \   00000328   ECD08DE2           ADD      SP,SP,#+236
   \   0000032C   F043BDE8           POP      {R4-R9,LR}
   \   00000330   1EFF2FE1           BX       LR               ;; return
   \                     ??LoadConfigFromFile_2:
   \   00000334   ........           DC32     `?<Constant "Water Ingress ">`
    145          }
    146          

   \                                 In segment CODE, align 4, keep-with-next
    147          PROTemperature *PROWaterIngress::AddTemperature(void)
    148          {
   \                     ??AddTemperature:
   \   00000000   F0402DE9           PUSH     {R4-R7,LR}
   \   00000004   0040A0E1           MOV      R4,R0
    149              TemperaturePtr           = new PROTemperature(0, this);
   \   00000008   0030A0E3           MOV      R3,#+0
   \   0000000C   0120A0E3           MOV      R2,#+1
   \   00000010   0410A0E1           MOV      R1,R4
   \   00000014   0000A0E3           MOV      R0,#+0
   \   00000018   ........           _BLF     `??new PROTemperature`,`??new PROTemperature??rA`
   \   0000001C   740184E5           STR      R0,[R4, #+372]
    150              TemperaturePtr->Name     = Name;
   \   00000020   ........           LDR      R0,??DataTable15  ;; ??npos
   \   00000024   0020A0E3           MOV      R2,#+0
   \   00000028   005090E5           LDR      R5,[R0, #+0]
   \   0000002C   740194E5           LDR      R0,[R4, #+372]
   \   00000030   0530A0E1           MOV      R3,R5
   \   00000034   441084E2           ADD      R1,R4,#+68
   \   00000038   440080E2           ADD      R0,R0,#+68
   \   0000003C   ........           _BLF     ??assign,??assign??rA
    151              TemperaturePtr->LongName = LongName;
   \   00000040   740194E5           LDR      R0,[R4, #+372]
   \   00000044   0530A0E1           MOV      R3,R5
   \   00000048   0020A0E3           MOV      R2,#+0
   \   0000004C   C41084E2           ADD      R1,R4,#+196
   \   00000050   C40080E2           ADD      R0,R0,#+196
   \   00000054   ........           _BLF     ??assign,??assign??rA
    152              TemperaturePtr->TagName  = TagName;
   \   00000058   740194E5           LDR      R0,[R4, #+372]
   \   0000005C   0530A0E1           MOV      R3,R5
   \   00000060   0020A0E3           MOV      R2,#+0
   \   00000064   601084E2           ADD      R1,R4,#+96
   \   00000068   600080E2           ADD      R0,R0,#+96
   \   0000006C   ........           _BLF     ??assign,??assign??rA
    153              TemperaturePtr->SortNo   = SortNo;
   \   00000070   740194E5           LDR      R0,[R4, #+372]
   \   00000074   981094E5           LDR      R1,[R4, #+152]
    154          
    155              TemperaturePtr->ReadPermissionSet    = ReadPermissionSet;
    156              TemperaturePtr->WritePermissionSet   = WritePermissionSet;
    157              for ( unsigned i=0; i< AnalogInList.size();i++ ) {
   \   00000078   0060A0E3           MOV      R6,#+0
   \   0000007C   981080E5           STR      R1,[R0, #+152]
   \   00000080   081084E2           ADD      R1,R4,#+8
   \   00000084   080080E2           ADD      R0,R0,#+8
   \   00000088   ........           _BLF     `??operator=`,`??operator=??rA`
   \   0000008C   740194E5           LDR      R0,[R4, #+372]
   \   00000090   201084E2           ADD      R1,R4,#+32
   \   00000094   200080E2           ADD      R0,R0,#+32
   \   00000098   ........           _BLF     `??operator=`,`??operator=??rA`
   \   0000009C   0670A0E1           MOV      R7,R6
   \   000000A0   4B5FA0E3           MOV      R5,#+300
   \   000000A4   1B0000EA           B        ??AddTemperature_3
    158                  switch ( AnalogInList[i]->Type ) {
   \                     ??AddTemperature_4:
   \   000000A8   040095E7           LDR      R0,[R5, +R4]
   \   000000AC   070180E0           ADD      R0,R0,R7, LSL #+2
   \   000000B0   001090E5           LDR      R1,[R0, #+0]
   \   000000B4   A01091E5           LDR      R1,[R1, #+160]
   \   000000B8   5E1041E2           SUB      R1,R1,#+94
   \   000000BC   801E41E2           SUB      R1,R1,#+2048
   \   000000C0   2C0051E3           CMP      R1,#+44
   \   000000C4   1200008A           BHI      ??AddTemperature_5
   \   000000C8   012F8FE2           ADR      R2,??AddTemperature_1
   \   000000CC   0120D2E7           LDRB     R2,[R2, R1]
   \   000000D0   02F18FE0           ADD      PC,PC,R2, LSL #+2
   \                     ??AddTemperature_1:
   \   000000D4   0B0B0F0F           DC8      +11,+11,+15,+15
   \   000000D8   0F0F0F0F           DC8      +15,+15,+15,+15
   \   000000DC   0B0F0B0F           DC8      +11,+15,+11,+15
   \   000000E0   0F0F0F0F           DC8      +15,+15,+15,+15
   \   000000E4   0F0F0F0F           DC8      +15,+15,+15,+15
   \   000000E8   0F0F0F0F           DC8      +15,+15,+15,+15
   \   000000EC   0F0F0F0F           DC8      +15,+15,+15,+15
   \   000000F0   0F0F0F0F           DC8      +15,+15,+15,+15
   \   000000F4   0F0F0F0F           DC8      +15,+15,+15,+15
   \   000000F8   0F0F0F0F           DC8      +15,+15,+15,+15
   \   000000FC   0F0F0B0B           DC8      +15,+15,+11,+11
   \   00000100   0B000000           DC8      +11,+0,+0,+0
    159                  case C_AI_Pt100             :
    160                  case C_AI_Pt1000            :
    161                  case C_AI_TEMP_mA           :
    162                  case C_AI_TEMP_AD590        :
    163                  case C_AI_WATERINGR_TEMP    :
    164                  case C_AI_WATERINGR_TEMP_M  :
    165                  case C_AI_WATERINGR_TEMP_P  :
    166                      TemperaturePtr->AnalogInList.push_back(AnalogInList[i]);
   \                     ??AddTemperature_6:
   \   00000104   001090E5           LDR      R1,[R0, #+0]
   \   00000108   740194E5           LDR      R0,[R4, #+372]
   \   0000010C   000085E0           ADD      R0,R5,R0
   \   00000110   ........           _BLF     ??_Push_back0,??_Push_back0??rA_1
    167                      //AnalogInList[i]->SetPROPtr(Temp);
    168                      break;
    169                  }
    170              }
   \                     ??AddTemperature_5:
   \   00000114   017087E2           ADD      R7,R7,#+1
   \                     ??AddTemperature_3:
   \   00000118   040085E0           ADD      R0,R5,R4
   \   0000011C   041090E5           LDR      R1,[R0, #+4]
   \   00000120   000090E5           LDR      R0,[R0, #+0]
   \   00000124   000041E0           SUB      R0,R1,R0
   \   00000128   200157E1           CMP      R7,R0, LSR #+2
   \   0000012C   DDFFFF3A           BCC      ??AddTemperature_4
    171              {
    172                  unsigned i=0;
   \   00000130   047085E0           ADD      R7,R5,R4
   \   00000134   000000EA           B        ??AddTemperature_7
    173                  while ( i < AnalogInList.size() ) {
    174                      switch ( AnalogInList[i]->Type ) {
    175                      default:
    176                          i++;
   \                     ??AddTemperature_8:
   \   00000138   016086E2           ADD      R6,R6,#+1
   \                     ??AddTemperature_7:
   \   0000013C   040085E0           ADD      R0,R5,R4
   \   00000140   041090E5           LDR      R1,[R0, #+4]
   \   00000144   000090E5           LDR      R0,[R0, #+0]
   \   00000148   000041E0           SUB      R0,R1,R0
   \   0000014C   200156E1           CMP      R6,R0, LSR #+2
   \   00000150   1E00002A           BCS      ??AddTemperature_9
   \   00000154   040095E7           LDR      R0,[R5, +R4]
   \   00000158   060180E0           ADD      R0,R0,R6, LSL #+2
   \   0000015C   001090E5           LDR      R1,[R0, #+0]
   \   00000160   A01091E5           LDR      R1,[R1, #+160]
   \   00000164   5E1041E2           SUB      R1,R1,#+94
   \   00000168   801E41E2           SUB      R1,R1,#+2048
   \   0000016C   2C0051E3           CMP      R1,#+44
   \   00000170   F0FFFF8A           BHI      ??AddTemperature_8
   \   00000174   012F8FE2           ADR      R2,??AddTemperature_2
   \   00000178   D12092E1           LDRSB    R2,[R2, R1]
   \   0000017C   02F18FE0           ADD      PC,PC,R2, LSL #+2
   \                     ??AddTemperature_2:
   \   00000180   0B0BEDED           DC8      +11,+11,+237,+237
   \   00000184   EDEDEDED           DC8      +237,+237,+237,+237
   \   00000188   0BED0BED           DC8      +11,+237,+11,+237
   \   0000018C   EDEDEDED           DC8      +237,+237,+237,+237
   \   00000190   EDEDEDED           DC8      +237,+237,+237,+237
   \   00000194   EDEDEDED           DC8      +237,+237,+237,+237
   \   00000198   EDEDEDED           DC8      +237,+237,+237,+237
   \   0000019C   EDEDEDED           DC8      +237,+237,+237,+237
   \   000001A0   EDEDEDED           DC8      +237,+237,+237,+237
   \   000001A4   EDEDEDED           DC8      +237,+237,+237,+237
   \   000001A8   EDED0B0B           DC8      +237,+237,+11,+11
   \   000001AC   0B000000           DC8      +11,+0,+0,+0
    177                          break;
    178                      case C_AI_Pt100             :
    179                      case C_AI_Pt1000            :
    180                      case C_AI_TEMP_mA           :
    181                      case C_AI_TEMP_AD590        :
    182                      case C_AI_WATERINGR_TEMP    :
    183                      case C_AI_WATERINGR_TEMP_M  :
    184                      case C_AI_WATERINGR_TEMP_P  :
    185                          AnalogInList.erase(AnalogInList.begin()+i);
   \                     ??AddTemperature_10:
   \   000001B0   041097E5           LDR      R1,[R7, #+4]
   \   000001B4   0020A0E1           MOV      R2,R0
   \   000001B8   040080E2           ADD      R0,R0,#+4
   \   000001BC   ........           _BLF     _Copy_a4,??_Copy_a4??rA
   \   000001C0   040097E5           LDR      R0,[R7, #+4]
   \   000001C4   040040E2           SUB      R0,R0,#+4
   \   000001C8   040087E5           STR      R0,[R7, #+4]
   \   000001CC   DAFFFFEA           B        ??AddTemperature_7
    186                          break;
    187                      }
    188                  }
    189              }
    190              TemperaturePtr->SortAnalogInputs();
   \                     ??AddTemperature_9:
   \   000001D0   741194E5           LDR      R1,[R4, #+372]
   \   000001D4   0100A0E1           MOV      R0,R1
   \   000001D8   A41091E5           LDR      R1,[R1, #+164]
   \   000001DC   5C1091E5           LDR      R1,[R1, #+92]
   \   000001E0   0FE0A0E1           MOV      LR,PC
   \   000001E4   11FF2FE1           BX       R1
    191              TemperaturePtr->AddSensorAlarms();
   \   000001E8   740194E5           LDR      R0,[R4, #+372]
   \   000001EC   ........           _BLF     ??AddSensorAlarms,??AddSensorAlarms??rA
    192              SetChildUserRights(TemperaturePtr);
   \   000001F0   741194E5           LDR      R1,[R4, #+372]
   \   000001F4   0400A0E1           MOV      R0,R4
   \   000001F8   ........           _BLF     ??SetChildUserRights_1,??SetChildUserRights??rA_1
    193              return TemperaturePtr;
   \   000001FC   740194E5           LDR      R0,[R4, #+372]
   \   00000200   ........           B        ?Subroutine24
    194          
    195          }

   \                                 In segment CODE, align 4, keep-with-next
   \                     ?Subroutine24:
   \   00000000   F040BDE8           POP      {R4-R7,LR}
   \   00000004   1EFF2FE1           BX       LR               ;; return
    196          //---------------------------------------------------------------------------
    197          ///////////////////////////////////////////////////////////////
    198          //
    199          // Routines for Saving of Settings
    200          //
    201          ///////////////////////////////////////////////////////////////
    202          

   \                                 In segment CODE, align 4, keep-with-next
    203          void PROWaterIngress::SaveSettings(TSNConfigString *SettingsString)
    204          {
   \                     ??SaveSettings:
   \   00000000   F0412DE9           PUSH     {R4-R8,LR}
   \   00000004   54DF4DE2           SUB      SP,SP,#+336
   \   00000008   0040A0E1           MOV      R4,R0
    205              if ( IsModified || WriteAll ) {
   \   0000000C   0000D4E5           LDRB     R0,[R4, #+0]
   \   00000010   0150A0E1           MOV      R5,R1
   \   00000014   000050E3           CMP      R0,#+0
   \   00000018   ........           LDREQ    R0,??Subroutine23_0  ;; ??WriteAll
   \   0000001C   0000D005           LDRBEQ   R0,[R0, #+0]
   \   00000020   00005003           CMPEQ    R0,#+0
   \   00000024   9700000A           BEQ      ??SaveSettings_1
    206                  IsModified = false;
    207                  AnsiString LocalString;
    208                  AnsiString IdNumStr;
    209                  IdNumStr.cat_sprintf("0x%0x",IDNumber);
    210                  LocalString +=KeyWord(C_PRO_WATERINGRESS)+IdNumStr+CrLfStr;
   \   00000028   ........           LDR      R6,??DataTable10  ;; CrLfStr
    211                  if ( HasProtection ) {
   \   0000002C   ........           LDR      R8,??DataTable11  ;; TabStr1
   \   00000030   0000A0E3           MOV      R0,#+0
   \   00000034   0000C4E5           STRB     R0,[R4, #+0]
   \   00000038   54008DE2           ADD      R0,SP,#+84
   \   0000003C   ........           _BLF     ??AnsiString,??AnsiString??rA
   \   00000040   460F8DE2           ADD      R0,SP,#+280
   \   00000044   ........           _BLF     ??AnsiString,??AnsiString??rA
   \   00000048   9C3094E5           LDR      R3,[R4, #+156]
   \   0000004C   ........           LDR      R2,??DataTable12  ;; `?<Constant "0x%0x">`
   \   00000050   4D1F8DE2           ADD      R1,SP,#+308
   \   00000054   460F8DE2           ADD      R0,SP,#+280
   \   00000058   ........           _BLF     ??cat_sprintf,??cat_sprintf??rA
   \   0000005C   0020A0E3           MOV      R2,#+0
   \   00000060   0110A0E3           MOV      R1,#+1
   \   00000064   4D0F8DE2           ADD      R0,SP,#+308
   \   00000068   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   0000006C   4C10A0E3           MOV      R1,#+76
   \   00000070   401E81E3           ORR      R1,R1,#0x400
   \   00000074   A8008DE2           ADD      R0,SP,#+168
   \   00000078   ........           _BLF     ??KeyWord,??KeyWord??rA
   \   0000007C   462F8DE2           ADD      R2,SP,#+280
   \   00000080   A8108DE2           ADD      R1,SP,#+168
   \   00000084   8C008DE2           ADD      R0,SP,#+140
   \   00000088   ........           _BLF     `??operator+`,`??operator+??rA`
   \   0000008C   0620A0E1           MOV      R2,R6
   \   00000090   8C108DE2           ADD      R1,SP,#+140
   \   00000094   70008DE2           ADD      R0,SP,#+112
   \   00000098   ........           _BLF     `??operator+`,`??operator+??rA`
   \   0000009C   ........           LDR      R0,??DataTable15  ;; ??npos
   \   000000A0   0020A0E3           MOV      R2,#+0
   \   000000A4   007090E5           LDR      R7,[R0, #+0]
   \   000000A8   70108DE2           ADD      R1,SP,#+112
   \   000000AC   0730A0E1           MOV      R3,R7
   \   000000B0   54008DE2           ADD      R0,SP,#+84
   \   000000B4   ........           _BLF     ??append,??append??rA
   \   000000B8   0020A0E3           MOV      R2,#+0
   \   000000BC   0110A0E3           MOV      R1,#+1
   \   000000C0   70008DE2           ADD      R0,SP,#+112
   \   000000C4   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000000C8   0020A0E3           MOV      R2,#+0
   \   000000CC   0110A0E3           MOV      R1,#+1
   \   000000D0   8C008DE2           ADD      R0,SP,#+140
   \   000000D4   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000000D8   0020A0E3           MOV      R2,#+0
   \   000000DC   0110A0E3           MOV      R1,#+1
   \   000000E0   A8008DE2           ADD      R0,SP,#+168
   \   000000E4   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000000E8   6101D4E5           LDRB     R0,[R4, #+353]
   \   000000EC   000050E3           CMP      R0,#+0
   \   000000F0   1C00000A           BEQ      ??SaveSettings_2
    212                      LocalString +=TabStr1+KeyWord(C_WIS_HAS_PROT)+CrLfStr;
   \   000000F4   C910A0E3           MOV      R1,#+201
   \   000000F8   501E81E3           ORR      R1,R1,#0x500
   \   000000FC   0D00A0E1           MOV      R0,SP
   \   00000100   ........           _BLF     ??KeyWord,??KeyWord??rA
   \   00000104   0D20A0E1           MOV      R2,SP
   \   00000108   0810A0E1           MOV      R1,R8
   \   0000010C   1C008DE2           ADD      R0,SP,#+28
   \   00000110   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000114   0620A0E1           MOV      R2,R6
   \   00000118   1C108DE2           ADD      R1,SP,#+28
   \   0000011C   38008DE2           ADD      R0,SP,#+56
   \   00000120   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000124   0730A0E1           MOV      R3,R7
   \   00000128   0020A0E3           MOV      R2,#+0
   \   0000012C   38108DE2           ADD      R1,SP,#+56
   \   00000130   54008DE2           ADD      R0,SP,#+84
   \   00000134   ........           _BLF     ??append,??append??rA
   \   00000138   0020A0E3           MOV      R2,#+0
   \   0000013C   0110A0E3           MOV      R1,#+1
   \   00000140   38008DE2           ADD      R0,SP,#+56
   \   00000144   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000148   0020A0E3           MOV      R2,#+0
   \   0000014C   0110A0E3           MOV      R1,#+1
   \   00000150   1C008DE2           ADD      R0,SP,#+28
   \   00000154   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000158   0020A0E3           MOV      R2,#+0
   \   0000015C   0110A0E3           MOV      R1,#+1
   \   00000160   0D00A0E1           MOV      R0,SP
   \   00000164   1B0000EA           B        ??SaveSettings_3
    213                  } else {
    214                      LocalString +=TabStr1+KeyWord(C_WIS_HAS_NO_PROT)+CrLfStr;
   \                     ??SaveSettings_2:
   \   00000168   CA10A0E3           MOV      R1,#+202
   \   0000016C   501E81E3           ORR      R1,R1,#0x500
   \   00000170   38008DE2           ADD      R0,SP,#+56
   \   00000174   ........           _BLF     ??KeyWord,??KeyWord??rA
   \   00000178   38208DE2           ADD      R2,SP,#+56
   \   0000017C   0810A0E1           MOV      R1,R8
   \   00000180   1C008DE2           ADD      R0,SP,#+28
   \   00000184   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000188   0620A0E1           MOV      R2,R6
   \   0000018C   1C108DE2           ADD      R1,SP,#+28
   \   00000190   0D00A0E1           MOV      R0,SP
   \   00000194   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000198   0730A0E1           MOV      R3,R7
   \   0000019C   0020A0E3           MOV      R2,#+0
   \   000001A0   0D10A0E1           MOV      R1,SP
   \   000001A4   54008DE2           ADD      R0,SP,#+84
   \   000001A8   ........           _BLF     ??append,??append??rA
   \   000001AC   0020A0E3           MOV      R2,#+0
   \   000001B0   0110A0E3           MOV      R1,#+1
   \   000001B4   0D00A0E1           MOV      R0,SP
   \   000001B8   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000001BC   0020A0E3           MOV      R2,#+0
   \   000001C0   0110A0E3           MOV      R1,#+1
   \   000001C4   1C008DE2           ADD      R0,SP,#+28
   \   000001C8   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000001CC   0020A0E3           MOV      R2,#+0
   \   000001D0   0110A0E3           MOV      R1,#+1
   \   000001D4   38008DE2           ADD      R0,SP,#+56
   \                     ??SaveSettings_3:
   \   000001D8   ........           _BLF     ??_Tidy,??_Tidy??rA
    215                  }
    216          
    217                  LocalString +=KeyWord(C_PRO_END)+CrLfStr;
   \   000001DC   FA1FA0E3           MOV      R1,#+1000
   \   000001E0   E0008DE2           ADD      R0,SP,#+224
   \   000001E4   ........           _BLF     ??KeyWord,??KeyWord??rA
   \   000001E8   0620A0E1           MOV      R2,R6
   \   000001EC   E0108DE2           ADD      R1,SP,#+224
   \   000001F0   C4008DE2           ADD      R0,SP,#+196
   \   000001F4   ........           _BLF     `??operator+`,`??operator+??rA`
   \   000001F8   0730A0E1           MOV      R3,R7
   \   000001FC   0020A0E3           MOV      R2,#+0
   \   00000200   C4108DE2           ADD      R1,SP,#+196
   \   00000204   54008DE2           ADD      R0,SP,#+84
   \   00000208   ........           _BLF     ??append,??append??rA
   \   0000020C   0020A0E3           MOV      R2,#+0
   \   00000210   0110A0E3           MOV      R1,#+1
   \   00000214   C4008DE2           ADD      R0,SP,#+196
   \   00000218   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   0000021C   0020A0E3           MOV      R2,#+0
   \   00000220   0110A0E3           MOV      R1,#+1
   \   00000224   E0008DE2           ADD      R0,SP,#+224
   \   00000228   ........           _BLF     ??_Tidy,??_Tidy??rA
    218                  LocalString += CrLfStr;
   \   0000022C   0730A0E1           MOV      R3,R7
   \   00000230   0020A0E3           MOV      R2,#+0
   \   00000234   0610A0E1           MOV      R1,R6
   \   00000238   54008DE2           ADD      R0,SP,#+84
   \   0000023C   ........           _BLF     ??append,??append??rA
    219                  SettingsString->AddString(LocalString);
   \   00000240   54108DE2           ADD      R1,SP,#+84
   \   00000244   FC008DE2           ADD      R0,SP,#+252
   \   00000248   ........           _BLF     ??string,??string??rA
   \   0000024C   FC108DE2           ADD      R1,SP,#+252
   \   00000250   0500A0E1           MOV      R0,R5
   \   00000254   ........           _BLF     ??AddString,??AddString??rA
   \   00000258   0020A0E3           MOV      R2,#+0
   \   0000025C   0110A0E3           MOV      R1,#+1
   \   00000260   FC008DE2           ADD      R0,SP,#+252
   \   00000264   ........           _BLF     ??_Tidy,??_Tidy??rA
    220              }
   \   00000268   0020A0E3           MOV      R2,#+0
   \   0000026C   0110A0E3           MOV      R1,#+1
   \   00000270   460F8DE2           ADD      R0,SP,#+280
   \   00000274   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000278   0020A0E3           MOV      R2,#+0
   \   0000027C   0110A0E3           MOV      R1,#+1
   \   00000280   54008DE2           ADD      R0,SP,#+84
   \   00000284   ........           _BLF     ??_Tidy,??_Tidy??rA
    221          }
   \                     ??SaveSettings_1:
   \   00000288   54DF8DE2           ADD      SP,SP,#+336
   \   0000028C                      REQUIRE ?Subroutine23
   \   0000028C                      ;; // Fall through to label ?Subroutine23
    222          

   \                                 In segment CODE, align 4, keep-with-next
    223          bool PROWaterIngress::RestoreSettings(TSNConfigString *SettingsString)
    224          {
   \                     ??RestoreSettings:
   \   00000000   F24F2DE9           PUSH     {R1,R4-R11,LR}
    225              bool NoError = true;
    226              int ErrorLine=0;
    227              int Key;
    228              HasProtection = false;
   \   00000004   3C939FE5           LDR      R9,??RestoreSettings_1  ;; NewLineStr
   \   00000008   3CA39FE5           LDR      R10,??RestoreSettings_1+0x4  ;; `?<Constant "WaterIngress ">`
   \   0000000C   78DF4DE2           SUB      SP,SP,#+480
   \   00000010   0040A0E1           MOV      R4,R0
   \   00000014   0160A0E3           MOV      R6,#+1
   \   00000018   0010A0E3           MOV      R1,#+0
   \   0000001C   00108DE5           STR      R1,[SP, #+0]
   \   00000020   0000A0E3           MOV      R0,#+0
   \   00000024   6101C4E5           STRB     R0,[R4, #+353]
   \   00000028   0080E0E1           MVN      R8,R0
    229              do {
    230                  AnsiString InputKeyWord= SettingsString->NextWord(ErrorLine);
   \                     ??RestoreSettings_2:
   \   0000002C   E0019DE5           LDR      R0,[SP, #+480]
   \   00000030   0030A0E3           MOV      R3,#+0
   \   00000034   0D20A0E1           MOV      R2,SP
   \   00000038   74108DE2           ADD      R1,SP,#+116
   \   0000003C   ........           _BLF     ??NextWord,??NextWord??rA
    231                  if ( ErrorLine ) {
   \   00000040   00009DE5           LDR      R0,[SP, #+0]
   \   00000044   000050E3           CMP      R0,#+0
   \   00000048   3900000A           BEQ      ??RestoreSettings_3
    232                      if ( ErrorLine != EOF ) {
   \   0000004C   080050E1           CMP      R0,R8
   \   00000050   A600000A           BEQ      ??RestoreSettings_4
    233                          RestoreSettingsWarning((AnsiString)"WaterIngress "+Name+":\nUnknown error started at line:"+(AnsiString)ErrorLine+NewLineStr);
   \   00000054   0010A0E1           MOV      R1,R0
   \   00000058   C8008DE2           ADD      R0,SP,#+200
   \   0000005C   ........           _BLF     ??AnsiString_3,??AnsiString??rA_3
   \   00000060   00B0A0E1           MOV      R11,R0
   \   00000064   0A10A0E1           MOV      R1,R10
   \   00000068   AC008DE2           ADD      R0,SP,#+172
   \   0000006C   ........           _BLF     ??AnsiString_1,??AnsiString??rA_1
   \   00000070   442084E2           ADD      R2,R4,#+68
   \   00000074   0010A0E1           MOV      R1,R0
   \   00000078   04008DE2           ADD      R0,SP,#+4
   \   0000007C   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000080   10208AE2           ADD      R2,R10,#+16
   \   00000084   04108DE2           ADD      R1,SP,#+4
   \   00000088   58008DE2           ADD      R0,SP,#+88
   \   0000008C   ........           _BLF     `??operator+_1`,`??operator+??rA_1`
   \   00000090   0B20A0E1           MOV      R2,R11
   \   00000094   58108DE2           ADD      R1,SP,#+88
   \   00000098   3C008DE2           ADD      R0,SP,#+60
   \   0000009C   ........           _BLF     `??operator+`,`??operator+??rA`
   \   000000A0   0920A0E1           MOV      R2,R9
   \   000000A4   3C108DE2           ADD      R1,SP,#+60
   \   000000A8   20008DE2           ADD      R0,SP,#+32
   \   000000AC   ........           _BLF     `??operator+`,`??operator+??rA`
   \   000000B0   20108DE2           ADD      R1,SP,#+32
   \   000000B4   90008DE2           ADD      R0,SP,#+144
   \   000000B8   ........           _BLF     ??AnsiString_2,??AnsiString??rA_2
   \   000000BC   ........           _BLF     ??RestoreSettingsWarning,??RestoreSettingsWarning??rA
   \   000000C0   0020A0E3           MOV      R2,#+0
   \   000000C4   0110A0E3           MOV      R1,#+1
   \   000000C8   90008DE2           ADD      R0,SP,#+144
   \   000000CC   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000000D0   0020A0E3           MOV      R2,#+0
   \   000000D4   0110A0E3           MOV      R1,#+1
   \   000000D8   20008DE2           ADD      R0,SP,#+32
   \   000000DC   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000000E0   0020A0E3           MOV      R2,#+0
   \   000000E4   0110A0E3           MOV      R1,#+1
   \   000000E8   3C008DE2           ADD      R0,SP,#+60
   \   000000EC   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000000F0   0020A0E3           MOV      R2,#+0
   \   000000F4   0110A0E3           MOV      R1,#+1
   \   000000F8   C8008DE2           ADD      R0,SP,#+200
   \   000000FC   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000100   0020A0E3           MOV      R2,#+0
   \   00000104   0110A0E3           MOV      R1,#+1
   \   00000108   58008DE2           ADD      R0,SP,#+88
   \   0000010C   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000110   0020A0E3           MOV      R2,#+0
   \   00000114   0110A0E3           MOV      R1,#+1
   \   00000118   04008DE2           ADD      R0,SP,#+4
   \   0000011C   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000120   0020A0E3           MOV      R2,#+0
   \   00000124   0110A0E3           MOV      R1,#+1
   \   00000128   AC008DE2           ADD      R0,SP,#+172
   \                     ??RestoreSettings_5:
   \   0000012C   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000130   6E0000EA           B        ??RestoreSettings_4
    234                      }
    235                  } else {
    236                      Key = FindConfigKey(InputKeyWord);
   \                     ??RestoreSettings_3:
   \   00000134   74108DE2           ADD      R1,SP,#+116
   \   00000138   04008DE2           ADD      R0,SP,#+4
   \   0000013C   ........           _BLF     ??string,??string??rA
   \   00000140   04008DE2           ADD      R0,SP,#+4
   \   00000144   ........           _BLF     ??FindConfigKey,??FindConfigKey??rA
   \   00000148   0050A0E1           MOV      R5,R0
   \   0000014C   0020A0E3           MOV      R2,#+0
   \   00000150   0110A0E3           MOV      R1,#+1
   \   00000154   04008DE2           ADD      R0,SP,#+4
   \   00000158   ........           _BLF     ??_Tidy,??_Tidy??rA
    237                      switch ( Key ) {
   \   0000015C   FA0F55E3           CMP      R5,#+1000
   \   00000160   EA10A013           MOVNE    R1,#+234
   \   00000164   C01F8113           ORRNE    R1,R1,#0x300
   \   00000168   01005511           CMPNE    R5,R1
   \   0000016C   FB0F5513           CMPNE    R5,#+1004
   \   00000170   AF10A013           MOVNE    R1,#+175
   \   00000174   501E8113           ORRNE    R1,R1,#0x500
   \   00000178   01005511           CMPNE    R5,R1
   \   0000017C   5500000A           BEQ      ??RestoreSettings_6
   \   00000180   1A1081E2           ADD      R1,R1,#+26
   \   00000184   010055E1           CMP      R5,R1
   \   00000188   5400000A           BEQ      ??RestoreSettings_7
   \   0000018C   011081E2           ADD      R1,R1,#+1
   \   00000190   010055E1           CMP      R5,R1
   \   00000194   5300000A           BEQ      ??RestoreSettings_8
   \   00000198   9810A0E3           MOV      R1,#+152
   \   0000019C   801E81E3           ORR      R1,R1,#0x800
   \   000001A0   010055E1           CMP      R5,R1
   \   000001A4   B910A013           MOVNE    R1,#+185
   \   000001A8   B01E8113           ORRNE    R1,R1,#0xB00
   \   000001AC   01005511           CMPNE    R5,R1
   \   000001B0   4800000A           BEQ      ??RestoreSettings_6
    238                      default:
    239                          NoError = false;
    240                          RestoreSettingsWarning((AnsiString)"WaterIngress "+Name+":\nThe keyword " + InputKeyWord +" is not allowed here!! Line:"+(AnsiString)SettingsString->LineCount+NewLineStr);
   \   000001B4   E0019DE5           LDR      R0,[SP, #+480]
   \   000001B8   0060A0E3           MOV      R6,#+0
   \   000001BC   1C1090E5           LDR      R1,[R0, #+28]
   \   000001C0   710F8DE2           ADD      R0,SP,#+452
   \   000001C4   ........           _BLF     ??AnsiString_3,??AnsiString??rA_3
   \   000001C8   00B0A0E1           MOV      R11,R0
   \   000001CC   0A10A0E1           MOV      R1,R10
   \   000001D0   6A0F8DE2           ADD      R0,SP,#+424
   \   000001D4   ........           _BLF     ??AnsiString_1,??AnsiString??rA_1
   \   000001D8   0010A0E1           MOV      R1,R0
   \   000001DC   442084E2           ADD      R2,R4,#+68
   \   000001E0   630F8DE2           ADD      R0,SP,#+396
   \   000001E4   ........           _BLF     `??operator+`,`??operator+??rA`
   \   000001E8   34208AE2           ADD      R2,R10,#+52
   \   000001EC   631F8DE2           ADD      R1,SP,#+396
   \   000001F0   5C0F8DE2           ADD      R0,SP,#+368
   \   000001F4   ........           _BLF     `??operator+_1`,`??operator+??rA_1`
   \   000001F8   74208DE2           ADD      R2,SP,#+116
   \   000001FC   5C1F8DE2           ADD      R1,SP,#+368
   \   00000200   550F8DE2           ADD      R0,SP,#+340
   \   00000204   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000208   44208AE2           ADD      R2,R10,#+68
   \   0000020C   551F8DE2           ADD      R1,SP,#+340
   \   00000210   4E0F8DE2           ADD      R0,SP,#+312
   \   00000214   ........           _BLF     `??operator+_1`,`??operator+??rA_1`
   \   00000218   0B20A0E1           MOV      R2,R11
   \   0000021C   4E1F8DE2           ADD      R1,SP,#+312
   \   00000220   470F8DE2           ADD      R0,SP,#+284
   \   00000224   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000228   0920A0E1           MOV      R2,R9
   \   0000022C   471F8DE2           ADD      R1,SP,#+284
   \   00000230   400F8DE2           ADD      R0,SP,#+256
   \   00000234   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000238   401F8DE2           ADD      R1,SP,#+256
   \   0000023C   E4008DE2           ADD      R0,SP,#+228
   \   00000240   ........           _BLF     ??AnsiString_2,??AnsiString??rA_2
   \   00000244   ........           _BLF     ??RestoreSettingsWarning,??RestoreSettingsWarning??rA
   \   00000248   0020A0E3           MOV      R2,#+0
   \   0000024C   0110A0E3           MOV      R1,#+1
   \   00000250   E4008DE2           ADD      R0,SP,#+228
   \   00000254   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000258   0620A0E1           MOV      R2,R6
   \   0000025C   0110A0E3           MOV      R1,#+1
   \   00000260   400F8DE2           ADD      R0,SP,#+256
   \   00000264   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000268   0620A0E1           MOV      R2,R6
   \   0000026C   0110A0E3           MOV      R1,#+1
   \   00000270   470F8DE2           ADD      R0,SP,#+284
   \   00000274   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000278   0620A0E1           MOV      R2,R6
   \   0000027C   0110A0E3           MOV      R1,#+1
   \   00000280   710F8DE2           ADD      R0,SP,#+452
   \   00000284   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000288   0620A0E1           MOV      R2,R6
   \   0000028C   0110A0E3           MOV      R1,#+1
   \   00000290   4E0F8DE2           ADD      R0,SP,#+312
   \   00000294   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000298   0620A0E1           MOV      R2,R6
   \   0000029C   0110A0E3           MOV      R1,#+1
   \   000002A0   550F8DE2           ADD      R0,SP,#+340
   \   000002A4   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000002A8   0620A0E1           MOV      R2,R6
   \   000002AC   0110A0E3           MOV      R1,#+1
   \   000002B0   5C0F8DE2           ADD      R0,SP,#+368
   \   000002B4   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000002B8   0620A0E1           MOV      R2,R6
   \   000002BC   0110A0E3           MOV      R1,#+1
   \   000002C0   630F8DE2           ADD      R0,SP,#+396
   \   000002C4   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000002C8   0620A0E1           MOV      R2,R6
   \   000002CC   0110A0E3           MOV      R1,#+1
   \   000002D0   6A0F8DE2           ADD      R0,SP,#+424
   \   000002D4   94FFFFEA           B        ??RestoreSettings_5
    241                          break;
    242                      case C_AI_END:          // If AI type not found can continue with this
    243                      case C_AL_END:
    244                      case C_CT_END:
    245                      case C_PRO_END:
    246                      case C_PRO_END_COMMON:
    247                      case C_PRO_END_PRO:
    248                          Key = C_PRO_END;
   \                     ??RestoreSettings_6:
   \   000002D8   FA5FA0E3           MOV      R5,#+1000
   \   000002DC   030000EA           B        ??RestoreSettings_4
    249                          break;
    250                      case C_WIS_HAS_PROT:
    251                          HasProtection = true;
   \                     ??RestoreSettings_7:
   \   000002E0   0100A0E3           MOV      R0,#+1
   \   000002E4   000000EA           B        ??RestoreSettings_9
    252                          break;
    253                      case C_WIS_HAS_NO_PROT:
    254                          HasProtection = false;
   \                     ??RestoreSettings_8:
   \   000002E8   0000A0E3           MOV      R0,#+0
   \                     ??RestoreSettings_9:
   \   000002EC   6101C4E5           STRB     R0,[R4, #+353]
    255                          break;
    256                      }
    257                  }
    258              }while ( NoError && ( ErrorLine != EOF )&& ( Key != C_PRO_END ) );
   \                     ??RestoreSettings_4:
   \   000002F0   0020A0E3           MOV      R2,#+0
   \   000002F4   0110A0E3           MOV      R1,#+1
   \   000002F8   74008DE2           ADD      R0,SP,#+116
   \   000002FC   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000300   000056E3           CMP      R6,#+0
   \   00000304   00009D15           LDRNE    R0,[SP, #+0]
   \   00000308   08005011           CMPNE    R0,R8
   \   0000030C   FA0F5513           CMPNE    R5,#+1000
   \   00000310   45FFFF1A           BNE      ??RestoreSettings_2
    259              if ( Master && NoError ) {
   \   00000314   ........           LDR      R0,??DataTable16  ;; Master
   \   00000318   0000D0E5           LDRB     R0,[R0, #+0]
   \   0000031C   000016E1           TST      R6,R0
   \   00000320   0500000A           BEQ      ??RestoreSettings_10
    260                  SendData(CMD_GENERIC_STATIC_DATA);
   \   00000324   A42094E5           LDR      R2,[R4, #+164]
   \   00000328   6610A0E3           MOV      R1,#+102
   \   0000032C   402092E5           LDR      R2,[R2, #+64]
   \   00000330   0400A0E1           MOV      R0,R4
   \   00000334   0FE0A0E1           MOV      LR,PC
   \   00000338   12FF2FE1           BX       R2
    261              }
    262              return(NoError);
   \                     ??RestoreSettings_10:
   \   0000033C   0600A0E1           MOV      R0,R6
   \   00000340   79DF8DE2           ADD      SP,SP,#+484
   \   00000344   ........           B        ?Subroutine25
   \                     ??RestoreSettings_1:
   \   00000348   ........           DC32     NewLineStr
   \   0000034C   ........           DC32     `?<Constant "WaterIngress ">`
    263          }

   \                                 In segment CODE, align 4, keep-with-next
   \                     ?Subroutine25:
   \   00000000   F04FBDE8           POP      {R4-R11,LR}
   \   00000004   1EFF2FE1           BX       LR               ;; return
    264          
    265          ///////////////////////////////////////////////////////////////
    266          //
    267          // Routines for the librarian
    268          //
    269          ///////////////////////////////////////////////////////////////

   \                                 In segment CODE, align 4, keep-with-next
    270          int PROWaterIngress::FindPROStatus(AnsiString &MyString)
    271          {
   \                     ??FindPROStatus:
   \   00000000   F0412DE9           PUSH     {R4-R8,LR}
   \   00000004   1CD04DE2           SUB      SP,SP,#+28
   \   00000008   0050A0E1           MOV      R5,R0
    272              int PROStatus1 = ST_OK;
    273              int PROStatus2 = ST_OK;
    274              if ( HWFailure ) {
   \   0000000C   3C00D5E5           LDRB     R0,[R5, #+60]
   \   00000010   0160A0E1           MOV      R6,R1
   \   00000014   3D70A0E3           MOV      R7,#+61
   \   00000018   F07E87E3           ORR      R7,R7,#0xF00
   \   0000001C   0740A0E1           MOV      R4,R7
   \   00000020   048084E2           ADD      R8,R4,#+4
   \   00000024   000050E3           CMP      R0,#+0
    275                  PROStatus1 = ST_ERROR;
   \   00000028   0840A011           MOVNE    R4,R8
   \   0000002C   3C00001A           BNE      ??FindPROStatus_1
    276              }
    277              if ( PROStatus1 != ST_ERROR ) {
    278                  if ( MainWaterIngrSensor ) {
   \   00000030   642195E5           LDR      R2,[R5, #+356]
   \   00000034   000052E3           CMP      R2,#+0
   \   00000038   0800000A           BEQ      ??FindPROStatus_2
    279                      PROStatus2 = MainWaterIngrSensor->FindPROStatus(MyString);
   \   0000003C   0200A0E1           MOV      R0,R2
   \   00000040   A42092E5           LDR      R2,[R2, #+164]
   \   00000044   1C2092E5           LDR      R2,[R2, #+28]
   \   00000048   0FE0A0E1           MOV      LR,PC
   \   0000004C   12FF2FE1           BX       R2
   \   00000050   0070A0E1           MOV      R7,R0
    280                      if ( PROStatus2>PROStatus1 ) PROStatus1 = PROStatus2;
   \   00000054   010084E2           ADD      R0,R4,#+1
   \   00000058   000057E1           CMP      R7,R0
   \   0000005C   0740A0A1           MOVGE    R4,R7
    281                  }
    282                  if ( PreWaterIngrSensor ) {
   \                     ??FindPROStatus_2:
   \   00000060   682195E5           LDR      R2,[R5, #+360]
   \   00000064   000052E3           CMP      R2,#+0
   \   00000068   0800000A           BEQ      ??FindPROStatus_3
    283                      PROStatus2 = PreWaterIngrSensor->FindPROStatus(MyString);
   \   0000006C   0200A0E1           MOV      R0,R2
   \   00000070   A42092E5           LDR      R2,[R2, #+164]
   \   00000074   0610A0E1           MOV      R1,R6
   \   00000078   1C2092E5           LDR      R2,[R2, #+28]
   \   0000007C   0FE0A0E1           MOV      LR,PC
   \   00000080   12FF2FE1           BX       R2
   \   00000084   0070A0E1           MOV      R7,R0
    284                      if ( PROStatus2>PROStatus1 ) PROStatus1 = PROStatus2;
   \   00000088   070054E1           CMP      R4,R7
   \   0000008C   0740A0B1           MOVLT    R4,R7
    285                  }
    286                  if ( TemperaturePtr ) {
   \                     ??FindPROStatus_3:
   \   00000090   742195E5           LDR      R2,[R5, #+372]
   \   00000094   000052E3           CMP      R2,#+0
   \   00000098   0800000A           BEQ      ??FindPROStatus_4
    287                      PROStatus2 = TemperaturePtr->FindPROStatus(MyString);
   \   0000009C   0200A0E1           MOV      R0,R2
   \   000000A0   A42092E5           LDR      R2,[R2, #+164]
   \   000000A4   0610A0E1           MOV      R1,R6
   \   000000A8   1C2092E5           LDR      R2,[R2, #+28]
   \   000000AC   0FE0A0E1           MOV      LR,PC
   \   000000B0   12FF2FE1           BX       R2
   \   000000B4   0070A0E1           MOV      R7,R0
    288                      if ( PROStatus2>PROStatus1 ) PROStatus1 = PROStatus2;
   \   000000B8   070054E1           CMP      R4,R7
   \   000000BC   0740A0B1           MOVLT    R4,R7
    289                  }
    290              }
    291              if ( PROStatus1 != ST_ERROR ) {
   \                     ??FindPROStatus_4:
   \   000000C0   080054E1           CMP      R4,R8
   \   000000C4   1600000A           BEQ      ??FindPROStatus_1
    292                  if ( Override ) {
   \   000000C8   6001D5E5           LDRB     R0,[R5, #+352]
   \   000000CC   000050E3           CMP      R0,#+0
   \   000000D0   0300000A           BEQ      ??FindPROStatus_5
    293                      PROStatus2 = ST_WARNING;
   \   000000D4   020048E2           SUB      R0,R8,#+2
   \   000000D8   0070A0E1           MOV      R7,R0
    294                      if ( PROStatus2>PROStatus1 ) PROStatus1 = PROStatus2;
   \   000000DC   000054E1           CMP      R4,R0
   \   000000E0   0040A0B1           MOVLT    R4,R0
    295                  }
    296              }
    297              if ( PROStatus1 != ST_ERROR ) {
    298                  bool AlActive = false;
    299                  set<AlarmBasic*>::iterator pBIt;
    300                  for ( pBIt=AlarmSet.begin(); pBIt!=AlarmSet.end(); pBIt++ ) {
   \                     ??FindPROStatus_5:
   \   000000E4   E40095E5           LDR      R0,[R5, #+228]
   \   000000E8   0080A0E3           MOV      R8,#+0
   \   000000EC   050000EA           B        ??FindPROStatus_6
    301                      AlarmBasic *Element =*pBIt;
   \                     ??FindPROStatus_7:
   \   000000F0   101090E5           LDR      R1,[R0, #+16]
    302                      if ( Element && (Element->State != AlarmBasic::AlIdle) )
   \   000000F4   000051E3           CMP      R1,#+0
   \   000000F8   E010D115           LDRBNE   R1,[R1, #+224]
   \   000000FC   00005113           CMPNE    R1,#+0
    303                          AlActive = true;
   \   00000100   0180A013           MOVNE    R8,#+1
    304                  }
   \   00000104   ........           _BLF     ??_IncP,??_IncP??rA
   \                     ??FindPROStatus_6:
   \   00000108   E41085E2           ADD      R1,R5,#+228
   \   0000010C   010050E1           CMP      R0,R1
   \   00000110   F6FFFF1A           BNE      ??FindPROStatus_7
    305                  if ( AlActive ) PROStatus2 = ST_ALARM;
   \   00000114   000058E3           CMP      R8,#+0
   \   00000118   F47EA013           MOVNE    R7,#+3904
    306                  if ( PROStatus2>PROStatus1 ) PROStatus1 = PROStatus2;
   \   0000011C   070054E1           CMP      R4,R7
   \   00000120   0740A0B1           MOVLT    R4,R7
    307              }
    308              MyString = FindStatusChar(PROStatus1);
   \                     ??FindPROStatus_1:
   \   00000124   0420A0E1           MOV      R2,R4
   \   00000128   0D10A0E1           MOV      R1,SP
   \   0000012C   0500A0E1           MOV      R0,R5
   \   00000130   ........           _BLF     ??FindStatusChar,??FindStatusChar??rA
   \   00000134   ........           LDR      R0,??DataTable15  ;; ??npos
   \   00000138   0020A0E3           MOV      R2,#+0
   \   0000013C   003090E5           LDR      R3,[R0, #+0]
   \   00000140   0D10A0E1           MOV      R1,SP
   \   00000144   0600A0E1           MOV      R0,R6
   \   00000148   ........           _BLF     ??assign,??assign??rA
   \   0000014C   0020A0E3           MOV      R2,#+0
   \   00000150   0110A0E3           MOV      R1,#+1
   \   00000154   0D00A0E1           MOV      R0,SP
   \   00000158   ........           _BLF     ??_Tidy,??_Tidy??rA
    309              return(PROStatus1);
   \   0000015C   0400A0E1           MOV      R0,R4
   \   00000160   1CD08DE2           ADD      SP,SP,#+28
   \   00000164   ........           B        ?Subroutine23
    310          }
    311          

   \                                 In segment CODE, align 4, keep-with-next
    312          int  PROWaterIngress::GetValue(int ValueId, int Index, float &MyRetValue, int &DecPnt, int &Unit)
    313          {
   \                     ??GetValue:
   \   00000000   F44F2DE9           PUSH     {R2,R4-R11,LR}
   \   00000004   28509DE5           LDR      R5,[SP, #+40]
   \   00000008   2C609DE5           LDR      R6,[SP, #+44]
    314              int Status = GETVAL_NO_ERR;
    315              switch ( ValueId ) {
   \   0000000C   6CE190E5           LDR      LR,[R0, #+364]
   \   00000010   709190E5           LDR      R9,[R0, #+368]
   \   00000014   0340A0E1           MOV      R4,R3
   \   00000018   0070A0E3           MOV      R7,#+0
   \   0000001C   3EC0A0E3           MOV      R12,#+62
   \   00000020   8CCD8CE3           ORR      R12,R12,#0x2300
   \   00000024   0CA0CCE3           BIC      R10,R12,#0xC
   \   00000028   01B08AE3           ORR      R11,R10,#0x1
   \   0000002C   0080A0E3           MOV      R8,#+0
   \   00000030   FB0F51E3           CMP      R1,#+1004
   \   00000034   2000000A           BEQ      ??GetValue_2
   \   00000038   A3308AE2           ADD      R3,R10,#+163
   \   0000003C   030051E1           CMP      R1,R3
   \   00000040   1500000A           BEQ      ??GetValue_3
   \   00000044   013083E2           ADD      R3,R3,#+1
   \   00000048   030051E1           CMP      R1,R3
   \   0000004C   2C00000A           BEQ      ??GetValue_4
   \   00000050   013083E3           ORR      R3,R3,#0x1
   \   00000054   030051E1           CMP      R1,R3
   \   00000058   3400000A           BEQ      ??GetValue_5
   \   0000005C   013083E2           ADD      R3,R3,#+1
   \   00000060   030051E1           CMP      R1,R3
   \   00000064   3C00000A           BEQ      ??GetValue_6
   \   00000068   013083E3           ORR      R3,R3,#0x1
   \   0000006C   030051E1           CMP      R1,R3
   \   00000070   4100000A           BEQ      ??GetValue_7
   \   00000074   013083E2           ADD      R3,R3,#+1
   \   00000078   030051E1           CMP      R1,R3
   \   0000007C   4600000A           BEQ      ??GetValue_8
   \   00000080   013083E3           ORR      R3,R3,#0x1
   \   00000084   030051E1           CMP      R1,R3
   \   00000088   4B00000A           BEQ      ??GetValue_9
   \   0000008C   013083E2           ADD      R3,R3,#+1
   \   00000090   030051E1           CMP      R1,R3
   \   00000094   0600000A           BEQ      ??GetValue_10
   \   00000098   520000EA           B        ??GetValue_11
    316              case SVT_WI_OVERRIDE:
    317                  {
    318                      MyRetValue = (float)Override;
   \                     ??GetValue_3:
   \   0000009C   6001D0E5           LDRB     R0,[R0, #+352]
   \                     ??GetValue_12:
   \   000000A0   ........           _BLF     __ulongToFloat,??__ulongToFloat??rA
   \   000000A4   000084E5           STR      R0,[R4, #+0]
    319                      DecPnt = 0;
   \   000000A8   008085E5           STR      R8,[R5, #+0]
    320                      Unit   = NO_UNIT;
   \   000000AC   008086E5           STR      R8,[R6, #+0]
   \   000000B0   520000EA           B        ??GetValue_13
    321                  }
    322                  break;
    323              case SVT_WI_PROTECTION:
    324                  {
    325                      MyRetValue = (float)HasProtection;
   \                     ??GetValue_10:
   \   000000B4   6101D0E5           LDRB     R0,[R0, #+353]
   \   000000B8   F8FFFFEA           B        ??GetValue_12
    326                      DecPnt = 0;
    327                      Unit   = NO_UNIT;
    328                  }
    329                  break;
    330              case SVT_TEMP:
    331                  if ( TemperaturePtr ) {
   \                     ??GetValue_2:
   \   000000BC   747190E5           LDR      R7,[R0, #+372]
   \   000000C0   000057E3           CMP      R7,#+0
   \   000000C4   0800000A           BEQ      ??GetValue_14
    332                      Status = TemperaturePtr->GetValue(SVT_TEMP,0,MyRetValue, DecPnt, Unit);
   \   000000C8   40002DE9           PUSH     {R6}
   \   000000CC   20002DE9           PUSH     {R5}
   \   000000D0   A44097E5           LDR      R4,[R7, #+164]
   \   000000D4   0020A0E3           MOV      R2,#+0
   \   000000D8   244094E5           LDR      R4,[R4, #+36]
   \   000000DC   0700A0E1           MOV      R0,R7
   \   000000E0   0FE0A0E1           MOV      LR,PC
   \   000000E4   14FF2FE1           BX       R4
   \   000000E8   420000EA           B        ??GetValue_15
    333                  } else {
    334                      DecPnt = 1;
   \                     ??GetValue_14:
   \   000000EC   0100A0E3           MOV      R0,#+1
   \   000000F0   000085E5           STR      R0,[R5, #+0]
    335                      Unit   = TEMP_UNIT;
   \   000000F4   0500A0E3           MOV      R0,#+5
   \   000000F8   000086E5           STR      R0,[R6, #+0]
    336                      Status = GETVAL_FLOAT_NOT_LEGAL;
   \   000000FC   0570A0E3           MOV      R7,#+5
   \   00000100   3E0000EA           B        ??GetValue_13
    337                  }
    338                  break;
    339              case SVT_WI_MAIN_ENABLE:
    340                  Status = MainWaterIngressPtr->GetValue(SVT_AL_ENABLE,0,MyRetValue, DecPnt, Unit);
   \                     ??GetValue_4:
   \   00000104   40002DE9           PUSH     {R6}
   \   00000108   20002DE9           PUSH     {R5}
   \   0000010C   0430A0E1           MOV      R3,R4
   \   00000110   A4409EE5           LDR      R4,[LR, #+164]
   \   00000114   0020A0E3           MOV      R2,#+0
   \   00000118   244094E5           LDR      R4,[R4, #+36]
   \   0000011C   0C10A0E1           MOV      R1,R12
   \                     ??GetValue_16:
   \   00000120   0E00A0E1           MOV      R0,LR
   \   00000124   0FE0A0E1           MOV      LR,PC
   \   00000128   14FF2FE1           BX       R4
   \   0000012C   310000EA           B        ??GetValue_15
    341                  break;
    342              case SVT_WI_PRE_ENABLE :
    343                  Status = PreWaterIngressPtr->GetValue(SVT_AL_ENABLE,0,MyRetValue, DecPnt, Unit);
   \                     ??GetValue_5:
   \   00000130   40002DE9           PUSH     {R6}
   \   00000134   20002DE9           PUSH     {R5}
   \   00000138   0430A0E1           MOV      R3,R4
   \   0000013C   A44099E5           LDR      R4,[R9, #+164]
   \   00000140   0020A0E3           MOV      R2,#+0
   \   00000144   244094E5           LDR      R4,[R4, #+36]
   \   00000148   0C10A0E1           MOV      R1,R12
   \                     ??GetValue_17:
   \   0000014C   0900A0E1           MOV      R0,R9
   \   00000150   0FE0A0E1           MOV      LR,PC
   \   00000154   14FF2FE1           BX       R4
   \   00000158   260000EA           B        ??GetValue_15
    344                  break;
    345              case SVT_WI_MAIN_LIMIT :
    346                  Status = MainWaterIngressPtr->GetValue(SVT_AL_LIMIT,0,MyRetValue, DecPnt, Unit);
   \                     ??GetValue_6:
   \   0000015C   40002DE9           PUSH     {R6}
   \   00000160   20002DE9           PUSH     {R5}
   \   00000164   0430A0E1           MOV      R3,R4
   \   00000168   A4409EE5           LDR      R4,[LR, #+164]
   \   0000016C   0020A0E3           MOV      R2,#+0
   \   00000170   244094E5           LDR      R4,[R4, #+36]
   \   00000174   0A10A0E1           MOV      R1,R10
   \   00000178   E8FFFFEA           B        ??GetValue_16
    347                  break;
    348              case SVT_WI_PRE_LIMIT  :
    349                  Status = PreWaterIngressPtr->GetValue(SVT_AL_LIMIT,0,MyRetValue, DecPnt, Unit);
   \                     ??GetValue_7:
   \   0000017C   40002DE9           PUSH     {R6}
   \   00000180   20002DE9           PUSH     {R5}
   \   00000184   0430A0E1           MOV      R3,R4
   \   00000188   A44099E5           LDR      R4,[R9, #+164]
   \   0000018C   0020A0E3           MOV      R2,#+0
   \   00000190   244094E5           LDR      R4,[R4, #+36]
   \   00000194   0A10A0E1           MOV      R1,R10
   \   00000198   EBFFFFEA           B        ??GetValue_17
    350                  break;
    351              case SVT_WI_MAIN_VALUE :
    352                  Status = MainWaterIngressPtr->GetValue(SVT_AL_VALUE,0,MyRetValue, DecPnt, Unit);
   \                     ??GetValue_8:
   \   0000019C   40002DE9           PUSH     {R6}
   \   000001A0   20002DE9           PUSH     {R5}
   \   000001A4   0430A0E1           MOV      R3,R4
   \   000001A8   A4409EE5           LDR      R4,[LR, #+164]
   \   000001AC   0020A0E3           MOV      R2,#+0
   \   000001B0   244094E5           LDR      R4,[R4, #+36]
   \   000001B4   0B10A0E1           MOV      R1,R11
   \   000001B8   D8FFFFEA           B        ??GetValue_16
    353                  break;
    354              case SVT_WI_PRE_VALUE  :
    355                  Status = PreWaterIngressPtr->GetValue(SVT_AL_VALUE,0,MyRetValue, DecPnt, Unit);
   \                     ??GetValue_9:
   \   000001BC   40002DE9           PUSH     {R6}
   \   000001C0   20002DE9           PUSH     {R5}
   \   000001C4   0430A0E1           MOV      R3,R4
   \   000001C8   A44099E5           LDR      R4,[R9, #+164]
   \   000001CC   0020A0E3           MOV      R2,#+0
   \   000001D0   244094E5           LDR      R4,[R4, #+36]
   \   000001D4   0B10A0E1           MOV      R1,R11
   \   000001D8   0900A0E1           MOV      R0,R9
   \   000001DC   0FE0A0E1           MOV      LR,PC
   \   000001E0   14FF2FE1           BX       R4
   \   000001E4   030000EA           B        ??GetValue_15
    356                  break;
    357              default:
    358                  Status = PRogramObject::GetValue(ValueId, Index, MyRetValue,  DecPnt,Unit);
   \                     ??GetValue_11:
   \   000001E8   40002DE9           PUSH     {R6}
   \   000001EC   20002DE9           PUSH     {R5}
   \   000001F0   0430A0E1           MOV      R3,R4
   \   000001F4   ........           _BLF     ??GetValue_1,??GetValue??rA
   \                     ??GetValue_15:
   \   000001F8   0070A0E1           MOV      R7,R0
   \   000001FC   08D08DE2           ADD      SP,SP,#+8
    359                  break;
    360              }
    361              return(Status);
   \                     ??GetValue_13:
   \   00000200   0700A0E1           MOV      R0,R7
   \   00000204   F24FBDE8           POP      {R1,R4-R11,LR}
   \   00000208   1EFF2FE1           BX       LR               ;; return
    362          }
    363          

   \                                 In segment CODE, align 4, keep-with-next
    364          int PROWaterIngress::GetStringValue(int ValueId, int Index, AnsiString &MyString)
    365          {
   \                     ??GetStringValue:
   \   00000000   10402DE9           PUSH     {R4,LR}
    366              int Status = GETVAL_NO_ERR;
   \   00000004   0040A0E3           MOV      R4,#+0
    367              switch ( ValueId ) {
   \   00000008   19E0A0E3           MOV      LR,#+25
   \   0000000C   50EE8EE3           ORR      LR,LR,#0x500
   \   00000010   0E0051E1           CMP      R1,LR
   \   00000014   0500001A           BNE      ??GetStringValue_2
    368              case SVT_PRO_STATUS:
    369                  FindPROStatus(MyString);
   \   00000018   A42090E5           LDR      R2,[R0, #+164]
   \   0000001C   0310A0E1           MOV      R1,R3
   \   00000020   1C2092E5           LDR      R2,[R2, #+28]
   \   00000024   0FE0A0E1           MOV      LR,PC
   \   00000028   12FF2FE1           BX       R2
   \   0000002C   010000EA           B        ??GetStringValue_3
    370                  break;
    371              default:
    372                  Status = PRogramObject::GetStringValue(ValueId,Index, MyString);
   \                     ??GetStringValue_2:
   \   00000030   ........           _BLF     ??GetStringValue_1,??GetStringValue??rA
   \   00000034   0040A0E1           MOV      R4,R0
    373                  break;
    374              }
    375              return(Status);
   \                     ??GetStringValue_3:
   \   00000038   0400A0E1           MOV      R0,R4
   \   0000003C   1040BDE8           POP      {R4,LR}
   \   00000040   1EFF2FE1           BX       LR               ;; return
    376          }
    377          

   \                                 In segment CODE, align 4, keep-with-next
    378          int PROWaterIngress::PutValue( int ValueId, int Index, AnsiString NewValue,bool Local, int *UnitId)
    379          {
   \                     ??PutValue:
   \   00000000   F24F2DE9           PUSH     {R1,R4-R11,LR}
   \   00000004   E8D04DE2           SUB      SP,SP,#+232
   \   00000008   1081DDE5           LDRB     R8,[SP, #+272]
   \   0000000C   0040A0E1           MOV      R4,R0
    380              int Status=E_NO_ERR, ValUnitId = NO_UNIT;
    381              switch ( ValueId ) {
   \   00000010   E8009DE5           LDR      R0,[SP, #+232]
   \   00000014   0270A0E1           MOV      R7,R2
   \   00000018   0310A0E1           MOV      R1,R3
   \   0000001C   0020A0E3           MOV      R2,#+0
   \   00000020   00208DE5           STR      R2,[SP, #+0]
   \   00000024   04208DE5           STR      R2,[SP, #+4]
   \   00000028   0150A0E3           MOV      R5,#+1
   \   0000002C   3E90A0E3           MOV      R9,#+62
   \   00000030   8C9D89E3           ORR      R9,R9,#0x2300
   \   00000034   0CA0C9E3           BIC      R10,R9,#0xC
   \   00000038   0BB049E2           SUB      R11,R9,#+11
   \   0000003C   D50040E2           SUB      R0,R0,#+213
   \   00000040   8C0D40E2           SUB      R0,R0,#+8960
   \   00000044   070050E3           CMP      R0,#+7
   \   00000048   DC00008A           BHI      ??PutValue_3
   \   0000004C   012F8FE2           ADR      R2,??PutValue_1
   \   00000050   0020D2E7           LDRB     R2,[R2, R0]
   \   00000054   02F18FE0           ADD      PC,PC,R2, LSL #+2
   \                     ??PutValue_1:
   \   00000058   01617589           DC8      +1,+97,+117,+137
   \   0000005C   9DB1C54E           DC8      +157,+177,+197,+78
    382              case SVT_WI_OVERRIDE:
    383                  {
    384                      bool NewStatus = (bool)GetUnsigned(NewValue, Status);
   \                     ??PutValue_4:
   \   00000060   08008DE2           ADD      R0,SP,#+8
   \   00000064   ........           _BLF     ??string,??string??rA
   \   00000068   0D10A0E1           MOV      R1,SP
   \   0000006C   08008DE2           ADD      R0,SP,#+8
   \   00000070   ........           _BLF     ??GetUnsigned,??GetUnsigned??rA
   \   00000074   000050E3           CMP      R0,#+0
   \   00000078   0170A013           MOVNE    R7,#+1
   \   0000007C   0070A003           MOVEQ    R7,#+0
   \   00000080   0020A0E3           MOV      R2,#+0
   \   00000084   0110A0E3           MOV      R1,#+1
   \   00000088   08008DE2           ADD      R0,SP,#+8
   \   0000008C   ........           _BLF     ??_Tidy,??_Tidy??rA
    385                      if ( Status== E_NO_ERR ) {
   \   00000090   00009DE5           LDR      R0,[SP, #+0]
   \   00000094   000050E3           CMP      R0,#+0
   \   00000098   D800001A           BNE      ??PutValue_5
    386                          if ( NewStatus  && !Override ) {
   \   0000009C   701194E5           LDR      R1,[R4, #+368]
   \   000000A0   6C0194E5           LDR      R0,[R4, #+364]
   \   000000A4   000057E3           CMP      R7,#+0
   \   000000A8   3100000A           BEQ      ??PutValue_6
   \   000000AC   6021D4E5           LDRB     R2,[R4, #+352]
   \   000000B0   000052E3           CMP      R2,#+0
   \   000000B4   D400001A           BNE      ??PutValue_7
    387                              if ( ( MainWaterIngressPtr && PreWaterIngressPtr)
    388                                   && (MainWaterIngressPtr->State != AlarmBasic::AlIdle || PreWaterIngressPtr->State != AlarmBasic::AlIdle) ) {
   \   000000B8   000050E3           CMP      R0,#+0
   \   000000BC   1100000A           BEQ      ??PutValue_8
   \   000000C0   000051E3           CMP      R1,#+0
   \   000000C4   0900000A           BEQ      ??PutValue_9
   \   000000C8   E020D0E5           LDRB     R2,[R0, #+224]
   \   000000CC   000052E3           CMP      R2,#+0
   \   000000D0   E020D105           LDRBEQ   R2,[R1, #+224]
   \   000000D4   00005203           CMPEQ    R2,#+0
   \   000000D8   0400000A           BEQ      ??PutValue_9
    389                                  Override = true;
   \   000000DC   6051C4E5           STRB     R5,[R4, #+352]
    390                                  MainWaterIngressPtr->Enable = false;
   \   000000E0   0020A0E3           MOV      R2,#+0
   \   000000E4   E220C0E5           STRB     R2,[R0, #+226]
    391                                  PreWaterIngressPtr->Enable  = false;
   \                     ??PutValue_10:
   \   000000E8   E220C1E5           STRB     R2,[R1, #+226]
   \   000000EC   0D0000EA           B        ??PutValue_11
    392                              } else if ( MainWaterIngressPtr && (MainWaterIngressPtr->State != AlarmBasic::AlIdle ) ) {
   \                     ??PutValue_9:
   \   000000F0   E020D0E5           LDRB     R2,[R0, #+224]
   \   000000F4   000052E3           CMP      R2,#+0
    393                                  Override = true;
   \   000000F8   6051C415           STRBNE   R5,[R4, #+352]
    394                                  MainWaterIngressPtr->Enable = false;
   \   000000FC   0010A013           MOVNE    R1,#+0
   \   00000100   E210C015           STRBNE   R1,[R0, #+226]
   \   00000104   0700001A           BNE      ??PutValue_11
    395                              } else if ( PreWaterIngressPtr && (PreWaterIngressPtr->State != AlarmBasic::AlIdle) ) {
   \                     ??PutValue_8:
   \   00000108   000051E3           CMP      R1,#+0
   \   0000010C   E020D115           LDRBNE   R2,[R1, #+224]
   \   00000110   00005213           CMPNE    R2,#+0
    396                                  Override = true;
   \   00000114   6051C415           STRBNE   R5,[R4, #+352]
    397                                  PreWaterIngressPtr->Enable  = false;
   \   00000118   0020A013           MOVNE    R2,#+0
   \   0000011C   F1FFFF1A           BNE      ??PutValue_10
    398                              } else {
    399                                  Status = E_NO_OVERRIDE_PERMISSION;
   \   00000120   2C20A0E3           MOV      R2,#+44
   \   00000124   00208DE5           STR      R2,[SP, #+0]
    400          
    401                              }
    402          
    403                              if ( Override ) {
    404                                  if ( Master ) {
   \                     ??PutValue_11:
   \   00000128   ........           LDR      R2,??DataTable16  ;; Master
   \   0000012C   6011D4E5           LDRB     R1,[R4, #+352]
   \   00000130   0020D2E5           LDRB     R2,[R2, #+0]
   \   00000134   010012E1           TST      R2,R1
   \   00000138   B000000A           BEQ      ??PutValue_5
    405                                      if ( MainWaterIngressPtr && MainWaterIngressPtr->State == AlarmBasic::AlActive ) {
   \   0000013C   000050E3           CMP      R0,#+0
   \   00000140   0300000A           BEQ      ??PutValue_12
   \   00000144   E010D0E5           LDRB     R1,[R0, #+224]
   \   00000148   010051E3           CMP      R1,#+1
   \   0000014C   0000001A           BNE      ??PutValue_12
    406                                          MainWaterIngressPtr->MoveAlarmToAknowledge();
   \   00000150   ........           _BLF     ??MoveAlarmToAknowledge,??MoveAlarmToAknowledge??rA
    407                                      }
    408                                      if ( PreWaterIngressPtr && PreWaterIngressPtr->State == AlarmBasic::AlActive ) {
   \                     ??PutValue_12:
   \   00000154   700194E5           LDR      R0,[R4, #+368]
   \   00000158   000050E3           CMP      R0,#+0
   \   0000015C   A700000A           BEQ      ??PutValue_5
   \   00000160   E010D0E5           LDRB     R1,[R0, #+224]
   \   00000164   010051E3           CMP      R1,#+1
   \   00000168   A400001A           BNE      ??PutValue_5
    409                                          PreWaterIngressPtr->MoveAlarmToAknowledge();
   \   0000016C   ........           _BLF     ??MoveAlarmToAknowledge,??MoveAlarmToAknowledge??rA
   \   00000170   A20000EA           B        ??PutValue_5
    410                                      }
    411                                  }
    412                              }
    413          
    414                          } else if ( !NewStatus ) {
    415                              Override = false;
   \                     ??PutValue_6:
   \   00000174   0020A0E3           MOV      R2,#+0
   \   00000178   6021C4E5           STRB     R2,[R4, #+352]
    416                              if ( MainWaterIngressPtr ) MainWaterIngressPtr->Enable = true;
   \   0000017C   000050E3           CMP      R0,#+0
   \   00000180   E250C015           STRBNE   R5,[R0, #+226]
    417                              if ( PreWaterIngressPtr  ) PreWaterIngressPtr->Enable  = true;
   \   00000184   000051E3           CMP      R1,#+0
   \   00000188   9F00000A           BEQ      ??PutValue_7
   \   0000018C   E250C1E5           STRB     R5,[R1, #+226]
   \   00000190   9D0000EA           B        ??PutValue_7
    418                          }
    419                      }
    420                  }
    421                  break;
    422              case SVT_WI_PROTECTION:
    423                  {
    424                      bool NewStatus = (bool)GetUnsigned(NewValue, Status);
   \                     ??PutValue_13:
   \   00000194   08008DE2           ADD      R0,SP,#+8
   \   00000198   ........           _BLF     ??string,??string??rA
   \   0000019C   0D10A0E1           MOV      R1,SP
   \   000001A0   08008DE2           ADD      R0,SP,#+8
   \   000001A4   ........           _BLF     ??GetUnsigned,??GetUnsigned??rA
   \   000001A8   000050E3           CMP      R0,#+0
   \   000001AC   0170A013           MOVNE    R7,#+1
   \   000001B0   0070A003           MOVEQ    R7,#+0
   \   000001B4   0020A0E3           MOV      R2,#+0
   \   000001B8   0110A0E3           MOV      R1,#+1
   \   000001BC   08008DE2           ADD      R0,SP,#+8
   \   000001C0   ........           _BLF     ??_Tidy,??_Tidy??rA
    425                      if ( Status== E_NO_ERR ) {
   \   000001C4   00009DE5           LDR      R0,[SP, #+0]
   \   000001C8   000050E3           CMP      R0,#+0
   \   000001CC   8B00001A           BNE      ??PutValue_5
    426                          if ( NewStatus ) {
   \   000001D0   000057E3           CMP      R7,#+0
   \   000001D4   6101C405           STRBEQ   R0,[R4, #+353]
    427                              HasProtection = true;
   \   000001D8   6151C415           STRBNE   R5,[R4, #+353]
   \   000001DC   8A0000EA           B        ??PutValue_7
    428                          } else {
    429                              HasProtection = false;
    430                          }
    431                      }
    432                  }
    433                  break;
    434              case SVT_WI_MAIN_ENABLE:
    435                  Status = MainWaterIngressPtr->PutValue(SVT_AL_ENABLE, Index,NewValue,Local,&ValUnitId);
   \                     ??PutValue_14:
   \   000001E0   6C0194E5           LDR      R0,[R4, #+364]
   \   000001E4   A40090E5           LDR      R0,[R0, #+164]
   \   000001E8   305080E2           ADD      R5,R0,#+48
   \   000001EC   24008DE2           ADD      R0,SP,#+36
   \   000001F0   ........           _BLF     ??string,??string??rA
   \   000001F4   04008DE2           ADD      R0,SP,#+4
   \   000001F8   01002DE9           PUSH     {R0}
   \   000001FC   00012DE9           PUSH     {R8}
   \   00000200   6C0194E5           LDR      R0,[R4, #+364]
   \   00000204   005095E5           LDR      R5,[R5, #+0]
   \   00000208   2C308DE2           ADD      R3,SP,#+44
   \   0000020C   0720A0E1           MOV      R2,R7
   \   00000210   0910A0E1           MOV      R1,R9
   \   00000214   0FE0A0E1           MOV      LR,PC
   \   00000218   15FF2FE1           BX       R5
   \   0000021C   08008DE5           STR      R0,[SP, #+8]
   \   00000220   0020A0E3           MOV      R2,#+0
   \   00000224   0110A0E3           MOV      R1,#+1
   \   00000228   2C008DE2           ADD      R0,SP,#+44
   \   0000022C   710000EA           B        ??PutValue_15
    436                  break;
    437              case SVT_WI_PRE_ENABLE :
    438                  Status = PreWaterIngressPtr->PutValue(SVT_AL_ENABLE, Index,NewValue,Local,&ValUnitId);
   \                     ??PutValue_16:
   \   00000230   700194E5           LDR      R0,[R4, #+368]
   \   00000234   A40090E5           LDR      R0,[R0, #+164]
   \   00000238   305080E2           ADD      R5,R0,#+48
   \   0000023C   40008DE2           ADD      R0,SP,#+64
   \   00000240   ........           _BLF     ??string,??string??rA
   \   00000244   04008DE2           ADD      R0,SP,#+4
   \   00000248   01002DE9           PUSH     {R0}
   \   0000024C   00012DE9           PUSH     {R8}
   \   00000250   700194E5           LDR      R0,[R4, #+368]
   \   00000254   005095E5           LDR      R5,[R5, #+0]
   \   00000258   48308DE2           ADD      R3,SP,#+72
   \   0000025C   0720A0E1           MOV      R2,R7
   \   00000260   0910A0E1           MOV      R1,R9
   \   00000264   0FE0A0E1           MOV      LR,PC
   \   00000268   15FF2FE1           BX       R5
   \   0000026C   08008DE5           STR      R0,[SP, #+8]
   \   00000270   0020A0E3           MOV      R2,#+0
   \   00000274   0110A0E3           MOV      R1,#+1
   \   00000278   48008DE2           ADD      R0,SP,#+72
   \   0000027C   5D0000EA           B        ??PutValue_15
    439                  break;
    440              case SVT_WI_MAIN_LIMIT :
    441                  Status = MainWaterIngressPtr->PutValue(SVT_AL_LIMIT, Index,NewValue,Local,&ValUnitId);
   \                     ??PutValue_17:
   \   00000280   6C0194E5           LDR      R0,[R4, #+364]
   \   00000284   A40090E5           LDR      R0,[R0, #+164]
   \   00000288   305080E2           ADD      R5,R0,#+48
   \   0000028C   5C008DE2           ADD      R0,SP,#+92
   \   00000290   ........           _BLF     ??string,??string??rA
   \   00000294   04008DE2           ADD      R0,SP,#+4
   \   00000298   01002DE9           PUSH     {R0}
   \   0000029C   00012DE9           PUSH     {R8}
   \   000002A0   6C0194E5           LDR      R0,[R4, #+364]
   \   000002A4   005095E5           LDR      R5,[R5, #+0]
   \   000002A8   64308DE2           ADD      R3,SP,#+100
   \   000002AC   0720A0E1           MOV      R2,R7
   \   000002B0   0A10A0E1           MOV      R1,R10
   \   000002B4   0FE0A0E1           MOV      LR,PC
   \   000002B8   15FF2FE1           BX       R5
   \   000002BC   08008DE5           STR      R0,[SP, #+8]
   \   000002C0   0020A0E3           MOV      R2,#+0
   \   000002C4   0110A0E3           MOV      R1,#+1
   \   000002C8   64008DE2           ADD      R0,SP,#+100
   \   000002CC   490000EA           B        ??PutValue_15
    442                  break;
    443              case SVT_WI_PRE_LIMIT  :
    444                  Status = PreWaterIngressPtr->PutValue(SVT_AL_LIMIT, Index,NewValue,Local,&ValUnitId);
   \                     ??PutValue_18:
   \   000002D0   700194E5           LDR      R0,[R4, #+368]
   \   000002D4   A40090E5           LDR      R0,[R0, #+164]
   \   000002D8   305080E2           ADD      R5,R0,#+48
   \   000002DC   78008DE2           ADD      R0,SP,#+120
   \   000002E0   ........           _BLF     ??string,??string??rA
   \   000002E4   04008DE2           ADD      R0,SP,#+4
   \   000002E8   01002DE9           PUSH     {R0}
   \   000002EC   00012DE9           PUSH     {R8}
   \   000002F0   700194E5           LDR      R0,[R4, #+368]
   \   000002F4   005095E5           LDR      R5,[R5, #+0]
   \   000002F8   80308DE2           ADD      R3,SP,#+128
   \   000002FC   0720A0E1           MOV      R2,R7
   \   00000300   0A10A0E1           MOV      R1,R10
   \   00000304   0FE0A0E1           MOV      LR,PC
   \   00000308   15FF2FE1           BX       R5
   \   0000030C   08008DE5           STR      R0,[SP, #+8]
   \   00000310   0020A0E3           MOV      R2,#+0
   \   00000314   0110A0E3           MOV      R1,#+1
   \   00000318   80008DE2           ADD      R0,SP,#+128
   \   0000031C   350000EA           B        ??PutValue_15
    445                  break;
    446              case SVT_WI_MAIN_VALUE :
    447                  Status = MainWaterIngressPtr->PutValue(SVT_AL_VALUE, Index,NewValue,Local,&ValUnitId);
   \                     ??PutValue_19:
   \   00000320   6C0194E5           LDR      R0,[R4, #+364]
   \   00000324   A40090E5           LDR      R0,[R0, #+164]
   \   00000328   305080E2           ADD      R5,R0,#+48
   \   0000032C   94008DE2           ADD      R0,SP,#+148
   \   00000330   ........           _BLF     ??string,??string??rA
   \   00000334   04008DE2           ADD      R0,SP,#+4
   \   00000338   01002DE9           PUSH     {R0}
   \   0000033C   00012DE9           PUSH     {R8}
   \   00000340   6C0194E5           LDR      R0,[R4, #+364]
   \   00000344   005095E5           LDR      R5,[R5, #+0]
   \   00000348   9C308DE2           ADD      R3,SP,#+156
   \   0000034C   0720A0E1           MOV      R2,R7
   \   00000350   0B10A0E1           MOV      R1,R11
   \   00000354   0FE0A0E1           MOV      LR,PC
   \   00000358   15FF2FE1           BX       R5
   \   0000035C   08008DE5           STR      R0,[SP, #+8]
   \   00000360   0020A0E3           MOV      R2,#+0
   \   00000364   0110A0E3           MOV      R1,#+1
   \   00000368   9C008DE2           ADD      R0,SP,#+156
   \   0000036C   210000EA           B        ??PutValue_15
    448                  break;
    449              case SVT_WI_PRE_VALUE  :
    450                  Status = PreWaterIngressPtr->PutValue(SVT_AL_VALUE, Index,NewValue,Local,&ValUnitId);
   \                     ??PutValue_20:
   \   00000370   700194E5           LDR      R0,[R4, #+368]
   \   00000374   A40090E5           LDR      R0,[R0, #+164]
   \   00000378   305080E2           ADD      R5,R0,#+48
   \   0000037C   B0008DE2           ADD      R0,SP,#+176
   \   00000380   ........           _BLF     ??string,??string??rA
   \   00000384   04008DE2           ADD      R0,SP,#+4
   \   00000388   01002DE9           PUSH     {R0}
   \   0000038C   00012DE9           PUSH     {R8}
   \   00000390   700194E5           LDR      R0,[R4, #+368]
   \   00000394   005095E5           LDR      R5,[R5, #+0]
   \   00000398   B8308DE2           ADD      R3,SP,#+184
   \   0000039C   0720A0E1           MOV      R2,R7
   \   000003A0   0B10A0E1           MOV      R1,R11
   \   000003A4   0FE0A0E1           MOV      LR,PC
   \   000003A8   15FF2FE1           BX       R5
   \   000003AC   08008DE5           STR      R0,[SP, #+8]
   \   000003B0   0020A0E3           MOV      R2,#+0
   \   000003B4   0110A0E3           MOV      R1,#+1
   \   000003B8   B8008DE2           ADD      R0,SP,#+184
   \   000003BC   0D0000EA           B        ??PutValue_15
    451                  break;
    452              default:
    453                  Status = PRogramObject::PutValue( ValueId, Index,NewValue,Local,&ValUnitId);
   \                     ??PutValue_3:
   \   000003C0   CC008DE2           ADD      R0,SP,#+204
   \   000003C4   ........           _BLF     ??string,??string??rA
   \   000003C8   04008DE2           ADD      R0,SP,#+4
   \   000003CC   01002DE9           PUSH     {R0}
   \   000003D0   00012DE9           PUSH     {R8}
   \   000003D4   F0109DE5           LDR      R1,[SP, #+240]
   \   000003D8   D4308DE2           ADD      R3,SP,#+212
   \   000003DC   0720A0E1           MOV      R2,R7
   \   000003E0   0400A0E1           MOV      R0,R4
   \   000003E4   ........           _BLF     ??PutValue_2,??PutValue??rA
   \   000003E8   08008DE5           STR      R0,[SP, #+8]
   \   000003EC   0020A0E3           MOV      R2,#+0
   \   000003F0   0110A0E3           MOV      R1,#+1
   \   000003F4   D4008DE2           ADD      R0,SP,#+212
   \                     ??PutValue_15:
   \   000003F8   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000003FC   08D08DE2           ADD      SP,SP,#+8
    454                  break;
    455              }
    456              if ( Status==E_NO_ERR ) {
   \                     ??PutValue_5:
   \   00000400   00009DE5           LDR      R0,[SP, #+0]
   \   00000404   000050E3           CMP      R0,#+0
   \   00000408   0400001A           BNE      ??PutValue_21
    457                  SetModifiedFlag();
   \                     ??PutValue_7:
   \   0000040C   A41094E5           LDR      R1,[R4, #+164]
   \   00000410   0400A0E1           MOV      R0,R4
   \   00000414   541091E5           LDR      R1,[R1, #+84]
   \   00000418   0FE0A0E1           MOV      LR,PC
   \   0000041C   11FF2FE1           BX       R1
    458              }
    459              if ( UnitId ) {
   \                     ??PutValue_21:
   \   00000420   14019DE5           LDR      R0,[SP, #+276]
   \   00000424   000050E3           CMP      R0,#+0
    460                  *UnitId = ValUnitId;
   \   00000428   04109D15           LDRNE    R1,[SP, #+4]
   \   0000042C   00108015           STRNE    R1,[R0, #+0]
    461              }
    462              return(Status);
   \   00000430   00009DE5           LDR      R0,[SP, #+0]
   \   00000434   ECD08DE2           ADD      SP,SP,#+236
   \   00000438                      REQUIRE ?Subroutine25
   \   00000438                      ;; // Fall through to label ?Subroutine25
    463          }
    464          

   \                                 In segment CODE, align 4, keep-with-next
    465          int PROWaterIngress::PutFloatValue( int ValueId, float NewValue)
    466          {
   \                     ??PutFloatValue:
   \   00000000   00402DE9           PUSH     {LR}
    467              int Status = E_NO_ERR;
    468              //switch ( ValueId ) {
    469              //   default:
    470              Status = PRogramObject::PutFloatValue(ValueId,NewValue);
    471              /*     break;
    472               }*/
    473              return(Status);
   \   00000004   ........           _BLF     ??PutFloatValue_1,??PutFloatValue??rA
   \   00000008                      REQUIRE ?Subroutine22
   \   00000008                      ;; // Fall through to label ?Subroutine22
    474          
    475          }
    476          

   \                                 In segment DATA_I, align 4, align-sorted
    477          ValueList PROWaterIngress::TempValueList[] =  {
   \                     ??TempValueList:
   \   00000000                      DS8 48
   \   00000030                      REQUIRE `?<Initializer for TempValueList>`
    478          	{L_WORD304      ,L_WORD237,SVT_BLANK},                      // {"Unused"    ,"",SVT_BLANK},
    479          	{L_WORD338      ,L_WORD338,SVT_TEMP},                       // {"Temp"      ,"Temp",SVT_TEMP},
    480          	{L_WORD112      ,L_WORD237,SVT_HI_TEMP_LIMIT},              // {"High Temp" ,"",SVT_HI_TEMP_LIMIT},
    481          	{L_WORD113      ,L_WORD237,SVT_LO_TEMP_LIMIT},              // {"Low Temp"  ,"",SVT_LO_TEMP_LIMIT},
    482          };

   \                                 In segment CODE, align 4, keep-with-next
    483          ValueList *PROWaterIngress::GetValueInfoTableStatic(int &Entries, int Index)
    484          {
    485              Entries = NELEMENTS(TempValueList);
   \                     ??GetValueInfoTableStatic:
   \   00000000   0410A0E3           MOV      R1,#+4
   \   00000004   001080E5           STR      R1,[R0, #+0]
    486              return(TempValueList);
   \   00000008   00009FE5           LDR      R0,??GetValueInfoTableStatic_1  ;; ??TempValueList
   \   0000000C   1EFF2FE1           BX       LR               ;; return
   \                     ??GetValueInfoTableStatic_1:
   \   00000010   ........           DC32     ??TempValueList
    487          }
    488          

   \                                 In segment CODE, align 4, keep-with-next
    489          void PROWaterIngress::Calculate(void)
    490          {
   \                     ??Calculate:
   \   00000000   F0402DE9           PUSH     {R4-R7,LR}
   \   00000004   0040A0E1           MOV      R4,R0
    491              HWFailure = false;
   \   00000008   0000A0E3           MOV      R0,#+0
   \   0000000C   3C00C4E5           STRB     R0,[R4, #+60]
    492              if ( MainWaterIngrSensor ) {
   \   00000010   641194E5           LDR      R1,[R4, #+356]
   \   00000014   0160A0E3           MOV      R6,#+1
   \   00000018   3670A0E3           MOV      R7,#+54
   \   0000001C   407F87E3           ORR      R7,R7,#0x100
   \   00000020   000051E3           CMP      R1,#+0
   \   00000024   1300000A           BEQ      ??Calculate_1
    493                  char tmpAlarmValue = (char)MainWaterIngrSensor->Calculate();
   \   00000028   0100A0E1           MOV      R0,R1
   \   0000002C   A41091E5           LDR      R1,[R1, #+164]
   \   00000030   601091E5           LDR      R1,[R1, #+96]
   \   00000034   0FE0A0E1           MOV      LR,PC
   \   00000038   11FF2FE1           BX       R1
   \   0000003C   ........           _BLF     __floatToLong,??__floatToLong??rA
    494                  if ( MainWaterIngrSensor->ResultOK ) {
   \   00000040   641194E5           LDR      R1,[R4, #+356]
   \   00000044   FF0000E2           AND      R0,R0,#0xFF
   \   00000048   0110D7E7           LDRB     R1,[R7, +R1]
   \   0000004C   000051E3           CMP      R1,#+0
   \   00000050   0800000A           BEQ      ??Calculate_1
    495                      if ( HasProtection ) {
   \   00000054   6111D4E5           LDRB     R1,[R4, #+353]
   \   00000058   000051E3           CMP      R1,#+0
   \   0000005C   0100000A           BEQ      ??Calculate_2
    496                          if ( tmpAlarmValue & 0x10 ) {
   \   00000060   100010E3           TST      R0,#0x10
   \   00000064   000000EA           B        ??Calculate_3
    497                              MainAlarmValue = true;
    498                          } else {
    499                              MainAlarmValue = false;
    500                          }
    501                      } else {
    502                          if ( tmpAlarmValue & 0x01 ) {
   \                     ??Calculate_2:
   \   00000068   010010E3           TST      R0,#0x1
    503                              MainAlarmValue = true;
   \                     ??Calculate_3:
   \   0000006C   6261C415           STRBNE   R6,[R4, #+354]
    504                          } else {
    505                              MainAlarmValue = false;
   \   00000070   0000A003           MOVEQ    R0,#+0
   \   00000074   6201C405           STRBEQ   R0,[R4, #+354]
    506                          }
    507                      }
    508                  } else {
    509                      //MainAlarmValue = false; // Should have timeout
    510                  }
    511              }
    512          
    513              if ( PreWaterIngrSensor ) {
   \                     ??Calculate_1:
   \   00000078   681194E5           LDR      R1,[R4, #+360]
   \   0000007C   000051E3           CMP      R1,#+0
   \   00000080   1300000A           BEQ      ??Calculate_4
    514                  char tmpAlarmValue = (char)PreWaterIngrSensor->Calculate();
   \   00000084   0100A0E1           MOV      R0,R1
   \   00000088   A41091E5           LDR      R1,[R1, #+164]
   \   0000008C   601091E5           LDR      R1,[R1, #+96]
   \   00000090   0FE0A0E1           MOV      LR,PC
   \   00000094   11FF2FE1           BX       R1
   \   00000098   ........           _BLF     __floatToLong,??__floatToLong??rA
    515                  if ( PreWaterIngrSensor->ResultOK ) {
   \   0000009C   681194E5           LDR      R1,[R4, #+360]
   \   000000A0   FF0000E2           AND      R0,R0,#0xFF
   \   000000A4   0110D7E7           LDRB     R1,[R7, +R1]
   \   000000A8   000051E3           CMP      R1,#+0
   \   000000AC   0800000A           BEQ      ??Calculate_4
    516                      if ( HasProtection ) {
   \   000000B0   6111D4E5           LDRB     R1,[R4, #+353]
   \   000000B4   000051E3           CMP      R1,#+0
   \   000000B8   0100000A           BEQ      ??Calculate_5
    517                          if ( tmpAlarmValue & 0x10 ) {
   \   000000BC   100010E3           TST      R0,#0x10
   \   000000C0   000000EA           B        ??Calculate_6
    518                              PreAlarmValue = true;
    519                          } else {
    520                              PreAlarmValue = false;
    521                          }
    522                      } else {
    523                          if ( tmpAlarmValue & 0x01 ) {
   \                     ??Calculate_5:
   \   000000C4   010010E3           TST      R0,#0x1
    524                              PreAlarmValue = true;
   \                     ??Calculate_6:
   \   000000C8   6361C415           STRBNE   R6,[R4, #+355]
    525                          } else {
    526                              PreAlarmValue = false;
   \   000000CC   0000A003           MOVEQ    R0,#+0
   \   000000D0   6301C405           STRBEQ   R0,[R4, #+355]
    527                          }
    528                      }
    529                  }
    530              }
    531              if ( Override ) {
   \                     ??Calculate_4:
   \   000000D4   6021D4E5           LDRB     R2,[R4, #+352]
   \   000000D8   700194E5           LDR      R0,[R4, #+368]
   \   000000DC   6C1194E5           LDR      R1,[R4, #+364]
   \   000000E0   000052E3           CMP      R2,#+0
   \   000000E4   1200000A           BEQ      ??Calculate_7
    532                  if ( MainWaterIngressPtr && PreWaterIngressPtr ) {
   \   000000E8   6321D4E5           LDRB     R2,[R4, #+355]
   \   000000EC   000051E3           CMP      R1,#+0
   \   000000F0   0900000A           BEQ      ??Calculate_8
   \   000000F4   6211D4E5           LDRB     R1,[R4, #+354]
   \   000000F8   000050E3           CMP      R0,#+0
   \   000000FC   0900000A           BEQ      ??Calculate_9
    533                      if ( !( MainAlarmValue || PreAlarmValue ) ) {
   \   00000100   000051E3           CMP      R1,#+0
   \   00000104   0E00001A           BNE      ??Calculate_10
   \                     ??Calculate_11:
   \   00000108   000052E3           CMP      R2,#+0
   \   0000010C   0C00001A           BNE      ??Calculate_10
    534                          Override = false;
   \   00000110   0000A0E3           MOV      R0,#+0
   \                     ??Calculate_12:
   \   00000114   6001C4E5           STRB     R0,[R4, #+352]
   \   00000118   090000EA           B        ??Calculate_10
    535                      }
    536                  } else if ( MainWaterIngressPtr ) {
    537                      if ( !MainAlarmValue ) {
    538                          Override = false;
    539                      }
    540                  } else if ( PreWaterIngressPtr ) {
   \                     ??Calculate_8:
   \   0000011C   000050E3           CMP      R0,#+0
   \   00000120   0700000A           BEQ      ??Calculate_10
    541                      if ( !PreAlarmValue ) {
   \   00000124   F7FFFFEA           B        ??Calculate_11
    542                          Override = false;
    543                      }
    544                  } else {
   \                     ??Calculate_9:
   \   00000128   000051E3           CMP      R1,#+0
   \   0000012C   0400001A           BNE      ??Calculate_10
   \   00000130   F7FFFFEA           B        ??Calculate_12
    545                      // Do nothing
    546                  }
    547              } else {
    548                  if ( MainWaterIngressPtr ) {
   \                     ??Calculate_7:
   \   00000134   000051E3           CMP      R1,#+0
    549                      MainWaterIngressPtr->Enable = true;
   \   00000138   E260C115           STRBNE   R6,[R1, #+226]
    550                  }
    551                  if ( PreWaterIngressPtr ) {
   \   0000013C   000050E3           CMP      R0,#+0
    552                      PreWaterIngressPtr->Enable  = true;
   \   00000140   E260C015           STRBNE   R6,[R0, #+226]
    553                  }
    554          
    555              }
    556              SendData();
   \                     ??Calculate_10:
   \   00000144   A42094E5           LDR      R2,[R4, #+164]
   \   00000148   6510A0E3           MOV      R1,#+101
   \   0000014C   402092E5           LDR      R2,[R2, #+64]
   \   00000150   0400A0E1           MOV      R0,R4
   \   00000154   0FE0A0E1           MOV      LR,PC
   \   00000158   12FF2FE1           BX       R2
    557          }
   \   0000015C                      REQUIRE ?Subroutine24
   \   0000015C                      ;; // Fall through to label ?Subroutine24
    558          
    559          

   \                                 In segment CODE, align 4, keep-with-next
    560          void PROWaterIngress::SimCalculate(void)
    561          {
   \                     ??SimCalculate:
   \   00000000   F0412DE9           PUSH     {R4-R8,LR}
   \   00000004   0060A0E1           MOV      R6,R0
    562              // Simulate a level
    563          #ifndef ANWIN
    564              IsNewData  = true;
   \   00000008   0100A0E3           MOV      R0,#+1
   \   0000000C   E000C6E5           STRB     R0,[R6, #+224]
    565              float Level = SimulatorLevel+SimulatorSign*(rand()%10)/100.0;
   \   00000010   ........           _BLF     rand,??rand??rA
   \   00000014   A87096E5           LDR      R7,[R6, #+168]
   \   00000018   0A10A0E3           MOV      R1,#+10
   \   0000001C   ........           _BLF     ??div32_a,??rA??div32_a
   \   00000020   ........           _BLF     __longToFloat,??__longToFloat??rA
   \   00000024   0710A0E1           MOV      R1,R7
   \   00000028   ........           _BLF     __fMul,??__fMul??rA
   \   0000002C   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   00000030   0020A0E3           MOV      R2,#+0
   \   00000034   4034A0E3           MOV      R3,#+1073741824
   \   00000038   593883E3           ORR      R3,R3,#0x590000
   \   0000003C   ........           _BLF     __dDiv,??__dDiv??rA
   \   00000040   0040A0E1           MOV      R4,R0
   \   00000044   5C0196E5           LDR      R0,[R6, #+348]
   \   00000048   0150A0E1           MOV      R5,R1
   \   0000004C   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   00000050   0420A0E1           MOV      R2,R4
   \   00000054   0530A0E1           MOV      R3,R5
   \   00000058   ........           _BLF     __dAdd,??__dAdd??rA
   \   0000005C   ........           _BLF     __doubleToFloat,??__doubleToFloat??rA
   \   00000060   0080A0E1           MOV      R8,R0
    566              if ( (Level > 0.0 )&&( Level < 5.0 ) ) {
   \   00000064   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   00000068   0040A0E1           MOV      R4,R0
   \   0000006C   0150A0E1           MOV      R5,R1
   \   00000070   0120A0E3           MOV      R2,#+1
   \   00000074   0030A0E3           MOV      R3,#+0
   \   00000078   ........           _BLF     __dGreaterEqual,??__dGreaterEqual??rA
   \   0000007C   000050E3           CMP      R0,#+0
   \   00000080   0800000A           BEQ      ??SimCalculate_1
   \   00000084   0400A0E1           MOV      R0,R4
   \   00000088   0510A0E1           MOV      R1,R5
   \   0000008C   0020A0E3           MOV      R2,#+0
   \   00000090   4034A0E3           MOV      R3,#+1073741824
   \   00000094   503983E3           ORR      R3,R3,#0x140000
   \   00000098   ........           _BLF     __dLess,??__dLess??rA
   \   0000009C   000050E3           CMP      R0,#+0
    567                  SimulatorLevel = Level;
   \   000000A0   5C818615           STRNE    R8,[R6, #+348]
   \   000000A4   0100001A           BNE      ??SimCalculate_2
    568              } else {
    569                  SimulatorSign = -SimulatorSign;
   \                     ??SimCalculate_1:
   \   000000A8   800427E2           EOR      R0,R7,#0x80000000
   \   000000AC   A80086E5           STR      R0,[R6, #+168]
    570              }
    571              if ( Level > 0.5 ) {
   \                     ??SimCalculate_2:
   \   000000B0   0400A0E1           MOV      R0,R4
   \   000000B4   0510A0E1           MOV      R1,R5
   \   000000B8   0120A0E3           MOV      R2,#+1
   \   000000BC   C035A0E3           MOV      R3,#+805306368
   \   000000C0   FE3683E3           ORR      R3,R3,#0xFE00000
   \   000000C4   ........           _BLF     __dGreaterEqual,??__dGreaterEqual??rA
   \   000000C8   000050E3           CMP      R0,#+0
    572                  PreAlarmValue = 1.0;
   \   000000CC   0100A013           MOVNE    R0,#+1
    573              } else {
    574                  PreAlarmValue = 0.0;
   \   000000D0   6301C6E5           STRB     R0,[R6, #+355]
    575              }
    576              if ( Level > 2.0 ) {
   \   000000D4   0400A0E1           MOV      R0,R4
   \   000000D8   0510A0E1           MOV      R1,R5
   \   000000DC   0120A0E3           MOV      R2,#+1
   \   000000E0   4034A0E3           MOV      R3,#+1073741824
   \   000000E4   ........           _BLF     __dGreaterEqual,??__dGreaterEqual??rA
   \   000000E8   000050E3           CMP      R0,#+0
    577                  MainAlarmValue = 1.0;
   \   000000EC   0100A013           MOVNE    R0,#+1
    578              } else {
    579                  MainAlarmValue = 0.0;
   \   000000F0   6201C6E5           STRB     R0,[R6, #+354]
    580              }
    581          
    582          #endif
    583          }
   \   000000F4   ........           B        ?Subroutine23
    584          

   \                                 In segment CODE, align 4, keep-with-next
    585          int PROWaterIngress::ReceiveData(U8* data)
    586          {
   \                     ??ReceiveData:
   \   00000000   F3402DE9           PUSH     {R0,R1,R4-R7,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
    587              int ErrorStatus = E_OK;
    588              ANPRO10_CommandHeading *pCH = (ANPRO10_CommandHeading*)data;
    589              switch ( pCH->CommandNo ) {
   \   0000000C   0100D5E5           LDRB     R0,[R5, #+1]
   \   00000010   0010D5E5           LDRB     R1,[R5, #+0]
   \   00000014   000481E1           ORR      R0,R1,R0, LSL #+8
   \   00000018   650050E3           CMP      R0,#+101
   \   0000001C   2400001A           BNE      ??ReceiveData_1
    590              case CMD_GENERIC_REALTIME_DATA:
    591                  {
    592                      ANPRO10_COMMAND_2530  *pData = (ANPRO10_COMMAND_2530*) data;
    593                      HWFailure      = pData->HWFailure;
   \   00000020   0800D5E5           LDRB     R0,[R5, #+8]
    594                      IsNewData      = pData->IsNewData;
    595                      Override       = pData->Override;
    596                      MainAlarmValue = pData->MainAlarmValue;
   \   00000024   0D10A0E1           MOV      R1,SP
   \   00000028   3C00C4E5           STRB     R0,[R4, #+60]
   \   0000002C   1200D5E5           LDRB     R0,[R5, #+18]
   \   00000030   E000C4E5           STRB     R0,[R4, #+224]
   \   00000034   0900D5E5           LDRB     R0,[R5, #+9]
   \   00000038   6001C4E5           STRB     R0,[R4, #+352]
   \   0000003C   0000A0E3           MOV      R0,#+0
   \                     ??ReceiveData_2:
   \   00000040   0A2085E2           ADD      R2,R5,#+10
   \   00000044   0220D0E7           LDRB     R2,[R0, +R2]
   \   00000048   0120C0E7           STRB     R2,[R0, +R1]
   \   0000004C   010080E2           ADD      R0,R0,#+1
   \   00000050   040050E3           CMP      R0,#+4
   \   00000054   F9FFFFBA           BLT      ??ReceiveData_2
   \   00000058   00109DE5           LDR      R1,[SP, #+0]
   \   0000005C   0170A0E3           MOV      R7,#+1
   \   00000060   0000A0E3           MOV      R0,#+0
   \   00000064   ........           _BLF     __fNotEqual,??__fNotEqual??rA
   \   00000068   000050E3           CMP      R0,#+0
   \   0000006C   0100A013           MOVNE    R0,#+1
   \   00000070   6201C4E5           STRB     R0,[R4, #+354]
    597                      PreAlarmValue  = pData->PreAlarmValue;
   \   00000074   0000A0E3           MOV      R0,#+0
   \   00000078   04108DE2           ADD      R1,SP,#+4
   \                     ??ReceiveData_3:
   \   0000007C   0E2085E2           ADD      R2,R5,#+14
   \   00000080   0220D0E7           LDRB     R2,[R0, +R2]
   \   00000084   0120C0E7           STRB     R2,[R0, +R1]
   \   00000088   010080E2           ADD      R0,R0,#+1
   \   0000008C   040050E3           CMP      R0,#+4
   \   00000090   F9FFFFBA           BLT      ??ReceiveData_3
   \   00000094   04109DE5           LDR      R1,[SP, #+4]
   \   00000098   0000A0E3           MOV      R0,#+0
   \   0000009C   ........           _BLF     __fNotEqual,??__fNotEqual??rA
   \   000000A0   000050E3           CMP      R0,#+0
   \   000000A4   0070A003           MOVEQ    R7,#+0
   \   000000A8   6371C4E5           STRB     R7,[R4, #+355]
    598                      ErrorStatus    = E_OK;
   \   000000AC   0000A0E3           MOV      R0,#+0
   \   000000B0   000000EA           B        ??ReceiveData_4
    599                  }
    600                  break;
    601              default:
    602                  ErrorStatus = E_UNKNOWN_COMMAND;
   \                     ??ReceiveData_1:
   \   000000B4   0100A0E3           MOV      R0,#+1
    603                  break;
    604              }
    605              return(ErrorStatus);
   \                     ??ReceiveData_4:
   \   000000B8                      REQUIRE ?Subroutine21
   \   000000B8                      ;; // Fall through to label ?Subroutine21
    606          }
    607          

   \                                 In segment CODE, align 4, keep-with-next
    608          int PROWaterIngress::SendData(U16 cmd)
    609          {
   \                     ??SendData:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   1CD04DE2           SUB      SP,SP,#+28
   \   00000008   0040A0E1           MOV      R4,R0
    610              int ErrorStatus = E_OK;
    611              switch ( cmd ) {
   \   0000000C   650051E3           CMP      R1,#+101
   \   00000010   2300001A           BNE      ??SendData_1
    612              case CMD_GENERIC_REALTIME_DATA:
    613                  {
    614                      QueueANPRO10_COMMAND_2530 Cmd;
    615                      Cmd.TxInfo.Port         = NULL;
   \   00000014   0010A0E3           MOV      R1,#+0
   \   00000018   00108DE5           STR      R1,[SP, #+0]
    616                      Cmd.TxInfo.rxAddr       = DEVICE_BROADCAST_ADDR;
   \   0000001C   FF10A0E3           MOV      R1,#+255
   \   00000020   0410CDE5           STRB     R1,[SP, #+4]
    617                      Cmd.TxInfo.rxId         = DEVICE_BROADCAST_TXU;
   \   00000024   0E10A0E3           MOV      R1,#+14
   \   00000028   0510CDE5           STRB     R1,[SP, #+5]
    618                      Cmd.Data.ObjectId       = IDNumber;
   \   0000002C   9C0094E5           LDR      R0,[R4, #+156]
    619                      Cmd.Data.ndb            = sizeof(Cmd)-sizeof(QueueANPRO10_CommandHeading);
   \   00000030   0F10A0E3           MOV      R1,#+15
   \   00000034   0A00CDE5           STRB     R0,[SP, #+10]
   \   00000038   2004A0E1           LSR      R0,R0,#+8
   \   0000003C   0B00CDE5           STRB     R0,[SP, #+11]
   \   00000040   2004A0E1           LSR      R0,R0,#+8
   \   00000044   0C00CDE5           STRB     R0,[SP, #+12]
   \   00000048   2004A0E1           LSR      R0,R0,#+8
   \   0000004C   0D00CDE5           STRB     R0,[SP, #+13]
   \   00000050   B810CDE1           STRH     R1,[SP, #+8]
    620                      Cmd.Data.CommandNo      = CMD_GENERIC_REALTIME_DATA;
   \   00000054   6510A0E3           MOV      R1,#+101
   \   00000058   B610CDE1           STRH     R1,[SP, #+6]
    621                      Cmd.Data.HWFailure      = HWFailure;
   \   0000005C   3C10D4E5           LDRB     R1,[R4, #+60]
   \   00000060   0E10CDE5           STRB     R1,[SP, #+14]
    622                      Cmd.Data.IsNewData      = IsNewData;
   \   00000064   E010D4E5           LDRB     R1,[R4, #+224]
   \   00000068   1810CDE5           STRB     R1,[SP, #+24]
    623                      Cmd.Data.Override       = Override;
   \   0000006C   6011D4E5           LDRB     R1,[R4, #+352]
   \   00000070   0F10CDE5           STRB     R1,[SP, #+15]
    624                      Cmd.Data.MainAlarmValue = MainAlarmValue;
   \   00000074   6201D4E5           LDRB     R0,[R4, #+354]
   \   00000078   ........           _BLF     __ulongToFloat,??__ulongToFloat??rA
   \   0000007C   10008DE5           STR      R0,[SP, #+16]
    625                      Cmd.Data.PreAlarmValue  = PreAlarmValue;
   \   00000080   6301D4E5           LDRB     R0,[R4, #+355]
   \   00000084   ........           _BLF     __ulongToFloat,??__ulongToFloat??rA
   \   00000088   14008DE5           STR      R0,[SP, #+20]
    626          
    627                      bool sent = ANPRO10SendNormal(&Cmd);
    628                      if ( !sent )
   \   0000008C   0D00A0E1           MOV      R0,SP
   \   00000090   ........           _BLF     ??ANPRO10SendNormal,??ANPRO10SendNormal??rA
   \   00000094   000050E3           CMP      R0,#+0
   \   00000098   0000A013           MOVNE    R0,#+0
    629                          ErrorStatus = E_QUEUE_FULL;
   \   0000009C   0300A003           MOVEQ    R0,#+3
   \   000000A0   000000EA           B        ??SendData_2
    630                      else
    631                          ErrorStatus =  E_OK;
    632                  }
    633                  break;
    634              default:
    635                  ErrorStatus =  E_UNKNOWN_COMMAND;
   \                     ??SendData_1:
   \   000000A4   0100A0E3           MOV      R0,#+1
    636                  break;
    637              }
    638              return(ErrorStatus);
   \                     ??SendData_2:
   \   000000A8   1CD08DE2           ADD      SP,SP,#+28
   \   000000AC                      REQUIRE ?Subroutine20
   \   000000AC                      ;; // Fall through to label ?Subroutine20
    639          }

   \                                 In segment CODE, align 4, keep-with-next
   \                     ?Subroutine20:
   \   00000000   3040BDE8           POP      {R4,R5,LR}
   \   00000004   1EFF2FE1           BX       LR               ;; return

   \                                 In segment DATA_ID, align 4, align-sorted
   \                     `?<Initializer for TempValueList>`:
   \   00000000   30010000ED00       DC32 304, 237, 1000, 338, 338, 1004, 112, 237, 9100, 113, 237, 9101
   \              0000E8030000
   \              520100005201
   \              0000EC030000
   \              70000000ED00
   \              00008C230000
   \              71000000ED00
   \              00008D230000

   \                                 In segment DIFUNCT, align 4, keep-with-next, root
   \   00000000                      REQUIRE ?call_ctors
   \   00000000   ........           DC32    ??__sti__routine

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "0x%0x">`:
   \   00000000   307825307800       DC8 "0x%0x"
   \   00000006   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "Water Ingress ">`:
   \   00000000   576174657220       DC8 "Water Ingress "
   \              496E67726573
   \              732000      
   \   0000000F   00                 DC8 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "WaterIngress ">`:
   \   00000000   576174657249       DC8 "WaterIngress "
   \              6E6772657373
   \              2000        
   \   0000000E   0000               DC8 0, 0
   \   00000010   3A0A556E6B6E       DC8 ":\012Unknown error started at line:"
   \              6F776E206572
   \              726F72207374
   \              617274656420
   \              6174206C696E
   \              653A00      
   \   00000031   000000             DC8 0, 0, 0
   \   00000034   3A0A54686520       DC8 ":\012The keyword "
   \              6B6579776F72
   \              642000      
   \   00000043   00                 DC8 0
   \   00000044   206973206E6F       DC8 " is not allowed here!! Line:"
   \              7420616C6C6F
   \              776564206865
   \              72652121204C
   \              696E653A00  
   \   00000061   000000             DC8 0, 0, 0

   \                                 In segment CODE, align 4, keep-with-next
   \   static __??Code32?? __intrinsic __code __interwork __atpcs void __sti__routine()
   \                     ??__sti__routine:
   \   00000000   71402DE9           PUSH     {R0,R4-R6,LR}
   \   00000004   ........           LDR      R4,??DataTable4  ;; ??ObjectSet
   \   00000008   54609FE5           LDR      R6,??__sti__routine_1  ;; ?_0
   \   0000000C   0050A0E3           MOV      R5,#+0
   \   00000010   185084E5           STR      R5,[R4, #+24]
   \   00000014   1C5084E5           STR      R5,[R4, #+28]
   \   00000018   205084E5           STR      R5,[R4, #+32]
   \   0000001C   0600A0E1           MOV      R0,R6
   \   00000020   ........           _BLF     __record_needed_destruction,??__record_needed_destruction??rA
   \   00000024   245084E5           STR      R5,[R4, #+36]
   \   00000028   285084E5           STR      R5,[R4, #+40]
   \   0000002C   2C5084E5           STR      R5,[R4, #+44]
   \   00000030   0C0086E2           ADD      R0,R6,#+12
   \   00000034   ........           _BLF     __record_needed_destruction,??__record_needed_destruction??rA
   \   00000038   0110A0E3           MOV      R1,#+1
   \   0000003C   0D00A0E1           MOV      R0,SP
   \   00000040   ........           _BLF     __data_memzero,??__data_memzero??rA
   \   00000044   0400A0E1           MOV      R0,R4
   \   00000048   ........           _BLF     ??_Clear,??_Clear??rA
   \   0000004C   0000DDE5           LDRB     R0,[SP, #+0]
   \   00000050   1400C4E5           STRB     R0,[R4, #+20]
   \   00000054   180086E2           ADD      R0,R6,#+24
   \   00000058   ........           _BLF     __record_needed_destruction,??__record_needed_destruction??rA
   \   0000005C   7140BDE8           POP      {R0,R4-R6,LR}
   \   00000060   1EFF2FE1           BX       LR               ;; return
   \                     ??__sti__routine_1:
   \   00000064   ........           DC32     ?_0

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs PROWaterIngress &PROWaterIngress::new PROWaterIngress(int, bool)
   \                     `??new PROWaterIngress`:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
   \   0000000C   5E0FA0E3           MOV      R0,#+376
   \   00000010   ........           _BLF     `??operator new`,`??operator new??rA`
   \   00000014   000050E3           CMP      R0,#+0
   \   00000018   0200000A           BEQ      `??new PROWaterIngress_1`
   \   0000001C   0520A0E1           MOV      R2,R5
   \   00000020   0410A0E1           MOV      R1,R4
   \   00000024   ........           BL       ??PROWaterIngress
   \                     `??new PROWaterIngress_1`:
   \   00000028   ........           B        ?Subroutine20

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable3:
   \   00000000   ........           DC32     ??__vtbl

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable4:
   \   00000000   ........           DC32     ??ObjectSet

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable10:
   \   00000000   ........           DC32     CrLfStr

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable11:
   \   00000000   ........           DC32     TabStr1

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable12:
   \   00000000   ........           DC32     `?<Constant "0x%0x">`

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable15:
   \   00000000   ........           DC32     ??npos

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable16:
   \   00000000   ........           DC32     Master
    640          

   Maximum stack usage in bytes:

     Function                       CSTACK
     --------                       ------
     PROWaterIngress::AddTemperature()
                                       20
     PROWaterIngress::Calculate()      20
     PROWaterIngress::FindPROStatus(AnsiString &)
                                       52
     PROWaterIngress::GetStringValue(int, int, AnsiString &)
                                        8
     PROWaterIngress::GetValue(int, int, float &, int &, int &)
                                       48
     PROWaterIngress::GetValueInfoTableStatic(int &, int)
                                        0
     PROWaterIngress::Initiate(bool)
                                        4
     PROWaterIngress::LoadConfigFromFile(TSNConfigString &)
                                      264
     PROWaterIngress::PROWaterIngress(int, bool)
                                       28
     PROWaterIngress::PutFloatValue(int, float)
                                        4
     PROWaterIngress::PutValue(int, int, AnsiString, bool, int *)
                                      280
     PROWaterIngress::ReceiveData(unsigned char *)
                                       28
     PROWaterIngress::RestoreSettings(TSNConfigString *)
                                      520
     PROWaterIngress::SaveSettings(TSNConfigString *)
                                      360
     PROWaterIngress::SendData(unsigned short)
                                       40
     PROWaterIngress::SimCalculate()
                                       24
     PROWaterIngress::WriteConfigToFile(TSNConfigString &)
                                      416
     PROWaterIngress::new PROWaterIngress(int, bool)
                                       12
     PROWaterIngress::~PROWaterIngress()
                                       16
     _Tree<_Tset_traits<AlarmBasic *, less<AlarmBasic *>, allocator<AlarmBasic *>, false>>::_Insert(bool, _Tree<_Tset_traits<AlarmBasic *, less<AlarmBasic *>, allocator<AlarmBasic *>, false>>::_Nodeptr, AlarmBasic *)
                                       24
     _Tree<_Tset_traits<AlarmBasic *, less<AlarmBasic *>, allocator<AlarmBasic *>, false>>::insert(AlarmBasic *)
                                       44
     _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::_Erase(_Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::_Nodeptr)
                                       16
     _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::_Insert(bool, _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::_Nodeptr, PRogramObjectBase *)
                                       24
     _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::_Lbound(PRogramObjectBase *) const
                                        0
     _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::_Ubound(PRogramObjectBase *) const
                                        0
     _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::clear()
                                        8
     _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::equal_range(PRogramObjectBase *)
                                       28
     _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::erase(PRogramObjectBase *)
                                       24
     _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::erase(_Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::iterator, _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::iterator)
                                       20
     _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::insert(PRogramObjectBase *)
                                       44
     _Tree<_Tset_traits<unsigned int, less<unsigned int>, allocator<unsigned int>, false>>::_Copy(_Tree<_Tset_traits<unsigned int, less<unsigned int>, allocator<unsigned int>, false>> const &)
                                       12
     _Tree<_Tset_traits<unsigned int, less<unsigned int>, allocator<unsigned int>, false>>::_Copy(_Tree<_Tset_traits<unsigned int, less<unsigned int>, allocator<unsigned int>, false>>::_Nodeptr, _Tree<_Tset_traits<unsigned int, less<unsigned int>, allocator<unsigned int>, false>>::_Nodeptr)
                                       32
     _Tree<_Tset_traits<unsigned int, less<unsigned int>, allocator<unsigned int>, false>>::_Erase(_Tree<_Tset_traits<unsigned int, less<unsigned int>, allocator<unsigned int>, false>>::_Nodeptr)
                                       16
     _Tree<_Tset_traits<unsigned int, less<unsigned int>, allocator<unsigned int>, false>>::erase(_Tree<_Tset_traits<unsigned int, less<unsigned int>, allocator<unsigned int>, false>>::iterator, _Tree<_Tset_traits<unsigned int, less<unsigned int>, allocator<unsigned int>, false>>::iterator)
                                       20
     _Tree_algobase<allocator<void>>::_Clear()
                                        0
     _Tree_algobase<allocator<void>>::_DecP(_Tree_algobase<allocator<void>>::_Genptr)
                                        4
     _Tree_algobase<allocator<void>>::_Erase(_Tree_algobase<allocator<void>>::_Genptr)
                                       32
     _Tree_algobase<allocator<void>>::_IncP(_Tree_algobase<allocator<void>>::_Genptr)
                                        0
     _Tree_algobase<allocator<void>>::_Insert(bool, _Tree_algobase<allocator<void>>::_Genptr, _Tree_algobase<allocator<void>>::_Genptr)
                                       20
     _Tree_algobase<allocator<void>>::_Lrotate(_Tree_algobase<allocator<void>>::_Genptr)
                                        0
     _Tree_algobase<allocator<void>>::_Max(_Tree_algobase<allocator<void>>::_Genptr)
                                        0
     _Tree_algobase<allocator<void>>::_Rrotate(_Tree_algobase<allocator<void>>::_Genptr)
                                        0
     _Vector_impl<AnalogInput *, allocator<AnalogInput *>>::_Insert(AnalogInput **, AnalogInput * const &)
                                       16
     _Vector_impl<AnalogInput *, allocator<AnalogInput *>>::_Make_room(AnalogInput **, unsigned int)
                                       32
     _Vector_impl<AnalogInput *, allocator<AnalogInput *>>::_Push_back0(AnalogInput *)
                                        8
     _Vector_impl<PRogramObjectBase *, allocator<PRogramObjectBase *>>::_Insert(PRogramObjectBase **, PRogramObjectBase * const &)
                                       16
     _Vector_impl<PRogramObjectBase *, allocator<PRogramObjectBase *>>::_Make_room(PRogramObjectBase **, unsigned int)
                                       32
     _Vector_impl<PRogramObjectBase *, allocator<PRogramObjectBase *>>::_Push_back0(PRogramObjectBase *)
                                        8
     _Vector_impl<PRogramObjectBase *, allocator<PRogramObjectBase *>>::_Tidy0()
                                        4
     __sti__routine()                  20
     operator+(string const &, char const *)
                                       44
     operator+(string const &, string const &)
                                       40
     set<PRogramObjectBase *>::~set()
                                        4
     set<unsigned int>::operator=(set<unsigned int> const &)
                                       12
     string::string(string const &)    12
     vector<PRogramObjectBase *>::~vector()
                                        8


   Segment part sizes:

     Function/Label                 Bytes
     --------------                 -----
     string::string(string const &)   64
     _Tree_algobase<allocator<void>>::_Max(_Tree_algobase<allocator<void>>::_Genptr)
                                      28
     _Tree_algobase<allocator<void>>::_DecP(_Tree_algobase<allocator<void>>::_Genptr)
                                      88
     _Tree_algobase<allocator<void>>::_IncP(_Tree_algobase<allocator<void>>::_Genptr)
                                      92
     _Tree_algobase<allocator<void>>::_Clear()
                                      36
     _Tree_algobase<allocator<void>>::_Rrotate(_Tree_algobase<allocator<void>>::_Genptr)
                                      84
     _Tree_algobase<allocator<void>>::_Lrotate(_Tree_algobase<allocator<void>>::_Genptr)
                                      84
     _Tree_algobase<allocator<void>>::_Erase(_Tree_algobase<allocator<void>>::_Genptr)
                                     780
     _Tree_algobase<allocator<void>>::_Insert(bool, _Tree_algobase<allocator<void>>::_Genptr, _Tree_algobase<allocator<void>>::_Genptr)
                                     356
     _Tree<_Tset_traits<AlarmBasic *, less<AlarmBasic *>, allocator<AlarmBasic *>, false>>::insert(AlarmBasic *)
                                     200
     _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::insert(PRogramObjectBase *)
                                     200
     _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::erase(_Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::iterator, _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::iterator)
                                     108
     _Tree<_Tset_traits<unsigned int, less<unsigned int>, allocator<unsigned int>, false>>::erase(_Tree<_Tset_traits<unsigned int, less<unsigned int>, allocator<unsigned int>, false>>::iterator, _Tree<_Tset_traits<unsigned int, less<unsigned int>, allocator<unsigned int>, false>>::iterator)
                                     120
     _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::erase(PRogramObjectBase *)
                                      84
     _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::clear()
                                      32
     _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::equal_range(PRogramObjectBase *)
                                      76
     _Tree<_Tset_traits<unsigned int, less<unsigned int>, allocator<unsigned int>, false>>::_Copy(_Tree<_Tset_traits<unsigned int, less<unsigned int>, allocator<unsigned int>, false>> const &)
                                     112
     _Tree<_Tset_traits<unsigned int, less<unsigned int>, allocator<unsigned int>, false>>::_Copy(_Tree<_Tset_traits<unsigned int, less<unsigned int>, allocator<unsigned int>, false>>::_Nodeptr, _Tree<_Tset_traits<unsigned int, less<unsigned int>, allocator<unsigned int>, false>>::_Nodeptr)
                                     148
     _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::_Erase(_Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::_Nodeptr)
                                      68
     _Tree<_Tset_traits<unsigned int, less<unsigned int>, allocator<unsigned int>, false>>::_Erase(_Tree<_Tset_traits<unsigned int, less<unsigned int>, allocator<unsigned int>, false>>::_Nodeptr)
                                      68
     _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::_Insert(bool, _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::_Nodeptr, PRogramObjectBase *)
                                      96
     _Tree<_Tset_traits<AlarmBasic *, less<AlarmBasic *>, allocator<AlarmBasic *>, false>>::_Insert(bool, _Tree<_Tset_traits<AlarmBasic *, less<AlarmBasic *>, allocator<AlarmBasic *>, false>>::_Nodeptr, AlarmBasic *)
                                      96
     _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::_Lbound(PRogramObjectBase *) const
                                      40
     _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::_Ubound(PRogramObjectBase *) const
                                      40
     set<PRogramObjectBase *>::~set()
                                      16
     set<unsigned int>::operator=(set<unsigned int> const &)
                                      56
     _Vector_impl<PRogramObjectBase *, allocator<PRogramObjectBase *>>::_Tidy0()
                                      36
     _Vector_impl<AnalogInput *, allocator<AnalogInput *>>::_Insert(AnalogInput **, AnalogInput * const &)
                                      72
     _Vector_impl<PRogramObjectBase *, allocator<PRogramObjectBase *>>::_Insert(PRogramObjectBase **, PRogramObjectBase * const &)
                                      72
     _Vector_impl<AnalogInput *, allocator<AnalogInput *>>::_Make_room(AnalogInput **, unsigned int)
                                     244
     _Vector_impl<PRogramObjectBase *, allocator<PRogramObjectBase *>>::_Make_room(PRogramObjectBase **, unsigned int)
                                     232
     _Vector_impl<AnalogInput *, allocator<AnalogInput *>>::_Push_back0(AnalogInput *)
                                      72
     _Vector_impl<PRogramObjectBase *, allocator<PRogramObjectBase *>>::_Push_back0(PRogramObjectBase *)
                                      72
     vector<PRogramObjectBase *>::~vector()
                                      36
     operator+(string const &, string const &)
                                      88
     operator+(string const &, char const *)
                                      92
     ?_0                              36
     PROWaterIngress::ObjectSet       48
     PROWaterIngress::PROWaterIngress(int, bool)
                                     136
     ?Subroutine21                     8
     PROWaterIngress::Initiate(bool)
                                      68
     ?Subroutine22                     8
     PROWaterIngress::~PROWaterIngress()
                                     112
     PROWaterIngress::WriteConfigToFile(TSNConfigString &)
                                     756
     ?Subroutine23                    12
     PROWaterIngress::LoadConfigFromFile(TSNConfigString &)
                                     824
     PROWaterIngress::AddTemperature()
                                     516
     ?Subroutine24                     8
     PROWaterIngress::SaveSettings(TSNConfigString *)
                                     652
     PROWaterIngress::RestoreSettings(TSNConfigString *)
                                     848
     ?Subroutine25                     8
     PROWaterIngress::FindPROStatus(AnsiString &)
                                     360
     PROWaterIngress::GetValue(int, int, float &, int &, int &)
                                     524
     PROWaterIngress::GetStringValue(int, int, AnsiString &)
                                      68
     PROWaterIngress::PutValue(int, int, AnsiString, bool, int *)
                                    1080
     PROWaterIngress::PutFloatValue(int, float)
                                       8
     PROWaterIngress::TempValueList   48
     PROWaterIngress::GetValueInfoTableStatic(int &, int)
                                      20
     PROWaterIngress::Calculate()    348
     PROWaterIngress::SimCalculate()
                                     248
     PROWaterIngress::ReceiveData(unsigned char *)
                                     184
     PROWaterIngress::SendData(unsigned short)
                                     172
     ?Subroutine20                     8
     ?<Initializer for TempValueList>
                                      48
     ?<Constant "0x%0x">               8
     ?<Constant "Water Ingress ">     16
     ?<Constant "WaterIngress ">     100
     __sti__routine()                104
     PROWaterIngress::new PROWaterIngress(int, bool)
                                      44
     ??DataTable3                      4
     ??DataTable4                      4
     ??DataTable10                     4
     ??DataTable11                     4
     ??DataTable12                     4
     ??DataTable15                     4
     ??DataTable16                     4
      Others                        1396

 
 12 548 bytes in segment CODE
    308 bytes in segment DATA_C
     48 bytes in segment DATA_I
     48 bytes in segment DATA_ID
     60 bytes in segment DATA_Z
      4 bytes in segment DIFUNCT
     24 bytes in segment INITTAB
 
 7 156 bytes of CODE  memory (+ 5 420 bytes shared)
   356 bytes of CONST memory
   108 bytes of DATA  memory

Errors: none
Warnings: none
