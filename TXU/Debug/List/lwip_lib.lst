##############################################################################
#                                                                            #
# IAR ARM ANSI C/C++ Compiler V4.42A/W32               14/Sep/2022  14:41:49 #
# Copyright 1999-2005 IAR Systems. All rights reserved.                      #
#                                                                            #
#    Cpu mode        =  interwork                                            #
#    Endian          =  little                                               #
#    Stack alignment =  4                                                    #
#    Source file     =  D:\S2Prog\TXU\lwip-1.4.1\src\app\lwip_lib.c          #
#    Command line    =  D:\S2Prog\TXU\lwip-1.4.1\src\app\lwip_lib.c --fpu    #
#                       None -D OS_LIBMODE_SP -D CPU_S3C2410 -D              #
#                       OS_RAMVECT=0 -D OS_UART=-1 -D S2TXU -D USE_LZO=1 -D  #
#                       __ARM_LIBRARY__ -D WATCHDOG=1 -D NETWORK=1 -lCN      #
#                       D:\S2Prog\TXU\Debug\List\ -o                         #
#                       D:\S2Prog\TXU\Debug\Obj\ -s9 --debug --cpu_mode arm  #
#                       --endian little --cpu ARM920T --stack_align 4        #
#                       --interwork -e --enable_multibytes --dlib_config     #
#                       "C:\Program Files (x86)\IAR Systems\Embedded         #
#                       Workbench 4.0\arm\LIB\dl4tpainl8n.h" -I              #
#                       D:\S2Prog\TXU\GUI\CORE\ -I D:\S2Prog\TXU\GUI\WM\ -I  #
#                       D:\S2Prog\TXU\GUI\WIDGET\ -I D:\S2Prog\TXU\CONFIG\   #
#                       -I D:\S2Prog\TXU\INC\ -I D:\S2Prog\TXU\..\SHARED\INC #
#                       \ -I D:\S2Prog\TXU\..\SHARED\SRC\ -I                 #
#                       D:\S2Prog\TXU\..\SHARED\LZO\minilzo.210\ -I          #
#                       D:\S2Prog\TXU\lwip-1.4.1\src\include\ -I             #
#                       D:\S2Prog\TXU\lwip-1.4.1\src\include\ipv4\ -I        #
#                       D:\S2Prog\TXU\lwip-1.4.1\src\ -I                     #
#                       D:\S2Prog\TXU\..\SHARED\Database\ -I                 #
#                       D:\S2Prog\TXU\src\ -I "C:\Program Files (x86)\IAR    #
#                       Systems\Embedded Workbench 4.0\arm\INC\"             #
#                       --inline_threshold=2                                 #
#    List file       =  D:\S2Prog\TXU\Debug\List\lwip_lib.lst                #
#    Object file     =  D:\S2Prog\TXU\Debug\Obj\lwip_lib.r79                 #
#                                                                            #
#                                                                            #
##############################################################################

D:\S2Prog\TXU\lwip-1.4.1\src\app\lwip_lib.c
      1          /*
      2           * Copyright (c) 1987 Regents of the University of California.
      3           * All rights reserved.
      4           *
      5           * Redistribution and use in source and binary forms are permitted
      6           * provided that this notice is preserved and that due credit is given
      7           * to the University of California at Berkeley. The name of the University
      8           * may not be used to endorse or promote products derived from this
      9           * software without specific written prior permission. This software
     10           * is provided ``as is'' without express or implied warranty.
     11           */
     12          
     13          /*
     14            
     15          @deftypefn Supplemental int strncasecmp (const char *@var{s1}, const char *@var{s2})
     16          
     17          A case-insensitive @code{strncmp}.
     18          
     19          @end deftypefn
     20          
     21          */
     22          #include <stddef.h>
     23          #if 0
     24          #define size_t unsigned long
     25          #endif
     26          
     27          /*
     28           * This array is designed for mapping upper and lower case letter
     29           * together for a case independent comparison.  The mappings are
     30           * based upon ascii character sequences.
     31           */

   \                                 In segment DATA_C, align 4, align-sorted
     32          static const unsigned char charmap[] = {
   \                     charmap:
   \   00000000   000102030405       DC8 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18
   \              060708090A0B
   \              0C0D0E0F1011
   \              12          
   \   00000013   131415161718       DC8 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35
   \              191A1B1C1D1E
   \              1F20212223  
   \   00000024   242526272829       DC8 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52
   \              2A2B2C2D2E2F
   \              3031323334  
   \   00000035   35363738393A       DC8 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 97, 98, 99, 100
   \              3B3C3D3E3F40
   \              61626364    
   \   00000045   65666768696A       DC8 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113
   \              6B6C6D6E6F70
   \              71          
   \   00000052   727374757677       DC8 114, 115, 116, 117, 118, 119, 120, 121, 122, 91, 92, 93, 94, 95, 96
   \              78797A5B5C5D
   \              5E5F60      
   \   00000061   616263646566       DC8 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110
   \              6768696A6B6C
   \              6D6E        
   \   0000006F   6F7071727374       DC8 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123
   \              75767778797A
   \              7B          
   \   0000007C   7C7D7E7F8081       DC8 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136
   \              828384858687
   \              88          
   \   00000089   898A8B8C8D8E       DC8 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149
   \              8F9091929394
   \              95          
   \   00000096   969798999A9B       DC8 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162
   \              9C9D9E9FA0A1
   \              A2          
   \   000000A3   A3A4A5A6A7A8       DC8 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175
   \              A9AAABACADAE
   \              AF          
   \   000000B0   B0B1B2B3B4B5       DC8 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188
   \              B6B7B8B9BABB
   \              BC          
   \   000000BD   BDBEBFC0E1E2       DC8 189, 190, 191, 192, 225, 226, 227, 228, 229, 230, 231, 232, 233
   \              E3E4E5E6E7E8
   \              E9          
   \   000000CA   EAEBECEDEEEF       DC8 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246
   \              F0F1F2F3F4F5
   \              F6          
   \   000000D7   F7F8F9FADBDC       DC8 247, 248, 249, 250, 219, 220, 221, 222, 223, 224, 225, 226, 227
   \              DDDEDFE0E1E2
   \              E3          
   \   000000E4   E4E5E6E7E8E9       DC8 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240
   \              EAEBECEDEEEF
   \              F0          
   \   000000F1   F1F2F3F4F5F6       DC8 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253
   \              F7F8F9FAFBFC
   \              FD          
   \   000000FE   FEFF               DC8 254, 255
     33          	'\000', '\001', '\002', '\003', '\004', '\005', '\006', '\007',
     34          	'\010', '\011', '\012', '\013', '\014', '\015', '\016', '\017',
     35          	'\020', '\021', '\022', '\023', '\024', '\025', '\026', '\027',
     36          	'\030', '\031', '\032', '\033', '\034', '\035', '\036', '\037',
     37          	'\040', '\041', '\042', '\043', '\044', '\045', '\046', '\047',
     38          	'\050', '\051', '\052', '\053', '\054', '\055', '\056', '\057',
     39          	'\060', '\061', '\062', '\063', '\064', '\065', '\066', '\067',
     40          	'\070', '\071', '\072', '\073', '\074', '\075', '\076', '\077',
     41          	'\100', '\141', '\142', '\143', '\144', '\145', '\146', '\147',
     42          	'\150', '\151', '\152', '\153', '\154', '\155', '\156', '\157',
     43          	'\160', '\161', '\162', '\163', '\164', '\165', '\166', '\167',
     44          	'\170', '\171', '\172', '\133', '\134', '\135', '\136', '\137',
     45          	'\140', '\141', '\142', '\143', '\144', '\145', '\146', '\147',
     46          	'\150', '\151', '\152', '\153', '\154', '\155', '\156', '\157',
     47          	'\160', '\161', '\162', '\163', '\164', '\165', '\166', '\167',
     48          	'\170', '\171', '\172', '\173', '\174', '\175', '\176', '\177',
     49          	'\200', '\201', '\202', '\203', '\204', '\205', '\206', '\207',
     50          	'\210', '\211', '\212', '\213', '\214', '\215', '\216', '\217',
     51          	'\220', '\221', '\222', '\223', '\224', '\225', '\226', '\227',
     52          	'\230', '\231', '\232', '\233', '\234', '\235', '\236', '\237',
     53          	'\240', '\241', '\242', '\243', '\244', '\245', '\246', '\247',
     54          	'\250', '\251', '\252', '\253', '\254', '\255', '\256', '\257',
     55          	'\260', '\261', '\262', '\263', '\264', '\265', '\266', '\267',
     56          	'\270', '\271', '\272', '\273', '\274', '\275', '\276', '\277',
     57          	'\300', '\341', '\342', '\343', '\344', '\345', '\346', '\347',
     58          	'\350', '\351', '\352', '\353', '\354', '\355', '\356', '\357',
     59          	'\360', '\361', '\362', '\363', '\364', '\365', '\366', '\367',
     60          	'\370', '\371', '\372', '\333', '\334', '\335', '\336', '\337',
     61          	'\340', '\341', '\342', '\343', '\344', '\345', '\346', '\347',
     62          	'\350', '\351', '\352', '\353', '\354', '\355', '\356', '\357',
     63          	'\360', '\361', '\362', '\363', '\364', '\365', '\366', '\367',
     64          	'\370', '\371', '\372', '\373', '\374', '\375', '\376', '\377',
     65          };
     66          

   \                                 In segment CODE, align 4, keep-with-next
     67          int
     68          strncasecmp(const char *s1, const char* s2, register size_t n)
     69          {
   \                     strncasecmp:
   \   00000000   70002DE9           PUSH     {R4-R6}
   \   00000004   000000EA           B        ??strncasecmp_0
     70            register unsigned char u1, u2;
     71          
     72            for (; n != 0; --n)
   \                     ??strncasecmp_1:
   \   00000008   012042E2           SUB      R2,R2,#+1
   \                     ??strncasecmp_0:
   \   0000000C   000052E3           CMP      R2,#+0
   \   00000010   0B00000A           BEQ      ??strncasecmp_2
     73            {
     74              u1 = (unsigned char) *s1++;
   \   00000014   ........           LDRB     R3,[R0], #+1
     75              u2 = (unsigned char) *s2++;
   \   00000018   ........           LDRB     R12,[R1], #+1
     76              if (charmap[u1] != charmap[u2])
   \   0000001C   2C409FE5           LDR      R4,??strncasecmp_3  ;; charmap
   \   00000020   04C08CE0           ADD      R12,R12,R4
   \   00000024   0060DCE5           LDRB     R6,[R12, #+0]
   \   00000028   044083E0           ADD      R4,R3,R4
   \   0000002C   0050D4E5           LDRB     R5,[R4, #+0]
   \   00000030   060055E1           CMP      R5,R6
     77              {
     78                return charmap[u1] - charmap[u2];
   \   00000034   06004510           SUBNE    R0,R5,R6
   \   00000038   0200001A           BNE      ??strncasecmp_4
     79              }
     80              
     81              if (u1 == '\0')
   \   0000003C   000053E3           CMP      R3,#+0
   \   00000040   F0FFFF1A           BNE      ??strncasecmp_1
     82              {
     83                return 0;
   \                     ??strncasecmp_2:
   \   00000044   0000A0E3           MOV      R0,#+0
   \                     ??strncasecmp_4:
   \   00000048   7000BDE8           POP      {R4-R6}
   \   0000004C   1EFF2FE1           BX       LR               ;; return
   \                     ??strncasecmp_3:
   \   00000050   ........           DC32     charmap
     84              }
     85            }
     86            return 0;
     87          }

   Maximum stack usage in bytes:

     Function    CSTACK
     --------    ------
     strncasecmp    12


   Segment part sizes:

     Function/Label Bytes
     -------------- -----
     charmap         256
     strncasecmp      84
      Others           4

 
  88 bytes in segment CODE
 256 bytes in segment DATA_C
 
  84 bytes of CODE  memory (+ 4 bytes shared)
 256 bytes of CONST memory

Errors: none
Warnings: none
