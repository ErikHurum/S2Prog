##############################################################################
#                                                                            #
# IAR ARM ANSI C/C++ Compiler V4.42A/W32               14/Sep/2022  15:13:23 #
# Copyright 1999-2005 IAR Systems. All rights reserved.                      #
#                                                                            #
#    Cpu mode        =  interwork                                            #
#    Endian          =  little                                               #
#    Stack alignment =  4                                                    #
#    Source file     =  D:\S2Prog\Shared\Src\Anpro3object.cpp                #
#    Command line    =  D:\S2Prog\Shared\Src\Anpro3object.cpp --fpu None -D  #
#                       OS_LIBMODE_SP -D CPU_S3C2410 -D OS_RAMVECT=0 -D      #
#                       OS_UART=-1 -D S2TXU -D USE_LZO=1 -D __ARM_LIBRARY__  #
#                       -D WATCHDOG=1 -D NETWORK=1 -lCN                      #
#                       D:\S2Prog\TXU\Debug\List\ -o                         #
#                       D:\S2Prog\TXU\Debug\Obj\ -z9 --debug --cpu_mode arm  #
#                       --endian little --cpu ARM920T --stack_align 4        #
#                       --interwork -e --enable_multibytes --eec++           #
#                       --dlib_config "C:\Program Files (x86)\IAR            #
#                       Systems\Embedded Workbench                           #
#                       4.0\arm\LIB\dl4tpainl8n.h" -I                        #
#                       D:\S2Prog\TXU\GUI\CORE\ -I D:\S2Prog\TXU\GUI\WM\ -I  #
#                       D:\S2Prog\TXU\GUI\WIDGET\ -I D:\S2Prog\TXU\CONFIG\   #
#                       -I D:\S2Prog\TXU\INC\ -I D:\S2Prog\TXU\..\SHARED\INC #
#                       \ -I D:\S2Prog\TXU\..\SHARED\SRC\ -I                 #
#                       D:\S2Prog\TXU\..\SHARED\LZO\minilzo.210\ -I          #
#                       D:\S2Prog\TXU\lwip-1.4.1\src\include\ -I             #
#                       D:\S2Prog\TXU\lwip-1.4.1\src\include\ipv4\ -I        #
#                       D:\S2Prog\TXU\lwip-1.4.1\src\ -I                     #
#                       D:\S2Prog\TXU\..\SHARED\Database\ -I                 #
#                       D:\S2Prog\TXU\src\ -I "C:\Program Files (x86)\IAR    #
#                       Systems\Embedded Workbench 4.0\arm\INC\"             #
#                       --inline_threshold=2                                 #
#    List file       =  D:\S2Prog\TXU\Debug\List\Anpro3object.lst            #
#    Object file     =  D:\S2Prog\TXU\Debug\Obj\Anpro3object.r79             #
#                                                                            #
#                                                                            #
##############################################################################

D:\S2Prog\Shared\Src\Anpro3object.cpp
      1          #include "TSNIncludes.h"

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs string::string(string const &)
   \                     ??string:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
   \   0000000C   0020A0E3           MOV      R2,#+0
   \   00000010   0010A0E3           MOV      R1,#+0
   \   00000014   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000018   1C009FE5           LDR      R0,??string_1    ;; ??npos
   \   0000001C   0020A0E3           MOV      R2,#+0
   \   00000020   003090E5           LDR      R3,[R0, #+0]
   \   00000024   0510A0E1           MOV      R1,R5
   \   00000028   0400A0E1           MOV      R0,R4
   \   0000002C   ........           _BLF     ??assign,??assign??rA
   \   00000030   0400A0E1           MOV      R0,R4
   \   00000034   3040BDE8           POP      {R4,R5,LR}
   \   00000038   1EFF2FE1           BX       LR               ;; return
   \                     ??string_1:
   \   0000003C   ........           DC32     ??npos

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs _Tree_algobase<allocator<void>>::_Genptr _Tree_algobase<allocator<void>>::_DecP(_Tree_algobase<allocator<void>>::_Genptr)
   \                     ??_DecP:
   \   00000000   0D10D0E5           LDRB     R1,[R0, #+13]
   \   00000004   000051E3           CMP      R1,#+0
   \   00000008   08009015           LDRNE    R0,[R0, #+8]
   \   0000000C   1EFF2F11           BXNE     LR
   \   00000010   001090E5           LDR      R1,[R0, #+0]
   \   00000014   0D20D1E5           LDRB     R2,[R1, #+13]
   \   00000018   000052E3           CMP      R2,#+0
   \   0000001C   0700001A           BNE      ??_DecP_1
   \   00000020   000000EA           B        ??_DecP_2
   \                     ??_DecP_3:
   \   00000024   0010A0E1           MOV      R1,R0
   \                     ??_DecP_2:
   \   00000028   080091E5           LDR      R0,[R1, #+8]
   \   0000002C   0D20D0E5           LDRB     R2,[R0, #+13]
   \   00000030   000052E3           CMP      R2,#+0
   \   00000034   FAFFFF0A           BEQ      ??_DecP_3
   \   00000038   0100A0E1           MOV      R0,R1
   \   0000003C   1EFF2FE1           BX       LR
   \                     ??_DecP_1:
   \   00000040   041090E5           LDR      R1,[R0, #+4]
   \   00000044   0D20D1E5           LDRB     R2,[R1, #+13]
   \   00000048   000052E3           CMP      R2,#+0
   \   0000004C   1EFF2F11           BXNE     LR
   \   00000050   002091E5           LDR      R2,[R1, #+0]
   \   00000054   020050E1           CMP      R0,R2
   \   00000058   0100A0E1           MOV      R0,R1
   \   0000005C   F7FFFF0A           BEQ      ??_DecP_1
   \   00000060   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs _Tree_algobase<allocator<void>>::_Genptr _Tree_algobase<allocator<void>>::_IncP(_Tree_algobase<allocator<void>>::_Genptr)
   \                     ??_IncP:
   \   00000000   0D10D0E5           LDRB     R1,[R0, #+13]
   \   00000004   000051E3           CMP      R1,#+0
   \   00000008   1EFF2F11           BXNE     LR
   \   0000000C   081090E5           LDR      R1,[R0, #+8]
   \   00000010   0D20D1E5           LDRB     R2,[R1, #+13]
   \   00000014   000052E3           CMP      R2,#+0
   \   00000018   0700001A           BNE      ??_IncP_1
   \   0000001C   000000EA           B        ??_IncP_2
   \                     ??_IncP_3:
   \   00000020   0010A0E1           MOV      R1,R0
   \                     ??_IncP_2:
   \   00000024   000091E5           LDR      R0,[R1, #+0]
   \   00000028   0D20D0E5           LDRB     R2,[R0, #+13]
   \   0000002C   000052E3           CMP      R2,#+0
   \   00000030   FAFFFF0A           BEQ      ??_IncP_3
   \   00000034   060000EA           B        ??_IncP_4
   \                     ??_IncP_5:
   \   00000038   0100A0E1           MOV      R0,R1
   \                     ??_IncP_1:
   \   0000003C   041090E5           LDR      R1,[R0, #+4]
   \   00000040   0D20D1E5           LDRB     R2,[R1, #+13]
   \   00000044   000052E3           CMP      R2,#+0
   \   00000048   08209105           LDREQ    R2,[R1, #+8]
   \   0000004C   02005001           CMPEQ    R0,R2
   \   00000050   F8FFFF0A           BEQ      ??_IncP_5
   \                     ??_IncP_4:
   \   00000054   0100A0E1           MOV      R0,R1
   \   00000058   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void _Tree_algobase<allocator<void>>::_Clear()
   \                     ??_Clear:
   \   00000000   040080E5           STR      R0,[R0, #+4]
   \   00000004   000080E5           STR      R0,[R0, #+0]
   \   00000008   080080E5           STR      R0,[R0, #+8]
   \   0000000C   0110A0E3           MOV      R1,#+1
   \   00000010   0D10C0E5           STRB     R1,[R0, #+13]
   \   00000014   0C10C0E5           STRB     R1,[R0, #+12]
   \   00000018   0010A0E3           MOV      R1,#+0
   \   0000001C   101080E5           STR      R1,[R0, #+16]
   \   00000020   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void _Tree_algobase<allocator<void>>::_Rrotate(_Tree_algobase<allocator<void>>::_Genptr)
   \                     ??_Rrotate:
   \   00000000   002091E5           LDR      R2,[R1, #+0]
   \   00000004   083092E5           LDR      R3,[R2, #+8]
   \   00000008   003081E5           STR      R3,[R1, #+0]
   \   0000000C   083092E5           LDR      R3,[R2, #+8]
   \   00000010   0DC0D3E5           LDRB     R12,[R3, #+13]
   \   00000014   00005CE3           CMP      R12,#+0
   \   00000018   04108305           STREQ    R1,[R3, #+4]
   \   0000001C   043091E5           LDR      R3,[R1, #+4]
   \   00000020   043082E5           STR      R3,[R2, #+4]
   \   00000024   043090E5           LDR      R3,[R0, #+4]
   \   00000028   030051E1           CMP      R1,R3
   \   0000002C   04208005           STREQ    R2,[R0, #+4]
   \   00000030   0400000A           BEQ      ??_Rrotate_1
   \   00000034   040091E5           LDR      R0,[R1, #+4]
   \   00000038   083090E5           LDR      R3,[R0, #+8]
   \   0000003C   030051E1           CMP      R1,R3
   \   00000040   08208005           STREQ    R2,[R0, #+8]
   \   00000044   00208015           STRNE    R2,[R0, #+0]
   \                     ??_Rrotate_1:
   \   00000048   081082E5           STR      R1,[R2, #+8]
   \   0000004C   042081E5           STR      R2,[R1, #+4]
   \   00000050   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void _Tree_algobase<allocator<void>>::_Lrotate(_Tree_algobase<allocator<void>>::_Genptr)
   \                     ??_Lrotate:
   \   00000000   082091E5           LDR      R2,[R1, #+8]
   \   00000004   003092E5           LDR      R3,[R2, #+0]
   \   00000008   083081E5           STR      R3,[R1, #+8]
   \   0000000C   003092E5           LDR      R3,[R2, #+0]
   \   00000010   0DC0D3E5           LDRB     R12,[R3, #+13]
   \   00000014   00005CE3           CMP      R12,#+0
   \   00000018   04108305           STREQ    R1,[R3, #+4]
   \   0000001C   043091E5           LDR      R3,[R1, #+4]
   \   00000020   043082E5           STR      R3,[R2, #+4]
   \   00000024   043090E5           LDR      R3,[R0, #+4]
   \   00000028   030051E1           CMP      R1,R3
   \   0000002C   04208005           STREQ    R2,[R0, #+4]
   \   00000030   0400000A           BEQ      ??_Lrotate_1
   \   00000034   040091E5           LDR      R0,[R1, #+4]
   \   00000038   003090E5           LDR      R3,[R0, #+0]
   \   0000003C   030051E1           CMP      R1,R3
   \   00000040   00208005           STREQ    R2,[R0, #+0]
   \   00000044   08208015           STRNE    R2,[R0, #+8]
   \                     ??_Lrotate_1:
   \   00000048   001082E5           STR      R1,[R2, #+0]
   \   0000004C   042081E5           STR      R2,[R1, #+4]
   \   00000050   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void _Tree_algobase<allocator<void>>::_Insert(bool, _Tree_algobase<allocator<void>>::_Genptr, _Tree_algobase<allocator<void>>::_Genptr)
   \                     ??_Insert:
   \   00000000   F0402DE9           PUSH     {R4-R7,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   100094E5           LDR      R0,[R4, #+16]
   \   0000000C   0350A0E1           MOV      R5,R3
   \   00000010   010080E2           ADD      R0,R0,#+1
   \   00000014   100084E5           STR      R0,[R4, #+16]
   \   00000018   040052E1           CMP      R2,R4
   \   0000001C   0300001A           BNE      ??_Insert_7
   \   00000020   045084E5           STR      R5,[R4, #+4]
   \   00000024   005084E5           STR      R5,[R4, #+0]
   \                     ??_Insert_8:
   \   00000028   085084E5           STR      R5,[R4, #+8]
   \   0000002C   130000EA           B        ??_Insert_9
   \                     ??_Insert_7:
   \   00000030   000051E3           CMP      R1,#+0
   \   00000034   0500000A           BEQ      ??_Insert_10
   \   00000038   005082E5           STR      R5,[R2, #+0]
   \   0000003C   000094E5           LDR      R0,[R4, #+0]
   \   00000040   000052E1           CMP      R2,R0
   \   00000044   0D00001A           BNE      ??_Insert_9
   \   00000048   005084E5           STR      R5,[R4, #+0]
   \   0000004C   0B0000EA           B        ??_Insert_9
   \                     ??_Insert_10:
   \   00000050   085082E5           STR      R5,[R2, #+8]
   \   00000054   080094E5           LDR      R0,[R4, #+8]
   \   00000058   000052E1           CMP      R2,R0
   \   0000005C   0700001A           BNE      ??_Insert_9
   \   00000060   F0FFFFEA           B        ??_Insert_8
   \                     ??_Insert_11:
   \   00000064   0C70C0E5           STRB     R7,[R0, #+12]
   \   00000068   0C70C2E5           STRB     R7,[R2, #+12]
   \   0000006C   040095E5           LDR      R0,[R5, #+4]
   \   00000070   040090E5           LDR      R0,[R0, #+4]
   \   00000074   0C60C0E5           STRB     R6,[R0, #+12]
   \   00000078   040095E5           LDR      R0,[R5, #+4]
   \   0000007C   045090E5           LDR      R5,[R0, #+4]
   \                     ??_Insert_9:
   \   00000080   0170A0E3           MOV      R7,#+1
   \   00000084   040095E5           LDR      R0,[R5, #+4]
   \   00000088   0C10D0E5           LDRB     R1,[R0, #+12]
   \   0000008C   000051E3           CMP      R1,#+0
   \   00000090   2F00001A           BNE      ??_Insert_12
   \   00000094   041090E5           LDR      R1,[R0, #+4]
   \   00000098   0060A0E3           MOV      R6,#+0
   \   0000009C   001091E5           LDR      R1,[R1, #+0]
   \   000000A0   010050E1           CMP      R0,R1
   \   000000A4   041090E5           LDR      R1,[R0, #+4]
   \   000000A8   1400001A           BNE      ??_Insert_13
   \   000000AC   082091E5           LDR      R2,[R1, #+8]
   \   000000B0   0C10D2E5           LDRB     R1,[R2, #+12]
   \   000000B4   000051E3           CMP      R1,#+0
   \   000000B8   E9FFFF0A           BEQ      ??_Insert_11
   \   000000BC   081090E5           LDR      R1,[R0, #+8]
   \   000000C0   010055E1           CMP      R5,R1
   \   000000C4   0300001A           BNE      ??_Insert_14
   \   000000C8   0050A0E1           MOV      R5,R0
   \   000000CC   0510A0E1           MOV      R1,R5
   \   000000D0   0400A0E1           MOV      R0,R4
   \   000000D4   ........           _BLF     ??_Lrotate,??_Lrotate??rA
   \                     ??_Insert_14:
   \   000000D8   040095E5           LDR      R0,[R5, #+4]
   \   000000DC   0C70C0E5           STRB     R7,[R0, #+12]
   \   000000E0   040095E5           LDR      R0,[R5, #+4]
   \   000000E4   040090E5           LDR      R0,[R0, #+4]
   \   000000E8   0C60C0E5           STRB     R6,[R0, #+12]
   \   000000EC   040095E5           LDR      R0,[R5, #+4]
   \   000000F0   041090E5           LDR      R1,[R0, #+4]
   \   000000F4   0400A0E1           MOV      R0,R4
   \   000000F8   ........           _BLF     ??_Rrotate,??_Rrotate??rA
   \   000000FC   DFFFFFEA           B        ??_Insert_9
   \                     ??_Insert_13:
   \   00000100   002091E5           LDR      R2,[R1, #+0]
   \   00000104   0C10D2E5           LDRB     R1,[R2, #+12]
   \   00000108   000051E3           CMP      R1,#+0
   \   0000010C   D4FFFF0A           BEQ      ??_Insert_11
   \   00000110   001090E5           LDR      R1,[R0, #+0]
   \   00000114   010055E1           CMP      R5,R1
   \   00000118   0300001A           BNE      ??_Insert_15
   \   0000011C   0050A0E1           MOV      R5,R0
   \   00000120   0510A0E1           MOV      R1,R5
   \   00000124   0400A0E1           MOV      R0,R4
   \   00000128   ........           _BLF     ??_Rrotate,??_Rrotate??rA
   \                     ??_Insert_15:
   \   0000012C   040095E5           LDR      R0,[R5, #+4]
   \   00000130   0C70C0E5           STRB     R7,[R0, #+12]
   \   00000134   040095E5           LDR      R0,[R5, #+4]
   \   00000138   040090E5           LDR      R0,[R0, #+4]
   \   0000013C   0C60C0E5           STRB     R6,[R0, #+12]
   \   00000140   040095E5           LDR      R0,[R5, #+4]
   \   00000144   041090E5           LDR      R1,[R0, #+4]
   \   00000148   0400A0E1           MOV      R0,R4
   \   0000014C   ........           _BLF     ??_Lrotate,??_Lrotate??rA
   \   00000150   CAFFFFEA           B        ??_Insert_9
   \                     ??_Insert_12:
   \   00000154   040094E5           LDR      R0,[R4, #+4]
   \   00000158   0C70C0E5           STRB     R7,[R0, #+12]
   \   0000015C   F040BDE8           POP      {R4-R7,LR}
   \   00000160   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::_Pairib _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::insert(PRogramObjectBase *)
   \                     ??insert:
   \   00000000   F34C2DE9           PUSH     {R0,R1,R4-R7,R10,R11,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
   \   0000000C   040095E5           LDR      R0,[R5, #+4]
   \   00000010   0260A0E1           MOV      R6,R2
   \   00000014   05B0A0E1           MOV      R11,R5
   \   00000018   0170A0E3           MOV      R7,#+1
   \                     ??insert_3:
   \   0000001C   0D10D0E5           LDRB     R1,[R0, #+13]
   \   00000020   000051E3           CMP      R1,#+0
   \   00000024   0700001A           BNE      ??insert_4
   \   00000028   101090E5           LDR      R1,[R0, #+16]
   \   0000002C   00B0A0E1           MOV      R11,R0
   \   00000030   010056E1           CMP      R6,R1
   \   00000034   00009035           LDRCC    R0,[R0, #+0]
   \   00000038   0170A033           MOVCC    R7,#+1
   \   0000003C   08009025           LDRCS    R0,[R0, #+8]
   \   00000040   0070A023           MOVCS    R7,#+0
   \   00000044   F4FFFFEA           B        ??insert_3
   \                     ??insert_4:
   \   00000048   0B00A0E1           MOV      R0,R11
   \   0000004C   01A0A0E3           MOV      R10,#+1
   \   00000050   000057E3           CMP      R7,#+0
   \   00000054   0B00000A           BEQ      ??insert_5
   \   00000058   001095E5           LDR      R1,[R5, #+0]
   \   0000005C   010050E1           CMP      R0,R1
   \   00000060   0700001A           BNE      ??insert_6
   \   00000064   0630A0E1           MOV      R3,R6
   \   00000068   0B20A0E1           MOV      R2,R11
   \   0000006C   0110A0E3           MOV      R1,#+1
   \                     ??insert_7:
   \   00000070   0500A0E1           MOV      R0,R5
   \   00000074   ........           _BLF     ??_Insert_2,??_Insert??rA
   \   00000078   00008DE5           STR      R0,[SP, #+0]
   \   0000007C   04A0CDE5           STRB     R10,[SP, #+4]
   \   00000080   0A0000EA           B        ??insert_8
   \                     ??insert_6:
   \   00000084   ........           _BLF     ??_DecP,??_DecP??rA
   \                     ??insert_5:
   \   00000088   101090E5           LDR      R1,[R0, #+16]
   \   0000008C   060051E1           CMP      R1,R6
   \   00000090   0300002A           BCS      ??insert_9
   \   00000094   0630A0E1           MOV      R3,R6
   \   00000098   0B20A0E1           MOV      R2,R11
   \   0000009C   0710A0E1           MOV      R1,R7
   \   000000A0   F2FFFFEA           B        ??insert_7
   \                     ??insert_9:
   \   000000A4   00008DE5           STR      R0,[SP, #+0]
   \   000000A8   0010A0E3           MOV      R1,#+0
   \   000000AC   0410CDE5           STRB     R1,[SP, #+4]
   \                     ??insert_8:
   \   000000B0   0D00A0E1           MOV      R0,SP
   \   000000B4   030090E8           LDM      R0,{R0,R1}
   \   000000B8   030084E8           STM      R4,{R0,R1}
   \   000000BC   0400A0E1           MOV      R0,R4
   \   000000C0   F64CBDE8           POP      {R1,R2,R4-R7,R10,R11,LR}
   \   000000C4   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs _Tree<_Tset_traits<AlarmBasic *, less<AlarmBasic *>, allocator<AlarmBasic *>, false>>::_Pairib _Tree<_Tset_traits<AlarmBasic *, less<AlarmBasic *>, allocator<AlarmBasic *>, false>>::insert(AlarmBasic *)
   \                     ??insert_1:
   \   00000000   F34C2DE9           PUSH     {R0,R1,R4-R7,R10,R11,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
   \   0000000C   040095E5           LDR      R0,[R5, #+4]
   \   00000010   0260A0E1           MOV      R6,R2
   \   00000014   05B0A0E1           MOV      R11,R5
   \   00000018   0170A0E3           MOV      R7,#+1
   \                     ??insert_10:
   \   0000001C   0D10D0E5           LDRB     R1,[R0, #+13]
   \   00000020   000051E3           CMP      R1,#+0
   \   00000024   0700001A           BNE      ??insert_11
   \   00000028   101090E5           LDR      R1,[R0, #+16]
   \   0000002C   00B0A0E1           MOV      R11,R0
   \   00000030   010056E1           CMP      R6,R1
   \   00000034   00009035           LDRCC    R0,[R0, #+0]
   \   00000038   0170A033           MOVCC    R7,#+1
   \   0000003C   08009025           LDRCS    R0,[R0, #+8]
   \   00000040   0070A023           MOVCS    R7,#+0
   \   00000044   F4FFFFEA           B        ??insert_10
   \                     ??insert_11:
   \   00000048   0B00A0E1           MOV      R0,R11
   \   0000004C   01A0A0E3           MOV      R10,#+1
   \   00000050   000057E3           CMP      R7,#+0
   \   00000054   0B00000A           BEQ      ??insert_12
   \   00000058   001095E5           LDR      R1,[R5, #+0]
   \   0000005C   010050E1           CMP      R0,R1
   \   00000060   0700001A           BNE      ??insert_13
   \   00000064   0630A0E1           MOV      R3,R6
   \   00000068   0B20A0E1           MOV      R2,R11
   \   0000006C   0110A0E3           MOV      R1,#+1
   \                     ??insert_14:
   \   00000070   0500A0E1           MOV      R0,R5
   \   00000074   ........           _BLF     ??_Insert_1,??_Insert??rA_1
   \   00000078   00008DE5           STR      R0,[SP, #+0]
   \   0000007C   04A0CDE5           STRB     R10,[SP, #+4]
   \   00000080   0A0000EA           B        ??insert_15
   \                     ??insert_13:
   \   00000084   ........           _BLF     ??_DecP,??_DecP??rA
   \                     ??insert_12:
   \   00000088   101090E5           LDR      R1,[R0, #+16]
   \   0000008C   060051E1           CMP      R1,R6
   \   00000090   0300002A           BCS      ??insert_16
   \   00000094   0630A0E1           MOV      R3,R6
   \   00000098   0B20A0E1           MOV      R2,R11
   \   0000009C   0710A0E1           MOV      R1,R7
   \   000000A0   F2FFFFEA           B        ??insert_14
   \                     ??insert_16:
   \   000000A4   00008DE5           STR      R0,[SP, #+0]
   \   000000A8   0010A0E3           MOV      R1,#+0
   \   000000AC   0410CDE5           STRB     R1,[SP, #+4]
   \                     ??insert_15:
   \   000000B0   0D00A0E1           MOV      R0,SP
   \   000000B4   030090E8           LDM      R0,{R0,R1}
   \   000000B8   030084E8           STM      R4,{R0,R1}
   \   000000BC   0400A0E1           MOV      R0,R4
   \   000000C0   F64CBDE8           POP      {R1,R2,R4-R7,R10,R11,LR}
   \   000000C4   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs _Tree<_Tset_traits<PRogramObject *, less<PRogramObject *>, allocator<PRogramObject *>, false>>::_Pairib _Tree<_Tset_traits<PRogramObject *, less<PRogramObject *>, allocator<PRogramObject *>, false>>::insert(PRogramObject *)
   \                     ??insert_2:
   \   00000000   F34C2DE9           PUSH     {R0,R1,R4-R7,R10,R11,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
   \   0000000C   040095E5           LDR      R0,[R5, #+4]
   \   00000010   0260A0E1           MOV      R6,R2
   \   00000014   05B0A0E1           MOV      R11,R5
   \   00000018   0170A0E3           MOV      R7,#+1
   \                     ??insert_17:
   \   0000001C   0D10D0E5           LDRB     R1,[R0, #+13]
   \   00000020   000051E3           CMP      R1,#+0
   \   00000024   0700001A           BNE      ??insert_18
   \   00000028   101090E5           LDR      R1,[R0, #+16]
   \   0000002C   00B0A0E1           MOV      R11,R0
   \   00000030   010056E1           CMP      R6,R1
   \   00000034   00009035           LDRCC    R0,[R0, #+0]
   \   00000038   0170A033           MOVCC    R7,#+1
   \   0000003C   08009025           LDRCS    R0,[R0, #+8]
   \   00000040   0070A023           MOVCS    R7,#+0
   \   00000044   F4FFFFEA           B        ??insert_17
   \                     ??insert_18:
   \   00000048   0B00A0E1           MOV      R0,R11
   \   0000004C   01A0A0E3           MOV      R10,#+1
   \   00000050   000057E3           CMP      R7,#+0
   \   00000054   0B00000A           BEQ      ??insert_19
   \   00000058   001095E5           LDR      R1,[R5, #+0]
   \   0000005C   010050E1           CMP      R0,R1
   \   00000060   0700001A           BNE      ??insert_20
   \   00000064   0630A0E1           MOV      R3,R6
   \   00000068   0B20A0E1           MOV      R2,R11
   \   0000006C   0110A0E3           MOV      R1,#+1
   \                     ??insert_21:
   \   00000070   0500A0E1           MOV      R0,R5
   \   00000074   ........           _BLF     ??_Insert_3,??_Insert??rA_2
   \   00000078   00008DE5           STR      R0,[SP, #+0]
   \   0000007C   04A0CDE5           STRB     R10,[SP, #+4]
   \   00000080   0A0000EA           B        ??insert_22
   \                     ??insert_20:
   \   00000084   ........           _BLF     ??_DecP,??_DecP??rA
   \                     ??insert_19:
   \   00000088   101090E5           LDR      R1,[R0, #+16]
   \   0000008C   060051E1           CMP      R1,R6
   \   00000090   0300002A           BCS      ??insert_23
   \   00000094   0630A0E1           MOV      R3,R6
   \   00000098   0B20A0E1           MOV      R2,R11
   \   0000009C   0710A0E1           MOV      R1,R7
   \   000000A0   F2FFFFEA           B        ??insert_21
   \                     ??insert_23:
   \   000000A4   00008DE5           STR      R0,[SP, #+0]
   \   000000A8   0010A0E3           MOV      R1,#+0
   \   000000AC   0410CDE5           STRB     R1,[SP, #+4]
   \                     ??insert_22:
   \   000000B0   0D00A0E1           MOV      R0,SP
   \   000000B4   030090E8           LDM      R0,{R0,R1}
   \   000000B8   030084E8           STM      R4,{R0,R1}
   \   000000BC   0400A0E1           MOV      R0,R4
   \   000000C0   F64CBDE8           POP      {R1,R2,R4-R7,R10,R11,LR}
   \   000000C4   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void _Tree<_Tset_traits<PRogramObject *, less<PRogramObject *>, allocator<PRogramObject *>, false>>::clear()
   \                     ??clear:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   041094E5           LDR      R1,[R4, #+4]
   \   0000000C   ........           _BLF     ??_Erase_2,??_Erase??rA
   \   00000010   0400A0E1           MOV      R0,R4
   \   00000014   ........           _BLF     ??_Clear,??_Clear??rA
   \   00000018   1040BDE8           POP      {R4,LR}
   \   0000001C   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs _Tree<_Tset_traits<AlarmBasic *, less<AlarmBasic *>, allocator<AlarmBasic *>, false>>::iterator _Tree<_Tset_traits<AlarmBasic *, less<AlarmBasic *>, allocator<AlarmBasic *>, false>>::find(AlarmBasic *)
   \                     ??find:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
   \   0000000C   ........           _BLF     ??_Lbound,??_Lbound??rA
   \   00000010   040050E1           CMP      R0,R4
   \   00000014   0300000A           BEQ      ??find_1
   \   00000018   101090E5           LDR      R1,[R0, #+16]
   \   0000001C   010055E1           CMP      R5,R1
   \   00000020   0040A021           MOVCS    R4,R0
   \   00000024   0400A0E1           MOV      R0,R4
   \                     ??find_1:
   \   00000028   3040BDE8           POP      {R4,R5,LR}
   \   0000002C   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void _Tree<_Tset_traits<AlarmBasic *, less<AlarmBasic *>, allocator<AlarmBasic *>, false>>::_Copy(_Tree<_Tset_traits<AlarmBasic *, less<AlarmBasic *>, allocator<AlarmBasic *>, false>> const &)
   \                     ??_Copy:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   0150A0E1           MOV      R5,R1
   \   00000008   041095E5           LDR      R1,[R5, #+4]
   \   0000000C   0040A0E1           MOV      R4,R0
   \   00000010   0420A0E1           MOV      R2,R4
   \   00000014   ........           _BLF     ??_Copy_1,??_Copy??rA
   \   00000018   040084E5           STR      R0,[R4, #+4]
   \   0000001C   100095E5           LDR      R0,[R5, #+16]
   \   00000020   100084E5           STR      R0,[R4, #+16]
   \   00000024   040094E5           LDR      R0,[R4, #+4]
   \   00000028   0D10D0E5           LDRB     R1,[R0, #+13]
   \   0000002C   000051E3           CMP      R1,#+0
   \   00000030   1000001A           BNE      ??_Copy_2
   \   00000034   0010A0E1           MOV      R1,R0
   \   00000038   000000EA           B        ??_Copy_3
   \                     ??_Copy_4:
   \   0000003C   0210A0E1           MOV      R1,R2
   \                     ??_Copy_3:
   \   00000040   002091E5           LDR      R2,[R1, #+0]
   \   00000044   0D30D2E5           LDRB     R3,[R2, #+13]
   \   00000048   000053E3           CMP      R3,#+0
   \   0000004C   FAFFFF0A           BEQ      ??_Copy_4
   \   00000050   001084E5           STR      R1,[R4, #+0]
   \   00000054   081084E2           ADD      R1,R4,#+8
   \   00000058   000000EA           B        ??_Copy_5
   \                     ??_Copy_6:
   \   0000005C   0200A0E1           MOV      R0,R2
   \                     ??_Copy_5:
   \   00000060   082090E5           LDR      R2,[R0, #+8]
   \   00000064   0D30D2E5           LDRB     R3,[R2, #+13]
   \   00000068   000053E3           CMP      R3,#+0
   \   0000006C   FAFFFF0A           BEQ      ??_Copy_6
   \   00000070   000081E5           STR      R0,[R1, #+0]
   \   00000074   010000EA           B        ??_Copy_7
   \                     ??_Copy_2:
   \   00000078   004084E5           STR      R4,[R4, #+0]
   \   0000007C   084084E5           STR      R4,[R4, #+8]
   \                     ??_Copy_7:
   \   00000080   3040BDE8           POP      {R4,R5,LR}
   \   00000084   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs _Tree<_Tset_traits<AlarmBasic *, less<AlarmBasic *>, allocator<AlarmBasic *>, false>>::_Nodeptr _Tree<_Tset_traits<AlarmBasic *, less<AlarmBasic *>, allocator<AlarmBasic *>, false>>::_Copy(_Tree<_Tset_traits<AlarmBasic *, less<AlarmBasic *>, allocator<AlarmBasic *>, false>>::_Nodeptr, _Tree<_Tset_traits<AlarmBasic *, less<AlarmBasic *>, allocator<AlarmBasic *>, false>>::_Nodeptr)
   \                     ??_Copy_1:
   \   00000000   F0472DE9           PUSH     {R4-R10,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
   \   0000000C   0D00D5E5           LDRB     R0,[R5, #+13]
   \   00000010   0280A0E1           MOV      R8,R2
   \   00000014   0460A0E1           MOV      R6,R4
   \   00000018   000050E3           CMP      R0,#+0
   \   0000001C   1900001A           BNE      ??_Copy_8
   \   00000020   0C90D5E5           LDRB     R9,[R5, #+12]
   \   00000024   10A095E5           LDR      R10,[R5, #+16]
   \   00000028   1400A0E3           MOV      R0,#+20
   \   0000002C   ........           _BLF     `??operator new`,`??operator new??rA`
   \   00000030   0070B0E1           MOVS     R7,R0
   \   00000034   0600000A           BEQ      ??_Copy_9
   \   00000038   004087E5           STR      R4,[R7, #+0]
   \   0000003C   048087E5           STR      R8,[R7, #+4]
   \   00000040   084087E5           STR      R4,[R7, #+8]
   \   00000044   0C90C7E5           STRB     R9,[R7, #+12]
   \   00000048   0000A0E3           MOV      R0,#+0
   \   0000004C   0D00C7E5           STRB     R0,[R7, #+13]
   \   00000050   10A087E5           STR      R10,[R7, #+16]
   \                     ??_Copy_9:
   \   00000054   0D00D6E5           LDRB     R0,[R6, #+13]
   \   00000058   001095E5           LDR      R1,[R5, #+0]
   \   0000005C   0720A0E1           MOV      R2,R7
   \   00000060   000050E3           CMP      R0,#+0
   \   00000064   0760A011           MOVNE    R6,R7
   \   00000068   0400A0E1           MOV      R0,R4
   \   0000006C   E3FFFFEB           BL       ??_Copy_1
   \   00000070   000087E5           STR      R0,[R7, #+0]
   \   00000074   081095E5           LDR      R1,[R5, #+8]
   \   00000078   0720A0E1           MOV      R2,R7
   \   0000007C   0400A0E1           MOV      R0,R4
   \   00000080   DEFFFFEB           BL       ??_Copy_1
   \   00000084   080087E5           STR      R0,[R7, #+8]
   \                     ??_Copy_8:
   \   00000088   0600A0E1           MOV      R0,R6
   \   0000008C   F047BDE8           POP      {R4-R10,LR}
   \   00000090   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::_Erase(_Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::_Nodeptr)
   \                     ??_Erase:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
   \   0000000C   0560A0E1           MOV      R6,R5
   \   00000010   060000EA           B        ??_Erase_3
   \                     ??_Erase_4:
   \   00000014   081096E5           LDR      R1,[R6, #+8]
   \   00000018   0400A0E1           MOV      R0,R4
   \   0000001C   F7FFFFEB           BL       ??_Erase
   \   00000020   006096E5           LDR      R6,[R6, #+0]
   \   00000024   0500A0E1           MOV      R0,R5
   \   00000028   ........           _BLF     `??operator delete`,`??operator delete??rA`
   \   0000002C   0650A0E1           MOV      R5,R6
   \                     ??_Erase_3:
   \   00000030   0D00D6E5           LDRB     R0,[R6, #+13]
   \   00000034   000050E3           CMP      R0,#+0
   \   00000038   F5FFFF0A           BEQ      ??_Erase_4
   \   0000003C   7040BDE8           POP      {R4-R6,LR}
   \   00000040   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void _Tree<_Tset_traits<AlarmBasic *, less<AlarmBasic *>, allocator<AlarmBasic *>, false>>::_Erase(_Tree<_Tset_traits<AlarmBasic *, less<AlarmBasic *>, allocator<AlarmBasic *>, false>>::_Nodeptr)
   \                     ??_Erase_1:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
   \   0000000C   0560A0E1           MOV      R6,R5
   \   00000010   060000EA           B        ??_Erase_5
   \                     ??_Erase_6:
   \   00000014   081096E5           LDR      R1,[R6, #+8]
   \   00000018   0400A0E1           MOV      R0,R4
   \   0000001C   F7FFFFEB           BL       ??_Erase_1
   \   00000020   006096E5           LDR      R6,[R6, #+0]
   \   00000024   0500A0E1           MOV      R0,R5
   \   00000028   ........           _BLF     `??operator delete`,`??operator delete??rA`
   \   0000002C   0650A0E1           MOV      R5,R6
   \                     ??_Erase_5:
   \   00000030   0D00D6E5           LDRB     R0,[R6, #+13]
   \   00000034   000050E3           CMP      R0,#+0
   \   00000038   F5FFFF0A           BEQ      ??_Erase_6
   \   0000003C   7040BDE8           POP      {R4-R6,LR}
   \   00000040   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void _Tree<_Tset_traits<PRogramObject *, less<PRogramObject *>, allocator<PRogramObject *>, false>>::_Erase(_Tree<_Tset_traits<PRogramObject *, less<PRogramObject *>, allocator<PRogramObject *>, false>>::_Nodeptr)
   \                     ??_Erase_2:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
   \   0000000C   0560A0E1           MOV      R6,R5
   \   00000010   060000EA           B        ??_Erase_7
   \                     ??_Erase_8:
   \   00000014   081096E5           LDR      R1,[R6, #+8]
   \   00000018   0400A0E1           MOV      R0,R4
   \   0000001C   F7FFFFEB           BL       ??_Erase_2
   \   00000020   006096E5           LDR      R6,[R6, #+0]
   \   00000024   0500A0E1           MOV      R0,R5
   \   00000028   ........           _BLF     `??operator delete`,`??operator delete??rA`
   \   0000002C   0650A0E1           MOV      R5,R6
   \                     ??_Erase_7:
   \   00000030   0D00D6E5           LDRB     R0,[R6, #+13]
   \   00000034   000050E3           CMP      R0,#+0
   \   00000038   F5FFFF0A           BEQ      ??_Erase_8
   \   0000003C   7040BDE8           POP      {R4-R6,LR}
   \   00000040   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs _Tree<_Tset_traits<AlarmBasic *, less<AlarmBasic *>, allocator<AlarmBasic *>, false>>::iterator _Tree<_Tset_traits<AlarmBasic *, less<AlarmBasic *>, allocator<AlarmBasic *>, false>>::_Insert(bool, _Tree<_Tset_traits<AlarmBasic *, less<AlarmBasic *>, allocator<AlarmBasic *>, false>>::_Nodeptr, AlarmBasic *)
   \                     ??_Insert_1:
   \   00000000   F0412DE9           PUSH     {R4-R8,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
   \   0000000C   0260A0E1           MOV      R6,R2
   \   00000010   0370A0E1           MOV      R7,R3
   \   00000014   1400A0E3           MOV      R0,#+20
   \   00000018   ........           _BLF     `??operator new`,`??operator new??rA`
   \   0000001C   0080B0E1           MOVS     R8,R0
   \   00000020   0600000A           BEQ      ??_Insert_16
   \   00000024   004088E5           STR      R4,[R8, #+0]
   \   00000028   046088E5           STR      R6,[R8, #+4]
   \   0000002C   084088E5           STR      R4,[R8, #+8]
   \   00000030   0000A0E3           MOV      R0,#+0
   \   00000034   0C00C8E5           STRB     R0,[R8, #+12]
   \   00000038   0D00C8E5           STRB     R0,[R8, #+13]
   \   0000003C   107088E5           STR      R7,[R8, #+16]
   \                     ??_Insert_16:
   \   00000040   0830A0E1           MOV      R3,R8
   \   00000044   0620A0E1           MOV      R2,R6
   \   00000048   0510A0E1           MOV      R1,R5
   \   0000004C   0400A0E1           MOV      R0,R4
   \   00000050   ........           _BLF     ??_Insert,??_Insert??rA_3
   \   00000054   0800A0E1           MOV      R0,R8
   \   00000058   F041BDE8           POP      {R4-R8,LR}
   \   0000005C   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::iterator _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::_Insert(bool, _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::_Nodeptr, PRogramObjectBase *)
   \                     ??_Insert_2:
   \   00000000   F0412DE9           PUSH     {R4-R8,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
   \   0000000C   0260A0E1           MOV      R6,R2
   \   00000010   0370A0E1           MOV      R7,R3
   \   00000014   1400A0E3           MOV      R0,#+20
   \   00000018   ........           _BLF     `??operator new`,`??operator new??rA`
   \   0000001C   0080B0E1           MOVS     R8,R0
   \   00000020   0600000A           BEQ      ??_Insert_17
   \   00000024   004088E5           STR      R4,[R8, #+0]
   \   00000028   046088E5           STR      R6,[R8, #+4]
   \   0000002C   084088E5           STR      R4,[R8, #+8]
   \   00000030   0000A0E3           MOV      R0,#+0
   \   00000034   0C00C8E5           STRB     R0,[R8, #+12]
   \   00000038   0D00C8E5           STRB     R0,[R8, #+13]
   \   0000003C   107088E5           STR      R7,[R8, #+16]
   \                     ??_Insert_17:
   \   00000040   0830A0E1           MOV      R3,R8
   \   00000044   0620A0E1           MOV      R2,R6
   \   00000048   0510A0E1           MOV      R1,R5
   \   0000004C   0400A0E1           MOV      R0,R4
   \   00000050   ........           _BLF     ??_Insert,??_Insert??rA_3
   \   00000054   0800A0E1           MOV      R0,R8
   \   00000058   F041BDE8           POP      {R4-R8,LR}
   \   0000005C   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs _Tree<_Tset_traits<PRogramObject *, less<PRogramObject *>, allocator<PRogramObject *>, false>>::iterator _Tree<_Tset_traits<PRogramObject *, less<PRogramObject *>, allocator<PRogramObject *>, false>>::_Insert(bool, _Tree<_Tset_traits<PRogramObject *, less<PRogramObject *>, allocator<PRogramObject *>, false>>::_Nodeptr, PRogramObject *)
   \                     ??_Insert_3:
   \   00000000   F0412DE9           PUSH     {R4-R8,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
   \   0000000C   0260A0E1           MOV      R6,R2
   \   00000010   0370A0E1           MOV      R7,R3
   \   00000014   1400A0E3           MOV      R0,#+20
   \   00000018   ........           _BLF     `??operator new`,`??operator new??rA`
   \   0000001C   0080B0E1           MOVS     R8,R0
   \   00000020   0600000A           BEQ      ??_Insert_18
   \   00000024   004088E5           STR      R4,[R8, #+0]
   \   00000028   046088E5           STR      R6,[R8, #+4]
   \   0000002C   084088E5           STR      R4,[R8, #+8]
   \   00000030   0000A0E3           MOV      R0,#+0
   \   00000034   0C00C8E5           STRB     R0,[R8, #+12]
   \   00000038   0D00C8E5           STRB     R0,[R8, #+13]
   \   0000003C   107088E5           STR      R7,[R8, #+16]
   \                     ??_Insert_18:
   \   00000040   0830A0E1           MOV      R3,R8
   \   00000044   0620A0E1           MOV      R2,R6
   \   00000048   0510A0E1           MOV      R1,R5
   \   0000004C   0400A0E1           MOV      R0,R4
   \   00000050   ........           _BLF     ??_Insert,??_Insert??rA_3
   \   00000054   0800A0E1           MOV      R0,R8
   \   00000058   F041BDE8           POP      {R4-R8,LR}
   \   0000005C   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs _Tree<_Tset_traits<AlarmBasic *, less<AlarmBasic *>, allocator<AlarmBasic *>, false>>::_Nodeptr _Tree<_Tset_traits<AlarmBasic *, less<AlarmBasic *>, allocator<AlarmBasic *>, false>>::_Lbound(AlarmBasic *) const
   \                     ??_Lbound:
   \   00000000   042090E5           LDR      R2,[R0, #+4]
   \                     ??_Lbound_1:
   \   00000004   0D30D2E5           LDRB     R3,[R2, #+13]
   \   00000008   000053E3           CMP      R3,#+0
   \   0000000C   1EFF2F11           BXNE     LR
   \   00000010   103092E5           LDR      R3,[R2, #+16]
   \   00000014   010053E1           CMP      R3,R1
   \   00000018   08209235           LDRCC    R2,[R2, #+8]
   \   0000001C   0200A021           MOVCS    R0,R2
   \   00000020   00209225           LDRCS    R2,[R2, #+0]
   \   00000024   F6FFFFEA           B        ??_Lbound_1

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs set<PRogramObjectBase *>::~set()
   \                     `?~set`:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   041094E5           LDR      R1,[R4, #+4]
   \   0000000C   ........           _BLF     ??_Erase,??_Erase??rA_1
   \   00000010   0400A0E1           MOV      R0,R4
   \   00000014   ........           _BLF     ??_Clear,??_Clear??rA
   \   00000018   1040BDE8           POP      {R4,LR}
   \   0000001C   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs set<AlarmBasic *>::~set()
   \                     `?~set_1`:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   041094E5           LDR      R1,[R4, #+4]
   \   0000000C   ........           _BLF     ??_Erase_1,??_Erase??rA_2
   \   00000010   0400A0E1           MOV      R0,R4
   \   00000014   ........           _BLF     ??_Clear,??_Clear??rA
   \   00000018   1040BDE8           POP      {R4,LR}
   \   0000001C   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs set<AlarmBasic *>::set()
   \                     ??set:
   \   00000000   11402DE9           PUSH     {R0,R4,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0110A0E3           MOV      R1,#+1
   \   0000000C   0D00A0E1           MOV      R0,SP
   \   00000010   ........           _BLF     __data_memzero,??__data_memzero??rA
   \   00000014   0400A0E1           MOV      R0,R4
   \   00000018   ........           _BLF     ??_Clear,??_Clear??rA
   \   0000001C   0000DDE5           LDRB     R0,[SP, #+0]
   \   00000020   1400C4E5           STRB     R0,[R4, #+20]
   \   00000024   0400A0E1           MOV      R0,R4
   \   00000028   1240BDE8           POP      {R1,R4,LR}
   \   0000002C   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void _Vector_value<allocator<void>>::_Zero()
   \                     ??_Zero:
   \   00000000   0010A0E3           MOV      R1,#+0
   \   00000004   001080E5           STR      R1,[R0, #+0]
   \   00000008   041080E5           STR      R1,[R0, #+4]
   \   0000000C   081080E5           STR      R1,[R0, #+8]
   \   00000010   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void _Vector_impl<int, allocator<int>>::_Tidy0()
   \                     ??_Tidy0:
   \   00000000   00402DE9           PUSH     {LR}
   \   00000004   001090E5           LDR      R1,[R0, #+0]
   \   00000008   000051E3           CMP      R1,#+0
   \   0000000C   0200000A           BEQ      ??_Tidy0_3
   \   00000010   041080E5           STR      R1,[R0, #+4]
   \   00000014   0100A0E1           MOV      R0,R1
   \   00000018   ........           _BLF     `??operator delete`,`??operator delete??rA`
   \                     ??_Tidy0_3:
   \   0000001C   0040BDE8           POP      {LR}
   \   00000020   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void _Vector_impl<unsigned int, allocator<unsigned int>>::_Tidy0()
   \                     ??_Tidy0_1:
   \   00000000   00402DE9           PUSH     {LR}
   \   00000004   001090E5           LDR      R1,[R0, #+0]
   \   00000008   000051E3           CMP      R1,#+0
   \   0000000C   0200000A           BEQ      ??_Tidy0_4
   \   00000010   041080E5           STR      R1,[R0, #+4]
   \   00000014   0100A0E1           MOV      R0,R1
   \   00000018   ........           _BLF     `??operator delete`,`??operator delete??rA`
   \                     ??_Tidy0_4:
   \   0000001C   0040BDE8           POP      {LR}
   \   00000020   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void _Vector_impl<AnPro3object *, allocator<AnPro3object *>>::_Tidy0()
   \                     ??_Tidy0_2:
   \   00000000   00402DE9           PUSH     {LR}
   \   00000004   001090E5           LDR      R1,[R0, #+0]
   \   00000008   000051E3           CMP      R1,#+0
   \   0000000C   0200000A           BEQ      ??_Tidy0_5
   \   00000010   041080E5           STR      R1,[R0, #+4]
   \   00000014   0100A0E1           MOV      R0,R1
   \   00000018   ........           _BLF     `??operator delete`,`??operator delete??rA`
   \                     ??_Tidy0_5:
   \   0000001C   0040BDE8           POP      {LR}
   \   00000020   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void _Vector_impl<int, allocator<int>>::_Assign(_Vector_impl<int, allocator<int>> const &)
   \                     ??_Assign:
   \   00000000   71402DE9           PUSH     {R0,R4-R6,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
   \   0000000C   050054E1           CMP      R4,R5
   \   00000010   3000000A           BEQ      ??_Assign_1
   \   00000014   041095E5           LDR      R1,[R5, #+4]
   \   00000018   000095E5           LDR      R0,[R5, #+0]
   \   0000001C   002041E0           SUB      R2,R1,R0
   \   00000020   2231B0E1           LSRS     R3,R2,#+2
   \   00000024   0400001A           BNE      ??_Assign_2
   \   00000028   0400A0E1           MOV      R0,R4
   \   0000002C   ........           _BLF     ??_Tidy0,??_Tidy0??rA
   \   00000030   0400A0E1           MOV      R0,R4
   \   00000034   ........           _BLF     ??_Zero,??_Zero??rA
   \   00000038   260000EA           B        ??_Assign_1
   \                     ??_Assign_2:
   \   0000003C   002094E5           LDR      R2,[R4, #+0]
   \   00000040   046094E5           LDR      R6,[R4, #+4]
   \   00000044   026046E0           SUB      R6,R6,R2
   \   00000048   260153E1           CMP      R3,R6, LSR #+2
   \   0000004C   0700008A           BHI      ??_Assign_3
   \   00000050   ........           _BLF     _Copy_a4,??_Copy_a4??rA
   \   00000054   040095E5           LDR      R0,[R5, #+4]
   \   00000058   001095E5           LDR      R1,[R5, #+0]
   \   0000005C   010040E0           SUB      R0,R0,R1
   \   00000060   001094E5           LDR      R1,[R4, #+0]
   \   00000064   2001A0E1           LSR      R0,R0,#+2
   \   00000068   000181E0           ADD      R0,R1,R0, LSL #+2
   \   0000006C   180000EA           B        ??_Assign_4
   \                     ??_Assign_3:
   \   00000070   086094E5           LDR      R6,[R4, #+8]
   \   00000074   026046E0           SUB      R6,R6,R2
   \   00000078   260153E1           CMP      R3,R6, LSR #+2
   \   0000007C   1300009A           BLS      ??_Assign_5
   \                     ??_Assign_6:
   \   00000080   000052E3           CMP      R2,#+0
   \   00000084   0100000A           BEQ      ??_Assign_7
   \   00000088   0200A0E1           MOV      R0,R2
   \   0000008C   ........           _BLF     `??operator delete`,`??operator delete??rA`
   \                     ??_Assign_7:
   \   00000090   040095E5           LDR      R0,[R5, #+4]
   \   00000094   001095E5           LDR      R1,[R5, #+0]
   \   00000098   016040E0           SUB      R6,R0,R1
   \   0000009C   0400A0E1           MOV      R0,R4
   \   000000A0   ........           _BLF     ??_Zero,??_Zero??rA
   \   000000A4   000056E3           CMP      R6,#+0
   \   000000A8   0A00000A           BEQ      ??_Assign_1
   \   000000AC   0600A0E1           MOV      R0,R6
   \   000000B0   ........           _BLF     `??operator new`,`??operator new??rA`
   \   000000B4   000084E5           STR      R0,[R4, #+0]
   \   000000B8   0020A0E1           MOV      R2,R0
   \   000000BC   042084E5           STR      R2,[R4, #+4]
   \   000000C0   020086E0           ADD      R0,R6,R2
   \   000000C4   080084E5           STR      R0,[R4, #+8]
   \   000000C8   041095E5           LDR      R1,[R5, #+4]
   \   000000CC   000095E5           LDR      R0,[R5, #+0]
   \                     ??_Assign_5:
   \   000000D0   ........           _BLF     _Copy_a4,??_Copy_a4??rA
   \                     ??_Assign_4:
   \   000000D4   040084E5           STR      R0,[R4, #+4]
   \                     ??_Assign_1:
   \   000000D8   7140BDE8           POP      {R0,R4-R6,LR}
   \   000000DC   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs unsigned int * _Vector_impl<unsigned int, allocator<unsigned int>>::_Insert(unsigned int *, unsigned int const &)
   \                     ??_Insert_4:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   005092E5           LDR      R5,[R2, #+0]
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   000094E5           LDR      R0,[R4, #+0]
   \   00000010   0120A0E3           MOV      R2,#+1
   \   00000014   000050E3           CMP      R0,#+0
   \   00000018   0060A003           MOVEQ    R6,#+0
   \   0000001C   00604110           SUBNE    R6,R1,R0
   \   00000020   0400A0E1           MOV      R0,R4
   \   00000024   ........           _BLF     ??_Make_room_2,??_Make_room??rA
   \   00000028   0110A0E3           MOV      R1,#+1
   \                     ??_Insert_19:
   \   0000002C   ........           STR      R5,[R0], #+4
   \   00000030   011051E2           SUBS     R1,R1,#+1
   \   00000034   FCFFFF1A           BNE      ??_Insert_19
   \   00000038   000094E5           LDR      R0,[R4, #+0]
   \   0000003C   000086E0           ADD      R0,R6,R0
   \   00000040   7040BDE8           POP      {R4-R6,LR}
   \   00000044   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs int * _Vector_impl<int, allocator<int>>::_Insert(int *, int const &)
   \                     ??_Insert_5:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   005092E5           LDR      R5,[R2, #+0]
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   000094E5           LDR      R0,[R4, #+0]
   \   00000010   0120A0E3           MOV      R2,#+1
   \   00000014   000050E3           CMP      R0,#+0
   \   00000018   0060A003           MOVEQ    R6,#+0
   \   0000001C   00604110           SUBNE    R6,R1,R0
   \   00000020   0400A0E1           MOV      R0,R4
   \   00000024   ........           _BLF     ??_Make_room,??_Make_room??rA_1
   \   00000028   0110A0E3           MOV      R1,#+1
   \                     ??_Insert_20:
   \   0000002C   ........           STR      R5,[R0], #+4
   \   00000030   011051E2           SUBS     R1,R1,#+1
   \   00000034   FCFFFF1A           BNE      ??_Insert_20
   \   00000038   000094E5           LDR      R0,[R4, #+0]
   \   0000003C   000086E0           ADD      R0,R6,R0
   \   00000040   7040BDE8           POP      {R4-R6,LR}
   \   00000044   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs AnPro3object ** _Vector_impl<AnPro3object *, allocator<AnPro3object *>>::_Insert(AnPro3object **, AnPro3object * const &)
   \                     ??_Insert_6:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   005092E5           LDR      R5,[R2, #+0]
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   000094E5           LDR      R0,[R4, #+0]
   \   00000010   0120A0E3           MOV      R2,#+1
   \   00000014   000050E3           CMP      R0,#+0
   \   00000018   0060A003           MOVEQ    R6,#+0
   \   0000001C   00604110           SUBNE    R6,R1,R0
   \   00000020   0400A0E1           MOV      R0,R4
   \   00000024   ........           _BLF     ??_Make_room_1,??_Make_room??rA_2
   \   00000028   0110A0E3           MOV      R1,#+1
   \                     ??_Insert_21:
   \   0000002C   ........           STR      R5,[R0], #+4
   \   00000030   011051E2           SUBS     R1,R1,#+1
   \   00000034   FCFFFF1A           BNE      ??_Insert_21
   \   00000038   000094E5           LDR      R0,[R4, #+0]
   \   0000003C   000086E0           ADD      R0,R6,R0
   \   00000040   7040BDE8           POP      {R4-R6,LR}
   \   00000044   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs int * _Vector_impl<int, allocator<int>>::_Make_room(int *, unsigned int)
   \                     ??_Make_room:
   \   00000000   F0472DE9           PUSH     {R4-R10,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   000094E5           LDR      R0,[R4, #+0]
   \   0000000C   0150A0E1           MOV      R5,R1
   \   00000010   081094E5           LDR      R1,[R4, #+8]
   \   00000014   0260A0E1           MOV      R6,R2
   \   00000018   001041E0           SUB      R1,R1,R0
   \   0000001C   2171A0E1           LSR      R7,R1,#+2
   \   00000020   041094E5           LDR      R1,[R4, #+4]
   \   00000024   000056E3           CMP      R6,#+0
   \   00000028   000041E0           SUB      R0,R1,R0
   \   0000002C   2001A0E1           LSR      R0,R0,#+2
   \   00000030   2900000A           BEQ      ??_Make_room_3
   \   00000034   C024E0E3           MVN      R2,#-1073741824
   \   00000038   002042E0           SUB      R2,R2,R0
   \   0000003C   060052E1           CMP      R2,R6
   \   00000040   2500003A           BCC      ??_Make_room_3
   \   00000044   008086E0           ADD      R8,R6,R0
   \   00000048   080057E1           CMP      R7,R8
   \   0000004C   1C00002A           BCS      ??_Make_room_4
   \   00000050   A700A0E1           LSR      R0,R7,#+1
   \   00000054   C014E0E3           MVN      R1,#-1073741824
   \   00000058   001041E0           SUB      R1,R1,R0
   \   0000005C   070051E1           CMP      R1,R7
   \   00000060   0070A033           MOVCC    R7,#+0
   \   00000064   07708020           ADDCS    R7,R0,R7
   \   00000068   080057E1           CMP      R7,R8
   \   0000006C   0870A031           MOVCC    R7,R8
   \   00000070   0701A0E1           LSL      R0,R7,#+2
   \   00000074   ........           _BLF     `??operator new`,`??operator new??rA`
   \   00000078   0090A0E1           MOV      R9,R0
   \   0000007C   000094E5           LDR      R0,[R4, #+0]
   \   00000080   0920A0E1           MOV      R2,R9
   \   00000084   0510A0E1           MOV      R1,R5
   \   00000088   ........           _BLF     _Copy_a4,??_Copy_a4??rA
   \   0000008C   041094E5           LDR      R1,[R4, #+4]
   \   00000090   00A0A0E1           MOV      R10,R0
   \   00000094   06218AE0           ADD      R2,R10,R6, LSL #+2
   \   00000098   0500A0E1           MOV      R0,R5
   \   0000009C   ........           _BLF     _Copy_a4,??_Copy_a4??rA
   \   000000A0   0400A0E1           MOV      R0,R4
   \   000000A4   ........           _BLF     ??_Tidy0,??_Tidy0??rA
   \   000000A8   070189E0           ADD      R0,R9,R7, LSL #+2
   \   000000AC   080084E5           STR      R0,[R4, #+8]
   \   000000B0   080189E0           ADD      R0,R9,R8, LSL #+2
   \   000000B4   040084E5           STR      R0,[R4, #+4]
   \   000000B8   009084E5           STR      R9,[R4, #+0]
   \   000000BC   0A50A0E1           MOV      R5,R10
   \   000000C0   050000EA           B        ??_Make_room_3
   \                     ??_Make_room_4:
   \   000000C4   062181E0           ADD      R2,R1,R6, LSL #+2
   \   000000C8   0500A0E1           MOV      R0,R5
   \   000000CC   ........           _BLF     _Copy_backward_a4,??_Copy_backward_a4??rA
   \   000000D0   040094E5           LDR      R0,[R4, #+4]
   \   000000D4   060180E0           ADD      R0,R0,R6, LSL #+2
   \   000000D8   040084E5           STR      R0,[R4, #+4]
   \                     ??_Make_room_3:
   \   000000DC   0500A0E1           MOV      R0,R5
   \   000000E0   F047BDE8           POP      {R4-R10,LR}
   \   000000E4   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs AnPro3object ** _Vector_impl<AnPro3object *, allocator<AnPro3object *>>::_Make_room(AnPro3object **, unsigned int)
   \                     ??_Make_room_1:
   \   00000000   F0472DE9           PUSH     {R4-R10,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   000094E5           LDR      R0,[R4, #+0]
   \   0000000C   0150A0E1           MOV      R5,R1
   \   00000010   081094E5           LDR      R1,[R4, #+8]
   \   00000014   0260A0E1           MOV      R6,R2
   \   00000018   001041E0           SUB      R1,R1,R0
   \   0000001C   2171A0E1           LSR      R7,R1,#+2
   \   00000020   041094E5           LDR      R1,[R4, #+4]
   \   00000024   000056E3           CMP      R6,#+0
   \   00000028   000041E0           SUB      R0,R1,R0
   \   0000002C   2001A0E1           LSR      R0,R0,#+2
   \   00000030   2900000A           BEQ      ??_Make_room_5
   \   00000034   C024E0E3           MVN      R2,#-1073741824
   \   00000038   002042E0           SUB      R2,R2,R0
   \   0000003C   060052E1           CMP      R2,R6
   \   00000040   2500003A           BCC      ??_Make_room_5
   \   00000044   008086E0           ADD      R8,R6,R0
   \   00000048   080057E1           CMP      R7,R8
   \   0000004C   1C00002A           BCS      ??_Make_room_6
   \   00000050   A700A0E1           LSR      R0,R7,#+1
   \   00000054   C014E0E3           MVN      R1,#-1073741824
   \   00000058   001041E0           SUB      R1,R1,R0
   \   0000005C   070051E1           CMP      R1,R7
   \   00000060   0070A033           MOVCC    R7,#+0
   \   00000064   07708020           ADDCS    R7,R0,R7
   \   00000068   080057E1           CMP      R7,R8
   \   0000006C   0870A031           MOVCC    R7,R8
   \   00000070   0701A0E1           LSL      R0,R7,#+2
   \   00000074   ........           _BLF     `??operator new`,`??operator new??rA`
   \   00000078   0090A0E1           MOV      R9,R0
   \   0000007C   000094E5           LDR      R0,[R4, #+0]
   \   00000080   0920A0E1           MOV      R2,R9
   \   00000084   0510A0E1           MOV      R1,R5
   \   00000088   ........           _BLF     _Copy_a4,??_Copy_a4??rA
   \   0000008C   041094E5           LDR      R1,[R4, #+4]
   \   00000090   00A0A0E1           MOV      R10,R0
   \   00000094   06218AE0           ADD      R2,R10,R6, LSL #+2
   \   00000098   0500A0E1           MOV      R0,R5
   \   0000009C   ........           _BLF     _Copy_a4,??_Copy_a4??rA
   \   000000A0   0400A0E1           MOV      R0,R4
   \   000000A4   ........           _BLF     ??_Tidy0_2,??_Tidy0??rA_1
   \   000000A8   070189E0           ADD      R0,R9,R7, LSL #+2
   \   000000AC   080084E5           STR      R0,[R4, #+8]
   \   000000B0   080189E0           ADD      R0,R9,R8, LSL #+2
   \   000000B4   040084E5           STR      R0,[R4, #+4]
   \   000000B8   009084E5           STR      R9,[R4, #+0]
   \   000000BC   0A50A0E1           MOV      R5,R10
   \   000000C0   050000EA           B        ??_Make_room_5
   \                     ??_Make_room_6:
   \   000000C4   062181E0           ADD      R2,R1,R6, LSL #+2
   \   000000C8   0500A0E1           MOV      R0,R5
   \   000000CC   ........           _BLF     _Copy_backward_a4,??_Copy_backward_a4??rA
   \   000000D0   040094E5           LDR      R0,[R4, #+4]
   \   000000D4   060180E0           ADD      R0,R0,R6, LSL #+2
   \   000000D8   040084E5           STR      R0,[R4, #+4]
   \                     ??_Make_room_5:
   \   000000DC   0500A0E1           MOV      R0,R5
   \   000000E0   F047BDE8           POP      {R4-R10,LR}
   \   000000E4   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs unsigned int * _Vector_impl<unsigned int, allocator<unsigned int>>::_Make_room(unsigned int *, unsigned int)
   \                     ??_Make_room_2:
   \   00000000   F0472DE9           PUSH     {R4-R10,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   000094E5           LDR      R0,[R4, #+0]
   \   0000000C   0150A0E1           MOV      R5,R1
   \   00000010   081094E5           LDR      R1,[R4, #+8]
   \   00000014   0260A0E1           MOV      R6,R2
   \   00000018   001041E0           SUB      R1,R1,R0
   \   0000001C   2171A0E1           LSR      R7,R1,#+2
   \   00000020   041094E5           LDR      R1,[R4, #+4]
   \   00000024   000056E3           CMP      R6,#+0
   \   00000028   000041E0           SUB      R0,R1,R0
   \   0000002C   2001A0E1           LSR      R0,R0,#+2
   \   00000030   2900000A           BEQ      ??_Make_room_7
   \   00000034   C024E0E3           MVN      R2,#-1073741824
   \   00000038   002042E0           SUB      R2,R2,R0
   \   0000003C   060052E1           CMP      R2,R6
   \   00000040   2500003A           BCC      ??_Make_room_7
   \   00000044   008086E0           ADD      R8,R6,R0
   \   00000048   080057E1           CMP      R7,R8
   \   0000004C   1C00002A           BCS      ??_Make_room_8
   \   00000050   A700A0E1           LSR      R0,R7,#+1
   \   00000054   C014E0E3           MVN      R1,#-1073741824
   \   00000058   001041E0           SUB      R1,R1,R0
   \   0000005C   070051E1           CMP      R1,R7
   \   00000060   0070A033           MOVCC    R7,#+0
   \   00000064   07708020           ADDCS    R7,R0,R7
   \   00000068   080057E1           CMP      R7,R8
   \   0000006C   0870A031           MOVCC    R7,R8
   \   00000070   0701A0E1           LSL      R0,R7,#+2
   \   00000074   ........           _BLF     `??operator new`,`??operator new??rA`
   \   00000078   0090A0E1           MOV      R9,R0
   \   0000007C   000094E5           LDR      R0,[R4, #+0]
   \   00000080   0920A0E1           MOV      R2,R9
   \   00000084   0510A0E1           MOV      R1,R5
   \   00000088   ........           _BLF     _Copy_a4,??_Copy_a4??rA
   \   0000008C   041094E5           LDR      R1,[R4, #+4]
   \   00000090   00A0A0E1           MOV      R10,R0
   \   00000094   06218AE0           ADD      R2,R10,R6, LSL #+2
   \   00000098   0500A0E1           MOV      R0,R5
   \   0000009C   ........           _BLF     _Copy_a4,??_Copy_a4??rA
   \   000000A0   0400A0E1           MOV      R0,R4
   \   000000A4   ........           _BLF     ??_Tidy0_1,??_Tidy0??rA_2
   \   000000A8   070189E0           ADD      R0,R9,R7, LSL #+2
   \   000000AC   080084E5           STR      R0,[R4, #+8]
   \   000000B0   080189E0           ADD      R0,R9,R8, LSL #+2
   \   000000B4   040084E5           STR      R0,[R4, #+4]
   \   000000B8   009084E5           STR      R9,[R4, #+0]
   \   000000BC   0A50A0E1           MOV      R5,R10
   \   000000C0   050000EA           B        ??_Make_room_7
   \                     ??_Make_room_8:
   \   000000C4   062181E0           ADD      R2,R1,R6, LSL #+2
   \   000000C8   0500A0E1           MOV      R0,R5
   \   000000CC   ........           _BLF     _Copy_backward_a4,??_Copy_backward_a4??rA
   \   000000D0   040094E5           LDR      R0,[R4, #+4]
   \   000000D4   060180E0           ADD      R0,R0,R6, LSL #+2
   \   000000D8   040084E5           STR      R0,[R4, #+4]
   \                     ??_Make_room_7:
   \   000000DC   0500A0E1           MOV      R0,R5
   \   000000E0   F047BDE8           POP      {R4-R10,LR}
   \   000000E4   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void _Vector_impl<AnPro3object *, allocator<AnPro3object *>>::_Push_back0(AnPro3object *)
   \                     ??_Push_back0:
   \   00000000   02402DE9           PUSH     {R1,LR}
   \   00000004   041090E5           LDR      R1,[R0, #+4]
   \   00000008   082090E5           LDR      R2,[R0, #+8]
   \   0000000C   020051E1           CMP      R1,R2
   \   00000010   0800002A           BCS      ??_Push_back0_3
   \   00000014   00209DE5           LDR      R2,[SP, #+0]
   \   00000018   0130A0E3           MOV      R3,#+1
   \   0000001C   01C0A0E1           MOV      R12,R1
   \                     ??_Push_back0_4:
   \   00000020   ........           STR      R2,[R12], #+4
   \   00000024   013053E2           SUBS     R3,R3,#+1
   \   00000028   FCFFFF1A           BNE      ??_Push_back0_4
   \   0000002C   041081E2           ADD      R1,R1,#+4
   \   00000030   041080E5           STR      R1,[R0, #+4]
   \   00000034   010000EA           B        ??_Push_back0_5
   \                     ??_Push_back0_3:
   \   00000038   0D20A0E1           MOV      R2,SP
   \   0000003C   ........           _BLF     ??_Insert_6,??_Insert??rA_4
   \                     ??_Push_back0_5:
   \   00000040   0140BDE8           POP      {R0,LR}
   \   00000044   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void _Vector_impl<int, allocator<int>>::_Push_back0(int)
   \                     ??_Push_back0_1:
   \   00000000   02402DE9           PUSH     {R1,LR}
   \   00000004   041090E5           LDR      R1,[R0, #+4]
   \   00000008   082090E5           LDR      R2,[R0, #+8]
   \   0000000C   020051E1           CMP      R1,R2
   \   00000010   0800002A           BCS      ??_Push_back0_6
   \   00000014   00209DE5           LDR      R2,[SP, #+0]
   \   00000018   0130A0E3           MOV      R3,#+1
   \   0000001C   01C0A0E1           MOV      R12,R1
   \                     ??_Push_back0_7:
   \   00000020   ........           STR      R2,[R12], #+4
   \   00000024   013053E2           SUBS     R3,R3,#+1
   \   00000028   FCFFFF1A           BNE      ??_Push_back0_7
   \   0000002C   041081E2           ADD      R1,R1,#+4
   \   00000030   041080E5           STR      R1,[R0, #+4]
   \   00000034   010000EA           B        ??_Push_back0_8
   \                     ??_Push_back0_6:
   \   00000038   0D20A0E1           MOV      R2,SP
   \   0000003C   ........           _BLF     ??_Insert_5,??_Insert??rA_5
   \                     ??_Push_back0_8:
   \   00000040   0140BDE8           POP      {R0,LR}
   \   00000044   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void _Vector_impl<unsigned int, allocator<unsigned int>>::_Push_back0(unsigned int)
   \                     ??_Push_back0_2:
   \   00000000   02402DE9           PUSH     {R1,LR}
   \   00000004   041090E5           LDR      R1,[R0, #+4]
   \   00000008   082090E5           LDR      R2,[R0, #+8]
   \   0000000C   020051E1           CMP      R1,R2
   \   00000010   0800002A           BCS      ??_Push_back0_9
   \   00000014   00209DE5           LDR      R2,[SP, #+0]
   \   00000018   0130A0E3           MOV      R3,#+1
   \   0000001C   01C0A0E1           MOV      R12,R1
   \                     ??_Push_back0_10:
   \   00000020   ........           STR      R2,[R12], #+4
   \   00000024   013053E2           SUBS     R3,R3,#+1
   \   00000028   FCFFFF1A           BNE      ??_Push_back0_10
   \   0000002C   041081E2           ADD      R1,R1,#+4
   \   00000030   041080E5           STR      R1,[R0, #+4]
   \   00000034   010000EA           B        ??_Push_back0_11
   \                     ??_Push_back0_9:
   \   00000038   0D20A0E1           MOV      R2,SP
   \   0000003C   ........           _BLF     ??_Insert_4,??_Insert??rA_6
   \                     ??_Push_back0_11:
   \   00000040   0140BDE8           POP      {R0,LR}
   \   00000044   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs vector<AnPro3object *>::~vector()
   \                     `?~vector`:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   ........           _BLF     ??_Tidy0_2,??_Tidy0??rA_1
   \   0000000C   0400A0E1           MOV      R0,R4
   \   00000010   ........           _BLF     ??_Zero,??_Zero??rA
   \   00000014   1040BDE8           POP      {R4,LR}
   \   00000018   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs bool vector<AnPro3object *>::empty() const
   \                     ??empty:
   \   00000000   041090E5           LDR      R1,[R0, #+4]
   \   00000004   000090E5           LDR      R0,[R0, #+0]
   \   00000008   000041E0           SUB      R0,R1,R0
   \   0000000C   2001B0E1           LSRS     R0,R0,#+2
   \   00000010   0100A003           MOVEQ    R0,#+1
   \   00000014   1EFF2F01           BXEQ     LR
   \   00000018   0000A0E3           MOV      R0,#+0
   \   0000001C   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs bool vector<int>::empty() const
   \                     ??empty_1:
   \   00000000   041090E5           LDR      R1,[R0, #+4]
   \   00000004   000090E5           LDR      R0,[R0, #+0]
   \   00000008   000041E0           SUB      R0,R1,R0
   \   0000000C   2001B0E1           LSRS     R0,R0,#+2
   \   00000010   0100A003           MOVEQ    R0,#+1
   \   00000014   1EFF2F01           BXEQ     LR
   \   00000018   0000A0E3           MOV      R0,#+0
   \   0000001C   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void operator+(string const &, string const &)
   \                     `??operator+`:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   1CD04DE2           SUB      SP,SP,#+28
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   0250A0E1           MOV      R5,R2
   \   00000010   0D00A0E1           MOV      R0,SP
   \   00000014   ........           _BLF     ??string,??string??rA
   \   00000018   34109FE5           LDR      R1,`??operator+_3`  ;; ??npos
   \   0000001C   0020A0E3           MOV      R2,#+0
   \   00000020   003091E5           LDR      R3,[R1, #+0]
   \   00000024   0510A0E1           MOV      R1,R5
   \   00000028   ........           _BLF     ??append,??append??rA
   \   0000002C   0010A0E1           MOV      R1,R0
   \   00000030   0400A0E1           MOV      R0,R4
   \   00000034   ........           _BLF     ??string,??string??rA
   \   00000038   0020A0E3           MOV      R2,#+0
   \   0000003C   0110A0E3           MOV      R1,#+1
   \   00000040   0D00A0E1           MOV      R0,SP
   \   00000044   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000048   1CD08DE2           ADD      SP,SP,#+28
   \   0000004C   3040BDE8           POP      {R4,R5,LR}
   \   00000050   1EFF2FE1           BX       LR               ;; return
   \                     `??operator+_3`:
   \   00000054   ........           DC32     ??npos

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void operator+(char const *, string const &)
   \                     `??operator+_1`:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   1CD04DE2           SUB      SP,SP,#+28
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   0150A0E1           MOV      R5,R1
   \   00000010   0260A0E1           MOV      R6,R2
   \   00000014   0020A0E3           MOV      R2,#+0
   \   00000018   0010A0E3           MOV      R1,#+0
   \   0000001C   0D00A0E1           MOV      R0,SP
   \   00000020   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000024   0500A0E1           MOV      R0,R5
   \   00000028   ........           _BLF     strlen,??strlen??rA
   \   0000002C   0020A0E1           MOV      R2,R0
   \   00000030   0510A0E1           MOV      R1,R5
   \   00000034   0D00A0E1           MOV      R0,SP
   \   00000038   ........           _BLF     ??assign_1,??assign??rA_1
   \   0000003C   38009FE5           LDR      R0,`??operator+_4`  ;; ??npos
   \   00000040   0020A0E3           MOV      R2,#+0
   \   00000044   003090E5           LDR      R3,[R0, #+0]
   \   00000048   0610A0E1           MOV      R1,R6
   \   0000004C   0D00A0E1           MOV      R0,SP
   \   00000050   ........           _BLF     ??append,??append??rA
   \   00000054   0010A0E1           MOV      R1,R0
   \   00000058   0400A0E1           MOV      R0,R4
   \   0000005C   ........           _BLF     ??string,??string??rA
   \   00000060   0020A0E3           MOV      R2,#+0
   \   00000064   0110A0E3           MOV      R1,#+1
   \   00000068   0D00A0E1           MOV      R0,SP
   \   0000006C   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000070   1CD08DE2           ADD      SP,SP,#+28
   \   00000074   7040BDE8           POP      {R4-R6,LR}
   \   00000078   1EFF2FE1           BX       LR               ;; return
   \                     `??operator+_4`:
   \   0000007C   ........           DC32     ??npos

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void operator+(string const &, char)
   \                     `??operator+_2`:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   1CD04DE2           SUB      SP,SP,#+28
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   0250A0E1           MOV      R5,R2
   \   00000010   0D00A0E1           MOV      R0,SP
   \   00000014   ........           _BLF     ??string,??string??rA
   \   00000018   0520A0E1           MOV      R2,R5
   \   0000001C   0110A0E3           MOV      R1,#+1
   \   00000020   ........           _BLF     ??append_1,??append??rA_1
   \   00000024   0010A0E1           MOV      R1,R0
   \   00000028   0400A0E1           MOV      R0,R4
   \   0000002C   ........           _BLF     ??string,??string??rA
   \   00000030   0020A0E3           MOV      R2,#+0
   \   00000034   0110A0E3           MOV      R1,#+1
   \   00000038   0D00A0E1           MOV      R0,SP
   \   0000003C   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000040   1CD08DE2           ADD      SP,SP,#+28
   \   00000044   3040BDE8           POP      {R4,R5,LR}
   \   00000048   1EFF2FE1           BX       LR               ;; return
      2          #pragma hdrstop
      3          #ifdef BORLAND
      4              #pragma package(smart_init)
      5          #endif
      6          
      7          
      8          ///////////////////////////////////////////////////////////
      9          //
     10          //	 Menu definitions for GUIs
     11          //
     12          ///////////////////////////////////////////////////////////
     13          
     14          

   \                                 In segment DATA_I, align 4, align-sorted
     15          ValueList                            SelectTankValueList[] =  {
     16              { L_WORD677, L_WORD237, SVT_LEVEL_SENSOR },                              //  {"Level"        ,"",SVT_LEVEL_SENSOR},
     17              { L_WORD307, L_WORD237, SVT_LEVEL_FC },                                //  {"LevelFC"      ,"",SVT_LEVEL_FC},
     18              { L_WORD306, L_WORD237, SVT_LEVEL_REF },                               //  {"LevelRef"     ,"",SVT_LEVEL_REF},
     19              { L_WORD316, L_WORD237, SVT_SOUNDING },                                //  {"Sounding"     ,"",SVT_SOUNDING},
     20              { L_WORD309, L_WORD237, SVT_ULLAGE },                                  //  {"Ullage"       ,"",SVT_ULLAGE},
     21              { L_WORD916, L_WORD917, SVT_ULLAGE_UTI },                             // {"Ullage UTI" ,"UTI" ,SVT_ULLAGE},
     22              { L_WORD1064, L_WORD1065, SVT_ULLAGE_RADAR },                             // {"Ullage Radar" ,"URad",SVT_ULLAGE_RADAR},
     23              { L_WORD44, L_WORD237, SVT_VOLUME },                                  //  {"Volume"       ,"",SVT_VOLUME},
     24              { L_WORD310, L_WORD237, SVT_VOLPERCENT },                              //  {"Volume%"      ,"",SVT_VOLPERCENT},
     25              { L_WORD776, L_WORD777, SVT_CAPACITY },                               // {"Capacity"      ,"Cap" ,SVT_CAPACITY},
     26              { L_WORD45, L_WORD237, SVT_WEIGHT },                                  //  {"Weight"       ,"",SVT_WEIGHT},
     27              { L_WORD83, L_WORD237, SVT_DENSITY },                                 //  {"Density"      ,"",SVT_DENSITY},
     28              { L_WORD338, L_WORD237, SVT_TEMP },                                    //  {"Temperature"  ,"",SVT_TEMP},
     29              { L_WORD360, L_WORD237, SVT_T1 },                                      //  {"Bottom Temperature"  ,"",SVT_T1},
     30              { L_WORD361, L_WORD237, SVT_T2 },                                      //  {"Middle Temperature"  ,"",SVT_T3},
     31              { L_WORD362, L_WORD237, SVT_T3 },                                      //  {"Upper Temperature"  ,"",SVT_T4},
     32              { L_WORD363, L_WORD237, SVT_TT },                                      //  {"Top Temperature"  ,"",SVT_TT},
     33              { L_WORD311, L_WORD237, SVT_PRESSURE },                                //  {"Pressure"     ,"",SVT_PRESSURE},
     34              { L_WORD247, L_WORD237, SVT_LOADRATE },                                //  {"Loadrate"     ,"",SVT_LOADRATE},
     35              { L_WORD314, L_WORD237, SVT_FINISH_TIME },                             //  {"FinishTime"   ,"",SVT_FINISH_TIME},
     36              { L_WORD315, L_WORD237, SVT_REMAINING_TIME },                          //  {"RemTime"      ,"",SVT_REMAINING_TIME},
     37              { L_WORD316, L_WORD237, SVT_CARGO_TYPE },                              //  {"CargoType"    ,"",SVT_CARGO_TYPE},
     38              { L_WORD848, L_WORD237, SVT_INTERFACE },                               //  {"Interface"    ,"",SVT_INTERFACE},
     39          };
     40          
     41          int SizeofSelectTankValueList   = NELEMENTS(SelectTankValueList);
   \                     SizeofSelectTankValueList:
   \   00000000                      DS8 4
   \   00000004                      REQUIRE `?<Initializer for SizeofSelectTankValueList>`
     42          
     43          
     44          // Note that the short name pointer is used as object pointer in this list
     45          ValueObjList                         SelectAllSysValList[] = {
     46              { L_WORD404, (void *)&PROAtmReference::PROAtmRefPtr, SVT_ATM_PRESSURE },         // {"AtmPress"         ,(void*)&PROAtmReference::PROAtmRefPtr   ,SVT_ATM_PRESSURE}
     47              { L_WORD768, (void *)&PROSystemData::TXUSystemData, SVT_TRIM_ANGLE },           // {"Trim angle"      ,(void*)&PROSystemData::TXUSystemData  ,SVT_TRIM_ANGLE},
     48              { L_WORD425, (void *)&PROSystemData::TXUSystemData, SVT_TRIM_DEG },             // {"Trim in deg"      ,(void*)&PROSystemData::TXUSystemData  ,SVT_TRIM_ANGLE},
     49              { L_WORD426, (void *)&PROSystemData::TXUSystemData, SVT_TRIM_M },               // {"Trim in meter"    ,(void*)&PROSystemData::TXUSystemData  ,SVT_TRIM_M},
     50              { L_WORD768, (void *)&PROSystemData::TXUSystemData, SVT_LIST_ANGLE },           // {"List angle"      ,(void*)&PROSystemData::TXUSystemData  ,SVT_LIST_ANGLE},
     51              { L_WORD427, (void *)&PROSystemData::TXUSystemData, SVT_LIST_DEG },             // {"List in deg"      ,(void*)&PROSystemData::TXUSystemData  ,SVT_LIST_ANGLE},
     52              { L_WORD447, (void *)&PRODraftSystem::PRODraftSysPtr, SVT_LIST_M },               // {"List in meter"    ,(void*)&PRODraftSystem::PRODraftSysPtr ,SVT_LIST_M},
     53              { L_WORD428, (void *)&PRODraftSystem::PRODraftSysPtr, SVT_DF },                   // {"DF (User select)" ,(void*)&PRODraftSystem::PRODraftSysPtr ,SVT_DF},
     54              { L_WORD429, (void *)&PRODraftSystem::PRODraftSysPtr, SVT_DA },                   // {"DA (User select)" ,(void*)&PRODraftSystem::PRODraftSysPtr ,SVT_DA},
     55              { L_WORD430, (void *)&PRODraftSystem::PRODraftSysPtr, SVT_DF_MARK },              // {"DF@Mark"          ,(void*)&PRODraftSystem::PRODraftSysPtr ,SVT_DF_MARK},
     56              { L_WORD431, (void *)&PRODraftSystem::PRODraftSysPtr, SVT_DA_MARK },              // {"DA@Mark"          ,(void*)&PRODraftSystem::PRODraftSysPtr ,SVT_DA_MARK},
     57              { L_WORD432, (void *)&PRODraftSystem::PRODraftSysPtr, SVT_DF_PP },                // {"DF@PP"            ,(void*)&PRODraftSystem::PRODraftSysPtr ,SVT_DF_PP},
     58              { L_WORD433, (void *)&PRODraftSystem::PRODraftSysPtr, SVT_DA_PP },                // {"DA@PP"            ,(void*)&PRODraftSystem::PRODraftSysPtr ,SVT_DA_PP},
     59              { L_WORD421, (void *)&PRODraftSystem::PRODraftSysPtr, SVT_DP },                   // {"DP"               ,(void*)&PRODraftSystem::PRODraftSysPtr ,SVT_DP},
     60              { L_WORD422, (void *)&PRODraftSystem::PRODraftSysPtr, SVT_DS },                   // {"DS"               ,(void*)&PRODraftSystem::PRODraftSysPtr ,SVT_DS},
     61          };
     62          
     63          int SizeofSelectAllSysValList   = NELEMENTS(SelectAllSysValList);
   \                     SizeofSelectAllSysValList:
   \   00000004                      DS8 4
   \   00000008                      REQUIRE `?<Initializer for SizeofSelectAllSysValList>`
     64          
     65          
     66          ValueList  SelectLPressValueList[] = {
     67              { L_WORD311, L_WORD237, SVT_PRESSURE },   //   {"Pressure"     ,"",SVT_PRESSURE},
     68          };
     69          
     70          int SizeofSelectLPressValueList = NELEMENTS(SelectLPressValueList);
   \                     SizeofSelectLPressValueList:
   \   00000008                      DS8 4
   \   0000000C                      REQUIRE `?<Initializer for SizeofSelectLPressValueList>`
     71          
     72          
     73          ValueList SelectTempValueList[] = {
     74              { L_WORD11, L_WORD237, SVT_TEMP },  //   {"Temperature"  ,"",SVT_TEMP},
     75              { L_WORD360, L_WORD237, SVT_T1  },  //  {"Bottom Temperature"  ,"",SVT_T1},
     76              { L_WORD361, L_WORD237, SVT_T2  },  //  {"Middle Temperature"  ,"",SVT_T3},
     77              { L_WORD362, L_WORD237, SVT_T3  },  //  {"Upper Temperature"  ,"",SVT_T4},
     78          };
     79          
     80          int SizeofSelectTempValueList   = NELEMENTS(SelectTempValueList);
   \                     SizeofSelectTempValueList:
   \   0000000C                      DS8 4
   \   00000010                      REQUIRE `?<Initializer for SizeofSelectTempValueList>`
   \                     SelectTankValueList:
   \   00000010                      DS8 276
   \   00000124                      REQUIRE `?<Initializer for SelectTankValueList>`
   \                     SelectAllSysValList:
   \   00000124                      DS8 180
   \   000001D8                      REQUIRE `?<Initializer for SelectAllSysValList>`
   \                     SelectLPressValueList:
   \   000001D8                      DS8 12
   \   000001E4                      REQUIRE `?<Initializer for SelectLPressValueList>`
   \                     SelectTempValueList:
   \   000001E4                      DS8 48
   \   00000214                      REQUIRE `?<Initializer for SelectTempValueList>`
     81          
     82          
     83          

   \                                 In segment DATA_C, align 4, align-sorted
     84          vector<AnPro3object *>AnPro3object   ::AnPro3objectVector;
   \                     ?_0:
   \   00000000   ............       DC32 ?_1, ??AnPro3objectVector, `?~vector`
   \              ............
   \   0000000C   ............       DC32 ?_3, ??ObjectSet, `?~set`
   \              ............

   \                                 In segment DATA_Z, align 4, align-sorted
     85          set<PRogramObjectBase *>AnPro3object ::ObjectSet;
   \                     ??ObjectSet:
   \   00000000                      DS8 24
   \                     ??AnPro3objectVector:
   \   00000018                      DS8 12
     86          //---------------------------------------------------------------------------
     87          
     88          

   \                                 In segment CODE, align 4, keep-with-next
     89          AnPro3object::AnPro3object(unsigned IDNum):PRogramObject(false ) {
   \                     ??AnPro3object:
   \   00000000   77402DE9           PUSH     {R0-R2,R4-R6,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
   \   0000000C   0010A0E3           MOV      R1,#+0
   \   00000010   ........           _BLF     ??PRogramObject,??PRogramObject??rA
   \   00000014   ........           LDR      R0,??DataTable4  ;; ??__vtbl
   \   00000018   836F84E2           ADD      R6,R4,#+524
   \   0000001C   A40084E5           STR      R0,[R4, #+164]
   \   00000020   540F84E2           ADD      R0,R4,#+336
   \   00000024   ........           _BLF     ??AnsiString,??AnsiString??rA
   \   00000028   5B0F84E2           ADD      R0,R4,#+364
   \   0000002C   ........           _BLF     ??AnsiString,??AnsiString??rA
   \   00000030   640F84E2           ADD      R0,R4,#+400
   \   00000034   ........           _BLF     ??_Zero,??_Zero??rA
   \   00000038   670F84E2           ADD      R0,R4,#+412
   \   0000003C   ........           _BLF     ??_Zero,??_Zero??rA
   \   00000040   6A0F84E2           ADD      R0,R4,#+424
   \   00000044   ........           _BLF     ??_Zero,??_Zero??rA
   \   00000048   6D0F84E2           ADD      R0,R4,#+436
   \   0000004C   ........           _BLF     ??_Zero,??_Zero??rA
   \   00000050   730F84E2           ADD      R0,R4,#+460
   \   00000054   ........           _BLF     ??AnsiString,??AnsiString??rA
   \   00000058   7D0F84E2           ADD      R0,R4,#+500
   \   0000005C   ........           _BLF     ??_Zero,??_Zero??rA
   \   00000060   800F84E2           ADD      R0,R4,#+512
   \   00000064   ........           _BLF     ??_Zero,??_Zero??rA
   \   00000068   0110A0E3           MOV      R1,#+1
   \   0000006C   0D00A0E1           MOV      R0,SP
   \   00000070   ........           _BLF     __data_memzero,??__data_memzero??rA
   \   00000074   0600A0E1           MOV      R0,R6
   \   00000078   ........           _BLF     ??_Clear,??_Clear??rA
   \   0000007C   0000DDE5           LDRB     R0,[SP, #+0]
   \   00000080   1400C6E5           STRB     R0,[R6, #+20]
     90              ObjectSet.insert(this);
   \   00000084   ........           LDR      R6,??DataTable2  ;; ??ObjectSet
   \   00000088   890F84E2           ADD      R0,R4,#+548
   \   0000008C   ........           _BLF     ??set,??set??rA
   \   00000090   8F0F84E2           ADD      R0,R4,#+572
   \   00000094   ........           _BLF     ??set,??set??rA
   \   00000098   0420A0E1           MOV      R2,R4
   \   0000009C   0610A0E1           MOV      R1,R6
   \   000000A0   04008DE2           ADD      R0,SP,#+4
   \   000000A4   ........           _BLF     ??insert,??insert??rA
     91              AnPro3objectVector.push_back(this);
   \   000000A8   0410A0E1           MOV      R1,R4
   \   000000AC   180086E2           ADD      R0,R6,#+24
   \   000000B0   ........           _BLF     ??_Push_back0,??_Push_back0??rA
     92              if (IDNum == 0) {
   \   000000B4   000055E3           CMP      R5,#+0
   \   000000B8   0500001A           BNE      ??AnPro3object_1
     93                  IDNumber = (C_PRO_ANPRO3 << 16) + AnPro3objectVector.size();
   \   000000BC   1C0096E5           LDR      R0,[R6, #+28]
   \   000000C0   181096E5           LDR      R1,[R6, #+24]
   \   000000C4   010040E0           SUB      R0,R0,R1
   \   000000C8   4016A0E3           MOV      R1,#+67108864
   \   000000CC   981881E3           ORR      R1,R1,#0x980000
   \   000000D0   205181E0           ADD      R5,R1,R0, LSR #+2
     94              } else {
     95                  IDNumber = IDNum;
   \                     ??AnPro3object_1:
   \   000000D4   9C5084E5           STR      R5,[R4, #+156]
     96              }
     97              Initiate();
   \   000000D8   0400A0E1           MOV      R0,R4
   \   000000DC   ........           BL       ??Initiate
     98          }
   \   000000E0   0400A0E1           MOV      R0,R4
   \   000000E4   7E40BDE8           POP      {R1-R6,LR}
   \   000000E8   1EFF2FE1           BX       LR               ;; return
     99          

   \                                 In segment CODE, align 4, keep-with-next
    100          void AnPro3object::Initiate(void) {
   \                     ??Initiate:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   1CD04DE2           SUB      SP,SP,#+28
   \   00000008   0040A0E1           MOV      R4,R0
    101              TCUAddress              = 0;
   \   0000000C   0050A0E3           MOV      R5,#+0
   \   00000010   885184E5           STR      R5,[R4, #+392]
    102              RequestMode             = false;
   \   00000014   0000A0E3           MOV      R0,#+0
   \   00000018   C001C4E5           STRB     R0,[R4, #+448]
    103              IncludeHWStatus         = false;
   \   0000001C   ED01C4E5           STRB     R0,[R4, #+493]
    104              IncludeAlarm            = false;
   \   00000020   EE01C4E5           STRB     R0,[R4, #+494]
    105              SOAllExtraSpace         = false;
   \   00000024   F001C4E5           STRB     R0,[R4, #+496]
    106              Delay                   = ANPRO3_DEFAULT_DELAY;
   \   00000028   FA0FA0E3           MOV      R0,#+1000
   \   0000002C   E80184E5           STR      R0,[R4, #+488]
    107              Checksum_Type           = ANPRO3_NO_CHECKSUM;
   \   00000030   C45184E5           STR      R5,[R4, #+452]
    108              Separator               = ' ';
   \   00000034   2000A0E3           MOV      R0,#+32
   \   00000038   EC01C4E5           STRB     R0,[R4, #+492]
    109              SyncStr                 = "@@";
   \   0000003C   1A1F8FE2           ADR      R1,??Initiate_1  ;; "@@"
   \   00000040   0D00A0E1           MOV      R0,SP
   \   00000044   ........           _BLF     ??AnsiString_1,??AnsiString??rA_1
   \   00000048   ........           LDR      R1,??DataTable3  ;; ??npos
   \   0000004C   0520A0E1           MOV      R2,R5
   \   00000050   003091E5           LDR      R3,[R1, #+0]
   \   00000054   0010A0E1           MOV      R1,R0
   \   00000058   730F84E2           ADD      R0,R4,#+460
   \   0000005C   ........           _BLF     ??assign,??assign??rA
   \   00000060   0520A0E1           MOV      R2,R5
   \   00000064   0110A0E3           MOV      R1,#+1
   \   00000068   0D00A0E1           MOV      R0,SP
   \   0000006C   ........           _BLF     ??_Tidy,??_Tidy??rA
    110              WinUart                 = -1;
   \   00000070   0500E0E1           MVN      R0,R5
   \   00000074   8C0184E5           STR      R0,[R4, #+396]
    111              ValueErrorAction        = SVT_FLAG_ONLY_NUMBER;
   \   00000078   0100A0E3           MOV      R0,#+1
   \   0000007C   C80184E5           STR      R0,[R4, #+456]
    112              ClearRxBufAfterReceive  = false;
   \   00000080   0500A0E1           MOV      R0,R5
   \   00000084   EF01C4E5           STRB     R0,[R4, #+495]
    113              SendAlarmsOnly          = false;
   \   00000088   F101C4E5           STRB     R0,[R4, #+497]
    114              AlarmList               = new PROLinkedList(true);
   \   0000008C   0010A0E1           MOV      R1,R0
   \   00000090   0100A0E3           MOV      R0,#+1
   \   00000094   ........           _BLF     `??new PROLinkedList`,`??new PROLinkedList??rA`
   \   00000098   540284E5           STR      R0,[R4, #+596]
    115              isNEMA                  = false;
   \   0000009C   010005E2           AND      R0,R5,#0x1
   \   000000A0   4801C4E5           STRB     R0,[R4, #+328]
    116          }
   \   000000A4   1CD08DE2           ADD      SP,SP,#+28
   \   000000A8   ........           B        ?Subroutine30
   \                     ??Initiate_1:
   \   000000AC   40400000           DC8      "@@",+0

   \                                 In segment CODE, align 4, keep-with-next
   \                     ?Subroutine30:
   \   00000000   3040BDE8           POP      {R4,R5,LR}
   \   00000004   1EFF2FE1           BX       LR               ;; return
    117          

   \                                 In segment CODE, align 4, keep-with-next
    118          AnPro3object::~AnPro3object(void) {
   \                     `?~AnPro3object`:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
   \   0000000C   000054E3           CMP      R4,#+0
   \   00000010   3A00000A           BEQ      `?~AnPro3object_1`
   \   00000014   ........           LDR      R0,??DataTable4  ;; ??__vtbl
    119              delete AlarmList;
    120          }
   \   00000018   806F84E2           ADD      R6,R4,#+512
   \   0000001C   A40084E5           STR      R0,[R4, #+164]
   \   00000020   540294E5           LDR      R0,[R4, #+596]
   \   00000024   ........           _BLF     `??delete ~PROLinkedList`,`??delete ~PROLinkedList??rA`
   \   00000028   8F0F84E2           ADD      R0,R4,#+572
   \   0000002C   ........           _BLF     `?~set_1`,`?~set??rA`
   \   00000030   890F84E2           ADD      R0,R4,#+548
   \   00000034   ........           _BLF     `?~set_1`,`?~set??rA`
   \   00000038   830F84E2           ADD      R0,R4,#+524
   \   0000003C   ........           _BLF     ??clear,??clear??rA
   \   00000040   0600A0E1           MOV      R0,R6
   \   00000044   ........           _BLF     ??_Tidy0_1,??_Tidy0??rA_2
   \   00000048   0600A0E1           MOV      R0,R6
   \   0000004C   ........           _BLF     ??_Zero,??_Zero??rA
   \   00000050   7D6F84E2           ADD      R6,R4,#+500
   \   00000054   0600A0E1           MOV      R0,R6
   \   00000058   ........           _BLF     ??_Tidy0,??_Tidy0??rA
   \   0000005C   0600A0E1           MOV      R0,R6
   \   00000060   ........           _BLF     ??_Zero,??_Zero??rA
   \   00000064   0020A0E3           MOV      R2,#+0
   \   00000068   0110A0E3           MOV      R1,#+1
   \   0000006C   730F84E2           ADD      R0,R4,#+460
   \   00000070   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000074   6D6F84E2           ADD      R6,R4,#+436
   \   00000078   0600A0E1           MOV      R0,R6
   \   0000007C   ........           _BLF     ??_Tidy0,??_Tidy0??rA
   \   00000080   0600A0E1           MOV      R0,R6
   \   00000084   ........           _BLF     ??_Zero,??_Zero??rA
   \   00000088   6A6F84E2           ADD      R6,R4,#+424
   \   0000008C   0600A0E1           MOV      R0,R6
   \   00000090   ........           _BLF     ??_Tidy0,??_Tidy0??rA
   \   00000094   0600A0E1           MOV      R0,R6
   \   00000098   ........           _BLF     ??_Zero,??_Zero??rA
   \   0000009C   676F84E2           ADD      R6,R4,#+412
   \   000000A0   0600A0E1           MOV      R0,R6
   \   000000A4   ........           _BLF     ??_Tidy0,??_Tidy0??rA
   \   000000A8   0600A0E1           MOV      R0,R6
   \   000000AC   ........           _BLF     ??_Zero,??_Zero??rA
   \   000000B0   646F84E2           ADD      R6,R4,#+400
   \   000000B4   0600A0E1           MOV      R0,R6
   \   000000B8   ........           _BLF     ??_Tidy0,??_Tidy0??rA
   \   000000BC   0600A0E1           MOV      R0,R6
   \   000000C0   ........           _BLF     ??_Zero,??_Zero??rA
   \   000000C4   0020A0E3           MOV      R2,#+0
   \   000000C8   0110A0E3           MOV      R1,#+1
   \   000000CC   5B0F84E2           ADD      R0,R4,#+364
   \   000000D0   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000000D4   0020A0E3           MOV      R2,#+0
   \   000000D8   0110A0E3           MOV      R1,#+1
   \   000000DC   540F84E2           ADD      R0,R4,#+336
   \   000000E0   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000000E4   0010A0E3           MOV      R1,#+0
   \   000000E8   0400A0E1           MOV      R0,R4
   \   000000EC   ........           _BLF     `?~PRogramObject`,`?~PRogramObject??rA`
   \   000000F0   010015E3           TST      R5,#0x1
   \   000000F4   0100000A           BEQ      `?~AnPro3object_1`
   \   000000F8   0400A0E1           MOV      R0,R4
   \   000000FC   ........           _BLF     `??operator delete`,`??operator delete??rA`
   \                     `?~AnPro3object_1`:
   \   00000100   ........           B        ??Subroutine29_1

   \                                 In segment CODE, align 4, keep-with-next
   \                     ?Subroutine29:
   \   00000000   401E81E3           ORR      R1,R1,#0x400
   \   00000004   ........           _BLF     ??GetANProObject,??GetANProObject??rA
   \   00000008   0020B0E1           MOVS     R2,R0
   \   0000000C   0400000A           BEQ      ??Subroutine29_0
   \   00000010   0160A0E3           MOV      R6,#+1
   \   00000014   053F8FE2           ADR      R3,??Subroutine29_2  ;; "TO"
   \   00000018   0510A0E1           MOV      R1,R5
   \   0000001C   0400A0E1           MOV      R0,R4
   \   00000020   ........           BL       ??SendObject
   \                     ??Subroutine29_0:
   \   00000024   0600A0E1           MOV      R0,R6
   \                     ??Subroutine29_1:
   \   00000028   7040BDE8           POP      {R4-R6,LR}
   \   0000002C   1EFF2FE1           BX       LR               ;; return
   \                     ??Subroutine29_2:
   \   00000030   544F0000           DC8      "TO",+0
    121          
    122          ///////////////////////////////////////////////////////////////
    123          //
    124          // Routines for the Configuration
    125          //
    126          ///////////////////////////////////////////////////////////////
    127          

   \                                 In segment CODE, align 4, keep-with-next
    128          void AnPro3object::WriteConfigToFile(TSNConfigString &ConfigString) {
   \                     ??WriteConfigToFile:
   \   00000000   F24F2DE9           PUSH     {R1,R4-R11,LR}
    129          
    130              AnsiString LocalString;
    131              LocalString += KeyWord(C_PRO_ANPRO3) + CrLfStr;
   \   00000004   606F9FE5           LDR      R6,??WriteConfigToFile_1  ;; CrLfStr
   \   00000008   42DF4DE2           SUB      SP,SP,#+264
   \   0000000C   40DE4DE2           SUB      SP,SP,#+1024
    132              LocalString += TabStr1 + KeyWord(C_TCU_ADDRESS) + (AnsiString)TCUAddress + CrLfStr;
   \   00000010   588F9FE5           LDR      R8,??WriteConfigToFile_1+0x4  ;; TabStr1
   \   00000014   0050A0E1           MOV      R5,R0
   \   00000018   54008DE2           ADD      R0,SP,#+84
   \   0000001C   ........           _BLF     ??AnsiString,??AnsiString??rA
   \   00000020   9810A0E3           MOV      R1,#+152
   \   00000024   401E81E3           ORR      R1,R1,#0x400
   \   00000028   540F8DE2           ADD      R0,SP,#+336
   \   0000002C   ........           _BLF     ??KeyWord,??KeyWord??rA
   \   00000030   0620A0E1           MOV      R2,R6
   \   00000034   541F8DE2           ADD      R1,SP,#+336
   \   00000038   4D0F8DE2           ADD      R0,SP,#+308
   \   0000003C   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000040   2C0F9FE5           LDR      R0,??WriteConfigToFile_1+0x8  ;; ??npos
   \   00000044   0020A0E3           MOV      R2,#+0
   \   00000048   007090E5           LDR      R7,[R0, #+0]
   \   0000004C   4D1F8DE2           ADD      R1,SP,#+308
   \   00000050   0730A0E1           MOV      R3,R7
   \   00000054   54008DE2           ADD      R0,SP,#+84
   \   00000058   ........           _BLF     ??append,??append??rA
   \   0000005C   0020A0E3           MOV      R2,#+0
   \   00000060   0110A0E3           MOV      R1,#+1
   \   00000064   4D0F8DE2           ADD      R0,SP,#+308
   \   00000068   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   0000006C   0020A0E3           MOV      R2,#+0
   \   00000070   0110A0E3           MOV      R1,#+1
   \   00000074   540F8DE2           ADD      R0,SP,#+336
   \   00000078   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   0000007C   881195E5           LDR      R1,[R5, #+392]
   \   00000080   7C008DE2           ADD      R0,SP,#+124
   \   00000084   400E80E2           ADD      R0,R0,#+1024
   \   00000088   ........           _BLF     ??AnsiString_2,??AnsiString??rA_2
   \   0000008C   0040A0E1           MOV      R4,R0
   \   00000090   0510A0E3           MOV      R1,#+5
   \   00000094   801E81E3           ORR      R1,R1,#0x800
   \   00000098   700F8DE2           ADD      R0,SP,#+448
   \   0000009C   ........           _BLF     ??KeyWord,??KeyWord??rA
   \   000000A0   702F8DE2           ADD      R2,SP,#+448
   \   000000A4   0810A0E1           MOV      R1,R8
   \   000000A8   690F8DE2           ADD      R0,SP,#+420
   \   000000AC   ........           _BLF     `??operator+`,`??operator+??rA`
   \   000000B0   0420A0E1           MOV      R2,R4
   \   000000B4   691F8DE2           ADD      R1,SP,#+420
   \   000000B8   620F8DE2           ADD      R0,SP,#+392
   \   000000BC   ........           _BLF     `??operator+`,`??operator+??rA`
   \   000000C0   0620A0E1           MOV      R2,R6
   \   000000C4   621F8DE2           ADD      R1,SP,#+392
   \   000000C8   5B0F8DE2           ADD      R0,SP,#+364
   \   000000CC   ........           _BLF     `??operator+`,`??operator+??rA`
   \   000000D0   0730A0E1           MOV      R3,R7
   \   000000D4   0020A0E3           MOV      R2,#+0
   \   000000D8   5B1F8DE2           ADD      R1,SP,#+364
   \   000000DC   54008DE2           ADD      R0,SP,#+84
   \   000000E0   ........           _BLF     ??append,??append??rA
   \   000000E4   0020A0E3           MOV      R2,#+0
   \   000000E8   0110A0E3           MOV      R1,#+1
   \   000000EC   5B0F8DE2           ADD      R0,SP,#+364
   \   000000F0   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000000F4   0020A0E3           MOV      R2,#+0
   \   000000F8   0110A0E3           MOV      R1,#+1
   \   000000FC   620F8DE2           ADD      R0,SP,#+392
   \   00000100   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000104   0020A0E3           MOV      R2,#+0
   \   00000108   0110A0E3           MOV      R1,#+1
   \   0000010C   7C008DE2           ADD      R0,SP,#+124
   \   00000110   400E80E2           ADD      R0,R0,#+1024
   \   00000114   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000118   0020A0E3           MOV      R2,#+0
   \   0000011C   0110A0E3           MOV      R1,#+1
   \   00000120   690F8DE2           ADD      R0,SP,#+420
   \   00000124   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000128   0020A0E3           MOV      R2,#+0
   \   0000012C   0110A0E3           MOV      R1,#+1
   \   00000130   700F8DE2           ADD      R0,SP,#+448
   \   00000134   ........           _BLF     ??_Tidy,??_Tidy??rA
    133              LocalString += TabStr1 + KeyWord(C_TCU_PORT_NO) + (AnsiString)WinUart + CrLfStr;
   \   00000138   8C1195E5           LDR      R1,[R5, #+396]
   \   0000013C   98008DE2           ADD      R0,SP,#+152
   \   00000140   400E80E2           ADD      R0,R0,#+1024
   \   00000144   ........           _BLF     ??AnsiString_2,??AnsiString??rA_2
   \   00000148   0040A0E1           MOV      R4,R0
   \   0000014C   0B10A0E3           MOV      R1,#+11
   \   00000150   801E81E3           ORR      R1,R1,#0x800
   \   00000154   8C0F8DE2           ADD      R0,SP,#+560
   \   00000158   ........           _BLF     ??KeyWord,??KeyWord??rA
   \   0000015C   8C2F8DE2           ADD      R2,SP,#+560
   \   00000160   0810A0E1           MOV      R1,R8
   \   00000164   850F8DE2           ADD      R0,SP,#+532
   \   00000168   ........           _BLF     `??operator+`,`??operator+??rA`
   \   0000016C   0420A0E1           MOV      R2,R4
   \   00000170   851F8DE2           ADD      R1,SP,#+532
   \   00000174   7E0F8DE2           ADD      R0,SP,#+504
   \   00000178   ........           _BLF     `??operator+`,`??operator+??rA`
   \   0000017C   0620A0E1           MOV      R2,R6
   \   00000180   7E1F8DE2           ADD      R1,SP,#+504
   \   00000184   770F8DE2           ADD      R0,SP,#+476
   \   00000188   ........           _BLF     `??operator+`,`??operator+??rA`
   \   0000018C   0730A0E1           MOV      R3,R7
   \   00000190   0020A0E3           MOV      R2,#+0
   \   00000194   771F8DE2           ADD      R1,SP,#+476
   \   00000198   54008DE2           ADD      R0,SP,#+84
   \   0000019C   ........           _BLF     ??append,??append??rA
   \   000001A0   0020A0E3           MOV      R2,#+0
   \   000001A4   0110A0E3           MOV      R1,#+1
   \   000001A8   770F8DE2           ADD      R0,SP,#+476
   \   000001AC   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000001B0   0020A0E3           MOV      R2,#+0
   \   000001B4   0110A0E3           MOV      R1,#+1
   \   000001B8   7E0F8DE2           ADD      R0,SP,#+504
   \   000001BC   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000001C0   0020A0E3           MOV      R2,#+0
   \   000001C4   0110A0E3           MOV      R1,#+1
   \   000001C8   98008DE2           ADD      R0,SP,#+152
   \   000001CC   400E80E2           ADD      R0,R0,#+1024
   \   000001D0   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000001D4   0020A0E3           MOV      R2,#+0
   \   000001D8   0110A0E3           MOV      R1,#+1
   \   000001DC   850F8DE2           ADD      R0,SP,#+532
   \   000001E0   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000001E4   0020A0E3           MOV      R2,#+0
   \   000001E8   0110A0E3           MOV      R1,#+1
   \   000001EC   8C0F8DE2           ADD      R0,SP,#+560
   \   000001F0   ........           _BLF     ??_Tidy,??_Tidy??rA
    134          
    135              LocalString += MakeConfigString();   //common
   \   000001F4   A43095E5           LDR      R3,[R5, #+164]
   \   000001F8   0020A0E3           MOV      R2,#+0
   \   000001FC   0C3093E5           LDR      R3,[R3, #+12]
   \   00000200   931F8DE2           ADD      R1,SP,#+588
   \   00000204   0500A0E1           MOV      R0,R5
   \   00000208   0FE0A0E1           MOV      LR,PC
   \   0000020C   13FF2FE1           BX       R3
   \   00000210   0730A0E1           MOV      R3,R7
   \   00000214   0020A0E3           MOV      R2,#+0
   \   00000218   931F8DE2           ADD      R1,SP,#+588
   \   0000021C   54008DE2           ADD      R0,SP,#+84
   \   00000220   ........           _BLF     ??append,??append??rA
   \   00000224   0020A0E3           MOV      R2,#+0
   \   00000228   0110A0E3           MOV      R1,#+1
   \   0000022C   930F8DE2           ADD      R0,SP,#+588
   \   00000230   ........           _BLF     ??_Tidy,??_Tidy??rA
    136              if (RequestMode) {
   \   00000234   C001D5E5           LDRB     R0,[R5, #+448]
   \   00000238   000050E3           CMP      R0,#+0
   \   0000023C   1C00000A           BEQ      ??WriteConfigToFile_2
    137                  LocalString += TabStr1 + KeyWord(C_ANPRO3_REQUEST) + CrLfStr;
   \   00000240   0810A0E3           MOV      R1,#+8
   \   00000244   401D81E3           ORR      R1,R1,#0x1000
   \   00000248   38008DE2           ADD      R0,SP,#+56
   \   0000024C   ........           _BLF     ??KeyWord,??KeyWord??rA
   \   00000250   38208DE2           ADD      R2,SP,#+56
   \   00000254   0810A0E1           MOV      R1,R8
   \   00000258   0D00A0E1           MOV      R0,SP
   \   0000025C   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000260   0620A0E1           MOV      R2,R6
   \   00000264   0D10A0E1           MOV      R1,SP
   \   00000268   1C008DE2           ADD      R0,SP,#+28
   \   0000026C   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000270   0730A0E1           MOV      R3,R7
   \   00000274   0020A0E3           MOV      R2,#+0
   \   00000278   1C108DE2           ADD      R1,SP,#+28
   \   0000027C   54008DE2           ADD      R0,SP,#+84
   \   00000280   ........           _BLF     ??append,??append??rA
   \   00000284   0020A0E3           MOV      R2,#+0
   \   00000288   0110A0E3           MOV      R1,#+1
   \   0000028C   1C008DE2           ADD      R0,SP,#+28
   \   00000290   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000294   0020A0E3           MOV      R2,#+0
   \   00000298   0110A0E3           MOV      R1,#+1
   \   0000029C   0D00A0E1           MOV      R0,SP
   \   000002A0   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000002A4   0020A0E3           MOV      R2,#+0
   \   000002A8   0110A0E3           MOV      R1,#+1
   \   000002AC   38008DE2           ADD      R0,SP,#+56
   \   000002B0   ........           _BLF     ??_Tidy,??_Tidy??rA
    138              }
    139              LocalString += TabStr1 + KeyWord(C_ANPRO3_SYNC_STR) + SyncStr + CrLfStr;
   \                     ??WriteConfigToFile_2:
   \   000002B4   0C10A0E3           MOV      R1,#+12
   \   000002B8   401D81E3           ORR      R1,R1,#0x1000
   \   000002BC   AF0F8DE2           ADD      R0,SP,#+700
   \   000002C0   ........           _BLF     ??KeyWord,??KeyWord??rA
   \   000002C4   AF2F8DE2           ADD      R2,SP,#+700
   \   000002C8   0810A0E1           MOV      R1,R8
   \   000002CC   A80F8DE2           ADD      R0,SP,#+672
   \   000002D0   ........           _BLF     `??operator+`,`??operator+??rA`
   \   000002D4   732F85E2           ADD      R2,R5,#+460
   \   000002D8   A81F8DE2           ADD      R1,SP,#+672
   \   000002DC   A10F8DE2           ADD      R0,SP,#+644
   \   000002E0   ........           _BLF     `??operator+`,`??operator+??rA`
   \   000002E4   0620A0E1           MOV      R2,R6
   \   000002E8   A11F8DE2           ADD      R1,SP,#+644
   \   000002EC   9A0F8DE2           ADD      R0,SP,#+616
   \   000002F0   ........           _BLF     `??operator+`,`??operator+??rA`
   \   000002F4   0730A0E1           MOV      R3,R7
   \   000002F8   0020A0E3           MOV      R2,#+0
   \   000002FC   9A1F8DE2           ADD      R1,SP,#+616
   \   00000300   54008DE2           ADD      R0,SP,#+84
   \   00000304   ........           _BLF     ??append,??append??rA
   \   00000308   0020A0E3           MOV      R2,#+0
   \   0000030C   0110A0E3           MOV      R1,#+1
   \   00000310   9A0F8DE2           ADD      R0,SP,#+616
   \   00000314   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000318   0020A0E3           MOV      R2,#+0
   \   0000031C   0110A0E3           MOV      R1,#+1
   \   00000320   A10F8DE2           ADD      R0,SP,#+644
   \   00000324   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000328   0020A0E3           MOV      R2,#+0
   \   0000032C   0110A0E3           MOV      R1,#+1
   \   00000330   A80F8DE2           ADD      R0,SP,#+672
   \   00000334   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000338   0020A0E3           MOV      R2,#+0
   \   0000033C   0110A0E3           MOV      R1,#+1
   \   00000340   AF0F8DE2           ADD      R0,SP,#+700
   \   00000344   ........           _BLF     ??_Tidy,??_Tidy??rA
    140              LocalString += TabStr1 + KeyWord(C_ANPRO3_SEPARATOR) + (AnsiString)((int)Separator) + CrLfStr;
   \   00000348   EC11D5E5           LDRB     R1,[R5, #+492]
   \   0000034C   B4008DE2           ADD      R0,SP,#+180
   \   00000350   400E80E2           ADD      R0,R0,#+1024
   \   00000354   ........           _BLF     ??AnsiString_2,??AnsiString??rA_2
   \   00000358   0040A0E1           MOV      R4,R0
   \   0000035C   0910A0E3           MOV      R1,#+9
   \   00000360   401D81E3           ORR      R1,R1,#0x1000
   \   00000364   CB0F8DE2           ADD      R0,SP,#+812
   \   00000368   ........           _BLF     ??KeyWord,??KeyWord??rA
   \   0000036C   CB2F8DE2           ADD      R2,SP,#+812
   \   00000370   0810A0E1           MOV      R1,R8
   \   00000374   C40F8DE2           ADD      R0,SP,#+784
   \   00000378   ........           _BLF     `??operator+`,`??operator+??rA`
   \   0000037C   0420A0E1           MOV      R2,R4
   \   00000380   C41F8DE2           ADD      R1,SP,#+784
   \   00000384   BD0F8DE2           ADD      R0,SP,#+756
   \   00000388   ........           _BLF     `??operator+`,`??operator+??rA`
   \   0000038C   0620A0E1           MOV      R2,R6
   \   00000390   BD1F8DE2           ADD      R1,SP,#+756
   \   00000394   B60F8DE2           ADD      R0,SP,#+728
   \   00000398   ........           _BLF     `??operator+`,`??operator+??rA`
   \   0000039C   0730A0E1           MOV      R3,R7
   \   000003A0   0020A0E3           MOV      R2,#+0
   \   000003A4   B61F8DE2           ADD      R1,SP,#+728
   \   000003A8   54008DE2           ADD      R0,SP,#+84
   \   000003AC   ........           _BLF     ??append,??append??rA
   \   000003B0   0020A0E3           MOV      R2,#+0
   \   000003B4   0110A0E3           MOV      R1,#+1
   \   000003B8   B60F8DE2           ADD      R0,SP,#+728
   \   000003BC   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000003C0   0020A0E3           MOV      R2,#+0
   \   000003C4   0110A0E3           MOV      R1,#+1
   \   000003C8   BD0F8DE2           ADD      R0,SP,#+756
   \   000003CC   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000003D0   0020A0E3           MOV      R2,#+0
   \   000003D4   0110A0E3           MOV      R1,#+1
   \   000003D8   B4008DE2           ADD      R0,SP,#+180
   \   000003DC   400E80E2           ADD      R0,R0,#+1024
   \   000003E0   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000003E4   0020A0E3           MOV      R2,#+0
   \   000003E8   0110A0E3           MOV      R1,#+1
   \   000003EC   C40F8DE2           ADD      R0,SP,#+784
   \   000003F0   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000003F4   0020A0E3           MOV      R2,#+0
   \   000003F8   0110A0E3           MOV      R1,#+1
   \   000003FC   CB0F8DE2           ADD      R0,SP,#+812
   \   00000400   ........           _BLF     ??_Tidy,??_Tidy??rA
    141              if (IncludeHWStatus) {
   \   00000404   ED01D5E5           LDRB     R0,[R5, #+493]
   \   00000408   000050E3           CMP      R0,#+0
   \   0000040C   1C00000A           BEQ      ??WriteConfigToFile_3
    142                  LocalString += TabStr1 + KeyWord(C_ANPRO3_INC_HW_STATUS) + CrLfStr;
   \   00000410   0A10A0E3           MOV      R1,#+10
   \   00000414   401D81E3           ORR      R1,R1,#0x1000
   \   00000418   1C008DE2           ADD      R0,SP,#+28
   \   0000041C   ........           _BLF     ??KeyWord,??KeyWord??rA
   \   00000420   1C208DE2           ADD      R2,SP,#+28
   \   00000424   0810A0E1           MOV      R1,R8
   \   00000428   0D00A0E1           MOV      R0,SP
   \   0000042C   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000430   0620A0E1           MOV      R2,R6
   \   00000434   0D10A0E1           MOV      R1,SP
   \   00000438   38008DE2           ADD      R0,SP,#+56
   \   0000043C   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000440   0730A0E1           MOV      R3,R7
   \   00000444   0020A0E3           MOV      R2,#+0
   \   00000448   38108DE2           ADD      R1,SP,#+56
   \   0000044C   54008DE2           ADD      R0,SP,#+84
   \   00000450   ........           _BLF     ??append,??append??rA
   \   00000454   0020A0E3           MOV      R2,#+0
   \   00000458   0110A0E3           MOV      R1,#+1
   \   0000045C   38008DE2           ADD      R0,SP,#+56
   \   00000460   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000464   0020A0E3           MOV      R2,#+0
   \   00000468   0110A0E3           MOV      R1,#+1
   \   0000046C   0D00A0E1           MOV      R0,SP
   \   00000470   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000474   0020A0E3           MOV      R2,#+0
   \   00000478   0110A0E3           MOV      R1,#+1
   \   0000047C   1C008DE2           ADD      R0,SP,#+28
   \   00000480   ........           _BLF     ??_Tidy,??_Tidy??rA
    143              }
    144              if (IncludeAlarm) {
   \                     ??WriteConfigToFile_3:
   \   00000484   EE01D5E5           LDRB     R0,[R5, #+494]
   \   00000488   000050E3           CMP      R0,#+0
   \   0000048C   1C00000A           BEQ      ??WriteConfigToFile_4
    145                  LocalString += TabStr1 + KeyWord(C_ANPRO3_INC_ALARM) + CrLfStr;
   \   00000490   0B10A0E3           MOV      R1,#+11
   \   00000494   401D81E3           ORR      R1,R1,#0x1000
   \   00000498   38008DE2           ADD      R0,SP,#+56
   \   0000049C   ........           _BLF     ??KeyWord,??KeyWord??rA
   \   000004A0   38208DE2           ADD      R2,SP,#+56
   \   000004A4   0810A0E1           MOV      R1,R8
   \   000004A8   0D00A0E1           MOV      R0,SP
   \   000004AC   ........           _BLF     `??operator+`,`??operator+??rA`
   \   000004B0   0620A0E1           MOV      R2,R6
   \   000004B4   0D10A0E1           MOV      R1,SP
   \   000004B8   1C008DE2           ADD      R0,SP,#+28
   \   000004BC   ........           _BLF     `??operator+`,`??operator+??rA`
   \   000004C0   0730A0E1           MOV      R3,R7
   \   000004C4   0020A0E3           MOV      R2,#+0
   \   000004C8   1C108DE2           ADD      R1,SP,#+28
   \   000004CC   54008DE2           ADD      R0,SP,#+84
   \   000004D0   ........           _BLF     ??append,??append??rA
   \   000004D4   0020A0E3           MOV      R2,#+0
   \   000004D8   0110A0E3           MOV      R1,#+1
   \   000004DC   1C008DE2           ADD      R0,SP,#+28
   \   000004E0   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000004E4   0020A0E3           MOV      R2,#+0
   \   000004E8   0110A0E3           MOV      R1,#+1
   \   000004EC   0D00A0E1           MOV      R0,SP
   \   000004F0   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000004F4   0020A0E3           MOV      R2,#+0
   \   000004F8   0110A0E3           MOV      R1,#+1
   \   000004FC   38008DE2           ADD      R0,SP,#+56
   \   00000500   ........           _BLF     ??_Tidy,??_Tidy??rA
    146              }
    147              LocalString += TabStr1 + KeyWord(C_ANPRO3_CHECKSUM) + (AnsiString)Checksum_Type + CrLfStr;
   \                     ??WriteConfigToFile_4:
   \   00000504   C41195E5           LDR      R1,[R5, #+452]
   \   00000508   4D0E8DE2           ADD      R0,SP,#+1232
   \   0000050C   ........           _BLF     ??AnsiString_2,??AnsiString??rA_2
   \   00000510   0040A0E1           MOV      R4,R0
   \   00000514   0710A0E3           MOV      R1,#+7
   \   00000518   401D81E3           ORR      R1,R1,#0x1000
   \   0000051C   E70F8DE2           ADD      R0,SP,#+924
   \   00000520   ........           _BLF     ??KeyWord,??KeyWord??rA
   \   00000524   E72F8DE2           ADD      R2,SP,#+924
   \   00000528   0810A0E1           MOV      R1,R8
   \   0000052C   E00F8DE2           ADD      R0,SP,#+896
   \   00000530   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000534   0420A0E1           MOV      R2,R4
   \   00000538   E01F8DE2           ADD      R1,SP,#+896
   \   0000053C   D90F8DE2           ADD      R0,SP,#+868
   \   00000540   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000544   0620A0E1           MOV      R2,R6
   \   00000548   D91F8DE2           ADD      R1,SP,#+868
   \   0000054C   D20F8DE2           ADD      R0,SP,#+840
   \   00000550   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000554   0730A0E1           MOV      R3,R7
   \   00000558   0020A0E3           MOV      R2,#+0
   \   0000055C   D21F8DE2           ADD      R1,SP,#+840
   \   00000560   54008DE2           ADD      R0,SP,#+84
   \   00000564   ........           _BLF     ??append,??append??rA
   \   00000568   0020A0E3           MOV      R2,#+0
   \   0000056C   0110A0E3           MOV      R1,#+1
   \   00000570   D20F8DE2           ADD      R0,SP,#+840
   \   00000574   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000578   0020A0E3           MOV      R2,#+0
   \   0000057C   0110A0E3           MOV      R1,#+1
   \   00000580   D90F8DE2           ADD      R0,SP,#+868
   \   00000584   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000588   0020A0E3           MOV      R2,#+0
   \   0000058C   0110A0E3           MOV      R1,#+1
   \   00000590   4D0E8DE2           ADD      R0,SP,#+1232
   \   00000594   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000598   0020A0E3           MOV      R2,#+0
   \   0000059C   0110A0E3           MOV      R1,#+1
   \   000005A0   E00F8DE2           ADD      R0,SP,#+896
   \   000005A4   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000005A8   0020A0E3           MOV      R2,#+0
   \   000005AC   0110A0E3           MOV      R1,#+1
   \   000005B0   E70F8DE2           ADD      R0,SP,#+924
   \   000005B4   ........           _BLF     ??_Tidy,??_Tidy??rA
    148              if (Delay != ANPRO3_DEFAULT_DELAY) {
   \   000005B8   E81195E5           LDR      R1,[R5, #+488]
   \   000005BC   FA0F51E3           CMP      R1,#+1000
   \   000005C0   2B00000A           BEQ      ??WriteConfigToFile_5
    149                  LocalString += TabStr1 + KeyWord(C_ANPRO3_DELAY) + (AnsiString)Delay + CrLfStr;
   \   000005C4   8C008DE2           ADD      R0,SP,#+140
   \   000005C8   ........           _BLF     ??AnsiString_2,??AnsiString??rA_2
   \   000005CC   0040A0E1           MOV      R4,R0
   \   000005D0   1110A0E3           MOV      R1,#+17
   \   000005D4   401D81E3           ORR      R1,R1,#0x1000
   \   000005D8   70008DE2           ADD      R0,SP,#+112
   \   000005DC   ........           _BLF     ??KeyWord,??KeyWord??rA
   \   000005E0   70208DE2           ADD      R2,SP,#+112
   \   000005E4   0810A0E1           MOV      R1,R8
   \   000005E8   1C008DE2           ADD      R0,SP,#+28
   \   000005EC   ........           _BLF     `??operator+`,`??operator+??rA`
   \   000005F0   0420A0E1           MOV      R2,R4
   \   000005F4   1C108DE2           ADD      R1,SP,#+28
   \   000005F8   0D00A0E1           MOV      R0,SP
   \   000005FC   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000600   0620A0E1           MOV      R2,R6
   \   00000604   0D10A0E1           MOV      R1,SP
   \   00000608   38008DE2           ADD      R0,SP,#+56
   \   0000060C   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000610   0730A0E1           MOV      R3,R7
   \   00000614   0020A0E3           MOV      R2,#+0
   \   00000618   38108DE2           ADD      R1,SP,#+56
   \   0000061C   54008DE2           ADD      R0,SP,#+84
   \   00000620   ........           _BLF     ??append,??append??rA
   \   00000624   0020A0E3           MOV      R2,#+0
   \   00000628   0110A0E3           MOV      R1,#+1
   \   0000062C   38008DE2           ADD      R0,SP,#+56
   \   00000630   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000634   0020A0E3           MOV      R2,#+0
   \   00000638   0110A0E3           MOV      R1,#+1
   \   0000063C   0D00A0E1           MOV      R0,SP
   \   00000640   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000644   0020A0E3           MOV      R2,#+0
   \   00000648   0110A0E3           MOV      R1,#+1
   \   0000064C   8C008DE2           ADD      R0,SP,#+140
   \   00000650   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000654   0020A0E3           MOV      R2,#+0
   \   00000658   0110A0E3           MOV      R1,#+1
   \   0000065C   1C008DE2           ADD      R0,SP,#+28
   \   00000660   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000664   0020A0E3           MOV      R2,#+0
   \   00000668   0110A0E3           MOV      R1,#+1
   \   0000066C   70008DE2           ADD      R0,SP,#+112
   \   00000670   ........           _BLF     ??_Tidy,??_Tidy??rA
    150              }
    151              if (ClearRxBufAfterReceive) {
   \                     ??WriteConfigToFile_5:
   \   00000674   EF01D5E5           LDRB     R0,[R5, #+495]
   \   00000678   000050E3           CMP      R0,#+0
   \   0000067C   1C00000A           BEQ      ??WriteConfigToFile_6
    152                  LocalString += TabStr1 + KeyWord(C_ANPRO3_CLEAR_RX_BUF) + CrLfStr;
   \   00000680   0F10A0E3           MOV      R1,#+15
   \   00000684   401D81E3           ORR      R1,R1,#0x1000
   \   00000688   38008DE2           ADD      R0,SP,#+56
   \   0000068C   ........           _BLF     ??KeyWord,??KeyWord??rA
   \   00000690   38208DE2           ADD      R2,SP,#+56
   \   00000694   0810A0E1           MOV      R1,R8
   \   00000698   0D00A0E1           MOV      R0,SP
   \   0000069C   ........           _BLF     `??operator+`,`??operator+??rA`
   \   000006A0   0620A0E1           MOV      R2,R6
   \   000006A4   0D10A0E1           MOV      R1,SP
   \   000006A8   1C008DE2           ADD      R0,SP,#+28
   \   000006AC   ........           _BLF     `??operator+`,`??operator+??rA`
   \   000006B0   0730A0E1           MOV      R3,R7
   \   000006B4   0020A0E3           MOV      R2,#+0
   \   000006B8   1C108DE2           ADD      R1,SP,#+28
   \   000006BC   54008DE2           ADD      R0,SP,#+84
   \   000006C0   ........           _BLF     ??append,??append??rA
   \   000006C4   0020A0E3           MOV      R2,#+0
   \   000006C8   0110A0E3           MOV      R1,#+1
   \   000006CC   1C008DE2           ADD      R0,SP,#+28
   \   000006D0   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000006D4   0020A0E3           MOV      R2,#+0
   \   000006D8   0110A0E3           MOV      R1,#+1
   \   000006DC   0D00A0E1           MOV      R0,SP
   \   000006E0   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000006E4   0020A0E3           MOV      R2,#+0
   \   000006E8   0110A0E3           MOV      R1,#+1
   \   000006EC   38008DE2           ADD      R0,SP,#+56
   \   000006F0   ........           _BLF     ??_Tidy,??_Tidy??rA
    153              }
    154              if (SOAllExtraSpace) {
   \                     ??WriteConfigToFile_6:
   \   000006F4   F001D5E5           LDRB     R0,[R5, #+496]
   \   000006F8   000050E3           CMP      R0,#+0
   \   000006FC   1C00000A           BEQ      ??WriteConfigToFile_7
    155                  LocalString += TabStr1 + KeyWord(C_ANPRO3_SOALL_EXTRA_SPC) + CrLfStr;
   \   00000700   1010A0E3           MOV      R1,#+16
   \   00000704   401D81E3           ORR      R1,R1,#0x1000
   \   00000708   1C008DE2           ADD      R0,SP,#+28
   \   0000070C   ........           _BLF     ??KeyWord,??KeyWord??rA
   \   00000710   1C208DE2           ADD      R2,SP,#+28
   \   00000714   0810A0E1           MOV      R1,R8
   \   00000718   0D00A0E1           MOV      R0,SP
   \   0000071C   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000720   0620A0E1           MOV      R2,R6
   \   00000724   0D10A0E1           MOV      R1,SP
   \   00000728   38008DE2           ADD      R0,SP,#+56
   \   0000072C   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000730   0730A0E1           MOV      R3,R7
   \   00000734   0020A0E3           MOV      R2,#+0
   \   00000738   38108DE2           ADD      R1,SP,#+56
   \   0000073C   54008DE2           ADD      R0,SP,#+84
   \   00000740   ........           _BLF     ??append,??append??rA
   \   00000744   0020A0E3           MOV      R2,#+0
   \   00000748   0110A0E3           MOV      R1,#+1
   \   0000074C   38008DE2           ADD      R0,SP,#+56
   \   00000750   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000754   0020A0E3           MOV      R2,#+0
   \   00000758   0110A0E3           MOV      R1,#+1
   \   0000075C   0D00A0E1           MOV      R0,SP
   \   00000760   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000764   0020A0E3           MOV      R2,#+0
   \   00000768   0110A0E3           MOV      R1,#+1
   \   0000076C   1C008DE2           ADD      R0,SP,#+28
   \   00000770   ........           _BLF     ??_Tidy,??_Tidy??rA
    156              }
    157              LocalString += TabStr1 + KeyWord(C_ANPRO3_VAL_ERR_ACT) + (AnsiString)ValueErrorAction + CrLfStr;
   \                     ??WriteConfigToFile_7:
   \   00000774   C81195E5           LDR      R1,[R5, #+456]
    158              if (!SysDataValTable.empty()) {
   \   00000778   809A9FE5           LDR      R9,??WriteConfigToFile_8  ;; TabStr2
   \   0000077C   EC008DE2           ADD      R0,SP,#+236
   \   00000780   400E80E2           ADD      R0,R0,#+1024
   \   00000784   ........           _BLF     ??AnsiString_2,??AnsiString??rA_2
   \   00000788   0040A0E1           MOV      R4,R0
   \   0000078C   0E10A0E3           MOV      R1,#+14
   \   00000790   401D81E3           ORR      R1,R1,#0x1000
   \   00000794   0C008DE2           ADD      R0,SP,#+12
   \   00000798   400E80E2           ADD      R0,R0,#+1024
   \   0000079C   ........           _BLF     ??KeyWord,??KeyWord??rA
   \   000007A0   0C208DE2           ADD      R2,SP,#+12
   \   000007A4   402E82E2           ADD      R2,R2,#+1024
   \   000007A8   0810A0E1           MOV      R1,R8
   \   000007AC   FC0F8DE2           ADD      R0,SP,#+1008
   \   000007B0   ........           _BLF     `??operator+`,`??operator+??rA`
   \   000007B4   0420A0E1           MOV      R2,R4
   \   000007B8   FC1F8DE2           ADD      R1,SP,#+1008
   \   000007BC   F50F8DE2           ADD      R0,SP,#+980
   \   000007C0   ........           _BLF     `??operator+`,`??operator+??rA`
   \   000007C4   0620A0E1           MOV      R2,R6
   \   000007C8   F51F8DE2           ADD      R1,SP,#+980
   \   000007CC   EE0F8DE2           ADD      R0,SP,#+952
   \   000007D0   ........           _BLF     `??operator+`,`??operator+??rA`
   \   000007D4   0730A0E1           MOV      R3,R7
   \   000007D8   0020A0E3           MOV      R2,#+0
   \   000007DC   EE1F8DE2           ADD      R1,SP,#+952
   \   000007E0   54008DE2           ADD      R0,SP,#+84
   \   000007E4   ........           _BLF     ??append,??append??rA
   \   000007E8   0020A0E3           MOV      R2,#+0
   \   000007EC   0110A0E3           MOV      R1,#+1
   \   000007F0   EE0F8DE2           ADD      R0,SP,#+952
   \   000007F4   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000007F8   0020A0E3           MOV      R2,#+0
   \   000007FC   0110A0E3           MOV      R1,#+1
   \   00000800   F50F8DE2           ADD      R0,SP,#+980
   \   00000804   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000808   0020A0E3           MOV      R2,#+0
   \   0000080C   0110A0E3           MOV      R1,#+1
   \   00000810   EC008DE2           ADD      R0,SP,#+236
   \   00000814   400E80E2           ADD      R0,R0,#+1024
   \   00000818   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   0000081C   0020A0E3           MOV      R2,#+0
   \   00000820   0110A0E3           MOV      R1,#+1
   \   00000824   FC0F8DE2           ADD      R0,SP,#+1008
   \   00000828   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   0000082C   0020A0E3           MOV      R2,#+0
   \   00000830   0110A0E3           MOV      R1,#+1
   \   00000834   0C008DE2           ADD      R0,SP,#+12
   \   00000838   400E80E2           ADD      R0,R0,#+1024
   \   0000083C   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000840   64AFA0E3           MOV      R10,#+400
   \   00000844   0040A0E3           MOV      R4,#+0
   \   00000848   05008AE0           ADD      R0,R10,R5
   \   0000084C   ........           _BLF     ??empty_1,??empty??rA
   \   00000850   000050E3           CMP      R0,#+0
   \   00000854   5F00001A           BNE      ??WriteConfigToFile_9
    159                  LocalString += TabStr1 + KeyWord(C_PRO_SYSDATA) + CrLfStr;
   \   00000858   F710A0E3           MOV      R1,#+247
   \   0000085C   C01F81E3           ORR      R1,R1,#0x300
   \   00000860   A8008DE2           ADD      R0,SP,#+168
   \   00000864   ........           _BLF     ??KeyWord,??KeyWord??rA
   \   00000868   A8208DE2           ADD      R2,SP,#+168
   \   0000086C   0810A0E1           MOV      R1,R8
   \   00000870   8C008DE2           ADD      R0,SP,#+140
   \   00000874   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000878   0620A0E1           MOV      R2,R6
   \   0000087C   8C108DE2           ADD      R1,SP,#+140
   \   00000880   70008DE2           ADD      R0,SP,#+112
   \   00000884   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000888   0730A0E1           MOV      R3,R7
   \   0000088C   0020A0E3           MOV      R2,#+0
   \   00000890   70108DE2           ADD      R1,SP,#+112
   \   00000894   54008DE2           ADD      R0,SP,#+84
   \   00000898   ........           _BLF     ??append,??append??rA
   \   0000089C   0420A0E1           MOV      R2,R4
   \   000008A0   0110A0E3           MOV      R1,#+1
   \   000008A4   70008DE2           ADD      R0,SP,#+112
   \   000008A8   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000008AC   0420A0E1           MOV      R2,R4
   \   000008B0   0110A0E3           MOV      R1,#+1
   \   000008B4   8C008DE2           ADD      R0,SP,#+140
   \   000008B8   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000008BC   0420A0E1           MOV      R2,R4
   \   000008C0   0110A0E3           MOV      R1,#+1
   \   000008C4   A8008DE2           ADD      R0,SP,#+168
   \   000008C8   ........           _BLF     ??_Tidy,??_Tidy??rA
    160                  for (unsigned i = 0; i < SysDataValTable.size(); i++) {
   \   000008CC   04B0A0E1           MOV      R11,R4
   \   000008D0   1D0000EA           B        ??WriteConfigToFile_10
    161                      LocalString += TabStr2 + ValueKeyWord(SysDataValTable[i]) + CrLfStr;
   \                     ??WriteConfigToFile_11:
   \   000008D4   05009AE7           LDR      R0,[R10, +R5]
   \   000008D8   0B1190E7           LDR      R1,[R0, +R11, LSL #+2]
   \   000008DC   38008DE2           ADD      R0,SP,#+56
   \   000008E0   ........           _BLF     ??ValueKeyWord,??ValueKeyWord??rA
   \   000008E4   38208DE2           ADD      R2,SP,#+56
   \   000008E8   0910A0E1           MOV      R1,R9
   \   000008EC   0D00A0E1           MOV      R0,SP
   \   000008F0   ........           _BLF     `??operator+`,`??operator+??rA`
   \   000008F4   0620A0E1           MOV      R2,R6
   \   000008F8   0D10A0E1           MOV      R1,SP
   \   000008FC   1C008DE2           ADD      R0,SP,#+28
   \   00000900   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000904   0730A0E1           MOV      R3,R7
   \   00000908   0020A0E3           MOV      R2,#+0
   \   0000090C   1C108DE2           ADD      R1,SP,#+28
   \   00000910   54008DE2           ADD      R0,SP,#+84
   \   00000914   ........           _BLF     ??append,??append??rA
   \   00000918   0420A0E1           MOV      R2,R4
   \   0000091C   0110A0E3           MOV      R1,#+1
   \   00000920   1C008DE2           ADD      R0,SP,#+28
   \   00000924   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000928   0420A0E1           MOV      R2,R4
   \   0000092C   0110A0E3           MOV      R1,#+1
   \   00000930   0D00A0E1           MOV      R0,SP
   \   00000934   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000938   0420A0E1           MOV      R2,R4
   \   0000093C   0110A0E3           MOV      R1,#+1
   \   00000940   38008DE2           ADD      R0,SP,#+56
   \   00000944   ........           _BLF     ??_Tidy,??_Tidy??rA
    162                  }
   \   00000948   01B08BE2           ADD      R11,R11,#+1
   \                     ??WriteConfigToFile_10:
   \   0000094C   05008AE0           ADD      R0,R10,R5
   \   00000950   041090E5           LDR      R1,[R0, #+4]
   \   00000954   000090E5           LDR      R0,[R0, #+0]
   \   00000958   000041E0           SUB      R0,R1,R0
   \   0000095C   20015BE1           CMP      R11,R0, LSR #+2
   \   00000960   DBFFFF3A           BCC      ??WriteConfigToFile_11
    163                  LocalString += TabStr1 + KeyWord(C_ANPRO3_VALDEF_END) + CrLfStr;
   \   00000964   0510A0E3           MOV      R1,#+5
   \   00000968   401D81E3           ORR      R1,R1,#0x1000
   \   0000096C   FC008DE2           ADD      R0,SP,#+252
   \   00000970   ........           _BLF     ??KeyWord,??KeyWord??rA
   \   00000974   FC208DE2           ADD      R2,SP,#+252
   \   00000978   0810A0E1           MOV      R1,R8
   \   0000097C   E0008DE2           ADD      R0,SP,#+224
   \   00000980   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000984   0620A0E1           MOV      R2,R6
   \   00000988   E0108DE2           ADD      R1,SP,#+224
   \   0000098C   C4008DE2           ADD      R0,SP,#+196
   \   00000990   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000994   0730A0E1           MOV      R3,R7
   \   00000998   0020A0E3           MOV      R2,#+0
   \   0000099C   C4108DE2           ADD      R1,SP,#+196
   \   000009A0   54008DE2           ADD      R0,SP,#+84
   \   000009A4   ........           _BLF     ??append,??append??rA
   \   000009A8   0420A0E1           MOV      R2,R4
   \   000009AC   0110A0E3           MOV      R1,#+1
   \   000009B0   C4008DE2           ADD      R0,SP,#+196
   \   000009B4   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000009B8   0420A0E1           MOV      R2,R4
   \   000009BC   0110A0E3           MOV      R1,#+1
   \   000009C0   E0008DE2           ADD      R0,SP,#+224
   \   000009C4   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000009C8   0420A0E1           MOV      R2,R4
   \   000009CC   0110A0E3           MOV      R1,#+1
   \   000009D0   FC008DE2           ADD      R0,SP,#+252
   \   000009D4   ........           _BLF     ??_Tidy,??_Tidy??rA
    164              }
    165              if (!TnkDataValTable.empty()) {
   \                     ??WriteConfigToFile_9:
   \   000009D8   67AFA0E3           MOV      R10,#+412
   \   000009DC   05008AE0           ADD      R0,R10,R5
   \   000009E0   ........           _BLF     ??empty_1,??empty??rA
   \   000009E4   000050E3           CMP      R0,#+0
   \   000009E8   5F00001A           BNE      ??WriteConfigToFile_12
    166                  LocalString += TabStr1 + KeyWord(C_PRO_TANK) + CrLfStr;
   \   000009EC   1A10A0E3           MOV      R1,#+26
   \   000009F0   401E81E3           ORR      R1,R1,#0x400
   \   000009F4   FC008DE2           ADD      R0,SP,#+252
   \   000009F8   ........           _BLF     ??KeyWord,??KeyWord??rA
   \   000009FC   FC208DE2           ADD      R2,SP,#+252
   \   00000A00   0810A0E1           MOV      R1,R8
   \   00000A04   70008DE2           ADD      R0,SP,#+112
   \   00000A08   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000A0C   0620A0E1           MOV      R2,R6
   \   00000A10   70108DE2           ADD      R1,SP,#+112
   \   00000A14   8C008DE2           ADD      R0,SP,#+140
   \   00000A18   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000A1C   0730A0E1           MOV      R3,R7
   \   00000A20   0020A0E3           MOV      R2,#+0
   \   00000A24   8C108DE2           ADD      R1,SP,#+140
   \   00000A28   54008DE2           ADD      R0,SP,#+84
   \   00000A2C   ........           _BLF     ??append,??append??rA
   \   00000A30   0420A0E1           MOV      R2,R4
   \   00000A34   0110A0E3           MOV      R1,#+1
   \   00000A38   8C008DE2           ADD      R0,SP,#+140
   \   00000A3C   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000A40   0420A0E1           MOV      R2,R4
   \   00000A44   0110A0E3           MOV      R1,#+1
   \   00000A48   70008DE2           ADD      R0,SP,#+112
   \   00000A4C   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000A50   0420A0E1           MOV      R2,R4
   \   00000A54   0110A0E3           MOV      R1,#+1
   \   00000A58   FC008DE2           ADD      R0,SP,#+252
   \   00000A5C   ........           _BLF     ??_Tidy,??_Tidy??rA
    167                  for (unsigned i = 0; i < TnkDataValTable.size(); i++) {
   \   00000A60   04B0A0E1           MOV      R11,R4
   \   00000A64   1D0000EA           B        ??WriteConfigToFile_13
    168                      LocalString += TabStr2 + ValueKeyWord(TnkDataValTable[i]) + CrLfStr;
   \                     ??WriteConfigToFile_14:
   \   00000A68   05009AE7           LDR      R0,[R10, +R5]
   \   00000A6C   0B1190E7           LDR      R1,[R0, +R11, LSL #+2]
   \   00000A70   1C008DE2           ADD      R0,SP,#+28
   \   00000A74   ........           _BLF     ??ValueKeyWord,??ValueKeyWord??rA
   \   00000A78   1C208DE2           ADD      R2,SP,#+28
   \   00000A7C   0910A0E1           MOV      R1,R9
   \   00000A80   0D00A0E1           MOV      R0,SP
   \   00000A84   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000A88   0620A0E1           MOV      R2,R6
   \   00000A8C   0D10A0E1           MOV      R1,SP
   \   00000A90   38008DE2           ADD      R0,SP,#+56
   \   00000A94   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000A98   0730A0E1           MOV      R3,R7
   \   00000A9C   0020A0E3           MOV      R2,#+0
   \   00000AA0   38108DE2           ADD      R1,SP,#+56
   \   00000AA4   54008DE2           ADD      R0,SP,#+84
   \   00000AA8   ........           _BLF     ??append,??append??rA
   \   00000AAC   0420A0E1           MOV      R2,R4
   \   00000AB0   0110A0E3           MOV      R1,#+1
   \   00000AB4   38008DE2           ADD      R0,SP,#+56
   \   00000AB8   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000ABC   0420A0E1           MOV      R2,R4
   \   00000AC0   0110A0E3           MOV      R1,#+1
   \   00000AC4   0D00A0E1           MOV      R0,SP
   \   00000AC8   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000ACC   0420A0E1           MOV      R2,R4
   \   00000AD0   0110A0E3           MOV      R1,#+1
   \   00000AD4   1C008DE2           ADD      R0,SP,#+28
   \   00000AD8   ........           _BLF     ??_Tidy,??_Tidy??rA
    169                  }
   \   00000ADC   01B08BE2           ADD      R11,R11,#+1
   \                     ??WriteConfigToFile_13:
   \   00000AE0   05008AE0           ADD      R0,R10,R5
   \   00000AE4   041090E5           LDR      R1,[R0, #+4]
   \   00000AE8   000090E5           LDR      R0,[R0, #+0]
   \   00000AEC   000041E0           SUB      R0,R1,R0
   \   00000AF0   20015BE1           CMP      R11,R0, LSR #+2
   \   00000AF4   DBFFFF3A           BCC      ??WriteConfigToFile_14
    170                  LocalString += TabStr1 + KeyWord(C_ANPRO3_VALDEF_END) + CrLfStr;
   \   00000AF8   0510A0E3           MOV      R1,#+5
   \   00000AFC   401D81E3           ORR      R1,R1,#0x1000
   \   00000B00   A8008DE2           ADD      R0,SP,#+168
   \   00000B04   ........           _BLF     ??KeyWord,??KeyWord??rA
   \   00000B08   A8208DE2           ADD      R2,SP,#+168
   \   00000B0C   0810A0E1           MOV      R1,R8
   \   00000B10   C4008DE2           ADD      R0,SP,#+196
   \   00000B14   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000B18   0620A0E1           MOV      R2,R6
   \   00000B1C   C4108DE2           ADD      R1,SP,#+196
   \   00000B20   E0008DE2           ADD      R0,SP,#+224
   \   00000B24   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000B28   0730A0E1           MOV      R3,R7
   \   00000B2C   0020A0E3           MOV      R2,#+0
   \   00000B30   E0108DE2           ADD      R1,SP,#+224
   \   00000B34   54008DE2           ADD      R0,SP,#+84
   \   00000B38   ........           _BLF     ??append,??append??rA
   \   00000B3C   0420A0E1           MOV      R2,R4
   \   00000B40   0110A0E3           MOV      R1,#+1
   \   00000B44   E0008DE2           ADD      R0,SP,#+224
   \   00000B48   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000B4C   0420A0E1           MOV      R2,R4
   \   00000B50   0110A0E3           MOV      R1,#+1
   \   00000B54   C4008DE2           ADD      R0,SP,#+196
   \   00000B58   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000B5C   0420A0E1           MOV      R2,R4
   \   00000B60   0110A0E3           MOV      R1,#+1
   \   00000B64   A8008DE2           ADD      R0,SP,#+168
   \   00000B68   ........           _BLF     ??_Tidy,??_Tidy??rA
    171              }
    172              if (!TmpDataValTable.empty()) {
   \                     ??WriteConfigToFile_12:
   \   00000B6C   6DAFA0E3           MOV      R10,#+436
   \   00000B70   05008AE0           ADD      R0,R10,R5
   \   00000B74   ........           _BLF     ??empty_1,??empty??rA
   \   00000B78   000050E3           CMP      R0,#+0
   \   00000B7C   5F00001A           BNE      ??WriteConfigToFile_15
    173                  LocalString += TabStr1 + KeyWord(C_PRO_TEMP) + CrLfStr;
   \   00000B80   2E10A0E3           MOV      R1,#+46
   \   00000B84   401E81E3           ORR      R1,R1,#0x400
   \   00000B88   A8008DE2           ADD      R0,SP,#+168
   \   00000B8C   ........           _BLF     ??KeyWord,??KeyWord??rA
   \   00000B90   A8208DE2           ADD      R2,SP,#+168
   \   00000B94   0810A0E1           MOV      R1,R8
   \   00000B98   8C008DE2           ADD      R0,SP,#+140
   \   00000B9C   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000BA0   0620A0E1           MOV      R2,R6
   \   00000BA4   8C108DE2           ADD      R1,SP,#+140
   \   00000BA8   70008DE2           ADD      R0,SP,#+112
   \   00000BAC   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000BB0   0730A0E1           MOV      R3,R7
   \   00000BB4   0020A0E3           MOV      R2,#+0
   \   00000BB8   70108DE2           ADD      R1,SP,#+112
   \   00000BBC   54008DE2           ADD      R0,SP,#+84
   \   00000BC0   ........           _BLF     ??append,??append??rA
   \   00000BC4   0420A0E1           MOV      R2,R4
   \   00000BC8   0110A0E3           MOV      R1,#+1
   \   00000BCC   70008DE2           ADD      R0,SP,#+112
   \   00000BD0   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000BD4   0420A0E1           MOV      R2,R4
   \   00000BD8   0110A0E3           MOV      R1,#+1
   \   00000BDC   8C008DE2           ADD      R0,SP,#+140
   \   00000BE0   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000BE4   0420A0E1           MOV      R2,R4
   \   00000BE8   0110A0E3           MOV      R1,#+1
   \   00000BEC   A8008DE2           ADD      R0,SP,#+168
   \   00000BF0   ........           _BLF     ??_Tidy,??_Tidy??rA
    174                  for (unsigned i = 0; i < TmpDataValTable.size(); i++) {
   \   00000BF4   04B0A0E1           MOV      R11,R4
   \   00000BF8   1D0000EA           B        ??WriteConfigToFile_16
    175                      LocalString += TabStr2 + ValueKeyWord(TmpDataValTable[i]) + CrLfStr;
   \                     ??WriteConfigToFile_17:
   \   00000BFC   05009AE7           LDR      R0,[R10, +R5]
   \   00000C00   0B1190E7           LDR      R1,[R0, +R11, LSL #+2]
   \   00000C04   38008DE2           ADD      R0,SP,#+56
   \   00000C08   ........           _BLF     ??ValueKeyWord,??ValueKeyWord??rA
   \   00000C0C   38208DE2           ADD      R2,SP,#+56
   \   00000C10   0910A0E1           MOV      R1,R9
   \   00000C14   0D00A0E1           MOV      R0,SP
   \   00000C18   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000C1C   0620A0E1           MOV      R2,R6
   \   00000C20   0D10A0E1           MOV      R1,SP
   \   00000C24   1C008DE2           ADD      R0,SP,#+28
   \   00000C28   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000C2C   0730A0E1           MOV      R3,R7
   \   00000C30   0020A0E3           MOV      R2,#+0
   \   00000C34   1C108DE2           ADD      R1,SP,#+28
   \   00000C38   54008DE2           ADD      R0,SP,#+84
   \   00000C3C   ........           _BLF     ??append,??append??rA
   \   00000C40   0420A0E1           MOV      R2,R4
   \   00000C44   0110A0E3           MOV      R1,#+1
   \   00000C48   1C008DE2           ADD      R0,SP,#+28
   \   00000C4C   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000C50   0420A0E1           MOV      R2,R4
   \   00000C54   0110A0E3           MOV      R1,#+1
   \   00000C58   0D00A0E1           MOV      R0,SP
   \   00000C5C   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000C60   0420A0E1           MOV      R2,R4
   \   00000C64   0110A0E3           MOV      R1,#+1
   \   00000C68   38008DE2           ADD      R0,SP,#+56
   \   00000C6C   ........           _BLF     ??_Tidy,??_Tidy??rA
    176                  }
   \   00000C70   01B08BE2           ADD      R11,R11,#+1
   \                     ??WriteConfigToFile_16:
   \   00000C74   05008AE0           ADD      R0,R10,R5
   \   00000C78   041090E5           LDR      R1,[R0, #+4]
   \   00000C7C   000090E5           LDR      R0,[R0, #+0]
   \   00000C80   000041E0           SUB      R0,R1,R0
   \   00000C84   20015BE1           CMP      R11,R0, LSR #+2
   \   00000C88   DBFFFF3A           BCC      ??WriteConfigToFile_17
    177                  LocalString += TabStr1 + KeyWord(C_ANPRO3_VALDEF_END) + CrLfStr;
   \   00000C8C   0510A0E3           MOV      R1,#+5
   \   00000C90   401D81E3           ORR      R1,R1,#0x1000
   \   00000C94   FC008DE2           ADD      R0,SP,#+252
   \   00000C98   ........           _BLF     ??KeyWord,??KeyWord??rA
   \   00000C9C   FC208DE2           ADD      R2,SP,#+252
   \   00000CA0   0810A0E1           MOV      R1,R8
   \   00000CA4   E0008DE2           ADD      R0,SP,#+224
   \   00000CA8   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000CAC   0620A0E1           MOV      R2,R6
   \   00000CB0   E0108DE2           ADD      R1,SP,#+224
   \   00000CB4   C4008DE2           ADD      R0,SP,#+196
   \   00000CB8   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000CBC   0730A0E1           MOV      R3,R7
   \   00000CC0   0020A0E3           MOV      R2,#+0
   \   00000CC4   C4108DE2           ADD      R1,SP,#+196
   \   00000CC8   54008DE2           ADD      R0,SP,#+84
   \   00000CCC   ........           _BLF     ??append,??append??rA
   \   00000CD0   0420A0E1           MOV      R2,R4
   \   00000CD4   0110A0E3           MOV      R1,#+1
   \   00000CD8   C4008DE2           ADD      R0,SP,#+196
   \   00000CDC   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000CE0   0420A0E1           MOV      R2,R4
   \   00000CE4   0110A0E3           MOV      R1,#+1
   \   00000CE8   E0008DE2           ADD      R0,SP,#+224
   \   00000CEC   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000CF0   0420A0E1           MOV      R2,R4
   \   00000CF4   0110A0E3           MOV      R1,#+1
   \   00000CF8   FC008DE2           ADD      R0,SP,#+252
   \   00000CFC   ........           _BLF     ??_Tidy,??_Tidy??rA
    178              }
    179              if (!LPrDataValTable.empty()) {
   \                     ??WriteConfigToFile_15:
   \   00000D00   6AAFA0E3           MOV      R10,#+424
   \   00000D04   05008AE0           ADD      R0,R10,R5
   \   00000D08   ........           _BLF     ??empty_1,??empty??rA
   \   00000D0C   000050E3           CMP      R0,#+0
   \   00000D10   5E00001A           BNE      ??WriteConfigToFile_18
    180                  LocalString += TabStr1 + KeyWord(C_PRO_LINEPRESS) + CrLfStr;
   \   00000D14   461EA0E3           MOV      R1,#+1120
   \   00000D18   FC008DE2           ADD      R0,SP,#+252
   \   00000D1C   ........           _BLF     ??KeyWord,??KeyWord??rA
   \   00000D20   FC208DE2           ADD      R2,SP,#+252
   \   00000D24   0810A0E1           MOV      R1,R8
   \   00000D28   70008DE2           ADD      R0,SP,#+112
   \   00000D2C   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000D30   0620A0E1           MOV      R2,R6
   \   00000D34   70108DE2           ADD      R1,SP,#+112
   \   00000D38   8C008DE2           ADD      R0,SP,#+140
   \   00000D3C   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000D40   0730A0E1           MOV      R3,R7
   \   00000D44   0020A0E3           MOV      R2,#+0
   \   00000D48   8C108DE2           ADD      R1,SP,#+140
   \   00000D4C   54008DE2           ADD      R0,SP,#+84
   \   00000D50   ........           _BLF     ??append,??append??rA
   \   00000D54   0420A0E1           MOV      R2,R4
   \   00000D58   0110A0E3           MOV      R1,#+1
   \   00000D5C   8C008DE2           ADD      R0,SP,#+140
   \   00000D60   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000D64   0420A0E1           MOV      R2,R4
   \   00000D68   0110A0E3           MOV      R1,#+1
   \   00000D6C   70008DE2           ADD      R0,SP,#+112
   \   00000D70   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000D74   0420A0E1           MOV      R2,R4
   \   00000D78   0110A0E3           MOV      R1,#+1
   \   00000D7C   FC008DE2           ADD      R0,SP,#+252
   \   00000D80   ........           _BLF     ??_Tidy,??_Tidy??rA
    181                  for (unsigned i = 0; i < LPrDataValTable.size(); i++) {
   \   00000D84   04B0A0E1           MOV      R11,R4
   \   00000D88   1D0000EA           B        ??WriteConfigToFile_19
    182                      LocalString += TabStr2 + ValueKeyWord(LPrDataValTable[i]) + CrLfStr;
   \                     ??WriteConfigToFile_20:
   \   00000D8C   05009AE7           LDR      R0,[R10, +R5]
   \   00000D90   0B1190E7           LDR      R1,[R0, +R11, LSL #+2]
   \   00000D94   1C008DE2           ADD      R0,SP,#+28
   \   00000D98   ........           _BLF     ??ValueKeyWord,??ValueKeyWord??rA
   \   00000D9C   1C208DE2           ADD      R2,SP,#+28
   \   00000DA0   0910A0E1           MOV      R1,R9
   \   00000DA4   0D00A0E1           MOV      R0,SP
   \   00000DA8   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000DAC   0620A0E1           MOV      R2,R6
   \   00000DB0   0D10A0E1           MOV      R1,SP
   \   00000DB4   38008DE2           ADD      R0,SP,#+56
   \   00000DB8   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000DBC   0730A0E1           MOV      R3,R7
   \   00000DC0   0020A0E3           MOV      R2,#+0
   \   00000DC4   38108DE2           ADD      R1,SP,#+56
   \   00000DC8   54008DE2           ADD      R0,SP,#+84
   \   00000DCC   ........           _BLF     ??append,??append??rA
   \   00000DD0   0420A0E1           MOV      R2,R4
   \   00000DD4   0110A0E3           MOV      R1,#+1
   \   00000DD8   38008DE2           ADD      R0,SP,#+56
   \   00000DDC   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000DE0   0420A0E1           MOV      R2,R4
   \   00000DE4   0110A0E3           MOV      R1,#+1
   \   00000DE8   0D00A0E1           MOV      R0,SP
   \   00000DEC   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000DF0   0420A0E1           MOV      R2,R4
   \   00000DF4   0110A0E3           MOV      R1,#+1
   \   00000DF8   1C008DE2           ADD      R0,SP,#+28
   \   00000DFC   ........           _BLF     ??_Tidy,??_Tidy??rA
    183                  }
   \   00000E00   01B08BE2           ADD      R11,R11,#+1
   \                     ??WriteConfigToFile_19:
   \   00000E04   05008AE0           ADD      R0,R10,R5
   \   00000E08   041090E5           LDR      R1,[R0, #+4]
   \   00000E0C   000090E5           LDR      R0,[R0, #+0]
   \   00000E10   000041E0           SUB      R0,R1,R0
   \   00000E14   20015BE1           CMP      R11,R0, LSR #+2
   \   00000E18   DBFFFF3A           BCC      ??WriteConfigToFile_20
    184                  LocalString += TabStr1 + KeyWord(C_ANPRO3_VALDEF_END) + CrLfStr;
   \   00000E1C   0510A0E3           MOV      R1,#+5
   \   00000E20   401D81E3           ORR      R1,R1,#0x1000
   \   00000E24   A8008DE2           ADD      R0,SP,#+168
   \   00000E28   ........           _BLF     ??KeyWord,??KeyWord??rA
   \   00000E2C   A8208DE2           ADD      R2,SP,#+168
   \   00000E30   0810A0E1           MOV      R1,R8
   \   00000E34   C4008DE2           ADD      R0,SP,#+196
   \   00000E38   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000E3C   0620A0E1           MOV      R2,R6
   \   00000E40   C4108DE2           ADD      R1,SP,#+196
   \   00000E44   E0008DE2           ADD      R0,SP,#+224
   \   00000E48   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000E4C   0730A0E1           MOV      R3,R7
   \   00000E50   0020A0E3           MOV      R2,#+0
   \   00000E54   E0108DE2           ADD      R1,SP,#+224
   \   00000E58   54008DE2           ADD      R0,SP,#+84
   \   00000E5C   ........           _BLF     ??append,??append??rA
   \   00000E60   0420A0E1           MOV      R2,R4
   \   00000E64   0110A0E3           MOV      R1,#+1
   \   00000E68   E0008DE2           ADD      R0,SP,#+224
   \   00000E6C   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000E70   0420A0E1           MOV      R2,R4
   \   00000E74   0110A0E3           MOV      R1,#+1
   \   00000E78   C4008DE2           ADD      R0,SP,#+196
   \   00000E7C   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000E80   0420A0E1           MOV      R2,R4
   \   00000E84   0110A0E3           MOV      R1,#+1
   \   00000E88   A8008DE2           ADD      R0,SP,#+168
   \   00000E8C   ........           _BLF     ??_Tidy,??_Tidy??rA
    185              }
    186              if (SendAlarmsOnly) {
   \                     ??WriteConfigToFile_18:
   \   00000E90   F101D5E5           LDRB     R0,[R5, #+497]
   \   00000E94   000050E3           CMP      R0,#+0
   \   00000E98   8D00000A           BEQ      ??WriteConfigToFile_21
    187                  LocalString += TabStr1 + KeyWord(C_OBJECT_ID);
   \   00000E9C   D110A0E3           MOV      R1,#+209
   \   00000EA0   70008DE2           ADD      R0,SP,#+112
   \   00000EA4   ........           _BLF     ??KeyWord,??KeyWord??rA
   \   00000EA8   70208DE2           ADD      R2,SP,#+112
   \   00000EAC   0810A0E1           MOV      R1,R8
   \   00000EB0   38008DE2           ADD      R0,SP,#+56
   \   00000EB4   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000EB8   0730A0E1           MOV      R3,R7
   \   00000EBC   0020A0E3           MOV      R2,#+0
   \   00000EC0   38108DE2           ADD      R1,SP,#+56
   \   00000EC4   54008DE2           ADD      R0,SP,#+84
   \   00000EC8   ........           _BLF     ??append,??append??rA
   \   00000ECC   0420A0E1           MOV      R2,R4
   \   00000ED0   0110A0E3           MOV      R1,#+1
   \   00000ED4   38008DE2           ADD      R0,SP,#+56
   \   00000ED8   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000EDC   0420A0E1           MOV      R2,R4
   \   00000EE0   0110A0E3           MOV      R1,#+1
   \   00000EE4   70008DE2           ADD      R0,SP,#+112
   \   00000EE8   ........           _BLF     ??_Tidy,??_Tidy??rA
    188                  LocalString += TabStr2 + ValueKeyWord(C_ANPRO3_SEND_ALARMS_ONLY) + CrLfStr;
   \   00000EEC   1210A0E3           MOV      R1,#+18
   \   00000EF0   401D81E3           ORR      R1,R1,#0x1000
   \   00000EF4   C4008DE2           ADD      R0,SP,#+196
   \   00000EF8   ........           _BLF     ??ValueKeyWord,??ValueKeyWord??rA
   \   00000EFC   C4208DE2           ADD      R2,SP,#+196
   \   00000F00   0910A0E1           MOV      R1,R9
   \   00000F04   A8008DE2           ADD      R0,SP,#+168
   \   00000F08   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000F0C   0620A0E1           MOV      R2,R6
   \   00000F10   A8108DE2           ADD      R1,SP,#+168
   \   00000F14   8C008DE2           ADD      R0,SP,#+140
   \   00000F18   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000F1C   0730A0E1           MOV      R3,R7
   \   00000F20   0420A0E1           MOV      R2,R4
   \   00000F24   8C108DE2           ADD      R1,SP,#+140
   \   00000F28   54008DE2           ADD      R0,SP,#+84
   \   00000F2C   ........           _BLF     ??append,??append??rA
   \   00000F30   0420A0E1           MOV      R2,R4
   \   00000F34   0110A0E3           MOV      R1,#+1
   \   00000F38   8C008DE2           ADD      R0,SP,#+140
   \   00000F3C   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000F40   0420A0E1           MOV      R2,R4
   \   00000F44   0110A0E3           MOV      R1,#+1
   \   00000F48   A8008DE2           ADD      R0,SP,#+168
   \   00000F4C   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000F50   0420A0E1           MOV      R2,R4
   \   00000F54   0110A0E3           MOV      R1,#+1
   \   00000F58   C4008DE2           ADD      R0,SP,#+196
   \   00000F5C   ........           _BLF     ??_Tidy,??_Tidy??rA
    189          
    190                  set<PRogramObject *>::iterator pBIt;
    191                  for (pBIt = PROList.begin(); pBIt != PROList.end(); pBIt++) {
   \   00000F60   839FA0E3           MOV      R9,#+524
   \   00000F64   05A099E7           LDR      R10,[R9, +R5]
   \   00000F68   1B0000EA           B        ??WriteConfigToFile_22
   \                     ??WriteConfigToFile_1:
   \   00000F6C   ........           DC32     CrLfStr
   \   00000F70   ........           DC32     TabStr1
   \   00000F74   ........           DC32     ??npos
    192                      PRogramObject *Element    = (PRogramObject *)*pBIt;
    193                      int           PROIDNumber = Element->IDNumber;
   \                     ??WriteConfigToFile_23:
   \   00000F78   10009AE5           LDR      R0,[R10, #+16]
   \   00000F7C   9CB090E5           LDR      R11,[R0, #+156]
    194                      AnsiString    IdNumStr;
   \   00000F80   0D00A0E1           MOV      R0,SP
   \   00000F84   ........           _BLF     ??AnsiString,??AnsiString??rA
    195                      IdNumStr.cat_sprintf("0x%0X\t", PROIDNumber);
   \   00000F88   74229FE5           LDR      R2,??WriteConfigToFile_8+0x4  ;; `?<Constant "0x%0X    ">`
   \   00000F8C   0B30A0E1           MOV      R3,R11
   \   00000F90   1C108DE2           ADD      R1,SP,#+28
   \   00000F94   0D00A0E1           MOV      R0,SP
   \   00000F98   ........           _BLF     ??cat_sprintf,??cat_sprintf??rA
   \   00000F9C   0020A0E3           MOV      R2,#+0
   \   00000FA0   0110A0E3           MOV      R1,#+1
   \   00000FA4   1C008DE2           ADD      R0,SP,#+28
   \   00000FA8   ........           _BLF     ??_Tidy,??_Tidy??rA
    196                      LocalString += IdNumStr;
   \   00000FAC   0730A0E1           MOV      R3,R7
   \   00000FB0   0420A0E1           MOV      R2,R4
   \   00000FB4   0D10A0E1           MOV      R1,SP
   \   00000FB8   54008DE2           ADD      R0,SP,#+84
   \   00000FBC   ........           _BLF     ??append,??append??rA
    197                  }
   \   00000FC0   0420A0E1           MOV      R2,R4
   \   00000FC4   0110A0E3           MOV      R1,#+1
   \   00000FC8   0D00A0E1           MOV      R0,SP
   \   00000FCC   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000FD0   0A00A0E1           MOV      R0,R10
   \   00000FD4   ........           _BLF     ??_IncP,??_IncP??rA
   \   00000FD8   00A0A0E1           MOV      R10,R0
   \                     ??WriteConfigToFile_22:
   \   00000FDC   050089E0           ADD      R0,R9,R5
   \   00000FE0   00005AE1           CMP      R10,R0
   \   00000FE4   E3FFFF1A           BNE      ??WriteConfigToFile_23
    198                  for (unsigned j = 0; j < AlarmTypeList.size(); j++) {
   \   00000FE8   7D9FA0E3           MOV      R9,#+500
   \   00000FEC   150000EA           B        ??WriteConfigToFile_24
    199                      LocalString += TabStr1 + KeyWord(AlarmTypeList[j]);
   \                     ??WriteConfigToFile_25:
   \   00000FF0   050099E7           LDR      R0,[R9, +R5]
   \   00000FF4   041190E7           LDR      R1,[R0, +R4, LSL #+2]
   \   00000FF8   1C008DE2           ADD      R0,SP,#+28
   \   00000FFC   ........           _BLF     ??KeyWord,??KeyWord??rA
   \   00001000   1C208DE2           ADD      R2,SP,#+28
   \   00001004   0810A0E1           MOV      R1,R8
   \   00001008   0D00A0E1           MOV      R0,SP
   \   0000100C   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00001010   0730A0E1           MOV      R3,R7
   \   00001014   0020A0E3           MOV      R2,#+0
   \   00001018   0D10A0E1           MOV      R1,SP
   \   0000101C   54008DE2           ADD      R0,SP,#+84
   \   00001020   ........           _BLF     ??append,??append??rA
   \   00001024   0020A0E3           MOV      R2,#+0
   \   00001028   0110A0E3           MOV      R1,#+1
   \   0000102C   0D00A0E1           MOV      R0,SP
   \   00001030   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00001034   0020A0E3           MOV      R2,#+0
   \   00001038   0110A0E3           MOV      R1,#+1
   \   0000103C   1C008DE2           ADD      R0,SP,#+28
   \   00001040   ........           _BLF     ??_Tidy,??_Tidy??rA
    200                  }
   \   00001044   014084E2           ADD      R4,R4,#+1
   \                     ??WriteConfigToFile_24:
   \   00001048   050089E0           ADD      R0,R9,R5
   \   0000104C   041090E5           LDR      R1,[R0, #+4]
   \   00001050   000090E5           LDR      R0,[R0, #+0]
   \   00001054   000041E0           SUB      R0,R1,R0
   \   00001058   200154E1           CMP      R4,R0, LSR #+2
   \   0000105C   E3FFFF3A           BCC      ??WriteConfigToFile_25
    201                  LocalString += TabStr1 + KeyWord(C_PROLIST_END) + CrLfStr;
   \   00001060   4910A0E3           MOV      R1,#+73
   \   00001064   501E81E3           ORR      R1,R1,#0x500
   \   00001068   460F8DE2           ADD      R0,SP,#+280
   \   0000106C   ........           _BLF     ??KeyWord,??KeyWord??rA
   \   00001070   462F8DE2           ADD      R2,SP,#+280
   \   00001074   0810A0E1           MOV      R1,R8
   \   00001078   FC008DE2           ADD      R0,SP,#+252
   \   0000107C   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00001080   0620A0E1           MOV      R2,R6
   \   00001084   FC108DE2           ADD      R1,SP,#+252
   \   00001088   E0008DE2           ADD      R0,SP,#+224
   \   0000108C   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00001090   0730A0E1           MOV      R3,R7
   \   00001094   0020A0E3           MOV      R2,#+0
   \   00001098   E0108DE2           ADD      R1,SP,#+224
   \   0000109C   54008DE2           ADD      R0,SP,#+84
   \   000010A0   ........           _BLF     ??append,??append??rA
   \   000010A4   0020A0E3           MOV      R2,#+0
   \   000010A8   0110A0E3           MOV      R1,#+1
   \   000010AC   E0008DE2           ADD      R0,SP,#+224
   \   000010B0   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000010B4   0020A0E3           MOV      R2,#+0
   \   000010B8   0110A0E3           MOV      R1,#+1
   \   000010BC   FC008DE2           ADD      R0,SP,#+252
   \   000010C0   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000010C4   0020A0E3           MOV      R2,#+0
   \   000010C8   0110A0E3           MOV      R1,#+1
   \   000010CC   460F8DE2           ADD      R0,SP,#+280
   \   000010D0   ........           _BLF     ??_Tidy,??_Tidy??rA
    202              }
    203              if (isNEMA) {
   \                     ??WriteConfigToFile_21:
   \   000010D4   4801D5E5           LDRB     R0,[R5, #+328]
   \   000010D8   000050E3           CMP      R0,#+0
   \   000010DC   1C00000A           BEQ      ??WriteConfigToFile_26
    204                  LocalString += TabStr1 + KeyWord(C_ANPRO3_NEMA) + CrLfStr;
   \   000010E0   1310A0E3           MOV      R1,#+19
   \   000010E4   401D81E3           ORR      R1,R1,#0x1000
   \   000010E8   38008DE2           ADD      R0,SP,#+56
   \   000010EC   ........           _BLF     ??KeyWord,??KeyWord??rA
   \   000010F0   38208DE2           ADD      R2,SP,#+56
   \   000010F4   0810A0E1           MOV      R1,R8
   \   000010F8   1C008DE2           ADD      R0,SP,#+28
   \   000010FC   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00001100   0620A0E1           MOV      R2,R6
   \   00001104   1C108DE2           ADD      R1,SP,#+28
   \   00001108   0D00A0E1           MOV      R0,SP
   \   0000110C   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00001110   0730A0E1           MOV      R3,R7
   \   00001114   0020A0E3           MOV      R2,#+0
   \   00001118   0D10A0E1           MOV      R1,SP
   \   0000111C   54008DE2           ADD      R0,SP,#+84
   \   00001120   ........           _BLF     ??append,??append??rA
   \   00001124   0020A0E3           MOV      R2,#+0
   \   00001128   0110A0E3           MOV      R1,#+1
   \   0000112C   0D00A0E1           MOV      R0,SP
   \   00001130   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00001134   0020A0E3           MOV      R2,#+0
   \   00001138   0110A0E3           MOV      R1,#+1
   \   0000113C   1C008DE2           ADD      R0,SP,#+28
   \   00001140   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00001144   0020A0E3           MOV      R2,#+0
   \   00001148   0110A0E3           MOV      R1,#+1
   \   0000114C   38008DE2           ADD      R0,SP,#+56
   \   00001150   ........           _BLF     ??_Tidy,??_Tidy??rA
    205              }
    206              LocalString += KeyWord(C_PRO_END) + CrLfStr2;
   \                     ??WriteConfigToFile_26:
   \   00001154   FA1FA0E3           MOV      R1,#+1000
   \   00001158   44008DE2           ADD      R0,SP,#+68
   \   0000115C   400E80E2           ADD      R0,R0,#+1024
   \   00001160   ........           _BLF     ??KeyWord,??KeyWord??rA
   \   00001164   9C209FE5           LDR      R2,??WriteConfigToFile_8+0x8  ;; CrLfStr2
   \   00001168   44108DE2           ADD      R1,SP,#+68
   \   0000116C   401E81E2           ADD      R1,R1,#+1024
   \   00001170   28008DE2           ADD      R0,SP,#+40
   \   00001174   400E80E2           ADD      R0,R0,#+1024
   \   00001178   ........           _BLF     `??operator+`,`??operator+??rA`
   \   0000117C   0730A0E1           MOV      R3,R7
   \   00001180   0020A0E3           MOV      R2,#+0
   \   00001184   28108DE2           ADD      R1,SP,#+40
   \   00001188   401E81E2           ADD      R1,R1,#+1024
   \   0000118C   54008DE2           ADD      R0,SP,#+84
   \   00001190   ........           _BLF     ??append,??append??rA
   \   00001194   0020A0E3           MOV      R2,#+0
   \   00001198   0110A0E3           MOV      R1,#+1
   \   0000119C   28008DE2           ADD      R0,SP,#+40
   \   000011A0   400E80E2           ADD      R0,R0,#+1024
   \   000011A4   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000011A8   0020A0E3           MOV      R2,#+0
   \   000011AC   0110A0E3           MOV      R1,#+1
   \   000011B0   44008DE2           ADD      R0,SP,#+68
   \   000011B4   400E80E2           ADD      R0,R0,#+1024
   \   000011B8   ........           _BLF     ??_Tidy,??_Tidy??rA
    207          
    208              ConfigString.AddString(LocalString);
   \   000011BC   54108DE2           ADD      R1,SP,#+84
   \   000011C0   460E8DE2           ADD      R0,SP,#+1120
   \   000011C4   ........           _BLF     ??string,??string??rA
   \   000011C8   08059DE5           LDR      R0,[SP, #+1288]
   \   000011CC   461E8DE2           ADD      R1,SP,#+1120
   \   000011D0   ........           _BLF     ??AddString,??AddString??rA
   \   000011D4   0020A0E3           MOV      R2,#+0
   \   000011D8   0110A0E3           MOV      R1,#+1
   \   000011DC   460E8DE2           ADD      R0,SP,#+1120
   \   000011E0   ........           _BLF     ??_Tidy,??_Tidy??rA
    209          }
   \   000011E4   0020A0E3           MOV      R2,#+0
   \   000011E8   0110A0E3           MOV      R1,#+1
   \   000011EC   54008DE2           ADD      R0,SP,#+84
   \   000011F0   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000011F4   43DF8DE2           ADD      SP,SP,#+268
   \   000011F8   40DE8DE2           ADD      SP,SP,#+1024
   \   000011FC   ........           B        ?Subroutine31
   \                     ??WriteConfigToFile_8:
   \   00001200   ........           DC32     TabStr2
   \   00001204   ........           DC32     `?<Constant "0x%0X     ">`
   \   00001208   ........           DC32     CrLfStr2

   \                                 In segment CODE, align 4, keep-with-next
   \                     ?Subroutine31:
   \   00000000   F04FBDE8           POP      {R4-R11,LR}
   \   00000004   1EFF2FE1           BX       LR               ;; return
   \                     ??Subroutine31_0:
   \   00000008   ........           DC32     `?<Constant "ANPRO3">`
   \   0000000C   ........           DC32     SizeofSelectTankValueList
    210          //---------------------------------------------------------------------------
    211          

   \                                 In segment CODE, align 4, keep-with-next
    212          int AnPro3object::LoadConfigFromFile(TSNConfigString &ConfigString) {
   \                     ??LoadConfigFromFile:
   \   00000000   F04F2DE9           PUSH     {R4-R11,LR}
   \   00000004   40DF4DE2           SUB      SP,SP,#+256
    213              SetLineNumber(ConfigString.LineCount);
    214              bool NoError   = true;
    215              int  ErrorLine = 0;
   \   00000008   ........           LDR      R8,??Subroutine31_0  ;; `?<Constant "ANPRO3">`
   \   0000000C   ........           LDR      R9,??Subroutine31_0+0x4  ;; SizeofSelectTankValueList
   \   00000010   0150A0E1           MOV      R5,R1
   \   00000014   1C1095E5           LDR      R1,[R5, #+28]
   \   00000018   0040A0E1           MOV      R4,R0
   \   0000001C   ........           _BLF     ??SetLineNumber,??SetLineNumber??rA
   \   00000020   0170A0E3           MOV      R7,#+1
   \   00000024   0010A0E3           MOV      R1,#+0
   \   00000028   00108DE5           STR      R1,[SP, #+0]
   \   0000002C   0160E0E1           MVN      R6,R1
    216              int  Key;
    217              do {
    218                  AnsiString InputKeyWord = ConfigString.NextWord(ErrorLine);
   \                     ??LoadConfigFromFile_1:
   \   00000030   0030A0E3           MOV      R3,#+0
   \   00000034   0D20A0E1           MOV      R2,SP
   \   00000038   74108DE2           ADD      R1,SP,#+116
   \   0000003C   0500A0E1           MOV      R0,R5
   \   00000040   ........           _BLF     ??NextWord,??NextWord??rA
    219                  if (ErrorLine) {
   \   00000044   00009DE5           LDR      R0,[SP, #+0]
   \   00000048   000050E3           CMP      R0,#+0
   \   0000004C   0B00000A           BEQ      ??LoadConfigFromFile_2
    220                      if (ErrorLine != EOF) {
   \   00000050   060050E1           CMP      R0,R6
   \   00000054   3E02000A           BEQ      ??LoadConfigFromFile_3
    221                          GiveConfigWarning("ANPRO3", ErrorLine);
   \   00000058   0810A0E1           MOV      R1,R8
   \   0000005C   58008DE2           ADD      R0,SP,#+88
   \   00000060   ........           _BLF     ??AnsiString_1,??AnsiString??rA_1
   \   00000064   00109DE5           LDR      R1,[SP, #+0]
   \   00000068   ........           _BLF     ??GiveConfigWarning,??GiveConfigWarning??rA
   \   0000006C   0020A0E3           MOV      R2,#+0
   \   00000070   0110A0E3           MOV      R1,#+1
   \   00000074   58008DE2           ADD      R0,SP,#+88
   \                     ??LoadConfigFromFile_4:
   \   00000078   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   0000007C   340200EA           B        ??LoadConfigFromFile_3
    222                      }
    223                  } else {
    224                      Key = FindConfigKey(InputKeyWord);
   \                     ??LoadConfigFromFile_2:
   \   00000080   74108DE2           ADD      R1,SP,#+116
   \   00000084   90008DE2           ADD      R0,SP,#+144
   \   00000088   ........           _BLF     ??string,??string??rA
   \   0000008C   90008DE2           ADD      R0,SP,#+144
   \   00000090   ........           _BLF     ??FindConfigKey,??FindConfigKey??rA
   \   00000094   00B0A0E1           MOV      R11,R0
   \   00000098   0020A0E3           MOV      R2,#+0
   \   0000009C   0110A0E3           MOV      R1,#+1
   \   000000A0   90008DE2           ADD      R0,SP,#+144
   \   000000A4   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000000A8   0100A0E3           MOV      R0,#+1
   \   000000AC   00A0A0E3           MOV      R10,#+0
   \   000000B0   0B10A0E1           MOV      R1,R11
   \   000000B4   D10051E3           CMP      R1,#+209
   \   000000B8   1002000A           BEQ      ??LoadConfigFromFile_5
   \   000000BC   FA0F51E3           CMP      R1,#+1000
   \   000000C0   EA20A013           MOVNE    R2,#+234
   \   000000C4   C02F8213           ORRNE    R2,R2,#0x300
   \   000000C8   02005111           CMPNE    R1,R2
   \   000000CC   2002000A           BEQ      ??LoadConfigFromFile_3
   \   000000D0   012082E3           ORR      R2,R2,#0x1
   \   000000D4   020051E1           CMP      R1,R2
   \   000000D8   A800000A           BEQ      ??LoadConfigFromFile_6
   \   000000DC   FB0F51E3           CMP      R1,#+1004
   \   000000E0   1B02000A           BEQ      ??LoadConfigFromFile_3
   \   000000E4   0C2082E2           ADD      R2,R2,#+12
   \   000000E8   020051E1           CMP      R1,R2
   \   000000EC   6301000A           BEQ      ??LoadConfigFromFile_7
   \   000000F0   232082E2           ADD      R2,R2,#+35
   \   000000F4   020051E1           CMP      R1,R2
   \   000000F8   DA00000A           BEQ      ??LoadConfigFromFile_8
   \   000000FC   142082E2           ADD      R2,R2,#+20
   \   00000100   020051E1           CMP      R1,R2
   \   00000104   1A01000A           BEQ      ??LoadConfigFromFile_9
   \   00000108   460E51E3           CMP      R1,#+1120
   \   0000010C   9E01000A           BEQ      ??LoadConfigFromFile_10
   \   00000110   0520A0E3           MOV      R2,#+5
   \   00000114   802E82E3           ORR      R2,R2,#0x800
   \   00000118   020051E1           CMP      R1,R2
   \   0000011C   9B00000A           BEQ      ??LoadConfigFromFile_11
   \   00000120   062082E2           ADD      R2,R2,#+6
   \   00000124   020051E1           CMP      R1,R2
   \   00000128   A400000A           BEQ      ??LoadConfigFromFile_12
   \   0000012C   C220A0E3           MOV      R2,#+194
   \   00000130   B02E82E3           ORR      R2,R2,#0xB00
   \   00000134   020051E1           CMP      R1,R2
   \   00000138   01208213           ORRNE    R2,R2,#0x1
   \   0000013C   02005111           CMPNE    R1,R2
   \   00000140   01208212           ADDNE    R2,R2,#+1
   \   00000144   02005111           CMPNE    R1,R2
   \   00000148   02208213           ORRNE    R2,R2,#0x2
   \   0000014C   02005111           CMPNE    R1,R2
   \   00000150   01208213           ORRNE    R2,R2,#0x1
   \   00000154   02005111           CMPNE    R1,R2
   \   00000158   01208212           ADDNE    R2,R2,#+1
   \   0000015C   02005111           CMPNE    R1,R2
   \   00000160   01208213           ORRNE    R2,R2,#0x1
   \   00000164   02005111           CMPNE    R1,R2
   \   00000168   04208213           ORRNE    R2,R2,#0x4
   \   0000016C   02005111           CMPNE    R1,R2
   \   00000170   01208212           ADDNE    R2,R2,#+1
   \   00000174   02005111           CMPNE    R1,R2
   \   00000178   01208213           ORRNE    R2,R2,#0x1
   \   0000017C   02005111           CMPNE    R1,R2
   \   00000180   BD0E5113           CMPNE    R1,#+3024
   \   00000184   BD2E8013           ORRNE    R2,R0,#0xBD0
   \   00000188   02005111           CMPNE    R1,R2
   \   0000018C   01208212           ADDNE    R2,R2,#+1
   \   00000190   02005111           CMPNE    R1,R2
   \   00000194   01208213           ORRNE    R2,R2,#0x1
   \   00000198   02005111           CMPNE    R1,R2
   \   0000019C   01208212           ADDNE    R2,R2,#+1
   \   000001A0   02005111           CMPNE    R1,R2
   \   000001A4   01208213           ORRNE    R2,R2,#0x1
   \   000001A8   02005111           CMPNE    R1,R2
   \   000001AC   01208212           ADDNE    R2,R2,#+1
   \   000001B0   02005111           CMPNE    R1,R2
   \   000001B4   01208213           ORRNE    R2,R2,#0x1
   \   000001B8   02005111           CMPNE    R1,R2
   \   000001BC   01208212           ADDNE    R2,R2,#+1
   \   000001C0   02005111           CMPNE    R1,R2
   \   000001C4   01208213           ORRNE    R2,R2,#0x1
   \   000001C8   02005111           CMPNE    R1,R2
   \   000001CC   01208212           ADDNE    R2,R2,#+1
   \   000001D0   02005111           CMPNE    R1,R2
   \   000001D4   01208213           ORRNE    R2,R2,#0x1
   \   000001D8   02005111           CMPNE    R1,R2
   \   000001DC   01208212           ADDNE    R2,R2,#+1
   \   000001E0   02005111           CMPNE    R1,R2
   \   000001E4   01208213           ORRNE    R2,R2,#0x1
   \   000001E8   02005111           CMPNE    R1,R2
   \   000001EC   01208212           ADDNE    R2,R2,#+1
   \   000001F0   02005111           CMPNE    R1,R2
   \   000001F4   01208213           ORRNE    R2,R2,#0x1
   \   000001F8   02005111           CMPNE    R1,R2
   \   000001FC   BE0E5113           CMPNE    R1,#+3040
   \   00000200   BE2E8013           ORRNE    R2,R0,#0xBE0
   \   00000204   02005111           CMPNE    R1,R2
   \   00000208   01208212           ADDNE    R2,R2,#+1
   \   0000020C   02005111           CMPNE    R1,R2
   \   00000210   01208213           ORRNE    R2,R2,#0x1
   \   00000214   02005111           CMPNE    R1,R2
   \   00000218   02208212           ADDNE    R2,R2,#+2
   \   0000021C   02005111           CMPNE    R1,R2
   \   00000220   01208212           ADDNE    R2,R2,#+1
   \   00000224   02005111           CMPNE    R1,R2
   \   00000228   01208213           ORRNE    R2,R2,#0x1
   \   0000022C   02005111           CMPNE    R1,R2
   \   00000230   A3208212           ADDNE    R2,R2,#+163
   \   00000234   02005111           CMPNE    R1,R2
   \   00000238   01208213           ORRNE    R2,R2,#0x1
   \   0000023C   02005111           CMPNE    R1,R2
   \   00000240   02208212           ADDNE    R2,R2,#+2
   \   00000244   02005111           CMPNE    R1,R2
   \   00000248   01208212           ADDNE    R2,R2,#+1
   \   0000024C   02005111           CMPNE    R1,R2
   \   00000250   01208213           ORRNE    R2,R2,#0x1
   \   00000254   02005111           CMPNE    R1,R2
   \   00000258   C90E5113           CMPNE    R1,#+3216
   \   0000025C   C92E8013           ORRNE    R2,R0,#0xC90
   \   00000260   02005111           CMPNE    R1,R2
   \   00000264   01208212           ADDNE    R2,R2,#+1
   \   00000268   02005111           CMPNE    R1,R2
   \   0000026C   01208213           ORRNE    R2,R2,#0x1
   \   00000270   02005111           CMPNE    R1,R2
   \   00000274   0C208213           ORRNE    R2,R2,#0xC
   \   00000278   02005111           CMPNE    R1,R2
   \   0000027C   CA0E5113           CMPNE    R1,#+3232
   \   00000280   CA2E8013           ORRNE    R2,R0,#0xCA0
   \   00000284   02005111           CMPNE    R1,R2
   \   00000288   01208212           ADDNE    R2,R2,#+1
   \   0000028C   02005111           CMPNE    R1,R2
   \   00000290   03208212           ADDNE    R2,R2,#+3
   \   00000294   02005111           CMPNE    R1,R2
   \   00000298   01208212           ADDNE    R2,R2,#+1
   \   0000029C   02005111           CMPNE    R1,R2
   \   000002A0   01208213           ORRNE    R2,R2,#0x1
   \   000002A4   02005111           CMPNE    R1,R2
   \   000002A8   A701000A           BEQ      ??LoadConfigFromFile_13
   \   000002AC   D82F82E2           ADD      R2,R2,#+864
   \   000002B0   020051E1           CMP      R1,R2
   \   000002B4   6301000A           BEQ      ??LoadConfigFromFile_14
   \   000002B8   012082E2           ADD      R2,R2,#+1
   \   000002BC   020051E1           CMP      R1,R2
   \   000002C0   6F01000A           BEQ      ??LoadConfigFromFile_15
   \   000002C4   012082E3           ORR      R2,R2,#0x1
   \   000002C8   020051E1           CMP      R1,R2
   \   000002CC   6E01000A           BEQ      ??LoadConfigFromFile_16
   \   000002D0   012082E2           ADD      R2,R2,#+1
   \   000002D4   020051E1           CMP      R1,R2
   \   000002D8   8001000A           BEQ      ??LoadConfigFromFile_17
   \   000002DC   012082E3           ORR      R2,R2,#0x1
   \   000002E0   020051E1           CMP      R1,R2
   \   000002E4   7F01000A           BEQ      ??LoadConfigFromFile_18
   \   000002E8   012082E2           ADD      R2,R2,#+1
   \   000002EC   020051E1           CMP      R1,R2
   \   000002F0   6B01000A           BEQ      ??LoadConfigFromFile_19
   \   000002F4   022082E3           ORR      R2,R2,#0x2
   \   000002F8   020051E1           CMP      R1,R2
   \   000002FC   5701000A           BEQ      ??LoadConfigFromFile_20
   \   00000300   012082E3           ORR      R2,R2,#0x1
   \   00000304   020051E1           CMP      R1,R2
   \   00000308   4A01000A           BEQ      ??LoadConfigFromFile_21
   \   0000030C   012082E2           ADD      R2,R2,#+1
   \   00000310   020051E1           CMP      R1,R2
   \   00000314   4901000A           BEQ      ??LoadConfigFromFile_22
   \   00000318   012082E3           ORR      R2,R2,#0x1
   \   0000031C   020051E1           CMP      R1,R2
   \   00000320   2F00000A           BEQ      ??LoadConfigFromFile_23
   \   00000324   012082E2           ADD      R2,R2,#+1
   \   00000328   020051E1           CMP      R1,R2
   \   0000032C   6F01000A           BEQ      ??LoadConfigFromFile_24
   \   00000330   012082E3           ORR      R2,R2,#0x1
   \   00000334   020051E1           CMP      R1,R2
   \   00000338   6E01000A           BEQ      ??LoadConfigFromFile_25
    225                      switch (Key) {
    226                      default:
    227                          GiveConfigWarning("ANPRO3", InputKeyWord, ConfigString.LineCount);
   \   0000033C   74108DE2           ADD      R1,SP,#+116
   \   00000340   AC008DE2           ADD      R0,SP,#+172
   \   00000344   ........           _BLF     ??string,??string??rA
   \   00000348   0810A0E1           MOV      R1,R8
   \   0000034C   C8008DE2           ADD      R0,SP,#+200
   \   00000350   ........           _BLF     ??AnsiString_1,??AnsiString??rA_1
   \   00000354   1C2095E5           LDR      R2,[R5, #+28]
   \   00000358   AC108DE2           ADD      R1,SP,#+172
   \   0000035C   ........           _BLF     ??GiveConfigWarning_1,??GiveConfigWarning??rA_1
   \   00000360   0020A0E3           MOV      R2,#+0
   \   00000364   0110A0E3           MOV      R1,#+1
   \   00000368   AC008DE2           ADD      R0,SP,#+172
   \   0000036C   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000370   0A20A0E1           MOV      R2,R10
   \   00000374   0110A0E3           MOV      R1,#+1
   \   00000378   C8008DE2           ADD      R0,SP,#+200
   \   0000037C   3DFFFFEA           B        ??LoadConfigFromFile_4
    228                          break;
    229                      case C_PRO_END:
    230                      case C_PRO_END_COMMON:
    231                      case C_PRO_END_PRO:
    232                          break;
    233                      case C_PRO_START_PRO:
    234                          PRogramObject::LoadConfigString(ConfigString);
   \                     ??LoadConfigFromFile_6:
   \   00000380   0510A0E1           MOV      R1,R5
   \   00000384   0400A0E1           MOV      R0,R4
   \   00000388   ........           _BLF     ??LoadConfigString,??LoadConfigString??rA
   \   0000038C   700100EA           B        ??LoadConfigFromFile_3
    235                          break;
    236                      case C_TCU_ADDRESS:
    237                          TCUAddress = ConfigString.ReadLong(ErrorLine);
   \                     ??LoadConfigFromFile_11:
   \   00000390   0020A0E3           MOV      R2,#+0
   \   00000394   0D10A0E1           MOV      R1,SP
   \   00000398   0500A0E1           MOV      R0,R5
   \   0000039C   ........           _BLF     ??ReadLong,??ReadLong??rA
   \   000003A0   880184E5           STR      R0,[R4, #+392]
    238                          NoError = !ErrorLine;
   \   000003A4   00009DE5           LDR      R0,[SP, #+0]
   \   000003A8   000050E3           CMP      R0,#+0
   \   000003AC   0100001A           BNE      ??LoadConfigFromFile_26
   \                     ??LoadConfigFromFile_27:
   \   000003B0   0170A0E3           MOV      R7,#+1
   \   000003B4   660100EA           B        ??LoadConfigFromFile_3
   \                     ??LoadConfigFromFile_26:
   \   000003B8   0070A0E3           MOV      R7,#+0
   \   000003BC   640100EA           B        ??LoadConfigFromFile_3
    239                          break;
    240                      case C_TCU_PORT_NO:
    241                          WinUart = ConfigString.ReadLong(ErrorLine);
   \                     ??LoadConfigFromFile_12:
   \   000003C0   0020A0E3           MOV      R2,#+0
   \   000003C4   0D10A0E1           MOV      R1,SP
   \   000003C8   0500A0E1           MOV      R0,R5
   \   000003CC   ........           _BLF     ??ReadLong,??ReadLong??rA
   \   000003D0   8C0184E5           STR      R0,[R4, #+396]
    242                          NoError = !ErrorLine;
   \                     ??LoadConfigFromFile_28:
   \   000003D4   00009DE5           LDR      R0,[SP, #+0]
   \   000003D8   000050E3           CMP      R0,#+0
   \   000003DC   F5FFFF1A           BNE      ??LoadConfigFromFile_26
   \   000003E0   F2FFFFEA           B        ??LoadConfigFromFile_27
    243                          break;
    244                      case C_ANPRO3_DELAY:
    245                          Delay   = ConfigString.ReadLong(ErrorLine);
   \                     ??LoadConfigFromFile_23:
   \   000003E4   0020A0E3           MOV      R2,#+0
   \   000003E8   0D10A0E1           MOV      R1,SP
   \   000003EC   0500A0E1           MOV      R0,R5
   \   000003F0   ........           _BLF     ??ReadLong,??ReadLong??rA
   \   000003F4   E80184E5           STR      R0,[R4, #+488]
    246                          NoError = !ErrorLine;
   \   000003F8   00009DE5           LDR      R0,[SP, #+0]
   \   000003FC   000050E3           CMP      R0,#+0
   \   00000400   EAFFFF0A           BEQ      ??LoadConfigFromFile_27
   \   00000404   EBFFFFEA           B        ??LoadConfigFromFile_26
    247                          break;
    248                      case C_PRO_TANK:
    249                          {
    250                              bool EndFound = false;
    251                              do {
    252                                  InputKeyWord = ConfigString.NextWord(ErrorLine);
    253                                  Key = FindValueConfigKey(InputKeyWord);
    254                                  switch (Key) {
    255                                  case C_ANPRO3_VALDEF_END :
    256                                  case C_ANPRO3_VALDEF_END2:
    257                                  case C_PRO_END           :
    258                                      EndFound = true;
    259                                      break;
    260                                  default:
    261                                      {
    262                                          int Index = LibFind_Value(SelectTankValueList, SizeofSelectTankValueList, Key);
    263                                          if (Index >= 0) {
    264                                              TnkDataValTable.push_back(Key);
    265                                          } else {
    266                                              GiveConfigWarning("ANPRO3", InputKeyWord, ConfigString.LineCount);
   \                     ??LoadConfigFromFile_29:
   \   00000408   74108DE2           ADD      R1,SP,#+116
   \   0000040C   3C008DE2           ADD      R0,SP,#+60
   \   00000410   ........           _BLF     ??string,??string??rA
   \   00000414   0810A0E1           MOV      R1,R8
   \   00000418   58008DE2           ADD      R0,SP,#+88
   \   0000041C   ........           _BLF     ??AnsiString_1,??AnsiString??rA_1
   \   00000420   1C2095E5           LDR      R2,[R5, #+28]
   \   00000424   3C108DE2           ADD      R1,SP,#+60
   \   00000428   ........           _BLF     ??GiveConfigWarning_1,??GiveConfigWarning??rA_1
   \   0000042C   0020A0E3           MOV      R2,#+0
   \   00000430   0110A0E3           MOV      R1,#+1
   \   00000434   3C008DE2           ADD      R0,SP,#+60
   \   00000438   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   0000043C   0020A0E3           MOV      R2,#+0
   \   00000440   0110A0E3           MOV      R1,#+1
   \   00000444   58008DE2           ADD      R0,SP,#+88
   \   00000448   ........           _BLF     ??_Tidy,??_Tidy??rA
    267                                          }
    268                                      }
    269                                      break;
    270                                  }
    271                              }while (!EndFound && NoError && (ErrorLine != EOF));
   \                     ??LoadConfigFromFile_30:
   \   0000044C   010027E2           EOR      R0,R7,#0x1
   \   00000450   0A0080E1           ORR      R0,R0,R10
   \   00000454   000CB0E1           LSLS     R0,R0,#+24
   \   00000458   3D01001A           BNE      ??LoadConfigFromFile_3
   \   0000045C   00009DE5           LDR      R0,[SP, #+0]
   \   00000460   060050E1           CMP      R0,R6
   \   00000464   3A01000A           BEQ      ??LoadConfigFromFile_3
   \                     ??LoadConfigFromFile_8:
   \   00000468   0030A0E3           MOV      R3,#+0
   \   0000046C   0D20A0E1           MOV      R2,SP
   \   00000470   20108DE2           ADD      R1,SP,#+32
   \   00000474   0500A0E1           MOV      R0,R5
   \   00000478   ........           _BLF     ??NextWord,??NextWord??rA
   \   0000047C   ........           LDR      R0,??DataTable25  ;; ??npos
   \   00000480   0020A0E3           MOV      R2,#+0
   \   00000484   003090E5           LDR      R3,[R0, #+0]
   \   00000488   20108DE2           ADD      R1,SP,#+32
   \   0000048C   74008DE2           ADD      R0,SP,#+116
   \   00000490   ........           _BLF     ??assign,??assign??rA
   \   00000494   0020A0E3           MOV      R2,#+0
   \   00000498   0110A0E3           MOV      R1,#+1
   \   0000049C   20008DE2           ADD      R0,SP,#+32
   \   000004A0   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000004A4   74108DE2           ADD      R1,SP,#+116
   \   000004A8   04008DE2           ADD      R0,SP,#+4
   \   000004AC   ........           _BLF     ??string,??string??rA
   \   000004B0   04008DE2           ADD      R0,SP,#+4
   \   000004B4   ........           _BLF     ??FindValueConfigKey,??FindValueConfigKey??rA
   \   000004B8   00B0A0E1           MOV      R11,R0
   \   000004BC   0020A0E3           MOV      R2,#+0
   \   000004C0   0110A0E3           MOV      R1,#+1
   \   000004C4   04008DE2           ADD      R0,SP,#+4
   \   000004C8   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000004CC   FA0F5BE3           CMP      R11,#+1000
   \   000004D0   0510A013           MOVNE    R1,#+5
   \   000004D4   401D8113           ORRNE    R1,R1,#0x1000
   \   000004D8   01005B11           CMPNE    R11,R1
   \   000004DC   01108112           ADDNE    R1,R1,#+1
   \   000004E0   01005B11           CMPNE    R11,R1
   \   000004E4   01A0A003           MOVEQ    R10,#+1
   \   000004E8   D7FFFF0A           BEQ      ??LoadConfigFromFile_30
   \   000004EC   001099E5           LDR      R1,[R9, #+0]
   \   000004F0   0B20A0E1           MOV      R2,R11
   \   000004F4   100089E2           ADD      R0,R9,#+16
   \   000004F8   ........           _BLF     ??LibFind_Value,??LibFind_Value??rA
   \   000004FC   000050E3           CMP      R0,#+0
   \   00000500   C0FFFF4A           BMI      ??LoadConfigFromFile_29
   \   00000504   0B10A0E1           MOV      R1,R11
   \   00000508   670F84E2           ADD      R0,R4,#+412
   \   0000050C   ........           _BLF     ??_Push_back0_1,??_Push_back0??rA_1
   \   00000510   CDFFFFEA           B        ??LoadConfigFromFile_30
    272                          }
    273                          break;
    274                      case C_PRO_TEMP:
    275                          {
    276                              bool EndFound = false;
    277                              do {
    278                                  InputKeyWord = ConfigString.NextWord(ErrorLine);
    279                                  Key = FindValueConfigKey(InputKeyWord);
    280                                  switch (Key) {
    281                                  case C_ANPRO3_VALDEF_END :
    282                                  case C_ANPRO3_VALDEF_END2:
    283                                  case C_PRO_END           :
    284                                      EndFound = true;
    285                                      break;
    286                                  default:
    287                                      {
    288                                          int Index = LibFind_Value(SelectTempValueList, SizeofSelectTempValueList, Key);
    289                                          if (Index >= 0) {
    290                                              TmpDataValTable.push_back(Key);
    291                                          } else {
    292                                              GiveConfigWarning("ANPRO3", InputKeyWord, ConfigString.LineCount);
   \                     ??LoadConfigFromFile_31:
   \   00000514   74108DE2           ADD      R1,SP,#+116
   \   00000518   20008DE2           ADD      R0,SP,#+32
   \   0000051C   ........           _BLF     ??string,??string??rA
   \   00000520   0810A0E1           MOV      R1,R8
   \   00000524   04008DE2           ADD      R0,SP,#+4
   \   00000528   ........           _BLF     ??AnsiString_1,??AnsiString??rA_1
   \   0000052C   1C2095E5           LDR      R2,[R5, #+28]
   \   00000530   20108DE2           ADD      R1,SP,#+32
   \   00000534   ........           _BLF     ??GiveConfigWarning_1,??GiveConfigWarning??rA_1
   \   00000538   0020A0E3           MOV      R2,#+0
   \   0000053C   0110A0E3           MOV      R1,#+1
   \   00000540   20008DE2           ADD      R0,SP,#+32
   \   00000544   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000548   0020A0E3           MOV      R2,#+0
   \   0000054C   0110A0E3           MOV      R1,#+1
   \   00000550   04008DE2           ADD      R0,SP,#+4
   \   00000554   ........           _BLF     ??_Tidy,??_Tidy??rA
    293                                          }
    294                                      }
    295                                      break;
    296                                  }
    297                              }while (!EndFound && NoError && (ErrorLine != EOF));
   \                     ??LoadConfigFromFile_32:
   \   00000558   010027E2           EOR      R0,R7,#0x1
   \   0000055C   0A0080E1           ORR      R0,R0,R10
   \   00000560   000CB0E1           LSLS     R0,R0,#+24
   \   00000564   FA00001A           BNE      ??LoadConfigFromFile_3
   \   00000568   00009DE5           LDR      R0,[SP, #+0]
   \   0000056C   060050E1           CMP      R0,R6
   \   00000570   F700000A           BEQ      ??LoadConfigFromFile_3
   \                     ??LoadConfigFromFile_9:
   \   00000574   0030A0E3           MOV      R3,#+0
   \   00000578   0D20A0E1           MOV      R2,SP
   \   0000057C   3C108DE2           ADD      R1,SP,#+60
   \   00000580   0500A0E1           MOV      R0,R5
   \   00000584   ........           _BLF     ??NextWord,??NextWord??rA
   \   00000588   ........           LDR      R0,??DataTable25  ;; ??npos
   \   0000058C   0020A0E3           MOV      R2,#+0
   \   00000590   003090E5           LDR      R3,[R0, #+0]
   \   00000594   3C108DE2           ADD      R1,SP,#+60
   \   00000598   74008DE2           ADD      R0,SP,#+116
   \   0000059C   ........           _BLF     ??assign,??assign??rA
   \   000005A0   0020A0E3           MOV      R2,#+0
   \   000005A4   0110A0E3           MOV      R1,#+1
   \   000005A8   3C008DE2           ADD      R0,SP,#+60
   \   000005AC   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000005B0   74108DE2           ADD      R1,SP,#+116
   \   000005B4   58008DE2           ADD      R0,SP,#+88
   \   000005B8   ........           _BLF     ??string,??string??rA
   \   000005BC   58008DE2           ADD      R0,SP,#+88
   \   000005C0   ........           _BLF     ??FindValueConfigKey,??FindValueConfigKey??rA
   \   000005C4   00B0A0E1           MOV      R11,R0
   \   000005C8   0020A0E3           MOV      R2,#+0
   \   000005CC   0110A0E3           MOV      R1,#+1
   \   000005D0   58008DE2           ADD      R0,SP,#+88
   \   000005D4   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000005D8   FA0F5BE3           CMP      R11,#+1000
   \   000005DC   0510A013           MOVNE    R1,#+5
   \   000005E0   401D8113           ORRNE    R1,R1,#0x1000
   \   000005E4   01005B11           CMPNE    R11,R1
   \   000005E8   01108112           ADDNE    R1,R1,#+1
   \   000005EC   01005B11           CMPNE    R11,R1
   \   000005F0   01A0A003           MOVEQ    R10,#+1
   \   000005F4   D7FFFF0A           BEQ      ??LoadConfigFromFile_32
   \   000005F8   0C1099E5           LDR      R1,[R9, #+12]
   \   000005FC   0B20A0E1           MOV      R2,R11
   \   00000600   790F89E2           ADD      R0,R9,#+484
   \   00000604   ........           _BLF     ??LibFind_Value,??LibFind_Value??rA
   \   00000608   000050E3           CMP      R0,#+0
   \   0000060C   C0FFFF4A           BMI      ??LoadConfigFromFile_31
   \   00000610   0B10A0E1           MOV      R1,R11
   \   00000614   6D0F84E2           ADD      R0,R4,#+436
   \   00000618   ........           _BLF     ??_Push_back0_1,??_Push_back0??rA_1
   \   0000061C   CDFFFFEA           B        ??LoadConfigFromFile_32
    298                          }
    299                          break;
    300                      case C_PRO_SYSDATA:
    301                          {
    302                              bool EndFound = false;
    303                              do {
    304                                  InputKeyWord = ConfigString.NextWord(ErrorLine);
    305                                  Key = FindValueConfigKey(InputKeyWord);
    306          
    307                                  switch (Key) {
    308                                  case C_ANPRO3_VALDEF_END :
    309                                  case C_ANPRO3_VALDEF_END2:
    310                                  case C_PRO_END           :
    311                                      EndFound = true;
    312                                      break;
    313                                  default:
    314                                      {
    315                                          int Index = LibFind_ObjectValue(SelectAllSysValList, SizeofSelectAllSysValList, Key);
    316                                          if (Index >= 0) {
    317                                              SysDataValTable.push_back(Key);
    318                                          } else {
    319                                              GiveConfigWarning("ANPRO3", InputKeyWord, ConfigString.LineCount);
   \                     ??LoadConfigFromFile_33:
   \   00000620   74108DE2           ADD      R1,SP,#+116
   \   00000624   3C008DE2           ADD      R0,SP,#+60
   \   00000628   ........           _BLF     ??string,??string??rA
   \   0000062C   0810A0E1           MOV      R1,R8
   \   00000630   58008DE2           ADD      R0,SP,#+88
   \   00000634   ........           _BLF     ??AnsiString_1,??AnsiString??rA_1
   \   00000638   1C2095E5           LDR      R2,[R5, #+28]
   \   0000063C   3C108DE2           ADD      R1,SP,#+60
   \   00000640   ........           _BLF     ??GiveConfigWarning_1,??GiveConfigWarning??rA_1
   \   00000644   0020A0E3           MOV      R2,#+0
   \   00000648   0110A0E3           MOV      R1,#+1
   \   0000064C   3C008DE2           ADD      R0,SP,#+60
   \   00000650   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000654   0020A0E3           MOV      R2,#+0
   \   00000658   0110A0E3           MOV      R1,#+1
   \   0000065C   58008DE2           ADD      R0,SP,#+88
   \   00000660   ........           _BLF     ??_Tidy,??_Tidy??rA
    320                                          }
    321                                      }
    322                                      break;
    323                                  }
    324                              }while (!EndFound && NoError && (ErrorLine != EOF));
   \                     ??LoadConfigFromFile_34:
   \   00000664   010027E2           EOR      R0,R7,#0x1
   \   00000668   0A0080E1           ORR      R0,R0,R10
   \   0000066C   000CB0E1           LSLS     R0,R0,#+24
   \   00000670   B700001A           BNE      ??LoadConfigFromFile_3
   \   00000674   00009DE5           LDR      R0,[SP, #+0]
   \   00000678   060050E1           CMP      R0,R6
   \   0000067C   B400000A           BEQ      ??LoadConfigFromFile_3
   \                     ??LoadConfigFromFile_7:
   \   00000680   0030A0E3           MOV      R3,#+0
   \   00000684   0D20A0E1           MOV      R2,SP
   \   00000688   20108DE2           ADD      R1,SP,#+32
   \   0000068C   0500A0E1           MOV      R0,R5
   \   00000690   ........           _BLF     ??NextWord,??NextWord??rA
   \   00000694   ........           LDR      R0,??DataTable25  ;; ??npos
   \   00000698   0020A0E3           MOV      R2,#+0
   \   0000069C   003090E5           LDR      R3,[R0, #+0]
   \   000006A0   20108DE2           ADD      R1,SP,#+32
   \   000006A4   74008DE2           ADD      R0,SP,#+116
   \   000006A8   ........           _BLF     ??assign,??assign??rA
   \   000006AC   0020A0E3           MOV      R2,#+0
   \   000006B0   0110A0E3           MOV      R1,#+1
   \   000006B4   20008DE2           ADD      R0,SP,#+32
   \   000006B8   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000006BC   74108DE2           ADD      R1,SP,#+116
   \   000006C0   04008DE2           ADD      R0,SP,#+4
   \   000006C4   ........           _BLF     ??string,??string??rA
   \   000006C8   04008DE2           ADD      R0,SP,#+4
   \   000006CC   ........           _BLF     ??FindValueConfigKey,??FindValueConfigKey??rA
   \   000006D0   00B0A0E1           MOV      R11,R0
   \   000006D4   0020A0E3           MOV      R2,#+0
   \   000006D8   0110A0E3           MOV      R1,#+1
   \   000006DC   04008DE2           ADD      R0,SP,#+4
   \   000006E0   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000006E4   FA0F5BE3           CMP      R11,#+1000
   \   000006E8   0510A013           MOVNE    R1,#+5
   \   000006EC   401D8113           ORRNE    R1,R1,#0x1000
   \   000006F0   01005B11           CMPNE    R11,R1
   \   000006F4   01108112           ADDNE    R1,R1,#+1
   \   000006F8   01005B11           CMPNE    R11,R1
   \   000006FC   01A0A003           MOVEQ    R10,#+1
   \   00000700   D7FFFF0A           BEQ      ??LoadConfigFromFile_34
   \   00000704   041099E5           LDR      R1,[R9, #+4]
   \   00000708   0B20A0E1           MOV      R2,R11
   \   0000070C   490F89E2           ADD      R0,R9,#+292
   \   00000710   ........           _BLF     ??LibFind_ObjectValue,??LibFind_ObjectValue??rA
   \   00000714   000050E3           CMP      R0,#+0
   \   00000718   C0FFFF4A           BMI      ??LoadConfigFromFile_33
   \   0000071C   0B10A0E1           MOV      R1,R11
   \   00000720   640F84E2           ADD      R0,R4,#+400
   \   00000724   ........           _BLF     ??_Push_back0_1,??_Push_back0??rA_1
   \   00000728   CDFFFFEA           B        ??LoadConfigFromFile_34
    325                          }
    326                          break;
    327                      case C_PRO_LINEPRESS:
    328                          {
    329                              bool EndFound = false;
    330                              do {
    331                                  InputKeyWord = ConfigString.NextWord(ErrorLine);
    332                                  Key = FindValueConfigKey(InputKeyWord);
    333                                  switch (Key) {
    334                                  case C_ANPRO3_VALDEF_END :
    335                                  case C_ANPRO3_VALDEF_END2:
    336                                  case C_PRO_END           :
    337                                      EndFound = true;
    338                                      break;
    339                                  default:
    340                                      {
    341                                          int Index = LibFind_Value(SelectLPressValueList, SizeofSelectLPressValueList, Key);
    342                                          if (Index >= 0) {
    343                                              LPrDataValTable.push_back(Key);
    344                                          } else {
    345                                              GiveConfigWarning("ANPRO3", InputKeyWord, ConfigString.LineCount);
   \                     ??LoadConfigFromFile_35:
   \   0000072C   74108DE2           ADD      R1,SP,#+116
   \   00000730   20008DE2           ADD      R0,SP,#+32
   \   00000734   ........           _BLF     ??string,??string??rA
   \   00000738   0810A0E1           MOV      R1,R8
   \   0000073C   04008DE2           ADD      R0,SP,#+4
   \   00000740   ........           _BLF     ??AnsiString_1,??AnsiString??rA_1
   \   00000744   1C2095E5           LDR      R2,[R5, #+28]
   \   00000748   20108DE2           ADD      R1,SP,#+32
   \   0000074C   ........           _BLF     ??GiveConfigWarning_1,??GiveConfigWarning??rA_1
   \   00000750   0020A0E3           MOV      R2,#+0
   \   00000754   0110A0E3           MOV      R1,#+1
   \   00000758   20008DE2           ADD      R0,SP,#+32
   \   0000075C   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000760   0020A0E3           MOV      R2,#+0
   \   00000764   0110A0E3           MOV      R1,#+1
   \   00000768   04008DE2           ADD      R0,SP,#+4
   \   0000076C   ........           _BLF     ??_Tidy,??_Tidy??rA
    346                                          }
    347                                      }
    348                                      break;
    349                                  }
    350                              }while (!EndFound && NoError && (ErrorLine != EOF));
   \                     ??LoadConfigFromFile_36:
   \   00000770   010027E2           EOR      R0,R7,#0x1
   \   00000774   0A0080E1           ORR      R0,R0,R10
   \   00000778   000CB0E1           LSLS     R0,R0,#+24
   \   0000077C   7400001A           BNE      ??LoadConfigFromFile_3
   \   00000780   00009DE5           LDR      R0,[SP, #+0]
   \   00000784   060050E1           CMP      R0,R6
   \   00000788   7100000A           BEQ      ??LoadConfigFromFile_3
   \                     ??LoadConfigFromFile_10:
   \   0000078C   0030A0E3           MOV      R3,#+0
   \   00000790   0D20A0E1           MOV      R2,SP
   \   00000794   3C108DE2           ADD      R1,SP,#+60
   \   00000798   0500A0E1           MOV      R0,R5
   \   0000079C   ........           _BLF     ??NextWord,??NextWord??rA
   \   000007A0   ........           LDR      R0,??DataTable25  ;; ??npos
   \   000007A4   0020A0E3           MOV      R2,#+0
   \   000007A8   003090E5           LDR      R3,[R0, #+0]
   \   000007AC   3C108DE2           ADD      R1,SP,#+60
   \   000007B0   74008DE2           ADD      R0,SP,#+116
   \   000007B4   ........           _BLF     ??assign,??assign??rA
   \   000007B8   0020A0E3           MOV      R2,#+0
   \   000007BC   0110A0E3           MOV      R1,#+1
   \   000007C0   3C008DE2           ADD      R0,SP,#+60
   \   000007C4   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000007C8   74108DE2           ADD      R1,SP,#+116
   \   000007CC   58008DE2           ADD      R0,SP,#+88
   \   000007D0   ........           _BLF     ??string,??string??rA
   \   000007D4   58008DE2           ADD      R0,SP,#+88
   \   000007D8   ........           _BLF     ??FindValueConfigKey,??FindValueConfigKey??rA
   \   000007DC   00B0A0E1           MOV      R11,R0
   \   000007E0   0020A0E3           MOV      R2,#+0
   \   000007E4   0110A0E3           MOV      R1,#+1
   \   000007E8   58008DE2           ADD      R0,SP,#+88
   \   000007EC   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000007F0   FA0F5BE3           CMP      R11,#+1000
   \   000007F4   0510A013           MOVNE    R1,#+5
   \   000007F8   401D8113           ORRNE    R1,R1,#0x1000
   \   000007FC   01005B11           CMPNE    R11,R1
   \   00000800   01108112           ADDNE    R1,R1,#+1
   \   00000804   01005B11           CMPNE    R11,R1
   \   00000808   01A0A003           MOVEQ    R10,#+1
   \   0000080C   D7FFFF0A           BEQ      ??LoadConfigFromFile_36
   \   00000810   081099E5           LDR      R1,[R9, #+8]
   \   00000814   0B20A0E1           MOV      R2,R11
   \   00000818   760F89E2           ADD      R0,R9,#+472
   \   0000081C   ........           _BLF     ??LibFind_Value,??LibFind_Value??rA
   \   00000820   000050E3           CMP      R0,#+0
   \   00000824   C0FFFF4A           BMI      ??LoadConfigFromFile_35
   \   00000828   0B10A0E1           MOV      R1,R11
   \   0000082C   6A0F84E2           ADD      R0,R4,#+424
   \   00000830   ........           _BLF     ??_Push_back0_1,??_Push_back0??rA_1
   \   00000834   CDFFFFEA           B        ??LoadConfigFromFile_36
    351                          }
    352                          break;
    353                      case C_ANPRO3_CLEAR_RX_BUF  :
    354                          ClearRxBufAfterReceive = true;
   \                     ??LoadConfigFromFile_21:
   \   00000838   EF01C4E5           STRB     R0,[R4, #+495]
   \   0000083C   440000EA           B        ??LoadConfigFromFile_3
    355                          break;
    356                      case C_ANPRO3_SOALL_EXTRA_SPC  :
    357                          SOAllExtraSpace = true;
   \                     ??LoadConfigFromFile_22:
   \   00000840   F001C4E5           STRB     R0,[R4, #+496]
   \   00000844   420000EA           B        ??LoadConfigFromFile_3
    358                          break;
    359                      case C_ANPRO3_CHECKSUM      :
    360                          Checksum_Type = ConfigString.ReadLong(ErrorLine);
   \                     ??LoadConfigFromFile_14:
   \   00000848   0020A0E3           MOV      R2,#+0
   \   0000084C   0D10A0E1           MOV      R1,SP
   \   00000850   0500A0E1           MOV      R0,R5
   \   00000854   ........           _BLF     ??ReadLong,??ReadLong??rA
   \   00000858   C40184E5           STR      R0,[R4, #+452]
    361                          NoError = !ErrorLine;
   \   0000085C   DCFEFFEA           B        ??LoadConfigFromFile_28
    362                          break;
    363                      case C_ANPRO3_VAL_ERR_ACT      :
    364                          ValueErrorAction = ConfigString.ReadLong(ErrorLine);
   \                     ??LoadConfigFromFile_20:
   \   00000860   0020A0E3           MOV      R2,#+0
   \   00000864   0D10A0E1           MOV      R1,SP
   \   00000868   0500A0E1           MOV      R0,R5
   \   0000086C   ........           _BLF     ??ReadLong,??ReadLong??rA
   \   00000870   C80184E5           STR      R0,[R4, #+456]
    365                          NoError = !ErrorLine;
   \   00000874   00009DE5           LDR      R0,[SP, #+0]
   \   00000878   000050E3           CMP      R0,#+0
   \   0000087C   CDFEFF1A           BNE      ??LoadConfigFromFile_26
   \   00000880   CAFEFFEA           B        ??LoadConfigFromFile_27
    366                          break;
    367                      case C_ANPRO3_REQUEST       :
    368                          RequestMode = true;
   \                     ??LoadConfigFromFile_15:
   \   00000884   C001C4E5           STRB     R0,[R4, #+448]
   \   00000888   310000EA           B        ??LoadConfigFromFile_3
    369                          break;
    370                      case C_ANPRO3_SEPARATOR     :
    371                          Separator = (char)ConfigString.ReadLong(ErrorLine);
   \                     ??LoadConfigFromFile_16:
   \   0000088C   0020A0E3           MOV      R2,#+0
   \   00000890   0D10A0E1           MOV      R1,SP
   \   00000894   0500A0E1           MOV      R0,R5
   \   00000898   ........           _BLF     ??ReadLong,??ReadLong??rA
   \   0000089C   EC01C4E5           STRB     R0,[R4, #+492]
   \   000008A0   2B0000EA           B        ??LoadConfigFromFile_3
    372                          break;
    373                      case C_ANPRO3_SYNC_STR     :
    374                          SyncStr = ConfigString.NextWord(ErrorLine);
   \                     ??LoadConfigFromFile_19:
   \   000008A4   0030A0E3           MOV      R3,#+0
   \   000008A8   0D20A0E1           MOV      R2,SP
   \   000008AC   E4108DE2           ADD      R1,SP,#+228
   \   000008B0   0500A0E1           MOV      R0,R5
   \   000008B4   ........           _BLF     ??NextWord,??NextWord??rA
   \   000008B8   ........           LDR      R0,??DataTable25  ;; ??npos
   \   000008BC   0A20A0E1           MOV      R2,R10
   \   000008C0   003090E5           LDR      R3,[R0, #+0]
   \   000008C4   E4108DE2           ADD      R1,SP,#+228
   \   000008C8   730F84E2           ADD      R0,R4,#+460
   \   000008CC   ........           _BLF     ??assign,??assign??rA
   \   000008D0   0A20A0E1           MOV      R2,R10
   \   000008D4   0110A0E3           MOV      R1,#+1
   \   000008D8   E4008DE2           ADD      R0,SP,#+228
   \   000008DC   E5FDFFEA           B        ??LoadConfigFromFile_4
    375                          break;
    376                      case C_ANPRO3_INC_HW_STATUS :
    377                          IncludeHWStatus = true;
   \                     ??LoadConfigFromFile_17:
   \   000008E0   ED01C4E5           STRB     R0,[R4, #+493]
   \   000008E4   1A0000EA           B        ??LoadConfigFromFile_3
    378                          break;
    379                      case C_ANPRO3_INC_ALARM     :
    380                          IncludeAlarm = true;
   \                     ??LoadConfigFromFile_18:
   \   000008E8   EE01C4E5           STRB     R0,[R4, #+494]
   \   000008EC   180000EA           B        ??LoadConfigFromFile_3
    381                          break;
    382                      case C_ANPRO3_SEND_ALARMS_ONLY:
    383                          SendAlarmsOnly = true;
   \                     ??LoadConfigFromFile_24:
   \   000008F0   F101C4E5           STRB     R0,[R4, #+497]
   \   000008F4   160000EA           B        ??LoadConfigFromFile_3
    384                          break;
    385                      case C_ANPRO3_NEMA          :
    386                          isNEMA  = true;
   \                     ??LoadConfigFromFile_25:
   \   000008F8   4801C4E5           STRB     R0,[R4, #+328]
   \   000008FC   140000EA           B        ??LoadConfigFromFile_3
    387                          break;
    388                      case C_OBJECT_ID    :
    389                          do {
    390                              unsigned tmpIDNumber = ConfigString.ReadInteger(ErrorLine, C_PROLIST_END);
   \                     ??LoadConfigFromFile_5:
   \   00000900   4920A0E3           MOV      R2,#+73
   \   00000904   502E82E3           ORR      R2,R2,#0x500
   \   00000908   0D10A0E1           MOV      R1,SP
   \   0000090C   0500A0E1           MOV      R0,R5
   \   00000910   ........           _BLF     ??ReadInteger,??ReadInteger??rA
    391                              if (!ErrorLine) {
   \   00000914   00109DE5           LDR      R1,[SP, #+0]
   \   00000918   000051E3           CMP      R1,#+0
   \   0000091C   0200001A           BNE      ??LoadConfigFromFile_37
    392                                  //tmpIDNumber = CheckAndCorrectId(tmpIDNumber);
    393                                  IdNumbers.push_back(tmpIDNumber);
   \   00000920   0010A0E1           MOV      R1,R0
   \   00000924   800F84E2           ADD      R0,R4,#+512
   \   00000928   ........           _BLF     ??_Push_back0_2,??_Push_back0??rA_2
    394                              }
    395                          }while (!ErrorLine);
   \                     ??LoadConfigFromFile_37:
   \   0000092C   00009DE5           LDR      R0,[SP, #+0]
   \   00000930   000050E3           CMP      R0,#+0
   \   00000934   F1FFFF0A           BEQ      ??LoadConfigFromFile_5
    396                          if (ErrorLine == END_FOUND) {
   \   00000938   020070E3           CMN      R0,#+2
   \   0000093C   9DFEFF1A           BNE      ??LoadConfigFromFile_26
    397                              ErrorLine = 0;
   \   00000940   0010A0E3           MOV      R1,#+0
   \   00000944   00108DE5           STR      R1,[SP, #+0]
   \   00000948   98FEFFEA           B        ??LoadConfigFromFile_27
    398                          }
    399                          NoError = !ErrorLine;
    400                          break;
    401                      case ID_AL_OVERFILL                 :
    402                      case ID_AL_HIGH_LEVEL               :
    403                      case ID_AL_LOW_LEVEL                :
    404                      case ID_AL_HIGH_TEMP                :
    405                      case ID_AL_LOW_TEMP                 :
    406                      case ID_AL_LOW_BOT_TEMP             :
    407                      case ID_AL_HIGH_BOT_TEMP            :
    408                      case ID_AL_MAIN_WATERINGR           :
    409                      case ID_AL_PRE_WATERINGR            :
    410                      case ID_AL_LOW_T_PRESS              :
    411                      case ID_AL_HIGH_T_PRESS             :
    412                      case ID_AL_LOW_INERT_GAS_PRESS      :
    413                      case ID_AL_HIGH_INERT_GAS_PRESS     :
    414                      case ID_AL_LOW_PRESS_VAC            :
    415                      case ID_AL_HIGH_PRESS_VAC           :
    416                      case ID_AL_LOW_VAPOUR_RETURN        :
    417                      case ID_AL_HIGH_VAPOUR_RETURN       :
    418                      case ID_AL_X_LOW_T_PRESS1           :
    419                      case ID_AL_X_HIGH_T_PRESS1          :
    420                      case ID_AL_X_LOW_T_PRESS2           :
    421                      case ID_AL_X_HIGH_T_PRESS2          :
    422                      case ID_AL_LOW_LOADRATE             :
    423                      case ID_AL_HIGH_LOADRATE            :
    424                      case ID_AL_LEVEL_CHANGE             :
    425                      case ID_AL_DENS_DIFF                :
    426                      case ID_AL_LOW_LINE_PRESS           :
    427                      case ID_AL_HIGH_LINE_PRESS          :
    428                      case ID_AL_HIGHHIGH_LINE_PRESS          :
    429                      case ID_AL_SNS_OPEN_LOOP            :
    430                      case ID_AL_LEVEL_SWITCH             :
    431                      case ID_AL_LSWITCH_FAILURE          :
    432                      case ID_AL_LSWITCH_TEST             :
    433                      case ID_AL_SNS_SHORT_CIRCUIT        :
    434          
    435                      case ID_AL_SNS_ERROR                :
    436                      case ID_AL_SNS_CONCAL_ERROR         :
    437                      case ID_AL_SNS_CONV_ERROR           :
    438                      case ID_AL_IO_COM_ERROR             :
    439                      case ID_AL_SC_COM_ERROR             :
    440                      case ID_AL_MODBUS_INPUT_STATUS      :
    441                      case ID_AL_MODBUS_COM_ERROR         :
    442                      case ID_AL_WATER_DETECT             :
    443                      case ID_AL_FUSE                     :
    444                      case ID_AL_AC_VOLTAGE               :
    445                      case ID_AL_LOW_VOLTAGE              :
    446                      case ID_AL_HI_VOLTAGE               :
    447                      case ID_AL_SNS_HART_COM_ERROR       :
    448                      case ID_AL_SNS_HART_OPEN_LOOP       :
    449                      case ID_AL_SNS_HART_SHORT_CIRCUIT   :
    450                      case ID_AL_SNS_AIR_PURGE_FAILURE    :
    451                          AlarmTypeList.push_back(Key);
   \                     ??LoadConfigFromFile_13:
   \   0000094C   7D0F84E2           ADD      R0,R4,#+500
   \   00000950   ........           _BLF     ??_Push_back0_1,??_Push_back0??rA_1
    452                          break;
    453                      }
    454                  }
    455              }while (NoError && (ErrorLine != EOF) && (Key != C_PRO_END));
   \                     ??LoadConfigFromFile_3:
   \   00000954   0020A0E3           MOV      R2,#+0
   \   00000958   0110A0E3           MOV      R1,#+1
   \   0000095C   74008DE2           ADD      R0,SP,#+116
   \   00000960   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000964   000057E3           CMP      R7,#+0
   \   00000968   00009D15           LDRNE    R0,[SP, #+0]
   \   0000096C   06005011           CMPNE    R0,R6
   \   00000970   FA0F5B13           CMPNE    R11,#+1000
   \   00000974   ADFDFF1A           BNE      ??LoadConfigFromFile_1
    456              return ErrorLine;
   \   00000978   00009DE5           LDR      R0,[SP, #+0]
   \   0000097C   40DF8DE2           ADD      SP,SP,#+256
   \   00000980                      REQUIRE ?Subroutine31
   \   00000980                      ;; // Fall through to label ?Subroutine31
    457          }
    458          //--------------------------------------------------------------------------- '

   \                                 In segment CODE, align 4, keep-with-next
    459          void AnPro3object::SetAlarmList(void) {
   \                     ??SetAlarmList:
   \   00000000   F3432DE9           PUSH     {R0,R1,R4-R9,LR}
   \   00000004   0040A0E1           MOV      R4,R0
    460              if (!PROList.empty()) {
   \   00000008   1C0294E5           LDR      R0,[R4, #+540]
   \   0000000C   000050E3           CMP      R0,#+0
   \   00000010   2D00000A           BEQ      ??SetAlarmList_1
    461                  set<PRogramObject *>::iterator pBIt;
    462                  for (pBIt = PROList.begin(); pBIt != PROList.end(); pBIt++) {
   \   00000014   835FA0E3           MOV      R5,#+524
   \   00000018   049095E7           LDR      R9,[R5, +R4]
   \   0000001C   210000EA           B        ??SetAlarmList_2
    463                      PRogramObject *TElement = (PRogramObject *)*pBIt;
    464                      if (!TElement->CompleteAlarmInfoList.empty()) {
    465                          set<AlarmBasic *>::iterator pBIt;
    466                          for (pBIt = CompleteAlarmInfoList.begin(); pBIt != CompleteAlarmInfoList.end(); pBIt++) {
    467                              AlarmBasic *AlPtr = *pBIt;
   \                     ??SetAlarmList_3:
   \   00000020   107096E5           LDR      R7,[R6, #+16]
    468                              if (AlPtr) {
   \   00000024   000057E3           CMP      R7,#+0
   \   00000028   1500000A           BEQ      ??SetAlarmList_4
    469                                  bool Found = false;
   \   0000002C   0000A0E3           MOV      R0,#+0
    470                                  for (unsigned j = 0; !Found && j < AlarmTypeList.size(); j++) {
   \   00000030   0080A0E3           MOV      R8,#+0
   \                     ??SetAlarmList_5:
   \   00000034   7D1FA0E3           MOV      R1,#+500
   \   00000038   042081E0           ADD      R2,R1,R4
   \   0000003C   043092E5           LDR      R3,[R2, #+4]
   \   00000040   002092E5           LDR      R2,[R2, #+0]
   \   00000044   022043E0           SUB      R2,R3,R2
   \   00000048   220158E1           CMP      R8,R2, LSR #+2
   \   0000004C   0C00002A           BCS      ??SetAlarmList_4
    471                                      if (AlPtr->Type == AlarmTypeList[j]) {
   \   00000050   041091E7           LDR      R1,[R1, +R4]
   \   00000054   A02097E5           LDR      R2,[R7, #+160]
   \   00000058   081191E7           LDR      R1,[R1, +R8, LSL #+2]
   \   0000005C   010052E1           CMP      R2,R1
   \   00000060   0400001A           BNE      ??SetAlarmList_6
    472                                          AlarmSet.insert(AlPtr);
   \   00000064   0720A0E1           MOV      R2,R7
   \   00000068   891F84E2           ADD      R1,R4,#+548
   \   0000006C   0D00A0E1           MOV      R0,SP
   \   00000070   ........           _BLF     ??insert_1,??insert??rA_1
    473                                          Found = true;
   \   00000074   0100A0E3           MOV      R0,#+1
    474                                      }
    475                                  }
   \                     ??SetAlarmList_6:
   \   00000078   018088E2           ADD      R8,R8,#+1
   \   0000007C   000050E3           CMP      R0,#+0
   \   00000080   EBFFFF0A           BEQ      ??SetAlarmList_5
    476                              }
    477                          }
   \                     ??SetAlarmList_4:
   \   00000084   0600A0E1           MOV      R0,R6
   \   00000088   ........           _BLF     ??_IncP,??_IncP??rA
   \   0000008C   0060A0E1           MOV      R6,R0
   \                     ??SetAlarmList_7:
   \   00000090   FC0084E2           ADD      R0,R4,#+252
   \   00000094   000056E1           CMP      R6,R0
   \   00000098   E0FFFF1A           BNE      ??SetAlarmList_3
   \                     ??SetAlarmList_8:
   \   0000009C   0900A0E1           MOV      R0,R9
   \   000000A0   ........           _BLF     ??_IncP,??_IncP??rA
   \   000000A4   0090A0E1           MOV      R9,R0
   \                     ??SetAlarmList_2:
   \   000000A8   040085E0           ADD      R0,R5,R4
   \   000000AC   000059E1           CMP      R9,R0
   \   000000B0   0500000A           BEQ      ??SetAlarmList_1
   \   000000B4   100099E5           LDR      R0,[R9, #+16]
   \   000000B8   0C0190E5           LDR      R0,[R0, #+268]
   \   000000BC   000050E3           CMP      R0,#+0
   \   000000C0   F5FFFF0A           BEQ      ??SetAlarmList_8
   \   000000C4   FC6094E5           LDR      R6,[R4, #+252]
   \   000000C8   F0FFFFEA           B        ??SetAlarmList_7
    478                      }
    479                  }
    480              }
    481          }
   \                     ??SetAlarmList_1:
   \   000000CC   F343BDE8           POP      {R0,R1,R4-R9,LR}
   \   000000D0   1EFF2FE1           BX       LR               ;; return
    482          
    483          //---------------------------------------------------------------------------

   \                                 In segment CODE, align 4, keep-with-next
    484          void AnPro3object::SetProList(void) {
   \                     ??SetProList:
   \   00000000   F0402DE9           PUSH     {R4-R7,LR}
   \   00000004   5CD04DE2           SUB      SP,SP,#+92
   \   00000008   0040A0E1           MOV      R4,R0
    485              if (!IdNumbers.empty()) {
   \   0000000C   805FA0E3           MOV      R5,#+512
   \   00000010   040085E0           ADD      R0,R5,R4
   \   00000014   041090E5           LDR      R1,[R0, #+4]
   \   00000018   000090E5           LDR      R0,[R0, #+0]
   \   0000001C   000041E0           SUB      R0,R1,R0
   \   00000020   2001B0E1           LSRS     R0,R0,#+2
   \   00000024   3600000A           BEQ      ??SetProList_1
    486                  PROList.clear();
   \   00000028   836FA0E3           MOV      R6,#+524
   \   0000002C   040086E0           ADD      R0,R6,R4
   \   00000030   ........           _BLF     ??clear,??clear??rA
    487                  for (unsigned i = 0; i < IdNumbers.size(); i++) {
   \   00000034   0070A0E3           MOV      R7,#+0
   \   00000038   200000EA           B        ??SetProList_2
    488                      PRogramObject *PROPtr = (PRogramObject *)FindPROFromIDNumber(IdNumbers[i]);
    489                      if (PROPtr) {
    490                          PROList.insert(PROPtr);
    491                      } else {
    492                          AnsiString InfoStr;
   \                     ??SetProList_3:
   \   0000003C   1C008DE2           ADD      R0,SP,#+28
   \   00000040   ........           _BLF     ??AnsiString,??AnsiString??rA
    493                          InfoStr.cat_sprintf("ANPro3 RefIDNumber %i(0x%0x) is incorrect. Line Number %i", IdNumbers[i], IdNumbers[i], GetLineNumber());
   \   00000044   0400A0E1           MOV      R0,R4
   \   00000048   ........           _BLF     ??GetLineNumber,??GetLineNumber??rA
   \   0000004C   041095E7           LDR      R1,[R5, +R4]
   \   00000050   B4209FE5           LDR      R2,??SetProList_4  ;; `?<Constant "ANPro3 RefIDNumber %i...">`
   \   00000054   071181E0           ADD      R1,R1,R7, LSL #+2
   \   00000058   01002DE9           PUSH     {R0}
   \   0000005C   000091E5           LDR      R0,[R1, #+0]
   \   00000060   01002DE9           PUSH     {R0}
   \   00000064   003091E5           LDR      R3,[R1, #+0]
   \   00000068   48108DE2           ADD      R1,SP,#+72
   \   0000006C   24008DE2           ADD      R0,SP,#+36
   \   00000070   ........           _BLF     ??cat_sprintf,??cat_sprintf??rA
   \   00000074   0020A0E3           MOV      R2,#+0
   \   00000078   0110A0E3           MOV      R1,#+1
   \   0000007C   48008DE2           ADD      R0,SP,#+72
   \   00000080   ........           _BLF     ??_Tidy,??_Tidy??rA
    494                          GiveConfigWarning(InfoStr);
   \   00000084   24108DE2           ADD      R1,SP,#+36
   \   00000088   08008DE2           ADD      R0,SP,#+8
   \   0000008C   ........           _BLF     ??string,??string??rA
   \   00000090   08008DE2           ADD      R0,SP,#+8
   \   00000094   ........           _BLF     ??GiveConfigWarning_2,??GiveConfigWarning??rA_2
   \   00000098   0020A0E3           MOV      R2,#+0
   \   0000009C   0110A0E3           MOV      R1,#+1
   \   000000A0   08008DE2           ADD      R0,SP,#+8
   \   000000A4   ........           _BLF     ??_Tidy,??_Tidy??rA
    495                      }
   \   000000A8   0020A0E3           MOV      R2,#+0
   \   000000AC   0110A0E3           MOV      R1,#+1
   \   000000B0   24008DE2           ADD      R0,SP,#+36
   \   000000B4   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000000B8   08D08DE2           ADD      SP,SP,#+8
   \                     ??SetProList_5:
   \   000000BC   017087E2           ADD      R7,R7,#+1
   \                     ??SetProList_2:
   \   000000C0   040085E0           ADD      R0,R5,R4
   \   000000C4   041090E5           LDR      R1,[R0, #+4]
   \   000000C8   000090E5           LDR      R0,[R0, #+0]
   \   000000CC   000041E0           SUB      R0,R1,R0
   \   000000D0   200157E1           CMP      R7,R0, LSR #+2
   \   000000D4   0A00002A           BCS      ??SetProList_1
   \   000000D8   040095E7           LDR      R0,[R5, +R4]
   \   000000DC   0010A0E3           MOV      R1,#+0
   \   000000E0   070190E7           LDR      R0,[R0, +R7, LSL #+2]
   \   000000E4   ........           _BLF     ??FindPROFromIDNumber,??FindPROFromIDNumber??rA
   \   000000E8   000050E3           CMP      R0,#+0
   \   000000EC   D2FFFF0A           BEQ      ??SetProList_3
   \   000000F0   0020A0E1           MOV      R2,R0
   \   000000F4   041086E0           ADD      R1,R6,R4
   \   000000F8   38008DE2           ADD      R0,SP,#+56
   \   000000FC   ........           _BLF     ??insert_2,??insert??rA_2
   \   00000100   EDFFFFEA           B        ??SetProList_5
    496                  }
    497              }
    498          }
   \                     ??SetProList_1:
   \   00000104   5CD08DE2           ADD      SP,SP,#+92
   \   00000108   ........           B        ?Subroutine32
   \                     ??SetProList_4:
   \   0000010C   ........           DC32     `?<Constant "ANPro3 RefIDNumber %i...">`

   \                                 In segment CODE, align 4, keep-with-next
   \                     ?Subroutine32:
   \   00000000   F040BDE8           POP      {R4-R7,LR}
   \   00000004   1EFF2FE1           BX       LR               ;; return
   \                     ??Subroutine32_0:
   \   00000008   ........           DC32     ??ANPro3XRefList
    499          
    500          //---------------------------------------------------------------------------

   \                                 In segment CODE, align 4, keep-with-next
    501          void AnPro3object::SetGlobalProList(void) {
   \                     ??SetGlobalProList:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
    502              if (!AnPro3objectVector.empty()) {
   \   00000004   ........           LDR      R4,??DataTable11  ;; ??ObjectSet
   \   00000008   180084E2           ADD      R0,R4,#+24
   \   0000000C   ........           _BLF     ??empty,??empty??rA_1
   \   00000010   000050E3           CMP      R0,#+0
   \   00000014   0900001A           BNE      ??SetGlobalProList_1
    503                  for (unsigned i = 0; i < AnPro3objectVector.size(); i++) {
   \   00000018   0050A0E3           MOV      R5,#+0
   \   0000001C   020000EA           B        ??SetGlobalProList_2
    504                      AnPro3object *tmpPtr = AnPro3objectVector[i];
    505                      tmpPtr->SetProList();
   \                     ??SetGlobalProList_3:
   \   00000020   050190E7           LDR      R0,[R0, +R5, LSL #+2]
    506                  }
   \   00000024   015085E2           ADD      R5,R5,#+1
   \   00000028   ........           BL       ??SetProList
   \                     ??SetGlobalProList_2:
   \   0000002C   180094E5           LDR      R0,[R4, #+24]
   \   00000030   1C1094E5           LDR      R1,[R4, #+28]
   \   00000034   001041E0           SUB      R1,R1,R0
   \   00000038   210155E1           CMP      R5,R1, LSR #+2
   \   0000003C   F7FFFF3A           BCC      ??SetGlobalProList_3
    507              }
    508          }
   \                     ??SetGlobalProList_1:
   \   00000040                      REQUIRE ?Subroutine30
   \   00000040                      ;; // Fall through to label ?Subroutine30
    509          
    510          //---------------------------------------------------------------------------

   \                                 In segment CODE, align 4, keep-with-next
    511          void AnPro3object::AddAlarm(AlarmBasic *AlPtr) {
   \                     ??AddAlarm:
   \   00000000   F0412DE9           PUSH     {R4-R8,LR}
    512              if (!AnPro3objectVector.empty()) {
   \   00000004   ........           LDR      R5,??DataTable11  ;; ??ObjectSet
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   180085E2           ADD      R0,R5,#+24
   \   00000010   ........           _BLF     ??empty,??empty??rA_1
   \   00000014   000050E3           CMP      R0,#+0
   \   00000018   1200001A           BNE      ??AddAlarm_1
    513                  for (unsigned i = 0; i < AnPro3objectVector.size(); i++) {
   \   0000001C   0060A0E3           MOV      R6,#+0
   \   00000020   898FA0E3           MOV      R8,#+548
   \   00000024   0A0000EA           B        ??AddAlarm_2
    514                      AnPro3object   *tmpPtr = AnPro3objectVector[i];
   \                     ??AddAlarm_3:
   \   00000028   067190E7           LDR      R7,[R0, +R6, LSL #+2]
    515                      set<AlarmBasic *>::iterator pBIt;
    516                      pBIt = tmpPtr->AlarmSet.find(AlPtr);
   \   0000002C   0410A0E1           MOV      R1,R4
   \   00000030   070088E0           ADD      R0,R8,R7
   \   00000034   ........           _BLF     ??find,??find??rA
    517                      if (pBIt != tmpPtr->AlarmSet.end()) {
   \   00000038   071088E0           ADD      R1,R8,R7
   \   0000003C   010050E1           CMP      R0,R1
   \   00000040   0200000A           BEQ      ??AddAlarm_4
    518                          tmpPtr->AlarmList->insertInOrderIfUnique(AlPtr);
   \   00000044   540297E5           LDR      R0,[R7, #+596]
   \   00000048   0410A0E1           MOV      R1,R4
   \   0000004C   ........           _BLF     ??insertInOrderIfUnique,??insertInOrderIfUnique??rA
    519                      }
    520                  }
   \                     ??AddAlarm_4:
   \   00000050   016086E2           ADD      R6,R6,#+1
   \                     ??AddAlarm_2:
   \   00000054   180095E5           LDR      R0,[R5, #+24]
   \   00000058   1C1095E5           LDR      R1,[R5, #+28]
   \   0000005C   001041E0           SUB      R1,R1,R0
   \   00000060   210156E1           CMP      R6,R1, LSR #+2
   \   00000064   EFFFFF3A           BCC      ??AddAlarm_3
    521              }
    522          }
   \                     ??AddAlarm_1:
   \   00000068   ........           B        ?Subroutine33

   \                                 In segment CODE, align 4, keep-with-next
   \                     ?Subroutine33:
   \   00000000   F041BDE8           POP      {R4-R8,LR}
   \   00000004   1EFF2FE1           BX       LR               ;; return
   \                     ??Subroutine33_0:
   \   00000008   534F0000           DC8      "SO",+0
   \   0000000C   30000000           DC8      "0",+0,+0
   \   00000010   ........           DC32     SizeofSelectTankValueList
    523          //---------------------------------------------------------------------------
    524          
    525          

   \                                 In segment DATA_I, align 4, align-sorted
    526          ConfigKeyWord AnPro3object::ValueKey[] = {
   \                     ??ValueKey:
   \   00000000                      DS8 1188
   \   000004A4                      REQUIRE `?<Initializer for ValueKey>`
    527              { "TO", ANPRO3_CMD_TANK_OUT },
    528              { "SO", ANPRO3_CMD_SYSTEM_OUT },
    529              { "LPO", ANPRO3_CMD_LINE_OUT },
    530              { "TiRD1", ANPRO3_CMD_OP_DNS1 },
    531              { "TiRT1", ANPRO3_CMD_REF_TMP1 },
    532              { "TiRD2", ANPRO3_CMD_OP_DNS2 },
    533              { "TiRT2", ANPRO3_CMD_REF_TMP2 },
    534              { "TiCof", ANPRO3_CMD_COEFF },
    535              { "TiDEN", ANPRO3_CMD_DENSITY_IN },
    536              { "TiCTy", ANPRO3_CMD_CARGO_TYPE },
    537              { "TiVol", ANPRO3_CMD_VOLUME },
    538              { "TiWgt", ANPRO3_CMD_WEIGHT },
    539              { "ToLF", ANPRO3_CMD_LEVEL_FC },
    540              { "ToLR", ANPRO3_CMD_LEVEL },
    541              { "ToS", ANPRO3_CMD_SOUNDING },
    542          
    543              { "ToUF", ANPRO3_CMD_ULLAGE_FC   },
    544              { "ToUR", ANPRO3_CMD_ULLAGE },
    545              { "ToVF", ANPRO3_CMD_VOLUME },
    546              { "ToW", ANPRO3_CMD_WEIGHT },
    547              { "ToD", ANPRO3_CMD_DENSITY_OUT },
    548              { "ToT", ANPRO3_CMD_TEMP },
    549              { "ToV", ANPRO3_CMD_VAPOUR },
    550              // {"ToAL"     , ANPRO3_CMD_ACT_ALARMS  },
    551              { "SiSWDns", ANPRO3_CMD_SEAWATER_DNS },
    552              { "SiBWDns", ANPRO3_CMD_BALLAST_DNS },
    553              { "SoTr", ANPRO3_CMD_TRIM_DEG },
    554              { "SoLi", ANPRO3_CMD_LIST_DEG },
    555              { "SoDF", ANPRO3_CMD_DF },
    556              { "SoDP", ANPRO3_CMD_DP },
    557              { "SoDS", ANPRO3_CMD_DS },
    558              { "SoDA", ANPRO3_CMD_DA },
    559              { "SoAll", ANPRO3_CMD_SYSALL },
    560              { "LO", ANPRO3_CMD_LPRESS },
    561              { "TOut", ANPRO3_CMD_TEMP_OUT }
    562          };
    563          

   \                                 In segment CODE, align 4, keep-with-next
    564          int AnPro3object::FindValueKey(AnsiString KWord) {
   \                     ??FindValueKey:
   \   00000000   00402DE9           PUSH     {LR}
   \   00000004   24D04DE2           SUB      SP,SP,#+36
    565              void          *Base  = (void *)ValueKey;
    566              size_t        Num    = NELEMENTS(ValueKey);
    567              size_t        Width  = sizeof(ConfigKeyWord);
    568              ConfigKeyWord tmpKwd;
    569              strcpy(tmpKwd.KWord, KWord.c_str());
   \   00000008   181090E5           LDR      R1,[R0, #+24]
   \   0000000C   100051E3           CMP      R1,#+16
   \   00000010   04109025           LDRCS    R1,[R0, #+4]
   \   00000014   04108032           ADDCC    R1,R0,#+4
   \   00000018   0D00A0E1           MOV      R0,SP
   \   0000001C   ........           _BLF     strcpy,??strcpy??rA
    570          #ifdef ANTDUSIM
    571              ConfigKeyWord *KWPtr = (ConfigKeyWord *)lfind(&tmpKwd, Base, &Num, Width, CompareKeywordInTable);
    572          #else
    573              ConfigKeyWord *KWPtr = (ConfigKeyWord *)bsearch(&tmpKwd, Base, Num, Width, CompareKeywordInTable);
   \   00000020   ........           LDR      R0,??DataTable14  ;; ??CompareKeywordInTable
   \   00000024   ........           LDR      R1,??DataTable15  ;; ??ValueKey
   \   00000028   01002DE9           PUSH     {R0}
   \   0000002C   2430A0E3           MOV      R3,#+36
   \   00000030   2120A0E3           MOV      R2,#+33
   \   00000034   04008DE2           ADD      R0,SP,#+4
   \   00000038   ........           _BLF     bsearch,??bsearch??rA
    574          #endif
    575              if (KWPtr) {
   \   0000003C   000050E3           CMP      R0,#+0
   \   00000040   04D08DE2           ADD      SP,SP,#+4
    576                  return (KWPtr->Key);
   \   00000044   20009015           LDRNE    R0,[R0, #+32]
    577              } else {
    578                  return (NOT_FOUND);
   \   00000048   24D08DE2           ADD      SP,SP,#+36
   \   0000004C   0040BDE8           POP      {LR}
   \   00000050   0000E003           MVNEQ    R0,#+0
   \   00000054   1EFF2FE1           BX       LR               ;; return
    579              }
    580          }
    581          

   \                                 In segment CODE, align 4, keep-with-next
    582          void AnPro3object::SortANPRO3KeywordList(void) {
    583              void   *Base = (void *)ValueKey;
    584              size_t Num   = NELEMENTS(ValueKey);
    585              size_t Width = sizeof(ConfigKeyWord);
    586              qsort(Base, Num, Width, CompareKeywordInTable);
   \                     ??SortANPRO3KeywordList:
   \   00000000   ........           LDR      R3,??DataTable14  ;; ??CompareKeywordInTable
   \   00000004   ........           LDR      R0,??DataTable15  ;; ??ValueKey
   \   00000008   00402DE9           PUSH     {LR}
   \   0000000C   2420A0E3           MOV      R2,#+36
   \   00000010   2110A0E3           MOV      R1,#+33
   \   00000014   ........           _BLF     qsort,??qsort??rA
    587          }
   \   00000018   0040BDE8           POP      {LR}
   \   0000001C   1EFF2FE1           BX       LR               ;; return
    588          

   \                                 In segment CODE, align 4, keep-with-next
    589          char* AnPro3object::NextField(char *Buf, char Separator) {
    590              int NextFieldPtr = 0;
   \                     ??NextField:
   \   00000000   0020A0E3           MOV      R2,#+0
   \                     ??NextField_1:
   \   00000004   0030D2E7           LDRB     R3,[R2, +R0]
   \   00000008   000053E3           CMP      R3,#+0
   \   0000000C   01005311           CMPNE    R3,R1
   \   00000010   0200000A           BEQ      ??NextField_2
    591              while ((NextFieldPtr < ANPRO3_MAX_SIZE) && Buf[NextFieldPtr] && Buf[NextFieldPtr] != Separator)   NextFieldPtr++;
   \   00000014   012082E2           ADD      R2,R2,#+1
   \   00000018   400E52E3           CMP      R2,#+1024
   \   0000001C   F8FFFFBA           BLT      ??NextField_1
    592              while (Buf[NextFieldPtr] == Separator && NextFieldPtr < ANPRO3_MAX_SIZE) NextFieldPtr++;
   \                     ??NextField_2:
   \   00000020   0030D2E7           LDRB     R3,[R2, +R0]
   \   00000024   010053E1           CMP      R3,R1
   \   00000028   0200001A           BNE      ??NextField_3
   \   0000002C   400E52E3           CMP      R2,#+1024
   \   00000030   012082B2           ADDLT    R2,R2,#+1
   \   00000034   F9FFFFBA           BLT      ??NextField_2
    593              if (Buf[NextFieldPtr] && NextFieldPtr < ANPRO3_MAX_SIZE) {
   \                     ??NextField_3:
   \   00000038   000053E3           CMP      R3,#+0
   \   0000003C   0200000A           BEQ      ??NextField_4
   \   00000040   400E52E3           CMP      R2,#+1024
    594                  return (&Buf[NextFieldPtr]);
   \   00000044   000082B0           ADDLT    R0,R2,R0
   \   00000048   1EFF2FB1           BXLT     LR
    595              }
    596              return (NULL);
   \                     ??NextField_4:
   \   0000004C   0000A0E3           MOV      R0,#+0
   \   00000050   1EFF2FE1           BX       LR               ;; return
    597          }
    598          
    599          
    600          ///////////////////////////////////////////////////////////////////////
    601          //
    602          //  ANPRO3 object routines
    603          //
    604          ///////////////////////////////////////////////////////////////////////
    605          
    606          

   \                                 In segment CODE, align 4, keep-with-next
    607          void AnPro3object::SendString(TSNUart *PortPtr, AnsiString TxStr) {
   \                     ??SendString:
   \   00000000   F0432DE9           PUSH     {R4-R9,LR}
   \   00000004   4ADF4DE2           SUB      SP,SP,#+296
   \   00000008   0070A0E1           MOV      R7,R0
    608              switch (Checksum_Type) {
   \   0000000C   C40197E5           LDR      R0,[R7, #+452]
   \   00000010   0140A0E1           MOV      R4,R1
   \   00000014   ........           LDR      R1,??DataTable16  ;; SpaceStr
   \   00000018   0250A0E1           MOV      R5,R2
   \   0000001C   738FA0E3           MOV      R8,#+460
   \   00000020   0090A0E3           MOV      R9,#+0
   \   00000024   020050E3           CMP      R0,#+2
   \   00000028   B100008A           BHI      ??SendString_2
   \   0000002C   012F8FE2           ADR      R2,??SendString_1
   \   00000030   0020D2E7           LDRB     R2,[R2, R0]
   \   00000034   02F18FE0           ADD      PC,PC,R2, LSL #+2
   \                     ??SendString_1:
   \   00000038   005E1D00           DC8      +0,+94,+29,+0
    609              case ANPRO3_NO_CHECKSUM :
    610                  TxStr = SyncStr + SpaceStr + TxStr;
   \                     ??SendString_3:
   \   0000003C   0120A0E1           MOV      R2,R1
   \   00000040   071088E0           ADD      R1,R8,R7
   \   00000044   F0008DE2           ADD      R0,SP,#+240
   \   00000048   ........           _BLF     `??operator+`,`??operator+??rA`
   \   0000004C   0520A0E1           MOV      R2,R5
   \   00000050   F0108DE2           ADD      R1,SP,#+240
   \   00000054   D4008DE2           ADD      R0,SP,#+212
   \   00000058   ........           _BLF     `??operator+`,`??operator+??rA`
   \   0000005C   D4108DE2           ADD      R1,SP,#+212
   \   00000060   B8008DE2           ADD      R0,SP,#+184
   \   00000064   ........           _BLF     ??AnsiString_3,??AnsiString??rA_3
   \   00000068   ........           LDR      R1,??DataTable25  ;; ??npos
   \   0000006C   0020A0E3           MOV      R2,#+0
   \   00000070   003091E5           LDR      R3,[R1, #+0]
   \   00000074   0010A0E1           MOV      R1,R0
   \   00000078   0500A0E1           MOV      R0,R5
   \   0000007C   ........           _BLF     ??assign,??assign??rA
   \   00000080   0920A0E1           MOV      R2,R9
   \   00000084   0110A0E3           MOV      R1,#+1
   \   00000088   B8008DE2           ADD      R0,SP,#+184
   \   0000008C   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000090   0920A0E1           MOV      R2,R9
   \   00000094   0110A0E3           MOV      R1,#+1
   \   00000098   D4008DE2           ADD      R0,SP,#+212
   \   0000009C   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000000A0   0920A0E1           MOV      R2,R9
   \   000000A4   0110A0E3           MOV      R1,#+1
   \   000000A8   F0008DE2           ADD      R0,SP,#+240
   \   000000AC   8F0000EA           B        ??SendString_4
    611                  break;
    612              case ANPRO3_CHECKSUM_INC_SYNC:
    613                  {
    614                      // Not supported in request mode
    615                      TxStr = SyncStr + SpaceStr + TxStr + Separator;
   \                     ??SendString_5:
   \   000000B0   0120A0E1           MOV      R2,R1
   \   000000B4   071088E0           ADD      R1,R8,R7
   \   000000B8   0D00A0E1           MOV      R0,SP
   \   000000BC   ........           _BLF     `??operator+`,`??operator+??rA`
   \   000000C0   0520A0E1           MOV      R2,R5
   \   000000C4   0D10A0E1           MOV      R1,SP
   \   000000C8   1C008DE2           ADD      R0,SP,#+28
   \   000000CC   ........           _BLF     `??operator+`,`??operator+??rA`
   \   000000D0   EC21D7E5           LDRB     R2,[R7, #+492]
   \   000000D4   1C108DE2           ADD      R1,SP,#+28
   \   000000D8   38008DE2           ADD      R0,SP,#+56
   \   000000DC   ........           _BLF     `??operator+_2`,`??operator+??rA_1`
   \   000000E0   38108DE2           ADD      R1,SP,#+56
   \   000000E4   54008DE2           ADD      R0,SP,#+84
   \   000000E8   ........           _BLF     ??AnsiString_3,??AnsiString??rA_3
   \   000000EC   0010A0E1           MOV      R1,R0
   \   000000F0   ........           LDR      R0,??DataTable25  ;; ??npos
   \   000000F4   0020A0E3           MOV      R2,#+0
   \   000000F8   006090E5           LDR      R6,[R0, #+0]
   \   000000FC   0500A0E1           MOV      R0,R5
   \   00000100   0630A0E1           MOV      R3,R6
   \   00000104   ........           _BLF     ??assign,??assign??rA
   \   00000108   0920A0E1           MOV      R2,R9
   \   0000010C   0110A0E3           MOV      R1,#+1
   \   00000110   54008DE2           ADD      R0,SP,#+84
   \   00000114   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000118   0920A0E1           MOV      R2,R9
   \   0000011C   0110A0E3           MOV      R1,#+1
   \   00000120   38008DE2           ADD      R0,SP,#+56
   \   00000124   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000128   0920A0E1           MOV      R2,R9
   \   0000012C   0110A0E3           MOV      R1,#+1
   \   00000130   1C008DE2           ADD      R0,SP,#+28
   \   00000134   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000138   0920A0E1           MOV      R2,R9
   \   0000013C   0110A0E3           MOV      R1,#+1
   \   00000140   0D00A0E1           MOV      R0,SP
   \   00000144   ........           _BLF     ??_Tidy,??_Tidy??rA
    616                      int StrLen   = TxStr.Length();
   \   00000148   0500A0E1           MOV      R0,R5
   \   0000014C   ........           _BLF     ??Length,??Length??rA
    617                      U8  CheckSum = 0;
    618                      for (int i = 0; i < StrLen; i++) CheckSum += TxStr[i];
   \   00000150   0910A0E1           MOV      R1,R9
   \   00000154   030000EA           B        ??SendString_6
   \                     ??SendString_7:
   \   00000158   0220D1E7           LDRB     R2,[R1, +R2]
   \   0000015C   011081E2           ADD      R1,R1,#+1
   \   00000160   099082E0           ADD      R9,R2,R9
   \   00000164   FF9009E2           AND      R9,R9,#0xFF
   \                     ??SendString_6:
   \   00000168   000051E1           CMP      R1,R0
   \   0000016C   040000AA           BGE      ??SendString_8
   \   00000170   182095E5           LDR      R2,[R5, #+24]
   \   00000174   100052E3           CMP      R2,#+16
   \   00000178   04209525           LDRCS    R2,[R5, #+4]
   \   0000017C   04208532           ADDCC    R2,R5,#+4
   \   00000180   F4FFFFEA           B        ??SendString_7
    619                      TxStr += (AnsiString)((int)CheckSum);
   \                     ??SendString_8:
   \   00000184   0910A0E1           MOV      R1,R9
   \   00000188   70008DE2           ADD      R0,SP,#+112
   \   0000018C   ........           _BLF     ??AnsiString_2,??AnsiString??rA_2
   \   00000190   0630A0E1           MOV      R3,R6
   \   00000194   0020A0E3           MOV      R2,#+0
   \   00000198   0010A0E1           MOV      R1,R0
   \   0000019C   0500A0E1           MOV      R0,R5
   \   000001A0   ........           _BLF     ??append,??append??rA
   \   000001A4   0020A0E3           MOV      R2,#+0
   \   000001A8   0110A0E3           MOV      R1,#+1
   \   000001AC   70008DE2           ADD      R0,SP,#+112
   \   000001B0   4E0000EA           B        ??SendString_4
    620                  }
    621                  break;
    622              case ANPRO3_CHECKSUM:
    623                  {
    624                      TxStr = SpaceStr + TxStr + Separator;
   \                     ??SendString_9:
   \   000001B4   0520A0E1           MOV      R2,R5
   \   000001B8   38008DE2           ADD      R0,SP,#+56
   \   000001BC   ........           _BLF     `??operator+`,`??operator+??rA`
   \   000001C0   EC21D7E5           LDRB     R2,[R7, #+492]
   \   000001C4   38108DE2           ADD      R1,SP,#+56
   \   000001C8   1C008DE2           ADD      R0,SP,#+28
   \   000001CC   ........           _BLF     `??operator+_2`,`??operator+??rA_1`
   \   000001D0   1C108DE2           ADD      R1,SP,#+28
   \   000001D4   0D00A0E1           MOV      R0,SP
   \   000001D8   ........           _BLF     ??AnsiString_3,??AnsiString??rA_3
   \   000001DC   ........           LDR      R1,??DataTable25  ;; ??npos
   \   000001E0   0020A0E3           MOV      R2,#+0
   \   000001E4   006091E5           LDR      R6,[R1, #+0]
   \   000001E8   0010A0E1           MOV      R1,R0
   \   000001EC   0630A0E1           MOV      R3,R6
   \   000001F0   0500A0E1           MOV      R0,R5
   \   000001F4   ........           _BLF     ??assign,??assign??rA
   \   000001F8   0920A0E1           MOV      R2,R9
   \   000001FC   0110A0E3           MOV      R1,#+1
   \   00000200   0D00A0E1           MOV      R0,SP
   \   00000204   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000208   0920A0E1           MOV      R2,R9
   \   0000020C   0110A0E3           MOV      R1,#+1
   \   00000210   1C008DE2           ADD      R0,SP,#+28
   \   00000214   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000218   0920A0E1           MOV      R2,R9
   \   0000021C   0110A0E3           MOV      R1,#+1
   \   00000220   38008DE2           ADD      R0,SP,#+56
   \   00000224   ........           _BLF     ??_Tidy,??_Tidy??rA
    625                      U8  CheckSum = 0;
    626                      int StrLen   = TxStr.Length();
   \   00000228   0500A0E1           MOV      R0,R5
   \   0000022C   ........           _BLF     ??Length,??Length??rA
    627                      for (int i = 0; i < StrLen; i++) CheckSum += TxStr[i];
   \   00000230   0910A0E1           MOV      R1,R9
   \   00000234   030000EA           B        ??SendString_10
   \                     ??SendString_11:
   \   00000238   0220D1E7           LDRB     R2,[R1, +R2]
   \   0000023C   011081E2           ADD      R1,R1,#+1
   \   00000240   099082E0           ADD      R9,R2,R9
   \   00000244   FF9009E2           AND      R9,R9,#0xFF
   \                     ??SendString_10:
   \   00000248   000051E1           CMP      R1,R0
   \   0000024C   040000AA           BGE      ??SendString_12
   \   00000250   182095E5           LDR      R2,[R5, #+24]
   \   00000254   100052E3           CMP      R2,#+16
   \   00000258   04209525           LDRCS    R2,[R5, #+4]
   \   0000025C   04208532           ADDCC    R2,R5,#+4
   \   00000260   F4FFFFEA           B        ??SendString_11
    628                      TxStr = SyncStr + TxStr + (AnsiString)((int)CheckSum);
   \                     ??SendString_12:
   \   00000264   0910A0E1           MOV      R1,R9
   \   00000268   430F8DE2           ADD      R0,SP,#+268
   \   0000026C   ........           _BLF     ??AnsiString_2,??AnsiString??rA_2
   \   00000270   0090A0E1           MOV      R9,R0
   \   00000274   0520A0E1           MOV      R2,R5
   \   00000278   071088E0           ADD      R1,R8,R7
   \   0000027C   8C008DE2           ADD      R0,SP,#+140
   \   00000280   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000284   0920A0E1           MOV      R2,R9
   \   00000288   8C108DE2           ADD      R1,SP,#+140
   \   0000028C   54008DE2           ADD      R0,SP,#+84
   \   00000290   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000294   54108DE2           ADD      R1,SP,#+84
   \   00000298   70008DE2           ADD      R0,SP,#+112
   \   0000029C   ........           _BLF     ??AnsiString_3,??AnsiString??rA_3
   \   000002A0   0630A0E1           MOV      R3,R6
   \   000002A4   0020A0E3           MOV      R2,#+0
   \   000002A8   0010A0E1           MOV      R1,R0
   \   000002AC   0500A0E1           MOV      R0,R5
   \   000002B0   ........           _BLF     ??assign,??assign??rA
   \   000002B4   0020A0E3           MOV      R2,#+0
   \   000002B8   0110A0E3           MOV      R1,#+1
   \   000002BC   70008DE2           ADD      R0,SP,#+112
   \   000002C0   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000002C4   0020A0E3           MOV      R2,#+0
   \   000002C8   0110A0E3           MOV      R1,#+1
   \   000002CC   54008DE2           ADD      R0,SP,#+84
   \   000002D0   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000002D4   0020A0E3           MOV      R2,#+0
   \   000002D8   0110A0E3           MOV      R1,#+1
   \   000002DC   430F8DE2           ADD      R0,SP,#+268
   \   000002E0   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000002E4   0020A0E3           MOV      R2,#+0
   \   000002E8   0110A0E3           MOV      R1,#+1
   \   000002EC   8C008DE2           ADD      R0,SP,#+140
   \                     ??SendString_4:
   \   000002F0   ........           _BLF     ??_Tidy,??_Tidy??rA
    629                  }
    630                  break;
    631              }
    632              TxStr += CrLfStr;
   \                     ??SendString_2:
   \   000002F4   ........           LDR      R0,??DataTable25  ;; ??npos
   \   000002F8   ........           LDR      R1,??DataTable21  ;; CrLfStr
   \   000002FC   003090E5           LDR      R3,[R0, #+0]
   \   00000300   0020A0E3           MOV      R2,#+0
   \   00000304   0500A0E1           MOV      R0,R5
   \   00000308   ........           _BLF     ??append,??append??rA
    633              PortPtr->Send((U8 *)TxStr.c_str(), TxStr.Length(), SEND_COMPLETE_EVENT);
   \   0000030C   DC0094E5           LDR      R0,[R4, #+220]
   \   00000310   046080E2           ADD      R6,R0,#+4
   \   00000314   0500A0E1           MOV      R0,R5
   \   00000318   ........           _BLF     ??Length,??Length??rA
   \   0000031C   0020A0E1           MOV      R2,R0
   \   00000320   180095E5           LDR      R0,[R5, #+24]
   \   00000324   0130A0E3           MOV      R3,#+1
   \   00000328   100050E3           CMP      R0,#+16
   \   0000032C   04109525           LDRCS    R1,[R5, #+4]
   \   00000330   0100A0E3           MOV      R0,#+1
   \   00000334   04108532           ADDCC    R1,R5,#+4
   \   00000338   01002DE9           PUSH     {R0}
   \   0000033C   005096E5           LDR      R5,[R6, #+0]
   \   00000340   0400A0E1           MOV      R0,R4
   \   00000344   0FE0A0E1           MOV      LR,PC
   \   00000348   15FF2FE1           BX       R5
    634              switch (PortPtr->HWProtocol) {
   \   0000034C   A00094E5           LDR      R0,[R4, #+160]
   \   00000350   04D08DE2           ADD      SP,SP,#+4
   \   00000354   761D88E2           ADD      R1,R8,#+7552
   \   00000358   010050E1           CMP      R0,R1
   \   0000035C   0C00001A           BNE      ??SendString_13
    635              case C_UART_HWPRO_485 :
    636                  {
    637                      PortPtr->ClearRxBuffer();
   \   00000360   DC1094E5           LDR      R1,[R4, #+220]
   \   00000364   0400A0E1           MOV      R0,R4
   \   00000368   101091E5           LDR      R1,[R1, #+16]
   \   0000036C   0FE0A0E1           MOV      LR,PC
   \   00000370   11FF2FE1           BX       R1
    638                      U8 tmpBuf[16];
    639                      PortPtr->Receive(tmpBuf, 16, 10);  // Be sure to remove the ecco
   \   00000374   0400A0E1           MOV      R0,R4
   \   00000378   DC4094E5           LDR      R4,[R4, #+220]
   \   0000037C   0A30A0E3           MOV      R3,#+10
   \   00000380   084094E5           LDR      R4,[R4, #+8]
   \   00000384   1020A0E3           MOV      R2,#+16
   \   00000388   A8108DE2           ADD      R1,SP,#+168
   \   0000038C   0FE0A0E1           MOV      LR,PC
   \   00000390   14FF2FE1           BX       R4
    640                  }
    641                  break;
    642              case C_UART_HWPRO_232 :
    643                  break;
    644              }
    645          }
   \                     ??SendString_13:
   \   00000394   4ADF8DE2           ADD      SP,SP,#+296
   \   00000398   ........           B        ?Subroutine34

   \                                 In segment CODE, align 4, keep-with-next
   \                     ?Subroutine34:
   \   00000000   F043BDE8           POP      {R4-R9,LR}
   \   00000004   1EFF2FE1           BX       LR               ;; return
   \                     ??Subroutine34_0:
   \   00000008   ........           DC32     `?<Constant "HIPR">`
    646          
    647          
    648          ///////////////////////////////////////////////////////////////////////////////////////
    649          
    650          

   \                                 In segment CODE, align 4, keep-with-next
    651          bool AnPro3object::SendSysInfo(TSNUart *PortPtr) {
   \                     ??SendSysInfo:
   \   00000000   F0412DE9           PUSH     {R4-R8,LR}
   \   00000004   8CD04DE2           SUB      SP,SP,#+140
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   0150A0E1           MOV      R5,R1
    652              bool       IncSysData   = false;
    653              bool       IncDraftData = false;
    654              bool       SendOk       = false;
    655              AnsiString TmpStr;
   \   00000010   1C008DE2           ADD      R0,SP,#+28
   \   00000014   ........           _BLF     ??AnsiString,??AnsiString??rA
    656              if (RequestMode) {
   \   00000018   C001D4E5           LDRB     R0,[R4, #+448]
   \   0000001C   0060A0E3           MOV      R6,#+0
   \   00000020   0080A0E3           MOV      R8,#+0
   \   00000024   000050E3           CMP      R0,#+0
   \   00000028   0700000A           BEQ      ??SendSysInfo_1
    657                  TmpStr = "SO";
   \   0000002C   ........           ADR      R1,??Subroutine33_0  ;; "SO"
   \   00000030   0D00A0E1           MOV      R0,SP
   \   00000034   ........           _BLF     ??AnsiString_1,??AnsiString??rA_1
   \   00000038   ........           LDR      R1,??DataTable25  ;; ??npos
   \   0000003C   0020A0E3           MOV      R2,#+0
   \   00000040   003091E5           LDR      R3,[R1, #+0]
   \   00000044   0010A0E1           MOV      R1,R0
   \   00000048   060000EA           B        ??SendSysInfo_2
    658              } else {
    659                  TmpStr = "0";
   \                     ??SendSysInfo_1:
   \   0000004C   ........           ADR      R1,??Subroutine33_0+0x4  ;; "0"
   \   00000050   0D00A0E1           MOV      R0,SP
   \   00000054   ........           _BLF     ??AnsiString_1,??AnsiString??rA_1
   \   00000058   0010A0E1           MOV      R1,R0
   \   0000005C   ........           LDR      R0,??DataTable25  ;; ??npos
   \   00000060   0020A0E3           MOV      R2,#+0
   \   00000064   003090E5           LDR      R3,[R0, #+0]
   \                     ??SendSysInfo_2:
   \   00000068   1C008DE2           ADD      R0,SP,#+28
   \   0000006C   ........           _BLF     ??assign,??assign??rA
   \   00000070   0020A0E3           MOV      R2,#+0
   \   00000074   0110A0E3           MOV      R1,#+1
   \   00000078   0D00A0E1           MOV      R0,SP
   \   0000007C   ........           _BLF     ??_Tidy,??_Tidy??rA
    660              }
    661              if (!SysDataValTable.empty()) {
   \   00000080   647FA0E3           MOV      R7,#+400
   \   00000084   040087E0           ADD      R0,R7,R4
   \   00000088   ........           _BLF     ??empty_1,??empty??rA
   \   0000008C   000050E3           CMP      R0,#+0
   \   00000090   5300001A           BNE      ??SendSysInfo_3
    662                  for (unsigned i = 0; i < SysDataValTable.size(); i++) {
   \   00000094   1E0000EA           B        ??SendSysInfo_4
    663                      PRogramObjectBase *ObjPtr = LibGetObjPtr(SelectAllSysValList, SizeofSelectAllSysValList, SysDataValTable[i]);
   \                     ??SendSysInfo_5:
   \   00000098   ........           LDR      R0,??Subroutine33_0+0x8  ;; SizeofSelectTankValueList
   \   0000009C   041097E7           LDR      R1,[R7, +R4]
   \   000000A0   062191E7           LDR      R2,[R1, +R6, LSL #+2]
   \   000000A4   041090E5           LDR      R1,[R0, #+4]
   \   000000A8   490F80E2           ADD      R0,R0,#+292
   \   000000AC   ........           _BLF     ??LibGetObjPtr,??LibGetObjPtr??rA
    664                      // Address is 0 according to ANPRO3
    665                      TmpStr += Separator;
   \   000000B0   EC21D4E5           LDRB     R2,[R4, #+492]
   \   000000B4   0080A0E1           MOV      R8,R0
   \   000000B8   0110A0E3           MOV      R1,#+1
   \   000000BC   1C008DE2           ADD      R0,SP,#+28
   \   000000C0   ........           _BLF     ??append_1,??append??rA_1
    666                      TmpStr += LibGetValue(SysDataValTable[i], ObjPtr, SVT_FLAG_ONLY_NUMBER);
   \   000000C4   0000A0E3           MOV      R0,#+0
   \   000000C8   01002DE9           PUSH     {R0}
   \   000000CC   040097E7           LDR      R0,[R7, +R4]
   \   000000D0   0130A0E3           MOV      R3,#+1
   \   000000D4   061190E7           LDR      R1,[R0, +R6, LSL #+2]
   \   000000D8   0820A0E1           MOV      R2,R8
   \   000000DC   04008DE2           ADD      R0,SP,#+4
   \   000000E0   ........           _BLF     ??LibGetValue,??LibGetValue??rA
   \   000000E4   ........           LDR      R0,??DataTable25  ;; ??npos
   \   000000E8   0020A0E3           MOV      R2,#+0
   \   000000EC   003090E5           LDR      R3,[R0, #+0]
   \   000000F0   04108DE2           ADD      R1,SP,#+4
   \   000000F4   20008DE2           ADD      R0,SP,#+32
   \   000000F8   ........           _BLF     ??append,??append??rA
   \   000000FC   0020A0E3           MOV      R2,#+0
   \   00000100   0110A0E3           MOV      R1,#+1
   \   00000104   04008DE2           ADD      R0,SP,#+4
   \   00000108   ........           _BLF     ??_Tidy,??_Tidy??rA
    667                  }
   \   0000010C   016086E2           ADD      R6,R6,#+1
   \   00000110   04D08DE2           ADD      SP,SP,#+4
   \                     ??SendSysInfo_4:
   \   00000114   040087E0           ADD      R0,R7,R4
   \   00000118   041090E5           LDR      R1,[R0, #+4]
   \   0000011C   000090E5           LDR      R0,[R0, #+0]
   \   00000120   000041E0           SUB      R0,R1,R0
   \   00000124   200156E1           CMP      R6,R0, LSR #+2
   \   00000128   DAFFFF3A           BCC      ??SendSysInfo_5
    668                  if (IncludeAlarm) {        // V.1.5.2.0 RBMARK
    669                                             //AnsiString TempAlarmInfo = OnlineTank::Table[Index]->GetTankAlarmInfo(Separator);
    670                      //Ptr += sprintf(&Buf[Ptr],"%s",TempAlarmInfo.c_str());
    671          
    672                  }
    673                  if (IncludeHWStatus) {
   \   0000012C   ED01D4E5           LDRB     R0,[R4, #+493]
   \   00000130   000050E3           CMP      R0,#+0
   \   00000134   1C00000A           BEQ      ??SendSysInfo_6
    674                      int ActAlarms = 0;
    675                      if (IncSysData) {
    676                          ActAlarms += PROSystemData::TXUSystemData->ActiveAlarms;
    677                      }
    678                      if (IncDraftData) {
    679                          ActAlarms += PRODraftSystem::PRODraftSysPtr->ActiveAlarms;
    680                      }
    681                      TmpStr += (AnsiString)Separator + (AnsiString)ActAlarms;
   \   00000138   0010A0E3           MOV      R1,#+0
   \   0000013C   70008DE2           ADD      R0,SP,#+112
   \   00000140   ........           _BLF     ??AnsiString_2,??AnsiString??rA_2
   \   00000144   EC11D4E5           LDRB     R1,[R4, #+492]
   \   00000148   0060A0E1           MOV      R6,R0
   \   0000014C   54008DE2           ADD      R0,SP,#+84
   \   00000150   ........           _BLF     ??AnsiString_4,??AnsiString??rA_4
   \   00000154   0620A0E1           MOV      R2,R6
   \   00000158   0010A0E1           MOV      R1,R0
   \   0000015C   0D00A0E1           MOV      R0,SP
   \   00000160   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000164   ........           LDR      R0,??DataTable25  ;; ??npos
   \   00000168   0020A0E3           MOV      R2,#+0
   \   0000016C   003090E5           LDR      R3,[R0, #+0]
   \   00000170   0D10A0E1           MOV      R1,SP
   \   00000174   1C008DE2           ADD      R0,SP,#+28
   \   00000178   ........           _BLF     ??append,??append??rA
   \   0000017C   0020A0E3           MOV      R2,#+0
   \   00000180   0110A0E3           MOV      R1,#+1
   \   00000184   0D00A0E1           MOV      R0,SP
   \   00000188   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   0000018C   0020A0E3           MOV      R2,#+0
   \   00000190   0110A0E3           MOV      R1,#+1
   \   00000194   70008DE2           ADD      R0,SP,#+112
   \   00000198   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   0000019C   0020A0E3           MOV      R2,#+0
   \   000001A0   0110A0E3           MOV      R1,#+1
   \   000001A4   54008DE2           ADD      R0,SP,#+84
   \   000001A8   ........           _BLF     ??_Tidy,??_Tidy??rA
    682                  }
    683                  SendString(PortPtr, TmpStr);
   \                     ??SendSysInfo_6:
   \   000001AC   1C108DE2           ADD      R1,SP,#+28
   \   000001B0   38008DE2           ADD      R0,SP,#+56
   \   000001B4   ........           _BLF     ??string,??string??rA
   \   000001B8   38208DE2           ADD      R2,SP,#+56
   \   000001BC   0510A0E1           MOV      R1,R5
   \   000001C0   0400A0E1           MOV      R0,R4
   \   000001C4   ........           BL       ??SendString
   \   000001C8   0020A0E3           MOV      R2,#+0
   \   000001CC   0110A0E3           MOV      R1,#+1
   \   000001D0   38008DE2           ADD      R0,SP,#+56
   \   000001D4   ........           _BLF     ??_Tidy,??_Tidy??rA
    684                  TSN_Delay(Delay);
   \   000001D8   E80194E5           LDR      R0,[R4, #+488]
    685                  SendOk = true;
   \   000001DC   0180A0E3           MOV      R8,#+1
   \   000001E0   ........           _BLF     OS_Delay,??OS_Delay??rA
    686              }
    687              return (SendOk);
   \                     ??SendSysInfo_3:
   \   000001E4   0020A0E3           MOV      R2,#+0
   \   000001E8   0110A0E3           MOV      R1,#+1
   \   000001EC   1C008DE2           ADD      R0,SP,#+28
   \   000001F0   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000001F4   0800A0E1           MOV      R0,R8
   \   000001F8   8CD08DE2           ADD      SP,SP,#+140
   \   000001FC                      REQUIRE ?Subroutine33
   \   000001FC                      ;; // Fall through to label ?Subroutine33
    688          }
    689          
    690          

   \                                 In segment CODE, align 4, keep-with-next
    691          void AnPro3object::SendObject(TSNUart *PortPtr, PROXRefObject *ObjPtr, char *Heading) {
   \                     ??SendObject:
   \   00000000   F0432DE9           PUSH     {R4-R9,LR}
   \   00000004   41DF4DE2           SUB      SP,SP,#+260
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   0150A0E1           MOV      R5,R1
   \   00000010   0260A0E1           MOV      R6,R2
   \   00000014   0370A0E1           MOV      R7,R3
    692              AnsiString TmpStr;
   \   00000018   7C008DE2           ADD      R0,SP,#+124
   \   0000001C   ........           _BLF     ??AnsiString,??AnsiString??rA
    693              if (Heading && strlen(Heading)) {
   \   00000020   000057E3           CMP      R7,#+0
   \   00000024   2F00000A           BEQ      ??SendObject_2
   \   00000028   0700A0E1           MOV      R0,R7
   \   0000002C   ........           _BLF     strlen,??strlen??rA
   \   00000030   000050E3           CMP      R0,#+0
   \   00000034   2B00000A           BEQ      ??SendObject_2
    694                  TmpStr = (AnsiString)Heading + Separator + (AnsiString)ObjPtr->ANPro3Id;
   \   00000038   501196E5           LDR      R1,[R6, #+336]
   \   0000003C   44008DE2           ADD      R0,SP,#+68
   \   00000040   ........           _BLF     ??AnsiString_2,??AnsiString??rA_2
   \   00000044   0080A0E1           MOV      R8,R0
   \   00000048   0710A0E1           MOV      R1,R7
   \   0000004C   B0008DE2           ADD      R0,SP,#+176
   \   00000050   ........           _BLF     ??AnsiString_1,??AnsiString??rA_1
   \   00000054   EC21D4E5           LDRB     R2,[R4, #+492]
   \   00000058   0010A0E1           MOV      R1,R0
   \   0000005C   28008DE2           ADD      R0,SP,#+40
   \   00000060   ........           _BLF     `??operator+_2`,`??operator+??rA_1`
   \   00000064   0820A0E1           MOV      R2,R8
   \   00000068   28108DE2           ADD      R1,SP,#+40
   \   0000006C   60008DE2           ADD      R0,SP,#+96
   \   00000070   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000074   60108DE2           ADD      R1,SP,#+96
   \   00000078   0D00A0E1           MOV      R0,SP
   \   0000007C   ........           _BLF     ??AnsiString_3,??AnsiString??rA_3
   \   00000080   ........           LDR      R1,??DataTable32  ;; ??npos
   \   00000084   0020A0E3           MOV      R2,#+0
   \   00000088   003091E5           LDR      R3,[R1, #+0]
   \   0000008C   0010A0E1           MOV      R1,R0
   \   00000090   7C008DE2           ADD      R0,SP,#+124
   \   00000094   ........           _BLF     ??assign,??assign??rA
   \   00000098   0020A0E3           MOV      R2,#+0
   \   0000009C   0110A0E3           MOV      R1,#+1
   \   000000A0   0D00A0E1           MOV      R0,SP
   \   000000A4   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000000A8   0020A0E3           MOV      R2,#+0
   \   000000AC   0110A0E3           MOV      R1,#+1
   \   000000B0   60008DE2           ADD      R0,SP,#+96
   \   000000B4   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000000B8   0020A0E3           MOV      R2,#+0
   \   000000BC   0110A0E3           MOV      R1,#+1
   \   000000C0   44008DE2           ADD      R0,SP,#+68
   \   000000C4   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000000C8   0020A0E3           MOV      R2,#+0
   \   000000CC   0110A0E3           MOV      R1,#+1
   \   000000D0   28008DE2           ADD      R0,SP,#+40
   \   000000D4   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000000D8   0020A0E3           MOV      R2,#+0
   \   000000DC   0110A0E3           MOV      R1,#+1
   \   000000E0   B0008DE2           ADD      R0,SP,#+176
   \   000000E4   0B0000EA           B        ??SendObject_3
    695              } else {
    696                  TmpStr = (AnsiString)ObjPtr->ANPro3Id;
   \                     ??SendObject_2:
   \   000000E8   501196E5           LDR      R1,[R6, #+336]
   \   000000EC   28008DE2           ADD      R0,SP,#+40
   \   000000F0   ........           _BLF     ??AnsiString_2,??AnsiString??rA_2
   \   000000F4   ........           LDR      R1,??DataTable32  ;; ??npos
   \   000000F8   0020A0E3           MOV      R2,#+0
   \   000000FC   003091E5           LDR      R3,[R1, #+0]
   \   00000100   0010A0E1           MOV      R1,R0
   \   00000104   7C008DE2           ADD      R0,SP,#+124
   \   00000108   ........           _BLF     ??assign,??assign??rA
   \   0000010C   0020A0E3           MOV      R2,#+0
   \   00000110   0110A0E3           MOV      R1,#+1
   \   00000114   28008DE2           ADD      R0,SP,#+40
   \                     ??SendObject_3:
   \   00000118   ........           _BLF     ??_Tidy,??_Tidy??rA
    697              }
    698              bool        HaveValues = false;
    699              vector<int> ValTable;
   \   0000011C   1C008DE2           ADD      R0,SP,#+28
   \   00000120   ........           _BLF     ??_Zero,??_Zero??rA
    700              switch (ObjPtr->Type) {
   \   00000124   A00096E5           LDR      R0,[R6, #+160]
   \   00000128   1A10A0E3           MOV      R1,#+26
   \   0000012C   401E81E3           ORR      R1,R1,#0x400
   \   00000130   010050E1           CMP      R0,R1
   \   00000134   01108113           ORRNE    R1,R1,#0x1
   \   00000138   01005011           CMPNE    R0,R1
   \   0000013C   01108112           ADDNE    R1,R1,#+1
   \   00000140   01005011           CMPNE    R0,R1
   \   00000144   01108113           ORRNE    R1,R1,#0x1
   \   00000148   01005011           CMPNE    R0,R1
   \   0000014C   01108112           ADDNE    R1,R1,#+1
   \   00000150   01005011           CMPNE    R0,R1
   \   00000154   01108113           ORRNE    R1,R1,#0x1
   \   00000158   01005011           CMPNE    R0,R1
   \   0000015C   420E5013           CMPNE    R0,#+1056
   \   00000160   02108112           ADDNE    R1,R1,#+2
   \   00000164   01005011           CMPNE    R0,R1
   \   00000168   0800000A           BEQ      ??SendObject_4
   \   0000016C   0D1081E2           ADD      R1,R1,#+13
   \   00000170   010050E1           CMP      R0,R1
   \   00000174   0900000A           BEQ      ??SendObject_5
   \   00000178   031081E2           ADD      R1,R1,#+3
   \   0000017C   010050E1           CMP      R0,R1
   \   00000180   0200000A           BEQ      ??SendObject_4
   \   00000184   460E50E3           CMP      R0,#+1120
   \   00000188   0200000A           BEQ      ??SendObject_6
   \   0000018C   360100EA           B        ??SendObject_7
    701              case C_PRO_CARGO    :
    702              case C_PRO_BALLAST  :
    703              case C_PRO_HFO      :
    704              case C_PRO_DO       :
    705              case C_PRO_LUB      :
    706              case C_PRO_FW       :
    707              case C_PRO_MISC     :
    708              case C_PRO_VOIDSPACE:
    709              case C_PRO_TANK     :
    710                  if (!TnkDataValTable.empty()) {
   \                     ??SendObject_4:
   \   00000190   677FA0E3           MOV      R7,#+412
   \   00000194   020000EA           B        ??SendObject_8
    711                      HaveValues = true;
    712                      ValTable       = TnkDataValTable;
    713                  }
    714                  break;
    715              case C_PRO_LINEPRESS:
    716                  if (!LPrDataValTable.empty()) {
   \                     ??SendObject_6:
   \   00000198   6A7FA0E3           MOV      R7,#+424
   \   0000019C   000000EA           B        ??SendObject_8
    717                      HaveValues = true;
    718                      ValTable       = LPrDataValTable;
    719                  }
    720                  break;
    721              case C_PRO_TEMP:
    722                  if (!TmpDataValTable.empty()) {
   \                     ??SendObject_5:
   \   000001A0   6D7FA0E3           MOV      R7,#+436
   \                     ??SendObject_8:
   \   000001A4   040087E0           ADD      R0,R7,R4
   \   000001A8   ........           _BLF     ??empty_1,??empty??rA
   \   000001AC   000050E3           CMP      R0,#+0
   \   000001B0   2D01001A           BNE      ??SendObject_7
    723                      HaveValues = true;
    724                      ValTable       = TmpDataValTable;
   \   000001B4   041087E0           ADD      R1,R7,R4
   \   000001B8   1C008DE2           ADD      R0,SP,#+28
   \   000001BC   ........           _BLF     ??_Assign,??_Assign??rA
    725                  }
    726                  break;
    727              }
    728              if (HaveValues) {
    729                  for (unsigned i = 0; i < ValTable.size(); i++) {
   \   000001C0   0070A0E3           MOV      R7,#+0
   \   000001C4   210000EA           B        ??SendObject_9
    730                      TmpStr += (AnsiString)Separator + LibGetValue(ValTable[i], ObjPtr, SVT_FLAG_ONLY_NUMBER);
   \                     ??SendObject_10:
   \   000001C8   0000A0E3           MOV      R0,#+0
   \   000001CC   01002DE9           PUSH     {R0}
   \   000001D0   071191E7           LDR      R1,[R1, +R7, LSL #+2]
   \   000001D4   0130A0E3           MOV      R3,#+1
   \   000001D8   0620A0E1           MOV      R2,R6
   \   000001DC   48008DE2           ADD      R0,SP,#+72
   \   000001E0   ........           _BLF     ??LibGetValue,??LibGetValue??rA
   \   000001E4   EC11D4E5           LDRB     R1,[R4, #+492]
   \   000001E8   64008DE2           ADD      R0,SP,#+100
    731                  }
   \   000001EC   017087E2           ADD      R7,R7,#+1
   \   000001F0   ........           _BLF     ??AnsiString_4,??AnsiString??rA_4
   \   000001F4   48208DE2           ADD      R2,SP,#+72
   \   000001F8   0010A0E1           MOV      R1,R0
   \   000001FC   2C008DE2           ADD      R0,SP,#+44
   \   00000200   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000204   ........           LDR      R0,??DataTable32  ;; ??npos
   \   00000208   0020A0E3           MOV      R2,#+0
   \   0000020C   003090E5           LDR      R3,[R0, #+0]
   \   00000210   2C108DE2           ADD      R1,SP,#+44
   \   00000214   80008DE2           ADD      R0,SP,#+128
   \   00000218   ........           _BLF     ??append,??append??rA
   \   0000021C   0020A0E3           MOV      R2,#+0
   \   00000220   0110A0E3           MOV      R1,#+1
   \   00000224   2C008DE2           ADD      R0,SP,#+44
   \   00000228   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   0000022C   0020A0E3           MOV      R2,#+0
   \   00000230   0110A0E3           MOV      R1,#+1
   \   00000234   48008DE2           ADD      R0,SP,#+72
   \   00000238   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   0000023C   0020A0E3           MOV      R2,#+0
   \   00000240   0110A0E3           MOV      R1,#+1
   \   00000244   64008DE2           ADD      R0,SP,#+100
   \   00000248   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   0000024C   04D08DE2           ADD      SP,SP,#+4
   \                     ??SendObject_9:
   \   00000250   20009DE5           LDR      R0,[SP, #+32]
   \   00000254   1C109DE5           LDR      R1,[SP, #+28]
   \   00000258   010040E0           SUB      R0,R0,R1
   \   0000025C   200157E1           CMP      R7,R0, LSR #+2
   \   00000260   D8FFFF3A           BCC      ??SendObject_10
    732                  if (IncludeAlarm) {
   \   00000264   EE01D4E5           LDRB     R0,[R4, #+494]
   \   00000268   000050E3           CMP      R0,#+0
   \   0000026C   D100000A           BEQ      ??SendObject_11
    733                      //  "LOLE","HILE","OVER","LOVA","HIVA","LECH","LOLR","HILR","LOTE","HITE","DDIF"
    734                      AnsiString AlarmsStr;
    735                      if (ObjPtr->HWFailure) {
   \   00000270   ........           LDR      R7,??Subroutine34_0  ;; `?<Constant "HIPR">`
   \   00000274   0D00A0E1           MOV      R0,SP
   \   00000278   ........           _BLF     ??AnsiString,??AnsiString??rA
   \   0000027C   3C00D6E5           LDRB     R0,[R6, #+60]
   \   00000280   000050E3           CMP      R0,#+0
   \   00000284   2400000A           BEQ      ??SendObject_12
    736                          AlarmsStr = AnsiString(Separator) + AnsiString("HWAL");
   \   00000288   601087E2           ADD      R1,R7,#+96
   \   0000028C   B0008DE2           ADD      R0,SP,#+176
   \   00000290   ........           _BLF     ??AnsiString_1,??AnsiString??rA_1
   \   00000294   EC11D4E5           LDRB     R1,[R4, #+492]
   \   00000298   0070A0E1           MOV      R7,R0
   \   0000029C   60008DE2           ADD      R0,SP,#+96
   \   000002A0   ........           _BLF     ??AnsiString_4,??AnsiString??rA_4
   \   000002A4   0720A0E1           MOV      R2,R7
   \   000002A8   0010A0E1           MOV      R1,R0
   \   000002AC   44008DE2           ADD      R0,SP,#+68
   \   000002B0   ........           _BLF     `??operator+`,`??operator+??rA`
   \   000002B4   44108DE2           ADD      R1,SP,#+68
   \   000002B8   28008DE2           ADD      R0,SP,#+40
   \   000002BC   ........           _BLF     ??AnsiString_3,??AnsiString??rA_3
   \   000002C0   ........           LDR      R1,??DataTable32  ;; ??npos
   \   000002C4   0020A0E3           MOV      R2,#+0
   \   000002C8   003091E5           LDR      R3,[R1, #+0]
   \   000002CC   0010A0E1           MOV      R1,R0
   \   000002D0   0D00A0E1           MOV      R0,SP
   \   000002D4   ........           _BLF     ??assign,??assign??rA
   \   000002D8   0020A0E3           MOV      R2,#+0
   \   000002DC   0110A0E3           MOV      R1,#+1
   \   000002E0   28008DE2           ADD      R0,SP,#+40
   \   000002E4   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000002E8   0020A0E3           MOV      R2,#+0
   \   000002EC   0110A0E3           MOV      R1,#+1
   \   000002F0   44008DE2           ADD      R0,SP,#+68
   \   000002F4   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000002F8   0020A0E3           MOV      R2,#+0
   \   000002FC   0110A0E3           MOV      R1,#+1
   \   00000300   B0008DE2           ADD      R0,SP,#+176
   \   00000304   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000308   0020A0E3           MOV      R2,#+0
   \   0000030C   0110A0E3           MOV      R1,#+1
   \   00000310   60008DE2           ADD      R0,SP,#+96
   \   00000314   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000318   9C0000EA           B        ??SendObject_13
    737                      } else {
    738                          set<AlarmBasic *>AlList = ObjPtr->CompleteAlarmInfoList;
   \                     ??SendObject_12:
   \   0000031C   FC8086E2           ADD      R8,R6,#+252
   \   00000320   1490D8E5           LDRB     R9,[R8, #+20]
   \   00000324   98008DE2           ADD      R0,SP,#+152
   \   00000328   ........           _BLF     ??_Clear,??_Clear??rA
   \   0000032C   AC90CDE5           STRB     R9,[SP, #+172]
   \   00000330   0810A0E1           MOV      R1,R8
   \   00000334   98008DE2           ADD      R0,SP,#+152
   \   00000338   ........           _BLF     ??_Copy,??_Copy??rA_1
    739                          if (!AlList.empty()) {
   \   0000033C   A8009DE5           LDR      R0,[SP, #+168]
   \   00000340   000050E3           CMP      R0,#+0
   \   00000344   8F00000A           BEQ      ??SendObject_14
    740                              set<AlarmBasic *>::iterator pBIt;
    741                              for (pBIt = AlList.begin(); pBIt != AlList.end(); pBIt++) {
   \   00000348   98809DE5           LDR      R8,[SP, #+152]
   \   0000034C   080000EA           B        ??SendObject_15
    742                                  AlarmBasic *TempElement = *pBIt;
    743                                  switch (TempElement->State) {
    744                                  case AlarmBasic::AlIdle:
    745                                  case AlarmBasic::AlBlocked:
    746                                      break;
    747                                  case AlarmBasic::AlActive:
    748                                  case AlarmBasic::AlAknowledged:
    749                                      AlarmsStr += AnsiString(Separator);
    750                                      switch (TempElement->Type) {
    751                                      case ID_AL_LOW_LEVEL :
    752                                          AlarmsStr += "LOLE";
    753                                          break;
    754                                      case ID_AL_LOWLOW_LEVEL :
    755                                          AlarmsStr += "LOLOLE";
    756                                          break;
    757                                      case ID_AL_HIGH_LEVEL:
    758                                          AlarmsStr += "HILE";
    759                                          break;
    760                                      case ID_AL_OVERFILL  :
    761                                          AlarmsStr += "OVER";
    762                                          break;
    763                                      case ID_AL_LOW_INERT_GAS_PRESS:
    764                                          AlarmsStr += "LOIGP";
    765                                          break;
    766                                      case ID_AL_LOW_LINE_PRESS:
    767                                      case ID_AL_LOW_T_PRESS:
    768                                          AlarmsStr += "LOPR";
    769                                          break;
    770                                      case ID_AL_X_LOW_T_PRESS1:
    771                                          AlarmsStr += "X1LOPR";
    772                                          break;
    773                                      case ID_AL_X_LOW_T_PRESS2:
    774                                          AlarmsStr += "X2LOPR";
    775                                          break;
    776                                      case ID_AL_HIGH_LINE_PRESS:
    777                                      case ID_AL_HIGH_T_PRESS:
    778                                          AlarmsStr += "HIPR";
    779                                          break;
    780                                      case ID_AL_HIGH_INERT_GAS_PRESS:
    781                                          AlarmsStr += "HIIGP";
    782                                          break;
    783                                      case ID_AL_X_HIGH_T_PRESS1:
    784                                          AlarmsStr += "X1HIPR";
    785                                          break;
    786                                      case ID_AL_X_HIGH_T_PRESS2:
    787                                          AlarmsStr += "X2HIPR";
    788                                          break;
    789                                      case ID_AL_LEVEL_CHANGE:
    790                                          AlarmsStr += "LECH";
    791                                          break;
    792                                      case ID_AL_LOW_LOADRATE:
    793                                          AlarmsStr += "LOLR";
    794                                          break;
    795                                      case ID_AL_HIGH_LOADRATE:
    796                                          AlarmsStr += "HILR";
    797                                          break;
    798                                      case ID_AL_LOW_TEMP:
    799                                          AlarmsStr += "LOTE";
    800                                          break;
    801                                      case ID_AL_LOW_BOT_TEMP:
    802                                          AlarmsStr += "LOBTE";
    803                                          break;
    804                                      case ID_AL_HIGH_TEMP:
    805                                          AlarmsStr += "HITE";
    806                                          break;
    807                                      case ID_AL_HIGH_BOT_TEMP:
    808                                          AlarmsStr += "HIBTE";
    809                                          break;
    810                                      case ID_AL_DENS_DIFF:
    811                                          AlarmsStr += "DDIF";
   \                     ??SendObject_16:
   \   00000350   500087E2           ADD      R0,R7,#+80
   \   00000354   ........           _BLF     strlen,??strlen??rA
   \   00000358   0020A0E1           MOV      R2,R0
   \   0000035C   501087E2           ADD      R1,R7,#+80
   \                     ??SendObject_17:
   \   00000360   0D00A0E1           MOV      R0,SP
   \   00000364   ........           _BLF     ??append_2,??append??rA_2
   \                     ??SendObject_18:
   \   00000368   0800A0E1           MOV      R0,R8
   \   0000036C   ........           _BLF     ??_IncP,??_IncP??rA
   \   00000370   0080A0E1           MOV      R8,R0
   \                     ??SendObject_15:
   \   00000374   98008DE2           ADD      R0,SP,#+152
   \   00000378   000058E1           CMP      R8,R0
   \   0000037C   8100000A           BEQ      ??SendObject_14
   \   00000380   109098E5           LDR      R9,[R8, #+16]
   \   00000384   E000D9E5           LDRB     R0,[R9, #+224]
   \   00000388   010040E2           SUB      R0,R0,#+1
   \   0000038C   010050E3           CMP      R0,#+1
   \   00000390   F4FFFF8A           BHI      ??SendObject_18
   \   00000394   EC11D4E5           LDRB     R1,[R4, #+492]
   \   00000398   E8008DE2           ADD      R0,SP,#+232
   \   0000039C   ........           _BLF     ??AnsiString_4,??AnsiString??rA_4
   \   000003A0   0010A0E1           MOV      R1,R0
   \   000003A4   ........           LDR      R0,??DataTable32  ;; ??npos
   \   000003A8   0020A0E3           MOV      R2,#+0
   \   000003AC   003090E5           LDR      R3,[R0, #+0]
   \   000003B0   0D00A0E1           MOV      R0,SP
   \   000003B4   ........           _BLF     ??append,??append??rA
   \   000003B8   0020A0E3           MOV      R2,#+0
   \   000003BC   0110A0E3           MOV      R1,#+1
   \   000003C0   E8008DE2           ADD      R0,SP,#+232
   \   000003C4   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000003C8   A00099E5           LDR      R0,[R9, #+160]
   \   000003CC   C20040E2           SUB      R0,R0,#+194
   \   000003D0   B00E40E2           SUB      R0,R0,#+2816
   \   000003D4   210050E3           CMP      R0,#+33
   \   000003D8   E2FFFF8A           BHI      ??SendObject_18
   \   000003DC   011F8FE2           ADR      R1,??SendObject_1
   \   000003E0   D01091E1           LDRSB    R1,[R1, R0]
   \   000003E4   01F18FE0           ADD      PC,PC,R1, LSL #+2
   \                     ??SendObject_1:
   \   000003E8   1712080D           DC8      +23,+18,+8,+13
   \   000003EC   5D536258           DC8      +93,+83,+98,+88
   \   000003F0   DFDFDFDF           DC8      +223,+223,+223,+223
   \   000003F4   DF2130DF           DC8      +223,+33,+48,+223
   \   000003F8   DF1C35DF           DC8      +223,+28,+53,+223
   \   000003FC   DF494E44           DC8      +223,+73,+78,+68
   \   00000400   D92130DF           DC8      +217,+33,+48,+223
   \   00000404   DFDF263A           DC8      +223,+223,+38,+58
   \   00000408   2B3F0000           DC8      +43,+63,+0,+0
   \                     ??SendObject_19:
   \   0000040C   680087E2           ADD      R0,R7,#+104
   \   00000410   ........           _BLF     strlen,??strlen??rA
   \   00000414   0020A0E1           MOV      R2,R0
   \   00000418   681087E2           ADD      R1,R7,#+104
   \   0000041C   CFFFFFEA           B        ??SendObject_17
   \                     ??SendObject_20:
   \   00000420   700087E2           ADD      R0,R7,#+112
   \   00000424   ........           _BLF     strlen,??strlen??rA
   \   00000428   0020A0E1           MOV      R2,R0
   \   0000042C   701087E2           ADD      R1,R7,#+112
   \   00000430   CAFFFFEA           B        ??SendObject_17
   \                     ??SendObject_21:
   \   00000434   780087E2           ADD      R0,R7,#+120
   \   00000438   ........           _BLF     strlen,??strlen??rA
   \   0000043C   0020A0E1           MOV      R2,R0
   \   00000440   781087E2           ADD      R1,R7,#+120
   \   00000444   C5FFFFEA           B        ??SendObject_17
   \                     ??SendObject_22:
   \   00000448   800087E2           ADD      R0,R7,#+128
   \   0000044C   ........           _BLF     strlen,??strlen??rA
   \   00000450   0020A0E1           MOV      R2,R0
   \   00000454   801087E2           ADD      R1,R7,#+128
   \   00000458   C0FFFFEA           B        ??SendObject_17
   \                     ??SendObject_23:
   \   0000045C   880087E2           ADD      R0,R7,#+136
   \   00000460   ........           _BLF     strlen,??strlen??rA
   \   00000464   0020A0E1           MOV      R2,R0
   \   00000468   881087E2           ADD      R1,R7,#+136
   \   0000046C   BBFFFFEA           B        ??SendObject_17
   \                     ??SendObject_24:
   \   00000470   900087E2           ADD      R0,R7,#+144
   \   00000474   ........           _BLF     strlen,??strlen??rA
   \   00000478   0020A0E1           MOV      R2,R0
   \   0000047C   901087E2           ADD      R1,R7,#+144
   \   00000480   B6FFFFEA           B        ??SendObject_17
   \                     ??SendObject_25:
   \   00000484   980087E2           ADD      R0,R7,#+152
   \   00000488   ........           _BLF     strlen,??strlen??rA
   \   0000048C   0020A0E1           MOV      R2,R0
   \   00000490   981087E2           ADD      R1,R7,#+152
   \   00000494   B1FFFFEA           B        ??SendObject_17
   \                     ??SendObject_26:
   \   00000498   A00087E2           ADD      R0,R7,#+160
   \   0000049C   ........           _BLF     strlen,??strlen??rA
   \   000004A0   0020A0E1           MOV      R2,R0
   \   000004A4   A01087E2           ADD      R1,R7,#+160
   \   000004A8   ACFFFFEA           B        ??SendObject_17
   \                     ??SendObject_27:
   \   000004AC   0700A0E1           MOV      R0,R7
   \   000004B0   ........           _BLF     strlen,??strlen??rA
   \   000004B4   0020A0E1           MOV      R2,R0
   \   000004B8   0710A0E1           MOV      R1,R7
   \   000004BC   A7FFFFEA           B        ??SendObject_17
   \                     ??SendObject_28:
   \   000004C0   080087E2           ADD      R0,R7,#+8
   \   000004C4   ........           _BLF     strlen,??strlen??rA
   \   000004C8   0020A0E1           MOV      R2,R0
   \   000004CC   081087E2           ADD      R1,R7,#+8
   \   000004D0   A2FFFFEA           B        ??SendObject_17
   \                     ??SendObject_29:
   \   000004D4   100087E2           ADD      R0,R7,#+16
   \   000004D8   ........           _BLF     strlen,??strlen??rA
   \   000004DC   0020A0E1           MOV      R2,R0
   \   000004E0   101087E2           ADD      R1,R7,#+16
   \   000004E4   9DFFFFEA           B        ??SendObject_17
   \                     ??SendObject_30:
   \   000004E8   180087E2           ADD      R0,R7,#+24
   \   000004EC   ........           _BLF     strlen,??strlen??rA
   \   000004F0   0020A0E1           MOV      R2,R0
   \   000004F4   181087E2           ADD      R1,R7,#+24
   \   000004F8   98FFFFEA           B        ??SendObject_17
   \                     ??SendObject_31:
   \   000004FC   200087E2           ADD      R0,R7,#+32
   \   00000500   ........           _BLF     strlen,??strlen??rA
   \   00000504   0020A0E1           MOV      R2,R0
   \   00000508   201087E2           ADD      R1,R7,#+32
   \   0000050C   93FFFFEA           B        ??SendObject_17
   \                     ??SendObject_32:
   \   00000510   280087E2           ADD      R0,R7,#+40
   \   00000514   ........           _BLF     strlen,??strlen??rA
   \   00000518   0020A0E1           MOV      R2,R0
   \   0000051C   281087E2           ADD      R1,R7,#+40
   \   00000520   8EFFFFEA           B        ??SendObject_17
   \                     ??SendObject_33:
   \   00000524   300087E2           ADD      R0,R7,#+48
   \   00000528   ........           _BLF     strlen,??strlen??rA
   \   0000052C   0020A0E1           MOV      R2,R0
   \   00000530   301087E2           ADD      R1,R7,#+48
   \   00000534   89FFFFEA           B        ??SendObject_17
   \                     ??SendObject_34:
   \   00000538   380087E2           ADD      R0,R7,#+56
   \   0000053C   ........           _BLF     strlen,??strlen??rA
   \   00000540   0020A0E1           MOV      R2,R0
   \   00000544   381087E2           ADD      R1,R7,#+56
   \   00000548   84FFFFEA           B        ??SendObject_17
   \                     ??SendObject_35:
   \   0000054C   400087E2           ADD      R0,R7,#+64
   \   00000550   ........           _BLF     strlen,??strlen??rA
   \   00000554   0020A0E1           MOV      R2,R0
   \   00000558   401087E2           ADD      R1,R7,#+64
   \   0000055C   7FFFFFEA           B        ??SendObject_17
   \                     ??SendObject_36:
   \   00000560   480087E2           ADD      R0,R7,#+72
   \   00000564   ........           _BLF     strlen,??strlen??rA
   \   00000568   0020A0E1           MOV      R2,R0
   \   0000056C   481087E2           ADD      R1,R7,#+72
   \   00000570   7AFFFFEA           B        ??SendObject_17
   \                     ??SendObject_37:
   \   00000574   580087E2           ADD      R0,R7,#+88
   \   00000578   ........           _BLF     strlen,??strlen??rA
   \   0000057C   0020A0E1           MOV      R2,R0
   \   00000580   581087E2           ADD      R1,R7,#+88
   \   00000584   75FFFFEA           B        ??SendObject_17
    812                                          break;
    813                                      }
    814                                      break;
    815          
    816                                  }
    817                              }
    818                          }
    819                      }
   \                     ??SendObject_14:
   \   00000588   98008DE2           ADD      R0,SP,#+152
   \   0000058C   ........           _BLF     `?~set_1`,`?~set??rA`
    820                      TmpStr += AlarmsStr;
   \                     ??SendObject_13:
   \   00000590   ........           LDR      R0,??DataTable32  ;; ??npos
   \   00000594   0020A0E3           MOV      R2,#+0
   \   00000598   003090E5           LDR      R3,[R0, #+0]
   \   0000059C   0D10A0E1           MOV      R1,SP
   \   000005A0   7C008DE2           ADD      R0,SP,#+124
   \   000005A4   ........           _BLF     ??append,??append??rA
    821                  }
   \   000005A8   0020A0E3           MOV      R2,#+0
   \   000005AC   0110A0E3           MOV      R1,#+1
   \   000005B0   0D00A0E1           MOV      R0,SP
   \   000005B4   ........           _BLF     ??_Tidy,??_Tidy??rA
    822                  if (IncludeHWStatus) {
   \                     ??SendObject_11:
   \   000005B8   ED01D4E5           LDRB     R0,[R4, #+493]
   \   000005BC   000050E3           CMP      R0,#+0
   \   000005C0   1C00000A           BEQ      ??SendObject_38
    823                      TmpStr += (AnsiString)Separator + (AnsiString)int(ObjPtr->HWFailure);
   \   000005C4   3C10D6E5           LDRB     R1,[R6, #+60]
   \   000005C8   44008DE2           ADD      R0,SP,#+68
   \   000005CC   ........           _BLF     ??AnsiString_2,??AnsiString??rA_2
   \   000005D0   EC11D4E5           LDRB     R1,[R4, #+492]
   \   000005D4   0060A0E1           MOV      R6,R0
   \   000005D8   28008DE2           ADD      R0,SP,#+40
   \   000005DC   ........           _BLF     ??AnsiString_4,??AnsiString??rA_4
   \   000005E0   0620A0E1           MOV      R2,R6
   \   000005E4   0010A0E1           MOV      R1,R0
   \   000005E8   0D00A0E1           MOV      R0,SP
   \   000005EC   ........           _BLF     `??operator+`,`??operator+??rA`
   \   000005F0   ........           LDR      R0,??DataTable32  ;; ??npos
   \   000005F4   0020A0E3           MOV      R2,#+0
   \   000005F8   003090E5           LDR      R3,[R0, #+0]
   \   000005FC   0D10A0E1           MOV      R1,SP
   \   00000600   7C008DE2           ADD      R0,SP,#+124
   \   00000604   ........           _BLF     ??append,??append??rA
   \   00000608   0020A0E3           MOV      R2,#+0
   \   0000060C   0110A0E3           MOV      R1,#+1
   \   00000610   0D00A0E1           MOV      R0,SP
   \   00000614   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000618   0020A0E3           MOV      R2,#+0
   \   0000061C   0110A0E3           MOV      R1,#+1
   \   00000620   44008DE2           ADD      R0,SP,#+68
   \   00000624   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000628   0020A0E3           MOV      R2,#+0
   \   0000062C   0110A0E3           MOV      R1,#+1
   \   00000630   28008DE2           ADD      R0,SP,#+40
   \   00000634   ........           _BLF     ??_Tidy,??_Tidy??rA
    824                  }
    825                  SendString(PortPtr, TmpStr);
   \                     ??SendObject_38:
   \   00000638   7C108DE2           ADD      R1,SP,#+124
   \   0000063C   CC008DE2           ADD      R0,SP,#+204
   \   00000640   ........           _BLF     ??string,??string??rA
   \   00000644   CC208DE2           ADD      R2,SP,#+204
   \   00000648   0510A0E1           MOV      R1,R5
   \   0000064C   0400A0E1           MOV      R0,R4
   \   00000650   ........           BL       ??SendString
   \   00000654   0020A0E3           MOV      R2,#+0
   \   00000658   0110A0E3           MOV      R1,#+1
   \   0000065C   CC008DE2           ADD      R0,SP,#+204
   \   00000660   ........           _BLF     ??_Tidy,??_Tidy??rA
    826                  TSN_Delay(Delay);
   \   00000664   E80194E5           LDR      R0,[R4, #+488]
   \   00000668   ........           _BLF     OS_Delay,??OS_Delay??rA
    827              }
    828          }
   \                     ??SendObject_7:
   \   0000066C   1C008DE2           ADD      R0,SP,#+28
   \   00000670   ........           _BLF     ??_Tidy0,??_Tidy0??rA
   \   00000674   1C008DE2           ADD      R0,SP,#+28
   \   00000678   ........           _BLF     ??_Zero,??_Zero??rA
   \   0000067C   0020A0E3           MOV      R2,#+0
   \   00000680   0110A0E3           MOV      R1,#+1
   \   00000684   7C008DE2           ADD      R0,SP,#+124
   \   00000688   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   0000068C   41DF8DE2           ADD      SP,SP,#+260
   \   00000690                      REQUIRE ?Subroutine34
   \   00000690                      ;; // Fall through to label ?Subroutine34
    829          

   \                                 In segment CODE, align 4, keep-with-next
    830          bool AnPro3object::SendTank(TSNUart *PortPtr, int Id) {
   \                     ??SendTank:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
   \   0000000C   0200A0E1           MOV      R0,R2
    831              bool          SendOk  = false;
   \   00000010   0060A0E3           MOV      R6,#+0
    832              PROXRefObject *TmpPtr = PROXRefObject::GetANProObject(Id, C_PRO_TANK);
   \   00000014   1A10A0E3           MOV      R1,#+26
   \   00000018   ........           B        ?Subroutine29
    833              if (TmpPtr) {
    834                  SendOk = true;
    835                  SendObject(PortPtr, TmpPtr, "TO");
    836              }
    837              return (SendOk);
    838          }

   \                                 In segment CODE, align 4, keep-with-next
    839          bool AnPro3object::SendLPressure(TSNUart *PortPtr, int Id) {
   \                     ??SendLPressure:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
   \   0000000C   0200A0E1           MOV      R0,R2
    840              bool          SendOk  = false;
   \   00000010   0060A0E3           MOV      R6,#+0
    841              PROXRefObject *TmpPtr = PROXRefObject::GetANProObject(Id, C_PRO_LINEPRESS);
   \   00000014   461EA0E3           MOV      R1,#+1120
   \   00000018   ........           _BLF     ??GetANProObject,??GetANProObject??rA
   \   0000001C   0020B0E1           MOVS     R2,R0
    842              if (TmpPtr) {
   \   00000020   0400000A           BEQ      ??SendLPressure_1
    843                  SendOk = true;
   \   00000024   0160A0E3           MOV      R6,#+1
    844                  SendObject(PortPtr, TmpPtr, "LPO");
   \   00000028   033F8FE2           ADR      R3,??SendLPressure_2  ;; "LPO"
   \   0000002C   0510A0E1           MOV      R1,R5
   \   00000030   0400A0E1           MOV      R0,R4
   \   00000034   ........           BL       ??SendObject
    845              }
    846              return (SendOk);
   \                     ??SendLPressure_1:
   \   00000038   ........           B        ??Subroutine29_0
   \                     ??SendLPressure_2:
   \   0000003C   4C504F00           DC8      "LPO"
    847          }

   \                                 In segment CODE, align 4, keep-with-next
    848          bool AnPro3object::SendTemperature(TSNUart *PortPtr, int Id) {
   \                     ??SendTemperature:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
   \   0000000C   0200A0E1           MOV      R0,R2
    849              bool          SendOk  = false;
   \   00000010   0060A0E3           MOV      R6,#+0
    850              PROXRefObject *TmpPtr = PROXRefObject::GetANProObject(Id, C_PRO_TEMP);
   \   00000014   2E10A0E3           MOV      R1,#+46
   \   00000018                      REQUIRE ?Subroutine29
   \   00000018                      ;; // Fall through to label ?Subroutine29
    851              if (TmpPtr) {
    852                  SendOk = true;
    853                  SendObject(PortPtr, TmpPtr, "TO");
    854              }
    855              return (SendOk);
    856          }
    857          
    858          

   \                                 In segment CODE, align 4, keep-with-next
    859          bool AnPro3object::ReceiveRequest(TSNUart *PortPtr, char *RxBuf, int BufSize) {
   \                     ??ReceiveRequest:
   \   00000000   F44F2DE9           PUSH     {R2,R4-R11,LR}
   \   00000004   0CD04DE2           SUB      SP,SP,#+12
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   0150A0E1           MOV      R5,R1
    860              bool        DataAvailable = false;
    861              const U8    *EndPtr       = (const U8 *)&RxBuf[BufSize];
   \   00000010   021083E0           ADD      R1,R3,R2
   \   00000014   08108DE5           STR      R1,[SP, #+8]
    862              volatile U8 Data;
    863              int         StxCnt        = 1;
   \   00000018   0160A0E3           MOV      R6,#+1
   \   0000001C   737FA0E3           MOV      R7,#+460
   \   00000020   00A0A0E3           MOV      R10,#+0
    864              do {
    865                  int TimeOut = 0x7fffffff;
   \                     ??ReceiveRequest_1:
   \   00000024   8084E0E3           MVN      R8,#-2147483648
    866                  do {
    867                      DataAvailable = PortPtr->Receive((U8 *)&Data, 1, TimeOut); // wait till a character comes in
   \                     ??ReceiveRequest_2:
   \   00000028   DC9095E5           LDR      R9,[R5, #+220]
   \   0000002C   0830A0E1           MOV      R3,R8
   \   00000030   089099E5           LDR      R9,[R9, #+8]
   \   00000034   0120A0E3           MOV      R2,#+1
   \   00000038   0D10A0E1           MOV      R1,SP
   \   0000003C   0500A0E1           MOV      R0,R5
   \   00000040   0FE0A0E1           MOV      LR,PC
   \   00000044   19FF2FE1           BX       R9
   \   00000048   00B0B0E1           MOVS     R11,R0
    868                      if (DataAvailable) {
   \   0000004C   F5FFFF0A           BEQ      ??ReceiveRequest_2
    869                          TimeOut = 200;
   \   00000050   0000DDE5           LDRB     R0,[SP, #+0]
   \   00000054   041087E0           ADD      R1,R7,R4
    870                      }
    871                  }  while (!DataAvailable || (Data != SyncStr[0]));
   \   00000058   182091E5           LDR      R2,[R1, #+24]
   \   0000005C   C880A0E3           MOV      R8,#+200
   \   00000060   100052E3           CMP      R2,#+16
   \   00000064   04109125           LDRCS    R1,[R1, #+4]
   \   00000068   04108132           ADDCC    R1,R1,#+4
   \   0000006C   0010D1E5           LDRB     R1,[R1, #+0]
   \   00000070   010050E1           CMP      R0,R1
   \   00000074   EBFFFF1A           BNE      ??ReceiveRequest_2
    872                  int           SyncLength = SyncStr.Length();
   \   00000078   040087E0           ADD      R0,R7,R4
   \   0000007C   ........           _BLF     ??Length,??Length??rA
   \   00000080   0080A0E1           MOV      R8,R0
    873                  U8            SyncChar   = SyncStr[0];
   \   00000084   040087E0           ADD      R0,R7,R4
   \   00000088   040080E2           ADD      R0,R0,#+4
   \   0000008C   141090E5           LDR      R1,[R0, #+20]
    874                  volatile bool IsSync     = true;
   \   00000090   0190A0E3           MOV      R9,#+1
   \   00000094   100051E3           CMP      R1,#+16
   \   00000098   00009025           LDRCS    R0,[R0, #+0]
   \   0000009C   0000D0E5           LDRB     R0,[R0, #+0]
   \   000000A0   04008DE5           STR      R0,[SP, #+4]
   \   000000A4   0190CDE5           STRB     R9,[SP, #+1]
   \                     ??ReceiveRequest_3:
   \   000000A8   0100DDE5           LDRB     R0,[SP, #+1]
   \   000000AC   000050E3           CMP      R0,#+0
   \   000000B0   1100000A           BEQ      ??ReceiveRequest_4
    875                  while (DataAvailable && IsSync) {
    876                      DataAvailable = PortPtr->Receive((U8 *)&Data, 1, TimeOut); // wait till a character comes in
   \   000000B4   DCB095E5           LDR      R11,[R5, #+220]
   \   000000B8   C830A0E3           MOV      R3,#+200
   \   000000BC   08B09BE5           LDR      R11,[R11, #+8]
   \   000000C0   0120A0E3           MOV      R2,#+1
   \   000000C4   0D10A0E1           MOV      R1,SP
   \   000000C8   0500A0E1           MOV      R0,R5
   \   000000CC   0FE0A0E1           MOV      LR,PC
   \   000000D0   1BFF2FE1           BX       R11
   \   000000D4   00B0B0E1           MOVS     R11,R0
    877                      if (DataAvailable) {
   \   000000D8   0700000A           BEQ      ??ReceiveRequest_4
    878                          if (Data == SyncChar) {
   \   000000DC   0000DDE5           LDRB     R0,[SP, #+0]
   \   000000E0   04109DE5           LDR      R1,[SP, #+4]
   \   000000E4   011CA0E1           MOV      R1,R1, LSL #+24
   \   000000E8   210C50E1           CMP      R0,R1, LSR #+24
   \   000000EC   0010A013           MOVNE    R1,#+0
   \   000000F0   0110CD15           STRBNE   R1,[SP, #+1]
    879                              StxCnt++;
   \   000000F4   01608602           ADDEQ    R6,R6,#+1
   \   000000F8   EAFFFFEA           B        ??ReceiveRequest_3
    880                          } else {
    881                              IsSync = false;
    882                          }
    883                      }
    884                  }
    885                  if (StxCnt < SyncLength) {
   \                     ??ReceiveRequest_4:
   \   000000FC   080056E1           CMP      R6,R8
   \   00000100   C7FFFFBA           BLT      ??ReceiveRequest_1
    886                      DataAvailable = false;
    887                  }
    888              } while (!DataAvailable);
   \   00000104   00005BE3           CMP      R11,#+0
   \   00000108   C5FFFF0A           BEQ      ??ReceiveRequest_1
    889          
    890              U8 *RxPtr = (U8 *)RxBuf;
    891              *RxPtr++ = Data; // Do not forget to include the first byte which is not Stx
   \   0000010C   0C009DE5           LDR      R0,[SP, #+12]
   \   00000110   0010DDE5           LDRB     R1,[SP, #+0]
   \   00000114   0010C0E5           STRB     R1,[R0, #+0]
   \   00000118   0C009DE5           LDR      R0,[SP, #+12]
    892              volatile bool EndOfPacket = false;
   \   0000011C   0010A0E3           MOV      R1,#+0
   \   00000120   016080E2           ADD      R6,R0,#+1
   \   00000124   0110CDE5           STRB     R1,[SP, #+1]
    893              do {
    894                  DataAvailable = PortPtr->Receive((U8 *)&Data, 1, 200); // wait till a character comes in
   \                     ??ReceiveRequest_5:
   \   00000128   DC7095E5           LDR      R7,[R5, #+220]
   \   0000012C   C830A0E3           MOV      R3,#+200
   \   00000130   087097E5           LDR      R7,[R7, #+8]
   \   00000134   0120A0E3           MOV      R2,#+1
   \   00000138   0D10A0E1           MOV      R1,SP
   \   0000013C   0500A0E1           MOV      R0,R5
   \   00000140   0FE0A0E1           MOV      LR,PC
   \   00000144   17FF2FE1           BX       R7
   \   00000148   00B0A0E1           MOV      R11,R0
    895                  switch (Data) {
   \   0000014C   0000DDE5           LDRB     R0,[SP, #+0]
   \   00000150   0A0050E2           SUBS     R0,R0,#+10
   \   00000154   0400000A           BEQ      ??ReceiveRequest_6
   \   00000158   030050E2           SUBS     R0,R0,#+3
   \   0000015C   0400000A           BEQ      ??ReceiveRequest_7
    896                  default:
    897                  case ' ':
    898                      *RxPtr++ = Data;
   \   00000160   0000DDE5           LDRB     R0,[SP, #+0]
   \   00000164   ........           STRB     R0,[R6], #+1
   \   00000168   010000EA           B        ??ReceiveRequest_7
    899                      break;
    900                  case '\r':
    901                      // Simply ignore this one
    902                      break;
    903                  case '\n':
    904                      *RxPtr++ = 0;
   \                     ??ReceiveRequest_6:
   \   0000016C   ........           STRB     R10,[R6], #+1
    905                      EndOfPacket = true;
   \   00000170   0190CDE5           STRB     R9,[SP, #+1]
    906                      break;
    907                  }
    908              } while (DataAvailable && !EndOfPacket && (const U8 *)RxPtr < EndPtr);
   \                     ??ReceiveRequest_7:
   \   00000174   08709DE5           LDR      R7,[SP, #+8]
   \   00000178   00005BE3           CMP      R11,#+0
   \   0000017C   0400000A           BEQ      ??ReceiveRequest_8
   \   00000180   0100DDE5           LDRB     R0,[SP, #+1]
   \   00000184   000050E3           CMP      R0,#+0
   \   00000188   0100001A           BNE      ??ReceiveRequest_8
   \   0000018C   070056E1           CMP      R6,R7
   \   00000190   E4FFFF3A           BCC      ??ReceiveRequest_5
    909              if (ClearRxBufAfterReceive) {
   \                     ??ReceiveRequest_8:
   \   00000194   EF01D4E5           LDRB     R0,[R4, #+495]
   \   00000198   000050E3           CMP      R0,#+0
   \   0000019C   0400000A           BEQ      ??ReceiveRequest_9
    910                  PortPtr->ClearRxBuffer();
   \   000001A0   DC1095E5           LDR      R1,[R5, #+220]
   \   000001A4   0500A0E1           MOV      R0,R5
   \   000001A8   101091E5           LDR      R1,[R1, #+16]
   \   000001AC   0FE0A0E1           MOV      LR,PC
   \   000001B0   11FF2FE1           BX       R1
    911              }
    912              if ((const U8 *)RxPtr >= EndPtr) {
   \                     ??ReceiveRequest_9:
   \   000001B4   070056E1           CMP      R6,R7
    913                  EndOfPacket = false;
   \   000001B8   0010A023           MOVCS    R1,#+0
   \   000001BC   0110CD25           STRBCS   R1,[SP, #+1]
    914              }
    915              return (EndOfPacket);
   \   000001C0   0100DDE5           LDRB     R0,[SP, #+1]
   \   000001C4   10D08DE2           ADD      SP,SP,#+16
   \   000001C8   ........           B        ?Subroutine31
    916          }
    917          

   \                                 In segment CODE, align 4, keep-with-next
    918          bool AnPro3object::ControlCheckSum(char *RxBuf) {
   \                     ??ControlCheckSum:
   \   00000000   F04F2DE9           PUSH     {R4-R11,LR}
   \   00000004   0080A0E1           MOV      R8,R0
   \   00000008   0160A0E1           MOV      R6,R1
    919              bool CheckSumOK = false;
   \   0000000C   0040A0E3           MOV      R4,#+0
   \   00000010   0070A0E3           MOV      R7,#+0
    920              int  SLen       = strlen(RxBuf);
   \   00000014   0600A0E1           MOV      R0,R6
   \   00000018   ........           _BLF     strlen,??strlen??rA
    921              if (SLen) {
   \   0000001C   000050E3           CMP      R0,#+0
   \   00000020   4100000A           BEQ      ??ControlCheckSum_1
    922                  switch (Checksum_Type) {
   \   00000024   EC11D8E5           LDRB     R1,[R8, #+492]
   \   00000028   015040E2           SUB      R5,R0,#+1
   \   0000002C   C40198E5           LDR      R0,[R8, #+452]
   \   00000030   010050E2           SUBS     R0,R0,#+1
   \   00000034   2900000A           BEQ      ??ControlCheckSum_2
   \   00000038   010050E2           SUBS     R0,R0,#+1
   \   0000003C   0100000A           BEQ      ??ControlCheckSum_3
   \   00000040   380000EA           B        ??ControlCheckSum_4
    923                  case ANPRO3_CHECKSUM_INC_SYNC:
    924                      {
    925                          int CsStart = SLen - 1;
    926                          while (CsStart && (RxBuf[CsStart] != Separator)) CsStart--;
   \                     ??ControlCheckSum_5:
   \   00000044   015045E2           SUB      R5,R5,#+1
   \                     ??ControlCheckSum_3:
   \   00000048   000055E3           CMP      R5,#+0
   \   0000004C   0600D517           LDRBNE   R0,[R5, +R6]
   \   00000050   01005011           CMPNE    R0,R1
   \   00000054   FAFFFF1A           BNE      ??ControlCheckSum_5
    927                          int CheckSum = atoi(&RxBuf[CsStart]);
   \   00000058   0A20A0E3           MOV      R2,#+10
   \   0000005C   0010A0E3           MOV      R1,#+0
   \   00000060   060085E0           ADD      R0,R5,R6
   \   00000064   ........           _BLF     _Stoul,??_Stoul??rA
   \   00000068   0090A0E1           MOV      R9,R0
    928                          U8  CSum     = 0;
    929                          for (int i = 0; i < SyncStr.Length(); i++) {
   \   0000006C   04A0A0E1           MOV      R10,R4
   \   00000070   73BFA0E3           MOV      R11,#+460
   \   00000074   030000EA           B        ??ControlCheckSum_6
    930                              CSum += SyncStr[i];
   \                     ??ControlCheckSum_7:
   \   00000078   0000DAE7           LDRB     R0,[R10, +R0]
   \   0000007C   01A08AE2           ADD      R10,R10,#+1
   \   00000080   044080E0           ADD      R4,R0,R4
   \   00000084   FF4004E2           AND      R4,R4,#0xFF
   \                     ??ControlCheckSum_6:
   \   00000088   08008BE0           ADD      R0,R11,R8
   \   0000008C   ........           _BLF     ??Length,??Length??rA
   \   00000090   00005AE1           CMP      R10,R0
   \   00000094   050000AA           BGE      ??ControlCheckSum_8
   \   00000098   08008BE0           ADD      R0,R11,R8
   \   0000009C   181090E5           LDR      R1,[R0, #+24]
   \   000000A0   100051E3           CMP      R1,#+16
   \   000000A4   04009025           LDRCS    R0,[R0, #+4]
   \   000000A8   04008032           ADDCC    R0,R0,#+4
   \   000000AC   F1FFFFEA           B        ??ControlCheckSum_7
    931                          }
    932                          for (int i = 0; i <= CsStart; i++) {
   \                     ??ControlCheckSum_8:
   \   000000B0   0000A0E3           MOV      R0,#+0
   \   000000B4   030000EA           B        ??ControlCheckSum_9
    933                              CSum += RxBuf[i];
   \                     ??ControlCheckSum_10:
   \   000000B8   0610D0E7           LDRB     R1,[R0, +R6]
    934                          }
   \   000000BC   010080E2           ADD      R0,R0,#+1
   \   000000C0   044081E0           ADD      R4,R1,R4
   \   000000C4   FF4004E2           AND      R4,R4,#0xFF
   \                     ??ControlCheckSum_9:
   \   000000C8   000055E1           CMP      R5,R0
   \   000000CC   F9FFFFAA           BGE      ??ControlCheckSum_10
    935                          CheckSumOK = (CSum == CheckSum);
   \   000000D0   090054E1           CMP      R4,R9
   \   000000D4   1400001A           BNE      ??ControlCheckSum_1
   \   000000D8   120000EA           B        ??ControlCheckSum_4
    936                      }
    937                      break;
    938                  case ANPRO3_CHECKSUM:
    939                      {
    940                          int CsStart = SLen - 1;
    941                          while (CsStart && (RxBuf[CsStart] != Separator)) CsStart--;
   \                     ??ControlCheckSum_11:
   \   000000DC   015045E2           SUB      R5,R5,#+1
   \                     ??ControlCheckSum_2:
   \   000000E0   000055E3           CMP      R5,#+0
   \   000000E4   0600D517           LDRBNE   R0,[R5, +R6]
   \   000000E8   01005011           CMPNE    R0,R1
   \   000000EC   FAFFFF1A           BNE      ??ControlCheckSum_11
    942                          int CheckSum = atoi(&RxBuf[CsStart]);
   \   000000F0   0A20A0E3           MOV      R2,#+10
   \   000000F4   0010A0E3           MOV      R1,#+0
   \   000000F8   060085E0           ADD      R0,R5,R6
   \   000000FC   ........           _BLF     _Stoul,??_Stoul??rA
    943                          U8  CSum     = 0;
    944                          for (int i = 0; i <= CsStart; i++) {
   \   00000100   0410A0E1           MOV      R1,R4
   \   00000104   030000EA           B        ??ControlCheckSum_12
    945                              CSum += RxBuf[i];
   \                     ??ControlCheckSum_13:
   \   00000108   0620D1E7           LDRB     R2,[R1, +R6]
    946                          }
   \   0000010C   011081E2           ADD      R1,R1,#+1
   \   00000110   044082E0           ADD      R4,R2,R4
   \   00000114   FF4004E2           AND      R4,R4,#0xFF
   \                     ??ControlCheckSum_12:
   \   00000118   010055E1           CMP      R5,R1
   \   0000011C   F9FFFFAA           BGE      ??ControlCheckSum_13
    947                          CheckSumOK = (CSum == CheckSum);
   \   00000120   000054E1           CMP      R4,R0
   \   00000124   0000001A           BNE      ??ControlCheckSum_1
    948                      }
    949                      break;
    950                  default:
    951                      CheckSumOK = true;
   \                     ??ControlCheckSum_4:
   \   00000128   0170A0E3           MOV      R7,#+1
    952                  }
    953              }
    954              return (CheckSumOK);
   \                     ??ControlCheckSum_1:
   \   0000012C   0700A0E1           MOV      R0,R7
   \   00000130   ........           B        ?Subroutine31
    955          }
    956          
    957          
    958          #pragma diag_suppress=Pe550
    959          

   \                                 In segment CODE, align 4, keep-with-next
    960          void AnPro3object::HandleRequest(TSNUart *PortPtr) {
   \                     ??HandleRequest:
   \   00000000   F04F2DE9           PUSH     {R4-R11,LR}
   \   00000004   6EDF4DE2           SUB      SP,SP,#+440
   \   00000008   80DE4DE2           SUB      SP,SP,#+2048
   \   0000000C   0040A0E1           MOV      R4,R0
   \   00000010   0150A0E1           MOV      R5,R1
    961              char       RxBuf[ANPRO3_MAX_SIZE];
    962          
    963              AnsiString RxMsg = "";
   \   00000014   CD1F8FE2           ADR      R1,??HandleRequest_5  ;; ""
   \   00000018   D8008DE2           ADD      R0,SP,#+216
   \   0000001C   ........           _BLF     ??AnsiString_1,??AnsiString??rA_1
    964              if (ReceiveRequest(PortPtr, RxBuf, ANPRO3_MAX_SIZE - 1) && ControlCheckSum(RxBuf)) {
   \   00000020   FF30A0E3           MOV      R3,#+255
   \   00000024   C03F83E3           ORR      R3,R3,#0x300
   \   00000028   582F8DE2           ADD      R2,SP,#+352
   \   0000002C   0510A0E1           MOV      R1,R5
   \   00000030   0400A0E1           MOV      R0,R4
   \   00000034   ........           BL       ??ReceiveRequest
   \   00000038   000050E3           CMP      R0,#+0
   \   0000003C   D305000A           BEQ      ??HandleRequest_6
   \   00000040   581F8DE2           ADD      R1,SP,#+352
   \   00000044   0400A0E1           MOV      R0,R4
   \   00000048   ........           BL       ??ControlCheckSum
   \   0000004C   000050E3           CMP      R0,#+0
   \   00000050   CE05000A           BEQ      ??HandleRequest_6
    965                  for (unsigned i = 0; i < strlen(RxBuf); i++) {
   \   00000054   0060A0E3           MOV      R6,#+0
   \   00000058   070000EA           B        ??HandleRequest_7
    966                      if (RxBuf[i] == ',' || RxBuf[i] == '\t') {
   \                     ??HandleRequest_8:
   \   0000005C   580F8DE2           ADD      R0,SP,#+352
   \   00000060   000086E0           ADD      R0,R6,R0
   \   00000064   0010D0E5           LDRB     R1,[R0, #+0]
    967                          RxBuf[i] = ' ';
    968                      }
    969                  }
   \   00000068   016086E2           ADD      R6,R6,#+1
   \   0000006C   2C0051E3           CMP      R1,#+44
   \   00000070   09005113           CMPNE    R1,#+9
   \   00000074   2010A003           MOVEQ    R1,#+32
   \   00000078   0010C005           STRBEQ   R1,[R0, #+0]
   \                     ??HandleRequest_7:
   \   0000007C   580F8DE2           ADD      R0,SP,#+352
   \   00000080   ........           _BLF     strlen,??strlen??rA
   \   00000084   000056E1           CMP      R6,R0
   \   00000088   F3FFFF3A           BCC      ??HandleRequest_8
    970                  char ValKey[BUF_SIZE];
    971                  if (sscanf((char *)RxBuf, "%s", ValKey)) {
   \   0000008C   562E8DE2           ADD      R2,SP,#+1376
   \   00000090   AF1F8FE2           ADR      R1,??HandleRequest_5+0x4  ;; "%s"
   \   00000094   580F8DE2           ADD      R0,SP,#+352
   \   00000098   ........           _BLF     sscanf,??sscanf??rA
   \   0000009C   000050E3           CMP      R0,#+0
   \   000000A0   BA05000A           BEQ      ??HandleRequest_6
    972                      int VKey = FindValueKey(ValKey);
   \   000000A4   64899FE5           LDR      R8,??HandleRequest_9+0x18  ;; ??TXUSystemData
   \   000000A8   64799FE5           LDR      R7,??HandleRequest_9+0x1C  ;; ??PRODraftSysPtr
   \   000000AC   64699FE5           LDR      R6,??HandleRequest_9+0x20  ;; `?<Constant {1357, 1362, 1506, 1509, 1511, 1510`
   \   000000B0   561E8DE2           ADD      R1,SP,#+1376
   \   000000B4   5A0F8DE2           ADD      R0,SP,#+360
   \   000000B8   800E80E2           ADD      R0,R0,#+2048
   \   000000BC   ........           _BLF     ??AnsiString_1,??AnsiString??rA_1
   \   000000C0   ........           BL       ??FindValueKey
   \   000000C4   0090A0E1           MOV      R9,R0
   \   000000C8   0020A0E3           MOV      R2,#+0
   \   000000CC   0110A0E3           MOV      R1,#+1
   \   000000D0   5A0F8DE2           ADD      R0,SP,#+360
   \   000000D4   800E80E2           ADD      R0,R0,#+2048
   \   000000D8   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000000DC   9DAF8FE2           ADR      R10,??HandleRequest_5+0x8  ;; "%i"
   \   000000E0   010049E2           SUB      R0,R9,#+1
   \   000000E4   220050E3           CMP      R0,#+34
   \   000000E8   1500008A           BHI      ??HandleRequest_10
   \   000000EC   021F8FE2           ADR      R1,??HandleRequest_1
   \   000000F0   8000A0E1           MOV      R0,R0, LSL #+1
   \   000000F4   B01091E1           LDRH     R1,[R1, R0]
   \   000000F8   01F18FE0           ADD      PC,PC,R1, LSL #+2
   \                     ??HandleRequest_1:
   \   000000FC   400020003200       DC16     +64,+32,+50,+78
   \              4E00        
   \   00000104   4E004E004E00       DC16     +78,+78,+78,+78
   \              4E00        
   \   0000010C   4E0095014E00       DC16     +78,+405,+78,+405
   \              9501        
   \   00000114   950195019501       DC16     +405,+405,+405,+405
   \              9501        
   \   0000011C   950111009501       DC16     +405,+17,+405,+405
   \              9501        
   \   00000124   950121042104       DC16     +405,+1057,+1057,+1218
   \              C204        
   \   0000012C   C204C204C204       DC16     +1218,+1218,+1218,+1218
   \              C204        
   \   00000134   C20432032400       DC16     +1218,+818,+36,+1085
   \              3D04        
   \   0000013C   4E004E009501       DC16     +78,+78,+405,+0
   \              0000        
    973                      switch (VKey) {
    974                      default:
    975                          RxMsg = "Unknown code";
   \                     ??HandleRequest_10:
   \   00000144   201086E2           ADD      R1,R6,#+32
   \   00000148   610F8DE2           ADD      R0,SP,#+388
   \   0000014C   800E80E2           ADD      R0,R0,#+2048
   \   00000150   ........           _BLF     ??AnsiString_1,??AnsiString??rA_1
   \   00000154   C0189FE5           LDR      R1,??HandleRequest_9+0x24  ;; ??npos
   \   00000158   0020A0E3           MOV      R2,#+0
   \   0000015C   003091E5           LDR      R3,[R1, #+0]
   \   00000160   0010A0E1           MOV      R1,R0
   \   00000164   D8008DE2           ADD      R0,SP,#+216
   \   00000168   ........           _BLF     ??assign,??assign??rA
   \   0000016C   0020A0E3           MOV      R2,#+0
   \   00000170   0110A0E3           MOV      R1,#+1
   \   00000174   610F8DE2           ADD      R0,SP,#+388
   \   00000178   800E80E2           ADD      R0,R0,#+2048
   \   0000017C   820500EA           B        ??HandleRequest_11
    976                          break;
    977                      case ANPRO3_CMD_SYSTEM_OUT :
    978                          SendSysInfo(PortPtr);
   \                     ??HandleRequest_12:
   \   00000180   0510A0E1           MOV      R1,R5
   \   00000184   0400A0E1           MOV      R0,R4
   \   00000188   ........           BL       ??SendSysInfo
   \   0000018C   7F0500EA           B        ??HandleRequest_6
    979                          break;
    980                      case ANPRO3_CMD_TEMP_OUT:
    981                          {
    982                              char *Ptr  = NextField((char *)&RxBuf[1], Separator);
   \                     ??HandleRequest_13:
   \   00000190   EC11D4E5           LDRB     R1,[R4, #+492]
   \   00000194   61008DE2           ADD      R0,SP,#+97
   \   00000198   400F80E2           ADD      R0,R0,#+256
   \   0000019C   ........           BL       ??NextField
    983                              int  Index;
    984                              int  Cnt   = sscanf(Ptr, "%i", &Index);
    985                              if (Cnt == 1) {
   \   000001A0   0D20A0E1           MOV      R2,SP
   \   000001A4   0A10A0E1           MOV      R1,R10
   \   000001A8   ........           _BLF     sscanf,??sscanf??rA
   \   000001AC   010050E3           CMP      R0,#+1
   \   000001B0   7605001A           BNE      ??HandleRequest_6
    986                                  SendTemperature(PortPtr, Index);
   \   000001B4   00209DE5           LDR      R2,[SP, #+0]
   \   000001B8   0510A0E1           MOV      R1,R5
   \   000001BC   0400A0E1           MOV      R0,R4
   \   000001C0   ........           BL       ??SendTemperature
   \   000001C4   710500EA           B        ??HandleRequest_6
    987                              }
    988                          }
    989                          break;
    990                      case ANPRO3_CMD_LINE_OUT:
    991                          {
    992                              char *Ptr  = NextField((char *)&RxBuf[1], Separator);
   \                     ??HandleRequest_14:
   \   000001C8   EC11D4E5           LDRB     R1,[R4, #+492]
   \   000001CC   61008DE2           ADD      R0,SP,#+97
   \   000001D0   400F80E2           ADD      R0,R0,#+256
   \   000001D4   ........           BL       ??NextField
    993                              int  Index;
    994                              int  Cnt   = sscanf(Ptr, "%i", &Index);
    995                              if (Cnt == 1) {
   \   000001D8   0D20A0E1           MOV      R2,SP
   \   000001DC   0A10A0E1           MOV      R1,R10
   \   000001E0   ........           _BLF     sscanf,??sscanf??rA
   \   000001E4   010050E3           CMP      R0,#+1
   \   000001E8   6805001A           BNE      ??HandleRequest_6
    996                                  SendLPressure(PortPtr, Index);
   \   000001EC   00209DE5           LDR      R2,[SP, #+0]
   \   000001F0   0510A0E1           MOV      R1,R5
   \   000001F4   0400A0E1           MOV      R0,R4
   \   000001F8   ........           BL       ??SendLPressure
   \   000001FC   630500EA           B        ??HandleRequest_6
    997                              }
    998                          }
    999                          break;
   1000                      case ANPRO3_CMD_TANK_OUT:
   1001                          {
   1002                              char *Ptr  = NextField((char *)&RxBuf[1], Separator);
   \                     ??HandleRequest_15:
   \   00000200   EC11D4E5           LDRB     R1,[R4, #+492]
   \   00000204   61008DE2           ADD      R0,SP,#+97
   \   00000208   400F80E2           ADD      R0,R0,#+256
   \   0000020C   ........           BL       ??NextField
   1003                              int  Index, Cnt = sscanf(Ptr, "%i", &Index);
   1004                              if (Cnt == 1) {
   \   00000210   0D20A0E1           MOV      R2,SP
   \   00000214   0A10A0E1           MOV      R1,R10
   \   00000218   ........           _BLF     sscanf,??sscanf??rA
   \   0000021C   010050E3           CMP      R0,#+1
   \   00000220   5A05001A           BNE      ??HandleRequest_6
   1005                                  SendTank(PortPtr, Index);
   \   00000224   00209DE5           LDR      R2,[SP, #+0]
   \   00000228   0510A0E1           MOV      R1,R5
   \   0000022C   0400A0E1           MOV      R0,R4
   \   00000230   ........           BL       ??SendTank
   \   00000234   550500EA           B        ??HandleRequest_6
   1006                              }
   1007                          }
   1008                          break;
   1009                      case ANPRO3_CMD_OP_DNS1   :
   1010                      case ANPRO3_CMD_REF_TMP1  :
   1011                      case ANPRO3_CMD_OP_DNS2   :
   1012                      case ANPRO3_CMD_REF_TMP2  :
   1013                      case ANPRO3_CMD_COEFF     :
   1014                      case ANPRO3_CMD_DENSITY_IN:
   1015                      case ANPRO3_CMD_CARGO_TYPE:
   1016                      case ANPRO3_CMD_LC_VOLUME :
   1017                      case ANPRO3_CMD_LC_WEIGHT :
   1018                          {
   1019                              int Key;
   1020                              switch (VKey) {
   \                     ??HandleRequest_16:
   \   00000238   049059E2           SUBS     R9,R9,#+4
   \   0000023C   1000000A           BEQ      ??HandleRequest_17
   \   00000240   019059E2           SUBS     R9,R9,#+1
   \   00000244   1100000A           BEQ      ??HandleRequest_18
   \   00000248   019059E2           SUBS     R9,R9,#+1
   \   0000024C   1100000A           BEQ      ??HandleRequest_19
   \   00000250   019059E2           SUBS     R9,R9,#+1
   \   00000254   1100000A           BEQ      ??HandleRequest_20
   \   00000258   019059E2           SUBS     R9,R9,#+1
   \   0000025C   1100000A           BEQ      ??HandleRequest_21
   \   00000260   019059E2           SUBS     R9,R9,#+1
   \   00000264   1100000A           BEQ      ??HandleRequest_22
   \   00000268   029059E2           SUBS     R9,R9,#+2
   \   0000026C   1100000A           BEQ      ??HandleRequest_23
   \   00000270   169059E2           SUBS     R9,R9,#+22
   \   00000274   1100000A           BEQ      ??HandleRequest_24
   \   00000278   019059E2           SUBS     R9,R9,#+1
   \   0000027C   1100000A           BEQ      ??HandleRequest_25
   \   00000280   120000EA           B        ??HandleRequest_26
   1021                              case ANPRO3_CMD_OP_DNS1:
   1022                                  Key = SVT_REF_DNS1;
   \                     ??HandleRequest_17:
   \   00000284   DB70A0E3           MOV      R7,#+219
   \                     ??HandleRequest_27:
   \   00000288   707E87E3           ORR      R7,R7,#0x700
   \   0000028C   0F0000EA           B        ??HandleRequest_26
   1023                                  break;
   1024                              case ANPRO3_CMD_REF_TMP1:
   1025                                  Key = SVT_REF_TMP1;
   \                     ??HandleRequest_18:
   \   00000290   DD70A0E3           MOV      R7,#+221
   \   00000294   FBFFFFEA           B        ??HandleRequest_27
   1026                                  break;
   1027                              case ANPRO3_CMD_OP_DNS2:
   1028                                  Key = SVT_REF_DNS2;
   \                     ??HandleRequest_19:
   \   00000298   DC70A0E3           MOV      R7,#+220
   \   0000029C   F9FFFFEA           B        ??HandleRequest_27
   1029                                  break;
   1030                              case ANPRO3_CMD_REF_TMP2:
   1031                                  Key = SVT_REF_TMP2;
   \                     ??HandleRequest_20:
   \   000002A0   DE70A0E3           MOV      R7,#+222
   \   000002A4   F7FFFFEA           B        ??HandleRequest_27
   1032                                  break;
   1033                              case ANPRO3_CMD_COEFF:
   1034                                  Key = SVT_COEFF;
   \                     ??HandleRequest_21:
   \   000002A8   DF70A0E3           MOV      R7,#+223
   \   000002AC   F5FFFFEA           B        ??HandleRequest_27
   1035                                  break;
   1036                              case ANPRO3_CMD_DENSITY_IN:
   1037                                  Key = SVT_LC_DENSITY;
   \                     ??HandleRequest_22:
   \   000002B0   417EA0E3           MOV      R7,#+1040
   \   000002B4   050000EA           B        ??HandleRequest_26
   1038                                  break;
   1039                              case ANPRO3_CMD_CARGO_TYPE:
   1040                                  Key = SVT_CARGO_TYPE;
   \                     ??HandleRequest_23:
   \   000002B8   D270A0E3           MOV      R7,#+210
   \   000002BC   F1FFFFEA           B        ??HandleRequest_27
   1041                                  break;
   1042                              case ANPRO3_CMD_LC_VOLUME    :
   1043                                  Key = SVT_LC_VOLUME;
   \                     ??HandleRequest_24:
   \   000002C0   0970A0E3           MOV      R7,#+9
   \   000002C4   000000EA           B        ??HandleRequest_28
   1044                                  break;
   1045                              case ANPRO3_CMD_LC_WEIGHT    :
   1046                                  Key = SVT_LC_WEIGHT;
   \                     ??HandleRequest_25:
   \   000002C8   0A70A0E3           MOV      R7,#+10
   \                     ??HandleRequest_28:
   \   000002CC   407E87E3           ORR      R7,R7,#0x400
   1047                                  break;
   1048                              }
   1049                              char *Ptr  = NextField((char *)&RxBuf[1], Separator);
   \                     ??HandleRequest_26:
   \   000002D0   EC11D4E5           LDRB     R1,[R4, #+492]
   \   000002D4   61008DE2           ADD      R0,SP,#+97
   \   000002D8   400F80E2           ADD      R0,R0,#+256
   \   000002DC   ........           BL       ??NextField
   \   000002E0   0090B0E1           MOVS     R9,R0
   1050                              int  First;
   1051                              // Get the first tank
   1052                              if (Ptr && sscanf(Ptr, "%i", &First) == 1 && First >= 0 && First < 500) {
   \   000002E4   1801000A           BEQ      ??HandleRequest_29
   \   000002E8   04208DE2           ADD      R2,SP,#+4
   \   000002EC   0A10A0E1           MOV      R1,R10
   \   000002F0   ........           _BLF     sscanf,??sscanf??rA
   \   000002F4   010050E3           CMP      R0,#+1
   \   000002F8   1301001A           BNE      ??HandleRequest_29
   \   000002FC   04009DE5           LDR      R0,[SP, #+4]
   \   00000300   000050E3           CMP      R0,#+0
   \   00000304   1001004A           BMI      ??HandleRequest_29
   \   00000308   7D0F50E3           CMP      R0,#+500
   \   0000030C   0E0100AA           BGE      ??HandleRequest_29
   1053                                  // Get the last tank
   1054                                  int Last;
   1055                                  Ptr = NextField(Ptr, Separator);
   \   00000310   EC11D4E5           LDRB     R1,[R4, #+492]
   \   00000314   0900A0E1           MOV      R0,R9
   \   00000318   ........           BL       ??NextField
   \   0000031C   0090B0E1           MOVS     R9,R0
   1056                                  if (Ptr && sscanf(Ptr, "%i", &Last) == 1 && Last < 500) {
   \   00000320   FC00000A           BEQ      ??HandleRequest_30
   \   00000324   0C208DE2           ADD      R2,SP,#+12
   \   00000328   0A10A0E1           MOV      R1,R10
   \   0000032C   ........           _BLF     sscanf,??sscanf??rA
   \   00000330   010050E3           CMP      R0,#+1
   \   00000334   F700001A           BNE      ??HandleRequest_30
   \   00000338   0C009DE5           LDR      R0,[SP, #+12]
   \   0000033C   7D0F50E3           CMP      R0,#+500
   \   00000340   F40000AA           BGE      ??HandleRequest_30
   1057                                      bool Status = true;
   1058                                      for (int Index = First; Index <= Last && Status == 1; Index++) {
   \   00000344   04809DE5           LDR      R8,[SP, #+4]
   \   00000348   01A0A0E3           MOV      R10,#+1
   \   0000034C   270000EA           B        ??HandleRequest_31
   \                     ??HandleRequest_5:
   \   00000350   00000000           DC8      "",+0,+0,+0
   \   00000354   25730000           DC8      "%s",+0
   \   00000358   25690000           DC8      "%i",+0
   1059                                          Ptr = NextField(Ptr, Separator);
   1060                                          if (Ptr) {
   1061                                              AnsiString Value = Ptr;
   1062                                              Status = !Value.IsEmpty();
   1063                                              if (Status) {
   1064                                                  int Pos = Value.AnsiPos(AnsiString(Separator));
   1065                                                  if (Pos) {
   1066                                                      Value = Value.SubString(ANSI_STRING_START_INDEX, Pos);
   1067                                                  }
   1068                                                  PROXRefObject *TmpPtr = PROXRefObject::GetANProObject(Index, C_PRO_TANK);
   1069                                                  if (TmpPtr) {
   1070                                                      int IStatus = E_NO_ERR;
   1071                                                      switch (Key) {
   1072                                                      case SVT_LC_DENSITY:
   1073                                                      case SVT_LC_VOLUME :
   1074                                                      case SVT_LC_WEIGHT :
   1075                                                          IStatus = TmpPtr->PutValue(Key, 0, Value, false);
   1076                                                          break;
   1077                                                      case SVT_REF_DNS1 :
   1078                                                      case SVT_REF_DNS2 :
   1079                                                      case SVT_REF_TMP1 :
   1080                                                      case SVT_REF_TMP2 :
   1081                                                      case SVT_COEFF    :
   1082                                                          IStatus = TmpPtr->PutValue(Key, 0, Value, false);
   1083                                                          break;
   1084                                                      }
   1085                                                  } else {
   1086                                                      RxMsg = (AnsiString)"Tank unknown " + (AnsiString)Index;
   1087                                                  }
   1088                                              } else {
   1089                                                  RxMsg = (AnsiString)"Wrong format before tank " + (AnsiString)Index;
   1090                                              }
   1091                                          } else {
   1092                                              RxMsg = (AnsiString)"Unexpected end of data before tank " + (AnsiString)Index;
   \                     ??HandleRequest_32:
   \   0000035C   0810A0E1           MOV      R1,R8
   \   00000360   84008DE2           ADD      R0,SP,#+132
   \   00000364   ........           _BLF     ??AnsiString_2,??AnsiString??rA_2
   \   00000368   00B0A0E1           MOV      R11,R0
   \   0000036C   5C1086E2           ADD      R1,R6,#+92
   \   00000370   4C008DE2           ADD      R0,SP,#+76
   \   00000374   ........           _BLF     ??AnsiString_1,??AnsiString??rA_1
   \   00000378   0B20A0E1           MOV      R2,R11
   \   0000037C   0010A0E1           MOV      R1,R0
   \   00000380   14008DE2           ADD      R0,SP,#+20
   \   00000384   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000388   14108DE2           ADD      R1,SP,#+20
   \   0000038C   68008DE2           ADD      R0,SP,#+104
   \   00000390   ........           _BLF     ??AnsiString_3,??AnsiString??rA_3
   \   00000394   80169FE5           LDR      R1,??HandleRequest_9+0x24  ;; ??npos
   \   00000398   0020A0E3           MOV      R2,#+0
   \   0000039C   003091E5           LDR      R3,[R1, #+0]
   \   000003A0   0010A0E1           MOV      R1,R0
   \   000003A4   D8008DE2           ADD      R0,SP,#+216
   \   000003A8   ........           _BLF     ??assign,??assign??rA
   \   000003AC   0020A0E3           MOV      R2,#+0
   \   000003B0   0110A0E3           MOV      R1,#+1
   \   000003B4   68008DE2           ADD      R0,SP,#+104
   \   000003B8   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000003BC   0020A0E3           MOV      R2,#+0
   \   000003C0   0110A0E3           MOV      R1,#+1
   \   000003C4   14008DE2           ADD      R0,SP,#+20
   \   000003C8   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000003CC   0020A0E3           MOV      R2,#+0
   \   000003D0   0110A0E3           MOV      R1,#+1
   \   000003D4   84008DE2           ADD      R0,SP,#+132
   \   000003D8   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000003DC   0020A0E3           MOV      R2,#+0
   \   000003E0   0110A0E3           MOV      R1,#+1
   \   000003E4   4C008DE2           ADD      R0,SP,#+76
   \                     ??HandleRequest_33:
   \   000003E8   ........           _BLF     ??_Tidy,??_Tidy??rA
   1093                                          }
   \   000003EC   018088E2           ADD      R8,R8,#+1
   \                     ??HandleRequest_31:
   \   000003F0   0C009DE5           LDR      R0,[SP, #+12]
   \   000003F4   080050E1           CMP      R0,R8
   \   000003F8   BB0000BA           BLT      ??HandleRequest_34
   \   000003FC   FFA01AE2           ANDS     R10,R10,#0xFF
   \   00000400   B900000A           BEQ      ??HandleRequest_34
   \   00000404   EC11D4E5           LDRB     R1,[R4, #+492]
   \   00000408   0900A0E1           MOV      R0,R9
   \   0000040C   ........           BL       ??NextField
   \   00000410   0090B0E1           MOVS     R9,R0
   \   00000414   D0FFFF0A           BEQ      ??HandleRequest_32
   \   00000418   0910A0E1           MOV      R1,R9
   \   0000041C   A0008DE2           ADD      R0,SP,#+160
   \   00000420   ........           _BLF     ??AnsiString_1,??AnsiString??rA_1
   \   00000424   A0008DE2           ADD      R0,SP,#+160
   \   00000428   ........           _BLF     ??IsEmpty,??IsEmpty??rA
   \   0000042C   010000E2           AND      R0,R0,#0x1
   \   00000430   01A030E2           EORS     R10,R0,#0x1
   \   00000434   8400000A           BEQ      ??HandleRequest_35
   \   00000438   EC11D4E5           LDRB     R1,[R4, #+492]
   \   0000043C   84008DE2           ADD      R0,SP,#+132
   \   00000440   ........           _BLF     ??AnsiString_4,??AnsiString??rA_4
   \   00000444   0010A0E1           MOV      R1,R0
   \   00000448   A0008DE2           ADD      R0,SP,#+160
   \   0000044C   ........           _BLF     ??AnsiPos,??AnsiPos??rA
   \   00000450   00B0A0E1           MOV      R11,R0
   \   00000454   0020A0E3           MOV      R2,#+0
   \   00000458   0110A0E3           MOV      R1,#+1
   \   0000045C   84008DE2           ADD      R0,SP,#+132
   \   00000460   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000464   00005BE3           CMP      R11,#+0
   \   00000468   0E00000A           BEQ      ??HandleRequest_36
   \   0000046C   0B30A0E1           MOV      R3,R11
   \   00000470   0020A0E3           MOV      R2,#+0
   \   00000474   14108DE2           ADD      R1,SP,#+20
   \   00000478   A0008DE2           ADD      R0,SP,#+160
   \   0000047C   ........           _BLF     ??SubString,??SubString??rA
   \   00000480   94059FE5           LDR      R0,??HandleRequest_9+0x24  ;; ??npos
   \   00000484   0020A0E3           MOV      R2,#+0
   \   00000488   003090E5           LDR      R3,[R0, #+0]
   \   0000048C   14108DE2           ADD      R1,SP,#+20
   \   00000490   A0008DE2           ADD      R0,SP,#+160
   \   00000494   ........           _BLF     ??assign,??assign??rA
   \   00000498   0020A0E3           MOV      R2,#+0
   \   0000049C   0110A0E3           MOV      R1,#+1
   \   000004A0   14008DE2           ADD      R0,SP,#+20
   \   000004A4   ........           _BLF     ??_Tidy,??_Tidy??rA
   \                     ??HandleRequest_36:
   \   000004A8   1A10A0E3           MOV      R1,#+26
   \   000004AC   401E81E3           ORR      R1,R1,#0x400
   \   000004B0   0800A0E1           MOV      R0,R8
   \   000004B4   ........           _BLF     ??GetANProObject,??GetANProObject??rA
   \   000004B8   00B0B0E1           MOVS     R11,R0
   \   000004BC   4200000A           BEQ      ??HandleRequest_37
   \   000004C0   A4009BE5           LDR      R0,[R11, #+164]
   \   000004C4   0920A0E3           MOV      R2,#+9
   \   000004C8   402E82E3           ORR      R2,R2,#0x400
   \   000004CC   020057E1           CMP      R7,R2
   \   000004D0   01208212           ADDNE    R2,R2,#+1
   \   000004D4   02005711           CMPNE    R7,R2
   \   000004D8   410E5713           CMPNE    R7,#+1040
   \   000004DC   0C00000A           BEQ      ??HandleRequest_38
   \   000004E0   DB20A0E3           MOV      R2,#+219
   \   000004E4   702E82E3           ORR      R2,R2,#0x700
   \   000004E8   020057E1           CMP      R7,R2
   \   000004EC   01208212           ADDNE    R2,R2,#+1
   \   000004F0   02005711           CMPNE    R7,R2
   \   000004F4   01208213           ORRNE    R2,R2,#0x1
   \   000004F8   02005711           CMPNE    R7,R2
   \   000004FC   01208212           ADDNE    R2,R2,#+1
   \   00000500   02005711           CMPNE    R7,R2
   \   00000504   01208213           ORRNE    R2,R2,#0x1
   \   00000508   02005711           CMPNE    R7,R2
   \   0000050C   1900000A           BEQ      ??HandleRequest_39
   \   00000510   710000EA           B        ??HandleRequest_40
   \                     ??HandleRequest_38:
   \   00000514   300080E2           ADD      R0,R0,#+48
   \   00000518   00008DE5           STR      R0,[SP, #+0]
   \   0000051C   A0108DE2           ADD      R1,SP,#+160
   \   00000520   730F8DE2           ADD      R0,SP,#+460
   \   00000524   400E80E2           ADD      R0,R0,#+1024
   \   00000528   ........           _BLF     ??string,??string??rA
   \   0000052C   0000A0E3           MOV      R0,#+0
   \   00000530   01002DE9           PUSH     {R0}
   \   00000534   01002DE9           PUSH     {R0}
   \   00000538   0B00A0E1           MOV      R0,R11
   \   0000053C   08B09DE5           LDR      R11,[SP, #+8]
   \   00000540   753F8DE2           ADD      R3,SP,#+468
   \   00000544   00B09BE5           LDR      R11,[R11, #+0]
   \   00000548   403E83E2           ADD      R3,R3,#+1024
   \   0000054C   0020A0E3           MOV      R2,#+0
   \   00000550   0710A0E1           MOV      R1,R7
   \   00000554   0FE0A0E1           MOV      LR,PC
   \   00000558   1BFF2FE1           BX       R11
   \   0000055C   0020A0E3           MOV      R2,#+0
   \   00000560   0110A0E3           MOV      R1,#+1
   \   00000564   750F8DE2           ADD      R0,SP,#+468
   \   00000568   400E80E2           ADD      R0,R0,#+1024
   \                     ??HandleRequest_41:
   \   0000056C   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000570   08D08DE2           ADD      SP,SP,#+8
   \   00000574   580000EA           B        ??HandleRequest_40
   \                     ??HandleRequest_39:
   \   00000578   300080E2           ADD      R0,R0,#+48
   \   0000057C   00008DE5           STR      R0,[SP, #+0]
   \   00000580   A0108DE2           ADD      R1,SP,#+160
   \   00000584   7A0F8DE2           ADD      R0,SP,#+488
   \   00000588   400E80E2           ADD      R0,R0,#+1024
   \   0000058C   ........           _BLF     ??string,??string??rA
   \   00000590   0000A0E3           MOV      R0,#+0
   \   00000594   01002DE9           PUSH     {R0}
   \   00000598   01002DE9           PUSH     {R0}
   \   0000059C   0B00A0E1           MOV      R0,R11
   \   000005A0   08B09DE5           LDR      R11,[SP, #+8]
   \   000005A4   5F3E8DE2           ADD      R3,SP,#+1520
   \   000005A8   00B09BE5           LDR      R11,[R11, #+0]
   \   000005AC   0020A0E3           MOV      R2,#+0
   \   000005B0   0710A0E1           MOV      R1,R7
   \   000005B4   0FE0A0E1           MOV      LR,PC
   \   000005B8   1BFF2FE1           BX       R11
   \   000005BC   0020A0E3           MOV      R2,#+0
   \   000005C0   0110A0E3           MOV      R1,#+1
   \   000005C4   5F0E8DE2           ADD      R0,SP,#+1520
   \   000005C8   E7FFFFEA           B        ??HandleRequest_41
   \                     ??HandleRequest_37:
   \   000005CC   0810A0E1           MOV      R1,R8
   \   000005D0   5B0E8DE2           ADD      R0,SP,#+1456
   \   000005D4   ........           _BLF     ??AnsiString_2,??AnsiString??rA_2
   \   000005D8   00B0A0E1           MOV      R11,R0
   \   000005DC   301086E2           ADD      R1,R6,#+48
   \   000005E0   68008DE2           ADD      R0,SP,#+104
   \   000005E4   ........           _BLF     ??AnsiString_1,??AnsiString??rA_1
   \   000005E8   0B20A0E1           MOV      R2,R11
   \   000005EC   0010A0E1           MOV      R1,R0
   \   000005F0   4C008DE2           ADD      R0,SP,#+76
   \   000005F4   ........           _BLF     `??operator+`,`??operator+??rA`
   \   000005F8   4C108DE2           ADD      R1,SP,#+76
   \   000005FC   14008DE2           ADD      R0,SP,#+20
   \   00000600   ........           _BLF     ??AnsiString_3,??AnsiString??rA_3
   \   00000604   10149FE5           LDR      R1,??HandleRequest_9+0x24  ;; ??npos
   \   00000608   0020A0E3           MOV      R2,#+0
   \   0000060C   003091E5           LDR      R3,[R1, #+0]
   \   00000610   0010A0E1           MOV      R1,R0
   \   00000614   D8008DE2           ADD      R0,SP,#+216
   \   00000618   ........           _BLF     ??assign,??assign??rA
   \   0000061C   0020A0E3           MOV      R2,#+0
   \   00000620   0110A0E3           MOV      R1,#+1
   \   00000624   14008DE2           ADD      R0,SP,#+20
   \   00000628   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   0000062C   0020A0E3           MOV      R2,#+0
   \   00000630   0110A0E3           MOV      R1,#+1
   \   00000634   4C008DE2           ADD      R0,SP,#+76
   \   00000638   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   0000063C   0020A0E3           MOV      R2,#+0
   \   00000640   0110A0E3           MOV      R1,#+1
   \   00000644   5B0E8DE2           ADD      R0,SP,#+1456
   \   00000648   1E0000EA           B        ??HandleRequest_42
   \                     ??HandleRequest_35:
   \   0000064C   0810A0E1           MOV      R1,R8
   \   00000650   84008DE2           ADD      R0,SP,#+132
   \   00000654   ........           _BLF     ??AnsiString_2,??AnsiString??rA_2
   \   00000658   00B0A0E1           MOV      R11,R0
   \   0000065C   401086E2           ADD      R1,R6,#+64
   \   00000660   68008DE2           ADD      R0,SP,#+104
   \   00000664   ........           _BLF     ??AnsiString_1,??AnsiString??rA_1
   \   00000668   0B20A0E1           MOV      R2,R11
   \   0000066C   0010A0E1           MOV      R1,R0
   \   00000670   4C008DE2           ADD      R0,SP,#+76
   \   00000674   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000678   4C108DE2           ADD      R1,SP,#+76
   \   0000067C   14008DE2           ADD      R0,SP,#+20
   \   00000680   ........           _BLF     ??AnsiString_3,??AnsiString??rA_3
   \   00000684   0010A0E1           MOV      R1,R0
   \   00000688   8C039FE5           LDR      R0,??HandleRequest_9+0x24  ;; ??npos
   \   0000068C   0020A0E3           MOV      R2,#+0
   \   00000690   003090E5           LDR      R3,[R0, #+0]
   \   00000694   D8008DE2           ADD      R0,SP,#+216
   \   00000698   ........           _BLF     ??assign,??assign??rA
   \   0000069C   0020A0E3           MOV      R2,#+0
   \   000006A0   0110A0E3           MOV      R1,#+1
   \   000006A4   14008DE2           ADD      R0,SP,#+20
   \   000006A8   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000006AC   0020A0E3           MOV      R2,#+0
   \   000006B0   0110A0E3           MOV      R1,#+1
   \   000006B4   4C008DE2           ADD      R0,SP,#+76
   \   000006B8   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000006BC   0020A0E3           MOV      R2,#+0
   \   000006C0   0110A0E3           MOV      R1,#+1
   \   000006C4   84008DE2           ADD      R0,SP,#+132
   \                     ??HandleRequest_42:
   \   000006C8   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000006CC   0020A0E3           MOV      R2,#+0
   \   000006D0   0110A0E3           MOV      R1,#+1
   \   000006D4   68008DE2           ADD      R0,SP,#+104
   \   000006D8   ........           _BLF     ??_Tidy,??_Tidy??rA
   \                     ??HandleRequest_40:
   \   000006DC   0020A0E3           MOV      R2,#+0
   \   000006E0   0110A0E3           MOV      R1,#+1
   \   000006E4   A0008DE2           ADD      R0,SP,#+160
   \   000006E8   3EFFFFEA           B        ??HandleRequest_33
   1094                                      }
   1095                                      SendString(PortPtr, "OK");
   \                     ??HandleRequest_34:
   \   000006EC   C11F8FE2           ADR      R1,??HandleRequest_9  ;; "OK"
   \   000006F0   30008DE2           ADD      R0,SP,#+48
   \   000006F4   ........           _BLF     ??AnsiString_1,??AnsiString??rA_1
   \   000006F8   0020A0E1           MOV      R2,R0
   \   000006FC   0510A0E1           MOV      R1,R5
   \   00000700   0400A0E1           MOV      R0,R4
   \   00000704   ........           BL       ??SendString
   \                     ??HandleRequest_43:
   \   00000708   0020A0E3           MOV      R2,#+0
   \   0000070C   0110A0E3           MOV      R1,#+1
   \   00000710   30008DE2           ADD      R0,SP,#+48
   \   00000714   1C0400EA           B        ??HandleRequest_11
   1096                                  } else {
   1097                                      RxMsg = "Can not understand last index!";
   \                     ??HandleRequest_30:
   \   00000718   801086E2           ADD      R1,R6,#+128
   \                     ??HandleRequest_44:
   \   0000071C   14008DE2           ADD      R0,SP,#+20
   \   00000720   ........           _BLF     ??AnsiString_1,??AnsiString??rA_1
   \   00000724   F0129FE5           LDR      R1,??HandleRequest_9+0x24  ;; ??npos
   \   00000728   0020A0E3           MOV      R2,#+0
   \   0000072C   003091E5           LDR      R3,[R1, #+0]
   \   00000730   0010A0E1           MOV      R1,R0
   \   00000734   D8008DE2           ADD      R0,SP,#+216
   \   00000738   ........           _BLF     ??assign,??assign??rA
   \   0000073C   0020A0E3           MOV      R2,#+0
   \   00000740   0110A0E3           MOV      R1,#+1
   \   00000744   14008DE2           ADD      R0,SP,#+20
   \   00000748   0F0400EA           B        ??HandleRequest_11
   1098                                  }
   1099                              } else {
   1100                                  RxMsg = "Can not understand first index!";
   \                     ??HandleRequest_29:
   \   0000074C   A01086E2           ADD      R1,R6,#+160
   \   00000750   F1FFFFEA           B        ??HandleRequest_44
   1101                              }
   1102                          }
   1103                          break;
   1104                      case ANPRO3_CMD_LEVEL_FC:
   1105                      case ANPRO3_CMD_LEVEL:
   1106                      case ANPRO3_CMD_SOUNDING:
   1107                      case ANPRO3_CMD_ULLAGE_FC:
   1108                      case ANPRO3_CMD_ULLAGE:
   1109                      case ANPRO3_CMD_VOLUME:
   1110                      case ANPRO3_CMD_WEIGHT:
   1111                      case ANPRO3_CMD_DENSITY_OUT:
   1112                      case ANPRO3_CMD_TEMP:
   1113                      case ANPRO3_CMD_VAPOUR:
   1114                      case ANPRO3_CMD_ACT_ALARMS:
   1115                          {
   1116                              AnsiString TxStr;
   \                     ??HandleRequest_45:
   \   00000754   30008DE2           ADD      R0,SP,#+48
   \   00000758   ........           _BLF     ??AnsiString,??AnsiString??rA
   1117                              int        ValKey;
   1118                              switch (VKey) {
   \   0000075C   0A9049E2           SUB      R9,R9,#+10
   \   00000760   190059E3           CMP      R9,#+25
   \   00000764   BC00008A           BHI      ??HandleRequest_46
   \   00000768   010F8FE2           ADR      R0,??HandleRequest_2
   \   0000076C   0900D0E7           LDRB     R0,[R0, R9]
   \   00000770   00F18FE0           ADD      PC,PC,R0, LSL #+2
   \                     ??HandleRequest_2:
   \   00000774   75B90617           DC8      +117,+185,+6,+23
   \   00000778   36475765           DC8      +54,+71,+87,+101
   \   0000077C   B98492AA           DC8      +185,+132,+146,+170
   \   00000780   B9B9B9B9           DC8      +185,+185,+185,+185
   \   00000784   B9B9B9B9           DC8      +185,+185,+185,+185
   \   00000788   B9B9B9B9           DC8      +185,+185,+185,+185
   \   0000078C   B9260000           DC8      +185,+38,+0,+0
   1119                              case ANPRO3_CMD_LEVEL_FC:
   1120                                  ValKey  = SVT_LEVEL_FC;
   1121                                  TxStr   = "TOLF";
   \                     ??HandleRequest_47:
   \   00000790   C01086E2           ADD      R1,R6,#+192
   \   00000794   810F8DE2           ADD      R0,SP,#+516
   \   00000798   400E80E2           ADD      R0,R0,#+1024
   \   0000079C   ........           _BLF     ??AnsiString_1,??AnsiString??rA_1
   \   000007A0   74129FE5           LDR      R1,??HandleRequest_9+0x24  ;; ??npos
   \   000007A4   1270A0E3           MOV      R7,#+18
   \   000007A8   003091E5           LDR      R3,[R1, #+0]
   \   000007AC   407E87E3           ORR      R7,R7,#0x400
   \   000007B0   0020A0E3           MOV      R2,#+0
   \   000007B4   0010A0E1           MOV      R1,R0
   \   000007B8   30008DE2           ADD      R0,SP,#+48
   \   000007BC   ........           _BLF     ??assign,??assign??rA
   \   000007C0   0020A0E3           MOV      R2,#+0
   \   000007C4   0110A0E3           MOV      R1,#+1
   \   000007C8   810F8DE2           ADD      R0,SP,#+516
   \                     ??HandleRequest_48:
   \   000007CC   400E80E2           ADD      R0,R0,#+1024
   \   000007D0   A00000EA           B        ??HandleRequest_49
   1122                                  break;
   1123                              case ANPRO3_CMD_LEVEL:
   1124                                  ValKey  = SVT_LEVEL_REF;
   1125                                  TxStr   = "TOLR";
   \                     ??HandleRequest_50:
   \   000007D4   C81086E2           ADD      R1,R6,#+200
   \   000007D8   620E8DE2           ADD      R0,SP,#+1568
   \   000007DC   ........           _BLF     ??AnsiString_1,??AnsiString??rA_1
   \   000007E0   34129FE5           LDR      R1,??HandleRequest_9+0x24  ;; ??npos
   \   000007E4   1370A0E3           MOV      R7,#+19
   \   000007E8   003091E5           LDR      R3,[R1, #+0]
   \   000007EC   407E87E3           ORR      R7,R7,#0x400
   \   000007F0   0020A0E3           MOV      R2,#+0
   \   000007F4   0010A0E1           MOV      R1,R0
   \   000007F8   30008DE2           ADD      R0,SP,#+48
   \   000007FC   ........           _BLF     ??assign,??assign??rA
   \   00000800   0020A0E3           MOV      R2,#+0
   \   00000804   0110A0E3           MOV      R1,#+1
   \   00000808   620E8DE2           ADD      R0,SP,#+1568
   \   0000080C   910000EA           B        ??HandleRequest_49
   1126                                  break;
   1127                              case ANPRO3_CMD_SOUNDING:
   1128                                  ValKey  = SVT_SOUNDING;
   1129                                  TxStr   = "TOS";
   \                     ??HandleRequest_51:
   \   00000810   791F8FE2           ADR      R1,??HandleRequest_9+0x4  ;; "TOS"
   \   00000814   8F0F8DE2           ADD      R0,SP,#+572
   \   00000818   400E80E2           ADD      R0,R0,#+1024
   \   0000081C   ........           _BLF     ??AnsiString_1,??AnsiString??rA_1
   \   00000820   F4119FE5           LDR      R1,??HandleRequest_9+0x24  ;; ??npos
   \   00000824   0370A0E3           MOV      R7,#+3
   \   00000828   003091E5           LDR      R3,[R1, #+0]
   \   0000082C   407E87E3           ORR      R7,R7,#0x400
   \   00000830   0020A0E3           MOV      R2,#+0
   \   00000834   0010A0E1           MOV      R1,R0
   \   00000838   30008DE2           ADD      R0,SP,#+48
   \   0000083C   ........           _BLF     ??assign,??assign??rA
   \   00000840   0020A0E3           MOV      R2,#+0
   \   00000844   0110A0E3           MOV      R1,#+1
   \   00000848   8F0F8DE2           ADD      R0,SP,#+572
   \   0000084C   DEFFFFEA           B        ??HandleRequest_48
   1130                                  break;
   1131                              case ANPRO3_CMD_ULLAGE_FC:
   1132                                  ValKey  = SVT_ULLAGE_FC;
   1133                                  TxStr   = "TOUF";
   \                     ??HandleRequest_52:
   \   00000850   D01086E2           ADD      R1,R6,#+208
   \   00000854   960F8DE2           ADD      R0,SP,#+600
   \   00000858   400E80E2           ADD      R0,R0,#+1024
   \   0000085C   ........           _BLF     ??AnsiString_1,??AnsiString??rA_1
   \   00000860   B4119FE5           LDR      R1,??HandleRequest_9+0x24  ;; ??npos
   \   00000864   EF70A0E3           MOV      R7,#+239
   \   00000868   003091E5           LDR      R3,[R1, #+0]
   \   0000086C   C07F87E3           ORR      R7,R7,#0x300
   \   00000870   0020A0E3           MOV      R2,#+0
   \   00000874   0010A0E1           MOV      R1,R0
   \   00000878   30008DE2           ADD      R0,SP,#+48
   \   0000087C   ........           _BLF     ??assign,??assign??rA
   \   00000880   0020A0E3           MOV      R2,#+0
   \   00000884   0110A0E3           MOV      R1,#+1
   \   00000888   960F8DE2           ADD      R0,SP,#+600
   \   0000088C   400E80E2           ADD      R0,R0,#+1024
   \   00000890   700000EA           B        ??HandleRequest_49
   1134                                  break;
   1135                              case ANPRO3_CMD_ULLAGE:
   1136                                  ValKey  = SVT_ULLAGE;
   1137                                  TxStr   = "TOUR";
   \                     ??HandleRequest_53:
   \   00000894   D81086E2           ADD      R1,R6,#+216
   \   00000898   9D0F8DE2           ADD      R0,SP,#+628
   \   0000089C   400E80E2           ADD      R0,R0,#+1024
   \   000008A0   ........           _BLF     ??AnsiString_1,??AnsiString??rA_1
   \   000008A4   70119FE5           LDR      R1,??HandleRequest_9+0x24  ;; ??npos
   \   000008A8   EB70A0E3           MOV      R7,#+235
   \   000008AC   003091E5           LDR      R3,[R1, #+0]
   \   000008B0   C07F87E3           ORR      R7,R7,#0x300
   \   000008B4   0020A0E3           MOV      R2,#+0
   \   000008B8   0010A0E1           MOV      R1,R0
   \   000008BC   30008DE2           ADD      R0,SP,#+48
   \   000008C0   ........           _BLF     ??assign,??assign??rA
   \   000008C4   0020A0E3           MOV      R2,#+0
   \   000008C8   0110A0E3           MOV      R1,#+1
   \   000008CC   9D0F8DE2           ADD      R0,SP,#+628
   \   000008D0   BDFFFFEA           B        ??HandleRequest_48
   1138                                  break;
   1139                              case ANPRO3_CMD_VOLUME:
   1140                                  ValKey  = SVT_VOLUME;
   1141                                  TxStr   = "TOVF";
   \                     ??HandleRequest_54:
   \   000008D4   E01086E2           ADD      R1,R6,#+224
   \   000008D8   690E8DE2           ADD      R0,SP,#+1680
   \   000008DC   ........           _BLF     ??AnsiString_1,??AnsiString??rA_1
   \   000008E0   34119FE5           LDR      R1,??HandleRequest_9+0x24  ;; ??npos
   \   000008E4   FF7FA0E3           MOV      R7,#+1020
   \   000008E8   003091E5           LDR      R3,[R1, #+0]
   \   000008EC   0020A0E3           MOV      R2,#+0
   \   000008F0   0010A0E1           MOV      R1,R0
   \   000008F4   30008DE2           ADD      R0,SP,#+48
   \   000008F8   ........           _BLF     ??assign,??assign??rA
   \   000008FC   0020A0E3           MOV      R2,#+0
   \   00000900   0110A0E3           MOV      R1,#+1
   \   00000904   690E8DE2           ADD      R0,SP,#+1680
   \   00000908   520000EA           B        ??HandleRequest_49
   1142                                  break;
   1143                              case ANPRO3_CMD_WEIGHT:
   1144                                  ValKey  = SVT_WEIGHT;
   1145                                  TxStr   = "TOW";
   \                     ??HandleRequest_55:
   \   0000090C   3B1F8FE2           ADR      R1,??HandleRequest_9+0x8  ;; "TOW"
   \   00000910   AB0F8DE2           ADD      R0,SP,#+684
   \   00000914   400E80E2           ADD      R0,R0,#+1024
   \   00000918   ........           _BLF     ??AnsiString_1,??AnsiString??rA_1
   \   0000091C   F8109FE5           LDR      R1,??HandleRequest_9+0x24  ;; ??npos
   \   00000920   FD70A0E3           MOV      R7,#+253
   \   00000924   003091E5           LDR      R3,[R1, #+0]
   \   00000928   C07F87E3           ORR      R7,R7,#0x300
   \   0000092C   0020A0E3           MOV      R2,#+0
   \   00000930   0010A0E1           MOV      R1,R0
   \   00000934   30008DE2           ADD      R0,SP,#+48
   \   00000938   ........           _BLF     ??assign,??assign??rA
   \   0000093C   0020A0E3           MOV      R2,#+0
   \   00000940   0110A0E3           MOV      R1,#+1
   \   00000944   AB0F8DE2           ADD      R0,SP,#+684
   \   00000948   9FFFFFEA           B        ??HandleRequest_48
   1146                                  break;
   1147                              case ANPRO3_CMD_DENSITY_OUT:
   1148                                  ValKey  = SVT_DENSITY;
   1149                                  TxStr   = "TOD";
   \                     ??HandleRequest_56:
   \   0000094C   2C1F8FE2           ADR      R1,??HandleRequest_9+0xC  ;; "TOD"
   \   00000950   F4008DE2           ADD      R0,SP,#+244
   \   00000954   ........           _BLF     ??AnsiString_1,??AnsiString??rA_1
   \   00000958   BC109FE5           LDR      R1,??HandleRequest_9+0x24  ;; ??npos
   \   0000095C   EE70A0E3           MOV      R7,#+238
   \   00000960   003091E5           LDR      R3,[R1, #+0]
   \   00000964   C07F87E3           ORR      R7,R7,#0x300
   \   00000968   0020A0E3           MOV      R2,#+0
   \   0000096C   0010A0E1           MOV      R1,R0
   \   00000970   30008DE2           ADD      R0,SP,#+48
   \   00000974   ........           _BLF     ??assign,??assign??rA
   \   00000978   0020A0E3           MOV      R2,#+0
   \   0000097C   0110A0E3           MOV      R1,#+1
   \   00000980   F4008DE2           ADD      R0,SP,#+244
   \   00000984   330000EA           B        ??HandleRequest_49
   1150                                  break;
   1151                              case ANPRO3_CMD_TEMP:
   1152                                  ValKey  = SVT_TEMP;
   1153                                  TxStr   = "TOT";
   \                     ??HandleRequest_57:
   \   00000988   1E1F8FE2           ADR      R1,??HandleRequest_9+0x10  ;; "TOT"
   \   0000098C   440F8DE2           ADD      R0,SP,#+272
   \   00000990   ........           _BLF     ??AnsiString_1,??AnsiString??rA_1
   \   00000994   80109FE5           LDR      R1,??HandleRequest_9+0x24  ;; ??npos
   \   00000998   FB7FA0E3           MOV      R7,#+1004
   \   0000099C   003091E5           LDR      R3,[R1, #+0]
   \   000009A0   0020A0E3           MOV      R2,#+0
   \   000009A4   0010A0E1           MOV      R1,R0
   \   000009A8   30008DE2           ADD      R0,SP,#+48
   \   000009AC   ........           _BLF     ??assign,??assign??rA
   \   000009B0   0020A0E3           MOV      R2,#+0
   \   000009B4   0110A0E3           MOV      R1,#+1
   \   000009B8   440F8DE2           ADD      R0,SP,#+272
   \   000009BC   250000EA           B        ??HandleRequest_49
   1154                                  break;
   1155                              case ANPRO3_CMD_VAPOUR:
   1156                                  ValKey  = SVT_PRESSURE;
   1157                                  TxStr   = "TOV";
   \                     ??HandleRequest_58:
   \   000009C0   111F8FE2           ADR      R1,??HandleRequest_9+0x14  ;; "TOV"
   \   000009C4   4B0F8DE2           ADD      R0,SP,#+300
   \   000009C8   ........           _BLF     ??AnsiString_1,??AnsiString??rA_1
   \   000009CC   48109FE5           LDR      R1,??HandleRequest_9+0x24  ;; ??npos
   \   000009D0   407EA0E3           MOV      R7,#+1024
   \   000009D4   003091E5           LDR      R3,[R1, #+0]
   \   000009D8   0020A0E3           MOV      R2,#+0
   \   000009DC   0010A0E1           MOV      R1,R0
   \   000009E0   30008DE2           ADD      R0,SP,#+48
   \   000009E4   ........           _BLF     ??assign,??assign??rA
   \   000009E8   0020A0E3           MOV      R2,#+0
   \   000009EC   0110A0E3           MOV      R1,#+1
   \   000009F0   4B0F8DE2           ADD      R0,SP,#+300
   \   000009F4   170000EA           B        ??HandleRequest_49
   \                     ??HandleRequest_9:
   \   000009F8   4F4B0000           DC8      "OK",+0
   \   000009FC   544F5300           DC8      "TOS"
   \   00000A00   544F5700           DC8      "TOW"
   \   00000A04   544F4400           DC8      "TOD"
   \   00000A08   544F5400           DC8      "TOT"
   \   00000A0C   544F5600           DC8      "TOV"
   \   00000A10   ........           DC32     ??TXUSystemData
   \   00000A14   ........           DC32     ??PRODraftSysPtr
   \   00000A18   ........           DC32     `?<Constant {1357, 1362, 1506, 1509, 1511, 1510`
   \   00000A1C   ........           DC32     ??npos
   1158                                  break;
   1159                              case ANPRO3_CMD_ACT_ALARMS:
   1160                                  ValKey  = SVT_AL_ACT_ALARMS;
   1161                                  TxStr   = "TOAL";
   \                     ??HandleRequest_59:
   \   00000A20   E81086E2           ADD      R1,R6,#+232
   \   00000A24   BC008DE2           ADD      R0,SP,#+188
   \   00000A28   ........           _BLF     ??AnsiString_1,??AnsiString??rA_1
   \   00000A2C   ........           LDR      R1,??DataTable46  ;; ??npos
   \   00000A30   2970A0E3           MOV      R7,#+41
   \   00000A34   003091E5           LDR      R3,[R1, #+0]
   \   00000A38   8C7D87E3           ORR      R7,R7,#0x2300
   \   00000A3C   0020A0E3           MOV      R2,#+0
   \   00000A40   0010A0E1           MOV      R1,R0
   \   00000A44   30008DE2           ADD      R0,SP,#+48
   \   00000A48   ........           _BLF     ??assign,??assign??rA
   \   00000A4C   0020A0E3           MOV      R2,#+0
   \   00000A50   0110A0E3           MOV      R1,#+1
   \   00000A54   BC008DE2           ADD      R0,SP,#+188
   \                     ??HandleRequest_49:
   \   00000A58   ........           _BLF     ??_Tidy,??_Tidy??rA
   1162                                  break;
   1163                              default:
   1164                                  break;
   1165                              }
   1166                              char *Ptr  = NextField((char *)&RxBuf[1], Separator);
   \                     ??HandleRequest_46:
   \   00000A5C   EC11D4E5           LDRB     R1,[R4, #+492]
   \   00000A60   61008DE2           ADD      R0,SP,#+97
   \   00000A64   400F80E2           ADD      R0,R0,#+256
   \   00000A68   ........           BL       ??NextField
   \   00000A6C   0080B0E1           MOVS     R8,R0
   1167                              int  First;
   1168                              // Get the first tank
   1169                              if (Ptr && (sscanf(Ptr, "%i", &First) == 1)) {
   \   00000A70   C600000A           BEQ      ??HandleRequest_60
   \   00000A74   10208DE2           ADD      R2,SP,#+16
   \   00000A78   0A10A0E1           MOV      R1,R10
   \   00000A7C   ........           _BLF     sscanf,??sscanf??rA
   \   00000A80   010050E3           CMP      R0,#+1
   \   00000A84   C100001A           BNE      ??HandleRequest_60
   1170                                  // Get the last tank
   1171                                  Ptr = NextField(Ptr, Separator);
   \   00000A88   EC11D4E5           LDRB     R1,[R4, #+492]
   \   00000A8C   0800A0E1           MOV      R0,R8
   \   00000A90   ........           BL       ??NextField
   \   00000A94   0080B0E1           MOVS     R8,R0
   1172                                  int Last;
   1173                                  if (Ptr && sscanf(Ptr, "%i", &Last) == 1) {
   \   00000A98   BA00000A           BEQ      ??HandleRequest_61
   \   00000A9C   08208DE2           ADD      R2,SP,#+8
   \   00000AA0   0A10A0E1           MOV      R1,R10
   \   00000AA4   ........           _BLF     sscanf,??sscanf??rA
   \   00000AA8   010050E3           CMP      R0,#+1
   \   00000AAC   B500001A           BNE      ??HandleRequest_61
   1174                                      TxStr += (AnsiString)Separator + (AnsiString)First + (AnsiString)Separator + (AnsiString)Last;
   \   00000AB0   08109DE5           LDR      R1,[SP, #+8]
   \   00000AB4   440F8DE2           ADD      R0,SP,#+272
   \   00000AB8   ........           _BLF     ??AnsiString_2,??AnsiString??rA_2
   \   00000ABC   EC11D4E5           LDRB     R1,[R4, #+492]
   \   00000AC0   0080A0E1           MOV      R8,R0
   \   00000AC4   4B0F8DE2           ADD      R0,SP,#+300
   \   00000AC8   ........           _BLF     ??AnsiString_4,??AnsiString??rA_4
   \   00000ACC   10109DE5           LDR      R1,[SP, #+16]
   \   00000AD0   0090A0E1           MOV      R9,R0
   \   00000AD4   BC008DE2           ADD      R0,SP,#+188
   \   00000AD8   ........           _BLF     ??AnsiString_2,??AnsiString??rA_2
   \   00000ADC   EC11D4E5           LDRB     R1,[R4, #+492]
   \   00000AE0   00A0A0E1           MOV      R10,R0
   \   00000AE4   68008DE2           ADD      R0,SP,#+104
   \   00000AE8   ........           _BLF     ??AnsiString_4,??AnsiString??rA_4
   \   00000AEC   0A20A0E1           MOV      R2,R10
   \   00000AF0   0010A0E1           MOV      R1,R0
   \   00000AF4   84008DE2           ADD      R0,SP,#+132
   \   00000AF8   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000AFC   0920A0E1           MOV      R2,R9
   \   00000B00   84108DE2           ADD      R1,SP,#+132
   \   00000B04   A0008DE2           ADD      R0,SP,#+160
   \   00000B08   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000B0C   0820A0E1           MOV      R2,R8
   \   00000B10   A0108DE2           ADD      R1,SP,#+160
   \   00000B14   4C008DE2           ADD      R0,SP,#+76
   \   00000B18   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000B1C   ........           LDR      R0,??DataTable46  ;; ??npos
   \   00000B20   0020A0E3           MOV      R2,#+0
   \   00000B24   003090E5           LDR      R3,[R0, #+0]
   \   00000B28   4C108DE2           ADD      R1,SP,#+76
   \   00000B2C   30008DE2           ADD      R0,SP,#+48
   \   00000B30   ........           _BLF     ??append,??append??rA
   \   00000B34   0020A0E3           MOV      R2,#+0
   \   00000B38   0110A0E3           MOV      R1,#+1
   \   00000B3C   4C008DE2           ADD      R0,SP,#+76
   \   00000B40   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000B44   0020A0E3           MOV      R2,#+0
   \   00000B48   0110A0E3           MOV      R1,#+1
   \   00000B4C   440F8DE2           ADD      R0,SP,#+272
   \   00000B50   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000B54   0020A0E3           MOV      R2,#+0
   \   00000B58   0110A0E3           MOV      R1,#+1
   \   00000B5C   A0008DE2           ADD      R0,SP,#+160
   \   00000B60   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000B64   0020A0E3           MOV      R2,#+0
   \   00000B68   0110A0E3           MOV      R1,#+1
   \   00000B6C   4B0F8DE2           ADD      R0,SP,#+300
   \   00000B70   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000B74   0020A0E3           MOV      R2,#+0
   \   00000B78   0110A0E3           MOV      R1,#+1
   \   00000B7C   84008DE2           ADD      R0,SP,#+132
   \   00000B80   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000B84   0020A0E3           MOV      R2,#+0
   \   00000B88   0110A0E3           MOV      R1,#+1
   \   00000B8C   BC008DE2           ADD      R0,SP,#+188
   \   00000B90   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000B94   0020A0E3           MOV      R2,#+0
   \   00000B98   0110A0E3           MOV      R1,#+1
   \   00000B9C   68008DE2           ADD      R0,SP,#+104
   \   00000BA0   ........           _BLF     ??_Tidy,??_Tidy??rA
   1175                                      for (int Index = First; Index <= Last; Index++) {
   \   00000BA4   10809DE5           LDR      R8,[SP, #+16]
   \   00000BA8   090000EA           B        ??HandleRequest_62
   1176                                          PROXRefObject *TmpPtr = PROXRefObject::GetANProObject(Index, C_PRO_TANK);
   1177                                          if (TmpPtr) {
   1178                                              float TmpVal;
   1179                                              int   DecPnt;
   1180                                              int   Unit;
   1181                                              int   Status = TmpPtr->GetValue(ValKey, 0, TmpVal, DecPnt, Unit);
   1182                                              switch (Status) {
   1183                                              case GETVAL_NO_ERR          :
   1184                                                  TxStr.cat_sprintf("%c%.*f", Separator, DecPnt, TmpVal);
   1185                                                  break;
   1186                                              case GETVAL_FLOAT_NOT_LEGAL :
   1187                                                  switch (ValueErrorAction) {
   1188                                                  case SVT_FLAG_MARK_NO_VAL:
   1189                                                      TxStr.cat_sprintf("%c****", Separator);
   1190                                                      break;
   1191                                                  case SVT_FLAG_ONLY_NUMBER:
   1192                                                  default:
   1193                                                      TxStr.cat_sprintf("%c%.*f", Separator, DecPnt, 0.0);
   1194                                                      break;
   1195                                                  }
   1196                                                  break;
   1197                                              case GETVAL_TANK_EMPTY      :
   1198                                                  TxStr.cat_sprintf("%c%.*f", Separator, DecPnt, 0.0);
   1199                                                  break;
   1200                                              default:
   1201                                                  TxStr.cat_sprintf("%c****", Separator);
   1202                                                  break;
   1203                                              }
   1204                                          } else {
   1205                                              TxStr.cat_sprintf("%c****", Separator);
   \                     ??HandleRequest_63:
   \   00000BAC   EC31D4E5           LDRB     R3,[R4, #+492]
   \   00000BB0   F02086E2           ADD      R2,R6,#+240
   \   00000BB4   14108DE2           ADD      R1,SP,#+20
   \   00000BB8   30008DE2           ADD      R0,SP,#+48
   \   00000BBC   ........           _BLF     ??cat_sprintf,??cat_sprintf??rA
   \   00000BC0   0020A0E3           MOV      R2,#+0
   \   00000BC4   0110A0E3           MOV      R1,#+1
   \   00000BC8   14008DE2           ADD      R0,SP,#+20
   \                     ??HandleRequest_64:
   \   00000BCC   ........           _BLF     ??_Tidy,??_Tidy??rA
   1206                                          }
   \                     ??HandleRequest_65:
   \   00000BD0   018088E2           ADD      R8,R8,#+1
   \                     ??HandleRequest_62:
   \   00000BD4   08009DE5           LDR      R0,[SP, #+8]
   \   00000BD8   080050E1           CMP      R0,R8
   \   00000BDC   5E0000BA           BLT      ??HandleRequest_66
   \   00000BE0   1A10A0E3           MOV      R1,#+26
   \   00000BE4   401E81E3           ORR      R1,R1,#0x400
   \   00000BE8   0800A0E1           MOV      R0,R8
   \   00000BEC   ........           _BLF     ??GetANProObject,??GetANProObject??rA
   \   00000BF0   0090B0E1           MOVS     R9,R0
   \   00000BF4   ECFFFF0A           BEQ      ??HandleRequest_63
   \   00000BF8   0C008DE2           ADD      R0,SP,#+12
   \   00000BFC   01002DE9           PUSH     {R0}
   \   00000C00   08008DE2           ADD      R0,SP,#+8
   \   00000C04   01002DE9           PUSH     {R0}
   \   00000C08   0900A0E1           MOV      R0,R9
   \   00000C0C   A49099E5           LDR      R9,[R9, #+164]
   \   00000C10   08308DE2           ADD      R3,SP,#+8
   \   00000C14   249099E5           LDR      R9,[R9, #+36]
   \   00000C18   0020A0E3           MOV      R2,#+0
   \   00000C1C   0710A0E1           MOV      R1,R7
   \   00000C20   0FE0A0E1           MOV      LR,PC
   \   00000C24   19FF2FE1           BX       R9
   \   00000C28   08D08DE2           ADD      SP,SP,#+8
   \   00000C2C   050050E3           CMP      R0,#+5
   \   00000C30   4000008A           BHI      ??HandleRequest_67
   \   00000C34   011F8FE2           ADR      R1,??HandleRequest_3
   \   00000C38   0010D1E7           LDRB     R1,[R1, R0]
   \   00000C3C   01F18FE0           ADD      PC,PC,R1, LSL #+2
   \                     ??HandleRequest_3:
   \   00000C40   013D2F3D           DC8      +1,+61,+47,+61
   \   00000C44   3D130000           DC8      +61,+19,+0,+0
   \                     ??HandleRequest_68:
   \   00000C48   00009DE5           LDR      R0,[SP, #+0]
   \   00000C4C   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   00000C50   03002DE9           PUSH     {R0,R1}
   \   00000C54   0C009DE5           LDR      R0,[SP, #+12]
   \   00000C58   182086E2           ADD      R2,R6,#+24
   \   00000C5C   01002DE9           PUSH     {R0}
   \   00000C60   EC31D4E5           LDRB     R3,[R4, #+492]
   \   00000C64   B51F8DE2           ADD      R1,SP,#+724
   \   00000C68   401E81E2           ADD      R1,R1,#+1024
   \   00000C6C   3C008DE2           ADD      R0,SP,#+60
   \   00000C70   ........           _BLF     ??cat_sprintf,??cat_sprintf??rA
   \   00000C74   0020A0E3           MOV      R2,#+0
   \   00000C78   0110A0E3           MOV      R1,#+1
   \   00000C7C   B50F8DE2           ADD      R0,SP,#+724
   \                     ??HandleRequest_69:
   \   00000C80   400E80E2           ADD      R0,R0,#+1024
   \                     ??HandleRequest_70:
   \   00000C84   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000C88   0CD08DE2           ADD      SP,SP,#+12
   \   00000C8C   CFFFFFEA           B        ??HandleRequest_65
   \                     ??HandleRequest_71:
   \   00000C90   C80194E5           LDR      R0,[R4, #+456]
   \   00000C94   EC31D4E5           LDRB     R3,[R4, #+492]
   \   00000C98   030050E3           CMP      R0,#+3
   \   00000C9C   0900001A           BNE      ??HandleRequest_72
   \   00000CA0   F02086E2           ADD      R2,R6,#+240
   \   00000CA4   C71F8DE2           ADD      R1,SP,#+796
   \   00000CA8   401E81E2           ADD      R1,R1,#+1024
   \   00000CAC   30008DE2           ADD      R0,SP,#+48
   \   00000CB0   ........           _BLF     ??cat_sprintf,??cat_sprintf??rA
   \   00000CB4   0020A0E3           MOV      R2,#+0
   \   00000CB8   0110A0E3           MOV      R1,#+1
   \   00000CBC   C70F8DE2           ADD      R0,SP,#+796
   \   00000CC0   400E80E2           ADD      R0,R0,#+1024
   \   00000CC4   C0FFFFEA           B        ??HandleRequest_64
   \                     ??HandleRequest_72:
   \   00000CC8   0000A0E3           MOV      R0,#+0
   \   00000CCC   0010A0E3           MOV      R1,#+0
   \   00000CD0   03002DE9           PUSH     {R0,R1}
   \   00000CD4   0C009DE5           LDR      R0,[SP, #+12]
   \   00000CD8   182086E2           ADD      R2,R6,#+24
   \   00000CDC   01002DE9           PUSH     {R0}
   \   00000CE0   D11F8DE2           ADD      R1,SP,#+836
   \   00000CE4   401E81E2           ADD      R1,R1,#+1024
   \   00000CE8   3C008DE2           ADD      R0,SP,#+60
   \   00000CEC   ........           _BLF     ??cat_sprintf,??cat_sprintf??rA
   \   00000CF0   0020A0E3           MOV      R2,#+0
   \   00000CF4   0110A0E3           MOV      R1,#+1
   \   00000CF8   D10F8DE2           ADD      R0,SP,#+836
   \   00000CFC   DFFFFFEA           B        ??HandleRequest_69
   \                     ??HandleRequest_73:
   \   00000D00   0000A0E3           MOV      R0,#+0
   \   00000D04   0010A0E3           MOV      R1,#+0
   \   00000D08   03002DE9           PUSH     {R0,R1}
   \   00000D0C   0C009DE5           LDR      R0,[SP, #+12]
   \   00000D10   182086E2           ADD      R2,R6,#+24
   \   00000D14   01002DE9           PUSH     {R0}
   \   00000D18   EC31D4E5           LDRB     R3,[R4, #+492]
   \   00000D1C   6F1E8DE2           ADD      R1,SP,#+1776
   \   00000D20   3C008DE2           ADD      R0,SP,#+60
   \   00000D24   ........           _BLF     ??cat_sprintf,??cat_sprintf??rA
   \   00000D28   0020A0E3           MOV      R2,#+0
   \   00000D2C   0110A0E3           MOV      R1,#+1
   \   00000D30   6F0E8DE2           ADD      R0,SP,#+1776
   \   00000D34   D2FFFFEA           B        ??HandleRequest_70
   \                     ??HandleRequest_67:
   \   00000D38   EC31D4E5           LDRB     R3,[R4, #+492]
   \   00000D3C   F02086E2           ADD      R2,R6,#+240
   \   00000D40   701E8DE2           ADD      R1,SP,#+1792
   \   00000D44   30008DE2           ADD      R0,SP,#+48
   \   00000D48   ........           _BLF     ??cat_sprintf,??cat_sprintf??rA
   \   00000D4C   0020A0E3           MOV      R2,#+0
   \   00000D50   0110A0E3           MOV      R1,#+1
   \   00000D54   700E8DE2           ADD      R0,SP,#+1792
   \   00000D58   9BFFFFEA           B        ??HandleRequest_64
   1207                                      } // End for
   1208                                      SendString(PortPtr, TxStr);
   \                     ??HandleRequest_66:
   \   00000D5C   30108DE2           ADD      R1,SP,#+48
   \   00000D60   F4008DE2           ADD      R0,SP,#+244
   \   00000D64   ........           _BLF     ??string,??string??rA
   \   00000D68   F4208DE2           ADD      R2,SP,#+244
   \   00000D6C   0510A0E1           MOV      R1,R5
   \   00000D70   0400A0E1           MOV      R0,R4
   \   00000D74   ........           BL       ??SendString
   \   00000D78   0020A0E3           MOV      R2,#+0
   \   00000D7C   0110A0E3           MOV      R1,#+1
   \   00000D80   F4008DE2           ADD      R0,SP,#+244
   \   00000D84   0D0000EA           B        ??HandleRequest_74
   1209                                  } else {
   1210                                      RxMsg = "Can not understand last index!";
   \                     ??HandleRequest_61:
   \   00000D88   801086E2           ADD      R1,R6,#+128
   \   00000D8C   000000EA           B        ??HandleRequest_75
   1211                                  }
   1212                              } else {
   1213                                  RxMsg = "Can not understand first index!";
   \                     ??HandleRequest_60:
   \   00000D90   A01086E2           ADD      R1,R6,#+160
   \                     ??HandleRequest_75:
   \   00000D94   14008DE2           ADD      R0,SP,#+20
   \   00000D98   ........           _BLF     ??AnsiString_1,??AnsiString??rA_1
   \   00000D9C   ........           LDR      R1,??DataTable46  ;; ??npos
   \   00000DA0   0020A0E3           MOV      R2,#+0
   \   00000DA4   003091E5           LDR      R3,[R1, #+0]
   \   00000DA8   0010A0E1           MOV      R1,R0
   \   00000DAC   D8008DE2           ADD      R0,SP,#+216
   \   00000DB0   ........           _BLF     ??assign,??assign??rA
   \   00000DB4   0020A0E3           MOV      R2,#+0
   \   00000DB8   0110A0E3           MOV      R1,#+1
   \   00000DBC   14008DE2           ADD      R0,SP,#+20
   \                     ??HandleRequest_74:
   \   00000DC0   ........           _BLF     ??_Tidy,??_Tidy??rA
   1214                              }
   1215                          }
   \   00000DC4   4FFEFFEA           B        ??HandleRequest_43
   1216                          break;
   1217                      case ANPRO3_CMD_LPRESS:
   1218                          {
   1219                              AnsiString TxStr;
   \                     ??HandleRequest_76:
   \   00000DC8   BC008DE2           ADD      R0,SP,#+188
   \   00000DCC   ........           _BLF     ??AnsiString,??AnsiString??rA
   1220                              int        ValKey;
   1221                              switch (VKey) {
   \   00000DD0   1E0059E3           CMP      R9,#+30
   \   00000DD4   0F00001A           BNE      ??HandleRequest_77
   1222                              case ANPRO3_CMD_LPRESS:
   1223                                  ValKey = SVT_PRESSURE;
   1224                                  TxStr = "LO";
   \   00000DD8   E81F8FE2           ADR      R1,??HandleRequest_78  ;; "LO"
   \   00000DDC   D50F8DE2           ADD      R0,SP,#+852
   \   00000DE0   400E80E2           ADD      R0,R0,#+1024
   \   00000DE4   ........           _BLF     ??AnsiString_1,??AnsiString??rA_1
   \   00000DE8   ........           LDR      R1,??DataTable46  ;; ??npos
   \   00000DEC   408EA0E3           MOV      R8,#+1024
   \   00000DF0   003091E5           LDR      R3,[R1, #+0]
   \   00000DF4   0020A0E3           MOV      R2,#+0
   \   00000DF8   0010A0E1           MOV      R1,R0
   \   00000DFC   BC008DE2           ADD      R0,SP,#+188
   \   00000E00   ........           _BLF     ??assign,??assign??rA
   \   00000E04   0020A0E3           MOV      R2,#+0
   \   00000E08   0110A0E3           MOV      R1,#+1
   \   00000E0C   D50F8DE2           ADD      R0,SP,#+852
   \   00000E10   400E80E2           ADD      R0,R0,#+1024
   \   00000E14   ........           _BLF     ??_Tidy,??_Tidy??rA
   1225                                  break;
   1226                              default:
   1227                                  break;
   1228                              }
   1229                              char *Ptr  = NextField((char *)&RxBuf[1], Separator);
   \                     ??HandleRequest_77:
   \   00000E18   EC11D4E5           LDRB     R1,[R4, #+492]
   \   00000E1C   61008DE2           ADD      R0,SP,#+97
   \   00000E20   400F80E2           ADD      R0,R0,#+256
   \   00000E24   ........           BL       ??NextField
   \   00000E28   0070B0E1           MOVS     R7,R0
   1230                              int  First;
   1231                              // Get the first line pressure
   1232                              if (Ptr && (sscanf(Ptr, "%i", &First) == 1)) {
   \   00000E2C   C200000A           BEQ      ??HandleRequest_79
   \   00000E30   08208DE2           ADD      R2,SP,#+8
   \   00000E34   0A10A0E1           MOV      R1,R10
   \   00000E38   ........           _BLF     sscanf,??sscanf??rA
   \   00000E3C   010050E3           CMP      R0,#+1
   \   00000E40   BD00001A           BNE      ??HandleRequest_79
   1233                                  // Get the last line pressure
   1234                                  Ptr = NextField(Ptr, Separator);
   \   00000E44   EC11D4E5           LDRB     R1,[R4, #+492]
   \   00000E48   0700A0E1           MOV      R0,R7
   \   00000E4C   ........           BL       ??NextField
   \   00000E50   0070B0E1           MOVS     R7,R0
   1235                                  int Last;
   1236                                  if (Ptr && (sscanf(Ptr, "%i", &Last) == 1)) {
   \   00000E54   B600000A           BEQ      ??HandleRequest_80
   \   00000E58   10208DE2           ADD      R2,SP,#+16
   \   00000E5C   0A10A0E1           MOV      R1,R10
   \   00000E60   ........           _BLF     sscanf,??sscanf??rA
   \   00000E64   010050E3           CMP      R0,#+1
   \   00000E68   B100001A           BNE      ??HandleRequest_80
   1237                                      TxStr += (AnsiString)Separator + (AnsiString)First + (AnsiString)Separator + (AnsiString)Last;
   \   00000E6C   10109DE5           LDR      R1,[SP, #+16]
   \   00000E70   440F8DE2           ADD      R0,SP,#+272
   \   00000E74   ........           _BLF     ??AnsiString_2,??AnsiString??rA_2
   \   00000E78   EC11D4E5           LDRB     R1,[R4, #+492]
   \   00000E7C   0070A0E1           MOV      R7,R0
   \   00000E80   F4008DE2           ADD      R0,SP,#+244
   \   00000E84   ........           _BLF     ??AnsiString_4,??AnsiString??rA_4
   \   00000E88   08109DE5           LDR      R1,[SP, #+8]
   \   00000E8C   0090A0E1           MOV      R9,R0
   \   00000E90   A0008DE2           ADD      R0,SP,#+160
   \   00000E94   ........           _BLF     ??AnsiString_2,??AnsiString??rA_2
   \   00000E98   EC11D4E5           LDRB     R1,[R4, #+492]
   \   00000E9C   00A0A0E1           MOV      R10,R0
   \   00000EA0   84008DE2           ADD      R0,SP,#+132
   \   00000EA4   ........           _BLF     ??AnsiString_4,??AnsiString??rA_4
   \   00000EA8   0A20A0E1           MOV      R2,R10
   \   00000EAC   0010A0E1           MOV      R1,R0
   \   00000EB0   68008DE2           ADD      R0,SP,#+104
   \   00000EB4   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000EB8   0920A0E1           MOV      R2,R9
   \   00000EBC   68108DE2           ADD      R1,SP,#+104
   \   00000EC0   4C008DE2           ADD      R0,SP,#+76
   \   00000EC4   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000EC8   0720A0E1           MOV      R2,R7
   \   00000ECC   4C108DE2           ADD      R1,SP,#+76
   \   00000ED0   30008DE2           ADD      R0,SP,#+48
   \   00000ED4   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000ED8   ........           LDR      R0,??DataTable46  ;; ??npos
   \   00000EDC   0020A0E3           MOV      R2,#+0
   \   00000EE0   003090E5           LDR      R3,[R0, #+0]
   \   00000EE4   30108DE2           ADD      R1,SP,#+48
   \   00000EE8   BC008DE2           ADD      R0,SP,#+188
   \   00000EEC   ........           _BLF     ??append,??append??rA
   \   00000EF0   0020A0E3           MOV      R2,#+0
   \   00000EF4   0110A0E3           MOV      R1,#+1
   \   00000EF8   30008DE2           ADD      R0,SP,#+48
   \   00000EFC   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000F00   0020A0E3           MOV      R2,#+0
   \   00000F04   0110A0E3           MOV      R1,#+1
   \   00000F08   440F8DE2           ADD      R0,SP,#+272
   \   00000F0C   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000F10   0020A0E3           MOV      R2,#+0
   \   00000F14   0110A0E3           MOV      R1,#+1
   \   00000F18   4C008DE2           ADD      R0,SP,#+76
   \   00000F1C   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000F20   0020A0E3           MOV      R2,#+0
   \   00000F24   0110A0E3           MOV      R1,#+1
   \   00000F28   F4008DE2           ADD      R0,SP,#+244
   \   00000F2C   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000F30   0020A0E3           MOV      R2,#+0
   \   00000F34   0110A0E3           MOV      R1,#+1
   \   00000F38   68008DE2           ADD      R0,SP,#+104
   \   00000F3C   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000F40   0020A0E3           MOV      R2,#+0
   \   00000F44   0110A0E3           MOV      R1,#+1
   \   00000F48   A0008DE2           ADD      R0,SP,#+160
   \   00000F4C   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000F50   0020A0E3           MOV      R2,#+0
   \   00000F54   0110A0E3           MOV      R1,#+1
   \   00000F58   84008DE2           ADD      R0,SP,#+132
   \   00000F5C   ........           _BLF     ??_Tidy,??_Tidy??rA
   1238                                      for (int Index = First; Index <= Last; Index++) {
   \   00000F60   08709DE5           LDR      R7,[SP, #+8]
   \   00000F64   090000EA           B        ??HandleRequest_81
   1239                                          PROXRefObject *TmpPtr = PROXRefObject::GetANProObject(Index, C_PRO_LINEPRESS);
   1240                                          if (TmpPtr) {
   1241                                              float TmpVal;
   1242                                              int   DecPnt;
   1243                                              int   Unit;
   1244                                              int   Status = TmpPtr->GetValue(ValKey, 0, TmpVal, DecPnt, Unit);
   1245                                              switch (Status) {
   1246                                              case GETVAL_NO_ERR          :
   1247                                                  switch (ValKey) {
   1248                                                  case SVT_PRESSURE:
   1249                                                      TmpVal *= MH2O_TO_BAR;
   1250                                                      DecPnt  = 1;
   1251                                                      break;
   1252                                                  default:
   1253                                                      break;
   1254                                                  }
   1255                                                  TxStr.cat_sprintf("%c%.*f", Separator, DecPnt, TmpVal);
   1256                                                  break;
   1257                                              case GETVAL_FLOAT_NOT_LEGAL :
   1258                                                  switch (ValueErrorAction) {
   1259                                                  case SVT_FLAG_MARK_NO_VAL:
   1260                                                      TxStr.cat_sprintf("%c****", Separator);
   1261                                                      break;
   1262                                                  case SVT_FLAG_ONLY_NUMBER:
   1263                                                  default:
   1264                                                      TxStr.cat_sprintf("%c%.*f", Separator, DecPnt, 0.0);
   1265                                                      break;
   1266                                                  }
   1267                                                  break;
   1268                                              default:
   1269                                                  TxStr.cat_sprintf("%c****", Separator);
   1270                                                  break;
   1271                                              }   // Switch
   1272                                          } else { // If tmpPtr
   1273                                              TxStr.cat_sprintf("%c****", Separator);
   \                     ??HandleRequest_82:
   \   00000F68   EC31D4E5           LDRB     R3,[R4, #+492]
   \   00000F6C   F02086E2           ADD      R2,R6,#+240
   \   00000F70   14108DE2           ADD      R1,SP,#+20
   \   00000F74   BC008DE2           ADD      R0,SP,#+188
   \   00000F78   ........           _BLF     ??cat_sprintf,??cat_sprintf??rA
   \   00000F7C   0020A0E3           MOV      R2,#+0
   \   00000F80   0110A0E3           MOV      R1,#+1
   \   00000F84   14008DE2           ADD      R0,SP,#+20
   \                     ??HandleRequest_83:
   \   00000F88   ........           _BLF     ??_Tidy,??_Tidy??rA
   1274                                          }
   \                     ??HandleRequest_84:
   \   00000F8C   017087E2           ADD      R7,R7,#+1
   \                     ??HandleRequest_81:
   \   00000F90   10009DE5           LDR      R0,[SP, #+16]
   \   00000F94   070050E1           CMP      R0,R7
   \   00000F98   5A0000BA           BLT      ??HandleRequest_85
   \   00000F9C   461EA0E3           MOV      R1,#+1120
   \   00000FA0   0700A0E1           MOV      R0,R7
   \   00000FA4   ........           _BLF     ??GetANProObject,??GetANProObject??rA
   \   00000FA8   0090B0E1           MOVS     R9,R0
   \   00000FAC   EDFFFF0A           BEQ      ??HandleRequest_82
   \   00000FB0   0C008DE2           ADD      R0,SP,#+12
   \   00000FB4   01002DE9           PUSH     {R0}
   \   00000FB8   08008DE2           ADD      R0,SP,#+8
   \   00000FBC   01002DE9           PUSH     {R0}
   \   00000FC0   0900A0E1           MOV      R0,R9
   \   00000FC4   A49099E5           LDR      R9,[R9, #+164]
   \   00000FC8   08308DE2           ADD      R3,SP,#+8
   \   00000FCC   249099E5           LDR      R9,[R9, #+36]
   \   00000FD0   0020A0E3           MOV      R2,#+0
   \   00000FD4   0810A0E1           MOV      R1,R8
   \   00000FD8   0FE0A0E1           MOV      LR,PC
   \   00000FDC   19FF2FE1           BX       R9
   \   00000FE0   08D08DE2           ADD      SP,SP,#+8
   \   00000FE4   000050E3           CMP      R0,#+0
   \   00000FE8   0200000A           BEQ      ??HandleRequest_86
   \   00000FEC   050050E2           SUBS     R0,R0,#+5
   \   00000FF0   1F00000A           BEQ      ??HandleRequest_87
   \   00000FF4   390000EA           B        ??HandleRequest_88
   \                     ??HandleRequest_86:
   \   00000FF8   400E58E3           CMP      R8,#+1024
   \   00000FFC   0A00001A           BNE      ??HandleRequest_89
   \   00001000   00009DE5           LDR      R0,[SP, #+0]
   \   00001004   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   00001008   0020A0E1           MOV      R2,R0
   \   0000100C   98079FE5           LDR      R0,??HandleRequest_90  ;; 0xffffffffda554b8c
   \   00001010   0130A0E1           MOV      R3,R1
   \   00001014   94179FE5           LDR      R1,??HandleRequest_90+0x4  ;; 0x3fb91ae2
   \   00001018   ........           _BLF     __dMul,??__dMul??rA
   \   0000101C   ........           _BLF     __doubleToFloat,??__doubleToFloat??rA
   \   00001020   00008DE5           STR      R0,[SP, #+0]
   \   00001024   0110A0E3           MOV      R1,#+1
   \   00001028   04108DE5           STR      R1,[SP, #+4]
   \                     ??HandleRequest_89:
   \   0000102C   00009DE5           LDR      R0,[SP, #+0]
   \   00001030   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   00001034   03002DE9           PUSH     {R0,R1}
   \   00001038   0C009DE5           LDR      R0,[SP, #+12]
   \   0000103C   182086E2           ADD      R2,R6,#+24
   \   00001040   01002DE9           PUSH     {R0}
   \   00001044   EC31D4E5           LDRB     R3,[R4, #+492]
   \   00001048   DF1F8DE2           ADD      R1,SP,#+892
   \   0000104C   401E81E2           ADD      R1,R1,#+1024
   \   00001050   C8008DE2           ADD      R0,SP,#+200
   \   00001054   ........           _BLF     ??cat_sprintf,??cat_sprintf??rA
   \   00001058   0020A0E3           MOV      R2,#+0
   \   0000105C   0110A0E3           MOV      R1,#+1
   \   00001060   DF0F8DE2           ADD      R0,SP,#+892
   \   00001064   400E80E2           ADD      R0,R0,#+1024
   \                     ??HandleRequest_91:
   \   00001068   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   0000106C   0CD08DE2           ADD      SP,SP,#+12
   \   00001070   C5FFFFEA           B        ??HandleRequest_84
   \                     ??HandleRequest_87:
   \   00001074   C80194E5           LDR      R0,[R4, #+456]
   \   00001078   EC31D4E5           LDRB     R3,[R4, #+492]
   \   0000107C   030050E3           CMP      R0,#+3
   \   00001080   0900001A           BNE      ??HandleRequest_92
   \   00001084   F02086E2           ADD      R2,R6,#+240
   \   00001088   EA1F8DE2           ADD      R1,SP,#+936
   \   0000108C   401E81E2           ADD      R1,R1,#+1024
   \   00001090   BC008DE2           ADD      R0,SP,#+188
   \   00001094   ........           _BLF     ??cat_sprintf,??cat_sprintf??rA
   \   00001098   0020A0E3           MOV      R2,#+0
   \   0000109C   0110A0E3           MOV      R1,#+1
   \   000010A0   EA0F8DE2           ADD      R0,SP,#+936
   \                     ??HandleRequest_93:
   \   000010A4   400E80E2           ADD      R0,R0,#+1024
   \   000010A8   B6FFFFEA           B        ??HandleRequest_83
   \                     ??HandleRequest_92:
   \   000010AC   0000A0E3           MOV      R0,#+0
   \   000010B0   0010A0E3           MOV      R1,#+0
   \   000010B4   03002DE9           PUSH     {R0,R1}
   \   000010B8   0C009DE5           LDR      R0,[SP, #+12]
   \   000010BC   182086E2           ADD      R2,R6,#+24
   \   000010C0   01002DE9           PUSH     {R0}
   \   000010C4   7D1E8DE2           ADD      R1,SP,#+2000
   \   000010C8   C8008DE2           ADD      R0,SP,#+200
   \   000010CC   ........           _BLF     ??cat_sprintf,??cat_sprintf??rA
   \   000010D0   0020A0E3           MOV      R2,#+0
   \   000010D4   0110A0E3           MOV      R1,#+1
   \   000010D8   7D0E8DE2           ADD      R0,SP,#+2000
   \   000010DC   E1FFFFEA           B        ??HandleRequest_91
   \                     ??HandleRequest_88:
   \   000010E0   EC31D4E5           LDRB     R3,[R4, #+492]
   \   000010E4   F02086E2           ADD      R2,R6,#+240
   \   000010E8   E31F8DE2           ADD      R1,SP,#+908
   \   000010EC   401E81E2           ADD      R1,R1,#+1024
   \   000010F0   BC008DE2           ADD      R0,SP,#+188
   \   000010F4   ........           _BLF     ??cat_sprintf,??cat_sprintf??rA
   \   000010F8   0020A0E3           MOV      R2,#+0
   \   000010FC   0110A0E3           MOV      R1,#+1
   \   00001100   E30F8DE2           ADD      R0,SP,#+908
   \   00001104   E6FFFFEA           B        ??HandleRequest_93
   1275                                      } // End for
   1276                                      SendString(PortPtr, TxStr);
   \                     ??HandleRequest_85:
   \   00001108   BC108DE2           ADD      R1,SP,#+188
   \   0000110C   4B0F8DE2           ADD      R0,SP,#+300
   \   00001110   ........           _BLF     ??string,??string??rA
   \   00001114   4B2F8DE2           ADD      R2,SP,#+300
   \   00001118   0510A0E1           MOV      R1,R5
   \   0000111C   0400A0E1           MOV      R0,R4
   \   00001120   ........           BL       ??SendString
   \   00001124   0020A0E3           MOV      R2,#+0
   \   00001128   0110A0E3           MOV      R1,#+1
   \   0000112C   4B0F8DE2           ADD      R0,SP,#+300
   \   00001130   0D0000EA           B        ??HandleRequest_94
   1277                                  } else {
   1278                                      RxMsg = "Can not understand last index!";
   \                     ??HandleRequest_80:
   \   00001134   801086E2           ADD      R1,R6,#+128
   \   00001138   000000EA           B        ??HandleRequest_95
   1279                                  }
   1280                              } else {
   1281                                  RxMsg = "Can not understand first index!";
   \                     ??HandleRequest_79:
   \   0000113C   A01086E2           ADD      R1,R6,#+160
   \                     ??HandleRequest_95:
   \   00001140   14008DE2           ADD      R0,SP,#+20
   \   00001144   ........           _BLF     ??AnsiString_1,??AnsiString??rA_1
   \   00001148   ........           LDR      R1,??DataTable46  ;; ??npos
   \   0000114C   0020A0E3           MOV      R2,#+0
   \   00001150   003091E5           LDR      R3,[R1, #+0]
   \   00001154   0010A0E1           MOV      R1,R0
   \   00001158   D8008DE2           ADD      R0,SP,#+216
   \   0000115C   ........           _BLF     ??assign,??assign??rA
   \   00001160   0020A0E3           MOV      R2,#+0
   \   00001164   0110A0E3           MOV      R1,#+1
   \   00001168   14008DE2           ADD      R0,SP,#+20
   \                     ??HandleRequest_94:
   \   0000116C   ........           _BLF     ??_Tidy,??_Tidy??rA
   1282                              }
   1283                          }
   \   00001170   0020A0E3           MOV      R2,#+0
   \   00001174   0110A0E3           MOV      R1,#+1
   \   00001178   BC008DE2           ADD      R0,SP,#+188
   \   0000117C   820100EA           B        ??HandleRequest_11
   \                     ??HandleRequest_78:
   \   00001180   4C4F0000           DC8      "LO",+0
   1284                          break;
   1285                      case ANPRO3_CMD_SEAWATER_DNS:
   1286                      case ANPRO3_CMD_BALLAST_DNS:
   1287                          {
   1288                              char  *Ptr   = NextField((char *)&RxBuf[1], Separator);
   \                     ??HandleRequest_96:
   \   00001184   EC11D4E5           LDRB     R1,[R4, #+492]
   \   00001188   61008DE2           ADD      R0,SP,#+97
   \   0000118C   400F80E2           ADD      R0,R0,#+256
   \   00001190   ........           BL       ??NextField
   1289                              float NewVal;
   1290                              if (sscanf(Ptr, "%f", &NewVal) == 1) {
   \   00001194   0D20A0E1           MOV      R2,SP
   \   00001198   E81F8FE2           ADR      R1,??HandleRequest_97  ;; "%f"
   \   0000119C   ........           _BLF     sscanf,??sscanf??rA
   \   000011A0   010050E3           CMP      R0,#+1
   \   000011A4   7901001A           BNE      ??HandleRequest_6
   1291                                  int ValKey;
   1292                                  switch (VKey) {
   \   000011A8   169059E2           SUBS     R9,R9,#+22
   \   000011AC   0200000A           BEQ      ??HandleRequest_98
   \   000011B0   019059E2           SUBS     R9,R9,#+1
   \   000011B4   0200000A           BEQ      ??HandleRequest_99
   \   000011B8   030000EA           B        ??HandleRequest_100
   1293                                  case ANPRO3_CMD_SEAWATER_DNS:
   1294                                      ValKey = SVT_SEAWATER_DNS;
   \                     ??HandleRequest_98:
   \   000011BC   A110A0E3           MOV      R1,#+161
   \   000011C0   000000EA           B        ??HandleRequest_101
   1295                                      break;
   1296                                  case ANPRO3_CMD_BALLAST_DNS:
   1297                                      ValKey = SVT_BALLAST_DNS;
   \                     ??HandleRequest_99:
   \   000011C4   A210A0E3           MOV      R1,#+162
   \                     ??HandleRequest_101:
   \   000011C8   501E81E3           ORR      R1,R1,#0x500
   1298                                      break;
   1299                                  }
   1300                                  if (PROSystemData::TXUSystemData) {
   \                     ??HandleRequest_100:
   \   000011CC   003098E5           LDR      R3,[R8, #+0]
   \   000011D0   000053E3           CMP      R3,#+0
   \   000011D4   6D01000A           BEQ      ??HandleRequest_6
   1301                                      PROSystemData::TXUSystemData->PutFloatValue(ValKey, NewVal);
   \   000011D8   00209DE5           LDR      R2,[SP, #+0]
   \   000011DC   0300A0E1           MOV      R0,R3
   \   000011E0   A43093E5           LDR      R3,[R3, #+164]
   \   000011E4   343093E5           LDR      R3,[R3, #+52]
   \   000011E8   0FE0A0E1           MOV      LR,PC
   \   000011EC   13FF2FE1           BX       R3
   \   000011F0   660100EA           B        ??HandleRequest_6
   1302                                  }
   1303                              }
   1304                          }
   1305                          break;
   1306                      case ANPRO3_CMD_SYSALL  :
   1307                          {
   1308                              AnsiString TxStr = "SOALL";
   \                     ??HandleRequest_102:
   \   000011F4   F81086E2           ADD      R1,R6,#+248
   \   000011F8   30008DE2           ADD      R0,SP,#+48
   \   000011FC   ........           _BLF     ??AnsiString_1,??AnsiString??rA_1
   1309                              if (SOAllExtraSpace) {
   \   00001200   F001D4E5           LDRB     R0,[R4, #+496]
   \   00001204   000050E3           CMP      R0,#+0
   \   00001208   0500000A           BEQ      ??HandleRequest_103
   1310                                  TxStr += SpaceStr;
   \   0000120C   ........           LDR      R0,??DataTable46  ;; ??npos
   \   00001210   ........           LDR      R1,??DataTable40  ;; SpaceStr
   \   00001214   003090E5           LDR      R3,[R0, #+0]
   \   00001218   0020A0E3           MOV      R2,#+0
   \   0000121C   30008DE2           ADD      R0,SP,#+48
   \   00001220   ........           _BLF     ??append,??append??rA
   1311                              }
   1312                              PRogramObjectBase *OPtr[] = { PROSystemData::TXUSystemData, PROSystemData::TXUSystemData, PRODraftSystem::PRODraftSysPtr, PRODraftSystem::PRODraftSysPtr, PRODraftSystem::PRODraftSysPtr, PRODraftSystem::PRODraftSysPtr };
   \                     ??HandleRequest_103:
   \   00001224   000098E5           LDR      R0,[R8, #+0]
   \   00001228   48018DE5           STR      R0,[SP, #+328]
   \   0000122C   4C018DE5           STR      R0,[SP, #+332]
   \   00001230   000097E5           LDR      R0,[R7, #+0]
   \   00001234   50018DE5           STR      R0,[SP, #+336]
   \   00001238   54018DE5           STR      R0,[SP, #+340]
   \   0000123C   58018DE5           STR      R0,[SP, #+344]
   \   00001240   5C018DE5           STR      R0,[SP, #+348]
   1313                              const int         ValKey[] = { SVT_TRIM_ANGLE, SVT_LIST_ANGLE, SVT_DF_PP, SVT_DA_PP, SVT_DP, SVT_DS };
   \   00001244   8C0796E8           LDM      R6,{R2,R3,R7-R10}
   \   00001248   9A0E8DE2           ADD      R0,SP,#+2464
   \   0000124C   8C0780E8           STM      R0,{R2,R3,R7-R10}
   1314                              for (unsigned i = 0; i < NELEMENTS(OPtr); i++) {
   \   00001250   0070A0E3           MOV      R7,#+0
   1315                                  if (OPtr) {
   1316                                      float TmpVal;
   1317                                      int   DecPnt;
   1318                                      int   Unit;
   1319                                      int   Status = OPtr[i]->GetValue(ValKey[i], 0, TmpVal, DecPnt, Unit);
   \                     ??HandleRequest_104:
   \   00001254   520F8DE2           ADD      R0,SP,#+328
   \   00001258   078190E7           LDR      R8,[R0, +R7, LSL #+2]
   \   0000125C   08008DE2           ADD      R0,SP,#+8
   \   00001260   01002DE9           PUSH     {R0}
   \   00001264   08008DE2           ADD      R0,SP,#+8
   \   00001268   01002DE9           PUSH     {R0}
   \   0000126C   6A0F8DE2           ADD      R0,SP,#+424
   \   00001270   800E80E2           ADD      R0,R0,#+2048
   \   00001274   071190E7           LDR      R1,[R0, +R7, LSL #+2]
   \   00001278   0800A0E1           MOV      R0,R8
   \   0000127C   A48098E5           LDR      R8,[R8, #+164]
   \   00001280   08308DE2           ADD      R3,SP,#+8
   \   00001284   248098E5           LDR      R8,[R8, #+36]
   \   00001288   0020A0E3           MOV      R2,#+0
   \   0000128C   0FE0A0E1           MOV      LR,PC
   \   00001290   18FF2FE1           BX       R8
   \   00001294   0080A0E1           MOV      R8,R0
   1320                                      switch (Unit) {
   \   00001298   10009DE5           LDR      R0,[SP, #+16]
   \   0000129C   08D08DE2           ADD      SP,SP,#+8
   \   000012A0   0A0050E3           CMP      R0,#+10
   \   000012A4   0800001A           BNE      ??HandleRequest_105
   1321                                      case ANGLE_UNIT:
   1322                                          TmpVal *= RAD_FACTOR;
   \   000012A8   00009DE5           LDR      R0,[SP, #+0]
   \   000012AC   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   000012B0   0020A0E1           MOV      R2,R0
   \   000012B4   F8049FE5           LDR      R0,??HandleRequest_90+0x8  ;; 0x1a63c1f8
   \   000012B8   0130A0E1           MOV      R3,R1
   \   000012BC   F4149FE5           LDR      R1,??HandleRequest_90+0xC  ;; 0x404ca5dc
   \   000012C0   ........           _BLF     __dMul,??__dMul??rA
   \   000012C4   ........           _BLF     __doubleToFloat,??__doubleToFloat??rA
   \   000012C8   00008DE5           STR      R0,[SP, #+0]
   \                     ??HandleRequest_105:
   \   000012CC   EC31D4E5           LDRB     R3,[R4, #+492]
   \   000012D0   000058E3           CMP      R8,#+0
   \   000012D4   2200000A           BEQ      ??HandleRequest_106
   \   000012D8   058058E2           SUBS     R8,R8,#+5
   \   000012DC   0200000A           BEQ      ??HandleRequest_107
   \   000012E0   038058E2           SUBS     R8,R8,#+3
   \   000012E4   1C00000A           BEQ      ??HandleRequest_108
   \   000012E8   2D0000EA           B        ??HandleRequest_109
   1323                                          break;
   1324                                      default:
   1325                                          break;
   1326                                      }
   1327                                      switch (Status) {
   1328                                      case GETVAL_FLOAT_NOT_LEGAL:
   1329                                          switch (ValueErrorAction) {
   \                     ??HandleRequest_107:
   \   000012EC   C80194E5           LDR      R0,[R4, #+456]
   \   000012F0   030050E3           CMP      R0,#+3
   \   000012F4   0900001A           BNE      ??HandleRequest_110
   1330                                          case SVT_FLAG_MARK_NO_VAL:
   1331                                              TxStr.cat_sprintf("%c****", Separator);
   \   000012F8   F02086E2           ADD      R2,R6,#+240
   \   000012FC   18108DE2           ADD      R1,SP,#+24
   \   00001300   801E81E2           ADD      R1,R1,#+2048
   \   00001304   30008DE2           ADD      R0,SP,#+48
   \   00001308   ........           _BLF     ??cat_sprintf,??cat_sprintf??rA
   \   0000130C   0020A0E3           MOV      R2,#+0
   \   00001310   0110A0E3           MOV      R1,#+1
   \   00001314   18008DE2           ADD      R0,SP,#+24
   \   00001318   800E80E2           ADD      R0,R0,#+2048
   \   0000131C   290000EA           B        ??HandleRequest_111
   1332                                              break;
   1333                                          case SVT_FLAG_ONLY_NUMBER:
   1334                                          default:
   1335                                              TxStr.cat_sprintf("%c%.*f", Separator, DecPnt, 0.0);
   \                     ??HandleRequest_110:
   \   00001320   0000A0E3           MOV      R0,#+0
   \   00001324   0010A0E3           MOV      R1,#+0
   \   00001328   03002DE9           PUSH     {R0,R1}
   \   0000132C   0C009DE5           LDR      R0,[SP, #+12]
   \   00001330   182086E2           ADD      R2,R6,#+24
   \   00001334   01002DE9           PUSH     {R0}
   \   00001338   841E8DE2           ADD      R1,SP,#+2112
   \   0000133C   3C008DE2           ADD      R0,SP,#+60
   \   00001340   ........           _BLF     ??cat_sprintf,??cat_sprintf??rA
   \   00001344   0020A0E3           MOV      R2,#+0
   \   00001348   0110A0E3           MOV      R1,#+1
   \   0000134C   840E8DE2           ADD      R0,SP,#+2112
   \                     ??HandleRequest_112:
   \   00001350   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00001354   0CD08DE2           ADD      SP,SP,#+12
   \   00001358   1B0000EA           B        ??HandleRequest_113
   1336                                              break;
   1337                                          }
   1338                                          break;
   1339                                      case GETVAL_DRY_SENSOR :
   1340                                          TmpVal = 0.0;
   \                     ??HandleRequest_108:
   \   0000135C   0010A0E3           MOV      R1,#+0
   \   00001360   00108DE5           STR      R1,[SP, #+0]
   1341                                      case GETVAL_NO_ERR    :
   1342                                          TxStr.cat_sprintf("%c%.*f", Separator, DecPnt, TmpVal);
   \                     ??HandleRequest_106:
   \   00001364   00009DE5           LDR      R0,[SP, #+0]
   \   00001368   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   0000136C   03002DE9           PUSH     {R0,R1}
   \   00001370   0C009DE5           LDR      R0,[SP, #+12]
   \   00001374   182086E2           ADD      R2,R6,#+24
   \   00001378   01002DE9           PUSH     {R0}
   \   0000137C   EC31D4E5           LDRB     R3,[R4, #+492]
   \   00001380   FB1F8DE2           ADD      R1,SP,#+1004
   \   00001384   401E81E2           ADD      R1,R1,#+1024
   \   00001388   3C008DE2           ADD      R0,SP,#+60
   \   0000138C   ........           _BLF     ??cat_sprintf,??cat_sprintf??rA
   \   00001390   0020A0E3           MOV      R2,#+0
   \   00001394   0110A0E3           MOV      R1,#+1
   \   00001398   FB0F8DE2           ADD      R0,SP,#+1004
   \   0000139C   400E80E2           ADD      R0,R0,#+1024
   \   000013A0   EAFFFFEA           B        ??HandleRequest_112
   1343                                          break;
   1344                                      default:
   1345                                          TxStr.cat_sprintf("%c****", Separator);
   \                     ??HandleRequest_109:
   \   000013A4   F02086E2           ADD      R2,R6,#+240
   \   000013A8   FF1F8DE2           ADD      R1,SP,#+1020
   \   000013AC   401E81E2           ADD      R1,R1,#+1024
   \   000013B0   30008DE2           ADD      R0,SP,#+48
   \   000013B4   ........           _BLF     ??cat_sprintf,??cat_sprintf??rA
   \   000013B8   0020A0E3           MOV      R2,#+0
   \   000013BC   0110A0E3           MOV      R1,#+1
   \   000013C0   FF0F8DE2           ADD      R0,SP,#+1020
   \   000013C4   400E80E2           ADD      R0,R0,#+1024
   \                     ??HandleRequest_111:
   \   000013C8   ........           _BLF     ??_Tidy,??_Tidy??rA
   1346                                          break;
   1347                                      }
   1348                                  } else { // If OPtr
   1349                                      TxStr.cat_sprintf("%c****", Separator);
   1350                                  }
   1351                              } // End for
   \                     ??HandleRequest_113:
   \   000013CC   017087E2           ADD      R7,R7,#+1
   \   000013D0   060057E3           CMP      R7,#+6
   \   000013D4   9EFFFF3A           BCC      ??HandleRequest_104
   1352                              SendString(PortPtr, TxStr);
   \   000013D8   30108DE2           ADD      R1,SP,#+48
   \   000013DC   14008DE2           ADD      R0,SP,#+20
   \   000013E0   ........           _BLF     ??string,??string??rA
   \   000013E4   14208DE2           ADD      R2,SP,#+20
   \   000013E8   0510A0E1           MOV      R1,R5
   \   000013EC   0400A0E1           MOV      R0,R4
   \   000013F0   ........           BL       ??SendString
   \   000013F4   0020A0E3           MOV      R2,#+0
   \   000013F8   0110A0E3           MOV      R1,#+1
   \   000013FC   14008DE2           ADD      R0,SP,#+20
   \   00001400   ........           _BLF     ??_Tidy,??_Tidy??rA
   1353                          }
   \   00001404   BFFCFFEA           B        ??HandleRequest_43
   1354                          break;
   1355                      case ANPRO3_CMD_TRIM_DEG:
   1356                      case ANPRO3_CMD_LIST_DEG:
   1357                      case ANPRO3_CMD_DF      :
   1358                      case ANPRO3_CMD_DP      :
   1359                      case ANPRO3_CMD_DS      :
   1360                      case ANPRO3_CMD_DA      :
   1361                          {
   1362                              AnsiString    TxStr;
   \                     ??HandleRequest_114:
   \   00001408   4C008DE2           ADD      R0,SP,#+76
   \   0000140C   ........           _BLF     ??AnsiString,??AnsiString??rA
   1363                              short         ValKey;
   1364                              PRogramObject *OPtr  = NULL;
   1365                              switch (VKey) {
   \   00001410   189049E2           SUB      R9,R9,#+24
   \   00001414   050059E3           CMP      R9,#+5
   \   00001418   C400008A           BHI      ??HandleRequest_115
   \   0000141C   010F8FE2           ADR      R0,??HandleRequest_4
   \   00001420   0900D0E7           LDRB     R0,[R0, R9]
   \   00001424   00F18FE0           ADD      PC,PC,R0, LSL #+2
   \                     ??HandleRequest_4:
   \   00001428   01122334           DC8      +1,+18,+35,+52
   \   0000142C   46550000           DC8      +70,+85,+0,+0
   1366                              case ANPRO3_CMD_TRIM_DEG:
   1367                                  TxStr   = "SOTR";
   \                     ??HandleRequest_116:
   \   00001430   401F86E2           ADD      R1,R6,#+256
   \   00001434   850E8DE2           ADD      R0,SP,#+2128
   \   00001438   ........           _BLF     ??AnsiString_1,??AnsiString??rA_1
   \   0000143C   ........           LDR      R1,??DataTable46  ;; ??npos
   \   00001440   0020A0E3           MOV      R2,#+0
   \   00001444   003091E5           LDR      R3,[R1, #+0]
   \   00001448   0010A0E1           MOV      R1,R0
   \   0000144C   4C008DE2           ADD      R0,SP,#+76
   \   00001450   ........           _BLF     ??assign,??assign??rA
   \   00001454   0020A0E3           MOV      R2,#+0
   \   00001458   0110A0E3           MOV      R1,#+1
   \   0000145C   850E8DE2           ADD      R0,SP,#+2128
   \   00001460   ........           _BLF     ??_Tidy,??_Tidy??rA
   1368                                  ValKey  = SVT_TRIM_ANGLE;
   \   00001464   4D10A0E3           MOV      R1,#+77
   1369                                  OPtr    = (PRogramObject *)PROSystemData::TXUSystemData;
   \                     ??HandleRequest_117:
   \   00001468   007098E5           LDR      R7,[R8, #+0]
   \   0000146C   501E81E3           ORR      R1,R1,#0x500
   \   00001470   540000EA           B        ??HandleRequest_118
   1370                                  break;
   1371                              case ANPRO3_CMD_LIST_DEG:
   1372                                  TxStr   = "SOLI";
   \                     ??HandleRequest_119:
   \   00001474   421F86E2           ADD      R1,R6,#+264
   \   00001478   6C008DE2           ADD      R0,SP,#+108
   \   0000147C   800E80E2           ADD      R0,R0,#+2048
   \   00001480   ........           _BLF     ??AnsiString_1,??AnsiString??rA_1
   \   00001484   ........           LDR      R1,??DataTable46  ;; ??npos
   \   00001488   0020A0E3           MOV      R2,#+0
   \   0000148C   003091E5           LDR      R3,[R1, #+0]
   \   00001490   0010A0E1           MOV      R1,R0
   \   00001494   4C008DE2           ADD      R0,SP,#+76
   \   00001498   ........           _BLF     ??assign,??assign??rA
   \   0000149C   0020A0E3           MOV      R2,#+0
   \   000014A0   0110A0E3           MOV      R1,#+1
   \   000014A4   6C008DE2           ADD      R0,SP,#+108
   \   000014A8   800E80E2           ADD      R0,R0,#+2048
   \   000014AC   ........           _BLF     ??_Tidy,??_Tidy??rA
   1373                                  ValKey  = SVT_LIST_ANGLE;
   \   000014B0   5210A0E3           MOV      R1,#+82
   \   000014B4   EBFFFFEA           B        ??HandleRequest_117
   1374                                  OPtr    = (PRogramObject *)PROSystemData::TXUSystemData;
   1375                                  break;
   1376                              case ANPRO3_CMD_DF:
   1377                                  TxStr   = "SODF";
   \                     ??HandleRequest_120:
   \   000014B8   441F86E2           ADD      R1,R6,#+272
   \   000014BC   88008DE2           ADD      R0,SP,#+136
   \   000014C0   800E80E2           ADD      R0,R0,#+2048
   \   000014C4   ........           _BLF     ??AnsiString_1,??AnsiString??rA_1
   \   000014C8   ........           LDR      R1,??DataTable46  ;; ??npos
   \   000014CC   0020A0E3           MOV      R2,#+0
   \   000014D0   003091E5           LDR      R3,[R1, #+0]
   \   000014D4   0010A0E1           MOV      R1,R0
   \   000014D8   4C008DE2           ADD      R0,SP,#+76
   \   000014DC   ........           _BLF     ??assign,??assign??rA
   \   000014E0   0020A0E3           MOV      R2,#+0
   \   000014E4   0110A0E3           MOV      R1,#+1
   \   000014E8   88008DE2           ADD      R0,SP,#+136
   \   000014EC   800E80E2           ADD      R0,R0,#+2048
   \   000014F0   ........           _BLF     ??_Tidy,??_Tidy??rA
   1378                                  ValKey  = SVT_DF;
   \   000014F4   5E1EA0E3           MOV      R1,#+1504
   1379                                  OPtr    = (PRogramObject *)PRODraftSystem::PRODraftSysPtr;
   \   000014F8   310000EA           B        ??HandleRequest_121
   1380                                  break;
   1381                              case ANPRO3_CMD_DP:
   1382                                  TxStr   = "SODP";
   \                     ??HandleRequest_122:
   \   000014FC   461F86E2           ADD      R1,R6,#+280
   \   00001500   A4008DE2           ADD      R0,SP,#+164
   \   00001504   800E80E2           ADD      R0,R0,#+2048
   \   00001508   ........           _BLF     ??AnsiString_1,??AnsiString??rA_1
   \   0000150C   ........           LDR      R1,??DataTable46  ;; ??npos
   \   00001510   0020A0E3           MOV      R2,#+0
   \   00001514   003091E5           LDR      R3,[R1, #+0]
   \   00001518   0010A0E1           MOV      R1,R0
   \   0000151C   4C008DE2           ADD      R0,SP,#+76
   \   00001520   ........           _BLF     ??assign,??assign??rA
   \   00001524   0020A0E3           MOV      R2,#+0
   \   00001528   0110A0E3           MOV      R1,#+1
   \   0000152C   A4008DE2           ADD      R0,SP,#+164
   \   00001530   800E80E2           ADD      R0,R0,#+2048
   \   00001534   ........           _BLF     ??_Tidy,??_Tidy??rA
   1383                                  ValKey  = SVT_DP;
   \   00001538   E710A0E3           MOV      R1,#+231
   \   0000153C   1F0000EA           B        ??HandleRequest_123
   \                     ??HandleRequest_97:
   \   00001540   25660000           DC8      "%f",+0
   1384                                  OPtr    = (PRogramObject *)PRODraftSystem::PRODraftSysPtr;
   1385                                  break;
   1386                              case ANPRO3_CMD_DS:
   1387                                  TxStr   = "SODS";
   \                     ??HandleRequest_124:
   \   00001544   481F86E2           ADD      R1,R6,#+288
   \   00001548   8C0E8DE2           ADD      R0,SP,#+2240
   \   0000154C   ........           _BLF     ??AnsiString_1,??AnsiString??rA_1
   \   00001550   ........           LDR      R1,??DataTable46  ;; ??npos
   \   00001554   0020A0E3           MOV      R2,#+0
   \   00001558   003091E5           LDR      R3,[R1, #+0]
   \   0000155C   0010A0E1           MOV      R1,R0
   \   00001560   4C008DE2           ADD      R0,SP,#+76
   \   00001564   ........           _BLF     ??assign,??assign??rA
   \   00001568   0020A0E3           MOV      R2,#+0
   \   0000156C   0110A0E3           MOV      R1,#+1
   \   00001570   8C0E8DE2           ADD      R0,SP,#+2240
   \   00001574   ........           _BLF     ??_Tidy,??_Tidy??rA
   1388                                  ValKey  = SVT_DS;
   \   00001578   E610A0E3           MOV      R1,#+230
   \   0000157C   0F0000EA           B        ??HandleRequest_123
   1389                                  OPtr    = (PRogramObject *)PRODraftSystem::PRODraftSysPtr;
   1390                                  break;
   1391                              case ANPRO3_CMD_DA:
   1392                                  TxStr   = "SODA";
   \                     ??HandleRequest_125:
   \   00001580   4A1F86E2           ADD      R1,R6,#+296
   \   00001584   DC008DE2           ADD      R0,SP,#+220
   \   00001588   800E80E2           ADD      R0,R0,#+2048
   \   0000158C   ........           _BLF     ??AnsiString_1,??AnsiString??rA_1
   \   00001590   ........           LDR      R1,??DataTable46  ;; ??npos
   \   00001594   0020A0E3           MOV      R2,#+0
   \   00001598   003091E5           LDR      R3,[R1, #+0]
   \   0000159C   0010A0E1           MOV      R1,R0
   \   000015A0   4C008DE2           ADD      R0,SP,#+76
   \   000015A4   ........           _BLF     ??assign,??assign??rA
   \   000015A8   0020A0E3           MOV      R2,#+0
   \   000015AC   0110A0E3           MOV      R1,#+1
   \   000015B0   DC008DE2           ADD      R0,SP,#+220
   \   000015B4   800E80E2           ADD      R0,R0,#+2048
   \   000015B8   ........           _BLF     ??_Tidy,??_Tidy??rA
   1393                                  ValKey  = SVT_DA;
   \   000015BC   E310A0E3           MOV      R1,#+227
   \                     ??HandleRequest_123:
   \   000015C0   501E81E3           ORR      R1,R1,#0x500
   1394                                  OPtr    = (PRogramObject *)PRODraftSystem::PRODraftSysPtr;
   \                     ??HandleRequest_121:
   \   000015C4   007097E5           LDR      R7,[R7, #+0]
   1395                                  break;
   1396                              default:
   1397                                  OPtr = NULL;
   1398                                  break;
   1399                              }
   1400                              if (OPtr) {
   \                     ??HandleRequest_118:
   \   000015C8   000057E3           CMP      R7,#+0
   \   000015CC   5700000A           BEQ      ??HandleRequest_115
   1401                                  float TmpVal;
   1402                                  int   DecPnt;
   1403                                  int   Unit;
   1404                                  int   Status = OPtr->GetValue(ValKey, 0, TmpVal, DecPnt, Unit);
   \   000015D0   08008DE2           ADD      R0,SP,#+8
   \   000015D4   01002DE9           PUSH     {R0}
   \   000015D8   08008DE2           ADD      R0,SP,#+8
   \   000015DC   01002DE9           PUSH     {R0}
   \   000015E0   0700A0E1           MOV      R0,R7
   \   000015E4   A47097E5           LDR      R7,[R7, #+164]
   \   000015E8   08308DE2           ADD      R3,SP,#+8
   \   000015EC   247097E5           LDR      R7,[R7, #+36]
   \   000015F0   0020A0E3           MOV      R2,#+0
   \   000015F4   0FE0A0E1           MOV      LR,PC
   \   000015F8   17FF2FE1           BX       R7
   \   000015FC   0070A0E1           MOV      R7,R0
   1405                                  switch (Unit) {
   \   00001600   10009DE5           LDR      R0,[SP, #+16]
   \   00001604   08D08DE2           ADD      SP,SP,#+8
   \   00001608   0A0050E3           CMP      R0,#+10
   \   0000160C   0600001A           BNE      ??HandleRequest_126
   1406                                  case ANGLE_UNIT:
   1407                                      TmpVal *= RAD_FACTOR;
   \   00001610   00009DE5           LDR      R0,[SP, #+0]
   \   00001614   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   00001618   94219FE5           LDR      R2,??HandleRequest_90+0x8  ;; 0x1a63c1f8
   \   0000161C   94319FE5           LDR      R3,??HandleRequest_90+0xC  ;; 0x404ca5dc
   \   00001620   ........           _BLF     __dMul,??__dMul??rA
   \   00001624   ........           _BLF     __doubleToFloat,??__doubleToFloat??rA
   \   00001628   00008DE5           STR      R0,[SP, #+0]
   \                     ??HandleRequest_126:
   \   0000162C   EC31D4E5           LDRB     R3,[R4, #+492]
   \   00001630   000057E3           CMP      R7,#+0
   \   00001634   2400000A           BEQ      ??HandleRequest_127
   \   00001638   057057E2           SUBS     R7,R7,#+5
   \   0000163C   0400000A           BEQ      ??HandleRequest_128
   \   00001640   037057E2           SUBS     R7,R7,#+3
   \   00001644   1E00000A           BEQ      ??HandleRequest_129
   \   00001648   097057E2           SUBS     R7,R7,#+9
   \   0000164C   1E00000A           BEQ      ??HandleRequest_127
   \   00001650   2D0000EA           B        ??HandleRequest_130
   1408                                      break;
   1409                                  default:
   1410                                      break;
   1411                                  }
   1412                                  switch (Status) {
   1413                                  case GETVAL_FLOAT_NOT_LEGAL:
   1414                                      switch (ValueErrorAction) {
   \                     ??HandleRequest_128:
   \   00001654   C80194E5           LDR      R0,[R4, #+456]
   \   00001658   030050E3           CMP      R0,#+3
   \   0000165C   0900001A           BNE      ??HandleRequest_131
   1415                                      case SVT_FLAG_MARK_NO_VAL:
   1416                                          TxStr.cat_sprintf("%c****", Separator);
   \   00001660   F02086E2           ADD      R2,R6,#+240
   \   00001664   F8108DE2           ADD      R1,SP,#+248
   \   00001668   801E81E2           ADD      R1,R1,#+2048
   \   0000166C   4C008DE2           ADD      R0,SP,#+76
   \   00001670   ........           _BLF     ??cat_sprintf,??cat_sprintf??rA
   \   00001674   0020A0E3           MOV      R2,#+0
   \   00001678   0110A0E3           MOV      R1,#+1
   \   0000167C   F8008DE2           ADD      R0,SP,#+248
   \                     ??HandleRequest_132:
   \   00001680   800E80E2           ADD      R0,R0,#+2048
   \   00001684   310000EA           B        ??HandleRequest_133
   1417                                          break;
   1418                                      case SVT_FLAG_ONLY_NUMBER:
   1419                                      default:
   1420                                          TxStr.cat_sprintf("%c%.*f", Separator, DecPnt, 0.0);
   \                     ??HandleRequest_131:
   \   00001688   0000A0E3           MOV      R0,#+0
   \   0000168C   0010A0E3           MOV      R1,#+0
   \   00001690   03002DE9           PUSH     {R0,R1}
   \   00001694   0C009DE5           LDR      R0,[SP, #+12]
   \   00001698   182086E2           ADD      R2,R6,#+24
   \   0000169C   01002DE9           PUSH     {R0}
   \   000016A0   921E8DE2           ADD      R1,SP,#+2336
   \   000016A4   58008DE2           ADD      R0,SP,#+88
   \   000016A8   ........           _BLF     ??cat_sprintf,??cat_sprintf??rA
   \   000016AC   0020A0E3           MOV      R2,#+0
   \   000016B0   0110A0E3           MOV      R1,#+1
   \   000016B4   920E8DE2           ADD      R0,SP,#+2336
   \                     ??HandleRequest_134:
   \   000016B8   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000016BC   0CD08DE2           ADD      SP,SP,#+12
   \   000016C0   230000EA           B        ??HandleRequest_135
   1421                                          break;
   1422                                      }
   1423                                      break;
   1424                                  case GETVAL_DRY_SENSOR  :
   1425                                      TmpVal = 0.0;
   \                     ??HandleRequest_129:
   \   000016C4   0010A0E3           MOV      R1,#+0
   \   000016C8   00108DE5           STR      R1,[SP, #+0]
   1426                                  case GETVAL_NO_ERR      :
   1427                                  case GETVAL_NOT_MEASURED:
   1428                                      TxStr.cat_sprintf("%c%.*f", Separator, DecPnt, TmpVal);
   \                     ??HandleRequest_127:
   \   000016CC   00009DE5           LDR      R0,[SP, #+0]
   \   000016D0   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   000016D4   03002DE9           PUSH     {R0,R1}
   \   000016D8   0C009DE5           LDR      R0,[SP, #+12]
   \   000016DC   182086E2           ADD      R2,R6,#+24
   \   000016E0   01002DE9           PUSH     {R0}
   \   000016E4   EC31D4E5           LDRB     R3,[R4, #+492]
   \   000016E8   4F1F8DE2           ADD      R1,SP,#+316
   \   000016EC   801E81E2           ADD      R1,R1,#+2048
   \   000016F0   58008DE2           ADD      R0,SP,#+88
   \   000016F4   ........           _BLF     ??cat_sprintf,??cat_sprintf??rA
   \   000016F8   0020A0E3           MOV      R2,#+0
   \   000016FC   0110A0E3           MOV      R1,#+1
   \   00001700   4F0F8DE2           ADD      R0,SP,#+316
   \   00001704   800E80E2           ADD      R0,R0,#+2048
   \   00001708   EAFFFFEA           B        ??HandleRequest_134
   1429                                      break;
   1430                                  default:
   1431                                      TxStr.cat_sprintf("%c****", Separator);
   \                     ??HandleRequest_130:
   \   0000170C   F02086E2           ADD      R2,R6,#+240
   \   00001710   531F8DE2           ADD      R1,SP,#+332
   \   00001714   801E81E2           ADD      R1,R1,#+2048
   \   00001718   4C008DE2           ADD      R0,SP,#+76
   \   0000171C   ........           _BLF     ??cat_sprintf,??cat_sprintf??rA
   \   00001720   0020A0E3           MOV      R2,#+0
   \   00001724   0110A0E3           MOV      R1,#+1
   \   00001728   530F8DE2           ADD      R0,SP,#+332
   \   0000172C   D3FFFFEA           B        ??HandleRequest_132
   1432                                      break;
   1433                                  }
   1434                              } else { // if OPtr
   1435                                  TxStr.cat_sprintf("%c****", Separator);
   \                     ??HandleRequest_115:
   \   00001730   EC31D4E5           LDRB     R3,[R4, #+492]
   \   00001734   F02086E2           ADD      R2,R6,#+240
   \   00001738   14108DE2           ADD      R1,SP,#+20
   \   0000173C   4C008DE2           ADD      R0,SP,#+76
   \   00001740   ........           _BLF     ??cat_sprintf,??cat_sprintf??rA
   \   00001744   0020A0E3           MOV      R2,#+0
   \   00001748   0110A0E3           MOV      R1,#+1
   \   0000174C   14008DE2           ADD      R0,SP,#+20
   \                     ??HandleRequest_133:
   \   00001750   ........           _BLF     ??_Tidy,??_Tidy??rA
   1436                              }
   1437                              SendString(PortPtr, TxStr);
   \                     ??HandleRequest_135:
   \   00001754   4C108DE2           ADD      R1,SP,#+76
   \   00001758   30008DE2           ADD      R0,SP,#+48
   \   0000175C   ........           _BLF     ??string,??string??rA
   \   00001760   30208DE2           ADD      R2,SP,#+48
   \   00001764   0510A0E1           MOV      R1,R5
   \   00001768   0400A0E1           MOV      R0,R4
   \   0000176C   ........           BL       ??SendString
   \   00001770   0020A0E3           MOV      R2,#+0
   \   00001774   0110A0E3           MOV      R1,#+1
   \   00001778   30008DE2           ADD      R0,SP,#+48
   \   0000177C   ........           _BLF     ??_Tidy,??_Tidy??rA
   1438                          }
   \   00001780   0020A0E3           MOV      R2,#+0
   \   00001784   0110A0E3           MOV      R1,#+1
   \   00001788   4C008DE2           ADD      R0,SP,#+76
   \                     ??HandleRequest_11:
   \   0000178C   ........           _BLF     ??_Tidy,??_Tidy??rA
   1439                          break;
   1440                      } // End switch
   1441                  } // End if
   1442              }
   1443          }
   \                     ??HandleRequest_6:
   \   00001790   0020A0E3           MOV      R2,#+0
   \   00001794   0110A0E3           MOV      R1,#+1
   \   00001798   D8008DE2           ADD      R0,SP,#+216
   \   0000179C   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000017A0   6EDF8DE2           ADD      SP,SP,#+440
   \   000017A4   80DE8DE2           ADD      SP,SP,#+2048
   \   000017A8   ........           B        ?Subroutine31
   \                     ??HandleRequest_90:
   \   000017AC   8C4B55DA           DC32     0xffffffffda554b8c
   \   000017B0   E21AB93F           DC32     0x3fb91ae2
   \   000017B4   F8C1631A           DC32     0x1a63c1f8
   \   000017B8   DCA54C40           DC32     0x404ca5dc
   1444          
   1445          

   \                                 In segment CODE, align 4, keep-with-next
   1446          bool AnPro3object::SendALarms(TSNUart *PortPtr) {
   \                     ??SendALarms:
   \   00000000   F0432DE9           PUSH     {R4-R9,LR}
   \   00000004   38D04DE2           SUB      SP,SP,#+56
   \   00000008   0040A0E1           MOV      R4,R0
   1447              bool HasSendtAlarms = false;
   1448              if (AlarmList->isEmpty()) {
   \   0000000C   540294E5           LDR      R0,[R4, #+596]
   \   00000010   0150A0E1           MOV      R5,R1
   \   00000014   0060A0E3           MOV      R6,#+0
   \   00000018   ........           _BLF     ??isEmpty,??isEmpty??rA
   \   0000001C   000050E3           CMP      R0,#+0
   \   00000020   2800001A           BNE      ??SendALarms_1
   1449                  HasSendtAlarms = false;
   1450              } else {
   1451                  AlarmList->Protect();
   \   00000024   540294E5           LDR      R0,[R4, #+596]
   1452                  unsigned size  = AlarmList->Size();
   1453                  PRONode  *node = AlarmList->getHead();
   1454                  for (unsigned count = 0; count < size; count++) {
   \   00000028   0090A0E3           MOV      R9,#+0
   \   0000002C   ........           _BLF     ??Protect,??Protect??rA
   \   00000030   540294E5           LDR      R0,[R4, #+596]
   \   00000034   ........           _BLF     ??Size,??Size??rA
   \   00000038   0070A0E1           MOV      R7,R0
   \   0000003C   540294E5           LDR      R0,[R4, #+596]
   \   00000040   ........           _BLF     ??getHead,??getHead??rA
   \   00000044   0080A0E1           MOV      R8,R0
   \   00000048   180000EA           B        ??SendALarms_2
   1455                      node = node->getNext();
   \                     ??SendALarms_3:
   \   0000004C   0800A0E1           MOV      R0,R8
   \   00000050   ........           _BLF     ??getNext,??getNext??rA
   \   00000054   0080A0E1           MOV      R8,R0
   1456                      AlarmBasic *element = (AlarmBasic *)node->getElement();
   \   00000058   ........           _BLF     ??getElement,??getElement??rA
   1457                      if (element) {
   \   0000005C   000050E3           CMP      R0,#+0
   \   00000060   1100000A           BEQ      ??SendALarms_4
   1458                          AnsiString tmpStr = element->Get_ANPro3Message();
   \   00000064   1C108DE2           ADD      R1,SP,#+28
   \   00000068   ........           _BLF     ??Get_ANPro3Message,??Get_ANPro3Message??rA
   1459                          SendString(PortPtr, tmpStr);
   \   0000006C   1C108DE2           ADD      R1,SP,#+28
   \   00000070   0D00A0E1           MOV      R0,SP
   \   00000074   ........           _BLF     ??string,??string??rA
   \   00000078   0D20A0E1           MOV      R2,SP
   \   0000007C   0510A0E1           MOV      R1,R5
   \   00000080   0400A0E1           MOV      R0,R4
   \   00000084   ........           BL       ??SendString
   \   00000088   0020A0E3           MOV      R2,#+0
   \   0000008C   0110A0E3           MOV      R1,#+1
   \   00000090   0D00A0E1           MOV      R0,SP
   \   00000094   ........           _BLF     ??_Tidy,??_Tidy??rA
   1460                          HasSendtAlarms = true;
   \   00000098   0160A0E3           MOV      R6,#+1
   1461                      }
   \   0000009C   0020A0E3           MOV      R2,#+0
   \   000000A0   0110A0E3           MOV      R1,#+1
   \   000000A4   1C008DE2           ADD      R0,SP,#+28
   \   000000A8   ........           _BLF     ??_Tidy,??_Tidy??rA
   1462                  }
   \                     ??SendALarms_4:
   \   000000AC   019089E2           ADD      R9,R9,#+1
   \                     ??SendALarms_2:
   \   000000B0   070059E1           CMP      R9,R7
   \   000000B4   E4FFFF3A           BCC      ??SendALarms_3
   1463                  AlarmList->RemoveAllNodes();
   \   000000B8   540294E5           LDR      R0,[R4, #+596]
   \   000000BC   ........           _BLF     ??RemoveAllNodes,??RemoveAllNodes??rA
   1464                  AlarmList->UnProtect();
   \   000000C0   540294E5           LDR      R0,[R4, #+596]
   \   000000C4   ........           _BLF     ??UnProtect,??UnProtect??rA
   1465              }
   1466              return HasSendtAlarms;
   \                     ??SendALarms_1:
   \   000000C8   0600A0E1           MOV      R0,R6
   \   000000CC   38D08DE2           ADD      SP,SP,#+56
   \   000000D0   ........           B        ?Subroutine34
   1467          }

   \                                 In segment CODE, align 4, keep-with-next
   1468          bool AnPro3object::SendNEMA(TSNUart *PortPtr) {
   \                     ??SendNEMA:
   \   00000000   F0432DE9           PUSH     {R4-R9,LR}
   \   00000004   70D04DE2           SUB      SP,SP,#+112
   \   00000008   0040A0E1           MOV      R4,R0
   1469              bool HasSendtAlarms = false;
   1470              if (AlarmList->isEmpty()) {
   \   0000000C   540294E5           LDR      R0,[R4, #+596]
   \   00000010   0150A0E1           MOV      R5,R1
   \   00000014   0060A0E3           MOV      R6,#+0
   \   00000018   ........           _BLF     ??isEmpty,??isEmpty??rA
   \   0000001C   000050E3           CMP      R0,#+0
   \   00000020   3700001A           BNE      ??SendNEMA_1
   1471                  HasSendtAlarms = false;
   1472              } else {
   1473                  AlarmList->Protect();
   \   00000024   540294E5           LDR      R0,[R4, #+596]
   1474                  unsigned size  = AlarmList->Size();
   1475                  PRONode  *node = AlarmList->getHead();
   1476                  for (unsigned count = 0; count < size; count++) {
   \   00000028   0090A0E3           MOV      R9,#+0
   \   0000002C   ........           _BLF     ??Protect,??Protect??rA
   \   00000030   540294E5           LDR      R0,[R4, #+596]
   \   00000034   ........           _BLF     ??Size,??Size??rA
   \   00000038   0070A0E1           MOV      R7,R0
   \   0000003C   540294E5           LDR      R0,[R4, #+596]
   \   00000040   ........           _BLF     ??getHead,??getHead??rA
   \   00000044   0080A0E1           MOV      R8,R0
   \   00000048   270000EA           B        ??SendNEMA_2
   1477                      node = node->getNext();
   \                     ??SendNEMA_3:
   \   0000004C   0800A0E1           MOV      R0,R8
   \   00000050   ........           _BLF     ??getNext,??getNext??rA
   \   00000054   0080A0E1           MOV      R8,R0
   1478                      AlarmBasic *element = (AlarmBasic *)node->getElement();
   \   00000058   ........           _BLF     ??getElement,??getElement??rA
   1479                      if (element) {
   \   0000005C   000050E3           CMP      R0,#+0
   \   00000060   2000000A           BEQ      ??SendNEMA_4
   1480                          AnsiString tmpStr = "SA" + element->Get_ANPro3Message();
   \   00000064   1C108DE2           ADD      R1,SP,#+28
   \   00000068   ........           _BLF     ??Get_ANPro3Message,??Get_ANPro3Message??rA
   \   0000006C   1C208DE2           ADD      R2,SP,#+28
   \   00000070   261F8FE2           ADR      R1,??SendNEMA_5  ;; "SA"
   \   00000074   0D00A0E1           MOV      R0,SP
   \   00000078   ........           _BLF     `??operator+_1`,`??operator+??rA_2`
   \   0000007C   0D10A0E1           MOV      R1,SP
   \   00000080   54008DE2           ADD      R0,SP,#+84
   \   00000084   ........           _BLF     ??AnsiString_3,??AnsiString??rA_3
   \   00000088   0020A0E3           MOV      R2,#+0
   \   0000008C   0110A0E3           MOV      R1,#+1
   \   00000090   0D00A0E1           MOV      R0,SP
   \   00000094   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000098   0020A0E3           MOV      R2,#+0
   \   0000009C   0110A0E3           MOV      R1,#+1
   \   000000A0   1C008DE2           ADD      R0,SP,#+28
   \   000000A4   ........           _BLF     ??_Tidy,??_Tidy??rA
   1481          
   1482                          SendString(PortPtr, tmpStr);
   \   000000A8   54108DE2           ADD      R1,SP,#+84
   \   000000AC   38008DE2           ADD      R0,SP,#+56
   \   000000B0   ........           _BLF     ??string,??string??rA
   \   000000B4   38208DE2           ADD      R2,SP,#+56
   \   000000B8   0510A0E1           MOV      R1,R5
   \   000000BC   0400A0E1           MOV      R0,R4
   \   000000C0   ........           BL       ??SendString
   \   000000C4   0020A0E3           MOV      R2,#+0
   \   000000C8   0110A0E3           MOV      R1,#+1
   \   000000CC   38008DE2           ADD      R0,SP,#+56
   \   000000D0   ........           _BLF     ??_Tidy,??_Tidy??rA
   1483                          HasSendtAlarms = true;
   \   000000D4   0160A0E3           MOV      R6,#+1
   1484                      }
   \   000000D8   0020A0E3           MOV      R2,#+0
   \   000000DC   0110A0E3           MOV      R1,#+1
   \   000000E0   54008DE2           ADD      R0,SP,#+84
   \   000000E4   ........           _BLF     ??_Tidy,??_Tidy??rA
   1485                  }
   \                     ??SendNEMA_4:
   \   000000E8   019089E2           ADD      R9,R9,#+1
   \                     ??SendNEMA_2:
   \   000000EC   070059E1           CMP      R9,R7
   \   000000F0   D5FFFF3A           BCC      ??SendNEMA_3
   1486                  AlarmList->RemoveAllNodes();
   \   000000F4   540294E5           LDR      R0,[R4, #+596]
   \   000000F8   ........           _BLF     ??RemoveAllNodes,??RemoveAllNodes??rA
   1487                  AlarmList->UnProtect();
   \   000000FC   540294E5           LDR      R0,[R4, #+596]
   \   00000100   ........           _BLF     ??UnProtect,??UnProtect??rA
   1488              }
   1489              return HasSendtAlarms;
   \                     ??SendNEMA_1:
   \   00000104   0600A0E1           MOV      R0,R6
   \   00000108   70D08DE2           ADD      SP,SP,#+112
   \   0000010C   ........           B        ?Subroutine34
   \                     ??SendNEMA_5:
   \   00000110   53410000           DC8      "SA",+0
   1490          }

   \                                 In segment CODE, align 4, keep-with-next
   1491          void AnPro3object::ANPRO3Task(TSNUart *PortPtr) {
   \                     ??ANPRO3Task:
   \   00000000   F0402DE9           PUSH     {R4-R7,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
   1492              // Just try one time to restart the task before a complete restart
   1493              SortANPRO3KeywordList();
   \   0000000C   ........           BL       ??SortANPRO3KeywordList
   1494              SetAlarmList();
   \   00000010   0400A0E1           MOV      R0,R4
   \   00000014   ........           BL       ??SetAlarmList
   1495              if (SendAlarmsOnly) {
   \   00000018   F101D4E5           LDRB     R0,[R4, #+497]
   \   0000001C   000050E3           CMP      R0,#+0
   \   00000020   0700000A           BEQ      ??ANPRO3Task_1
   1496                  while (true) {
   1497                      if (!SendALarms(PortPtr)) {
   \                     ??ANPRO3Task_2:
   \   00000024   0510A0E1           MOV      R1,R5
   \   00000028   0400A0E1           MOV      R0,R4
   \   0000002C   ........           BL       ??SendALarms
   \   00000030   000050E3           CMP      R0,#+0
   \   00000034   FAFFFF1A           BNE      ??ANPRO3Task_2
   1498                          TSN_Delay(Delay);
   \   00000038   E80194E5           LDR      R0,[R4, #+488]
   \   0000003C   ........           _BLF     OS_Delay,??OS_Delay??rA
   \   00000040   F7FFFFEA           B        ??ANPRO3Task_2
   1499                      }
   1500                  }
   1501              } else if (isNEMA) {
   \                     ??ANPRO3Task_1:
   \   00000044   4801D4E5           LDRB     R0,[R4, #+328]
   \   00000048   000050E3           CMP      R0,#+0
   \   0000004C   0700000A           BEQ      ??ANPRO3Task_3
   1502                  while (true) {
   1503                      if (!SendNEMA(PortPtr)) {
   \                     ??ANPRO3Task_4:
   \   00000050   0510A0E1           MOV      R1,R5
   \   00000054   0400A0E1           MOV      R0,R4
   \   00000058   ........           BL       ??SendNEMA
   \   0000005C   000050E3           CMP      R0,#+0
   \   00000060   FAFFFF1A           BNE      ??ANPRO3Task_4
   1504                          TSN_Delay(Delay);
   \   00000064   E80194E5           LDR      R0,[R4, #+488]
   \   00000068   ........           _BLF     OS_Delay,??OS_Delay??rA
   \   0000006C   F7FFFFEA           B        ??ANPRO3Task_4
   1505                      }
   1506                  }
   1507              } else if (RequestMode) {
   \                     ??ANPRO3Task_3:
   \   00000070   C001D4E5           LDRB     R0,[R4, #+448]
   \   00000074   000050E3           CMP      R0,#+0
   \   00000078   0300000A           BEQ      ??ANPRO3Task_5
   1508                  while (true) {
   1509                      HandleRequest(PortPtr);
   \                     ??ANPRO3Task_6:
   \   0000007C   0510A0E1           MOV      R1,R5
   \   00000080   0400A0E1           MOV      R0,R4
   \   00000084   ........           BL       ??HandleRequest
   \   00000088   FBFFFFEA           B        ??ANPRO3Task_6
   1510                  }
   1511              } else if (!SysDataValTable.empty() || !TnkDataValTable.empty() || !LPrDataValTable.empty() || !TmpDataValTable.empty()) {
   \                     ??ANPRO3Task_5:
   \   0000008C   640F84E2           ADD      R0,R4,#+400
   \   00000090   ........           _BLF     ??empty_1,??empty??rA
   \   00000094   000050E3           CMP      R0,#+0
   \   00000098   0B00000A           BEQ      ??ANPRO3Task_7
   \   0000009C   670F84E2           ADD      R0,R4,#+412
   \   000000A0   ........           _BLF     ??empty_1,??empty??rA
   \   000000A4   000050E3           CMP      R0,#+0
   \   000000A8   0700000A           BEQ      ??ANPRO3Task_7
   \   000000AC   6A0F84E2           ADD      R0,R4,#+424
   \   000000B0   ........           _BLF     ??empty_1,??empty??rA
   \   000000B4   000050E3           CMP      R0,#+0
   \   000000B8   0300000A           BEQ      ??ANPRO3Task_7
   \   000000BC   6D0F84E2           ADD      R0,R4,#+436
   \   000000C0   ........           _BLF     ??empty_1,??empty??rA
   \   000000C4   000050E3           CMP      R0,#+0
   \   000000C8   1B00001A           BNE      ??ANPRO3Task_8
   1512                  // First we want to wait for a while to get other things up and running
   1513                  TSN_Delay(15000);
   \                     ??ANPRO3Task_7:
   \   000000CC   ........           LDR      R6,??Subroutine32_0  ;; ??ANPro3XRefList
   \   000000D0   9800A0E3           MOV      R0,#+152
   \   000000D4   E80D80E3           ORR      R0,R0,#0x3A00
   \   000000D8   ........           _BLF     OS_Delay,??OS_Delay??rA
   1514                  // Now enter our forever loop
   1515                  while (true) {
   1516                      // Deal with the system data separately
   1517                      SendSysInfo(PortPtr);
   \                     ??ANPRO3Task_9:
   \   000000DC   0510A0E1           MOV      R1,R5
   \   000000E0   0400A0E1           MOV      R0,R4
   \   000000E4   ........           BL       ??SendSysInfo
   1518                      SendALarms(PortPtr);
   \   000000E8   0510A0E1           MOV      R1,R5
   \   000000EC   0400A0E1           MOV      R0,R4
   \   000000F0   ........           BL       ??SendALarms
   1519                      if (!PROXRefObject::ANPro3XRefList.empty()) {
   \   000000F4   100096E5           LDR      R0,[R6, #+16]
   \   000000F8   000050E3           CMP      R0,#+0
   \   000000FC   F6FFFF0A           BEQ      ??ANPRO3Task_9
   1520                          multimap<int, PROXRefObject *>::iterator pBIt;
   1521                          for (pBIt = PROXRefObject::ANPro3XRefList.begin(); pBIt != PROXRefObject::ANPro3XRefList.end(); pBIt++) {
   \   00000100   007096E5           LDR      R7,[R6, #+0]
   \                     ??ANPRO3Task_10:
   \   00000104   060057E1           CMP      R7,R6
   \   00000108   F3FFFF0A           BEQ      ??ANPRO3Task_9
   1522                              PROXRefObject *TmpPtr = (*pBIt).second;
   1523                              SendObject(PortPtr, TmpPtr);
   \   0000010C   142097E5           LDR      R2,[R7, #+20]
   \   00000110   0030A0E3           MOV      R3,#+0
   \   00000114   0510A0E1           MOV      R1,R5
   \   00000118   0400A0E1           MOV      R0,R4
   \   0000011C   ........           BL       ??SendObject
   1524                              SendALarms(PortPtr);
   \   00000120   0510A0E1           MOV      R1,R5
   \   00000124   0400A0E1           MOV      R0,R4
   \   00000128   ........           BL       ??SendALarms
   1525                          }
   \   0000012C   0700A0E1           MOV      R0,R7
   \   00000130   ........           _BLF     ??_IncP,??_IncP??rA
   \   00000134   0070A0E1           MOV      R7,R0
   \   00000138   F1FFFFEA           B        ??ANPRO3Task_10
   1526                      }
   1527                  }
   1528              }
   1529          }
   \                     ??ANPRO3Task_8:
   \   0000013C                      REQUIRE ?Subroutine32
   \   0000013C                      ;; // Fall through to label ?Subroutine32
   1530          

   \                                 In segment CODE, align 4, keep-with-next
   1531          int AnPro3object::ReceiveData(U8 *data) {
   1532              int                    ErrorStatus = E_OK;
   1533              ANPRO10_CommandHeading *pCH        = (ANPRO10_CommandHeading *)data;
   1534              switch (pCH->CommandNo) {
   1535              default:
   1536                  ErrorStatus = E_UNKNOWN_COMMAND;
   1537                  break;
   1538              }
   1539              return (ErrorStatus);
   \                     ??ReceiveData:
   \   00000000   ........           B        ?Subroutine35
   1540          }

   \                                 In segment CODE, align 4, keep-with-next
   \                     ?Subroutine35:
   \   00000000   0100A0E3           MOV      R0,#+1
   \   00000004   1EFF2FE1           BX       LR               ;; return
   1541          
   1542          //#pragma optimize=none

   \                                 In segment CODE, align 4, keep-with-next
   1543          int AnPro3object::SendData(U16 SendCmd) {
   1544              int ErrorStatus = E_OK;
   1545          
   1546              switch (SendCmd) {
   1547              case CMD_GENERIC_REALTIME_DATA:
   1548              case CMD_GENERIC_STATIC_DATA:
   1549              default:
   1550                  ErrorStatus =  E_UNKNOWN_COMMAND;
   1551                  break;
   1552              }
   1553              return (ErrorStatus);
   \                     ??SendData:
   \   00000000                      REQUIRE ?Subroutine35
   \   00000000                      ;; // Fall through to label ?Subroutine35
   1554          }
   1555          
   1556          
   1557          

   \                                 In segment CODE, align 4, keep-with-next
   1558          AnPro3object* AnPro3object::FindANPRO3Object(int portNo) {
   \                     ??FindANPRO3Object:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   1559              if (!AnPro3objectVector.empty()) {
   \   00000004   ........           LDR      R5,??DataTable47  ;; ??ObjectSet
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   180085E2           ADD      R0,R5,#+24
   \   00000010   ........           _BLF     ??empty,??empty??rA_1
   \   00000014   000050E3           CMP      R0,#+0
   \   00000018   1200001A           BNE      ??FindANPRO3Object_1
   1560                  for (unsigned i = 0; i < AnPro3objectVector.size(); i++) {
   \   0000001C   182095E5           LDR      R2,[R5, #+24]
   \   00000020   0010A0E3           MOV      R1,#+0
   \   00000024   000000EA           B        ??FindANPRO3Object_2
   \                     ??FindANPRO3Object_3:
   \   00000028   011081E2           ADD      R1,R1,#+1
   \                     ??FindANPRO3Object_2:
   \   0000002C   1C0095E5           LDR      R0,[R5, #+28]
   \   00000030   020040E0           SUB      R0,R0,R2
   \   00000034   200151E1           CMP      R1,R0, LSR #+2
   \   00000038   0A00002A           BCS      ??FindANPRO3Object_1
   1561                      AnPro3object *TempElement = AnPro3objectVector[i];
   \   0000003C   010192E7           LDR      R0,[R2, +R1, LSL #+2]
   1562                      if ((portNo == TempElement->WinUart)
   1563                          && (TempElement->TCUAddress == PROTanksystemUnit::MySelf->TCUAddress)) {
   \   00000040   8C3190E5           LDR      R3,[R0, #+396]
   \   00000044   030054E1           CMP      R4,R3
   \   00000048   F6FFFF1A           BNE      ??FindANPRO3Object_3
   \   0000004C   1CC09FE5           LDR      R12,??FindANPRO3Object_4  ;; ??MySelf
   \   00000050   883190E5           LDR      R3,[R0, #+392]
   \   00000054   00C09CE5           LDR      R12,[R12, #+0]
   \   00000058   30C39CE5           LDR      R12,[R12, #+816]
   \   0000005C   0C0053E1           CMP      R3,R12
   \   00000060   F0FFFF1A           BNE      ??FindANPRO3Object_3
   1564                          return (TempElement); // Quick and dirty, simply return
   \   00000064   000000EA           B        ??FindANPRO3Object_5
   1565                      }
   1566                  }
   1567              }
   1568              return (NULL);
   \                     ??FindANPRO3Object_1:
   \   00000068   0000A0E3           MOV      R0,#+0
   \                     ??FindANPRO3Object_5:
   \   0000006C   ........           B        ?Subroutine30
   \                     ??FindANPRO3Object_4:
   \   00000070   ........           DC32     ??MySelf
   1569          }

   \                                 In segment DATA_ID, align 4, align-sorted
   \                     `?<Initializer for SizeofSelectTankValueList>`:
   \   00000000   17000000           DC32 23
   \                     `?<Initializer for SizeofSelectAllSysValList>`:
   \   00000004   0F000000           DC32 15
   \                     `?<Initializer for SizeofSelectLPressValueList>`:
   \   00000008   01000000           DC32 1
   \                     `?<Initializer for SizeofSelectTempValueList>`:
   \   0000000C   04000000           DC32 4
   \                     `?<Initializer for SelectTankValueList>`:
   \   00000010   A5020000ED00       DC32 677, 237, 1001, 307, 237, 1042, 306, 237, 1043, 316, 237, 1027
   \              0000E9030000
   \              33010000ED00
   \              000012040000
   \              32010000ED00
   \              000013040000
   \              3C010000ED00
   \              000003040000
   \   00000040   35010000ED00       DC32 309, 237, 1003, 916, 917, 1008, 1064, 1065, 1009, 44, 237, 1020
   \              0000EB030000
   \              940300009503
   \              0000F0030000
   \              280400002904
   \              0000F1030000
   \              2C000000ED00
   \              0000FC030000
   \   00000070   36010000ED00       DC32 310, 237, 1022, 776, 777, 1031, 45, 237, 1021, 83, 237, 1006, 338
   \              0000FE030000
   \              080300000903
   \              000007040000
   \              2D000000ED00
   \              0000FD030000
   \              53000000ED00
   \              0000EE030000
   \              52010000    
   \   000000A4   ED000000EC03       DC32 237, 1004, 360, 237, 1072, 361, 237, 1073, 362, 237, 1074, 363
   \              000068010000
   \              ED0000003004
   \              000069010000
   \              ED0000003104
   \              00006A010000
   \              ED0000003204
   \              00006B010000
   \   000000D4   ED0000003504       DC32 237, 1077, 311, 237, 1024, 247, 237, 1023, 314, 237, 1053, 315
   \              000037010000
   \              ED0000000004
   \              0000F7000000
   \              ED000000FF03
   \              00003A010000
   \              ED0000001D04
   \              00003B010000
   \   00000104   ED0000001E04       DC32 237, 1054, 316, 237, 2002, 848, 237, 1032
   \              00003C010000
   \              ED000000D207
   \              000050030000
   \              ED0000000804
   \              0000        
   \                     `?<Initializer for SelectAllSysValList>`:
   \   00000124   94010000....       DC32 404, ??PROAtmRefPtr, 1351, 768, ??TXUSystemData, 1357, 425
   \              ....47050000
   \              00030000....
   \              ....4D050000
   \              A9010000    
   \   00000140   ........5505       DC32 ??TXUSystemData, 1365, 426, ??TXUSystemData, 1355, 768
   \              0000AA010000
   \              ........4B05
   \              000000030000
   \   00000158   ........5205       DC32 ??TXUSystemData, 1362, 427, ??TXUSystemData, 1366, 447
   \              0000AB010000
   \              ........5605
   \              0000BF010000
   \   00000170   ........5105       DC32 ??PRODraftSysPtr, 1361, 428, ??PRODraftSysPtr, 1504, 429
   \              0000AC010000
   \              ........E005
   \              0000AD010000
   \   00000188   ........E305       DC32 ??PRODraftSysPtr, 1507, 430, ??PRODraftSysPtr, 1505, 431
   \              0000AE010000
   \              ........E105
   \              0000AF010000
   \   000001A0   ........E405       DC32 ??PRODraftSysPtr, 1508, 432, ??PRODraftSysPtr, 1506, 433
   \              0000B0010000
   \              ........E205
   \              0000B1010000
   \   000001B8   ........E505       DC32 ??PRODraftSysPtr, 1509, 421, ??PRODraftSysPtr, 1511, 422
   \              0000A5010000
   \              ........E705
   \              0000A6010000
   \   000001D0   ........E605       DC32 ??PRODraftSysPtr, 1510
   \              0000        
   \                     `?<Initializer for SelectLPressValueList>`:
   \   000001D8   37010000ED00       DC32 311, 237, 1024
   \              000000040000
   \                     `?<Initializer for SelectTempValueList>`:
   \   000001E4   0B000000ED00       DC32 11, 237, 1004, 360, 237, 1072, 361, 237, 1073, 362, 237, 1074
   \              0000EC030000
   \              68010000ED00
   \              000030040000
   \              69010000ED00
   \              000031040000
   \              6A010000ED00
   \              000032040000

   \                                 In segment DATA_ID, align 4, align-sorted
   \                     `?<Initializer for ValueKey>`:
   \   00000000   544F00             DC8 "TO"
   \   00000003   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000013   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00          
   \   00000020   01000000           DC32 1
   \   00000024   534F00             DC8 "SO"
   \   00000027   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000037   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00          
   \   00000044   02000000           DC32 2
   \   00000048   4C504F00           DC8 "LPO"
   \   0000004C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000005C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \   00000068   03000000           DC32 3
   \   0000006C   546952443100       DC8 "TiRD1"
   \   00000072   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000082   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              00000000    
   \   0000008C   04000000           DC32 4
   \   00000090   546952543100       DC8 "TiRT1"
   \   00000096   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000000A6   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              00000000    
   \   000000B0   05000000           DC32 5
   \   000000B4   546952443200       DC8 "TiRD2"
   \   000000BA   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000000CA   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              00000000    
   \   000000D4   06000000           DC32 6
   \   000000D8   546952543200       DC8 "TiRT2"
   \   000000DE   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000000EE   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              00000000    
   \   000000F8   07000000           DC32 7
   \   000000FC   5469436F6600       DC8 "TiCof"
   \   00000102   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000112   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              00000000    
   \   0000011C   08000000           DC32 8
   \   00000120   546944454E00       DC8 "TiDEN"
   \   00000126   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000136   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              00000000    
   \   00000140   09000000           DC32 9
   \   00000144   546943547900       DC8 "TiCTy"
   \   0000014A   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000015A   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              00000000    
   \   00000164   0B000000           DC32 11
   \   00000168   5469566F6C00       DC8 "TiVol"
   \   0000016E   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000017E   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              00000000    
   \   00000188   10000000           DC32 16
   \   0000018C   546957677400       DC8 "TiWgt"
   \   00000192   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000001A2   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              00000000    
   \   000001AC   11000000           DC32 17
   \   000001B0   546F4C4600         DC8 "ToLF"
   \   000001B5   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000001C5   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0000000000  
   \   000001D0   0C000000           DC32 12
   \   000001D4   546F4C5200         DC8 "ToLR"
   \   000001D9   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000001E9   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0000000000  
   \   000001F4   0D000000           DC32 13
   \   000001F8   546F5300           DC8 "ToS"
   \   000001FC   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000020C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \   00000218   23000000           DC32 35
   \   0000021C   546F554600         DC8 "ToUF"
   \   00000221   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000231   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0000000000  
   \   0000023C   0E000000           DC32 14
   \   00000240   546F555200         DC8 "ToUR"
   \   00000245   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000255   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0000000000  
   \   00000260   0F000000           DC32 15
   \   00000264   546F564600         DC8 "ToVF"
   \   00000269   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000279   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0000000000  
   \   00000284   10000000           DC32 16
   \   00000288   546F5700           DC8 "ToW"
   \   0000028C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000029C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \   000002A8   11000000           DC32 17
   \   000002AC   546F4400           DC8 "ToD"
   \   000002B0   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000002C0   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \   000002CC   0A000000           DC32 10
   \   000002D0   546F5400           DC8 "ToT"
   \   000002D4   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000002E4   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \   000002F0   13000000           DC32 19
   \   000002F4   546F5600           DC8 "ToV"
   \   000002F8   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000308   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \   00000314   14000000           DC32 20
   \   00000318   53695357446E       DC8 "SiSWDns"
   \              7300        
   \   00000320   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000330   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0
   \              0000        
   \   00000338   16000000           DC32 22
   \   0000033C   53694257446E       DC8 "SiBWDns"
   \              7300        
   \   00000344   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000354   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0
   \              0000        
   \   0000035C   17000000           DC32 23
   \   00000360   536F547200         DC8 "SoTr"
   \   00000365   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000375   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0000000000  
   \   00000380   18000000           DC32 24
   \   00000384   536F4C6900         DC8 "SoLi"
   \   00000389   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000399   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0000000000  
   \   000003A4   19000000           DC32 25
   \   000003A8   536F444600         DC8 "SoDF"
   \   000003AD   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000003BD   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0000000000  
   \   000003C8   1A000000           DC32 26
   \   000003CC   536F445000         DC8 "SoDP"
   \   000003D1   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000003E1   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0000000000  
   \   000003EC   1B000000           DC32 27
   \   000003F0   536F445300         DC8 "SoDS"
   \   000003F5   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000405   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0000000000  
   \   00000410   1C000000           DC32 28
   \   00000414   536F444100         DC8 "SoDA"
   \   00000419   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000429   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0000000000  
   \   00000434   1D000000           DC32 29
   \   00000438   536F416C6C00       DC8 "SoAll"
   \   0000043E   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000044E   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              00000000    
   \   00000458   20000000           DC32 32
   \   0000045C   4C4F00             DC8 "LO"
   \   0000045F   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000046F   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00          
   \   0000047C   1E000000           DC32 30
   \   00000480   544F757400         DC8 "TOut"
   \   00000485   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000495   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0000000000  
   \   000004A0   1F000000           DC32 31

   \                                 In segment DIFUNCT, align 4, keep-with-next, root
   \   00000000                      REQUIRE ?call_ctors
   \   00000000   ........           DC32    ??__sti__routine

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "ANPRO3">`:
   \   00000000   414E50524F33       DC8 "ANPRO3"
   \              00          
   \   00000007   00                 DC8 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "HIPR">`:
   \   00000000   4849505200         DC8 "HIPR"
   \   00000005   000000             DC8 0, 0, 0
   \   00000008   484949475000       DC8 "HIIGP"
   \   0000000E   0000               DC8 0, 0
   \   00000010   583148495052       DC8 "X1HIPR"
   \              00          
   \   00000017   00                 DC8 0
   \   00000018   583248495052       DC8 "X2HIPR"
   \              00          
   \   0000001F   00                 DC8 0
   \   00000020   4C45434800         DC8 "LECH"
   \   00000025   000000             DC8 0, 0, 0
   \   00000028   4C4F4C5200         DC8 "LOLR"
   \   0000002D   000000             DC8 0, 0, 0
   \   00000030   48494C5200         DC8 "HILR"
   \   00000035   000000             DC8 0, 0, 0
   \   00000038   4C4F544500         DC8 "LOTE"
   \   0000003D   000000             DC8 0, 0, 0
   \   00000040   4C4F42544500       DC8 "LOBTE"
   \   00000046   0000               DC8 0, 0
   \   00000048   4849544500         DC8 "HITE"
   \   0000004D   000000             DC8 0, 0, 0
   \   00000050   4444494600         DC8 "DDIF"
   \   00000055   000000             DC8 0, 0, 0
   \   00000058   484942544500       DC8 "HIBTE"
   \   0000005E   0000               DC8 0, 0
   \   00000060   4857414C00         DC8 "HWAL"
   \   00000065   000000             DC8 0, 0, 0
   \   00000068   4C4F4C4500         DC8 "LOLE"
   \   0000006D   000000             DC8 0, 0, 0
   \   00000070   4C4F4C4F4C45       DC8 "LOLOLE"
   \              00          
   \   00000077   00                 DC8 0
   \   00000078   48494C4500         DC8 "HILE"
   \   0000007D   000000             DC8 0, 0, 0
   \   00000080   4F56455200         DC8 "OVER"
   \   00000085   000000             DC8 0, 0, 0
   \   00000088   4C4F49475000       DC8 "LOIGP"
   \   0000008E   0000               DC8 0, 0
   \   00000090   4C4F505200         DC8 "LOPR"
   \   00000095   000000             DC8 0, 0, 0
   \   00000098   58314C4F5052       DC8 "X1LOPR"
   \              00          
   \   0000009F   00                 DC8 0
   \   000000A0   58324C4F5052       DC8 "X2LOPR"
   \              00          
   \   000000A7   00                 DC8 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant {1357, 1362, 1506, 1509, 1511, 1510`:
   \   00000000   4D0500005205       DC32 1357, 1362, 1506, 1509, 1511, 1510
   \              0000E2050000
   \              E5050000E705
   \              0000E6050000
   \   00000018   2563252E2A66       DC8 "%c%.*f"
   \              00          
   \   0000001F   00                 DC8 0
   \   00000020   556E6B6E6F77       DC8 "Unknown code"
   \              6E20636F6465
   \              00          
   \   0000002D   000000             DC8 0, 0, 0
   \   00000030   54616E6B2075       DC8 "Tank unknown "
   \              6E6B6E6F776E
   \              2000        
   \   0000003E   0000               DC8 0, 0
   \   00000040   57726F6E6720       DC8 "Wrong format before tank "
   \              666F726D6174
   \              206265666F72
   \              652074616E6B
   \              2000        
   \   0000005A   0000               DC8 0, 0
   \   0000005C   556E65787065       DC8 "Unexpected end of data before tank "
   \              637465642065
   \              6E64206F6620
   \              646174612062
   \              65666F726520
   \              74616E6B2000
   \   00000080   43616E206E6F       DC8 "Can not understand last index!"
   \              7420756E6465
   \              727374616E64
   \              206C61737420
   \              696E64657821
   \              00          
   \   0000009F   00                 DC8 0
   \   000000A0   43616E206E6F       DC8 "Can not understand first index!"
   \              7420756E6465
   \              727374616E64
   \              206669727374
   \              20696E646578
   \              2100        
   \   000000C0   544F4C4600         DC8 "TOLF"
   \   000000C5   000000             DC8 0, 0, 0
   \   000000C8   544F4C5200         DC8 "TOLR"
   \   000000CD   000000             DC8 0, 0, 0
   \   000000D0   544F554600         DC8 "TOUF"
   \   000000D5   000000             DC8 0, 0, 0
   \   000000D8   544F555200         DC8 "TOUR"
   \   000000DD   000000             DC8 0, 0, 0
   \   000000E0   544F564600         DC8 "TOVF"
   \   000000E5   000000             DC8 0, 0, 0
   \   000000E8   544F414C00         DC8 "TOAL"
   \   000000ED   000000             DC8 0, 0, 0
   \   000000F0   25632A2A2A2A       DC8 "%c****"
   \              00          
   \   000000F7   00                 DC8 0
   \   000000F8   534F414C4C00       DC8 "SOALL"
   \   000000FE   0000               DC8 0, 0
   \   00000100   534F545200         DC8 "SOTR"
   \   00000105   000000             DC8 0, 0, 0
   \   00000108   534F4C4900         DC8 "SOLI"
   \   0000010D   000000             DC8 0, 0, 0
   \   00000110   534F444600         DC8 "SODF"
   \   00000115   000000             DC8 0, 0, 0
   \   00000118   534F445000         DC8 "SODP"
   \   0000011D   000000             DC8 0, 0, 0
   \   00000120   534F445300         DC8 "SODS"
   \   00000125   000000             DC8 0, 0, 0
   \   00000128   534F444100         DC8 "SODA"
   \   0000012D   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 1, align-sorted
   \   00000000   534F00             DC8 "SO"

   \                                 In segment DATA_C, align 1, align-sorted
   \   00000000   3000               DC8 "0"

   \                                 In segment DATA_C, align 1, align-sorted
   \   00000000   544F00             DC8 "TO"

   \                                 In segment DATA_C, align 4, align-sorted
   \   00000000   4C504F00           DC8 "LPO"

   \                                 In segment DATA_C, align 1, align-sorted
   \   00000000   404000             DC8 "@@"

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "0x%0X	">`:
   \   00000000   307825305809       DC8 "0x%0X      "
   \              00          
   \   00000007   00                 DC8 0

   \                                 In segment DATA_C, align 1, align-sorted
   \   00000000   534100             DC8 "SA"

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "ANPro3 RefIDNumber %i...">`:
   \   00000000   414E50726F33       DC8 41H, 4EH, 50H, 72H, 6FH, 33H, 20H, 52H
   \              2052        
   \   00000008   656649444E75       DC8 65H, 66H, 49H, 44H, 4EH, 75H, 6DH, 62H
   \              6D62        
   \   00000010   657220256928       DC8 65H, 72H, 20H, 25H, 69H, 28H, 30H, 78H
   \              3078        
   \   00000018   253078292069       DC8 25H, 30H, 78H, 29H, 20H, 69H, 73H, 20H
   \              7320        
   \   00000020   696E636F7272       DC8 69H, 6EH, 63H, 6FH, 72H, 72H, 65H, 63H
   \              6563        
   \   00000028   742E204C696E       DC8 74H, 2EH, 20H, 4CH, 69H, 6EH, 65H, 20H
   \              6520        
   \   00000030   4E756D626572       DC8 4EH, 75H, 6DH, 62H, 65H, 72H, 20H, 25H
   \              2025        
   \   00000038   6900               DC8 69H, 0
   \   0000003A   0000               DC8 0, 0

   \                                 In segment DATA_C, align 1, align-sorted
   \   00000000   00                 DC8 ""

   \                                 In segment DATA_C, align 1, align-sorted
   \   00000000   256900             DC8 "%i"

   \                                 In segment DATA_C, align 1, align-sorted
   \   00000000   4F4B00             DC8 "OK"

   \                                 In segment DATA_C, align 4, align-sorted
   \   00000000   544F5300           DC8 "TOS"

   \                                 In segment DATA_C, align 4, align-sorted
   \   00000000   544F5700           DC8 "TOW"

   \                                 In segment DATA_C, align 4, align-sorted
   \   00000000   544F4400           DC8 "TOD"

   \                                 In segment DATA_C, align 4, align-sorted
   \   00000000   544F5400           DC8 "TOT"

   \                                 In segment DATA_C, align 4, align-sorted
   \   00000000   544F5600           DC8 "TOV"

   \                                 In segment DATA_C, align 1, align-sorted
   \   00000000   4C4F00             DC8 "LO"

   \                                 In segment DATA_C, align 1, align-sorted
   \   00000000   256600             DC8 "%f"

   \                                 In segment DATA_C, align 1, align-sorted
   \   00000000   257300             DC8 "%s"

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs AnPro3object &AnPro3object::new AnPro3object(unsigned int)
   \                     `??new AnPro3object`:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   960FA0E3           MOV      R0,#+600
   \   0000000C   ........           _BLF     `??operator new`,`??operator new??rA`
   \   00000010   000050E3           CMP      R0,#+0
   \   00000014   0100000A           BEQ      `??new AnPro3object_1`
   \   00000018   0410A0E1           MOV      R1,R4
   \   0000001C   ........           BL       ??AnPro3object
   \                     `??new AnPro3object_1`:
   \   00000020   1040BDE8           POP      {R4,LR}
   \   00000024   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   static __??Code32?? __intrinsic __code __interwork __atpcs void __sti__routine()
   \                     ??__sti__routine:
   \   00000000   31402DE9           PUSH     {R0,R4,R5,LR}
   \   00000004   ........           LDR      R4,??DataTable2  ;; ??ObjectSet
   \   00000008   38509FE5           LDR      R5,??__sti__routine_1  ;; ?_0
   \   0000000C   180084E2           ADD      R0,R4,#+24
   \   00000010   ........           _BLF     ??_Zero,??_Zero??rA
   \   00000014   0500A0E1           MOV      R0,R5
   \   00000018   ........           _BLF     __record_needed_destruction,??__record_needed_destruction??rA
   \   0000001C   0110A0E3           MOV      R1,#+1
   \   00000020   0D00A0E1           MOV      R0,SP
   \   00000024   ........           _BLF     __data_memzero,??__data_memzero??rA
   \   00000028   0400A0E1           MOV      R0,R4
   \   0000002C   ........           _BLF     ??_Clear,??_Clear??rA
   \   00000030   0000DDE5           LDRB     R0,[SP, #+0]
   \   00000034   1400C4E5           STRB     R0,[R4, #+20]
   \   00000038   0C0085E2           ADD      R0,R5,#+12
   \   0000003C   ........           _BLF     __record_needed_destruction,??__record_needed_destruction??rA
   \   00000040   3140BDE8           POP      {R0,R4,R5,LR}
   \   00000044   1EFF2FE1           BX       LR               ;; return
   \                     ??__sti__routine_1:
   \   00000048   ........           DC32     ?_0

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable2:
   \   00000000   ........           DC32     ??ObjectSet

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable3:
   \   00000000   ........           DC32     ??npos

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable4:
   \   00000000   ........           DC32     ??__vtbl

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable11:
   \   00000000   ........           DC32     ??ObjectSet

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable14:
   \   00000000   ........           DC32     ??CompareKeywordInTable

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable15:
   \   00000000   ........           DC32     ??ValueKey

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable16:
   \   00000000   ........           DC32     SpaceStr

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable21:
   \   00000000   ........           DC32     CrLfStr

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable25:
   \   00000000   ........           DC32     ??npos

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable32:
   \   00000000   ........           DC32     ??npos

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable40:
   \   00000000   ........           DC32     SpaceStr

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable46:
   \   00000000   ........           DC32     ??npos

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable47:
   \   00000000   ........           DC32     ??ObjectSet
   1570          

   Maximum stack usage in bytes:

     Function                       CSTACK
     --------                       ------
     AnPro3object::ANPRO3Task(TSNUart *)
                                       20
     AnPro3object::AddAlarm(AlarmBasic *)
                                       24
     AnPro3object::AnPro3object(unsigned int)
                                       28
     AnPro3object::ControlCheckSum(char *)
                                       36
     AnPro3object::FindANPRO3Object(int)
                                       12
     AnPro3object::FindValueKey(AnsiString)
                                       44
     AnPro3object::HandleRequest(TSNUart *)
                                     2536
     AnPro3object::Initiate()          40
     AnPro3object::LoadConfigFromFile(TSNConfigString &)
                                      292
     AnPro3object::NextField(char *, char)
                                        0
     AnPro3object::ReceiveData(unsigned char *)
                                        0
     AnPro3object::ReceiveRequest(TSNUart *, char *, int)
                                       52
     AnPro3object::SendALarms(TSNUart *)
                                       84
     AnPro3object::SendData(unsigned short)
                                        0
     AnPro3object::SendLPressure(TSNUart *, int)
                                       16
     AnPro3object::SendNEMA(TSNUart *)
                                      140
     AnPro3object::SendObject(TSNUart *, PROXRefObject *, char *)
                                      292
     AnPro3object::SendString(TSNUart *, AnsiString)
                                      328
     AnPro3object::SendSysInfo(TSNUart *)
                                      168
     AnPro3object::SendTank(TSNUart *, int)
                                       16
     AnPro3object::SendTemperature(TSNUart *, int)
                                       16
     AnPro3object::SetAlarmList()      36
     AnPro3object::SetGlobalProList()
                                       12
     AnPro3object::SetProList()       120
     AnPro3object::SortANPRO3KeywordList()
                                        4
     AnPro3object::WriteConfigToFile(TSNConfigString &)
                                     1328
     AnPro3object::new AnPro3object(unsigned int)
                                        8
     AnPro3object::~AnPro3object()     16
     _Tree<_Tset_traits<AlarmBasic *, less<AlarmBasic *>, allocator<AlarmBasic *>, false>>::_Copy(_Tree<_Tset_traits<AlarmBasic *, less<AlarmBasic *>, allocator<AlarmBasic *>, false>> const &)
                                       12
     _Tree<_Tset_traits<AlarmBasic *, less<AlarmBasic *>, allocator<AlarmBasic *>, false>>::_Copy(_Tree<_Tset_traits<AlarmBasic *, less<AlarmBasic *>, allocator<AlarmBasic *>, false>>::_Nodeptr, _Tree<_Tset_traits<AlarmBasic *, less<AlarmBasic *>, allocator<AlarmBasic *>, false>>::_Nodeptr)
                                       32
     _Tree<_Tset_traits<AlarmBasic *, less<AlarmBasic *>, allocator<AlarmBasic *>, false>>::_Erase(_Tree<_Tset_traits<AlarmBasic *, less<AlarmBasic *>, allocator<AlarmBasic *>, false>>::_Nodeptr)
                                       16
     _Tree<_Tset_traits<AlarmBasic *, less<AlarmBasic *>, allocator<AlarmBasic *>, false>>::_Insert(bool, _Tree<_Tset_traits<AlarmBasic *, less<AlarmBasic *>, allocator<AlarmBasic *>, false>>::_Nodeptr, AlarmBasic *)
                                       24
     _Tree<_Tset_traits<AlarmBasic *, less<AlarmBasic *>, allocator<AlarmBasic *>, false>>::_Lbound(AlarmBasic *) const
                                        0
     _Tree<_Tset_traits<AlarmBasic *, less<AlarmBasic *>, allocator<AlarmBasic *>, false>>::find(AlarmBasic *)
                                       12
     _Tree<_Tset_traits<AlarmBasic *, less<AlarmBasic *>, allocator<AlarmBasic *>, false>>::insert(AlarmBasic *)
                                       44
     _Tree<_Tset_traits<PRogramObject *, less<PRogramObject *>, allocator<PRogramObject *>, false>>::_Erase(_Tree<_Tset_traits<PRogramObject *, less<PRogramObject *>, allocator<PRogramObject *>, false>>::_Nodeptr)
                                       16
     _Tree<_Tset_traits<PRogramObject *, less<PRogramObject *>, allocator<PRogramObject *>, false>>::_Insert(bool, _Tree<_Tset_traits<PRogramObject *, less<PRogramObject *>, allocator<PRogramObject *>, false>>::_Nodeptr, PRogramObject *)
                                       24
     _Tree<_Tset_traits<PRogramObject *, less<PRogramObject *>, allocator<PRogramObject *>, false>>::clear()
                                        8
     _Tree<_Tset_traits<PRogramObject *, less<PRogramObject *>, allocator<PRogramObject *>, false>>::insert(PRogramObject *)
                                       44
     _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::_Erase(_Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::_Nodeptr)
                                       16
     _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::_Insert(bool, _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::_Nodeptr, PRogramObjectBase *)
                                       24
     _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::insert(PRogramObjectBase *)
                                       44
     _Tree_algobase<allocator<void>>::_Clear()
                                        0
     _Tree_algobase<allocator<void>>::_DecP(_Tree_algobase<allocator<void>>::_Genptr)
                                        0
     _Tree_algobase<allocator<void>>::_IncP(_Tree_algobase<allocator<void>>::_Genptr)
                                        0
     _Tree_algobase<allocator<void>>::_Insert(bool, _Tree_algobase<allocator<void>>::_Genptr, _Tree_algobase<allocator<void>>::_Genptr)
                                       20
     _Tree_algobase<allocator<void>>::_Lrotate(_Tree_algobase<allocator<void>>::_Genptr)
                                        0
     _Tree_algobase<allocator<void>>::_Rrotate(_Tree_algobase<allocator<void>>::_Genptr)
                                        0
     _Vector_impl<AnPro3object *, allocator<AnPro3object *>>::_Insert(AnPro3object **, AnPro3object * const &)
                                       16
     _Vector_impl<AnPro3object *, allocator<AnPro3object *>>::_Make_room(AnPro3object **, unsigned int)
                                       32
     _Vector_impl<AnPro3object *, allocator<AnPro3object *>>::_Push_back0(AnPro3object *)
                                        8
     _Vector_impl<AnPro3object *, allocator<AnPro3object *>>::_Tidy0()
                                        4
     _Vector_impl<int, allocator<int>>::_Assign(_Vector_impl<int, allocator<int>> const &)
                                       20
     _Vector_impl<int, allocator<int>>::_Insert(int *, int const &)
                                       16
     _Vector_impl<int, allocator<int>>::_Make_room(int *, unsigned int)
                                       32
     _Vector_impl<int, allocator<int>>::_Push_back0(int)
                                        8
     _Vector_impl<int, allocator<int>>::_Tidy0()
                                        4
     _Vector_impl<unsigned int, allocator<unsigned int>>::_Insert(unsigned int *, unsigned int const &)
                                       16
     _Vector_impl<unsigned int, allocator<unsigned int>>::_Make_room(unsigned int *, unsigned int)
                                       32
     _Vector_impl<unsigned int, allocator<unsigned int>>::_Push_back0(unsigned int)
                                        8
     _Vector_impl<unsigned int, allocator<unsigned int>>::_Tidy0()
                                        4
     _Vector_value<allocator<void>>::_Zero()
                                        0
     __sti__routine()                  16
     operator+(char const *, string const &)
                                       44
     operator+(string const &, char)
                                       40
     operator+(string const &, string const &)
                                       40
     set<AlarmBasic *>::set()          12
     set<AlarmBasic *>::~set()          8
     set<PRogramObjectBase *>::~set()
                                        8
     string::string(string const &)    12
     vector<AnPro3object *>::empty() const
                                        0
     vector<AnPro3object *>::~vector()
                                        8
     vector<int>::empty() const         0


   Segment part sizes:

     Function/Label                 Bytes
     --------------                 -----
     string::string(string const &)   64
     _Tree_algobase<allocator<void>>::_DecP(_Tree_algobase<allocator<void>>::_Genptr)
                                     100
     _Tree_algobase<allocator<void>>::_IncP(_Tree_algobase<allocator<void>>::_Genptr)
                                      92
     _Tree_algobase<allocator<void>>::_Clear()
                                      36
     _Tree_algobase<allocator<void>>::_Rrotate(_Tree_algobase<allocator<void>>::_Genptr)
                                      84
     _Tree_algobase<allocator<void>>::_Lrotate(_Tree_algobase<allocator<void>>::_Genptr)
                                      84
     _Tree_algobase<allocator<void>>::_Insert(bool, _Tree_algobase<allocator<void>>::_Genptr, _Tree_algobase<allocator<void>>::_Genptr)
                                     356
     _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::insert(PRogramObjectBase *)
                                     200
     _Tree<_Tset_traits<AlarmBasic *, less<AlarmBasic *>, allocator<AlarmBasic *>, false>>::insert(AlarmBasic *)
                                     200
     _Tree<_Tset_traits<PRogramObject *, less<PRogramObject *>, allocator<PRogramObject *>, false>>::insert(PRogramObject *)
                                     200
     _Tree<_Tset_traits<PRogramObject *, less<PRogramObject *>, allocator<PRogramObject *>, false>>::clear()
                                      32
     _Tree<_Tset_traits<AlarmBasic *, less<AlarmBasic *>, allocator<AlarmBasic *>, false>>::find(AlarmBasic *)
                                      48
     _Tree<_Tset_traits<AlarmBasic *, less<AlarmBasic *>, allocator<AlarmBasic *>, false>>::_Copy(_Tree<_Tset_traits<AlarmBasic *, less<AlarmBasic *>, allocator<AlarmBasic *>, false>> const &)
                                     136
     _Tree<_Tset_traits<AlarmBasic *, less<AlarmBasic *>, allocator<AlarmBasic *>, false>>::_Copy(_Tree<_Tset_traits<AlarmBasic *, less<AlarmBasic *>, allocator<AlarmBasic *>, false>>::_Nodeptr, _Tree<_Tset_traits<AlarmBasic *, less<AlarmBasic *>, allocator<AlarmBasic *>, false>>::_Nodeptr)
                                     148
     _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::_Erase(_Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::_Nodeptr)
                                      68
     _Tree<_Tset_traits<AlarmBasic *, less<AlarmBasic *>, allocator<AlarmBasic *>, false>>::_Erase(_Tree<_Tset_traits<AlarmBasic *, less<AlarmBasic *>, allocator<AlarmBasic *>, false>>::_Nodeptr)
                                      68
     _Tree<_Tset_traits<PRogramObject *, less<PRogramObject *>, allocator<PRogramObject *>, false>>::_Erase(_Tree<_Tset_traits<PRogramObject *, less<PRogramObject *>, allocator<PRogramObject *>, false>>::_Nodeptr)
                                      68
     _Tree<_Tset_traits<AlarmBasic *, less<AlarmBasic *>, allocator<AlarmBasic *>, false>>::_Insert(bool, _Tree<_Tset_traits<AlarmBasic *, less<AlarmBasic *>, allocator<AlarmBasic *>, false>>::_Nodeptr, AlarmBasic *)
                                      96
     _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::_Insert(bool, _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::_Nodeptr, PRogramObjectBase *)
                                      96
     _Tree<_Tset_traits<PRogramObject *, less<PRogramObject *>, allocator<PRogramObject *>, false>>::_Insert(bool, _Tree<_Tset_traits<PRogramObject *, less<PRogramObject *>, allocator<PRogramObject *>, false>>::_Nodeptr, PRogramObject *)
                                      96
     _Tree<_Tset_traits<AlarmBasic *, less<AlarmBasic *>, allocator<AlarmBasic *>, false>>::_Lbound(AlarmBasic *) const
                                      40
     set<PRogramObjectBase *>::~set()
                                      32
     set<AlarmBasic *>::~set()        32
     set<AlarmBasic *>::set()         48
     _Vector_value<allocator<void>>::_Zero()
                                      20
     _Vector_impl<int, allocator<int>>::_Tidy0()
                                      36
     _Vector_impl<unsigned int, allocator<unsigned int>>::_Tidy0()
                                      36
     _Vector_impl<AnPro3object *, allocator<AnPro3object *>>::_Tidy0()
                                      36
     _Vector_impl<int, allocator<int>>::_Assign(_Vector_impl<int, allocator<int>> const &)
                                     224
     _Vector_impl<unsigned int, allocator<unsigned int>>::_Insert(unsigned int *, unsigned int const &)
                                      72
     _Vector_impl<int, allocator<int>>::_Insert(int *, int const &)
                                      72
     _Vector_impl<AnPro3object *, allocator<AnPro3object *>>::_Insert(AnPro3object **, AnPro3object * const &)
                                      72
     _Vector_impl<int, allocator<int>>::_Make_room(int *, unsigned int)
                                     232
     _Vector_impl<AnPro3object *, allocator<AnPro3object *>>::_Make_room(AnPro3object **, unsigned int)
                                     232
     _Vector_impl<unsigned int, allocator<unsigned int>>::_Make_room(unsigned int *, unsigned int)
                                     232
     _Vector_impl<AnPro3object *, allocator<AnPro3object *>>::_Push_back0(AnPro3object *)
                                      72
     _Vector_impl<int, allocator<int>>::_Push_back0(int)
                                      72
     _Vector_impl<unsigned int, allocator<unsigned int>>::_Push_back0(unsigned int)
                                      72
     vector<AnPro3object *>::~vector()
                                      28
     vector<AnPro3object *>::empty() const
                                      32
     vector<int>::empty() const       32
     operator+(string const &, string const &)
                                      88
     operator+(char const *, string const &)
                                     128
     operator+(string const &, char)
                                      76
     SizeofSelectTankValueList       532
     ?_0                              24
     AnPro3object::ObjectSet          36
     AnPro3object::AnPro3object(unsigned int)
                                     236
     AnPro3object::Initiate()        176
     ?Subroutine30                     8
     AnPro3object::~AnPro3object()   260
     ?Subroutine29                    52
     AnPro3object::WriteConfigToFile(TSNConfigString &)
                                    4620
     ?Subroutine31                    16
     AnPro3object::LoadConfigFromFile(TSNConfigString &)
                                    2432
     AnPro3object::SetAlarmList()    212
     AnPro3object::SetProList()      272
     ?Subroutine32                    12
     AnPro3object::SetGlobalProList()
                                      64
     AnPro3object::AddAlarm(AlarmBasic *)
                                     108
     ?Subroutine33                    20
     AnPro3object::ValueKey         1188
     AnPro3object::FindValueKey(AnsiString)
                                      88
     AnPro3object::SortANPRO3KeywordList()
                                      32
     AnPro3object::NextField(char *, char)
                                      84
     AnPro3object::SendString(TSNUart *, AnsiString)
                                     924
     ?Subroutine34                    12
     AnPro3object::SendSysInfo(TSNUart *)
                                     508
     AnPro3object::SendObject(TSNUart *, PROXRefObject *, char *)
                                    1680
     AnPro3object::SendTank(TSNUart *, int)
                                      28
     AnPro3object::SendLPressure(TSNUart *, int)
                                      64
     AnPro3object::SendTemperature(TSNUart *, int)
                                      24
     AnPro3object::ReceiveRequest(TSNUart *, char *, int)
                                     460
     AnPro3object::ControlCheckSum(char *)
                                     308
     AnPro3object::HandleRequest(TSNUart *)
                                    6076
     AnPro3object::SendALarms(TSNUart *)
                                     212
     AnPro3object::SendNEMA(TSNUart *)
                                     276
     AnPro3object::ANPRO3Task(TSNUart *)
                                     316
     AnPro3object::ReceiveData(unsigned char *)
                                       4
     ?Subroutine35                     8
     AnPro3object::SendData(unsigned short)
                                       0
     AnPro3object::FindANPRO3Object(int)
                                     116
     ?<Initializer for SizeofSelectTankValueList>
                                     532
     ?<Initializer for ValueKey>    1188
     ?<Constant "ANPRO3">              8
     ?<Constant "HIPR">              168
     ?<Constant {1357, 1362, 1506, 1509, 1511, 1510
                                     304
     ?<Constant "SO">                  3
     ?<Constant "0">                   2
     ?<Constant "TO">                  3
     ?<Constant "LPO">                 4
     ?<Constant "@@">                  3
     ?<Constant "0x%0X	">              8
     ?<Constant "SA">                  3
     ?<Constant "ANPro3 RefIDNumber %i...">
                                      60
     ?<Constant "">                    1
     ?<Constant "%i">                  3
     ?<Constant "OK">                  3
     ?<Constant "TOS">                 4
     ?<Constant "TOW">                 4
     ?<Constant "TOD">                 4
     ?<Constant "TOT">                 4
     ?<Constant "TOV">                 4
     ?<Constant "LO">                  3
     ?<Constant "%f">                  3
     ?<Constant "%s">                  3
     AnPro3object::new AnPro3object(unsigned int)
                                      40
     __sti__routine()                 76
     ??DataTable2                      4
     ??DataTable3                      4
     ??DataTable4                      4
     ??DataTable11                     4
     ??DataTable14                     4
     ??DataTable15                     4
     ??DataTable16                     4
     ??DataTable21                     4
     ??DataTable25                     4
     ??DataTable32                     4
     ??DataTable40                     4
     ??DataTable46                     4
     ??DataTable47                     4
      Others                        1572

 
 25 576 bytes in segment CODE
    750 bytes in segment DATA_C
  1 720 bytes in segment DATA_I
  1 720 bytes in segment DATA_ID
     44 bytes in segment DATA_Z
      4 bytes in segment DIFUNCT
     24 bytes in segment INITTAB
 
 19 880 bytes of CODE  memory (+ 5 724 bytes shared)
  2 470 bytes of CONST memory
  1 764 bytes of DATA  memory

Errors: none
Warnings: none
