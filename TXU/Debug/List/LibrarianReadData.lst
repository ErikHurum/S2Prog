##############################################################################
#                                                                            #
# IAR ARM ANSI C/C++ Compiler V4.42A/W32               14/Sep/2022  15:13:58 #
# Copyright 1999-2005 IAR Systems. All rights reserved.                      #
#                                                                            #
#    Cpu mode        =  interwork                                            #
#    Endian          =  little                                               #
#    Stack alignment =  4                                                    #
#    Source file     =  D:\S2Prog\Shared\Src\LibrarianReadData.cpp           #
#    Command line    =  D:\S2Prog\Shared\Src\LibrarianReadData.cpp --fpu     #
#                       None -D OS_LIBMODE_SP -D CPU_S3C2410 -D              #
#                       OS_RAMVECT=0 -D OS_UART=-1 -D S2TXU -D USE_LZO=1 -D  #
#                       __ARM_LIBRARY__ -D WATCHDOG=1 -D NETWORK=1 -lCN      #
#                       D:\S2Prog\TXU\Debug\List\ -o                         #
#                       D:\S2Prog\TXU\Debug\Obj\ -z9 --debug --cpu_mode arm  #
#                       --endian little --cpu ARM920T --stack_align 4        #
#                       --interwork -e --enable_multibytes --eec++           #
#                       --dlib_config "C:\Program Files (x86)\IAR            #
#                       Systems\Embedded Workbench                           #
#                       4.0\arm\LIB\dl4tpainl8n.h" -I                        #
#                       D:\S2Prog\TXU\GUI\CORE\ -I D:\S2Prog\TXU\GUI\WM\ -I  #
#                       D:\S2Prog\TXU\GUI\WIDGET\ -I D:\S2Prog\TXU\CONFIG\   #
#                       -I D:\S2Prog\TXU\INC\ -I D:\S2Prog\TXU\..\SHARED\INC #
#                       \ -I D:\S2Prog\TXU\..\SHARED\SRC\ -I                 #
#                       D:\S2Prog\TXU\..\SHARED\LZO\minilzo.210\ -I          #
#                       D:\S2Prog\TXU\lwip-1.4.1\src\include\ -I             #
#                       D:\S2Prog\TXU\lwip-1.4.1\src\include\ipv4\ -I        #
#                       D:\S2Prog\TXU\lwip-1.4.1\src\ -I                     #
#                       D:\S2Prog\TXU\..\SHARED\Database\ -I                 #
#                       D:\S2Prog\TXU\src\ -I "C:\Program Files (x86)\IAR    #
#                       Systems\Embedded Workbench 4.0\arm\INC\"             #
#                       --inline_threshold=2                                 #
#    List file       =  D:\S2Prog\TXU\Debug\List\LibrarianReadData.lst       #
#    Object file     =  D:\S2Prog\TXU\Debug\Obj\LibrarianReadData.r79        #
#                                                                            #
#                                                                            #
##############################################################################

D:\S2Prog\Shared\Src\LibrarianReadData.cpp
      1          //---------------------------------------------------------------------------
      2          
      3          #pragma hdrstop
      4          
      5          #include "TSNIncludes.h"

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs string::string(string const &)
   \                     ??string:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
   \   0000000C   0020A0E3           MOV      R2,#+0
   \   00000010   0010A0E3           MOV      R1,#+0
   \   00000014   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000018   1C009FE5           LDR      R0,??string_1    ;; ??npos
   \   0000001C   0020A0E3           MOV      R2,#+0
   \   00000020   003090E5           LDR      R3,[R0, #+0]
   \   00000024   0510A0E1           MOV      R1,R5
   \   00000028   0400A0E1           MOV      R0,R4
   \   0000002C   ........           _BLF     ??assign,??assign??rA
   \   00000030   0400A0E1           MOV      R0,R4
   \   00000034   3040BDE8           POP      {R4,R5,LR}
   \   00000038   1EFF2FE1           BX       LR               ;; return
   \                     ??string_1:
   \   0000003C   ........           DC32     ??npos

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void operator+(string const &, string const &)
   \                     `??operator+`:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   1CD04DE2           SUB      SP,SP,#+28
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   0250A0E1           MOV      R5,R2
   \   00000010   0D00A0E1           MOV      R0,SP
   \   00000014   ........           _BLF     ??string,??string??rA
   \   00000018   34109FE5           LDR      R1,`??operator+_3`  ;; ??npos
   \   0000001C   0020A0E3           MOV      R2,#+0
   \   00000020   003091E5           LDR      R3,[R1, #+0]
   \   00000024   0510A0E1           MOV      R1,R5
   \   00000028   ........           _BLF     ??append,??append??rA
   \   0000002C   0010A0E1           MOV      R1,R0
   \   00000030   0400A0E1           MOV      R0,R4
   \   00000034   ........           _BLF     ??string,??string??rA
   \   00000038   0020A0E3           MOV      R2,#+0
   \   0000003C   0110A0E3           MOV      R1,#+1
   \   00000040   0D00A0E1           MOV      R0,SP
   \   00000044   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000048   1CD08DE2           ADD      SP,SP,#+28
   \   0000004C   3040BDE8           POP      {R4,R5,LR}
   \   00000050   1EFF2FE1           BX       LR               ;; return
   \                     `??operator+_3`:
   \   00000054   ........           DC32     ??npos

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void operator+(char const *, string const &)
   \                     `??operator+_1`:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   1CD04DE2           SUB      SP,SP,#+28
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   0150A0E1           MOV      R5,R1
   \   00000010   0260A0E1           MOV      R6,R2
   \   00000014   0020A0E3           MOV      R2,#+0
   \   00000018   0010A0E3           MOV      R1,#+0
   \   0000001C   0D00A0E1           MOV      R0,SP
   \   00000020   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000024   0500A0E1           MOV      R0,R5
   \   00000028   ........           _BLF     strlen,??strlen??rA
   \   0000002C   0020A0E1           MOV      R2,R0
   \   00000030   0510A0E1           MOV      R1,R5
   \   00000034   0D00A0E1           MOV      R0,SP
   \   00000038   ........           _BLF     ??assign_1,??assign??rA_1
   \   0000003C   38009FE5           LDR      R0,`??operator+_4`  ;; ??npos
   \   00000040   0020A0E3           MOV      R2,#+0
   \   00000044   003090E5           LDR      R3,[R0, #+0]
   \   00000048   0610A0E1           MOV      R1,R6
   \   0000004C   0D00A0E1           MOV      R0,SP
   \   00000050   ........           _BLF     ??append,??append??rA
   \   00000054   0010A0E1           MOV      R1,R0
   \   00000058   0400A0E1           MOV      R0,R4
   \   0000005C   ........           _BLF     ??string,??string??rA
   \   00000060   0020A0E3           MOV      R2,#+0
   \   00000064   0110A0E3           MOV      R1,#+1
   \   00000068   0D00A0E1           MOV      R0,SP
   \   0000006C   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000070   1CD08DE2           ADD      SP,SP,#+28
   \   00000074   7040BDE8           POP      {R4-R6,LR}
   \   00000078   1EFF2FE1           BX       LR               ;; return
   \                     `??operator+_4`:
   \   0000007C   ........           DC32     ??npos

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void operator+(string const &, char const *)
   \                     `??operator+_2`:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   1CD04DE2           SUB      SP,SP,#+28
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   0250A0E1           MOV      R5,R2
   \   00000010   0D00A0E1           MOV      R0,SP
   \   00000014   ........           _BLF     ??string,??string??rA
   \   00000018   0060A0E1           MOV      R6,R0
   \   0000001C   0500A0E1           MOV      R0,R5
   \   00000020   ........           _BLF     strlen,??strlen??rA
   \   00000024   0020A0E1           MOV      R2,R0
   \   00000028   0510A0E1           MOV      R1,R5
   \   0000002C   0600A0E1           MOV      R0,R6
   \   00000030   ........           _BLF     ??append_1,??append??rA_1
   \   00000034   0010A0E1           MOV      R1,R0
   \   00000038   0400A0E1           MOV      R0,R4
   \   0000003C   ........           _BLF     ??string,??string??rA
   \   00000040   0020A0E3           MOV      R2,#+0
   \   00000044   0110A0E3           MOV      R1,#+1
   \   00000048   0D00A0E1           MOV      R0,SP
   \   0000004C   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000050   1CD08DE2           ADD      SP,SP,#+28
   \   00000054   7040BDE8           POP      {R4-R6,LR}
   \   00000058   1EFF2FE1           BX       LR               ;; return
      6          
      7          //---------------------------------------------------------------------------
      8          #ifdef ANWIN
      9              #pragma package(smart_init)
     10          #endif
     11          
     12          
     13          /** Global functions for reading data from Program Objects.
     14           *
     15           *
     16           *
     17           */
     18          
     19          

   \                                 In segment CODE, align 4, keep-with-next
     20          AnsiString LibGetShortValueName(ValueList *VInfoList, int Entries, int ValueId, int *Index) {
   \                     ??LibGetShortValueName:
   \   00000000   F0432DE9           PUSH     {R4-R9,LR}
   \   00000004   38D04DE2           SUB      SP,SP,#+56
   \   00000008   54509DE5           LDR      R5,[SP, #+84]
   \   0000000C   0040A0E1           MOV      R4,R0
   \   00000010   0170A0E1           MOV      R7,R1
   \   00000014   0280A0E1           MOV      R8,R2
   \   00000018   0390A0E1           MOV      R9,R3
     21              AnsiString tmpName;
   \   0000001C   ........           _BLF     ??AnsiString,??AnsiString??rA
     22              int ErrStatus = GETVAL_NO_ERR;
   \   00000020   0060A0E3           MOV      R6,#+0
     23              int ValInfoIndex = LibFind_Value(VInfoList, Entries, ValueId);
   \   00000024   0920A0E1           MOV      R2,R9
   \   00000028   0810A0E1           MOV      R1,R8
   \   0000002C   0700A0E1           MOV      R0,R7
   \   00000030   ........           BL       ??LibFind_Value
     24              if (ValInfoIndex == NOT_FOUND) {
   \   00000034   010070E3           CMN      R0,#+1
     25                  ErrStatus = GETVAL_ERROR;
   \   00000038   0460A003           MOVEQ    R6,#+4
   \   0000003C   1F00000A           BEQ      ??LibGetShortValueName_1
     26              } else {
     27                  tmpName = FindDictionaryWord(VInfoList[ValInfoIndex].SName);
   \   00000040   0C10A0E3           MOV      R1,#+12
   \   00000044   917027E0           MLA      R7,R1,R0,R7
   \   00000048   041097E5           LDR      R1,[R7, #+4]
   \   0000004C   0D00A0E1           MOV      R0,SP
   \   00000050   ........           _BLF     ??FindDictionaryWord,??FindDictionaryWord??rA
   \   00000054   ........           LDR      R0,??DataTable3  ;; ??npos
   \   00000058   0020A0E3           MOV      R2,#+0
   \   0000005C   008090E5           LDR      R8,[R0, #+0]
   \   00000060   0D10A0E1           MOV      R1,SP
   \   00000064   0830A0E1           MOV      R3,R8
   \   00000068   0400A0E1           MOV      R0,R4
   \   0000006C   ........           _BLF     ??assign,??assign??rA
   \   00000070   0620A0E1           MOV      R2,R6
   \   00000074   0110A0E3           MOV      R1,#+1
   \   00000078   0D00A0E1           MOV      R0,SP
   \   0000007C   ........           _BLF     ??_Tidy,??_Tidy??rA
     28                  if (tmpName.IsEmpty()) {
   \   00000080   0400A0E1           MOV      R0,R4
   \   00000084   ........           _BLF     ??IsEmpty,??IsEmpty??rA
   \   00000088   000050E3           CMP      R0,#+0
   \   0000008C   0B00000A           BEQ      ??LibGetShortValueName_1
     29                      tmpName = FindDictionaryWord(VInfoList[ValInfoIndex].Name);
   \   00000090   001097E5           LDR      R1,[R7, #+0]
   \   00000094   1C008DE2           ADD      R0,SP,#+28
   \   00000098   ........           _BLF     ??FindDictionaryWord,??FindDictionaryWord??rA
   \   0000009C   0830A0E1           MOV      R3,R8
   \   000000A0   0020A0E3           MOV      R2,#+0
   \   000000A4   1C108DE2           ADD      R1,SP,#+28
   \   000000A8   0400A0E1           MOV      R0,R4
   \   000000AC   ........           _BLF     ??assign,??assign??rA
   \   000000B0   0620A0E1           MOV      R2,R6
   \   000000B4   0110A0E3           MOV      R1,#+1
   \   000000B8   1C008DE2           ADD      R0,SP,#+28
   \   000000BC   ........           _BLF     ??_Tidy,??_Tidy??rA
     30                  }
     31              }
     32              if (Index) {
   \                     ??LibGetShortValueName_1:
   \   000000C0   000055E3           CMP      R5,#+0
     33                  *Index = ErrStatus;
   \   000000C4   00608515           STRNE    R6,[R5, #+0]
     34              }
     35              return (tmpName);
   \   000000C8   38D08DE2           ADD      SP,SP,#+56
   \   000000CC   ........           B        ?Subroutine20
     36          }

   \                                 In segment CODE, align 4, keep-with-next
   \                     ?Subroutine20:
   \   00000000   F043BDE8           POP      {R4-R9,LR}
   \   00000004   1EFF2FE1           BX       LR               ;; return
     37          
     38          

   \                                 In segment CODE, align 4, keep-with-next
     39          int LibFind_Value(ValueList *VInfoList, int Entries, int ValueId) {
   \                     ??LibFind_Value:
   \   00000000   ........           B        ?Subroutine17

   \                                 In segment CODE, align 4, keep-with-next
   \                     ?Subroutine17:
   \   00000000   10002DE9           PUSH     {R4}
   \   00000004   0030A0E3           MOV      R3,#+0
   \   00000008   0CC0A0E3           MOV      R12,#+12
   \   0000000C   040000EA           B        ??Subroutine17_0
   \                     ??Subroutine17_1:
   \   00000010   9C0324E0           MLA      R4,R12,R3,R0
   \   00000014   084094E5           LDR      R4,[R4, #+8]
   \   00000018   020054E1           CMP      R4,R2
   \   0000001C   0400000A           BEQ      ??Subroutine17_2
   \   00000020   013083E2           ADD      R3,R3,#+1
   \                     ??Subroutine17_0:
   \   00000024   010053E1           CMP      R3,R1
   \   00000028   F8FFFFBA           BLT      ??Subroutine17_1
   \   0000002C   0000E0E3           MVN      R0,#+0
   \   00000030   010000EA           B        ??Subroutine17_3
   \                     ??Subroutine17_2:
   \   00000034   0308A0E1           LSL      R0,R3,#+16
   \   00000038   2008A0E1           LSR      R0,R0,#+16
   \                     ??Subroutine17_3:
   \   0000003C   1000BDE8           POP      {R4}
   \   00000040   1EFF2FE1           BX       LR               ;; return
     40              int i = 0;
     41          
     42              while ((i < Entries) && (VInfoList[i].Value != ValueId))       i++;
     43              if (i >= Entries) return (NOT_FOUND);
     44              else return (i & 0xffff);
     45          }
     46          
     47          

   \                                 In segment CODE, align 4, keep-with-next
     48          AnsiString LibGetValueName(ValueList *VInfoList, int Entries, int ValueId, int *Index) {
   \                     ??LibGetValueName:
   \   00000000   F0432DE9           PUSH     {R4-R9,LR}
   \   00000004   1CD04DE2           SUB      SP,SP,#+28
   \   00000008   38509DE5           LDR      R5,[SP, #+56]
   \   0000000C   0040A0E1           MOV      R4,R0
   \   00000010   0170A0E1           MOV      R7,R1
   \   00000014   0280A0E1           MOV      R8,R2
   \   00000018   0390A0E1           MOV      R9,R3
     49              int ErrStatus = GETVAL_NO_ERR;
   \   0000001C   0060A0E3           MOV      R6,#+0
     50              AnsiString tmpName;
   \   00000020   ........           _BLF     ??AnsiString,??AnsiString??rA
     51              int ValInfoIndex = LibFind_Value(VInfoList, Entries, ValueId);
   \   00000024   0920A0E1           MOV      R2,R9
   \   00000028   0810A0E1           MOV      R1,R8
   \   0000002C   0700A0E1           MOV      R0,R7
   \   00000030   ........           BL       ??LibFind_Value
     52              if (ValInfoIndex == NOT_FOUND) {
   \   00000034   010070E3           CMN      R0,#+1
     53                  ErrStatus = GETVAL_ERROR;
   \   00000038   0460A003           MOVEQ    R6,#+4
   \   0000003C   0E00000A           BEQ      ??LibGetValueName_1
     54              } else {
     55                  tmpName = FindDictionaryWord(VInfoList[ValInfoIndex].Name);
   \   00000040   0C10A0E3           MOV      R1,#+12
   \   00000044   917020E0           MLA      R0,R1,R0,R7
   \   00000048   001090E5           LDR      R1,[R0, #+0]
   \   0000004C   0D00A0E1           MOV      R0,SP
   \   00000050   ........           _BLF     ??FindDictionaryWord,??FindDictionaryWord??rA
   \   00000054   ........           LDR      R0,??DataTable3  ;; ??npos
   \   00000058   0020A0E3           MOV      R2,#+0
   \   0000005C   003090E5           LDR      R3,[R0, #+0]
   \   00000060   0D10A0E1           MOV      R1,SP
   \   00000064   0400A0E1           MOV      R0,R4
   \   00000068   ........           _BLF     ??assign,??assign??rA
   \   0000006C   0620A0E1           MOV      R2,R6
   \   00000070   0110A0E3           MOV      R1,#+1
   \   00000074   0D00A0E1           MOV      R0,SP
   \   00000078   ........           _BLF     ??_Tidy,??_Tidy??rA
     56              }
     57              if (Index) {
   \                     ??LibGetValueName_1:
   \   0000007C   000055E3           CMP      R5,#+0
     58                  *Index = ErrStatus;
   \   00000080   00608515           STRNE    R6,[R5, #+0]
     59              }
     60              return (tmpName);
   \   00000084   1CD08DE2           ADD      SP,SP,#+28
   \   00000088                      REQUIRE ?Subroutine20
   \   00000088                      ;; // Fall through to label ?Subroutine20
     61          }
     62          
     63          

   \                                 In segment CODE, align 4, keep-with-next
     64          AnsiString LibGetText(ValueList *VInfoList, int Entries, int Id, bool Status) {
   \                     ??LibGetText:
   \   00000000   F0402DE9           PUSH     {R4-R7,LR}
   \   00000004   38D04DE2           SUB      SP,SP,#+56
   \   00000008   4C60DDE5           LDRB     R6,[SP, #+76]
   \   0000000C   0040A0E1           MOV      R4,R0
   \   00000010   0150A0E1           MOV      R5,R1
   \   00000014   0210A0E1           MOV      R1,R2
   \   00000018   0320A0E1           MOV      R2,R3
     65              int ValInfoIndex = LibFind_Value(VInfoList, Entries, Id);
   \   0000001C   0500A0E1           MOV      R0,R5
   \   00000020   ........           BL       ??LibFind_Value
   \   00000024   0070A0E1           MOV      R7,R0
     66              if (ValInfoIndex == NOT_FOUND) return ("");
   \   00000028   010077E3           CMN      R7,#+1
   \   0000002C   0300001A           BNE      ??LibGetText_1
   \   00000030   ........           ADR      R1,??DataTable2  ;; ""
   \   00000034   0400A0E1           MOV      R0,R4
   \   00000038   ........           _BLF     ??AnsiString_1,??AnsiString??rA_1
   \   0000003C   190000EA           B        ??LibGetText_2
     67              AnsiString tmpStr;
   \                     ??LibGetText_1:
   \   00000040   1C008DE2           ADD      R0,SP,#+28
   \   00000044   ........           _BLF     ??AnsiString,??AnsiString??rA
     68              if (Status) {
   \   00000048   0C10A0E3           MOV      R1,#+12
   \   0000004C   915720E0           MLA      R0,R1,R7,R5
   \   00000050   000056E3           CMP      R6,#+0
     69                  tmpStr = FindDictionaryWord(VInfoList[ValInfoIndex].SName);
   \   00000054   04109015           LDRNE    R1,[R0, #+4]
     70              } else {
     71                  tmpStr = FindDictionaryWord(VInfoList[ValInfoIndex].Name);
   \   00000058   00109005           LDREQ    R1,[R0, #+0]
   \   0000005C   0D00A0E1           MOV      R0,SP
   \   00000060   ........           _BLF     ??FindDictionaryWord,??FindDictionaryWord??rA
   \   00000064   ........           LDR      R0,??DataTable3  ;; ??npos
   \   00000068   0020A0E3           MOV      R2,#+0
   \   0000006C   003090E5           LDR      R3,[R0, #+0]
   \   00000070   0D10A0E1           MOV      R1,SP
   \   00000074   1C008DE2           ADD      R0,SP,#+28
   \   00000078   ........           _BLF     ??assign,??assign??rA
   \   0000007C   0020A0E3           MOV      R2,#+0
   \   00000080   0110A0E3           MOV      R1,#+1
   \   00000084   0D00A0E1           MOV      R0,SP
   \   00000088   ........           _BLF     ??_Tidy,??_Tidy??rA
     72              }
     73              return (tmpStr);
   \   0000008C   1C108DE2           ADD      R1,SP,#+28
   \   00000090   0400A0E1           MOV      R0,R4
   \   00000094   ........           _BLF     ??string,??string??rA
   \   00000098   0020A0E3           MOV      R2,#+0
   \   0000009C   0110A0E3           MOV      R1,#+1
   \   000000A0   1C008DE2           ADD      R0,SP,#+28
   \   000000A4   ........           _BLF     ??_Tidy,??_Tidy??rA
   \                     ??LibGetText_2:
   \   000000A8   38D08DE2           ADD      SP,SP,#+56
   \   000000AC   F040BDE8           POP      {R4-R7,LR}
   \   000000B0   1EFF2FE1           BX       LR               ;; return
     74          }
     75          
     76          

   \                                 In segment CODE, align 4, keep-with-next
     77          int LibFind_ObjectValue(ValueObjList *VInfoList, int Entries, int ValueId) {
   \                     ??LibFind_ObjectValue:
   \   00000000                      REQUIRE ?Subroutine17
   \   00000000                      ;; // Fall through to label ?Subroutine17
     78              int i = 0;
     79          
     80              while ((i < Entries) && (VInfoList[i].Value != ValueId))       i++;
     81              if (i >= Entries) return (NOT_FOUND);
     82              else return (i & 0xffff);
     83          }
     84          
     85          

   \                                 In segment CODE, align 4, keep-with-next
     86          PRogramObjectBase* LibGetObjPtr(ValueObjList *VInfoList, int Entries, int ValueId) {
   \                     ??LibGetObjPtr:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0040A0E1           MOV      R4,R0
     87              int ValInfoIndex = LibFind_ObjectValue(VInfoList, Entries, ValueId);
   \   00000008   ........           BL       ??LibFind_ObjectValue
     88              if (ValInfoIndex == NOT_FOUND) return (NULL);
   \   0000000C   010070E3           CMN      R0,#+1
     89              PRogramObjectBase **ObjPtr = (PRogramObjectBase **)VInfoList[ValInfoIndex].ObjPtr;
     90              return (*ObjPtr);
   \   00000010   0C10A013           MOVNE    R1,#+12
   \   00000014   91402010           MLANE    R0,R1,R0,R4
   \   00000018   04009015           LDRNE    R0,[R0, #+4]
   \   0000001C   0000A003           MOVEQ    R0,#+0
   \   00000020   00009015           LDRNE    R0,[R0, #+0]
   \   00000024   ........           B        ??Subroutine19_0
     91          }

   \                                 In segment CODE, align 4, keep-with-next
   \                     ?Subroutine19:
   \   00000000   ........           BL       ??LibGetValue_9
   \   00000004   14D08DE2           ADD      SP,SP,#+20
   \                     ??Subroutine19_0:
   \   00000008   1040BDE8           POP      {R4,LR}
   \   0000000C   1EFF2FE1           BX       LR               ;; return
     92          
     93          
     94          /////////////////////////////////////////////////////////////////////////////
     95          //
     96          // ValueId = Value key
     97          // ObjPtr  = Pointer to object
     98          // Width   = Width of the field
     99          // Flag    = Optional formatting flag. Can use all 32 bits Maybe something allready
    100          //              defined in the GUI
    101          // UnitStr = return unit string
    102          
    103          // With Index

   \                                 In segment CODE, align 4, keep-with-next
    104          AnsiString LibGetValue(int ValueId, int ValueId2, int Index, PRogramObjectBase *ObjPtr, int Width, int *Status) {
   \                     ??LibGetValue:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   0CC09DE5           LDR      R12,[SP, #+12]
   \   00000008   10409DE5           LDR      R4,[SP, #+16]
   \   0000000C   14509DE5           LDR      R5,[SP, #+20]
    105              return (LibGetValue(ValueId, ValueId2, Index, ObjPtr, Width, SVT_FLAG_NORMAL, NULL, Status));
   \   00000010   20002DE9           PUSH     {R5}
   \   00000014   0050A0E3           MOV      R5,#+0
   \   00000018   20002DE9           PUSH     {R5}
   \   0000001C   20002DE9           PUSH     {R5}
   \   00000020   10002DE9           PUSH     {R4}
   \   00000024   00102DE9           PUSH     {R12}
   \   00000028   ........           BL       ??LibGetValue_9
   \   0000002C   14D08DE2           ADD      SP,SP,#+20
   \   00000030   3040BDE8           POP      {R4,R5,LR}
   \   00000034   1EFF2FE1           BX       LR               ;; return
    106          }
    107          
    108          

   \                                 In segment CODE, align 4, keep-with-next
    109          AnsiString LibGetValue(int ValueId, int Index, PRogramObjectBase *ObjPtr, AnsiString *UnitStr, int *Status) {
   \                     ??LibGetValue_1:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   08C09DE5           LDR      R12,[SP, #+8]
   \   00000008   0C409DE5           LDR      R4,[SP, #+12]
    110              return (LibGetValue(ValueId, Index, ObjPtr, 0, SVT_FLAG_NORMAL, UnitStr, Status));
   \   0000000C   10002DE9           PUSH     {R4}
   \   00000010   00102DE9           PUSH     {R12}
   \   00000014   0040A0E3           MOV      R4,#+0
   \   00000018   10002DE9           PUSH     {R4}
   \   0000001C   10002DE9           PUSH     {R4}
   \   00000020   ........           BL       ??LibGetValue_3
   \   00000024   1F40BDE8           POP      {R0-R4,LR}
   \   00000028   1EFF2FE1           BX       LR               ;; return
    111          }
    112          
    113          

   \                                 In segment CODE, align 4, keep-with-next
    114          AnsiString LibGetValue(int ValueId, int Index, PRogramObjectBase *ObjPtr, int *Status) {
   \                     ??LibGetValue_2:
   \   00000000   00402DE9           PUSH     {LR}
   \   00000004   04C09DE5           LDR      R12,[SP, #+4]
    115              return (LibGetValue(ValueId, Index, ObjPtr, 0, SVT_FLAG_NORMAL, NULL, Status));
   \   00000008   00102DE9           PUSH     {R12}
   \   0000000C   00C0A0E3           MOV      R12,#+0
   \   00000010   00102DE9           PUSH     {R12}
   \   00000014   00102DE9           PUSH     {R12}
   \   00000018   00102DE9           PUSH     {R12}
   \   0000001C   ........           BL       ??LibGetValue_3
   \   00000020   ........           B        ??Subroutine18_1
    116          }

   \                                 In segment CODE, align 4, keep-with-next
   \                     ?Subroutine18:
   \   00000000   08002DE9           PUSH     {R3}
   \   00000004   08002DE9           PUSH     {R3}
   \   00000008   0230A0E1           MOV      R3,R2
   \   0000000C   0020A0E3           MOV      R2,#+0
   \                     ??Subroutine18_0:
   \   00000010   ........           BL       ??LibGetValue_3
   \                     ??Subroutine18_1:
   \   00000014   0F40BDE8           POP      {R0-R3,LR}
   \   00000018   1EFF2FE1           BX       LR               ;; return
    117          
    118          

   \                                 In segment CODE, align 4, keep-with-next
    119          AnsiString LibGetValue(int ValueId, int Index, PRogramObjectBase *ObjPtr, int Width, int Flag, AnsiString *UnitStr, int *Status) {
   \                     ??LibGetValue_3:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   10C09DE5           LDR      R12,[SP, #+16]
   \   00000008   14409DE5           LDR      R4,[SP, #+20]
   \   0000000C   18509DE5           LDR      R5,[SP, #+24]
   \   00000010   1C609DE5           LDR      R6,[SP, #+28]
    120              return (LibGetValue(ValueId, SVT_NOT_DEFINED, Index, ObjPtr, Width, Flag, UnitStr, Status));
   \   00000014   40002DE9           PUSH     {R6}
   \   00000018   20002DE9           PUSH     {R5}
   \   0000001C   10002DE9           PUSH     {R4}
   \   00000020   00102DE9           PUSH     {R12}
   \   00000024   08002DE9           PUSH     {R3}
   \   00000028   0230A0E1           MOV      R3,R2
   \   0000002C   0020A0E3           MOV      R2,#+0
   \   00000030   ........           BL       ??LibGetValue_9
   \   00000034   14D08DE2           ADD      SP,SP,#+20
   \   00000038   7040BDE8           POP      {R4-R6,LR}
   \   0000003C   1EFF2FE1           BX       LR               ;; return
    121          
    122          }
    123          
    124          
    125          // Without Index

   \                                 In segment CODE, align 4, keep-with-next
    126          AnsiString LibGetValue(int ValueId, int ValueId2, PRogramObjectBase *ObjPtr, int Width, int *Status) {
   \                     ??LibGetValue_4:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   08C09DE5           LDR      R12,[SP, #+8]
   \   00000008   0C409DE5           LDR      R4,[SP, #+12]
    127              return (LibGetValue(ValueId, ValueId2, 0, ObjPtr, Width, SVT_FLAG_NORMAL, NULL, Status));
   \   0000000C   10002DE9           PUSH     {R4}
   \   00000010   0040A0E3           MOV      R4,#+0
   \   00000014   10002DE9           PUSH     {R4}
   \   00000018   10002DE9           PUSH     {R4}
   \   0000001C   00102DE9           PUSH     {R12}
   \   00000020   08002DE9           PUSH     {R3}
   \   00000024   0030A0E3           MOV      R3,#+0
   \   00000028   ........           B        ?Subroutine19
    128          }
    129          
    130          

   \                                 In segment CODE, align 4, keep-with-next
    131          AnsiString LibGetValue(int ValueId, PRogramObjectBase *ObjPtr, int Flag, int *Status) {
   \                     ??LibGetValue_5:
   \   00000000   00402DE9           PUSH     {LR}
   \   00000004   04C09DE5           LDR      R12,[SP, #+4]
    132              return (LibGetValue(ValueId, 0, ObjPtr, 0, Flag, NULL, Status));
   \   00000008   00102DE9           PUSH     {R12}
   \   0000000C   00C0A0E3           MOV      R12,#+0
   \   00000010   00102DE9           PUSH     {R12}
   \   00000014   08002DE9           PUSH     {R3}
   \   00000018   0030A0E3           MOV      R3,#+0
   \   0000001C   08002DE9           PUSH     {R3}
   \   00000020   0230A0E1           MOV      R3,R2
   \   00000024   0C20A0E1           MOV      R2,R12
   \   00000028   ........           B        ??Subroutine18_0
    133          }
    134          
    135          

   \                                 In segment CODE, align 4, keep-with-next
    136          AnsiString LibGetValue(int ValueId, PRogramObjectBase *ObjPtr, AnsiString *UnitStr, int *Status) {
   \                     ??LibGetValue_6:
   \   00000000   00402DE9           PUSH     {LR}
   \   00000004   04C09DE5           LDR      R12,[SP, #+4]
    137              return (LibGetValue(ValueId, 0, ObjPtr, 0, SVT_FLAG_NORMAL, UnitStr, Status));
   \   00000008   00102DE9           PUSH     {R12}
   \   0000000C   08002DE9           PUSH     {R3}
   \   00000010   0030A0E3           MOV      R3,#+0
   \   00000014   ........           B        ?Subroutine18
    138          }
    139          
    140          

   \                                 In segment CODE, align 4, keep-with-next
    141          AnsiString LibGetValue(int ValueId, PRogramObjectBase *ObjPtr, int *Status) {
   \                     ??LibGetValue_7:
   \   00000000   00402DE9           PUSH     {LR}
    142              return (LibGetValue(ValueId, 0, ObjPtr, 0, SVT_FLAG_NORMAL, NULL, Status));
   \   00000004   08002DE9           PUSH     {R3}
   \   00000008   0030A0E3           MOV      R3,#+0
   \   0000000C   08002DE9           PUSH     {R3}
   \   00000010                      REQUIRE ?Subroutine18
   \   00000010                      ;; // Fall through to label ?Subroutine18
    143          }
    144          
    145          

   \                                 In segment CODE, align 4, keep-with-next
    146          AnsiString LibGetValue(int ValueId, PRogramObjectBase *ObjPtr, int Width, AnsiString *UnitStr, int *Status) {
   \                     ??LibGetValue_8:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   08C09DE5           LDR      R12,[SP, #+8]
   \   00000008   0C409DE5           LDR      R4,[SP, #+12]
    147              return (LibGetValue(ValueId, 0, 0, ObjPtr, Width, SVT_FLAG_NORMAL, UnitStr, Status));
   \   0000000C   10002DE9           PUSH     {R4}
   \   00000010   00102DE9           PUSH     {R12}
   \   00000014   0040A0E3           MOV      R4,#+0
   \   00000018   10002DE9           PUSH     {R4}
   \   0000001C   08002DE9           PUSH     {R3}
   \   00000020   04002DE9           PUSH     {R2}
   \   00000024   0030A0E3           MOV      R3,#+0
   \   00000028   0320A0E1           MOV      R2,R3
   \   0000002C                      REQUIRE ?Subroutine19
   \   0000002C                      ;; // Fall through to label ?Subroutine19
    148          }
    149          
    150          
    151          #define ALIGN_RIGHT 0
    152          #define ALIGN_LEFT  1

   \                                 In segment CODE, align 4, keep-with-next
    153          AnsiString LibGetValue(int ValueId, int ValueId2, int Index, PRogramObjectBase *ObjPtr, int Width, int Flag, AnsiString *UnitStr, int *Status) {
   \                     ??LibGetValue_9:
   \   00000000   F04F2DE9           PUSH     {R4-R11,LR}
    154              AnsiString TempString;
    155              int Alignment = ALIGN_RIGHT;
    156              int ValueStatus = GETVAL_NO_ERR;
    157              int DecPnt      = 0;
    158              int UnitId       = NO_UNIT;
    159              if (ObjPtr) {
   \   00000004   68889FE5           LDR      R8,??LibGetValue_15+0x4  ;; ??npos
   \   00000008   ADDF4DE2           SUB      SP,SP,#+692
   \   0000000C   D8A29DE5           LDR      R10,[SP, #+728]
   \   00000010   DC729DE5           LDR      R7,[SP, #+732]
   \   00000014   0040A0E1           MOV      R4,R0
   \   00000018   0150A0E1           MOV      R5,R1
   \   0000001C   0260A0E1           MOV      R6,R2
   \   00000020   0390A0E1           MOV      R9,R3
   \   00000024   2C008DE2           ADD      R0,SP,#+44
   \   00000028   ........           _BLF     ??AnsiString,??AnsiString??rA
   \   0000002C   0010A0E3           MOV      R1,#+0
   \   00000030   80108DE5           STR      R1,[SP, #+128]
   \   00000034   04108DE5           STR      R1,[SP, #+4]
   \   00000038   0C108DE5           STR      R1,[SP, #+12]
   \   0000003C   08108DE5           STR      R1,[SP, #+8]
   \   00000040   00005AE3           CMP      R10,#+0
   \   00000044   9303000A           BEQ      ??LibGetValue_16
    160                  switch (ValueId) {
   \   00000048   A4C09AE5           LDR      R12,[R10, #+164]
   \   0000004C   E1BF8FE2           ADR      R11,??LibGetValue_17  ;; "("
   \   00000050   FD0F55E3           CMP      R5,#+1012
   \   00000054   C800000A           BEQ      ??LibGetValue_18
   \   00000058   0810A0E3           MOV      R1,#+8
   \   0000005C   401E81E3           ORR      R1,R1,#0x400
   \   00000060   010055E1           CMP      R5,R1
   \   00000064   0D108112           ADDNE    R1,R1,#+13
   \   00000068   01005511           CMPNE    R5,R1
   \   0000006C   08108113           ORRNE    R1,R1,#0x8
   \   00000070   01005511           CMPNE    R5,R1
   \   00000074   01108112           ADDNE    R1,R1,#+1
   \   00000078   01005511           CMPNE    R5,R1
   \   0000007C   3C108112           ADDNE    R1,R1,#+60
   \   00000080   01005511           CMPNE    R5,R1
   \   00000084   01108113           ORRNE    R1,R1,#0x1
   \   00000088   01005511           CMPNE    R5,R1
   \   0000008C   01108112           ADDNE    R1,R1,#+1
   \   00000090   01005511           CMPNE    R5,R1
   \   00000094   01108113           ORRNE    R1,R1,#0x1
   \   00000098   01005511           CMPNE    R5,R1
   \   0000009C   01108112           ADDNE    R1,R1,#+1
   \   000000A0   01005511           CMPNE    R5,R1
   \   000000A4   01108113           ORRNE    R1,R1,#0x1
   \   000000A8   01005511           CMPNE    R5,R1
   \   000000AC   460E5513           CMPNE    R5,#+1120
   \   000000B0   02108112           ADDNE    R1,R1,#+2
   \   000000B4   01005511           CMPNE    R5,R1
   \   000000B8   01108112           ADDNE    R1,R1,#+1
   \   000000BC   01005511           CMPNE    R5,R1
   \   000000C0   01108113           ORRNE    R1,R1,#0x1
   \   000000C4   01005511           CMPNE    R5,R1
   \   000000C8   01108112           ADDNE    R1,R1,#+1
   \   000000CC   01005511           CMPNE    R5,R1
   \   000000D0   01108113           ORRNE    R1,R1,#0x1
   \   000000D4   01005511           CMPNE    R5,R1
   \   000000D8   01108112           ADDNE    R1,R1,#+1
   \   000000DC   01005511           CMPNE    R5,R1
   \   000000E0   01108113           ORRNE    R1,R1,#0x1
   \   000000E4   01005511           CMPNE    R5,R1
   \   000000E8   11108112           ADDNE    R1,R1,#+17
   \   000000EC   01005511           CMPNE    R5,R1
   \   000000F0   15108112           ADDNE    R1,R1,#+21
   \   000000F4   01005511           CMPNE    R5,R1
   \   000000F8   24108112           ADDNE    R1,R1,#+36
   \   000000FC   01005511           CMPNE    R5,R1
   \   00000100   01108112           ADDNE    R1,R1,#+1
   \   00000104   01005511           CMPNE    R5,R1
   \   00000108   07108112           ADDNE    R1,R1,#+7
   \   0000010C   01005511           CMPNE    R5,R1
   \   00000110   02108113           ORRNE    R1,R1,#0x2
   \   00000114   01005511           CMPNE    R5,R1
   \   00000118   01108112           ADDNE    R1,R1,#+1
   \   0000011C   01005511           CMPNE    R5,R1
   \   00000120   03108113           ORRNE    R1,R1,#0x3
   \   00000124   01005511           CMPNE    R5,R1
   \   00000128   4C0E5513           CMPNE    R5,#+1216
   \   0000012C   0F108112           ADDNE    R1,R1,#+15
   \   00000130   01005511           CMPNE    R5,R1
   \   00000134   16108112           ADDNE    R1,R1,#+22
   \   00000138   01005511           CMPNE    R5,R1
   \   0000013C   08108113           ORRNE    R1,R1,#0x8
   \   00000140   01005511           CMPNE    R5,R1
   \   00000144   01108113           ORRNE    R1,R1,#0x1
   \   00000148   01005511           CMPNE    R5,R1
   \   0000014C   01108112           ADDNE    R1,R1,#+1
   \   00000150   01005511           CMPNE    R5,R1
   \   00000154   27108112           ADDNE    R1,R1,#+39
   \   00000158   01005511           CMPNE    R5,R1
   \   0000015C   01108112           ADDNE    R1,R1,#+1
   \   00000160   01005511           CMPNE    R5,R1
   \   00000164   01108113           ORRNE    R1,R1,#0x1
   \   00000168   01005511           CMPNE    R5,R1
   \   0000016C   02108112           ADDNE    R1,R1,#+2
   \   00000170   01005511           CMPNE    R5,R1
   \   00000174   74108112           ADDNE    R1,R1,#+116
   \   00000178   01005511           CMPNE    R5,R1
   \   0000017C   3A108112           ADDNE    R1,R1,#+58
   \   00000180   01005511           CMPNE    R5,R1
   \   00000184   01108112           ADDNE    R1,R1,#+1
   \   00000188   01005511           CMPNE    R5,R1
   \   0000018C   01108113           ORRNE    R1,R1,#0x1
   \   00000190   01005511           CMPNE    R5,R1
   \   00000194   01108112           ADDNE    R1,R1,#+1
   \   00000198   01005511           CMPNE    R5,R1
   \   0000019C   01108113           ORRNE    R1,R1,#0x1
   \   000001A0   01005511           CMPNE    R5,R1
   \   000001A4   D110A013           MOVNE    R1,#+209
   \   000001A8   701E8113           ORRNE    R1,R1,#0x700
   \   000001AC   01005511           CMPNE    R5,R1
   \   000001B0   02108113           ORRNE    R1,R1,#0x2
   \   000001B4   01005511           CMPNE    R5,R1
   \   000001B8   0E108112           ADDNE    R1,R1,#+14
   \   000001BC   01005511           CMPNE    R5,R1
   \   000001C0   5801000A           BEQ      ??LibGetValue_19
   \   000001C4   F61F81E2           ADD      R1,R1,#+984
   \   000001C8   010055E1           CMP      R5,R1
   \   000001CC   D000000A           BEQ      ??LibGetValue_20
   \   000001D0   011081E2           ADD      R1,R1,#+1
   \   000001D4   010055E1           CMP      R5,R1
   \   000001D8   8000000A           BEQ      ??LibGetValue_21
   \   000001DC   011081E3           ORR      R1,R1,#0x1
   \   000001E0   010055E1           CMP      R5,R1
   \   000001E4   CA00000A           BEQ      ??LibGetValue_20
   \   000001E8   011081E2           ADD      R1,R1,#+1
   \   000001EC   010055E1           CMP      R5,R1
   \   000001F0   01108113           ORRNE    R1,R1,#0x1
   \   000001F4   01005511           CMPNE    R5,R1
   \   000001F8   1A01000A           BEQ      ??LibGetValue_22
   \   000001FC   601081E2           ADD      R1,R1,#+96
   \   00000200   010055E1           CMP      R5,R1
   \   00000204   01108112           ADDNE    R1,R1,#+1
   \   00000208   01005511           CMPNE    R5,R1
   \   0000020C   01108113           ORRNE    R1,R1,#0x1
   \   00000210   01005511           CMPNE    R5,R1
   \   00000214   03108112           ADDNE    R1,R1,#+3
   \   00000218   01005511           CMPNE    R5,R1
   \   0000021C   01108113           ORRNE    R1,R1,#0x1
   \   00000220   01005511           CMPNE    R5,R1
   \   00000224   01108112           ADDNE    R1,R1,#+1
   \   00000228   01005511           CMPNE    R5,R1
   \   0000022C   02108113           ORRNE    R1,R1,#0x2
   \   00000230   01005511           CMPNE    R5,R1
   \   00000234   A910A013           MOVNE    R1,#+169
   \   00000238   F01E8113           ORRNE    R1,R1,#0xF00
   \   0000023C   01005511           CMPNE    R5,R1
   \   00000240   02108113           ORRNE    R1,R1,#0x2
   \   00000244   01005511           CMPNE    R5,R1
   \   00000248   01108112           ADDNE    R1,R1,#+1
   \   0000024C   01005511           CMPNE    R5,R1
   \   00000250   01108113           ORRNE    R1,R1,#0x1
   \   00000254   01005511           CMPNE    R5,R1
   \   00000258   01108112           ADDNE    R1,R1,#+1
   \   0000025C   01005511           CMPNE    R5,R1
   \   00000260   01108113           ORRNE    R1,R1,#0x1
   \   00000264   01005511           CMPNE    R5,R1
   \   00000268   02108112           ADDNE    R1,R1,#+2
   \   0000026C   01005511           CMPNE    R5,R1
   \   00000270   02108113           ORRNE    R1,R1,#0x2
   \   00000274   01005511           CMPNE    R5,R1
   \   00000278   01108112           ADDNE    R1,R1,#+1
   \   0000027C   01005511           CMPNE    R5,R1
   \   00000280   7A1F8112           ADDNE    R1,R1,#+488
   \   00000284   01005511           CMPNE    R5,R1
   \   00000288   66108112           ADDNE    R1,R1,#+102
   \   0000028C   01005511           CMPNE    R5,R1
   \   00000290   01108113           ORRNE    R1,R1,#0x1
   \   00000294   01005511           CMPNE    R5,R1
   \   00000298   01108112           ADDNE    R1,R1,#+1
   \   0000029C   01005511           CMPNE    R5,R1
   \   000002A0   01108113           ORRNE    R1,R1,#0x1
   \   000002A4   01005511           CMPNE    R5,R1
   \   000002A8   01108112           ADDNE    R1,R1,#+1
   \   000002AC   01005511           CMPNE    R5,R1
   \   000002B0   01108113           ORRNE    R1,R1,#0x1
   \   000002B4   01005511           CMPNE    R5,R1
   \   000002B8   01108112           ADDNE    R1,R1,#+1
   \   000002BC   01005511           CMPNE    R5,R1
   \   000002C0   01108113           ORRNE    R1,R1,#0x1
   \   000002C4   01005511           CMPNE    R5,R1
   \   000002C8   01108112           ADDNE    R1,R1,#+1
   \   000002CC   01005511           CMPNE    R5,R1
   \   000002D0   01108113           ORRNE    R1,R1,#0x1
   \   000002D4   01005511           CMPNE    R5,R1
   \   000002D8   1F108112           ADDNE    R1,R1,#+31
   \   000002DC   01005511           CMPNE    R5,R1
   \   000002E0   3410A013           MOVNE    R1,#+52
   \   000002E4   8C1D8113           ORRNE    R1,R1,#0x2300
   \   000002E8   01005511           CMPNE    R5,R1
   \   000002EC   01108113           ORRNE    R1,R1,#0x1
   \   000002F0   01005511           CMPNE    R5,R1
   \   000002F4   01108112           ADDNE    R1,R1,#+1
   \   000002F8   01005511           CMPNE    R5,R1
   \   000002FC   01108113           ORRNE    R1,R1,#0x1
   \   00000300   01005511           CMPNE    R5,R1
   \   00000304   01108112           ADDNE    R1,R1,#+1
   \   00000308   01005511           CMPNE    R5,R1
   \   0000030C   01108113           ORRNE    R1,R1,#0x1
   \   00000310   01005511           CMPNE    R5,R1
   \   00000314   01108112           ADDNE    R1,R1,#+1
   \   00000318   01005511           CMPNE    R5,R1
   \   0000031C   01108113           ORRNE    R1,R1,#0x1
   \   00000320   01005511           CMPNE    R5,R1
   \   00000324   01108112           ADDNE    R1,R1,#+1
   \   00000328   01005511           CMPNE    R5,R1
   \   0000032C   03108113           ORRNE    R1,R1,#0x3
   \   00000330   01005511           CMPNE    R5,R1
   \   00000334   02108112           ADDNE    R1,R1,#+2
   \   00000338   01005511           CMPNE    R5,R1
   \   0000033C   02108113           ORRNE    R1,R1,#0x2
   \   00000340   01005511           CMPNE    R5,R1
   \   00000344   02108112           ADDNE    R1,R1,#+2
   \   00000348   01005511           CMPNE    R5,R1
   \   0000034C   7F108112           ADDNE    R1,R1,#+127
   \   00000350   01005511           CMPNE    R5,R1
   \   00000354   9C108112           ADDNE    R1,R1,#+156
   \   00000358   01005511           CMPNE    R5,R1
   \   0000035C   01108113           ORRNE    R1,R1,#0x1
   \   00000360   01005511           CMPNE    R5,R1
   \   00000364   C51F8113           ORRNE    R1,R1,#0x314
   \   00000368   01005511           CMPNE    R5,R1
   \   0000036C   51108112           ADDNE    R1,R1,#+81
   \   00000370   01005511           CMPNE    R5,R1
   \   00000374   EB00000A           BEQ      ??LibGetValue_19
   \   00000378   120100EA           B        ??LibGetValue_23
    161                  case SVT_UNIT:
    162                      {
    163                          float Value;
    164                          ValueStatus = ObjPtr->GetValue(ValueId2, Index, Value, DecPnt, UnitId);
   \                     ??LibGetValue_18:
   \   0000037C   08008DE2           ADD      R0,SP,#+8
   \   00000380   01002DE9           PUSH     {R0}
   \   00000384   10008DE2           ADD      R0,SP,#+16
   \   00000388   01002DE9           PUSH     {R0}
   \   0000038C   24509CE5           LDR      R5,[R12, #+36]
   \   00000390   08308DE2           ADD      R3,SP,#+8
   \   00000394   0920A0E1           MOV      R2,R9
   \   00000398   0610A0E1           MOV      R1,R6
   \   0000039C   0A00A0E1           MOV      R0,R10
   \   000003A0   0FE0A0E1           MOV      LR,PC
   \   000003A4   15FF2FE1           BX       R5
   \   000003A8   0C008DE5           STR      R0,[SP, #+12]
    165                          switch (ValueStatus) {
   \   000003AC   08D08DE2           ADD      SP,SP,#+8
   \   000003B0   010050E3           CMP      R0,#+1
   \   000003B4   0300000A           BEQ      ??LibGetValue_24
    166                          default:
    167                              return (GetUnitName(UnitId));
   \   000003B8   08109DE5           LDR      R1,[SP, #+8]
   \   000003BC   0400A0E1           MOV      R0,R4
   \   000003C0   ........           _BLF     ??GetUnitName,??GetUnitName??rA
   \   000003C4   0F0300EA           B        ??LibGetValue_25
    168                          case GETVAL_NOT_AVAILABLE:
    169                              return ("");
   \                     ??LibGetValue_24:
   \   000003C8   031F8FE2           ADR      R1,??LibGetValue_17+0x4  ;; ""
   \   000003CC   0400A0E1           MOV      R0,R4
   \   000003D0   ........           _BLF     ??AnsiString_1,??AnsiString??rA_1
   \   000003D4   0B0300EA           B        ??LibGetValue_25
   \                     ??LibGetValue_17:
   \   000003D8   28000000           DC8      "(",+0,+0
   \   000003DC   00000000           DC8      "",+0,+0,+0
    170                          }
    171                      }
    172                  case SVT_VALUE_NAME_UNIT:
    173                      {
    174                          int Entries;
    175                          ValueList  *VInfoList = ObjPtr->GetValueInfoTable(Entries);
   \                     ??LibGetValue_21:
   \   000003E0   4C309CE5           LDR      R3,[R12, #+76]
   \   000003E4   0020A0E3           MOV      R2,#+0
   \   000003E8   0D10A0E1           MOV      R1,SP
   \   000003EC   0A00A0E1           MOV      R0,R10
   \   000003F0   0FE0A0E1           MOV      LR,PC
   \   000003F4   13FF2FE1           BX       R3
    176                          if (Entries) {
   \   000003F8   00109DE5           LDR      R1,[SP, #+0]
   \   000003FC   000051E3           CMP      R1,#+0
   \   00000400   A402000A           BEQ      ??LibGetValue_16
    177                              TempString = LibGetValueName(VInfoList, Entries, ValueId2);
   \   00000404   0010A0E3           MOV      R1,#+0
   \   00000408   02002DE9           PUSH     {R1}
   \   0000040C   04209DE5           LDR      R2,[SP, #+4]
   \   00000410   0630A0E1           MOV      R3,R6
   \   00000414   0010A0E1           MOV      R1,R0
   \   00000418   14008DE2           ADD      R0,SP,#+20
   \   0000041C   ........           BL       ??LibGetValueName
   \   00000420   005098E5           LDR      R5,[R8, #+0]
   \   00000424   0020A0E3           MOV      R2,#+0
   \   00000428   0530A0E1           MOV      R3,R5
   \   0000042C   14108DE2           ADD      R1,SP,#+20
   \   00000430   30008DE2           ADD      R0,SP,#+48
   \   00000434   ........           _BLF     ??assign,??assign??rA
   \   00000438   0020A0E3           MOV      R2,#+0
   \   0000043C   0110A0E3           MOV      R1,#+1
   \   00000440   14008DE2           ADD      R0,SP,#+20
   \   00000444   ........           _BLF     ??_Tidy,??_Tidy??rA
    178                              float Value;
    179                              ValueStatus = ObjPtr->GetValue(ValueId2, Index, Value, DecPnt, UnitId);
   \   00000448   0C008DE2           ADD      R0,SP,#+12
   \   0000044C   01002DE9           PUSH     {R0}
   \   00000450   14008DE2           ADD      R0,SP,#+20
   \   00000454   01002DE9           PUSH     {R0}
   \   00000458   0610A0E1           MOV      R1,R6
   \   0000045C   A4609AE5           LDR      R6,[R10, #+164]
   \   00000460   90308DE2           ADD      R3,SP,#+144
   \   00000464   246096E5           LDR      R6,[R6, #+36]
   \   00000468   0920A0E1           MOV      R2,R9
   \   0000046C   0A00A0E1           MOV      R0,R10
   \   00000470   0FE0A0E1           MOV      LR,PC
   \   00000474   16FF2FE1           BX       R6
   \   00000478   10008DE5           STR      R0,[SP, #+16]
    180                              switch (ValueStatus) {
   \   0000047C   0CD08DE2           ADD      SP,SP,#+12
   \   00000480   010050E3           CMP      R0,#+1
   \   00000484   8302000A           BEQ      ??LibGetValue_16
    181                              default:
    182                                  TempString += (AnsiString)"(" + GetUnitName(UnitId) + ")";
   \   00000488   08109DE5           LDR      R1,[SP, #+8]
   \   0000048C   440F8DE2           ADD      R0,SP,#+272
   \   00000490   ........           _BLF     ??GetUnitName,??GetUnitName??rA
   \   00000494   0B10A0E1           MOV      R1,R11
   \   00000498   590F8DE2           ADD      R0,SP,#+356
   \   0000049C   ........           _BLF     ??AnsiString_1,??AnsiString??rA_1
   \   000004A0   442F8DE2           ADD      R2,SP,#+272
   \   000004A4   0010A0E1           MOV      R1,R0
   \   000004A8   520F8DE2           ADD      R0,SP,#+328
   \   000004AC   ........           _BLF     `??operator+`,`??operator+??rA`
   \   000004B0   EE2F8FE2           ADR      R2,??LibGetValue_15  ;; ")"
   \   000004B4   521F8DE2           ADD      R1,SP,#+328
   \   000004B8   4B0F8DE2           ADD      R0,SP,#+300
   \   000004BC   ........           _BLF     `??operator+_2`,`??operator+??rA_1`
   \   000004C0   0530A0E1           MOV      R3,R5
   \   000004C4   0020A0E3           MOV      R2,#+0
   \   000004C8   4B1F8DE2           ADD      R1,SP,#+300
   \   000004CC   2C008DE2           ADD      R0,SP,#+44
   \   000004D0   ........           _BLF     ??append,??append??rA
   \   000004D4   0020A0E3           MOV      R2,#+0
   \   000004D8   0110A0E3           MOV      R1,#+1
   \   000004DC   4B0F8DE2           ADD      R0,SP,#+300
   \   000004E0   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000004E4   0020A0E3           MOV      R2,#+0
   \   000004E8   0110A0E3           MOV      R1,#+1
   \   000004EC   520F8DE2           ADD      R0,SP,#+328
   \   000004F0   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000004F4   0020A0E3           MOV      R2,#+0
   \   000004F8   0110A0E3           MOV      R1,#+1
   \   000004FC   440F8DE2           ADD      R0,SP,#+272
   \   00000500   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000504   0020A0E3           MOV      R2,#+0
   \   00000508   0110A0E3           MOV      R1,#+1
   \   0000050C   590F8DE2           ADD      R0,SP,#+356
   \   00000510   5F0200EA           B        ??LibGetValue_26
    183                                  break;
    184                              case GETVAL_NOT_AVAILABLE:
    185                                  break;
    186                              }
    187                          }
    188                      }
    189                      break;
    190                  case SVT_VALUE_SHORT_NAME :
    191                  case SVT_VALUE_NAME :
    192                      {
    193                          int Entries;
    194                          switch (ValueId2) {
   \                     ??LibGetValue_20:
   \   00000514   150046E2           SUB      R0,R6,#+21
   \   00000518   500E40E2           SUB      R0,R0,#+1280
   \   0000051C   040050E3           CMP      R0,#+4
   \   00000520   1C00008A           BHI      ??LibGetValue_27
   \   00000524   011F8FE2           ADR      R1,??LibGetValue_10
   \   00000528   0010D1E7           LDRB     R1,[R1, R0]
   \   0000052C   01F18FE0           ADD      PC,PC,R1, LSL #+2
   \                     ??LibGetValue_10:
   \   00000530   0D191919           DC8      +13,+25,+25,+25
   \   00000534   01000000           DC8      +1,+0,+0,+0
    195                          case SVT_PRO_STATUS:
    196                              TempString = FindDictionaryWord(L_WORD468); // S
   \                     ??LibGetValue_28:
   \   00000538   751FA0E3           MOV      R1,#+468
   \   0000053C   600F8DE2           ADD      R0,SP,#+384
   \   00000540   ........           _BLF     ??FindDictionaryWord,??FindDictionaryWord??rA
   \   00000544   003098E5           LDR      R3,[R8, #+0]
   \   00000548   0020A0E3           MOV      R2,#+0
   \   0000054C   601F8DE2           ADD      R1,SP,#+384
   \   00000550   2C008DE2           ADD      R0,SP,#+44
   \   00000554   ........           _BLF     ??assign,??assign??rA
   \   00000558   0020A0E3           MOV      R2,#+0
   \   0000055C   0110A0E3           MOV      R1,#+1
   \   00000560   600F8DE2           ADD      R0,SP,#+384
   \   00000564   4A0200EA           B        ??LibGetValue_26
    197                              break;
    198                          case SVT_PRO_NAME:
    199                              TempString = FindDictionaryWord(L_WORD74);  //Name
   \                     ??LibGetValue_29:
   \   00000568   4A10A0E3           MOV      R1,#+74
   \   0000056C   670F8DE2           ADD      R0,SP,#+412
   \   00000570   ........           _BLF     ??FindDictionaryWord,??FindDictionaryWord??rA
   \   00000574   003098E5           LDR      R3,[R8, #+0]
   \   00000578   0020A0E3           MOV      R2,#+0
   \   0000057C   671F8DE2           ADD      R1,SP,#+412
   \   00000580   2C008DE2           ADD      R0,SP,#+44
   \   00000584   ........           _BLF     ??assign,??assign??rA
   \   00000588   0020A0E3           MOV      R2,#+0
   \   0000058C   0110A0E3           MOV      R1,#+1
   \   00000590   670F8DE2           ADD      R0,SP,#+412
   \   00000594   3E0200EA           B        ??LibGetValue_26
    200                              break;
    201                          default:
    202                              {
    203                                  ValueList  *VInfoList = ObjPtr->GetValueInfoTable(Entries, Index);
   \                     ??LibGetValue_27:
   \   00000598   4C309CE5           LDR      R3,[R12, #+76]
   \   0000059C   0920A0E1           MOV      R2,R9
   \   000005A0   0D10A0E1           MOV      R1,SP
   \   000005A4   0A00A0E1           MOV      R0,R10
   \   000005A8   0FE0A0E1           MOV      LR,PC
   \   000005AC   13FF2FE1           BX       R3
   \   000005B0   0010A0E1           MOV      R1,R0
    204                                  if (Entries) {
   \   000005B4   00009DE5           LDR      R0,[SP, #+0]
   \   000005B8   000050E3           CMP      R0,#+0
   \   000005BC   3502000A           BEQ      ??LibGetValue_16
    205                                      switch (ValueId) {
   \   000005C0   B95045E2           SUB      R5,R5,#+185
   \   000005C4   B05E45E2           SUB      R5,R5,#+2816
   \   000005C8   020055E3           CMP      R5,#+2
   \   000005CC   3102008A           BHI      ??LibGetValue_16
   \   000005D0   020F8FE2           ADR      R0,??LibGetValue_11
   \   000005D4   8550A0E1           MOV      R5,R5, LSL #+1
   \   000005D8   B50090E1           LDRH     R0,[R0, R5]
   \   000005DC   00F18FE0           ADD      PC,PC,R0, LSL #+2
   \                     ??LibGetValue_11:
   \   000005E0   12002D020100       DC16     +18,+557,+1,+0
   \              0000        
    206                                      case SVT_VALUE_SHORT_NAME:
    207                                          TempString = LibGetShortValueName(VInfoList, Entries, ValueId2, &ValueStatus);
   \                     ??LibGetValue_30:
   \   000005E8   04008DE2           ADD      R0,SP,#+4
   \   000005EC   01002DE9           PUSH     {R0}
   \   000005F0   04209DE5           LDR      R2,[SP, #+4]
   \   000005F4   0630A0E1           MOV      R3,R6
   \   000005F8   6F0F8DE2           ADD      R0,SP,#+444
   \   000005FC   ........           BL       ??LibGetShortValueName
   \   00000600   003098E5           LDR      R3,[R8, #+0]
   \   00000604   0020A0E3           MOV      R2,#+0
   \   00000608   6F1F8DE2           ADD      R1,SP,#+444
   \   0000060C   30008DE2           ADD      R0,SP,#+48
   \   00000610   ........           _BLF     ??assign,??assign??rA
   \   00000614   0020A0E3           MOV      R2,#+0
   \   00000618   0110A0E3           MOV      R1,#+1
   \   0000061C   6F0F8DE2           ADD      R0,SP,#+444
   \                     ??LibGetValue_31:
   \   00000620   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000624   04D08DE2           ADD      SP,SP,#+4
   \   00000628   1A0200EA           B        ??LibGetValue_16
    208                                          break;
    209                                      case SVT_VALUE_NAME:
    210                                          TempString = LibGetValueName(VInfoList, Entries, ValueId2, &ValueStatus);
   \                     ??LibGetValue_32:
   \   0000062C   04008DE2           ADD      R0,SP,#+4
   \   00000630   01002DE9           PUSH     {R0}
   \   00000634   04209DE5           LDR      R2,[SP, #+4]
   \   00000638   0630A0E1           MOV      R3,R6
   \   0000063C   760F8DE2           ADD      R0,SP,#+472
   \   00000640   ........           BL       ??LibGetValueName
   \   00000644   003098E5           LDR      R3,[R8, #+0]
   \   00000648   0020A0E3           MOV      R2,#+0
   \   0000064C   761F8DE2           ADD      R1,SP,#+472
   \   00000650   30008DE2           ADD      R0,SP,#+48
   \   00000654   ........           _BLF     ??assign,??assign??rA
   \   00000658   0020A0E3           MOV      R2,#+0
   \   0000065C   0110A0E3           MOV      R1,#+1
   \   00000660   760F8DE2           ADD      R0,SP,#+472
   \   00000664   EDFFFFEA           B        ??LibGetValue_31
    211                                          break;
    212                                      }
    213                                  }
    214                              }
    215                              break;
    216                          }
    217                      }
    218                      break;
    219                  case SVT_REPORT_VALUE_NAME      :
    220                  case SVT_REPORT_VALUE_SNAME     :
    221                      {
    222                          int Entries;
    223                          ValueList  *VInfoList = ObjPtr->GetServiceValueInfoTable(Entries);
   \                     ??LibGetValue_22:
   \   00000668   50209CE5           LDR      R2,[R12, #+80]
   \   0000066C   0D10A0E1           MOV      R1,SP
   \   00000670   0A00A0E1           MOV      R0,R10
   \   00000674   0FE0A0E1           MOV      LR,PC
   \   00000678   12FF2FE1           BX       R2
   \   0000067C   0010A0E1           MOV      R1,R0
    224                          if (Entries) {
   \   00000680   00009DE5           LDR      R0,[SP, #+0]
   \   00000684   000050E3           CMP      R0,#+0
   \   00000688   0202000A           BEQ      ??LibGetValue_16
    225                              switch (ValueId) {
   \   0000068C   BC5045E2           SUB      R5,R5,#+188
   \   00000690   B05E45E2           SUB      R5,R5,#+2816
   \   00000694   010055E3           CMP      R5,#+1
   \   00000698   FE01008A           BHI      ??LibGetValue_16
   \   0000069C   020F8FE2           ADR      R0,??LibGetValue_12
   \   000006A0   8550A0E1           MOV      R5,R5, LSL #+1
   \   000006A4   B50090E1           LDRH     R0,[R0, R5]
   \   000006A8   00F18FE0           ADD      PC,PC,R0, LSL #+2
   \                     ??LibGetValue_12:
   \   000006AC   0F000000           DC16     +15,+0
    226                              case SVT_REPORT_VALUE_SNAME:
    227                                  TempString = LibGetShortValueName(VInfoList, Entries, ValueId2, &ValueStatus);
   \                     ??LibGetValue_33:
   \   000006B0   04008DE2           ADD      R0,SP,#+4
   \   000006B4   01002DE9           PUSH     {R0}
   \   000006B8   04209DE5           LDR      R2,[SP, #+4]
   \   000006BC   0630A0E1           MOV      R3,R6
   \   000006C0   F8008DE2           ADD      R0,SP,#+248
   \   000006C4   ........           BL       ??LibGetShortValueName
   \   000006C8   003098E5           LDR      R3,[R8, #+0]
   \   000006CC   0020A0E3           MOV      R2,#+0
   \   000006D0   F8108DE2           ADD      R1,SP,#+248
   \   000006D4   30008DE2           ADD      R0,SP,#+48
   \   000006D8   ........           _BLF     ??assign,??assign??rA
   \                     ??LibGetValue_34:
   \   000006DC   0020A0E3           MOV      R2,#+0
   \   000006E0   0110A0E3           MOV      R1,#+1
   \   000006E4   F8008DE2           ADD      R0,SP,#+248
   \   000006E8   CCFFFFEA           B        ??LibGetValue_31
    228                                  break;
    229                              case SVT_REPORT_VALUE_NAME:
    230                                  TempString = LibGetValueName(VInfoList, Entries, ValueId2, &ValueStatus);
   \                     ??LibGetValue_35:
   \   000006EC   04008DE2           ADD      R0,SP,#+4
   \   000006F0   01002DE9           PUSH     {R0}
   \   000006F4   04209DE5           LDR      R2,[SP, #+4]
   \   000006F8   0630A0E1           MOV      R3,R6
   \   000006FC   DC008DE2           ADD      R0,SP,#+220
   \   00000700   ........           BL       ??LibGetValueName
   \   00000704   003098E5           LDR      R3,[R8, #+0]
   \   00000708   0020A0E3           MOV      R2,#+0
   \   0000070C   DC108DE2           ADD      R1,SP,#+220
   \   00000710   30008DE2           ADD      R0,SP,#+48
   \   00000714   ........           _BLF     ??assign,??assign??rA
   \   00000718   0020A0E3           MOV      R2,#+0
   \   0000071C   0110A0E3           MOV      R1,#+1
   \   00000720   DC008DE2           ADD      R0,SP,#+220
   \   00000724   BDFFFFEA           B        ??LibGetValue_31
    231                                  break;
    232                              }
    233                          }
    234                      }
    235                      break;
    236                  case SVT_COLOUR                 :
    237                  case SVT_BASIC_TYPE_NAME        :
    238                  case SVT_CARGO_TYPE_NAME        :
    239                  case SVT_CURRENT_LANGUAGE       :
    240                  case SVT_CALL_SIGN              :
    241                  case SVT_SHIP_OWNER             :
    242                  case SVT_SHIP_NAME              :
    243                  case SVT_SYSTEM_ID              :
    244                  case SVT_DATA_VERSION           :
    245                  case SVT_PROG_VERSION           :
    246                  case SVT_IO_CH_NAME             :
    247                  case SVT_IO_CH_LOCATION         :
    248                  case SVT_IO_CH_TYPE_TEXT        :
    249                  case SVT_AI_LOCATION            :
    250                  case SVT_AI_TYPE_TEXT           :
    251                  case SVT_AI_ENABLE_TEXT         :
    252                  case SVT_BP_ENABLE_TEXT         :
    253                  case SVT_BP_ENABLE1_TEXT        :
    254                  case SVT_BP_ENABLE2_TEXT        :
    255                  case SVT_BP_ENABLE3_TEXT        :
    256                  case SVT_MP_ENABLE_TEXT         :
    257                  case SVT_UP_ENABLE_TEXT         :
    258                  case SVT_TP_ENABLE_TEXT         :
    259                  case SVT_LP_ENABLE_TEXT         :
    260                  case SVT_AI_PRONAME             :
    261                  case SVT_AI_RANGE               :
    262                  case SVT_AL_AKN_TIME            :
    263                  case SVT_AL_ACT_TIME            :
    264                  case SVT_AL_DIS_TIME            :
    265                  case SVT_AL_AKN_DATE_TIME       :
    266                  case SVT_AL_ACT_DATE_TIME       :
    267                  case SVT_AL_DIS_DATE_TIME       :
    268                  case SVT_AL_LOCATION            :
    269                  case SVT_AL_DESCRIPTION         :
    270                  case SVT_AL_MESSAGE             :
    271                  case SVT_AL_UNIT                :
    272                  case SVT_AL_STATE               :
    273                  case SVT_PRO_NAME               :
    274                  case SVT_PRO_LONGNAME           :
    275                  case SVT_PRO_TAGNAME            :
    276                  case SVT_PRO_STATUS             :
    277                  case SVT_LEVEL_SWITCH_STATUS    :
    278                  case SVT_IO_P_TYPE_RUNNING      :
    279                  case SVT_REMAINING_TIME         :
    280                  case SVT_FINISH_TIME            :
    281                  case SVT_IO_SERIAL_NUMBER       :
    282                  case SVT_LAST_OS_ERROR_TASK     :
    283                  case SVT_IO_CH_EEP_SNS_STAT     :
    284                  case SVT_IO_CH_EEP_PC_STAT      :
    285                  case SVT_IO_CH_EEP_USE_PCDATA   :
    286                  case SVT_IO_CH_USE_PC_SETUP     :
    287                  case SVT_IO_CH_AD_SENSOR        :
    288                  case SVT_IO_CH_FROM_PC_SENSOR   :
    289                  case SVT_IO_CH_NEW_SENSOR       :
    290                  case SVT_IO_CH_CONV_ERROR       :
    291                  case SVT_IO_CH_CAL_ERROR        :
    292                  case SVT_IO_CH_CNV_CAL_ERROR    :
    293                  case SVT_AI_SERIAL_NUMBER       :
    294                  case SVT_AI_UNIT                :
    295                  case SVT_AI_CAL_DATA_PERCENT    :
    296                  case SVT_UNIT_PROGRAM_VERSION   :
    297                  case SVT_UNIT_BOOTLOADER_VERSION:
    298                  case SVT_AL_ENABLE_TXT          :
    299                  case SVT_AL_LOG_ENABLE_TXT      :
    300                  case SVT_IOC_IO_TYPE_TEXT       :
    301                  case SVT_DEVICE                 :
    302                  case SVT_PROTOCOL               :
    303                  case SVT_RXERR_ID               :
    304                  case SVT_RXERR_MSG              :
    305                  case SVT_RXERR_TIME             :
    306                  case SVT_ERROR_ADDRESS          :
    307                  case SVT_LS_TRIM_LIST_SOURCE    :
    308                  case SVT_IGNORE_VOL_VGT_MESSAGE  :
    309                  case SVT_INTERFACE              :
    310                  case SVT_TANK_STATE_STR         :
    311                  case SVT_TANK_STATE_STR_CGO     :
    312                  case SVT_TANK_STATE_STR_BAL     :
    313                  case SVT_TANK_STATE_STR_SER     :
    314                  case SVT_TANK_STATE_STR_LSW     :
    315                  case SVT_TANK_TYPE              :
    316                  case SVT_AL_LIMIT_TYPE_PRESS    :
    317                  case SVT_TWM_SERIAL_ID			:
    318                  case SVT_TWM_ON_OFF_STATUS		:
    319                  case SVT_BP_SERIAL_NO           :
    320                  case SVT_BP_SERIAL_NO1          :
    321                  case SVT_BP_SERIAL_NO2          :
    322                  case SVT_BP_SERIAL_NO3          :
    323                  case SVT_MP_SERIAL_NO           :
    324                  case SVT_UP_SERIAL_NO           :
    325                  case SVT_TP_SERIAL_NO           :
    326                  case SVT_TASK_NAME              :
    327          #ifdef ANWIN
    328                  case SVT_S_MAX_BM_FRAME_NAME    :
    329                  case SVT_S_MAX_SF_FRAME_NAME    :
    330                  case SVT_LR_LOADPORT            :
    331                  case SVT_LR_DESTPORT            :
    332                  case SVT_LR_VOYAGE              :
    333                  case SVT_LR_START               :
    334                  case SVT_LR_STOP                :
    335                  case SVT_LR_INSPECTION          :
    336                  case SVT_LR_SHIP_NAME           :
    337                  case SVT_LR_SHIP_TITLE          :
    338                  case SVT_LR_SURV_NAME           :
    339                  case SVT_LR_SURV_TITLE          :
    340                  case SVT_LR_REMARK1             :
    341                  case SVT_L_ONLINE_STATUS        :
    342                  case SVT_USE_MSRD_DNS           :
    343          #endif
    344          
    345                      {
    346                          ValueStatus = ObjPtr->GetStringValue(ValueId, Index, TempString);
   \                     ??LibGetValue_19:
   \   00000728   0510A0E1           MOV      R1,R5
   \   0000072C   28509CE5           LDR      R5,[R12, #+40]
   \   00000730   2C308DE2           ADD      R3,SP,#+44
   \   00000734   0920A0E1           MOV      R2,R9
   \   00000738   0A00A0E1           MOV      R0,R10
   \   0000073C   0FE0A0E1           MOV      LR,PC
   \   00000740   15FF2FE1           BX       R5
   \   00000744   04008DE5           STR      R0,[SP, #+4]
    347                          switch (ValueStatus) {
   \   00000748   050040E2           SUB      R0,R0,#+5
   \   0000074C   010050E3           CMP      R0,#+1
   \   00000750   0D00009A           BLS      ??LibGetValue_36
   \   00000754   020050E2           SUBS     R0,R0,#+2
   \   00000758   1700001A           BNE      ??LibGetValue_37
    348                          case GETVAL_STRING_NOT_LEGAL:
    349                              TempString = FindDictionaryWord(L_WORD0);   // ???
   \   0000075C   0010A0E3           MOV      R1,#+0
   \   00000760   48008DE2           ADD      R0,SP,#+72
   \   00000764   ........           _BLF     ??FindDictionaryWord,??FindDictionaryWord??rA
   \   00000768   003098E5           LDR      R3,[R8, #+0]
   \   0000076C   0020A0E3           MOV      R2,#+0
   \   00000770   48108DE2           ADD      R1,SP,#+72
   \   00000774   2C008DE2           ADD      R0,SP,#+44
   \   00000778   ........           _BLF     ??assign,??assign??rA
   \   0000077C   0020A0E3           MOV      R2,#+0
   \   00000780   0110A0E3           MOV      R1,#+1
   \   00000784   48008DE2           ADD      R0,SP,#+72
   \   00000788   0A0000EA           B        ??LibGetValue_38
    350                              break;
    351                          case GETVAL_INT_NOT_LEGAL:
    352                          case GETVAL_FLOAT_NOT_LEGAL:
    353                              TempString = FindDictionaryWord(L_WORD472); // --.-
   \                     ??LibGetValue_36:
   \   0000078C   761FA0E3           MOV      R1,#+472
   \   00000790   64008DE2           ADD      R0,SP,#+100
   \   00000794   ........           _BLF     ??FindDictionaryWord,??FindDictionaryWord??rA
   \   00000798   003098E5           LDR      R3,[R8, #+0]
   \   0000079C   0020A0E3           MOV      R2,#+0
   \   000007A0   64108DE2           ADD      R1,SP,#+100
   \   000007A4   2C008DE2           ADD      R0,SP,#+44
   \   000007A8   ........           _BLF     ??assign,??assign??rA
   \   000007AC   0020A0E3           MOV      R2,#+0
   \   000007B0   0110A0E3           MOV      R1,#+1
   \   000007B4   64008DE2           ADD      R0,SP,#+100
   \                     ??LibGetValue_38:
   \   000007B8   ........           _BLF     ??_Tidy,??_Tidy??rA
    354                              Alignment = ALIGN_RIGHT;
    355                              break;
    356                          default:
    357                              break;
    358                          }
    359                          Alignment = ALIGN_LEFT;
   \                     ??LibGetValue_37:
   \   000007BC   0110A0E3           MOV      R1,#+1
   \   000007C0   80108DE5           STR      R1,[SP, #+128]
   \   000007C4   B30100EA           B        ??LibGetValue_16
    360                      }
    361                      break;
    362                  default:
    363                      {
    364                          float Value;
    365                          ValueStatus = ObjPtr->GetValue(ValueId, Index, Value, DecPnt, UnitId);
   \                     ??LibGetValue_23:
   \   000007C8   08008DE2           ADD      R0,SP,#+8
   \   000007CC   01002DE9           PUSH     {R0}
   \   000007D0   10008DE2           ADD      R0,SP,#+16
   \   000007D4   01002DE9           PUSH     {R0}
   \   000007D8   0510A0E1           MOV      R1,R5
   \   000007DC   24509CE5           LDR      R5,[R12, #+36]
   \   000007E0   08308DE2           ADD      R3,SP,#+8
   \   000007E4   0920A0E1           MOV      R2,R9
   \   000007E8   0A00A0E1           MOV      R0,R10
   \   000007EC   0FE0A0E1           MOV      LR,PC
   \   000007F0   15FF2FE1           BX       R5
   \   000007F4   0C008DE5           STR      R0,[SP, #+12]
    366                          switch (Flag) {
   \   000007F8   E8029DE5           LDR      R0,[SP, #+744]
   \   000007FC   08D08DE2           ADD      SP,SP,#+8
   \   00000800   030050E3           CMP      R0,#+3
   \   00000804   A301008A           BHI      ??LibGetValue_16
   \   00000808   021F8FE2           ADR      R1,??LibGetValue_13
   \   0000080C   8000A0E1           MOV      R0,R0, LSL #+1
   \   00000810   B01091E1           LDRH     R1,[R1, R0]
   \   00000814   01F18FE0           ADD      PC,PC,R1, LSL #+2
   \                     ??LibGetValue_13:
   \   00000818   01005E016601       DC16     +1,+350,+358,+358
   \              6601        
    367                          case SVT_FLAG_NORMAL      :
    368                              switch (ValueStatus) {
   \                     ??LibGetValue_39:
   \   00000820   04009DE5           LDR      R0,[SP, #+4]
   \   00000824   FC679FE5           LDR      R6,??LibGetValue_40+0x4  ;; 0x3dcccccd
   \   00000828   012047E2           SUB      R2,R7,#+1
   \   0000082C   6B50A0E3           MOV      R5,#+107
   \   00000830   805F85E3           ORR      R5,R5,#0x200
   \   00000834   110050E3           CMP      R0,#+17
   \   00000838   4801008A           BHI      ??LibGetValue_41
   \   0000083C   021F8FE2           ADR      R1,??LibGetValue_14
   \   00000840   8000A0E1           MOV      R0,R0, LSL #+1
   \   00000844   B01091E1           LDRH     R1,[R1, R0]
   \   00000848   01F18FE0           ADD      PC,PC,R1, LSL #+2
   \                     ??LibGetValue_14:
   \   0000084C   2E0016002200       DC16     +46,+22,+34,+324
   \              4401        
   \   00000854   440116001600       DC16     +324,+22,+22,+324
   \              4401        
   \   0000085C   0A002E004100       DC16     +10,+46,+65,+155
   \              9B00        
   \   00000864   3801FB00EF00       DC16     +312,+251,+239,+22
   \              1600        
   \   0000086C   2E002E00           DC16     +46,+46
   \                     ??LibGetValue_15:
   \   00000870   29000000           DC8      ")",+0,+0
   \   00000874   ........           DC32     ??npos
    369                              case GETVAL_DRY_SENSOR:
    370                                  TempString = FindDictionaryWord(L_WORD471); // Dry
   \                     ??LibGetValue_42:
   \   00000878   941045E2           SUB      R1,R5,#+148
   \   0000087C   7C0F8DE2           ADD      R0,SP,#+496
   \   00000880   ........           _BLF     ??FindDictionaryWord,??FindDictionaryWord??rA
   \   00000884   003098E5           LDR      R3,[R8, #+0]
   \   00000888   0020A0E3           MOV      R2,#+0
   \   0000088C   7C1F8DE2           ADD      R1,SP,#+496
   \   00000890   2C008DE2           ADD      R0,SP,#+44
   \   00000894   ........           _BLF     ??assign,??assign??rA
   \   00000898   0020A0E3           MOV      R2,#+0
   \   0000089C   0110A0E3           MOV      R1,#+1
   \   000008A0   7C0F8DE2           ADD      R0,SP,#+496
   \   000008A4   7A0100EA           B        ??LibGetValue_26
    371                                  Alignment = ALIGN_RIGHT;
    372                                  break;
    373                              case GETVAL_NOT_AVAILABLE   :
    374                              case GETVAL_INT_NOT_LEGAL   :
    375                              case GETVAL_FLOAT_NOT_LEGAL :
    376                              case GETVAL_HW_ALARM        :
    377                                  TempString = FindDictionaryWord(L_WORD472); // --.-
   \                     ??LibGetValue_43:
   \   000008A8   761FA0E3           MOV      R1,#+472
   \   000008AC   830F8DE2           ADD      R0,SP,#+524
   \   000008B0   ........           _BLF     ??FindDictionaryWord,??FindDictionaryWord??rA
   \   000008B4   003098E5           LDR      R3,[R8, #+0]
   \   000008B8   0020A0E3           MOV      R2,#+0
   \   000008BC   831F8DE2           ADD      R1,SP,#+524
   \   000008C0   2C008DE2           ADD      R0,SP,#+44
   \   000008C4   ........           _BLF     ??assign,??assign??rA
   \   000008C8   0020A0E3           MOV      R2,#+0
   \   000008CC   0110A0E3           MOV      R1,#+1
   \   000008D0   830F8DE2           ADD      R0,SP,#+524
   \   000008D4   6E0100EA           B        ??LibGetValue_26
    378                                  Alignment = ALIGN_RIGHT;
    379                                  break;
    380                              case GETVAL_TANK_EMPTY:
    381                                  TempString = FindDictionaryWord(L_WORD473); // Empty
   \                     ??LibGetValue_44:
   \   000008D8   921045E2           SUB      R1,R5,#+146
   \   000008DC   8A0F8DE2           ADD      R0,SP,#+552
   \   000008E0   ........           _BLF     ??FindDictionaryWord,??FindDictionaryWord??rA
   \   000008E4   003098E5           LDR      R3,[R8, #+0]
   \   000008E8   0020A0E3           MOV      R2,#+0
   \   000008EC   8A1F8DE2           ADD      R1,SP,#+552
   \   000008F0   2C008DE2           ADD      R0,SP,#+44
   \   000008F4   ........           _BLF     ??assign,??assign??rA
   \   000008F8   0020A0E3           MOV      R2,#+0
   \   000008FC   0110A0E3           MOV      R1,#+1
   \   00000900   8A0F8DE2           ADD      R0,SP,#+552
   \   00000904   620100EA           B        ??LibGetValue_26
    382                                  Alignment = ALIGN_RIGHT;
    383                                  break;
    384                              case GETVAL_OFFLINE     :
    385                              case GETVAL_DISABLED    :
    386                              case GETVAL_NO_ERR      :
    387                              case GETVAL_NOT_MEASURED:
    388                                  {
    389                                      char ResultBuf[BUF_SIZE];
    390                                      ConvertFromSi(ResultBuf, Value, Width, DecPnt, UnitId);
   \                     ??LibGetValue_45:
   \   00000908   08009DE5           LDR      R0,[SP, #+8]
   \   0000090C   0720A0E1           MOV      R2,R7
   \                     ??LibGetValue_46:
   \   00000910   01002DE9           PUSH     {R0}
   \   00000914   10309DE5           LDR      R3,[SP, #+16]
   \   00000918   04109DE5           LDR      R1,[SP, #+4]
   \   0000091C   8C008DE2           ADD      R0,SP,#+140
   \   00000920   ........           _BLF     ??ConvertFromSi,??ConvertFromSi??rA
    391                                      TempString = ResultBuf;
   \   00000924   8C108DE2           ADD      R1,SP,#+140
   \   00000928   14008DE2           ADD      R0,SP,#+20
   \   0000092C   ........           _BLF     ??AnsiString_1,??AnsiString??rA_1
   \   00000930   003098E5           LDR      R3,[R8, #+0]
   \   00000934   0020A0E3           MOV      R2,#+0
   \   00000938   0010A0E1           MOV      R1,R0
   \   0000093C   30008DE2           ADD      R0,SP,#+48
   \   00000940   ........           _BLF     ??assign,??assign??rA
   \   00000944   0020A0E3           MOV      R2,#+0
   \   00000948   0110A0E3           MOV      R1,#+1
   \   0000094C   14008DE2           ADD      R0,SP,#+20
   \   00000950   32FFFFEA           B        ??LibGetValue_31
    392                                  }
    393                                  break;
    394                              case GETVAL_FWD_AFT:
    395                                  {
    396                                      char ResultBuf[BUF_SIZE];
    397                                      ConvertFromSi(ResultBuf, fabs(Value), Width - 1, DecPnt, UnitId);
   \                     ??LibGetValue_47:
   \   00000954   00009DE5           LDR      R0,[SP, #+0]
   \   00000958   8014C0E3           BIC      R1,R0,#0x80000000
   \   0000095C   08009DE5           LDR      R0,[SP, #+8]
   \   00000960   01002DE9           PUSH     {R0}
   \   00000964   10309DE5           LDR      R3,[SP, #+16]
   \   00000968   8C008DE2           ADD      R0,SP,#+140
   \   0000096C   ........           _BLF     ??ConvertFromSi,??ConvertFromSi??rA
    398                                      float Limit;
    399                                      switch (UnitId) {
   \   00000970   0C009DE5           LDR      R0,[SP, #+12]
   \   00000974   04D08DE2           ADD      SP,SP,#+4
   \   00000978   010050E2           SUBS     R0,R0,#+1
   \   0000097C   0200000A           BEQ      ??LibGetValue_48
   \   00000980   090050E2           SUBS     R0,R0,#+9
    400                                      case LENGTH_UNIT:
    401                                          Limit = 0.10;
    402                                          break;
    403                                      case ANGLE_UNIT:
    404                                          Limit = 0.05 / RAD_FACTOR;
   \   00000984   A0669F05           LDREQ    R6,??LibGetValue_40+0x8  ;; 0x3a64c388
    405                                          break;
    406                                      default:
    407                                          Limit = 0.0;
   \   00000988   0060A013           MOVNE    R6,#+0
    408                                          break;
    409          
    410                                      }
    411                                      if (Value > Limit) {
   \                     ??LibGetValue_48:
   \   0000098C   00109DE5           LDR      R1,[SP, #+0]
   \   00000990   0600A0E1           MOV      R0,R6
   \   00000994   ........           _BLF     __fLess,??__fLess??rA
   \   00000998   000050E3           CMP      R0,#+0
   \   0000099C   1700000A           BEQ      ??LibGetValue_49
    412                                          TempString = FindDictionaryWord(L_WORD615) + ResultBuf;
   \   000009A0   041045E2           SUB      R1,R5,#+4
   \   000009A4   48008DE2           ADD      R0,SP,#+72
   \   000009A8   ........           _BLF     ??FindDictionaryWord,??FindDictionaryWord??rA
   \   000009AC   88208DE2           ADD      R2,SP,#+136
   \   000009B0   48108DE2           ADD      R1,SP,#+72
   \   000009B4   64008DE2           ADD      R0,SP,#+100
   \   000009B8   ........           _BLF     `??operator+_2`,`??operator+??rA_1`
   \   000009BC   64108DE2           ADD      R1,SP,#+100
   \   000009C0   10008DE2           ADD      R0,SP,#+16
   \   000009C4   ........           _BLF     ??AnsiString_2,??AnsiString??rA_2
   \   000009C8   003098E5           LDR      R3,[R8, #+0]
   \   000009CC   0020A0E3           MOV      R2,#+0
   \   000009D0   0010A0E1           MOV      R1,R0
   \   000009D4   2C008DE2           ADD      R0,SP,#+44
   \   000009D8   ........           _BLF     ??assign,??assign??rA
   \   000009DC   0020A0E3           MOV      R2,#+0
   \   000009E0   0110A0E3           MOV      R1,#+1
   \   000009E4   10008DE2           ADD      R0,SP,#+16
   \   000009E8   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000009EC   0020A0E3           MOV      R2,#+0
   \   000009F0   0110A0E3           MOV      R1,#+1
   \   000009F4   64008DE2           ADD      R0,SP,#+100
   \   000009F8   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000009FC   210100EA           B        ??LibGetValue_50
    413                                      } else if (Value < -Limit) {
   \                     ??LibGetValue_49:
   \   00000A00   00009DE5           LDR      R0,[SP, #+0]
   \   00000A04   801426E2           EOR      R1,R6,#0x80000000
   \   00000A08   ........           _BLF     __fLess,??__fLess??rA
   \   00000A0C   000050E3           CMP      R0,#+0
   \   00000A10   1A00000A           BEQ      ??LibGetValue_51
    414                                          TempString = FindDictionaryWord(L_WORD616) + ResultBuf;
   \   00000A14   9A1FA0E3           MOV      R1,#+616
   \   00000A18   10008DE2           ADD      R0,SP,#+16
   \   00000A1C   ........           _BLF     ??FindDictionaryWord,??FindDictionaryWord??rA
   \   00000A20   88208DE2           ADD      R2,SP,#+136
   \   00000A24   10108DE2           ADD      R1,SP,#+16
   \   00000A28   64008DE2           ADD      R0,SP,#+100
   \   00000A2C   ........           _BLF     `??operator+_2`,`??operator+??rA_1`
   \   00000A30   64108DE2           ADD      R1,SP,#+100
   \   00000A34   48008DE2           ADD      R0,SP,#+72
   \   00000A38   ........           _BLF     ??AnsiString_2,??AnsiString??rA_2
   \   00000A3C   003098E5           LDR      R3,[R8, #+0]
   \   00000A40   0020A0E3           MOV      R2,#+0
   \   00000A44   0010A0E1           MOV      R1,R0
   \   00000A48   2C008DE2           ADD      R0,SP,#+44
   \   00000A4C   ........           _BLF     ??assign,??assign??rA
   \   00000A50   0020A0E3           MOV      R2,#+0
   \   00000A54   0110A0E3           MOV      R1,#+1
   \   00000A58   48008DE2           ADD      R0,SP,#+72
   \   00000A5C   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000A60   0020A0E3           MOV      R2,#+0
   \   00000A64   0110A0E3           MOV      R1,#+1
   \   00000A68   64008DE2           ADD      R0,SP,#+100
   \   00000A6C   ........           _BLF     ??_Tidy,??_Tidy??rA
   \                     ??LibGetValue_52:
   \   00000A70   0020A0E3           MOV      R2,#+0
   \   00000A74   0110A0E3           MOV      R1,#+1
   \   00000A78   10008DE2           ADD      R0,SP,#+16
   \   00000A7C   040100EA           B        ??LibGetValue_26
    415                                      } else TempString   = TempString = FindDictionaryWord(L_WORD619);
   \                     ??LibGetValue_51:
   \   00000A80   0510A0E1           MOV      R1,R5
   \   00000A84   10008DE2           ADD      R0,SP,#+16
   \   00000A88   ........           _BLF     ??FindDictionaryWord,??FindDictionaryWord??rA
   \   00000A8C   005098E5           LDR      R5,[R8, #+0]
   \   00000A90   0020A0E3           MOV      R2,#+0
   \   00000A94   0530A0E1           MOV      R3,R5
   \   00000A98   10108DE2           ADD      R1,SP,#+16
   \   00000A9C   2C008DE2           ADD      R0,SP,#+44
   \   00000AA0   ........           _BLF     ??assign,??assign??rA
   \   00000AA4   0530A0E1           MOV      R3,R5
   \   00000AA8   0020A0E3           MOV      R2,#+0
   \   00000AAC   2C108DE2           ADD      R1,SP,#+44
   \   00000AB0   2C008DE2           ADD      R0,SP,#+44
   \   00000AB4   ........           _BLF     ??assign,??assign??rA
   \   00000AB8   ECFFFFEA           B        ??LibGetValue_52
    416                                  }
    417                                  break;
    418                              case GETVAL_PORT_STBD:
    419                                  {
    420                                      char ResultBuf[BUF_SIZE];
    421                                      ConvertFromSi(ResultBuf, fabs(Value), Width - 1, DecPnt, UnitId);
   \                     ??LibGetValue_53:
   \   00000ABC   00009DE5           LDR      R0,[SP, #+0]
   \   00000AC0   8014C0E3           BIC      R1,R0,#0x80000000
   \   00000AC4   08009DE5           LDR      R0,[SP, #+8]
   \   00000AC8   01002DE9           PUSH     {R0}
   \   00000ACC   10309DE5           LDR      R3,[SP, #+16]
   \   00000AD0   8C008DE2           ADD      R0,SP,#+140
   \   00000AD4   ........           _BLF     ??ConvertFromSi,??ConvertFromSi??rA
    422                                      float Limit;
    423                                      switch (UnitId) {
   \   00000AD8   0C009DE5           LDR      R0,[SP, #+12]
   \   00000ADC   04D08DE2           ADD      SP,SP,#+4
   \   00000AE0   010050E2           SUBS     R0,R0,#+1
   \   00000AE4   0200000A           BEQ      ??LibGetValue_54
   \   00000AE8   090050E2           SUBS     R0,R0,#+9
    424                                      case LENGTH_UNIT:
    425                                          Limit = 0.10;
    426                                          break;
    427                                      case ANGLE_UNIT:
    428                                          Limit = 0.1 / RAD_FACTOR;
   \   00000AEC   3C659F05           LDREQ    R6,??LibGetValue_40+0xC  ;; 0x3ae4c388
    429                                          break;
    430                                      default:
    431                                          Limit = 0.0;
   \   00000AF0   0060A013           MOVNE    R6,#+0
    432                                          break;
    433          
    434                                      }
    435                                      if (Value < -Limit) {
   \                     ??LibGetValue_54:
   \   00000AF4   00009DE5           LDR      R0,[SP, #+0]
   \   00000AF8   801426E2           EOR      R1,R6,#0x80000000
   \   00000AFC   ........           _BLF     __fLess,??__fLess??rA
   \   00000B00   000050E3           CMP      R0,#+0
   \   00000B04   1700000A           BEQ      ??LibGetValue_55
    436                                          TempString = FindDictionaryWord(L_WORD617) + ResultBuf;
   \   00000B08   0210C5E3           BIC      R1,R5,#0x2
   \   00000B0C   48008DE2           ADD      R0,SP,#+72
   \   00000B10   ........           _BLF     ??FindDictionaryWord,??FindDictionaryWord??rA
   \   00000B14   88208DE2           ADD      R2,SP,#+136
   \   00000B18   48108DE2           ADD      R1,SP,#+72
   \   00000B1C   64008DE2           ADD      R0,SP,#+100
   \   00000B20   ........           _BLF     `??operator+_2`,`??operator+??rA_1`
   \   00000B24   64108DE2           ADD      R1,SP,#+100
   \   00000B28   10008DE2           ADD      R0,SP,#+16
   \   00000B2C   ........           _BLF     ??AnsiString_2,??AnsiString??rA_2
   \   00000B30   003098E5           LDR      R3,[R8, #+0]
   \   00000B34   0020A0E3           MOV      R2,#+0
   \   00000B38   0010A0E1           MOV      R1,R0
   \   00000B3C   2C008DE2           ADD      R0,SP,#+44
   \   00000B40   ........           _BLF     ??assign,??assign??rA
   \   00000B44   0020A0E3           MOV      R2,#+0
   \   00000B48   0110A0E3           MOV      R1,#+1
   \   00000B4C   10008DE2           ADD      R0,SP,#+16
   \   00000B50   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000B54   0020A0E3           MOV      R2,#+0
   \   00000B58   0110A0E3           MOV      R1,#+1
   \   00000B5C   64008DE2           ADD      R0,SP,#+100
   \   00000B60   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000B64   C70000EA           B        ??LibGetValue_50
    437                                      } else if (Value > Limit) {
   \                     ??LibGetValue_55:
   \   00000B68   00109DE5           LDR      R1,[SP, #+0]
   \   00000B6C   0600A0E1           MOV      R0,R6
   \   00000B70   ........           _BLF     __fLess,??__fLess??rA
   \   00000B74   000050E3           CMP      R0,#+0
   \   00000B78   1A00000A           BEQ      ??LibGetValue_56
    438                                          TempString = FindDictionaryWord(L_WORD618) + ResultBuf;
   \   00000B7C   0110C5E3           BIC      R1,R5,#0x1
   \   00000B80   64008DE2           ADD      R0,SP,#+100
   \   00000B84   ........           _BLF     ??FindDictionaryWord,??FindDictionaryWord??rA
   \   00000B88   88208DE2           ADD      R2,SP,#+136
   \   00000B8C   64108DE2           ADD      R1,SP,#+100
   \   00000B90   48008DE2           ADD      R0,SP,#+72
   \   00000B94   ........           _BLF     `??operator+_2`,`??operator+??rA_1`
   \   00000B98   48108DE2           ADD      R1,SP,#+72
   \   00000B9C   10008DE2           ADD      R0,SP,#+16
   \   00000BA0   ........           _BLF     ??AnsiString_2,??AnsiString??rA_2
   \   00000BA4   003098E5           LDR      R3,[R8, #+0]
   \   00000BA8   0020A0E3           MOV      R2,#+0
   \   00000BAC   0010A0E1           MOV      R1,R0
   \   00000BB0   2C008DE2           ADD      R0,SP,#+44
   \   00000BB4   ........           _BLF     ??assign,??assign??rA
   \   00000BB8   0020A0E3           MOV      R2,#+0
   \   00000BBC   0110A0E3           MOV      R1,#+1
   \   00000BC0   10008DE2           ADD      R0,SP,#+16
   \   00000BC4   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000BC8   0020A0E3           MOV      R2,#+0
   \   00000BCC   0110A0E3           MOV      R1,#+1
   \   00000BD0   48008DE2           ADD      R0,SP,#+72
   \   00000BD4   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000BD8   0020A0E3           MOV      R2,#+0
   \   00000BDC   0110A0E3           MOV      R1,#+1
   \   00000BE0   64008DE2           ADD      R0,SP,#+100
   \   00000BE4   AA0000EA           B        ??LibGetValue_26
    439                                      } else TempString   = FindDictionaryWord(L_WORD619); //Even
   \                     ??LibGetValue_56:
   \   00000BE8   0510A0E1           MOV      R1,R5
   \   00000BEC   10008DE2           ADD      R0,SP,#+16
   \   00000BF0   ........           _BLF     ??FindDictionaryWord,??FindDictionaryWord??rA
   \   00000BF4   003098E5           LDR      R3,[R8, #+0]
   \   00000BF8   0020A0E3           MOV      R2,#+0
   \   00000BFC   10108DE2           ADD      R1,SP,#+16
   \   00000C00   2C008DE2           ADD      R0,SP,#+44
   \   00000C04   ........           _BLF     ??assign,??assign??rA
   \   00000C08   98FFFFEA           B        ??LibGetValue_52
    440                                  }
    441                                  break;
    442                              case GETVAL_MEASURED_DENSITY_OFF:
    443                                  TempString = FindDictionaryWord(L_WORD4);
   \                     ??LibGetValue_57:
   \   00000C0C   0410A0E3           MOV      R1,#+4
   \   00000C10   910F8DE2           ADD      R0,SP,#+580
   \   00000C14   ........           _BLF     ??FindDictionaryWord,??FindDictionaryWord??rA
   \   00000C18   003098E5           LDR      R3,[R8, #+0]
   \   00000C1C   0020A0E3           MOV      R2,#+0
   \   00000C20   911F8DE2           ADD      R1,SP,#+580
   \   00000C24   2C008DE2           ADD      R0,SP,#+44
   \   00000C28   ........           _BLF     ??assign,??assign??rA
   \   00000C2C   0020A0E3           MOV      R2,#+0
   \   00000C30   0110A0E3           MOV      R1,#+1
   \   00000C34   910F8DE2           ADD      R0,SP,#+580
   \   00000C38   950000EA           B        ??LibGetValue_26
    444                                  Alignment = ALIGN_RIGHT;
    445                                  break;
    446                              case GETVAL_MEASURED_DENSITY_ON:
    447                                  {
    448                                      if (!Value) {
   \                     ??LibGetValue_58:
   \   00000C3C   00109DE5           LDR      R1,[SP, #+0]
   \   00000C40   0000A0E3           MOV      R0,#+0
   \   00000C44   ........           _BLF     __fNotEqual,??__fNotEqual??rA
   \   00000C48   000050E3           CMP      R0,#+0
   \   00000C4C   0800001A           BNE      ??LibGetValue_59
    449                                          TempString = FindDictionaryWord(L_WORD1083);
   \   00000C50   741F85E2           ADD      R1,R5,#+464
   \   00000C54   10008DE2           ADD      R0,SP,#+16
   \   00000C58   ........           _BLF     ??FindDictionaryWord,??FindDictionaryWord??rA
   \   00000C5C   003098E5           LDR      R3,[R8, #+0]
   \   00000C60   0020A0E3           MOV      R2,#+0
   \   00000C64   10108DE2           ADD      R1,SP,#+16
   \   00000C68   2C008DE2           ADD      R0,SP,#+44
   \   00000C6C   ........           _BLF     ??assign,??assign??rA
   \   00000C70   7EFFFFEA           B        ??LibGetValue_52
    450                                          Alignment = ALIGN_RIGHT;
    451                                      } else {
    452                                          char ResultBuf[BUF_SIZE];
    453                                          ConvertFromSi(ResultBuf, Value, Width, DecPnt, UnitId);
   \                     ??LibGetValue_59:
   \   00000C74   08009DE5           LDR      R0,[SP, #+8]
   \   00000C78   0720A0E1           MOV      R2,R7
   \   00000C7C   01002DE9           PUSH     {R0}
   \   00000C80   10309DE5           LDR      R3,[SP, #+16]
   \   00000C84   04109DE5           LDR      R1,[SP, #+4]
   \   00000C88   8C008DE2           ADD      R0,SP,#+140
   \   00000C8C   ........           _BLF     ??ConvertFromSi,??ConvertFromSi??rA
    454                                          TempString = "(" + FindDictionaryWord(L_WORD3) + ") "+ResultBuf;
   \   00000C90   0310A0E3           MOV      R1,#+3
   \   00000C94   F8008DE2           ADD      R0,SP,#+248
   \   00000C98   ........           _BLF     ??FindDictionaryWord,??FindDictionaryWord??rA
   \   00000C9C   F8208DE2           ADD      R2,SP,#+248
   \   00000CA0   0B10A0E1           MOV      R1,R11
   \   00000CA4   DC008DE2           ADD      R0,SP,#+220
   \   00000CA8   ........           _BLF     `??operator+_1`,`??operator+??rA_2`
   \   00000CAC   DC2F8FE2           ADR      R2,??LibGetValue_40  ;; ") "
   \   00000CB0   DC108DE2           ADD      R1,SP,#+220
   \   00000CB4   4C008DE2           ADD      R0,SP,#+76
   \   00000CB8   ........           _BLF     `??operator+_2`,`??operator+??rA_1`
   \   00000CBC   8C208DE2           ADD      R2,SP,#+140
   \   00000CC0   4C108DE2           ADD      R1,SP,#+76
   \   00000CC4   68008DE2           ADD      R0,SP,#+104
   \   00000CC8   ........           _BLF     `??operator+_2`,`??operator+??rA_1`
   \   00000CCC   68108DE2           ADD      R1,SP,#+104
   \   00000CD0   14008DE2           ADD      R0,SP,#+20
   \   00000CD4   ........           _BLF     ??AnsiString_2,??AnsiString??rA_2
   \   00000CD8   003098E5           LDR      R3,[R8, #+0]
   \   00000CDC   0020A0E3           MOV      R2,#+0
   \   00000CE0   0010A0E1           MOV      R1,R0
   \   00000CE4   30008DE2           ADD      R0,SP,#+48
   \   00000CE8   ........           _BLF     ??assign,??assign??rA
   \   00000CEC   0020A0E3           MOV      R2,#+0
   \   00000CF0   0110A0E3           MOV      R1,#+1
   \   00000CF4   14008DE2           ADD      R0,SP,#+20
   \   00000CF8   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000CFC   0020A0E3           MOV      R2,#+0
   \   00000D00   0110A0E3           MOV      R1,#+1
   \   00000D04   68008DE2           ADD      R0,SP,#+104
   \   00000D08   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000D0C   0020A0E3           MOV      R2,#+0
   \   00000D10   0110A0E3           MOV      R1,#+1
   \   00000D14   4C008DE2           ADD      R0,SP,#+76
   \   00000D18   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000D1C   0020A0E3           MOV      R2,#+0
   \   00000D20   0110A0E3           MOV      R1,#+1
   \   00000D24   DC008DE2           ADD      R0,SP,#+220
   \   00000D28   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000D2C   6AFEFFEA           B        ??LibGetValue_34
    455                                      }
    456                                  }
    457                                  break;
    458                              case GETVAL_SHIP_UPRIGHT:
    459                                  TempString = FindDictionaryWord(L_WORD767); // Ship Upright
   \                     ??LibGetValue_60:
   \   00000D30   941085E3           ORR      R1,R5,#0x94
   \   00000D34   980F8DE2           ADD      R0,SP,#+608
   \   00000D38   ........           _BLF     ??FindDictionaryWord,??FindDictionaryWord??rA
   \   00000D3C   003098E5           LDR      R3,[R8, #+0]
   \   00000D40   0020A0E3           MOV      R2,#+0
   \   00000D44   981F8DE2           ADD      R1,SP,#+608
   \   00000D48   2C008DE2           ADD      R0,SP,#+44
   \   00000D4C   ........           _BLF     ??assign,??assign??rA
   \   00000D50   0020A0E3           MOV      R2,#+0
   \   00000D54   0110A0E3           MOV      R1,#+1
   \   00000D58   980F8DE2           ADD      R0,SP,#+608
   \   00000D5C   4C0000EA           B        ??LibGetValue_26
    460                                  Alignment = ALIGN_RIGHT;
    461                                  break;
    462                              case GETVAL_NO_DISPLAY:
    463                              default:
    464                                  TempString = AnsiString::StringOfChar(' ', Width);
   \                     ??LibGetValue_41:
   \   00000D60   0720A0E1           MOV      R2,R7
   \   00000D64   2010A0E3           MOV      R1,#+32
   \   00000D68   9F0F8DE2           ADD      R0,SP,#+636
   \   00000D6C   ........           _BLF     ??StringOfChar,??StringOfChar??rA
   \   00000D70   003098E5           LDR      R3,[R8, #+0]
   \   00000D74   0020A0E3           MOV      R2,#+0
   \   00000D78   9F1F8DE2           ADD      R1,SP,#+636
   \   00000D7C   2C008DE2           ADD      R0,SP,#+44
   \   00000D80   ........           _BLF     ??assign,??assign??rA
   \   00000D84   0020A0E3           MOV      R2,#+0
   \   00000D88   0110A0E3           MOV      R1,#+1
   \   00000D8C   9F0F8DE2           ADD      R0,SP,#+636
   \   00000D90   3F0000EA           B        ??LibGetValue_26
    465                                  break;
    466                              }
    467                              break;
    468                          case SVT_FLAG_ONLY_NUMBER :
    469                              {
    470                                  switch (ValueStatus) {
   \                     ??LibGetValue_61:
   \   00000D94   04009DE5           LDR      R0,[SP, #+4]
    471                                  case GETVAL_TANK_EMPTY:
    472                                  case GETVAL_DRY_SENSOR:
    473                                  default:
    474                                      Value = 0.0;
    475                                  case GETVAL_DISABLED:
    476                                  case GETVAL_NO_ERR:
    477                                      break;
    478                                  }
    479                                  {
    480                                      char ResultBuf[BUF_SIZE];
    481                                      ConvertFromSi(ResultBuf, Value, Width, DecPnt, UnitId);
   \   00000D98   0720A0E1           MOV      R2,R7
   \   00000D9C   000050E3           CMP      R0,#+0
   \   00000DA0   09005012           SUBSNE   R0,R0,#+9
   \   00000DA4   0010A013           MOVNE    R1,#+0
   \   00000DA8   00108D15           STRNE    R1,[SP, #+0]
   \   00000DAC   08009DE5           LDR      R0,[SP, #+8]
   \   00000DB0   D6FEFFEA           B        ??LibGetValue_46
    482                                      TempString = ResultBuf;
    483                                  }
    484                              }
    485                              break;
    486                          case SVT_FLAG_MARK_NO_VAL :
    487                          case SVT_FLAG_NO_VAL_NO_VAL :
    488                              {
    489                                  AnsiString MarkVal;
   \                     ??LibGetValue_62:
   \   00000DB4   48008DE2           ADD      R0,SP,#+72
   \   00000DB8   ........           _BLF     ??AnsiString,??AnsiString??rA
    490                                  switch (Flag) {
   \   00000DBC   E0029DE5           LDR      R0,[SP, #+736]
   \   00000DC0   030050E3           CMP      R0,#+3
   \   00000DC4   0C00001A           BNE      ??LibGetValue_63
    491                                  case SVT_FLAG_MARK_NO_VAL :
    492                                      MarkVal = FindDictionaryWord(L_WORD474); // *****
   \   00000DC8   DA10A0E3           MOV      R1,#+218
   \   00000DCC   401F81E3           ORR      R1,R1,#0x100
   \   00000DD0   A60F8DE2           ADD      R0,SP,#+664
   \   00000DD4   ........           _BLF     ??FindDictionaryWord,??FindDictionaryWord??rA
   \   00000DD8   003098E5           LDR      R3,[R8, #+0]
   \   00000DDC   0020A0E3           MOV      R2,#+0
   \   00000DE0   A61F8DE2           ADD      R1,SP,#+664
   \   00000DE4   48008DE2           ADD      R0,SP,#+72
   \   00000DE8   ........           _BLF     ??assign,??assign??rA
   \   00000DEC   0020A0E3           MOV      R2,#+0
   \   00000DF0   0110A0E3           MOV      R1,#+1
   \   00000DF4   A60F8DE2           ADD      R0,SP,#+664
   \   00000DF8   ........           _BLF     ??_Tidy,??_Tidy??rA
    493                                      break;
    494                                  case SVT_FLAG_NO_VAL_NO_VAL :
    495                                      break;
    496                                  }
    497                                  switch (ValueStatus) {
   \                     ??LibGetValue_63:
   \   00000DFC   04009DE5           LDR      R0,[SP, #+4]
   \   00000E00   005098E5           LDR      R5,[R8, #+0]
   \   00000E04   000050E3           CMP      R0,#+0
   \   00000E08   09005012           SUBSNE   R0,R0,#+9
   \   00000E0C   0900000A           BEQ      ??LibGetValue_64
   \   00000E10   020050E2           SUBS     R0,R0,#+2
   \   00000E14   0500001A           BNE      ??LibGetValue_65
    498                                  case E_INVALID_POINTER:
    499                                      TempString = MarkVal;
   \   00000E18   0530A0E1           MOV      R3,R5
   \   00000E1C   0020A0E3           MOV      R2,#+0
   \   00000E20   48108DE2           ADD      R1,SP,#+72
   \   00000E24   2C008DE2           ADD      R0,SP,#+44
   \   00000E28   ........           _BLF     ??assign,??assign??rA
   \   00000E2C   150000EA           B        ??LibGetValue_50
    500                                      break;
    501                                  case GETVAL_TANK_EMPTY:
    502                                  case GETVAL_DRY_SENSOR:
    503                                  default:
    504                                      Value = 0.0;
   \                     ??LibGetValue_65:
   \   00000E30   0010A0E3           MOV      R1,#+0
   \   00000E34   00108DE5           STR      R1,[SP, #+0]
    505                                  case GETVAL_DISABLED:
    506                                  case GETVAL_NO_ERR:
    507                                      {
    508                                          char ResultBuf[BUF_SIZE];
    509                                          ConvertFromSi(ResultBuf, Value, Width, DecPnt, UnitId);
   \                     ??LibGetValue_64:
   \   00000E38   08009DE5           LDR      R0,[SP, #+8]
   \   00000E3C   0720A0E1           MOV      R2,R7
   \   00000E40   01002DE9           PUSH     {R0}
   \   00000E44   10309DE5           LDR      R3,[SP, #+16]
   \   00000E48   04109DE5           LDR      R1,[SP, #+4]
   \   00000E4C   8C008DE2           ADD      R0,SP,#+140
   \   00000E50   ........           _BLF     ??ConvertFromSi,??ConvertFromSi??rA
    510                                          TempString = ResultBuf;
   \   00000E54   8C108DE2           ADD      R1,SP,#+140
   \   00000E58   14008DE2           ADD      R0,SP,#+20
   \   00000E5C   ........           _BLF     ??AnsiString_1,??AnsiString??rA_1
   \   00000E60   0530A0E1           MOV      R3,R5
   \   00000E64   0020A0E3           MOV      R2,#+0
   \   00000E68   0010A0E1           MOV      R1,R0
   \   00000E6C   30008DE2           ADD      R0,SP,#+48
   \   00000E70   ........           _BLF     ??assign,??assign??rA
   \   00000E74   0020A0E3           MOV      R2,#+0
   \   00000E78   0110A0E3           MOV      R1,#+1
   \   00000E7C   14008DE2           ADD      R0,SP,#+20
   \   00000E80   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000E84   04D08DE2           ADD      SP,SP,#+4
    511                                      }
    512                                      break;
    513                                  }
    514                              }
   \                     ??LibGetValue_50:
   \   00000E88   0020A0E3           MOV      R2,#+0
   \   00000E8C   0110A0E3           MOV      R1,#+1
   \   00000E90   48008DE2           ADD      R0,SP,#+72
   \                     ??LibGetValue_26:
   \   00000E94   ........           _BLF     ??_Tidy,??_Tidy??rA
    515                              break;
    516                          }
    517                      }
    518                  }
    519              } else {}
    520              if (UnitStr) {
   \                     ??LibGetValue_16:
   \   00000E98   E4029DE5           LDR      R0,[SP, #+740]
   \   00000E9C   000050E3           CMP      R0,#+0
   \   00000EA0   0B00000A           BEQ      ??LibGetValue_66
    521                  *UnitStr = GetUnitName(UnitId);
   \   00000EA4   08109DE5           LDR      R1,[SP, #+8]
   \   00000EA8   10008DE2           ADD      R0,SP,#+16
   \   00000EAC   ........           _BLF     ??GetUnitName,??GetUnitName??rA
   \   00000EB0   003098E5           LDR      R3,[R8, #+0]
   \   00000EB4   E4029DE5           LDR      R0,[SP, #+740]
   \   00000EB8   0020A0E3           MOV      R2,#+0
   \   00000EBC   10108DE2           ADD      R1,SP,#+16
   \   00000EC0   ........           _BLF     ??assign,??assign??rA
   \   00000EC4   0020A0E3           MOV      R2,#+0
   \   00000EC8   0110A0E3           MOV      R1,#+1
   \   00000ECC   10008DE2           ADD      R0,SP,#+16
   \   00000ED0   ........           _BLF     ??_Tidy,??_Tidy??rA
    522              }
    523              if (Status) {
   \                     ??LibGetValue_66:
   \   00000ED4   E8029DE5           LDR      R0,[SP, #+744]
   \   00000ED8   000050E3           CMP      R0,#+0
    524                  *Status = ValueStatus;
   \   00000EDC   04109D15           LDRNE    R1,[SP, #+4]
   \   00000EE0   00108015           STRNE    R1,[R0, #+0]
    525              }
    526              if (Width) {
   \   00000EE4   000057E3           CMP      R7,#+0
   \   00000EE8   4300000A           BEQ      ??LibGetValue_67
    527                  switch (Alignment) {
   \   00000EEC   80009DE5           LDR      R0,[SP, #+128]
   \   00000EF0   000050E3           CMP      R0,#+0
   \   00000EF4   0200000A           BEQ      ??LibGetValue_68
   \   00000EF8   010050E2           SUBS     R0,R0,#+1
   \   00000EFC   2000000A           BEQ      ??LibGetValue_69
   \   00000F00   3D0000EA           B        ??LibGetValue_67
    528                  case ALIGN_RIGHT:
    529                      {
    530                          int Length = TempString.Length();
   \                     ??LibGetValue_68:
   \   00000F04   2C008DE2           ADD      R0,SP,#+44
   \   00000F08   ........           _BLF     ??Length,??Length??rA
    531                          if (Length < Width) {
   \   00000F0C   070050E1           CMP      R0,R7
   \   00000F10   290000AA           BGE      ??LibGetValue_70
    532                              TempString = AnsiString::StringOfChar(' ', Width - Length) + TempString;
   \   00000F14   002047E0           SUB      R2,R7,R0
   \   00000F18   2010A0E3           MOV      R1,#+32
   \   00000F1C   64008DE2           ADD      R0,SP,#+100
   \   00000F20   ........           _BLF     ??StringOfChar,??StringOfChar??rA
   \   00000F24   2C208DE2           ADD      R2,SP,#+44
   \   00000F28   64108DE2           ADD      R1,SP,#+100
   \   00000F2C   48008DE2           ADD      R0,SP,#+72
   \   00000F30   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000F34   48108DE2           ADD      R1,SP,#+72
   \   00000F38   10008DE2           ADD      R0,SP,#+16
   \   00000F3C   ........           _BLF     ??AnsiString_2,??AnsiString??rA_2
   \   00000F40   003098E5           LDR      R3,[R8, #+0]
   \   00000F44   0010A0E1           MOV      R1,R0
   \   00000F48   0020A0E3           MOV      R2,#+0
   \   00000F4C   2C008DE2           ADD      R0,SP,#+44
   \   00000F50   ........           _BLF     ??assign,??assign??rA
   \   00000F54   0020A0E3           MOV      R2,#+0
   \   00000F58   0110A0E3           MOV      R1,#+1
   \   00000F5C   10008DE2           ADD      R0,SP,#+16
   \   00000F60   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000F64   0020A0E3           MOV      R2,#+0
   \   00000F68   0110A0E3           MOV      R1,#+1
   \   00000F6C   48008DE2           ADD      R0,SP,#+72
   \   00000F70   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000F74   0020A0E3           MOV      R2,#+0
   \   00000F78   0110A0E3           MOV      R1,#+1
   \   00000F7C   64008DE2           ADD      R0,SP,#+100
   \   00000F80   1C0000EA           B        ??LibGetValue_71
    533                          } else if (Length > Width) {
    534                              TempString = TempString.SubString(0, Width);
    535                          }
    536          
    537                      }
    538                      break;
    539                  case ALIGN_LEFT:
    540                      {
    541                          int Length = TempString.Length();
   \                     ??LibGetValue_69:
   \   00000F84   2C008DE2           ADD      R0,SP,#+44
   \   00000F88   ........           _BLF     ??Length,??Length??rA
    542                          if (Length < Width) {
   \   00000F8C   070050E1           CMP      R0,R7
   \   00000F90   090000AA           BGE      ??LibGetValue_70
    543                              TempString += AnsiString::StringOfChar(' ', Width - Length);
   \   00000F94   002047E0           SUB      R2,R7,R0
   \   00000F98   2010A0E3           MOV      R1,#+32
   \   00000F9C   10008DE2           ADD      R0,SP,#+16
   \   00000FA0   ........           _BLF     ??StringOfChar,??StringOfChar??rA
   \   00000FA4   003098E5           LDR      R3,[R8, #+0]
   \   00000FA8   0020A0E3           MOV      R2,#+0
   \   00000FAC   10108DE2           ADD      R1,SP,#+16
   \   00000FB0   2C008DE2           ADD      R0,SP,#+44
   \   00000FB4   ........           _BLF     ??append,??append??rA
   \   00000FB8   0B0000EA           B        ??LibGetValue_72
    544                          } else if (Length > Width) {
   \                     ??LibGetValue_70:
   \   00000FBC   000057E1           CMP      R7,R0
   \   00000FC0   0D0000AA           BGE      ??LibGetValue_67
    545                              TempString = TempString.SubString(0, Width);
   \   00000FC4   0730A0E1           MOV      R3,R7
   \   00000FC8   0020A0E3           MOV      R2,#+0
   \   00000FCC   10108DE2           ADD      R1,SP,#+16
   \   00000FD0   2C008DE2           ADD      R0,SP,#+44
   \   00000FD4   ........           _BLF     ??SubString,??SubString??rA
   \   00000FD8   003098E5           LDR      R3,[R8, #+0]
   \   00000FDC   0020A0E3           MOV      R2,#+0
   \   00000FE0   10108DE2           ADD      R1,SP,#+16
   \   00000FE4   2C008DE2           ADD      R0,SP,#+44
   \   00000FE8   ........           _BLF     ??assign,??assign??rA
   \                     ??LibGetValue_72:
   \   00000FEC   0020A0E3           MOV      R2,#+0
   \   00000FF0   0110A0E3           MOV      R1,#+1
   \   00000FF4   10008DE2           ADD      R0,SP,#+16
   \                     ??LibGetValue_71:
   \   00000FF8   ........           _BLF     ??_Tidy,??_Tidy??rA
    546                          }
    547          
    548                      }
    549                      break;
    550                  }
    551              }
    552              return (TempString);
   \                     ??LibGetValue_67:
   \   00000FFC   2C108DE2           ADD      R1,SP,#+44
   \   00001000   0400A0E1           MOV      R0,R4
   \   00001004   ........           _BLF     ??string,??string??rA
   \                     ??LibGetValue_25:
   \   00001008   0020A0E3           MOV      R2,#+0
   \   0000100C   0110A0E3           MOV      R1,#+1
   \   00001010   2C008DE2           ADD      R0,SP,#+44
   \   00001014   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00001018   ADDF8DE2           ADD      SP,SP,#+692
   \   0000101C   F04FBDE8           POP      {R4-R11,LR}
   \   00001020   1EFF2FE1           BX       LR               ;; return
   \                     ??LibGetValue_40:
   \   00001024   29200000           DC8      ") ",+0
   \   00001028   CDCCCC3D           DC32     0x3dcccccd
   \   0000102C   88C3643A           DC32     0x3a64c388
   \   00001030   88C3E43A           DC32     0x3ae4c388
    553          }

   \                                 In segment DIFUNCT, align 4, keep-with-next, root
   \   00000000                      REQUIRE ?call_ctors
   \   00000000   ........           DC32    ??__sti__routine

   \                                 In segment DATA_C, align 1, align-sorted
   \   00000000   00                 DC8 ""

   \                                 In segment DATA_C, align 1, align-sorted
   \   00000000   2800               DC8 "("

   \                                 In segment DATA_C, align 1, align-sorted
   \   00000000   2900               DC8 ")"

   \                                 In segment DATA_C, align 1, align-sorted
   \   00000000   292000             DC8 ") "

   \                                 In segment CODE, align 4, keep-with-next
   \   static __??Code32?? __intrinsic __code __interwork __atpcs void __sti__routine()
   \                     ??__sti__routine:
   \   00000000   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable2:
   \   00000000   00000000           DC8      "",+0,+0,+0

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable3:
   \   00000000   ........           DC32     ??npos
    554          
    555          

   Maximum stack usage in bytes:

     Function                       CSTACK
     --------                       ------
     LibFind_ObjectValue(ValueObjList *, int, int)
                                        4
     LibFind_Value(ValueList *, int, int)
                                        4
     LibGetObjPtr(ValueObjList *, int, int)
                                        8
     LibGetShortValueName(ValueList *, int, int, int *)
                                       84
     LibGetText(ValueList *, int, int, bool)
                                       76
     LibGetValue(int, PRogramObjectBase *, AnsiString *, int *)
                                       20
     LibGetValue(int, PRogramObjectBase *, int *)
                                       20
     LibGetValue(int, PRogramObjectBase *, int, AnsiString *, int *)
                                       28
     LibGetValue(int, PRogramObjectBase *, int, int *)
                                       20
     LibGetValue(int, int, PRogramObjectBase *, AnsiString *, int *)
                                       24
     LibGetValue(int, int, PRogramObjectBase *, int *)
                                       20
     LibGetValue(int, int, PRogramObjectBase *, int, int *)
                                       28
     LibGetValue(int, int, PRogramObjectBase *, int, int, AnsiString *, int *)
                                       36
     LibGetValue(int, int, int, PRogramObjectBase *, int, int *)
                                       32
     LibGetValue(int, int, int, PRogramObjectBase *, int, int, AnsiString *, int *)
                                      740
     LibGetValueName(ValueList *, int, int, int *)
                                       56
     __sti__routine()                   0
     operator+(char const *, string const &)
                                       44
     operator+(string const &, char const *)
                                       44
     operator+(string const &, string const &)
                                       40
     string::string(string const &)    12


   Segment part sizes:

     Function/Label                 Bytes
     --------------                 -----
     string::string(string const &)   64
     operator+(string const &, string const &)
                                      88
     operator+(char const *, string const &)
                                     128
     operator+(string const &, char const *)
                                      92
     LibGetShortValueName(ValueList *, int, int, int *)
                                     208
     ?Subroutine20                     8
     LibFind_Value(ValueList *, int, int)
                                       4
     ?Subroutine17                    68
     LibGetValueName(ValueList *, int, int, int *)
                                     136
     LibGetText(ValueList *, int, int, bool)
                                     180
     LibFind_ObjectValue(ValueObjList *, int, int)
                                       0
     LibGetObjPtr(ValueObjList *, int, int)
                                      40
     ?Subroutine19                    16
     LibGetValue(int, int, int, PRogramObjectBase *, int, int *)
                                      56
     LibGetValue(int, int, PRogramObjectBase *, AnsiString *, int *)
                                      44
     LibGetValue(int, int, PRogramObjectBase *, int *)
                                      36
     ?Subroutine18                    28
     LibGetValue(int, int, PRogramObjectBase *, int, int, AnsiString *, int *)
                                      64
     LibGetValue(int, int, PRogramObjectBase *, int, int *)
                                      44
     LibGetValue(int, PRogramObjectBase *, int, int *)
                                      44
     LibGetValue(int, PRogramObjectBase *, AnsiString *, int *)
                                      24
     LibGetValue(int, PRogramObjectBase *, int *)
                                      16
     LibGetValue(int, PRogramObjectBase *, int, AnsiString *, int *)
                                      44
     LibGetValue(int, int, int, PRogramObjectBase *, int, int, AnsiString *, int *)
                                    4148
     ?<Constant "">                    1
     ?<Constant "(">                   2
     ?<Constant ")">                   2
     ?<Constant ") ">                  3
     __sti__routine()                  4
     ??DataTable2                      4
     ??DataTable3                      4
      Others                         336

 
 5 924 bytes in segment CODE
     8 bytes in segment DATA_C
     4 bytes in segment DIFUNCT
 
 5 224 bytes of CODE  memory (+ 704 bytes shared)
     8 bytes of CONST memory

Errors: none
Warnings: none
