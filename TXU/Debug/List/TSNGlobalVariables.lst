##############################################################################
#                                                                            #
# IAR ARM ANSI C/C++ Compiler V4.42A/W32               14/Sep/2022  15:19:33 #
# Copyright 1999-2005 IAR Systems. All rights reserved.                      #
#                                                                            #
#    Cpu mode        =  interwork                                            #
#    Endian          =  little                                               #
#    Stack alignment =  4                                                    #
#    Source file     =  D:\S2Prog\Shared\Src\TSNGlobalVariables.cpp          #
#    Command line    =  D:\S2Prog\Shared\Src\TSNGlobalVariables.cpp --fpu    #
#                       None -D OS_LIBMODE_SP -D CPU_S3C2410 -D              #
#                       OS_RAMVECT=0 -D OS_UART=-1 -D S2TXU -D USE_LZO=1 -D  #
#                       __ARM_LIBRARY__ -D WATCHDOG=1 -D NETWORK=1 -lCN      #
#                       D:\S2Prog\TXU\Debug\List\ -o                         #
#                       D:\S2Prog\TXU\Debug\Obj\ -z9 --debug --cpu_mode arm  #
#                       --endian little --cpu ARM920T --stack_align 4        #
#                       --interwork -e --enable_multibytes --eec++           #
#                       --dlib_config "C:\Program Files (x86)\IAR            #
#                       Systems\Embedded Workbench                           #
#                       4.0\arm\LIB\dl4tpainl8n.h" -I                        #
#                       D:\S2Prog\TXU\GUI\CORE\ -I D:\S2Prog\TXU\GUI\WM\ -I  #
#                       D:\S2Prog\TXU\GUI\WIDGET\ -I D:\S2Prog\TXU\CONFIG\   #
#                       -I D:\S2Prog\TXU\INC\ -I D:\S2Prog\TXU\..\SHARED\INC #
#                       \ -I D:\S2Prog\TXU\..\SHARED\SRC\ -I                 #
#                       D:\S2Prog\TXU\..\SHARED\LZO\minilzo.210\ -I          #
#                       D:\S2Prog\TXU\lwip-1.4.1\src\include\ -I             #
#                       D:\S2Prog\TXU\lwip-1.4.1\src\include\ipv4\ -I        #
#                       D:\S2Prog\TXU\lwip-1.4.1\src\ -I                     #
#                       D:\S2Prog\TXU\..\SHARED\Database\ -I                 #
#                       D:\S2Prog\TXU\src\ -I "C:\Program Files (x86)\IAR    #
#                       Systems\Embedded Workbench 4.0\arm\INC\"             #
#                       --inline_threshold=2                                 #
#    List file       =  D:\S2Prog\TXU\Debug\List\TSNGlobalVariables.lst      #
#    Object file     =  D:\S2Prog\TXU\Debug\Obj\TSNGlobalVariables.r79       #
#                                                                            #
#                                                                            #
##############################################################################

D:\S2Prog\Shared\Src\TSNGlobalVariables.cpp
      1          #include "TSNIncludes.h"

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs _Tree_algobase<allocator<void>>::_Genptr _Tree_algobase<allocator<void>>::_IncP(_Tree_algobase<allocator<void>>::_Genptr)
   \                     ??_IncP:
   \   00000000   0D10D0E5           LDRB     R1,[R0, #+13]
   \   00000004   000051E3           CMP      R1,#+0
   \   00000008   1EFF2F11           BXNE     LR
   \   0000000C   081090E5           LDR      R1,[R0, #+8]
   \   00000010   0D20D1E5           LDRB     R2,[R1, #+13]
   \   00000014   000052E3           CMP      R2,#+0
   \   00000018   0700001A           BNE      ??_IncP_1
   \   0000001C   000000EA           B        ??_IncP_2
   \                     ??_IncP_3:
   \   00000020   0010A0E1           MOV      R1,R0
   \                     ??_IncP_2:
   \   00000024   000091E5           LDR      R0,[R1, #+0]
   \   00000028   0D20D0E5           LDRB     R2,[R0, #+13]
   \   0000002C   000052E3           CMP      R2,#+0
   \   00000030   FAFFFF0A           BEQ      ??_IncP_3
   \   00000034   060000EA           B        ??_IncP_4
   \                     ??_IncP_5:
   \   00000038   0100A0E1           MOV      R0,R1
   \                     ??_IncP_1:
   \   0000003C   041090E5           LDR      R1,[R0, #+4]
   \   00000040   0D20D1E5           LDRB     R2,[R1, #+13]
   \   00000044   000052E3           CMP      R2,#+0
   \   00000048   08209105           LDREQ    R2,[R1, #+8]
   \   0000004C   02005001           CMPEQ    R0,R2
   \   00000050   F8FFFF0A           BEQ      ??_IncP_5
   \                     ??_IncP_4:
   \   00000054   0100A0E1           MOV      R0,R1
   \   00000058   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void _Tree_algobase<allocator<void>>::_Clear()
   \                     ??_Clear:
   \   00000000   040080E5           STR      R0,[R0, #+4]
   \   00000004   000080E5           STR      R0,[R0, #+0]
   \   00000008   080080E5           STR      R0,[R0, #+8]
   \   0000000C   0110A0E3           MOV      R1,#+1
   \   00000010   0D10C0E5           STRB     R1,[R0, #+13]
   \   00000014   0C10C0E5           STRB     R1,[R0, #+12]
   \   00000018   0010A0E3           MOV      R1,#+0
   \   0000001C   101080E5           STR      R1,[R0, #+16]
   \   00000020   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::_Copy(_Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>> const &)
   \                     ??_Copy:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   0150A0E1           MOV      R5,R1
   \   00000008   041095E5           LDR      R1,[R5, #+4]
   \   0000000C   0040A0E1           MOV      R4,R0
   \   00000010   0420A0E1           MOV      R2,R4
   \   00000014   ........           _BLF     ??_Copy_1,??_Copy??rA
   \   00000018   040084E5           STR      R0,[R4, #+4]
   \   0000001C   100095E5           LDR      R0,[R5, #+16]
   \   00000020   100084E5           STR      R0,[R4, #+16]
   \   00000024   040094E5           LDR      R0,[R4, #+4]
   \   00000028   0D10D0E5           LDRB     R1,[R0, #+13]
   \   0000002C   000051E3           CMP      R1,#+0
   \   00000030   1000001A           BNE      ??_Copy_2
   \   00000034   0010A0E1           MOV      R1,R0
   \   00000038   000000EA           B        ??_Copy_3
   \                     ??_Copy_4:
   \   0000003C   0210A0E1           MOV      R1,R2
   \                     ??_Copy_3:
   \   00000040   002091E5           LDR      R2,[R1, #+0]
   \   00000044   0D30D2E5           LDRB     R3,[R2, #+13]
   \   00000048   000053E3           CMP      R3,#+0
   \   0000004C   FAFFFF0A           BEQ      ??_Copy_4
   \   00000050   001084E5           STR      R1,[R4, #+0]
   \   00000054   081084E2           ADD      R1,R4,#+8
   \   00000058   000000EA           B        ??_Copy_5
   \                     ??_Copy_6:
   \   0000005C   0200A0E1           MOV      R0,R2
   \                     ??_Copy_5:
   \   00000060   082090E5           LDR      R2,[R0, #+8]
   \   00000064   0D30D2E5           LDRB     R3,[R2, #+13]
   \   00000068   000053E3           CMP      R3,#+0
   \   0000006C   FAFFFF0A           BEQ      ??_Copy_6
   \   00000070   000081E5           STR      R0,[R1, #+0]
   \   00000074   010000EA           B        ??_Copy_7
   \                     ??_Copy_2:
   \   00000078   004084E5           STR      R4,[R4, #+0]
   \   0000007C   084084E5           STR      R4,[R4, #+8]
   \                     ??_Copy_7:
   \   00000080   3040BDE8           POP      {R4,R5,LR}
   \   00000084   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::_Nodeptr _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::_Copy(_Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::_Nodeptr, _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::_Nodeptr)
   \                     ??_Copy_1:
   \   00000000   F0472DE9           PUSH     {R4-R10,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
   \   0000000C   0D00D5E5           LDRB     R0,[R5, #+13]
   \   00000010   0280A0E1           MOV      R8,R2
   \   00000014   0460A0E1           MOV      R6,R4
   \   00000018   000050E3           CMP      R0,#+0
   \   0000001C   1900001A           BNE      ??_Copy_8
   \   00000020   0C90D5E5           LDRB     R9,[R5, #+12]
   \   00000024   10A095E5           LDR      R10,[R5, #+16]
   \   00000028   1400A0E3           MOV      R0,#+20
   \   0000002C   ........           _BLF     `??operator new`,`??operator new??rA`
   \   00000030   0070B0E1           MOVS     R7,R0
   \   00000034   0600000A           BEQ      ??_Copy_9
   \   00000038   004087E5           STR      R4,[R7, #+0]
   \   0000003C   048087E5           STR      R8,[R7, #+4]
   \   00000040   084087E5           STR      R4,[R7, #+8]
   \   00000044   0C90C7E5           STRB     R9,[R7, #+12]
   \   00000048   0000A0E3           MOV      R0,#+0
   \   0000004C   0D00C7E5           STRB     R0,[R7, #+13]
   \   00000050   10A087E5           STR      R10,[R7, #+16]
   \                     ??_Copy_9:
   \   00000054   0D00D6E5           LDRB     R0,[R6, #+13]
   \   00000058   001095E5           LDR      R1,[R5, #+0]
   \   0000005C   0720A0E1           MOV      R2,R7
   \   00000060   000050E3           CMP      R0,#+0
   \   00000064   0760A011           MOVNE    R6,R7
   \   00000068   0400A0E1           MOV      R0,R4
   \   0000006C   E3FFFFEB           BL       ??_Copy_1
   \   00000070   000087E5           STR      R0,[R7, #+0]
   \   00000074   081095E5           LDR      R1,[R5, #+8]
   \   00000078   0720A0E1           MOV      R2,R7
   \   0000007C   0400A0E1           MOV      R0,R4
   \   00000080   DEFFFFEB           BL       ??_Copy_1
   \   00000084   080087E5           STR      R0,[R7, #+8]
   \                     ??_Copy_8:
   \   00000088   0600A0E1           MOV      R0,R6
   \   0000008C   F047BDE8           POP      {R4-R10,LR}
   \   00000090   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void _Tree<_Tset_traits<AlarmBasic *, less<AlarmBasic *>, allocator<AlarmBasic *>, false>>::_Erase(_Tree<_Tset_traits<AlarmBasic *, less<AlarmBasic *>, allocator<AlarmBasic *>, false>>::_Nodeptr)
   \                     ??_Erase:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
   \   0000000C   0560A0E1           MOV      R6,R5
   \   00000010   060000EA           B        ??_Erase_2
   \                     ??_Erase_3:
   \   00000014   081096E5           LDR      R1,[R6, #+8]
   \   00000018   0400A0E1           MOV      R0,R4
   \   0000001C   F7FFFFEB           BL       ??_Erase
   \   00000020   006096E5           LDR      R6,[R6, #+0]
   \   00000024   0500A0E1           MOV      R0,R5
   \   00000028   ........           _BLF     `??operator delete`,`??operator delete??rA`
   \   0000002C   0650A0E1           MOV      R5,R6
   \                     ??_Erase_2:
   \   00000030   0D00D6E5           LDRB     R0,[R6, #+13]
   \   00000034   000050E3           CMP      R0,#+0
   \   00000038   F5FFFF0A           BEQ      ??_Erase_3
   \   0000003C   7040BDE8           POP      {R4-R6,LR}
   \   00000040   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::_Erase(_Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::_Nodeptr)
   \                     ??_Erase_1:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
   \   0000000C   0560A0E1           MOV      R6,R5
   \   00000010   060000EA           B        ??_Erase_4
   \                     ??_Erase_5:
   \   00000014   081096E5           LDR      R1,[R6, #+8]
   \   00000018   0400A0E1           MOV      R0,R4
   \   0000001C   F7FFFFEB           BL       ??_Erase_1
   \   00000020   006096E5           LDR      R6,[R6, #+0]
   \   00000024   0500A0E1           MOV      R0,R5
   \   00000028   ........           _BLF     `??operator delete`,`??operator delete??rA`
   \   0000002C   0650A0E1           MOV      R5,R6
   \                     ??_Erase_4:
   \   00000030   0D00D6E5           LDRB     R0,[R6, #+13]
   \   00000034   000050E3           CMP      R0,#+0
   \   00000038   F5FFFF0A           BEQ      ??_Erase_5
   \   0000003C   7040BDE8           POP      {R4-R6,LR}
   \   00000040   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs set<AlarmBasic *>::~set()
   \                     `?~set`:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   041094E5           LDR      R1,[R4, #+4]
   \   0000000C   ........           _BLF     ??_Erase,??_Erase??rA
   \   00000010   0400A0E1           MOV      R0,R4
   \   00000014   ........           _BLF     ??_Clear,??_Clear??rA
   \   00000018   1040BDE8           POP      {R4,LR}
   \   0000001C   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs set<PRogramObjectBase *>::set(set<PRogramObjectBase *> const &)
   \                     ??set:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   0150A0E1           MOV      R5,R1
   \   00000008   1460D5E5           LDRB     R6,[R5, #+20]
   \   0000000C   0040A0E1           MOV      R4,R0
   \   00000010   ........           _BLF     ??_Clear,??_Clear??rA
   \   00000014   1460C4E5           STRB     R6,[R4, #+20]
   \   00000018   0510A0E1           MOV      R1,R5
   \   0000001C   0400A0E1           MOV      R0,R4
   \   00000020   ........           _BLF     ??_Copy,??_Copy??rA_1
   \   00000024   0400A0E1           MOV      R0,R4
   \   00000028   7040BDE8           POP      {R4-R6,LR}
   \   0000002C   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs set<PRogramObjectBase *>::~set()
   \                     `?~set_1`:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   041094E5           LDR      R1,[R4, #+4]
   \   0000000C   ........           _BLF     ??_Erase_1,??_Erase??rA_1
   \   00000010   0400A0E1           MOV      R0,R4
   \   00000014   ........           _BLF     ??_Clear,??_Clear??rA
   \   00000018   1040BDE8           POP      {R4,LR}
   \   0000001C   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs AnsiString::~AnsiString()
   \                     `?~AnsiString`:
   \   00000000   00402DE9           PUSH     {LR}
   \   00000004   0020A0E3           MOV      R2,#+0
   \   00000008   0110A0E3           MOV      R1,#+1
   \   0000000C   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000010   0040BDE8           POP      {LR}
   \   00000014   1EFF2FE1           BX       LR               ;; return
      2          #pragma hdrstop
      3          //---------------------------------------------------------------------------
      4          #ifndef OS_FSYS_180
      5          #define OS_FSYS_180 180000000
      6          #endif
      7          #ifdef ANWIN
      8          short GlobalDeviceHWId        = TXU_IS_PC;
      9          #else

   \                                 In segment DATA_Z, align 2, align-sorted
     10          short GlobalDeviceHWId        = 0;
   \                     GlobalDeviceHWId:
   \   00000000                      DS8 2

   \                                 In segment DATA_I, align 4, align-sorted
     11          int OS_FSys                   = OS_FSYS_180;
   \                     OS_FSys:
   \   00000000                      DS8 4
   \   00000004                      REQUIRE `?<Initializer for OS_FSys>`
     12          #endif

   \                                 In segment DATA_Z, align 2, align-sorted
     13          short CurrentDeviceId         = 0;
   \                     CurrentDeviceId:
   \   00000000                      DS8 2

   \                                 In segment DATA_Z, align 2, align-sorted
     14          short CurrentDeviceAddress    = 0;
   \                     CurrentDeviceAddress:
   \   00000000                      DS8 2

   \                                 In segment DATA_Z, align 1, align-sorted
     15          bool  Master                  = false;
   \                     Master:
   \   00000000                      DS8 1

   \                                 In segment CODE, align 4, keep-with-next
   \   static __??Code32?? __intrinsic __code __interwork __atpcs void __sti__routine()
   \                     ??__sti__routine:
   \   00000000   31402DE9           PUSH     {R0,R4,R5,LR}
     16          AnsiString   CrLfStr           = "\r\n";
   \   00000004   94419FE5           LDR      R4,??__sti__routine_1+0x20  ;; FreeAlarmInfoList
   \   00000008   94519FE5           LDR      R5,??__sti__routine_1+0x24  ;; `?<Constant "ENDCONFIGREVTEXT">`
   \   0000000C   5B1F8FE2           ADR      R1,??__sti__routine_1  ;; "\r\n"
   \   00000010   180084E2           ADD      R0,R4,#+24
   \   00000014   ........           _BLF     ??AnsiString,??AnsiString??rA
   \   00000018   3C0085E2           ADD      R0,R5,#+60
   \   0000001C   ........           _BLF     __record_needed_destruction,??__record_needed_destruction??rA
     17          AnsiString   CrLfStr2          = "\r\n\r\n";
   \   00000020   141085E2           ADD      R1,R5,#+20
   \   00000024   340084E2           ADD      R0,R4,#+52
   \   00000028   ........           _BLF     ??AnsiString,??AnsiString??rA
   \   0000002C   480085E2           ADD      R0,R5,#+72
   \   00000030   ........           _BLF     __record_needed_destruction,??__record_needed_destruction??rA
     18          AnsiString   CrStr             = "\r";
   \   00000034   521F8FE2           ADR      R1,??__sti__routine_1+0x4  ;; "\r"
   \   00000038   500084E2           ADD      R0,R4,#+80
   \   0000003C   ........           _BLF     ??AnsiString,??AnsiString??rA
   \   00000040   540085E2           ADD      R0,R5,#+84
   \   00000044   ........           _BLF     __record_needed_destruction,??__record_needed_destruction??rA
     19          AnsiString   SpaceStr          = " ";
   \   00000048   4E1F8FE2           ADR      R1,??__sti__routine_1+0x8  ;; " "
   \   0000004C   6C0084E2           ADD      R0,R4,#+108
   \   00000050   ........           _BLF     ??AnsiString,??AnsiString??rA
   \   00000054   600085E2           ADD      R0,R5,#+96
   \   00000058   ........           _BLF     __record_needed_destruction,??__record_needed_destruction??rA
     20          AnsiString   NewLineStr        = "\n";
   \   0000005C   4A1F8FE2           ADR      R1,??__sti__routine_1+0xC  ;; "\n"
   \   00000060   880084E2           ADD      R0,R4,#+136
   \   00000064   ........           _BLF     ??AnsiString,??AnsiString??rA
   \   00000068   6C0085E2           ADD      R0,R5,#+108
   \   0000006C   ........           _BLF     __record_needed_destruction,??__record_needed_destruction??rA
     21          AnsiString   NewLineStr2       = "\n\n";
   \   00000070   461F8FE2           ADR      R1,??__sti__routine_1+0x10  ;; "\n\n"
   \   00000074   A40084E2           ADD      R0,R4,#+164
   \   00000078   ........           _BLF     ??AnsiString,??AnsiString??rA
   \   0000007C   780085E2           ADD      R0,R5,#+120
   \   00000080   ........           _BLF     __record_needed_destruction,??__record_needed_destruction??rA
     22          AnsiString   TabStr1           = "\t";
   \   00000084   421F8FE2           ADR      R1,??__sti__routine_1+0x14  ;; "\t"
   \   00000088   C00084E2           ADD      R0,R4,#+192
   \   0000008C   ........           _BLF     ??AnsiString,??AnsiString??rA
   \   00000090   840085E2           ADD      R0,R5,#+132
   \   00000094   ........           _BLF     __record_needed_destruction,??__record_needed_destruction??rA
     23          AnsiString   TabStr2           = "\t\t";
   \   00000098   3E1F8FE2           ADR      R1,??__sti__routine_1+0x18  ;; "\t\t"
   \   0000009C   DC0084E2           ADD      R0,R4,#+220
   \   000000A0   ........           _BLF     ??AnsiString,??AnsiString??rA
   \   000000A4   900085E2           ADD      R0,R5,#+144
   \   000000A8   ........           _BLF     __record_needed_destruction,??__record_needed_destruction??rA
     24          AnsiString   TabStr3           = "\t\t\t";
   \   000000AC   3A1F8FE2           ADR      R1,??__sti__routine_1+0x1C  ;; "\t\t\t"
   \   000000B0   F80084E2           ADD      R0,R4,#+248
   \   000000B4   ........           _BLF     ??AnsiString,??AnsiString??rA
   \   000000B8   9C0085E2           ADD      R0,R5,#+156
   \   000000BC   ........           _BLF     __record_needed_destruction,??__record_needed_destruction??rA
     25          AnsiString   TabStr4           = "\t\t\t\t";
   \   000000C0   341085E2           ADD      R1,R5,#+52
   \   000000C4   450F84E2           ADD      R0,R4,#+276
   \   000000C8   ........           _BLF     ??AnsiString,??AnsiString??rA
   \   000000CC   A80085E2           ADD      R0,R5,#+168
   \   000000D0   ........           _BLF     __record_needed_destruction,??__record_needed_destruction??rA
     26          AnsiString   TabStr5           = "\t\t\t\t\t";
   \   000000D4   2C1085E2           ADD      R1,R5,#+44
   \   000000D8   4C0F84E2           ADD      R0,R4,#+304
   \   000000DC   ........           _BLF     ??AnsiString,??AnsiString??rA
   \   000000E0   B40085E2           ADD      R0,R5,#+180
   \   000000E4   ........           _BLF     __record_needed_destruction,??__record_needed_destruction??rA
     27          AnsiString   TabStr6           = "\t\t\t\t\t\t";
   \   000000E8   241085E2           ADD      R1,R5,#+36
   \   000000EC   530F84E2           ADD      R0,R4,#+332
   \   000000F0   ........           _BLF     ??AnsiString,??AnsiString??rA
   \   000000F4   C00085E2           ADD      R0,R5,#+192
   \   000000F8   ........           _BLF     __record_needed_destruction,??__record_needed_destruction??rA
     28          AnsiString   XMLTxtTerm        = "\">\r\n";
   \   000000FC   1C1085E2           ADD      R1,R5,#+28
   \   00000100   5A0F84E2           ADD      R0,R4,#+360
   \   00000104   ........           _BLF     ??AnsiString,??AnsiString??rA
   \   00000108   CC0085E2           ADD      R0,R5,#+204
   \   0000010C   ........           _BLF     __record_needed_destruction,??__record_needed_destruction??rA
     29          AnsiString   EndConfRevText    = "ENDCONFIGREVTEXT";
   \   00000110   0510A0E1           MOV      R1,R5
   \   00000114   610F84E2           ADD      R0,R4,#+388
   \   00000118   ........           _BLF     ??AnsiString,??AnsiString??rA
   \   0000011C   D80085E2           ADD      R0,R5,#+216
   \   00000120   ........           _BLF     __record_needed_destruction,??__record_needed_destruction??rA
     30          
     31          #ifdef ANWIN
     32          char CargoTanksDrawingFile[200];
     33          char BallastTanksDrawingFile[200];
     34          char ServiceTanksDrawingFile[200];
     35          char VoidSpaceTanksDrawingFile[200];
     36          char TankCleaningMachineDrawingFile[200];
     37          AnsiString SurveyorDirPath = "C:\\Program Files (x86)\\Scanjet Ariston\\ANWin";
     38          AnsiString ProjectFileNameAndExtension;
     39          AnsiString SettingsFileNameAndExtension;
     40          AnsiString ProjectFileName;
     41          AnsiString StyleName;
     42          
     43          #endif
     44          
     45          
     46          // Free Alarm list for alarms without PROgramobjects
     47          set<AlarmBasic*>FreeAlarmInfoList;
   \   00000124   0110A0E3           MOV      R1,#+1
   \   00000128   0D00A0E1           MOV      R0,SP
   \   0000012C   ........           _BLF     __data_memzero,??__data_memzero??rA
   \   00000130   0400A0E1           MOV      R0,R4
   \   00000134   ........           _BLF     ??_Clear,??_Clear??rA
   \   00000138   0000DDE5           LDRB     R0,[SP, #+0]
   \   0000013C   1400C4E5           STRB     R0,[R4, #+20]
   \   00000140   E40085E2           ADD      R0,R5,#+228
   \   00000144   ........           _BLF     __record_needed_destruction,??__record_needed_destruction??rA
     48          
     49          //For Config
     50          AnsiString ConfigWarningsString;
   \   00000148   680F84E2           ADD      R0,R4,#+416
   \   0000014C   ........           _BLF     ??AnsiString_1,??AnsiString??rA_1
   \   00000150   F00085E2           ADD      R0,R5,#+240
   \   00000154   ........           _BLF     __record_needed_destruction,??__record_needed_destruction??rA
     51          AnsiString RestoreSettingsWarningsString;
   \   00000158   6F0F84E2           ADD      R0,R4,#+444
   \   0000015C   ........           _BLF     ??AnsiString_1,??AnsiString??rA_1
   \   00000160   FC0085E2           ADD      R0,R5,#+252
   \   00000164   ........           _BLF     __record_needed_destruction,??__record_needed_destruction??rA
     52          
     53          AnsiString HWOverviewWarningsString;
   \   00000168   760F84E2           ADD      R0,R4,#+472
   \   0000016C   ........           _BLF     ??AnsiString_1,??AnsiString??rA_1
   \   00000170   420F85E2           ADD      R0,R5,#+264
   \   00000174   ........           _BLF     __record_needed_destruction,??__record_needed_destruction??rA
   \   00000178   3140BDE8           POP      {R0,R4,R5,LR}
   \   0000017C   1EFF2FE1           BX       LR               ;; return
   \                     ??__sti__routine_1:
   \   00000180   0D0A0000           DC8      "\r\n",+0
   \   00000184   0D000000           DC8      "\r",+0,+0
   \   00000188   20000000           DC8      " ",+0,+0
   \   0000018C   0A000000           DC8      "\n",+0,+0
   \   00000190   0A0A0000           DC8      "\n\n",+0
   \   00000194   09000000           DC8      "\t",+0,+0
   \   00000198   09090000           DC8      "\t\t",+0
   \   0000019C   09090900           DC8      "\t\t\t"
   \   000001A0   ........           DC32     FreeAlarmInfoList
   \   000001A4   ........           DC32     `?<Constant "ENDCONFIGREVTEXT">`

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "ENDCONFIGREVTEXT">`:
   \   00000000   454E44434F4E       DC8 "ENDCONFIGREVTEXT"
   \              464947524556
   \              5445585400  
   \   00000011   000000             DC8 0, 0, 0
   \   00000014   0D0A0D0A00         DC8 "\015\012\015\012"
   \   00000019   000000             DC8 0, 0, 0
   \   0000001C   223E0D0A00         DC8 "\">\015\012"
   \   00000021   000000             DC8 0, 0, 0
   \   00000024   090909090909       DC8 "                                           "
   \              00          
   \   0000002B   00                 DC8 0
   \   0000002C   090909090900       DC8 "                                   "
   \   00000032   0000               DC8 0, 0
   \   00000034   0909090900         DC8 "                           "
   \   00000039   000000             DC8 0, 0, 0
   \   0000003C   ............       DC32 ?_1, CrLfStr, `?~AnsiString`
   \              ............
   \   00000048   ............       DC32 ?_3, CrLfStr2, `?~AnsiString`
   \              ............
   \   00000054   ............       DC32 ?_5, CrStr, `?~AnsiString`
   \              ............
   \   00000060   ............       DC32 ?_7, SpaceStr, `?~AnsiString`
   \              ............
   \   0000006C   ............       DC32 ?_9, NewLineStr, `?~AnsiString`
   \              ............
   \   00000078   ............       DC32 ?_11, NewLineStr2, `?~AnsiString`
   \              ............
   \   00000084   ............       DC32 ?_13, TabStr1, `?~AnsiString`
   \              ............
   \   00000090   ............       DC32 ?_15, TabStr2, `?~AnsiString`
   \              ............
   \   0000009C   ............       DC32 ?_17, TabStr3, `?~AnsiString`
   \              ............
   \   000000A8   ............       DC32 ?_19, TabStr4, `?~AnsiString`
   \              ............
   \   000000B4   ............       DC32 ?_21, TabStr5, `?~AnsiString`
   \              ............
   \   000000C0   ............       DC32 ?_23, TabStr6, `?~AnsiString`
   \              ............
   \   000000CC   ............       DC32 ?_25, XMLTxtTerm, `?~AnsiString`
   \              ............
   \   000000D8   ............       DC32 ?_27, EndConfRevText, `?~AnsiString`
   \              ............
   \   000000E4   ............       DC32 ?_29, FreeAlarmInfoList, `?~set`
   \              ............
   \   000000F0   ............       DC32 ?_31, ConfigWarningsString, `?~AnsiString`
   \              ............
   \   000000FC   ............       DC32 ?_33, RestoreSettingsWarningsString, `?~AnsiString`
   \              ............
   \   00000108   ............       DC32 ?_35, HWOverviewWarningsString, `?~AnsiString`
   \              ............

   \                                 In segment DATA_Z, align 4, align-sorted
   \                     FreeAlarmInfoList:
   \   00000000                      DS8 24
   \                     CrLfStr:
   \   00000018                      DS8 28
   \                     CrLfStr2:
   \   00000034                      DS8 28
   \                     CrStr:
   \   00000050                      DS8 28
   \                     SpaceStr:
   \   0000006C                      DS8 28
   \                     NewLineStr:
   \   00000088                      DS8 28
   \                     NewLineStr2:
   \   000000A4                      DS8 28
   \                     TabStr1:
   \   000000C0                      DS8 28
   \                     TabStr2:
   \   000000DC                      DS8 28
   \                     TabStr3:
   \   000000F8                      DS8 28
   \                     TabStr4:
   \   00000114                      DS8 28
   \                     TabStr5:
   \   00000130                      DS8 28
   \                     TabStr6:
   \   0000014C                      DS8 28
   \                     XMLTxtTerm:
   \   00000168                      DS8 28
   \                     EndConfRevText:
   \   00000184                      DS8 28
   \                     ConfigWarningsString:
   \   000001A0                      DS8 28
   \                     RestoreSettingsWarningsString:
   \   000001BC                      DS8 28
   \                     HWOverviewWarningsString:
   \   000001D8                      DS8 28
     54          
     55          

   \                                 In segment DATA_Z, align 1, align-sorted
     56          volatile bool PinUnlock = false;
   \                     PinUnlock:
   \   00000000                      DS8 1

   \                                 In segment DATA_Z, align 1, align-sorted
     57          bool ViewModePC=false;
   \                     ViewModePC:
   \   00000000                      DS8 1
     58          

   \                                 In segment CODE, align 4, keep-with-next
     59          void DeletePROListTable(void)
     60          {
     61              set<PRogramObjectBase*>PROListTable[] = {
   \                     ??DeletePROListTable:
   \   00000000   18119FE5           LDR      R1,??DeletePROListTable_1  ;; ??ObjectSet
   \   00000004   70402DE9           PUSH     {R4-R6,LR}
   \   00000008   4EDF4DE2           SUB      SP,SP,#+312
   \   0000000C   0D00A0E1           MOV      R0,SP
   \   00000010   ........           _BLF     ??set,??set??rA
   \   00000014   08119FE5           LDR      R1,??DeletePROListTable_1+0x4  ;; ??ObjectSet_1
   \   00000018   18008DE2           ADD      R0,SP,#+24
   \   0000001C   ........           _BLF     ??set,??set??rA
   \   00000020   00119FE5           LDR      R1,??DeletePROListTable_1+0x8  ;; ??ObjectSet_2
   \   00000024   30008DE2           ADD      R0,SP,#+48
   \   00000028   ........           _BLF     ??set,??set??rA
   \   0000002C   F8109FE5           LDR      R1,??DeletePROListTable_1+0xC  ;; ??ObjectSet_3
   \   00000030   48008DE2           ADD      R0,SP,#+72
   \   00000034   ........           _BLF     ??set,??set??rA
   \   00000038   F0109FE5           LDR      R1,??DeletePROListTable_1+0x10  ;; ??ObjectSet_4
   \   0000003C   60008DE2           ADD      R0,SP,#+96
   \   00000040   ........           _BLF     ??set,??set??rA
   \   00000044   E8109FE5           LDR      R1,??DeletePROListTable_1+0x14  ;; ??ObjectSet_5
   \   00000048   78008DE2           ADD      R0,SP,#+120
   \   0000004C   ........           _BLF     ??set,??set??rA
   \   00000050   E0109FE5           LDR      R1,??DeletePROListTable_1+0x18  ;; ??ObjectSet_6
   \   00000054   90008DE2           ADD      R0,SP,#+144
   \   00000058   ........           _BLF     ??set,??set??rA
   \   0000005C   D8109FE5           LDR      R1,??DeletePROListTable_1+0x1C  ;; ??ObjectSet_7
   \   00000060   A8008DE2           ADD      R0,SP,#+168
   \   00000064   ........           _BLF     ??set,??set??rA
   \   00000068   D0109FE5           LDR      R1,??DeletePROListTable_1+0x20  ;; ??ObjectSet_8
   \   0000006C   C0008DE2           ADD      R0,SP,#+192
   \   00000070   ........           _BLF     ??set,??set??rA
   \   00000074   C8109FE5           LDR      R1,??DeletePROListTable_1+0x24  ;; ??ObjectSet_9
   \   00000078   D8008DE2           ADD      R0,SP,#+216
   \   0000007C   ........           _BLF     ??set,??set??rA
   \   00000080   C0109FE5           LDR      R1,??DeletePROListTable_1+0x28  ;; ??ObjectSet_10
   \   00000084   F0008DE2           ADD      R0,SP,#+240
   \   00000088   ........           _BLF     ??set,??set??rA
   \   0000008C   B8109FE5           LDR      R1,??DeletePROListTable_1+0x2C  ;; ??ObjectSet_11
   \   00000090   420F8DE2           ADD      R0,SP,#+264
   \   00000094   ........           _BLF     ??set,??set??rA
   \   00000098   B0109FE5           LDR      R1,??DeletePROListTable_1+0x30  ;; ??ModbusSet
   \   0000009C   480F8DE2           ADD      R0,SP,#+288
   \   000000A0   ........           _BLF     ??set,??set??rA
     62                  PROCargoTank::ObjectSet,
     63                  PROBallastTank::ObjectSet,
     64                  PROServiceTank::ObjectSet,
     65                  PROLevelSwitch::ObjectSet,
     66                  //PROTankPressure::ObjectSet,
     67          		PROLinePressure::ObjectSet,
     68                  PROTemperature::ObjectSet,
     69                  PROWaterIngress::ObjectSet,
     70                  PROVoidSpace::ObjectSet,
     71                  TPCxObject::ObjectSet,
     72                  AnPro3object::ObjectSet,
     73                  SaabProtcol::ObjectSet,
     74                  CTOUser::ObjectSet,
     75                  ModbusMultiple::ModbusSet,
     76              };
     77          
     78              for ( unsigned i=0; i < NELEMENTS(PROListTable); i++ ) {
   \   000000A4   0040A0E3           MOV      R4,#+0
     79                  set<PRogramObjectBase*>::iterator pBIt;
     80                  for ( pBIt=PROListTable[i].begin(); pBIt!=PROListTable[i].end(); pBIt++ ) {
   \                     ??DeletePROListTable_2:
   \   000000A8   1800A0E3           MOV      R0,#+24
   \   000000AC   0D10A0E1           MOV      R1,SP
   \   000000B0   901425E0           MLA      R5,R0,R4,R1
   \   000000B4   006095E5           LDR      R6,[R5, #+0]
   \   000000B8   0B0000EA           B        ??DeletePROListTable_3
     81                      delete (*pBIt);
   \                     ??DeletePROListTable_4:
   \   000000BC   102096E5           LDR      R2,[R6, #+16]
   \   000000C0   000052E3           CMP      R2,#+0
   \   000000C4   0500000A           BEQ      ??DeletePROListTable_5
   \   000000C8   0200A0E1           MOV      R0,R2
   \   000000CC   A42092E5           LDR      R2,[R2, #+164]
   \   000000D0   0310A0E3           MOV      R1,#+3
   \   000000D4   002092E5           LDR      R2,[R2, #+0]
   \   000000D8   0FE0A0E1           MOV      LR,PC
   \   000000DC   12FF2FE1           BX       R2
     82                  }
   \                     ??DeletePROListTable_5:
   \   000000E0   0600A0E1           MOV      R0,R6
   \   000000E4   ........           _BLF     ??_IncP,??_IncP??rA
   \   000000E8   0060A0E1           MOV      R6,R0
   \                     ??DeletePROListTable_3:
   \   000000EC   050056E1           CMP      R6,R5
   \   000000F0   F1FFFF1A           BNE      ??DeletePROListTable_4
     83              }
   \   000000F4   014084E2           ADD      R4,R4,#+1
   \   000000F8   0D0054E3           CMP      R4,#+13
   \   000000FC   E9FFFF3A           BCC      ??DeletePROListTable_2
     84          
     85          
     86          }
   \   00000100   4C309FE5           LDR      R3,??DeletePROListTable_1+0x34  ;; `?~set_1`
   \   00000104   1820A0E3           MOV      R2,#+24
   \   00000108   0D10A0E3           MOV      R1,#+13
   \   0000010C   0D00A0E1           MOV      R0,SP
   \   00000110   ........           _BLF     __data_vec_destroy,??__data_vec_destroy??rA
   \   00000114   4EDF8DE2           ADD      SP,SP,#+312
   \   00000118   7040BDE8           POP      {R4-R6,LR}
   \   0000011C   1EFF2FE1           BX       LR               ;; return
   \                     ??DeletePROListTable_1:
   \   00000120   ........           DC32     ??ObjectSet
   \   00000124   ........           DC32     ??ObjectSet_1
   \   00000128   ........           DC32     ??ObjectSet_2
   \   0000012C   ........           DC32     ??ObjectSet_3
   \   00000130   ........           DC32     ??ObjectSet_4
   \   00000134   ........           DC32     ??ObjectSet_5
   \   00000138   ........           DC32     ??ObjectSet_6
   \   0000013C   ........           DC32     ??ObjectSet_7
   \   00000140   ........           DC32     ??ObjectSet_8
   \   00000144   ........           DC32     ??ObjectSet_9
   \   00000148   ........           DC32     ??ObjectSet_10
   \   0000014C   ........           DC32     ??ObjectSet_11
   \   00000150   ........           DC32     ??ModbusSet
   \   00000154   ........           DC32     `?~set_1`

   \                                 In segment CODE, align 4, keep-with-next
     87          void InitGlobalVariables(void)
     88          {
   \                     ??InitGlobalVariables:
   \   00000000   10402DE9           PUSH     {R4,LR}
     89          	AlarmBasic::InitAlarmSystem();
   \   00000004   ........           _BLF     ??InitAlarmSystem,??InitAlarmSystem??rA
     90          	PROSystemData::TXUSystemData 	= new PROSystemData();
   \   00000008   690FA0E3           MOV      R0,#+420
   \   0000000C   ........           _BLF     `??operator new`,`??operator new??rA`
   \   00000010   0040B0E1           MOVS     R4,R0
   \   00000014   0000000A           BEQ      ??InitGlobalVariables_1
   \   00000018   ........           _BLF     ??PROSystemData,??PROSystemData??rA
   \                     ??InitGlobalVariables_1:
   \   0000001C   ........           LDR      R0,??DataTable2  ;; ??TXUSystemData
   \   00000020   004080E5           STR      R4,[R0, #+0]
     91          	LoadReport::LoadReportPtr 		= new LoadReport();
   \   00000024   A70FA0E3           MOV      R0,#+668
   \   00000028   ........           _BLF     `??operator new`,`??operator new??rA`
   \   0000002C   0040B0E1           MOVS     R4,R0
   \   00000030   0000000A           BEQ      ??InitGlobalVariables_2
   \   00000034   ........           _BLF     ??LoadReport,??LoadReport??rA
   \                     ??InitGlobalVariables_2:
   \   00000038   ........           LDR      R0,??DataTable3  ;; ??LoadReportPtr
   \   0000003C   004080E5           STR      R4,[R0, #+0]
     92              CTOUser::CreateUserCargoList();
   \   00000040   ........           _BLF     ??CreateUserCargoList,??CreateUserCargoList??rA
     93          
     94          }
   \   00000044   1040BDE8           POP      {R4,LR}
   \   00000048   1EFF2FE1           BX       LR               ;; return
     95          #ifdef ANWIN
     96          void DeleteLoadCalc(void)
     97          {
     98              if ( LCStabCalc::StabCalc) delete LCStabCalc::StabCalc;
     99              if ( LCShipData::LCShip  ) delete LCShipData::LCShip;
    100              if ( TSNTableKY::KY_Table) delete TSNTableKY::KY_Table;
    101              TSNTableHydrostatic::DeleteHydrostaticTables();
    102              if ( LCSteelWeight::SteelWeightDistibution ) delete LCSteelWeight::SteelWeightDistibution;
    103              for (unsigned i=0; i < LCSectionData::Table.size(); i++) {
    104                  delete LCSectionData::Table[i];
    105              }
    106              for (unsigned i=0; i < LCFrameData::Table.size(); i++ ) {
    107                  delete LCFrameData::Table[i];
    108              }
    109              for (unsigned i=0; i < LCLocationData::Table.size(); i++) {
    110                  delete LCLocationData::Table[i];
    111              }
    112          }
    113          
    114          #endif

   \                                 In segment CODE, align 4, keep-with-next
    115          void DeleteGlobalVariables(void)
    116          {
    117              if ( TSNConfigInfo::ConfigInfoPtr ) {
   \                     ??DeleteGlobalVariables:
   \   00000000   64019FE5           LDR      R0,??DeleteGlobalVariables_1  ;; ??ConfigInfoPtr
   \   00000004   30402DE9           PUSH     {R4,R5,LR}
   \   00000008   000090E5           LDR      R0,[R0, #+0]
   \   0000000C   000050E3           CMP      R0,#+0
   \   00000010   0000000A           BEQ      ??DeleteGlobalVariables_2
    118                  delete TSNConfigInfo::ConfigInfoPtr;
   \   00000014   ........           _BLF     `??delete ~TSNConfigInfo`,`??delete ~TSNConfigInfo??rA`
    119              }
    120          
    121              DeletePROListTable();
    122              CTOUser::DeleteUserCargoList();
    123          
    124          #if defined(ANWIN)
    125              if ( ConfigBlock ) {
    126                  delete [] ConfigBlock;
    127                  ConfigBlock = NULL;
    128              }
    129          
    130              if ( PROProjectInfo::IntegratedLoadingComputer ) DeleteLoadCalc();
    131          #endif
    132              // The following it a cleanup because of a Borland Bug
    133          #if defined(ANWIN) || defined(ANCONF)
    134              PRogramObjectBase::InitObjTable();
    135          /*
    136              {
    137                  const time_t SecsNow =time(NULL);
    138          
    139                  struct tm *TimeNow   = localtime(&SecsNow);
    140                  free(TimeNow);
    141              }
    142          */
    143          #endif
    144              for(unsigned i=0; i< PROUser::UsersVector.size(); i++){
   \                     ??DeleteGlobalVariables_2:
   \   00000018   50519FE5           LDR      R5,??DeleteGlobalVariables_1+0x4  ;; ??UsersVector
   \   0000001C   ........           BL       ??DeletePROListTable
   \   00000020   ........           _BLF     ??DeleteUserCargoList,??DeleteUserCargoList??rA
   \   00000024   0040A0E3           MOV      R4,#+0
   \   00000028   090000EA           B        ??DeleteGlobalVariables_3
    145                  delete PROUser::UsersVector[i];
   \                     ??DeleteGlobalVariables_4:
   \   0000002C   042190E7           LDR      R2,[R0, +R4, LSL #+2]
   \   00000030   000052E3           CMP      R2,#+0
   \   00000034   0500000A           BEQ      ??DeleteGlobalVariables_5
   \   00000038   0200A0E1           MOV      R0,R2
   \   0000003C   A42092E5           LDR      R2,[R2, #+164]
   \   00000040   0310A0E3           MOV      R1,#+3
   \   00000044   002092E5           LDR      R2,[R2, #+0]
   \   00000048   0FE0A0E1           MOV      LR,PC
   \   0000004C   12FF2FE1           BX       R2
    146              }
   \                     ??DeleteGlobalVariables_5:
   \   00000050   014084E2           ADD      R4,R4,#+1
   \                     ??DeleteGlobalVariables_3:
   \   00000054   000095E5           LDR      R0,[R5, #+0]
   \   00000058   041095E5           LDR      R1,[R5, #+4]
   \   0000005C   001041E0           SUB      R1,R1,R0
   \   00000060   210154E1           CMP      R4,R1, LSR #+2
   \   00000064   F0FFFF3A           BCC      ??DeleteGlobalVariables_4
    147          
    148              if ( PROAtmReference::PROAtmRefPtr      ) delete PROAtmReference::PROAtmRefPtr;
   \   00000068   04019FE5           LDR      R0,??DeleteGlobalVariables_1+0x8  ;; ??PROAtmRefPtr
   \   0000006C   002090E5           LDR      R2,[R0, #+0]
   \   00000070   000052E3           CMP      R2,#+0
   \   00000074   0500000A           BEQ      ??DeleteGlobalVariables_6
   \   00000078   0200A0E1           MOV      R0,R2
   \   0000007C   A42092E5           LDR      R2,[R2, #+164]
   \   00000080   0310A0E3           MOV      R1,#+3
   \   00000084   002092E5           LDR      R2,[R2, #+0]
   \   00000088   0FE0A0E1           MOV      LR,PC
   \   0000008C   12FF2FE1           BX       R2
    149              if ( PROInclinometer::PROInclinPtr      ) delete PROInclinometer::PROInclinPtr;
   \                     ??DeleteGlobalVariables_6:
   \   00000090   E0009FE5           LDR      R0,??DeleteGlobalVariables_1+0xC  ;; ??PROInclinPtr
   \   00000094   002090E5           LDR      R2,[R0, #+0]
   \   00000098   000052E3           CMP      R2,#+0
   \   0000009C   0500000A           BEQ      ??DeleteGlobalVariables_7
   \   000000A0   0200A0E1           MOV      R0,R2
   \   000000A4   A42092E5           LDR      R2,[R2, #+164]
   \   000000A8   0310A0E3           MOV      R1,#+3
   \   000000AC   002092E5           LDR      R2,[R2, #+0]
   \   000000B0   0FE0A0E1           MOV      LR,PC
   \   000000B4   12FF2FE1           BX       R2
    150              if ( PRODraftSystem::PRODraftSysPtr     ) delete PRODraftSystem::PRODraftSysPtr;
   \                     ??DeleteGlobalVariables_7:
   \   000000B8   BC009FE5           LDR      R0,??DeleteGlobalVariables_1+0x10  ;; ??PRODraftSysPtr
   \   000000BC   002090E5           LDR      R2,[R0, #+0]
   \   000000C0   000052E3           CMP      R2,#+0
   \   000000C4   0500000A           BEQ      ??DeleteGlobalVariables_8
   \   000000C8   0200A0E1           MOV      R0,R2
   \   000000CC   A42092E5           LDR      R2,[R2, #+164]
   \   000000D0   0310A0E3           MOV      R1,#+3
   \   000000D4   002092E5           LDR      R2,[R2, #+0]
   \   000000D8   0FE0A0E1           MOV      LR,PC
   \   000000DC   12FF2FE1           BX       R2
    151              if ( PROSystemData::TXUSystemData       ) delete PROSystemData::TXUSystemData;
   \                     ??DeleteGlobalVariables_8:
   \   000000E0   ........           LDR      R0,??DataTable2  ;; ??TXUSystemData
   \   000000E4   002090E5           LDR      R2,[R0, #+0]
   \   000000E8   000052E3           CMP      R2,#+0
   \   000000EC   0500000A           BEQ      ??DeleteGlobalVariables_9
   \   000000F0   0200A0E1           MOV      R0,R2
   \   000000F4   A42092E5           LDR      R2,[R2, #+164]
   \   000000F8   0310A0E3           MOV      R1,#+3
   \   000000FC   002092E5           LDR      R2,[R2, #+0]
   \   00000100   0FE0A0E1           MOV      LR,PC
   \   00000104   12FF2FE1           BX       R2
    152              if ( PROProjectInfo::PROProjectInfoPtr  ) delete PROProjectInfo::PROProjectInfoPtr;
   \                     ??DeleteGlobalVariables_9:
   \   00000108   70009FE5           LDR      R0,??DeleteGlobalVariables_1+0x14  ;; ??PROProjectInfoPtr
   \   0000010C   002090E5           LDR      R2,[R0, #+0]
   \   00000110   000052E3           CMP      R2,#+0
   \   00000114   0500000A           BEQ      ??DeleteGlobalVariables_10
   \   00000118   0200A0E1           MOV      R0,R2
   \   0000011C   A42092E5           LDR      R2,[R2, #+164]
   \   00000120   0310A0E3           MOV      R1,#+3
   \   00000124   002092E5           LDR      R2,[R2, #+0]
   \   00000128   0FE0A0E1           MOV      LR,PC
   \   0000012C   12FF2FE1           BX       R2
    153              if ( LoadReport::LoadReportPtr          ) delete  LoadReport::LoadReportPtr;
   \                     ??DeleteGlobalVariables_10:
   \   00000130   ........           LDR      R0,??DataTable3  ;; ??LoadReportPtr
   \   00000134   002090E5           LDR      R2,[R0, #+0]
   \   00000138   000052E3           CMP      R2,#+0
   \   0000013C   0500000A           BEQ      ??DeleteGlobalVariables_11
   \   00000140   0200A0E1           MOV      R0,R2
   \   00000144   A42092E5           LDR      R2,[R2, #+164]
   \   00000148   0310A0E3           MOV      R1,#+3
   \   0000014C   002092E5           LDR      R2,[R2, #+0]
   \   00000150   0FE0A0E1           MOV      LR,PC
   \   00000154   12FF2FE1           BX       R2
    154              IOUnit::DeleteAll();
   \                     ??DeleteGlobalVariables_11:
   \   00000158   ........           _BLF     ??DeleteAll,??DeleteAll??rA
    155              ModbusUnit::DeleteAllInDeviceMap();
   \   0000015C   ........           _BLF     ??DeleteAllInDeviceMap,??DeleteAllInDeviceMap??rA
    156              ModbusObject::DeleteAllInDeviceMap();
   \   00000160   ........           _BLF     ??DeleteAllInDeviceMap_1,??DeleteAllInDeviceMap??rA_1
    157          
    158          }
   \   00000164   3040BDE8           POP      {R4,R5,LR}
   \   00000168   1EFF2FE1           BX       LR               ;; return
   \                     ??DeleteGlobalVariables_1:
   \   0000016C   ........           DC32     ??ConfigInfoPtr
   \   00000170   ........           DC32     ??UsersVector
   \   00000174   ........           DC32     ??PROAtmRefPtr
   \   00000178   ........           DC32     ??PROInclinPtr
   \   0000017C   ........           DC32     ??PRODraftSysPtr
   \   00000180   ........           DC32     ??PROProjectInfoPtr

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable2:
   \   00000000   ........           DC32     ??TXUSystemData

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable3:
   \   00000000   ........           DC32     ??LoadReportPtr

   \                                 In segment DATA_ID, align 4, align-sorted
   \                     `?<Initializer for OS_FSys>`:
   \   00000000   0095BA0A           DC32 180000000

   \                                 In segment DIFUNCT, align 4, keep-with-next, root
   \   00000000                      REQUIRE ?call_ctors
   \   00000000   ........           DC32    ??__sti__routine

   \                                 In segment DATA_C, align 1, align-sorted
   \   00000000   0D0A00             DC8 "\015\012"

   \                                 In segment DATA_C, align 1, align-sorted
   \   00000000   2000               DC8 " "

   \                                 In segment DATA_C, align 4, align-sorted
   \   00000000   09090900           DC8 "                   "

   \                                 In segment DATA_C, align 1, align-sorted
   \   00000000   090900             DC8 "           "

   \                                 In segment DATA_C, align 1, align-sorted
   \   00000000   0900               DC8 "   "

   \                                 In segment DATA_C, align 1, align-sorted
   \   00000000   0A0A00             DC8 "\012\012"

   \                                 In segment DATA_C, align 1, align-sorted
   \   00000000   0A00               DC8 "\012"

   \                                 In segment DATA_C, align 1, align-sorted
   \   00000000   0D00               DC8 "\015"

   Maximum stack usage in bytes:

     Function                       CSTACK
     --------                       ------
     AnsiString::~AnsiString()          4
     DeleteGlobalVariables()           12
     DeletePROListTable()             328
     InitGlobalVariables()              8
     _Tree<_Tset_traits<AlarmBasic *, less<AlarmBasic *>, allocator<AlarmBasic *>, false>>::_Erase(_Tree<_Tset_traits<AlarmBasic *, less<AlarmBasic *>, allocator<AlarmBasic *>, false>>::_Nodeptr)
                                       16
     _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::_Copy(_Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>> const &)
                                       12
     _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::_Copy(_Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::_Nodeptr, _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::_Nodeptr)
                                       32
     _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::_Erase(_Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::_Nodeptr)
                                       16
     _Tree_algobase<allocator<void>>::_Clear()
                                        0
     _Tree_algobase<allocator<void>>::_IncP(_Tree_algobase<allocator<void>>::_Genptr)
                                        0
     __sti__routine()                  16
     set<AlarmBasic *>::~set()          8
     set<PRogramObjectBase *>::set(set<PRogramObjectBase *> const &)
                                       16
     set<PRogramObjectBase *>::~set()
                                        8


   Segment part sizes:

     Function/Label                 Bytes
     --------------                 -----
     _Tree_algobase<allocator<void>>::_IncP(_Tree_algobase<allocator<void>>::_Genptr)
                                      92
     _Tree_algobase<allocator<void>>::_Clear()
                                      36
     _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::_Copy(_Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>> const &)
                                     136
     _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::_Copy(_Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::_Nodeptr, _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::_Nodeptr)
                                     148
     _Tree<_Tset_traits<AlarmBasic *, less<AlarmBasic *>, allocator<AlarmBasic *>, false>>::_Erase(_Tree<_Tset_traits<AlarmBasic *, less<AlarmBasic *>, allocator<AlarmBasic *>, false>>::_Nodeptr)
                                      68
     _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::_Erase(_Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::_Nodeptr)
                                      68
     set<AlarmBasic *>::~set()        32
     set<PRogramObjectBase *>::set(set<PRogramObjectBase *> const &)
                                      48
     set<PRogramObjectBase *>::~set()
                                      32
     AnsiString::~AnsiString()        24
     GlobalDeviceHWId                  2
     OS_FSys                           4
     CurrentDeviceId                   2
     CurrentDeviceAddress              2
     Master                            1
     __sti__routine()                424
     ?<Constant "ENDCONFIGREVTEXT">  276
     FreeAlarmInfoList               500
     PinUnlock                         1
     ViewModePC                        1
     DeletePROListTable()            344
     InitGlobalVariables()            76
     DeleteGlobalVariables()         388
     ??DataTable2                      4
     ??DataTable3                      4
     ?<Initializer for OS_FSys>        4
     ?<Constant "\r\n">                3
     ?<Constant " ">                   2
     ?<Constant "			">                 4
     ?<Constant "		">                  3
     ?<Constant "	">                   2
     ?<Constant "\n\n">                3
     ?<Constant "\n">                  2
     ?<Constant "\r">                  2
      Others                         404

 
 2 228 bytes in segment CODE
   297 bytes in segment DATA_C
     4 bytes in segment DATA_I
     4 bytes in segment DATA_ID
   581 bytes in segment DATA_Z
     4 bytes in segment DIFUNCT
    24 bytes in segment INITTAB
 
 1 244 bytes of CODE  memory (+ 1 012 bytes shared)
   301 bytes of CONST memory
   585 bytes of DATA  memory

Errors: none
Warnings: none
