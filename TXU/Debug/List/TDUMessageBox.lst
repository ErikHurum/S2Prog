##############################################################################
#                                                                            #
# IAR ARM ANSI C/C++ Compiler V4.42A/W32               14/Sep/2022  15:18:29 #
# Copyright 1999-2005 IAR Systems. All rights reserved.                      #
#                                                                            #
#    Cpu mode        =  interwork                                            #
#    Endian          =  little                                               #
#    Stack alignment =  4                                                    #
#    Source file     =  D:\S2Prog\TXU\src\TDUMessageBox.cpp                  #
#    Command line    =  D:\S2Prog\TXU\src\TDUMessageBox.cpp --fpu None -D    #
#                       OS_LIBMODE_SP -D CPU_S3C2410 -D OS_RAMVECT=0 -D      #
#                       OS_UART=-1 -D S2TXU -D USE_LZO=1 -D __ARM_LIBRARY__  #
#                       -D WATCHDOG=1 -D NETWORK=1 -lCN                      #
#                       D:\S2Prog\TXU\Debug\List\ -o                         #
#                       D:\S2Prog\TXU\Debug\Obj\ -s9 --debug --cpu_mode arm  #
#                       --endian little --cpu ARM920T --stack_align 4        #
#                       --interwork -e --enable_multibytes --eec++           #
#                       --dlib_config "C:\Program Files (x86)\IAR            #
#                       Systems\Embedded Workbench                           #
#                       4.0\arm\LIB\dl4tpainl8n.h" -I                        #
#                       D:\S2Prog\TXU\GUI\CORE\ -I D:\S2Prog\TXU\GUI\WM\ -I  #
#                       D:\S2Prog\TXU\GUI\WIDGET\ -I D:\S2Prog\TXU\CONFIG\   #
#                       -I D:\S2Prog\TXU\INC\ -I D:\S2Prog\TXU\..\SHARED\INC #
#                       \ -I D:\S2Prog\TXU\..\SHARED\SRC\ -I                 #
#                       D:\S2Prog\TXU\..\SHARED\LZO\minilzo.210\ -I          #
#                       D:\S2Prog\TXU\lwip-1.4.1\src\include\ -I             #
#                       D:\S2Prog\TXU\lwip-1.4.1\src\include\ipv4\ -I        #
#                       D:\S2Prog\TXU\lwip-1.4.1\src\ -I                     #
#                       D:\S2Prog\TXU\..\SHARED\Database\ -I                 #
#                       D:\S2Prog\TXU\src\ -I "C:\Program Files (x86)\IAR    #
#                       Systems\Embedded Workbench 4.0\arm\INC\"             #
#                       --inline_threshold=2                                 #
#    List file       =  D:\S2Prog\TXU\Debug\List\TDUMessageBox.lst           #
#    Object file     =  D:\S2Prog\TXU\Debug\Obj\TDUMessageBox.r79            #
#                                                                            #
#                                                                            #
##############################################################################

D:\S2Prog\TXU\src\TDUMessageBox.cpp
      1          #include "TDUIncludes.h"
      2          

   \                                 In segment CODE, align 4, keep-with-next
      3          TDUMessageBox::~TDUMessageBox(void)
      4          {
   \                     `?~TDUMessageBox`:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0040A0E1           MOV      R4,R0
      5          
      6          }
   \   00000008   380084E2           ADD      R0,R4,#+56
   \   0000000C   ........           _BLF     `?~CloseWindowTimer`,`?~CloseWindowTimer??rA`
   \   00000010   0400A0E1           MOV      R0,R4
   \   00000014   ........           _BLF     `?~TDUBasicWin`,`?~TDUBasicWin??rA`
   \   00000018   1040BDE8           POP      {R4,LR}
   \   0000001C   1EFF2FE1           BX       LR               ;; return
      7          

   \                                 In segment CODE, align 4, keep-with-next
      8          TDUMessageBox::TDUMessageBox(void)
   \                     ??TDUMessageBox:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   18D04DE2           SUB      SP,SP,#+24
   \   00000008   0040A0E1           MOV      R4,R0
      9          {
   \   0000000C   ........           _BLF     ??TDUBasicWin,??TDUBasicWin??rA
   \   00000010   380084E2           ADD      R0,R4,#+56
   \   00000014   ........           _BLF     ??CloseWindowTimer,??CloseWindowTimer??rA
     10          	Closed = true;
     11          	{
     12          		const GUIKey Words[] ={
     13          			{TDU_MESSAGE_WIN	,0,L_WORD153},
     14          			{GUI_ID_OK			,0,L_WORD161},
     15          		};
   \   00000018   34109FE5           LDR      R1,??TDUMessageBox_1  ;; `?<Constant {{2205, 0, 153}, {1, 0, 161}}>`
   \   0000001C   0100A0E3           MOV      R0,#+1
   \   00000020   3400C4E5           STRB     R0,[R4, #+52]
   \   00000024   6C5091E8           LDM      R1,{R2,R3,R5,R6,R12,LR}
   \   00000028   0D00A0E1           MOV      R0,SP
     16          		AddToSKeyList((GUIKey*)Words,NELEMENTS(Words));
   \   0000002C   0D10A0E1           MOV      R1,SP
   \   00000030   6C5080E8           STM      R0,{R2,R3,R5,R6,R12,LR}
   \   00000034   0130A0E3           MOV      R3,#+1
   \   00000038   0220A0E3           MOV      R2,#+2
   \   0000003C   0400A0E1           MOV      R0,R4
   \   00000040   ........           _BLF     ??AddToSKeyList,??AddToSKeyList??rA
     17          	}
     18          }
   \   00000044   0400A0E1           MOV      R0,R4
   \   00000048   18D08DE2           ADD      SP,SP,#+24
   \   0000004C   7040BDE8           POP      {R4-R6,LR}
   \   00000050   1EFF2FE1           BX       LR               ;; return
   \                     ??TDUMessageBox_1:
   \   00000054   ........           DC32     `?<Constant {{2205, 0, 153}, {1, 0, 161}}>`
     19          

   \                                 In segment DATA_C, align 4, align-sorted
     20          const GUI_WIDGET_CREATE_INFO TDUMessageBox::aDialogCreate[] =
   \                     ??aDialogCreate:
   \   00000000   ............       DC32 FRAMEWIN_CreateIndirect, `?<Constant "Warning">`
   \              ....        
   \   00000008   9D0832003200       DC16 2205, 50, 50, 160, 100, 16
   \              A00064001000
   \   00000014   00000000....       DC32 0, BUTTON_CreateIndirect, `?<Constant "OK">`
   \              ............
   \   00000020   010028003C00       DC16 1, 40, 60, 60, 20
   \              3C001400    
   \   0000002A   000000000000       DC8 0, 0, 0, 0, 0, 0
   \   00000030   ............       DC32 TEXT_CreateIndirect, `?<Constant "">`
   \              ....        
   \   00000038   610104000400       DC16 353, 4, 4, 150, 50, 0
   \              960032000000
   \   00000044   00000000           DC8 0, 0, 0, 0
     21          {
     22          	{ FRAMEWIN_CreateIndirect,  "Warning",  TDU_MESSAGE_WIN, 50, 50, 160, 100, FRAMEWIN_CF_MOVEABLE, 0},
     23          	{ BUTTON_CreateIndirect,    "OK",       GUI_ID_OK   , 40, 60,  60,  20},
     24          	{ TEXT_CreateIndirect,      ""	,     GUI_ID_TEXT1,  4,  4, 150,  50, TEXT_CF_LEFT},
     25          };
     26          

   \                                 In segment CODE, align 4, keep-with-next
     27          void TDUMessageBox::Exec(WM_HWIN hCurrentWin,AnsiString HeadingText,AnsiString MessageText)
     28          {
   \                     ??Exec:
   \   00000000   F0402DE9           PUSH     {R4-R7,LR}
   \   00000004   38D04DE2           SUB      SP,SP,#+56
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   0250A0E1           MOV      R5,R2
   \   00000010   0360A0E1           MOV      R6,R3
     29            MessageText = DivideString(MessageText,28);
   \   00000014   0020A0E3           MOV      R2,#+0
   \   00000018   0010A0E3           MOV      R1,#+0
   \   0000001C   1C008DE2           ADD      R0,SP,#+28
   \   00000020   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000024   28019FE5           LDR      R0,??Exec_1      ;; ??npos
   \   00000028   0020A0E3           MOV      R2,#+0
   \   0000002C   007090E5           LDR      R7,[R0, #+0]
   \   00000030   0610A0E1           MOV      R1,R6
   \   00000034   0730A0E1           MOV      R3,R7
   \   00000038   1C008DE2           ADD      R0,SP,#+28
   \   0000003C   ........           _BLF     ??assign,??assign??rA
   \   00000040   1C20A0E3           MOV      R2,#+28
   \   00000044   1C108DE2           ADD      R1,SP,#+28
   \   00000048   0D00A0E1           MOV      R0,SP
   \   0000004C   ........           _BLF     ??DivideString,??DivideString??rA
   \   00000050   0730A0E1           MOV      R3,R7
   \   00000054   0020A0E3           MOV      R2,#+0
   \   00000058   0D10A0E1           MOV      R1,SP
   \   0000005C   0600A0E1           MOV      R0,R6
   \   00000060   ........           _BLF     ??assign,??assign??rA
   \   00000064   0020A0E3           MOV      R2,#+0
   \   00000068   0110A0E3           MOV      R1,#+1
   \   0000006C   0D00A0E1           MOV      R0,SP
   \   00000070   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000074   0020A0E3           MOV      R2,#+0
   \   00000078   0110A0E3           MOV      R1,#+1
   \   0000007C   1C008DE2           ADD      R0,SP,#+28
   \   00000080   ........           _BLF     ??_Tidy,??_Tidy??rA
     30          	if ( !Closed ) {
   \   00000084   3400D4E5           LDRB     R0,[R4, #+52]
   \   00000088   000050E3           CMP      R0,#+0
   \   0000008C   0700001A           BNE      ??Exec_2
     31          		if ( WinHandl ) {
   \   00000090   FA02D4E1           LDRSH    R0,[R4, #+42]
   \   00000094   000050E3           CMP      R0,#+0
   \   00000098   0500000A           BEQ      ??Exec_3
     32          			CloseTimer.Stop();
   \   0000009C   541094E5           LDR      R1,[R4, #+84]
   \   000000A0   380084E2           ADD      R0,R4,#+56
   \   000000A4   001091E5           LDR      R1,[R1, #+0]
   \   000000A8   0FE0A0E1           MOV      LR,PC
   \   000000AC   11FF2FE1           BX       R1
     33          		}
     34          	}
     35          	Closed = false;
   \                     ??Exec_2:
   \   000000B0   0000A0E3           MOV      R0,#+0
     36          	WinHandl = GUI_CreateDialogBox(aDialogCreate, GUI_COUNTOF(aDialogCreate),&cbMessageBox,
     37          																 0, 0, 0);
   \                     ??Exec_3:
   \   000000B4   9C209FE5           LDR      R2,??Exec_1+0x4  ;; ??cbMessageBox
   \   000000B8   3400C4E5           STRB     R0,[R4, #+52]
   \   000000BC   0000A0E3           MOV      R0,#+0
   \   000000C0   01002DE9           PUSH     {R0}
   \   000000C4   01002DE9           PUSH     {R0}
   \   000000C8   8C009FE5           LDR      R0,??Exec_1+0x8  ;; ??aDialogCreate
   \   000000CC   0030A0E3           MOV      R3,#+0
   \   000000D0   0310A0E3           MOV      R1,#+3
   \   000000D4   ........           _BLF     GUI_CreateDialogBox,??GUI_CreateDialogBox??rA
   \   000000D8   BA02C4E1           STRH     R0,[R4, #+42]
     38          	WM_HWIN hText;
     39          	hText = WM_GetDialogItem( WinHandl, GUI_ID_TEXT1);
   \   000000DC   6110A0E3           MOV      R1,#+97
   \   000000E0   401F81E3           ORR      R1,R1,#0x100
   \   000000E4   ........           _BLF     WM_GetDialogItem,??WM_GetDialogItem??rA
   \   000000E8   0070A0E1           MOV      R7,R0
     40          	FRAMEWIN_SetText(WinHandl,HeadingText.c_str());
   \   000000EC   180095E5           LDR      R0,[R5, #+24]
   \   000000F0   08D08DE2           ADD      SP,SP,#+8
   \   000000F4   100050E3           CMP      R0,#+16
   \   000000F8   FA02D4E1           LDRSH    R0,[R4, #+42]
   \   000000FC   04109525           LDRCS    R1,[R5, #+4]
   \   00000100   04108532           ADDCC    R1,R5,#+4
   \   00000104   ........           _BLF     FRAMEWIN_SetText,??FRAMEWIN_SetText??rA
     41          	TEXT_SetText(hText,MessageText.c_str());
   \   00000108   180096E5           LDR      R0,[R6, #+24]
   \   0000010C   100050E3           CMP      R0,#+16
   \   00000110   04109625           LDRCS    R1,[R6, #+4]
   \   00000114   0700A0E1           MOV      R0,R7
   \   00000118   04108632           ADDCC    R1,R6,#+4
   \   0000011C   ........           _BLF     TEXT_SetText,??TEXT_SetText??rA
     42          	CloseTimer.Init(WinHandl,true,&Closed,TimeOut);
   \   00000120   2000A0E3           MOV      R0,#+32
   \   00000124   4E0C80E3           ORR      R0,R0,#0x4E00
   \   00000128   01002DE9           PUSH     {R0}
   \   0000012C   FA12D4E1           LDRSH    R1,[R4, #+42]
   \   00000130   343084E2           ADD      R3,R4,#+52
   \   00000134   0120A0E3           MOV      R2,#+1
   \   00000138   380084E2           ADD      R0,R4,#+56
   \   0000013C   ........           _BLF     ??Init,??Init??rA
     43            WM_EnableMemdev(WinHandl);
   \   00000140   FA02D4E1           LDRSH    R0,[R4, #+42]
   \   00000144   ........           _BLF     WM_EnableMemdev,??WM_EnableMemdev??rA
     44          }
   \   00000148   3CD08DE2           ADD      SP,SP,#+60
   \   0000014C   F040BDE8           POP      {R4-R7,LR}
   \   00000150   1EFF2FE1           BX       LR               ;; return
   \                     ??Exec_1:
   \   00000154   ........           DC32     ??npos
   \   00000158   ........           DC32     ??cbMessageBox
   \   0000015C   ........           DC32     ??aDialogCreate
     45          
     46          /*********************************************************************
     47          *
     48          * Dialog procedure
     49          */

   \                                 In segment CODE, align 4, keep-with-next
     50          void TDUMessageBox::cbMessageBox(WM_MESSAGE *pMsg)
     51          {
   \                     ??cbMessageBox:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
     52          	int NCode, Id;
     53          	switch ( pMsg->MsgId ) {
   \   00000004   90509FE5           LDR      R5,??cbMessageBox_1  ;; OKMessageBox
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   001094E5           LDR      R1,[R4, #+0]
   \   00000010   000095E5           LDR      R0,[R5, #+0]
   \   00000014   0E1051E2           SUBS     R1,R1,#+14
   \   00000018   0A00000A           BEQ      ??cbMessageBox_2
   \   0000001C   011051E2           SUBS     R1,R1,#+1
   \   00000020   0700000A           BEQ      ??cbMessageBox_3
   \   00000024   0E1051E2           SUBS     R1,R1,#+14
   \   00000028   0200000A           BEQ      ??cbMessageBox_4
   \   0000002C   091051E2           SUBS     R1,R1,#+9
   \   00000030   0600000A           BEQ      ??cbMessageBox_5
   \   00000034   150000EA           B        ??cbMessageBox_6
     54          		case WM_INIT_DIALOG:
     55          			OKMessageBox->FirstTime = true;
   \                     ??cbMessageBox_4:
   \   00000038   0110A0E3           MOV      R1,#+1
   \   0000003C   2810C0E5           STRB     R1,[R0, #+40]
   \   00000040   000000EA           B        ??cbMessageBox_2
     56          			break;
     57          		case WM_PAINT:
     58          			OKMessageBox->UpdateLanguage();
   \                     ??cbMessageBox_3:
   \   00000044   ........           _BLF     ??UpdateLanguage,??UpdateLanguage??rA
   \                     ??cbMessageBox_2:
   \   00000048   3040BDE8           POP      {R4,R5,LR}
   \   0000004C   1EFF2FE1           BX       LR
     59          			break;
     60          		case WM_KEY:
     61          					break;
     62          		case WM_NOTIFY_PARENT:
     63          			Id    = WM_GetId(pMsg->hWinSrc);		/* Id of widget */
   \                     ??cbMessageBox_5:
   \   00000050   F600D4E1           LDRSH    R0,[R4, #+6]
   \   00000054   ........           _BLF     WM_GetId,??WM_GetId??rA
     64          			NCode = pMsg->Data.v;								/* Notification code */
     65          			switch ( NCode ) {
   \   00000058   081094E5           LDR      R1,[R4, #+8]
   \   0000005C   020051E3           CMP      R1,#+2
     66          				case WM_NOTIFICATION_RELEASED:		/* React only if released */
     67          					switch ( Id ) {
   \   00000060   01005003           CMPEQ    R0,#+1
   \   00000064   F7FFFF1A           BNE      ??cbMessageBox_2
     68          						case GUI_ID_OK:
     69          							{					 /* OK Button */
     70          								if ( !OKMessageBox->Closed ) {
   \   00000068   001095E5           LDR      R1,[R5, #+0]
   \   0000006C   3400D1E5           LDRB     R0,[R1, #+52]
   \   00000070   000050E3           CMP      R0,#+0
   \   00000074   F3FFFF1A           BNE      ??cbMessageBox_2
     71          									OKMessageBox->CloseTimer.Stop();
   \   00000078   380081E2           ADD      R0,R1,#+56
   \   0000007C   541091E5           LDR      R1,[R1, #+84]
   \   00000080   001091E5           LDR      R1,[R1, #+0]
   \   00000084   0FE0A0E1           MOV      LR,PC
   \   00000088   11FF2FE1           BX       R1
   \   0000008C   EDFFFFEA           B        ??cbMessageBox_2
     72          								}
     73          							}
     74          							break;
     75          					}
     76          					break;
     77          			}
     78          			break;
     79          		default:
     80          			WM_DefaultProc(pMsg);
   \                     ??cbMessageBox_6:
   \   00000090   0400A0E1           MOV      R0,R4
   \   00000094   ........           _BLF     WM_DefaultProc,??WM_DefaultProc??rA
     81          	}
     82          }
   \                     ??cbMessageBox_7:
   \   00000098   EAFFFFEA           B        ??cbMessageBox_2
   \                     ??cbMessageBox_1:
   \   0000009C   ........           DC32     OKMessageBox

   \                                 In segment DIFUNCT, align 4, keep-with-next, root
   \   00000000                      REQUIRE ?call_ctors
   \   00000000   ........           DC32    ??__sti__routine

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "Warning">`:
   \   00000000   5761726E696E       DC8 "Warning"
   \              6700        

   \                                 In segment DATA_C, align 1, align-sorted
   \                     `?<Constant "OK">`:
   \   00000000   4F4B00             DC8 "OK"

   \                                 In segment DATA_C, align 1, align-sorted
   \                     `?<Constant "">`:
   \   00000000   00                 DC8 ""

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant {{2205, 0, 153}, {1, 0, 161}}>`:
   \   00000000   9D0800000000       DC32 2205, 0, 153, 1, 0, 161
   \              000099000000
   \              010000000000
   \              0000A1000000

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs TDUMessageBox &TDUMessageBox::new TDUMessageBox()
   \                     `??new TDUMessageBox`:
   \   00000000   00402DE9           PUSH     {LR}
   \   00000004   6000A0E3           MOV      R0,#+96
   \   00000008   ........           _BLF     `??operator new`,`??operator new??rA`
   \   0000000C   000050E3           CMP      R0,#+0
   \   00000010   0000000A           BEQ      `??new TDUMessageBox_1`
   \   00000014   ........           BL       ??TDUMessageBox
   \                     `??new TDUMessageBox_1`:
   \   00000018   0040BDE8           POP      {LR}
   \   0000001C   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void TDUMessageBox::delete ~TDUMessageBox(TDUMessageBox *)
   \                     `??delete ~TDUMessageBox`:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0040B0E1           MOVS     R4,R0
   \   00000008   0200000A           BEQ      `??delete ~TDUMessageBox_1`
   \   0000000C   ........           BL       `?~TDUMessageBox`
   \   00000010   0400A0E1           MOV      R0,R4
   \   00000014   ........           _BLF     `??operator delete`,`??operator delete??rA`
   \                     `??delete ~TDUMessageBox_1`:
   \   00000018   1040BDE8           POP      {R4,LR}
   \   0000001C   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   static __??Code32?? __intrinsic __code __interwork __atpcs void __sti__routine()
   \                     ??__sti__routine:
   \   00000000   1EFF2FE1           BX       LR               ;; return

   Maximum stack usage in bytes:

     Function                       CSTACK
     --------                       ------
     TDUMessageBox::Exec(GUI_HWIN, AnsiString, AnsiString)
                                       84
     TDUMessageBox::TDUMessageBox()    40
     TDUMessageBox::cbMessageBox(WM_MESSAGE *)
                                       12
     TDUMessageBox::delete ~TDUMessageBox(TDUMessageBox *)
                                        8
     TDUMessageBox::new TDUMessageBox()
                                        4
     TDUMessageBox::~TDUMessageBox()
                                        8
     __sti__routine()                   0


   Segment part sizes:

     Function/Label                 Bytes
     --------------                 -----
     TDUMessageBox::~TDUMessageBox()
                                      32
     TDUMessageBox::TDUMessageBox()   88
     TDUMessageBox::aDialogCreate     72
     TDUMessageBox::Exec(GUI_HWIN, AnsiString, AnsiString)
                                     352
     TDUMessageBox::cbMessageBox(WM_MESSAGE *)
                                     160
     ?<Constant "Warning">             8
     ?<Constant "OK">                  3
     ?<Constant "">                    1
     ?<Constant {{2205, 0, 153}, {1, 0, 161}}>
                                      24
     TDUMessageBox::new TDUMessageBox()
                                      32
     TDUMessageBox::delete ~TDUMessageBox(TDUMessageBox *)
                                      32
     __sti__routine()                  4
      Others                         260

 
 956 bytes in segment CODE
 108 bytes in segment DATA_C
   4 bytes in segment DIFUNCT
 
 704 bytes of CODE  memory (+ 256 bytes shared)
 108 bytes of CONST memory

Errors: none
Warnings: none
