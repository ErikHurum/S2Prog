##############################################################################
#                                                                            #
# IAR ARM ANSI C/C++ Compiler V4.42A/W32               14/Sep/2022  15:19:06 #
# Copyright 1999-2005 IAR Systems. All rights reserved.                      #
#                                                                            #
#    Cpu mode        =  interwork                                            #
#    Endian          =  little                                               #
#    Stack alignment =  4                                                    #
#    Source file     =  D:\S2Prog\TXU\src\TDUUtilities.cpp                   #
#    Command line    =  D:\S2Prog\TXU\src\TDUUtilities.cpp --fpu None -D     #
#                       OS_LIBMODE_SP -D CPU_S3C2410 -D OS_RAMVECT=0 -D      #
#                       OS_UART=-1 -D S2TXU -D USE_LZO=1 -D __ARM_LIBRARY__  #
#                       -D WATCHDOG=1 -D NETWORK=1 -lCN                      #
#                       D:\S2Prog\TXU\Debug\List\ -o                         #
#                       D:\S2Prog\TXU\Debug\Obj\ -s9 --debug --cpu_mode arm  #
#                       --endian little --cpu ARM920T --stack_align 4        #
#                       --interwork -e --enable_multibytes --eec++           #
#                       --dlib_config "C:\Program Files (x86)\IAR            #
#                       Systems\Embedded Workbench                           #
#                       4.0\arm\LIB\dl4tpainl8n.h" -I                        #
#                       D:\S2Prog\TXU\GUI\CORE\ -I D:\S2Prog\TXU\GUI\WM\ -I  #
#                       D:\S2Prog\TXU\GUI\WIDGET\ -I D:\S2Prog\TXU\CONFIG\   #
#                       -I D:\S2Prog\TXU\INC\ -I D:\S2Prog\TXU\..\SHARED\INC #
#                       \ -I D:\S2Prog\TXU\..\SHARED\SRC\ -I                 #
#                       D:\S2Prog\TXU\..\SHARED\LZO\minilzo.210\ -I          #
#                       D:\S2Prog\TXU\lwip-1.4.1\src\include\ -I             #
#                       D:\S2Prog\TXU\lwip-1.4.1\src\include\ipv4\ -I        #
#                       D:\S2Prog\TXU\lwip-1.4.1\src\ -I                     #
#                       D:\S2Prog\TXU\..\SHARED\Database\ -I                 #
#                       D:\S2Prog\TXU\src\ -I "C:\Program Files (x86)\IAR    #
#                       Systems\Embedded Workbench 4.0\arm\INC\"             #
#                       --inline_threshold=2                                 #
#    List file       =  D:\S2Prog\TXU\Debug\List\TDUUtilities.lst            #
#    Object file     =  D:\S2Prog\TXU\Debug\Obj\TDUUtilities.r79             #
#                                                                            #
#                                                                            #
##############################################################################

D:\S2Prog\TXU\src\TDUUtilities.cpp
      1          #include "TDUIncludes.h"
      2          

   \                                 In segment CODE, align 4, keep-with-next
      3          void DisplayMessage(AnsiString Heading, AnsiString Message)
      4          {
   \                     ??DisplayMessage:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   0040A0E1           MOV      R4,R0
      5          	switch ( CurrentDeviceId ) {
   \   00000008   A8009FE5           LDR      R0,??DisplayMessage_1  ;; CurrentDeviceId
   \   0000000C   38D04DE2           SUB      SP,SP,#+56
   \   00000010   F000D0E1           LDRSH    R0,[R0, #+0]
   \   00000014   0150A0E1           MOV      R5,R1
   \   00000018   300050E2           SUBS     R0,R0,#+48
   \   0000001C   B8005012           SUBSNE   R0,R0,#+184
   \   00000020   2100001A           BNE      ??DisplayMessage_2
      6          		case DEVICE_TCU:	// TCU
      7          			break;
      8          		case DEVICE_TDU:	// TDU
      9          		case DEVICE_TDU_SIMULATOR:
     10          			ListMessageBox->Exec(0, Heading, Message);
   \   00000024   0020A0E3           MOV      R2,#+0
   \   00000028   0010A0E3           MOV      R1,#+0
   \   0000002C   0D00A0E1           MOV      R0,SP
   \   00000030   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000034   80009FE5           LDR      R0,??DisplayMessage_1+0x4  ;; ??npos
   \   00000038   0020A0E3           MOV      R2,#+0
   \   0000003C   006090E5           LDR      R6,[R0, #+0]
   \   00000040   0510A0E1           MOV      R1,R5
   \   00000044   0630A0E1           MOV      R3,R6
   \   00000048   0D00A0E1           MOV      R0,SP
   \   0000004C   ........           _BLF     ??assign,??assign??rA
   \   00000050   0020A0E3           MOV      R2,#+0
   \   00000054   0210A0E1           MOV      R1,R2
   \   00000058   1C008DE2           ADD      R0,SP,#+28
   \   0000005C   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000060   0630A0E1           MOV      R3,R6
   \   00000064   0020A0E3           MOV      R2,#+0
   \   00000068   0410A0E1           MOV      R1,R4
   \   0000006C   1C008DE2           ADD      R0,SP,#+28
   \   00000070   ........           _BLF     ??assign,??assign??rA
   \   00000074   44009FE5           LDR      R0,??DisplayMessage_1+0x8  ;; ListMessageBox
   \   00000078   0D30A0E1           MOV      R3,SP
   \   0000007C   000090E5           LDR      R0,[R0, #+0]
   \   00000080   1C208DE2           ADD      R2,SP,#+28
   \   00000084   0010A0E3           MOV      R1,#+0
   \   00000088   ........           _BLF     ??Exec,??Exec??rA
   \   0000008C   0020A0E3           MOV      R2,#+0
   \   00000090   0110A0E3           MOV      R1,#+1
   \   00000094   0D00A0E1           MOV      R0,SP
   \   00000098   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   0000009C   0020A0E3           MOV      R2,#+0
   \   000000A0   0110A0E3           MOV      R1,#+1
   \   000000A4   1C008DE2           ADD      R0,SP,#+28
   \   000000A8   ........           _BLF     ??_Tidy,??_Tidy??rA
     11          			break;
     12          	}
     13          }
   \                     ??DisplayMessage_2:
   \   000000AC   38D08DE2           ADD      SP,SP,#+56
   \   000000B0   7040BDE8           POP      {R4-R6,LR}
   \   000000B4   1EFF2FE1           BX       LR               ;; return
   \                     ??DisplayMessage_1:
   \   000000B8   ........           DC32     CurrentDeviceId
   \   000000BC   ........           DC32     ??npos
   \   000000C0   ........           DC32     ListMessageBox
     14          
     15          /*********************************************************************
     16          *				Added by EHS 5/11/03
     17          *       LISTVIEW_SetItemTextWithColor
     18          */
     19          extern "C"{

   \                                 In segment CODE, align 4, keep-with-next
     20          	void LISTVIEW_SetItemTextWithColor(LISTVIEW_Handle hObj, unsigned Column, unsigned Row, const char *MyStr, GUI_COLOR FgColor, GUI_COLOR BkColor)
     21          	{
   \                     LISTVIEW_SetItemTextWithColor:
   \   00000000   F0412DE9           PUSH     {R4-R8,LR}
   \   00000004   18709DE5           LDR      R7,[SP, #+24]
   \   00000008   1C809DE5           LDR      R8,[SP, #+28]
   \   0000000C   0040A0E1           MOV      R4,R0
   \   00000010   0150A0E1           MOV      R5,R1
   \   00000014   0260A0E1           MOV      R6,R2
     22          		if ( hObj ) {
   \   00000018   000054E3           CMP      R4,#+0
   \   0000001C   1B00000A           BEQ      ??LISTVIEW_SetItemTextWithColor_0
     23          			LISTVIEW_SetItemText(hObj, Column, Row, MyStr);
   \   00000020   ........           _BLF     LISTVIEW_SetItemText,??LISTVIEW_SetItemText??rA
     24          			LISTVIEW_SetItemTextColor(hObj,Column, Row, 0, FgColor);
   \   00000024   0700A0E1           MOV      R0,R7
   \   00000028   01002DE9           PUSH     {R0}
   \   0000002C   0030A0E3           MOV      R3,#+0
   \   00000030   0620A0E1           MOV      R2,R6
   \   00000034   0510A0E1           MOV      R1,R5
   \   00000038   0400A0E1           MOV      R0,R4
   \   0000003C   ........           _BLF     LISTVIEW_SetItemTextColor,??LISTVIEW_SetItemTextColor??rA
     25          			LISTVIEW_SetItemBkColor(hObj,Column,Row, 0, BkColor);
   \   00000040   0800A0E1           MOV      R0,R8
   \   00000044   01002DE9           PUSH     {R0}
   \   00000048   0030A0E3           MOV      R3,#+0
   \   0000004C   0620A0E1           MOV      R2,R6
   \   00000050   0510A0E1           MOV      R1,R5
   \   00000054   0400A0E1           MOV      R0,R4
   \   00000058   ........           _BLF     LISTVIEW_SetItemBkColor,??LISTVIEW_SetItemBkColor??rA
     26          			LISTVIEW_SetItemTextColor(hObj,Column, Row, 2, BkColor);
   \   0000005C   00012DE9           PUSH     {R8}
   \   00000060   0230A0E3           MOV      R3,#+2
   \   00000064   0620A0E1           MOV      R2,R6
   \   00000068   0510A0E1           MOV      R1,R5
   \   0000006C   0400A0E1           MOV      R0,R4
   \   00000070   ........           _BLF     LISTVIEW_SetItemTextColor,??LISTVIEW_SetItemTextColor??rA
     27          			LISTVIEW_SetItemBkColor(hObj,Column,Row, 2, FgColor);
   \   00000074   80002DE9           PUSH     {R7}
   \   00000078   0230A0E3           MOV      R3,#+2
   \   0000007C   0620A0E1           MOV      R2,R6
   \   00000080   0510A0E1           MOV      R1,R5
   \   00000084   0400A0E1           MOV      R0,R4
   \   00000088   ........           _BLF     LISTVIEW_SetItemBkColor,??LISTVIEW_SetItemBkColor??rA
   \   0000008C   10D08DE2           ADD      SP,SP,#+16
     28          		}
     29          	}
   \                     ??LISTVIEW_SetItemTextWithColor_0:
   \   00000090   F041BDE8           POP      {R4-R8,LR}
   \   00000094   1EFF2FE1           BX       LR               ;; return

   \                                 In segment DIFUNCT, align 4, keep-with-next, root
   \   00000000                      REQUIRE ?call_ctors
   \   00000000   ........           DC32    ??__sti__routine

   \                                 In segment CODE, align 4, keep-with-next
   \   static __??Code32?? __intrinsic __code __interwork __atpcs void __sti__routine()
   \                     ??__sti__routine:
   \   00000000   1EFF2FE1           BX       LR               ;; return
     30          }
     31          
     32          

   Maximum stack usage in bytes:

     Function                       CSTACK
     --------                       ------
     DisplayMessage(AnsiString, AnsiString)
                                       72
     LISTVIEW_SetItemTextWithColor     40
     __sti__routine()                   0


   Segment part sizes:

     Function/Label                 Bytes
     --------------                 -----
     DisplayMessage(AnsiString, AnsiString)
                                     196
     LISTVIEW_SetItemTextWithColor   152
     __sti__routine()                  4
      Others                          88

 
 436 bytes in segment CODE
   4 bytes in segment DIFUNCT
 
 356 bytes of CODE memory (+ 84 bytes shared)

Errors: none
Warnings: none
