##############################################################################
#                                                                            #
# IAR ARM ANSI C/C++ Compiler V4.42A/W32               14/Sep/2022  15:18:56 #
# Copyright 1999-2005 IAR Systems. All rights reserved.                      #
#                                                                            #
#    Cpu mode        =  interwork                                            #
#    Endian          =  little                                               #
#    Stack alignment =  4                                                    #
#    Source file     =  D:\S2Prog\TXU\src\TDUTankCleaningDetailsWin.cpp      #
#    Command line    =  D:\S2Prog\TXU\src\TDUTankCleaningDetailsWin.cpp      #
#                       --fpu None -D OS_LIBMODE_SP -D CPU_S3C2410 -D        #
#                       OS_RAMVECT=0 -D OS_UART=-1 -D S2TXU -D USE_LZO=1 -D  #
#                       __ARM_LIBRARY__ -D WATCHDOG=1 -D NETWORK=1 -lCN      #
#                       D:\S2Prog\TXU\Debug\List\ -o                         #
#                       D:\S2Prog\TXU\Debug\Obj\ -s9 --debug --cpu_mode arm  #
#                       --endian little --cpu ARM920T --stack_align 4        #
#                       --interwork -e --enable_multibytes --eec++           #
#                       --dlib_config "C:\Program Files (x86)\IAR            #
#                       Systems\Embedded Workbench                           #
#                       4.0\arm\LIB\dl4tpainl8n.h" -I                        #
#                       D:\S2Prog\TXU\GUI\CORE\ -I D:\S2Prog\TXU\GUI\WM\ -I  #
#                       D:\S2Prog\TXU\GUI\WIDGET\ -I D:\S2Prog\TXU\CONFIG\   #
#                       -I D:\S2Prog\TXU\INC\ -I D:\S2Prog\TXU\..\SHARED\INC #
#                       \ -I D:\S2Prog\TXU\..\SHARED\SRC\ -I                 #
#                       D:\S2Prog\TXU\..\SHARED\LZO\minilzo.210\ -I          #
#                       D:\S2Prog\TXU\lwip-1.4.1\src\include\ -I             #
#                       D:\S2Prog\TXU\lwip-1.4.1\src\include\ipv4\ -I        #
#                       D:\S2Prog\TXU\lwip-1.4.1\src\ -I                     #
#                       D:\S2Prog\TXU\..\SHARED\Database\ -I                 #
#                       D:\S2Prog\TXU\src\ -I "C:\Program Files (x86)\IAR    #
#                       Systems\Embedded Workbench 4.0\arm\INC\"             #
#                       --inline_threshold=2                                 #
#    List file       =  D:\S2Prog\TXU\Debug\List\TDUTankCleaningDetailsWin.l #
#                       st                                                   #
#    Object file     =  D:\S2Prog\TXU\Debug\Obj\TDUTankCleaningDetailsWin.r7 #
#                       9                                                    #
#                                                                            #
#                                                                            #
##############################################################################

D:\S2Prog\TXU\src\TDUTankCleaningDetailsWin.cpp
      1          #include "TDUIncludes.h"

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void _Vector_impl<PRogramObjectBase *, allocator<PRogramObjectBase *>>::_Assign(_Vector_impl<PRogramObjectBase *, allocator<PRogramObjectBase *>> const &)
   \                     ??_Assign:
   \   00000000   F0402DE9           PUSH     {R4-R7,LR}
   \   00000004   04D04DE2           SUB      SP,SP,#+4
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   0150A0E1           MOV      R5,R1
   \   00000010   050054E1           CMP      R4,R5
   \   00000014   3500000A           BEQ      ??_Assign_1
   \   00000018   041095E5           LDR      R1,[R5, #+4]
   \   0000001C   000095E5           LDR      R0,[R5, #+0]
   \   00000020   0060A0E3           MOV      R6,#+0
   \   00000024   002041E0           SUB      R2,R1,R0
   \   00000028   2231B0E1           LSRS     R3,R2,#+2
   \   0000002C   002094E5           LDR      R2,[R4, #+0]
   \   00000030   0800001A           BNE      ??_Assign_2
   \   00000034   000052E3           CMP      R2,#+0
   \   00000038   0200000A           BEQ      ??_Assign_3
   \   0000003C   042084E5           STR      R2,[R4, #+4]
   \   00000040   0200A0E1           MOV      R0,R2
   \   00000044   ........           _BLF     `??operator delete`,`??operator delete??rA`
   \                     ??_Assign_3:
   \   00000048   006084E5           STR      R6,[R4, #+0]
   \   0000004C   046084E5           STR      R6,[R4, #+4]
   \   00000050   086084E5           STR      R6,[R4, #+8]
   \   00000054   250000EA           B        ??_Assign_1
   \                     ??_Assign_2:
   \   00000058   047094E5           LDR      R7,[R4, #+4]
   \   0000005C   027047E0           SUB      R7,R7,R2
   \   00000060   270153E1           CMP      R3,R7, LSR #+2
   \   00000064   0700008A           BHI      ??_Assign_4
   \   00000068   ........           _BLF     _Copy_a4,??_Copy_a4??rA
   \   0000006C   040095E5           LDR      R0,[R5, #+4]
   \   00000070   001095E5           LDR      R1,[R5, #+0]
   \   00000074   010040E0           SUB      R0,R0,R1
   \   00000078   001094E5           LDR      R1,[R4, #+0]
   \   0000007C   2001A0E1           LSR      R0,R0,#+2
   \   00000080   000181E0           ADD      R0,R1,R0, LSL #+2
   \   00000084   180000EA           B        ??_Assign_5
   \                     ??_Assign_4:
   \   00000088   087094E5           LDR      R7,[R4, #+8]
   \   0000008C   027047E0           SUB      R7,R7,R2
   \   00000090   270153E1           CMP      R3,R7, LSR #+2
   \   00000094   1300009A           BLS      ??_Assign_6
   \                     ??_Assign_7:
   \   00000098   000052E3           CMP      R2,#+0
   \   0000009C   0100000A           BEQ      ??_Assign_8
   \   000000A0   0200A0E1           MOV      R0,R2
   \   000000A4   ........           _BLF     `??operator delete`,`??operator delete??rA`
   \                     ??_Assign_8:
   \   000000A8   040095E5           LDR      R0,[R5, #+4]
   \   000000AC   001095E5           LDR      R1,[R5, #+0]
   \   000000B0   006084E5           STR      R6,[R4, #+0]
   \   000000B4   017050E0           SUBS     R7,R0,R1
   \   000000B8   046084E5           STR      R6,[R4, #+4]
   \   000000BC   086084E5           STR      R6,[R4, #+8]
   \   000000C0   0A00000A           BEQ      ??_Assign_1
   \   000000C4   0700A0E1           MOV      R0,R7
   \   000000C8   ........           _BLF     `??operator new`,`??operator new??rA`
   \   000000CC   000084E5           STR      R0,[R4, #+0]
   \   000000D0   0020A0E1           MOV      R2,R0
   \   000000D4   042084E5           STR      R2,[R4, #+4]
   \   000000D8   020087E0           ADD      R0,R7,R2
   \   000000DC   080084E5           STR      R0,[R4, #+8]
   \   000000E0   041095E5           LDR      R1,[R5, #+4]
   \   000000E4   000095E5           LDR      R0,[R5, #+0]
   \                     ??_Assign_6:
   \   000000E8   ........           _BLF     _Copy_a4,??_Copy_a4??rA
   \                     ??_Assign_5:
   \   000000EC   040084E5           STR      R0,[R4, #+4]
   \                     ??_Assign_1:
   \   000000F0   F140BDE8           POP      {R0,R4-R7,LR}
   \   000000F4   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs PRogramObjectBase ** _Vector_impl<PRogramObjectBase *, allocator<PRogramObjectBase *>>::_Make_room(PRogramObjectBase **, unsigned int)
   \                     ??_Make_room:
   \   00000000   F0472DE9           PUSH     {R4-R10,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   000094E5           LDR      R0,[R4, #+0]
   \   0000000C   0150A0E1           MOV      R5,R1
   \   00000010   081094E5           LDR      R1,[R4, #+8]
   \   00000014   0260A0E1           MOV      R6,R2
   \   00000018   001041E0           SUB      R1,R1,R0
   \   0000001C   2171A0E1           LSR      R7,R1,#+2
   \   00000020   041094E5           LDR      R1,[R4, #+4]
   \   00000024   000056E3           CMP      R6,#+0
   \   00000028   000041E0           SUB      R0,R1,R0
   \   0000002C   2001A0E1           LSR      R0,R0,#+2
   \   00000030   2C00000A           BEQ      ??_Make_room_1
   \   00000034   C024E0E3           MVN      R2,#-1073741824
   \   00000038   002042E0           SUB      R2,R2,R0
   \   0000003C   060052E1           CMP      R2,R6
   \   00000040   2800003A           BCC      ??_Make_room_1
   \   00000044   008086E0           ADD      R8,R6,R0
   \   00000048   080057E1           CMP      R7,R8
   \   0000004C   1F00002A           BCS      ??_Make_room_2
   \   00000050   A700A0E1           LSR      R0,R7,#+1
   \   00000054   C014E0E3           MVN      R1,#-1073741824
   \   00000058   001041E0           SUB      R1,R1,R0
   \   0000005C   070051E1           CMP      R1,R7
   \   00000060   0070A033           MOVCC    R7,#+0
   \   00000064   07708020           ADDCS    R7,R0,R7
   \   00000068   080057E1           CMP      R7,R8
   \   0000006C   0870A031           MOVCC    R7,R8
   \   00000070   0701A0E1           LSL      R0,R7,#+2
   \   00000074   ........           _BLF     `??operator new`,`??operator new??rA`
   \   00000078   0090A0E1           MOV      R9,R0
   \   0000007C   000094E5           LDR      R0,[R4, #+0]
   \   00000080   0920A0E1           MOV      R2,R9
   \   00000084   0510A0E1           MOV      R1,R5
   \   00000088   ........           _BLF     _Copy_a4,??_Copy_a4??rA
   \   0000008C   041094E5           LDR      R1,[R4, #+4]
   \   00000090   00A0A0E1           MOV      R10,R0
   \   00000094   06218AE0           ADD      R2,R10,R6, LSL #+2
   \   00000098   0500A0E1           MOV      R0,R5
   \   0000009C   ........           _BLF     _Copy_a4,??_Copy_a4??rA
   \   000000A0   000094E5           LDR      R0,[R4, #+0]
   \   000000A4   000050E3           CMP      R0,#+0
   \   000000A8   0100000A           BEQ      ??_Make_room_3
   \   000000AC   040084E5           STR      R0,[R4, #+4]
   \   000000B0   ........           _BLF     `??operator delete`,`??operator delete??rA`
   \                     ??_Make_room_3:
   \   000000B4   070189E0           ADD      R0,R9,R7, LSL #+2
   \   000000B8   080084E5           STR      R0,[R4, #+8]
   \   000000BC   080189E0           ADD      R0,R9,R8, LSL #+2
   \   000000C0   040084E5           STR      R0,[R4, #+4]
   \   000000C4   009084E5           STR      R9,[R4, #+0]
   \   000000C8   0A50A0E1           MOV      R5,R10
   \   000000CC   050000EA           B        ??_Make_room_1
   \                     ??_Make_room_2:
   \   000000D0   062181E0           ADD      R2,R1,R6, LSL #+2
   \   000000D4   0500A0E1           MOV      R0,R5
   \   000000D8   ........           _BLF     _Copy_backward_a4,??_Copy_backward_a4??rA
   \   000000DC   040094E5           LDR      R0,[R4, #+4]
   \   000000E0   060180E0           ADD      R0,R0,R6, LSL #+2
   \   000000E4   040084E5           STR      R0,[R4, #+4]
   \                     ??_Make_room_1:
   \   000000E8   0500A0E1           MOV      R0,R5
   \   000000EC   F047BDE8           POP      {R4-R10,LR}
   \   000000F0   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs AnsiString::~AnsiString()
   \                     `?~AnsiString`:
   \   00000000   00402DE9           PUSH     {LR}
   \   00000004   0020A0E3           MOV      R2,#+0
   \   00000008   0110A0E3           MOV      R1,#+1
   \   0000000C   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000010   0040BDE8           POP      {LR}
   \   00000014   1EFF2FE1           BX       LR               ;; return
      2          
      3          

   \                                 In segment DATA_C, align 4, align-sorted
   \   __vtbl_entry const __data TDUTankCleaningDetailsWin::__vtbl[6]
   \                     ??__vtbl:
   \   00000000   ............       DC32 ??SetButton, ??Paintnew, ??cbEventHandler, ??ButtonClicked
   \              ............
   \              ........    
   \   00000010   ............       DC32 ??AppSetup, ??PrintReport
   \              ....        
      4          const TDUValueTable TDUTankCleaningDetailsWin::TableValues[TDU_WIN_COL]={
   \                     ??TableValues:
   \   00000018   150500007800       DC32 1301, 120, 0, 9312, 50, 0, 9313, 90, 2, 0, 20, 1, 0, 20, 1
   \              000000000000
   \              602400003200
   \              000000000000
   \              612400005A00
   \              000002000000
   \              000000001400
   \              000001000000
   \              000000001400
   \              000001000000
      5          	{SVT_PRO_NAME, 120, GUI_TA_LEFT},
      6          	{SVT_TWM_SERIAL_ID, 50, GUI_TA_LEFT},
      7          	{SVT_TWM_ON_OFF_STATUS, 90, GUI_TA_CENTER},
      8          	{SVT_NOT_DEFINED, 20, GUI_TA_RIGHT},
      9          	{SVT_NOT_DEFINED, 20, GUI_TA_RIGHT}
     10          	/*{SVT_PRO_STATUS ,12,GUI_TA_CENTER},
     11          	{SVT_PRO_NAME   ,71,GUI_TA_LEFT},
     12          	{SVT_ULLAGE_UTI ,66,GUI_TA_RIGHT},
     13          	{SVT_VOLPERCENT ,66,GUI_TA_RIGHT},
     14          	{SVT_WEIGHT     ,66,GUI_TA_RIGHT},*/
     15          };
     16          
     17          

   \                                 In segment CODE, align 4, keep-with-next
     18          TDUTankCleaningDetailsWin::TDUTankCleaningDetailsWin(vector<PRogramObjectBase*> *pItemVec)
   \                     ??TDUTankCleaningDetailsWin:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
     19          	: TDUGroupWin(*pItemVec, TDU_TANK_CLEANING_DETAILS_WIN, (TDUValueTable*)&TableValues)
     20          {
   \   00000004   7C609FE5           LDR      R6,??TDUTankCleaningDetailsWin_1  ;; ??__vtbl
   \   00000008   0CD04DE2           SUB      SP,SP,#+12
   \   0000000C   0040A0E1           MOV      R4,R0
   \   00000010   0020A0E3           MOV      R2,#+0
   \   00000014   00208DE5           STR      R2,[SP, #+0]
   \   00000018   0050A0E3           MOV      R5,#+0
   \   0000001C   04508DE5           STR      R5,[SP, #+4]
   \   00000020   08508DE5           STR      R5,[SP, #+8]
   \   00000024   0D00A0E1           MOV      R0,SP
   \   00000028   ........           _BLF     ??_Assign,??_Assign??rA
   \   0000002C   183086E2           ADD      R3,R6,#+24
   \   00000030   A620A0E3           MOV      R2,#+166
   \   00000034   802E82E3           ORR      R2,R2,#0x800
   \   00000038   0D10A0E1           MOV      R1,SP
   \   0000003C   0400A0E1           MOV      R0,R4
   \   00000040   ........           _BLF     ??TDUGroupWin,??TDUGroupWin??rA
   \   00000044   00009DE5           LDR      R0,[SP, #+0]
   \   00000048   000050E3           CMP      R0,#+0
   \   0000004C   0200000A           BEQ      ??TDUTankCleaningDetailsWin_2
   \   00000050   0010A0E1           MOV      R1,R0
   \   00000054   04108DE5           STR      R1,[SP, #+4]
   \   00000058   ........           _BLF     `??operator delete`,`??operator delete??rA`
   \                     ??TDUTankCleaningDetailsWin_2:
   \   0000005C   0010A0E3           MOV      R1,#+0
   \   00000060   00108DE5           STR      R1,[SP, #+0]
   \   00000064   04508DE5           STR      R5,[SP, #+4]
   \   00000068   08508DE5           STR      R5,[SP, #+8]
   \   0000006C   446084E5           STR      R6,[R4, #+68]
     21              ResetWinRefreshTimer(UI_Refresh_Timer_First_Wait_Secs);
   \   00000070   0F10A0E3           MOV      R1,#+15
   \   00000074   0400A0E1           MOV      R0,R4
   \   00000078   ........           BL       ??ResetWinRefreshTimer
     22          }
   \   0000007C   0400A0E1           MOV      R0,R4
   \   00000080   7E40BDE8           POP      {R1-R6,LR}
   \   00000084   1EFF2FE1           BX       LR               ;; return
   \                     ??TDUTankCleaningDetailsWin_1:
   \   00000088   ........           DC32     ??__vtbl
     23          
     24          

   \                                 In segment CODE, align 4, keep-with-next
     25          TDUTankCleaningDetailsWin::~TDUTankCleaningDetailsWin(void)
     26          {
   \                     `?~TDUTankCleaningDetailsWin`:
   \   00000000   00402DE9           PUSH     {LR}
     27          }
   \   00000004   ........           _BLF     `?~TDUGroupWin`,`?~TDUGroupWin??rA`
   \   00000008   0040BDE8           POP      {LR}
   \   0000000C   1EFF2FE1           BX       LR               ;; return
     28          
     29          

   \                                 In segment CODE, align 4, keep-with-next
     30          void TDUTankCleaningDetailsWin::SetButton(void)
     31          {
   \                     ??SetButton:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   08D04DE2           SUB      SP,SP,#+8
     32          	bool Enable[NUMBER_OF_BUTTONS]={
     33          		false,
     34          		false,
     35          		false,
     36          		(bool)!PROPrinter::ObjectSet.empty(),
     37          		false
     38          	};
   \   00000008   0D00A0E1           MOV      R0,SP
   \   0000000C   0010A0E3           MOV      R1,#+0
     39          	ButWindow->EnableButtons(Enable);
   \   00000010   6C409FE5           LDR      R4,??SetButton_1  ;; ButWindow
   \   00000014   0020A0E3           MOV      R2,#+0
   \   00000018   060080E8           STM      R0,{R1,R2}
   \   0000001C   64009FE5           LDR      R0,??SetButton_1+0x4  ;; ??ObjectSet + 16
   \   00000020   000090E5           LDR      R0,[R0, #+0]
   \   00000024   000050E3           CMP      R0,#+0
   \   00000028   000094E5           LDR      R0,[R4, #+0]
   \   0000002C   0110A013           MOVNE    R1,#+1
   \   00000030   0310CDE5           STRB     R1,[SP, #+3]
   \   00000034   0D10A0E1           MOV      R1,SP
   \   00000038   ........           _BLF     ??EnableButtons,??EnableButtons??rA
     40          
     41          	if (!PROTank::TankVector.empty())
   \   0000003C   48009FE5           LDR      R0,??SetButton_1+0x8  ;; ??TankVector
   \   00000040   041090E5           LDR      R1,[R0, #+4]
   \   00000044   000090E5           LDR      R0,[R0, #+0]
   \   00000048   000041E0           SUB      R0,R1,R0
   \   0000004C   2001B0E1           LSRS     R0,R0,#+2
   \   00000050   0900000A           BEQ      ??SetButton_2
     42          	{
     43          		ButWindow->ChangeButtonText(L_WORD87,L_WORD88,L_WORD89,L_WORD237,L_WORD90);
   \   00000054   5A00A0E3           MOV      R0,#+90
   \   00000058   01002DE9           PUSH     {R0}
   \   0000005C   ED00A0E3           MOV      R0,#+237
   \   00000060   01002DE9           PUSH     {R0}
   \   00000064   000094E5           LDR      R0,[R4, #+0]
   \   00000068   5930A0E3           MOV      R3,#+89
   \   0000006C   5820A0E3           MOV      R2,#+88
   \   00000070   5710A0E3           MOV      R1,#+87
   \   00000074   ........           _BLF     ??ChangeButtonText,??ChangeButtonText??rA
   \   00000078   08D08DE2           ADD      SP,SP,#+8
     44          	} 
     45          }
   \                     ??SetButton_2:
   \   0000007C   1340BDE8           POP      {R0,R1,R4,LR}
   \   00000080   1EFF2FE1           BX       LR               ;; return
   \                     ??SetButton_1:
   \   00000084   ........           DC32     ButWindow
   \   00000088   ........           DC32     ??ObjectSet + 16
   \   0000008C   ........           DC32     ??TankVector
     46          
     47          
     48          

   \                                 In segment CODE, align 4, keep-with-next
     49          void TDUTankCleaningDetailsWin::ButtonClicked(int btnID)
     50          {
     51          }
   \                     ??ButtonClicked:
   \   00000000   1EFF2FE1           BX       LR               ;; return
     52          
     53          
     54          

   \                                 In segment CODE, align 4, keep-with-next
     55          void TDUTankCleaningDetailsWin::SetTankToDisplay(PROTank *pTank)
     56          {
   \                     ??SetTankToDisplay:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   0050A0E1           MOV      R5,R0
   \   00000008   0160A0E1           MOV      R6,R1
     57          	this->pTank = pTank;
   \   0000000C   846085E5           STR      R6,[R5, #+132]
     58          
     59          	// ObjectVector contains objects which will be displayed:
     60          	ObjectVector.clear();
   \   00000010   584085E2           ADD      R4,R5,#+88
   \   00000014   000094E5           LDR      R0,[R4, #+0]
   \   00000018   000050E3           CMP      R0,#+0
   \   0000001C   0200000A           BEQ      ??SetTankToDisplay_1
   \   00000020   040084E5           STR      R0,[R4, #+4]
   \   00000024   ........           _BLF     `??operator delete`,`??operator delete??rA`
   \   00000028   0000A0E3           MOV      R0,#+0
   \                     ??SetTankToDisplay_1:
   \   0000002C   000084E5           STR      R0,[R4, #+0]
   \   00000030   040084E5           STR      R0,[R4, #+4]
   \   00000034   080084E5           STR      R0,[R4, #+8]
     61          	ObjectVector.assign(pTank->TankWashingMachineVector.begin(), pTank->TankWashingMachineVector.end());
   \   00000038   204296E5           LDR      R4,[R6, #+544]
   \   0000003C   1C6296E5           LDR      R6,[R6, #+540]
   \   00000040   580085E2           ADD      R0,R5,#+88
   \   00000044   001090E5           LDR      R1,[R0, #+0]
   \   00000048   041080E5           STR      R1,[R0, #+4]
   \   0000004C   2411A0E1           LSR      R1,R4,#+2
   \   00000050   262141E0           SUB      R2,R1,R6, LSR #+2
   \   00000054   001090E5           LDR      R1,[R0, #+0]
   \   00000058   ........           _BLF     ??_Make_room,??_Make_room??rA
   \   0000005C   040056E1           CMP      R6,R4
   \   00000060   0600000A           BEQ      ??SetTankToDisplay_2
   \                     ??SetTankToDisplay_3:
   \   00000064   000050E3           CMP      R0,#+0
   \   00000068   00109615           LDRNE    R1,[R6, #+0]
   \   0000006C   046086E2           ADD      R6,R6,#+4
   \   00000070   00108015           STRNE    R1,[R0, #+0]
   \   00000074   040080E2           ADD      R0,R0,#+4
   \   00000078   040056E1           CMP      R6,R4
   \   0000007C   F8FFFF1A           BNE      ??SetTankToDisplay_3
     62          }
   \                     ??SetTankToDisplay_2:
   \   00000080   7040BDE8           POP      {R4-R6,LR}
   \   00000084   1EFF2FE1           BX       LR               ;; return
     63          
     64          

   \                                 In segment CODE, align 4, keep-with-next
     65          PROTank* TDUTankCleaningDetailsWin::GetTank(void)
     66          {
     67          	return pTank;
   \                     ??GetTank:
   \   00000000   840090E5           LDR      R0,[R0, #+132]
   \   00000004   1EFF2FE1           BX       LR               ;; return
     68          }
     69          
     70          
     71          

   \                                 In segment CODE, align 4, keep-with-next
     72          void TDUTankCleaningDetailsWin::cbEventHandler(WM_MESSAGE * pMsg)
     73          {
   \                     ??cbEventHandler:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
     74          	switch ( pMsg->MsgId ) {
   \   0000000C   000095E5           LDR      R0,[R5, #+0]
   \   00000010   1310A0E3           MOV      R1,#+19
   \   00000014   401F81E3           ORR      R1,R1,#0x100
   \   00000018   010050E1           CMP      R0,R1
   \   0000001C   0A00001A           BNE      ??cbEventHandler_2
     75          	case WM_TIMER:
     76          		if (pMsg->Data.v == hTimer)
   \   00000020   FC12D4E1           LDRSH    R1,[R4, #+44]
   \   00000024   080095E5           LDR      R0,[R5, #+8]
   \   00000028   010050E1           CMP      R0,R1
   \   0000002C   0600001A           BNE      ??cbEventHandler_2
     77          		{
     78                      TableUpdate();
   \   00000030   0400A0E1           MOV      R0,R4
   \   00000034   ........           BL       ??TableUpdate
     79          			WM_InvalidateWindow(WinHandl);					    // schedule redrawing of this window
   \   00000038   FA02D4E1           LDRSH    R0,[R4, #+42]
   \   0000003C   ........           _BLF     WM_InvalidateWindow,??WM_InvalidateWindow??rA
     80          			ResetWinRefreshTimer(UI_Refresh_Timer_Interval_Secs);
   \   00000040   0210A0E3           MOV      R1,#+2
   \   00000044   0400A0E1           MOV      R0,R4
   \   00000048   ........           BL       ??ResetWinRefreshTimer
     81          		}
     82          	default:
     83          		TDUGroupWin::cbEventHandler(pMsg);
   \                     ??cbEventHandler_2:
   \   0000004C   0510A0E1           MOV      R1,R5
   \   00000050   0400A0E1           MOV      R0,R4
   \   00000054   ........           _BLF     ??cbEventHandler_1,??cbEventHandler??rA
     84          		break;
     85          	}
     86          }
   \   00000058   3040BDE8           POP      {R4,R5,LR}
   \   0000005C   1EFF2FE1           BX       LR               ;; return
     87          
     88          
     89          /// Should be called at a point in time after TableSetup(void) has been called.
     90          /// Refreshes the contents of the table.
     91          ///

   \                                 In segment CODE, align 4, keep-with-next
     92          void TDUTankCleaningDetailsWin::TableUpdate(void)
     93          {
     94          	AnsiString rowStrings[TDU_WIN_COL];
   \                     ??TableUpdate:
   \   00000000   08319FE5           LDR      R3,??TableUpdate_1  ;; ??AnsiString
   \   00000004   F0412DE9           PUSH     {R4-R8,LR}
   \   00000008   BCD04DE2           SUB      SP,SP,#+188
   \   0000000C   0040A0E1           MOV      R4,R0
   \   00000010   1C20A0E3           MOV      R2,#+28
   \   00000014   0510A0E3           MOV      R1,#+5
   \   00000018   30008DE2           ADD      R0,SP,#+48
   \   0000001C   ........           _BLF     __data_vec_construct,??__data_vec_construct??rA
     95          	unsigned numTwms = ObjectVector.size();
   \   00000020   580084E2           ADD      R0,R4,#+88
   \   00000024   041090E5           LDR      R1,[R0, #+4]
   \   00000028   000090E5           LDR      R0,[R0, #+0]
   \   0000002C   000041E0           SUB      R0,R1,R0
   \   00000030   2051A0E1           LSR      R5,R0,#+2
     96          
     97          	unsigned numExistingRows = LISTVIEW_GetNumRows(ListViewHandl);
     98          	if (numExistingRows > 0)
   \   00000034   F407D4E1           LDRSH    R0,[R4, #+116]
   \   00000038   ........           _BLF     LISTVIEW_GetNumRows,??LISTVIEW_GetNumRows??rA
   \   0000003C   000050E3           CMP      R0,#+0
   \   00000040   0100000A           BEQ      ??TableUpdate_2
     99          	{
    100          		LISTVIEW_DeleteAllRows(ListViewHandl);
   \   00000044   F407D4E1           LDRSH    R0,[R4, #+116]
   \   00000048   ........           _BLF     LISTVIEW_DeleteAllRows,??LISTVIEW_DeleteAllRows??rA
    101          	}
    102          
    103          
    104          	for ( unsigned rowCount = 0; rowCount < numTwms; rowCount++ ) 
   \                     ??TableUpdate_2:
   \   0000004C   0060A0E3           MOV      R6,#+0
   \   00000050   000055E3           CMP      R5,#+0
   \   00000054   0F00001A           BNE      ??TableUpdate_3
    105          	{
    106          		if ( rowCount < numTwms) 
    107          		{
    108          			const char *tmpLstStr[TDU_WIN_COL];
    109          			for ( int j=0; j <TDU_WIN_COL; j++ ) {
    110          				rowStrings[j] = LibGetValue(ValueTable[j].ValueId, ObjectVector[rowCount]);
    111          				tmpLstStr[j] = rowStrings[j].c_str();
    112          			}
    113          			LISTVIEW_AddRow(ListViewHandl,tmpLstStr);
    114          		} else {
    115          			const char *tmpLstStr[] = {"", "", "", "", ""};
    116          			LISTVIEW_AddRow(ListViewHandl,tmpLstStr);
    117          		}
    118          	}
    119          }
   \                     ??TableUpdate_4:
   \   00000058   B4309FE5           LDR      R3,??TableUpdate_1+0x4  ;; `?~AnsiString`
   \   0000005C   1C20A0E3           MOV      R2,#+28
   \   00000060   0510A0E3           MOV      R1,#+5
   \   00000064   30008DE2           ADD      R0,SP,#+48
   \   00000068   ........           _BLF     __data_vec_destroy,??__data_vec_destroy??rA
   \   0000006C   BCD08DE2           ADD      SP,SP,#+188
   \   00000070   F041BDE8           POP      {R4-R8,LR}
   \   00000074   1EFF2FE1           BX       LR               ;; return
   \                     ??TableUpdate_5:
   \   00000078   1C108DE2           ADD      R1,SP,#+28
   \   0000007C   070181E7           STR      R0,[R1, +R7, LSL #+2]
   \   00000080   017087E2           ADD      R7,R7,#+1
   \   00000084   050057E3           CMP      R7,#+5
   \   00000088   050000BA           BLT      ??TableUpdate_6
   \   0000008C   F407D4E1           LDRSH    R0,[R4, #+116]
   \   00000090   016086E2           ADD      R6,R6,#+1
   \   00000094   ........           _BLF     LISTVIEW_AddRow,??LISTVIEW_AddRow??rA
   \                     ??TableUpdate_3:
   \   00000098   050056E1           CMP      R6,R5
   \   0000009C   EDFFFF2A           BCS      ??TableUpdate_4
   \   000000A0   0070A0E3           MOV      R7,#+0
   \                     ??TableUpdate_6:
   \   000000A4   580094E5           LDR      R0,[R4, #+88]
   \   000000A8   7C1094E5           LDR      R1,[R4, #+124]
   \   000000AC   062190E7           LDR      R2,[R0, +R6, LSL #+2]
   \   000000B0   0C00A0E3           MOV      R0,#+12
   \   000000B4   901721E0           MLA      R1,R0,R7,R1
   \   000000B8   001091E5           LDR      R1,[R1, #+0]
   \   000000BC   0030A0E3           MOV      R3,#+0
   \   000000C0   0D00A0E1           MOV      R0,SP
   \   000000C4   ........           _BLF     ??LibGetValue,??LibGetValue??rA
   \   000000C8   1C00A0E3           MOV      R0,#+28
   \   000000CC   30108DE2           ADD      R1,SP,#+48
   \   000000D0   901728E0           MLA      R8,R0,R7,R1
   \   000000D4   3C009FE5           LDR      R0,??TableUpdate_1+0x8  ;; ??npos
   \   000000D8   0020A0E3           MOV      R2,#+0
   \   000000DC   003090E5           LDR      R3,[R0, #+0]
   \   000000E0   0D10A0E1           MOV      R1,SP
   \   000000E4   0800A0E1           MOV      R0,R8
   \   000000E8   ........           _BLF     ??assign,??assign??rA
   \   000000EC   0020A0E3           MOV      R2,#+0
   \   000000F0   0110A0E3           MOV      R1,#+1
   \   000000F4   0D00A0E1           MOV      R0,SP
   \   000000F8   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000000FC   180098E5           LDR      R0,[R8, #+24]
   \   00000100   100050E3           CMP      R0,#+16
   \   00000104   04009825           LDRCS    R0,[R8, #+4]
   \   00000108   04008832           ADDCC    R0,R8,#+4
   \   0000010C   D9FFFFEA           B        ??TableUpdate_5
   \                     ??TableUpdate_1:
   \   00000110   ........           DC32     ??AnsiString
   \   00000114   ........           DC32     `?~AnsiString`
   \   00000118   ........           DC32     ??npos
    120          
    121          
    122          

   \                                 In segment CODE, align 4, keep-with-next
    123          void TDUTankCleaningDetailsWin::ResetWinRefreshTimer(int seconds)
    124          {
   \                     ??ResetWinRefreshTimer:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0040A0E1           MOV      R4,R0
    125          	int updateTimeMillis = seconds * 1000;
   \   00000008   FA0FA0E3           MOV      R0,#+1000
   \   0000000C   900102E0           MUL      R2,R0,R1
    126          
    127          	if (hTimer == 0)
   \   00000010   FC02D4E1           LDRSH    R0,[R4, #+44]
   \   00000014   000050E3           CMP      R0,#+0
   \   00000018   0500001A           BNE      ??ResetWinRefreshTimer_1
    128          	{
    129          		hTimer = WM_CreateTimer(WinHandl, UI_Refresh_Timer_UserId, updateTimeMillis, 0);
   \   0000001C   FA02D4E1           LDRSH    R0,[R4, #+42]
   \   00000020   0030A0E3           MOV      R3,#+0
   \   00000024   0110A0E3           MOV      R1,#+1
   \   00000028   ........           _BLF     WM_CreateTimer,??WM_CreateTimer??rA
   \   0000002C   BC02C4E1           STRH     R0,[R4, #+44]
   \   00000030   010000EA           B        ??ResetWinRefreshTimer_2
    130          	}
    131          	else
    132          	{
    133          		WM_RestartTimer(hTimer, updateTimeMillis);
   \                     ??ResetWinRefreshTimer_1:
   \   00000034   0210A0E1           MOV      R1,R2
   \   00000038   ........           _BLF     WM_RestartTimer,??WM_RestartTimer??rA
    134          	}
    135          }
   \                     ??ResetWinRefreshTimer_2:
   \   0000003C   1040BDE8           POP      {R4,LR}
   \   00000040   1EFF2FE1           BX       LR               ;; return

   \                                 In segment DIFUNCT, align 4, keep-with-next, root
   \   00000000                      REQUIRE ?call_ctors
   \   00000000   ........           DC32    ??__sti__routine

   \                                 In segment DATA_C, align 4, align-sorted
   \   00000000   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0
   \              0000        

   \                                 In segment DATA_C, align 1, align-sorted
   \                     `?<Constant "">`:
   \   00000000   00                 DC8 ""

   \                                 In segment DATA_C, align 4, align-sorted
   \   00000000   ............       DC32 `?<Constant "">`, `?<Constant "">`, `?<Constant "">`
   \              ............
   \   0000000C   ............       DC32 `?<Constant "">`, `?<Constant "">`
   \              ....        

   \                                 In segment CODE, align 4, keep-with-next
   \   static __??Code32?? __intrinsic __code __interwork __atpcs void __sti__routine()
   \                     ??__sti__routine:
   \   00000000   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs TDUTankCleaningDetailsWin &TDUTankCleaningDetailsWin::new TDUTankCleaningDetailsWin(vector<PRogramObjectBase *> *)
   \                     `??new TDUTankCleaningDetailsWin`:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   9000A0E3           MOV      R0,#+144
   \   0000000C   ........           _BLF     `??operator new`,`??operator new??rA`
   \   00000010   000050E3           CMP      R0,#+0
   \   00000014   0100000A           BEQ      `??new TDUTankCleaningDetailsWin_1`
   \   00000018   0410A0E1           MOV      R1,R4
   \   0000001C   ........           BL       ??TDUTankCleaningDetailsWin
   \                     `??new TDUTankCleaningDetailsWin_1`:
   \   00000020   1040BDE8           POP      {R4,LR}
   \   00000024   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void TDUTankCleaningDetailsWin::delete ~TDUTankCleaningDetailsWin(TDUTankCleaningDetailsWin *)
   \                     `??delete ~TDUTankCleaningDetailsWin`:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0040B0E1           MOVS     R4,R0
   \   00000008   0200000A           BEQ      `??delete ~TDUTankCleaningDetailsWin_1`
   \   0000000C   ........           _BLF     `?~TDUGroupWin`,`?~TDUGroupWin??rA`
   \   00000010   0400A0E1           MOV      R0,R4
   \   00000014   ........           _BLF     `??operator delete`,`??operator delete??rA`
   \                     `??delete ~TDUTankCleaningDetailsWin_1`:
   \   00000018   1040BDE8           POP      {R4,LR}
   \   0000001C   1EFF2FE1           BX       LR               ;; return

   Maximum stack usage in bytes:

     Function                       CSTACK
     --------                       ------
     AnsiString::~AnsiString()          4
     TDUTankCleaningDetailsWin::ButtonClicked(int)
                                        0
     TDUTankCleaningDetailsWin::GetTank()
                                        0
     TDUTankCleaningDetailsWin::ResetWinRefreshTimer(int)
                                        8
     TDUTankCleaningDetailsWin::SetButton()
                                       24
     TDUTankCleaningDetailsWin::SetTankToDisplay(PROTank *)
                                       16
     TDUTankCleaningDetailsWin::TDUTankCleaningDetailsWin(vector<PRogramObjectBase *> *)
                                       28
     TDUTankCleaningDetailsWin::TableUpdate()
                                      212
     TDUTankCleaningDetailsWin::cbEventHandler(WM_MESSAGE *)
                                       12
     TDUTankCleaningDetailsWin::delete ~TDUTankCleaningDetailsWin(TDUTankCleaningDetailsWin *)
                                        8
     TDUTankCleaningDetailsWin::new TDUTankCleaningDetailsWin(vector<PRogramObjectBase *> *)
                                        8
     TDUTankCleaningDetailsWin::~TDUTankCleaningDetailsWin()
                                        4
     _Vector_impl<PRogramObjectBase *, allocator<PRogramObjectBase *>>::_Assign(_Vector_impl<PRogramObjectBase *, allocator<PRogramObjectBase *>> const &)
                                       24
     _Vector_impl<PRogramObjectBase *, allocator<PRogramObjectBase *>>::_Make_room(PRogramObjectBase **, unsigned int)
                                       32
     __sti__routine()                   0


   Segment part sizes:

     Function/Label                 Bytes
     --------------                 -----
     _Vector_impl<PRogramObjectBase *, allocator<PRogramObjectBase *>>::_Assign(_Vector_impl<PRogramObjectBase *, allocator<PRogramObjectBase *>> const &)
                                     248
     _Vector_impl<PRogramObjectBase *, allocator<PRogramObjectBase *>>::_Make_room(PRogramObjectBase **, unsigned int)
                                     244
     AnsiString::~AnsiString()        24
     TDUTankCleaningDetailsWin::__vtbl
                                      84
     TDUTankCleaningDetailsWin::TDUTankCleaningDetailsWin(vector<PRogramObjectBase *> *)
                                     140
     TDUTankCleaningDetailsWin::~TDUTankCleaningDetailsWin()
                                      16
     TDUTankCleaningDetailsWin::SetButton()
                                     144
     TDUTankCleaningDetailsWin::ButtonClicked(int)
                                       4
     TDUTankCleaningDetailsWin::SetTankToDisplay(PROTank *)
                                     136
     TDUTankCleaningDetailsWin::GetTank()
                                       8
     TDUTankCleaningDetailsWin::cbEventHandler(WM_MESSAGE *)
                                      96
     TDUTankCleaningDetailsWin::TableUpdate()
                                     284
     TDUTankCleaningDetailsWin::ResetWinRefreshTimer(int)
                                      68
     ?<Constant {false, false, false, false, false}
                                       8
     ?<Constant "">                    1
     ?<Constant {&"", &"", &"", &"", &""}>
                                      20
     __sti__routine()                  4
     TDUTankCleaningDetailsWin::new TDUTankCleaningDetailsWin(vector<PRogramObjectBase *> *)
                                      40
     TDUTankCleaningDetailsWin::delete ~TDUTankCleaningDetailsWin(TDUTankCleaningDetailsWin *)
                                      32
      Others                         316

 
 1 800 bytes in segment CODE
   113 bytes in segment DATA_C
     4 bytes in segment DIFUNCT
 
 976 bytes of CODE  memory (+ 828 bytes shared)
 113 bytes of CONST memory

Errors: none
Warnings: none
