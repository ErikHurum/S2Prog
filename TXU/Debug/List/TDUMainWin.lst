##############################################################################
#                                                                            #
# IAR ARM ANSI C/C++ Compiler V4.42A/W32               14/Sep/2022  15:18:28 #
# Copyright 1999-2005 IAR Systems. All rights reserved.                      #
#                                                                            #
#    Cpu mode        =  interwork                                            #
#    Endian          =  little                                               #
#    Stack alignment =  4                                                    #
#    Source file     =  D:\S2Prog\TXU\src\TDUMainWin.cpp                     #
#    Command line    =  D:\S2Prog\TXU\src\TDUMainWin.cpp --fpu None -D       #
#                       OS_LIBMODE_SP -D CPU_S3C2410 -D OS_RAMVECT=0 -D      #
#                       OS_UART=-1 -D S2TXU -D USE_LZO=1 -D __ARM_LIBRARY__  #
#                       -D WATCHDOG=1 -D NETWORK=1 -lCN                      #
#                       D:\S2Prog\TXU\Debug\List\ -o                         #
#                       D:\S2Prog\TXU\Debug\Obj\ -s9 --debug --cpu_mode arm  #
#                       --endian little --cpu ARM920T --stack_align 4        #
#                       --interwork -e --enable_multibytes --eec++           #
#                       --dlib_config "C:\Program Files (x86)\IAR            #
#                       Systems\Embedded Workbench                           #
#                       4.0\arm\LIB\dl4tpainl8n.h" -I                        #
#                       D:\S2Prog\TXU\GUI\CORE\ -I D:\S2Prog\TXU\GUI\WM\ -I  #
#                       D:\S2Prog\TXU\GUI\WIDGET\ -I D:\S2Prog\TXU\CONFIG\   #
#                       -I D:\S2Prog\TXU\INC\ -I D:\S2Prog\TXU\..\SHARED\INC #
#                       \ -I D:\S2Prog\TXU\..\SHARED\SRC\ -I                 #
#                       D:\S2Prog\TXU\..\SHARED\LZO\minilzo.210\ -I          #
#                       D:\S2Prog\TXU\lwip-1.4.1\src\include\ -I             #
#                       D:\S2Prog\TXU\lwip-1.4.1\src\include\ipv4\ -I        #
#                       D:\S2Prog\TXU\lwip-1.4.1\src\ -I                     #
#                       D:\S2Prog\TXU\..\SHARED\Database\ -I                 #
#                       D:\S2Prog\TXU\src\ -I "C:\Program Files (x86)\IAR    #
#                       Systems\Embedded Workbench 4.0\arm\INC\"             #
#                       --inline_threshold=2                                 #
#    List file       =  D:\S2Prog\TXU\Debug\List\TDUMainWin.lst              #
#    Object file     =  D:\S2Prog\TXU\Debug\Obj\TDUMainWin.r79               #
#                                                                            #
#                                                                            #
##############################################################################

D:\S2Prog\TXU\src\TDUMainWin.cpp
      1          #include "TDUIncludes.h"

   \                                 In segment DATA_Z, align 4, align-sorted
   \   static GUI_FONT const __data TDU_FONT_HW
   \                     TDU_FONT_HW:
   \   00000000                      DS8 36
      2          

   \                                 In segment CODE, align 4, keep-with-next
      3          TDUMainWin::~TDUMainWin(void)
      4          {
   \                     `?~TDUMainWin`:
   \   00000000   00402DE9           PUSH     {LR}
      5          }
   \   00000004   ........           _BLF     `?~TDUBasicWin`,`?~TDUBasicWin??rA`
   \   00000008   0040BDE8           POP      {LR}
   \   0000000C   1EFF2FE1           BX       LR               ;; return
      6          

   \                                 In segment CODE, align 4, keep-with-next
      7          TDUMainWin::TDUMainWin(void)
   \                     ??TDUMainWin:
   \   00000000   F0402DE9           PUSH     {R4-R7,LR}
      8          {
      9          	BHsize = 34;
     10          	BWsize = 34;
     11          	Height = 18;
     12          	int i=0;
     13          	WinHandl  = WM_CreateWindow(0,0,LCDXSize,LCDYSize,WM_CF_SHOW,NULL,0);
   \   00000004   30539FE5           LDR      R5,??TDUMainWin_1  ;; LCDXSize
     14          
     15          	HeadingText  = TEXT_CreateAsChild(  2, 1, 150, Height, WinHandl, 1, WM_CF_SHOW, "Surveyor2", TEXT_CF_LEFT);
   \   00000008   30639FE5           LDR      R6,??TDUMainWin_1+0x4  ;; `?<Constant "Surveyor2">`
   \   0000000C   0040A0E1           MOV      R4,R0
   \   00000010   ........           _BLF     ??TDUBasicWin,??TDUBasicWin??rA
   \   00000014   2200A0E3           MOV      R0,#+34
   \   00000018   340084E5           STR      R0,[R4, #+52]
   \   0000001C   380084E5           STR      R0,[R4, #+56]
   \   00000020   1200A0E3           MOV      R0,#+18
   \   00000024   3C0084E5           STR      R0,[R4, #+60]
   \   00000028   0000A0E3           MOV      R0,#+0
   \   0000002C   01002DE9           PUSH     {R0}
   \   00000030   01002DE9           PUSH     {R0}
   \   00000034   0200A0E3           MOV      R0,#+2
   \   00000038   01002DE9           PUSH     {R0}
   \   0000003C   00039FE5           LDR      R0,??TDUMainWin_1+0x8  ;; LCDYSize
   \   00000040   002095E5           LDR      R2,[R5, #+0]
   \   00000044   003090E5           LDR      R3,[R0, #+0]
   \   00000048   0010A0E3           MOV      R1,#+0
   \   0000004C   0000A0E3           MOV      R0,#+0
   \   00000050   ........           _BLF     WM_CreateWindow,??WM_CreateWindow??rA
   \   00000054   BA02C4E1           STRH     R0,[R4, #+42]
   \   00000058   0000A0E3           MOV      R0,#+0
   \   0000005C   01002DE9           PUSH     {R0}
   \   00000060   0600A0E1           MOV      R0,R6
   \   00000064   01002DE9           PUSH     {R0}
   \   00000068   0200A0E3           MOV      R0,#+2
   \   0000006C   01002DE9           PUSH     {R0}
   \   00000070   0100A0E3           MOV      R0,#+1
   \   00000074   01002DE9           PUSH     {R0}
   \   00000078   FA02D4E1           LDRSH    R0,[R4, #+42]
   \   0000007C   9620A0E3           MOV      R2,#+150
   \   00000080   0110A0E3           MOV      R1,#+1
   \   00000084   01002DE9           PUSH     {R0}
   \   00000088   3C3094E5           LDR      R3,[R4, #+60]
   \   0000008C   0200A0E3           MOV      R0,#+2
   \   00000090   ........           _BLF     TEXT_CreateAsChild,??TEXT_CreateAsChild??rA
   \   00000094   B004C4E1           STRH     R0,[R4, #+64]
     16          	ButtonAlarm = BUTTON_CreateAsChild(LCDXSize-BWsize-140,0,140,Height,WinHandl,TDU_BUTTON_ID_MW0,WM_CF_SHOW);
   \   00000098   0200A0E3           MOV      R0,#+2
   \   0000009C   01002DE9           PUSH     {R0}
   \   000000A0   C900A0E3           MOV      R0,#+201
   \   000000A4   800E80E3           ORR      R0,R0,#0x800
   \   000000A8   01002DE9           PUSH     {R0}
   \   000000AC   FA02D4E1           LDRSH    R0,[R4, #+42]
   \   000000B0   8C20A0E3           MOV      R2,#+140
   \   000000B4   0010A0E3           MOV      R1,#+0
   \   000000B8   01002DE9           PUSH     {R0}
   \   000000BC   3C3094E5           LDR      R3,[R4, #+60]
   \   000000C0   000095E5           LDR      R0,[R5, #+0]
   \   000000C4   387094E5           LDR      R7,[R4, #+56]
   \   000000C8   070040E0           SUB      R0,R0,R7
   \   000000CC   007062E2           RSB      R7,R2,#+0
   \   000000D0   000087E0           ADD      R0,R7,R0
   \   000000D4   ........           _BLF     BUTTON_CreateAsChild,??BUTTON_CreateAsChild??rA
   \   000000D8   2CD08DE2           ADD      SP,SP,#+44
   \   000000DC   B005C4E1           STRH     R0,[R4, #+80]
     17          	MainWinButton[0]  = BUTTON_CreateAsChild(LCDXSize-BWsize,(i++)*BHsize,BWsize,BHsize,WinHandl,TDU_BUTTON_ID_MW1,WM_CF_SHOW);
   \   000000E0   380094E5           LDR      R0,[R4, #+56]
   \   000000E4   0210A0E3           MOV      R1,#+2
   \   000000E8   02002DE9           PUSH     {R1}
   \   000000EC   CA10A0E3           MOV      R1,#+202
   \   000000F0   801E81E3           ORR      R1,R1,#0x800
   \   000000F4   02002DE9           PUSH     {R1}
   \   000000F8   FA12D4E1           LDRSH    R1,[R4, #+42]
   \   000000FC   0020A0E1           MOV      R2,R0
   \   00000100   02002DE9           PUSH     {R1}
   \   00000104   343094E5           LDR      R3,[R4, #+52]
   \   00000108   007095E5           LDR      R7,[R5, #+0]
   \   0000010C   0010A0E3           MOV      R1,#+0
   \   00000110   000047E0           SUB      R0,R7,R0
   \   00000114   ........           _BLF     BUTTON_CreateAsChild,??BUTTON_CreateAsChild??rA
   \   00000118   B204C4E1           STRH     R0,[R4, #+66]
     18          	MainWinButton[1]  = BUTTON_CreateAsChild(LCDXSize-BWsize,(i++)*BHsize,BWsize,BHsize,WinHandl,TDU_BUTTON_ID_MW2,WM_CF_SHOW);
   \   0000011C   380094E5           LDR      R0,[R4, #+56]
   \   00000120   341094E5           LDR      R1,[R4, #+52]
   \   00000124   0220A0E3           MOV      R2,#+2
   \   00000128   04002DE9           PUSH     {R2}
   \   0000012C   CB20A0E3           MOV      R2,#+203
   \   00000130   802E82E3           ORR      R2,R2,#0x800
   \   00000134   04002DE9           PUSH     {R2}
   \   00000138   FA22D4E1           LDRSH    R2,[R4, #+42]
   \   0000013C   0130A0E1           MOV      R3,R1
   \   00000140   04002DE9           PUSH     {R2}
   \   00000144   007095E5           LDR      R7,[R5, #+0]
   \   00000148   0020A0E1           MOV      R2,R0
   \   0000014C   000047E0           SUB      R0,R7,R0
   \   00000150   ........           _BLF     BUTTON_CreateAsChild,??BUTTON_CreateAsChild??rA
   \   00000154   B404C4E1           STRH     R0,[R4, #+68]
     19          	MainWinButton[2]  = BUTTON_CreateAsChild(LCDXSize-BWsize,(i++)*BHsize,BWsize,BHsize,WinHandl,TDU_BUTTON_ID_MW3,WM_CF_SHOW);
   \   00000158   380094E5           LDR      R0,[R4, #+56]
   \   0000015C   341094E5           LDR      R1,[R4, #+52]
   \   00000160   0220A0E3           MOV      R2,#+2
   \   00000164   04002DE9           PUSH     {R2}
   \   00000168   CC20A0E3           MOV      R2,#+204
   \   0000016C   802E82E3           ORR      R2,R2,#0x800
   \   00000170   04002DE9           PUSH     {R2}
   \   00000174   FA22D4E1           LDRSH    R2,[R4, #+42]
   \   00000178   0130A0E1           MOV      R3,R1
   \   0000017C   8110A0E1           LSL      R1,R1,#+1
   \   00000180   04002DE9           PUSH     {R2}
   \   00000184   007095E5           LDR      R7,[R5, #+0]
   \   00000188   0020A0E1           MOV      R2,R0
   \   0000018C   000047E0           SUB      R0,R7,R0
   \   00000190   ........           _BLF     BUTTON_CreateAsChild,??BUTTON_CreateAsChild??rA
   \   00000194   24D08DE2           ADD      SP,SP,#+36
   \   00000198   B604C4E1           STRH     R0,[R4, #+70]
     20          	MainWinButton[3]  = BUTTON_CreateAsChild(LCDXSize-BWsize,(i++)*BHsize,BWsize,BHsize,WinHandl,TDU_BUTTON_ID_MW4,WM_CF_SHOW);
   \   0000019C   380094E5           LDR      R0,[R4, #+56]
   \   000001A0   341094E5           LDR      R1,[R4, #+52]
   \   000001A4   0220A0E3           MOV      R2,#+2
   \   000001A8   04002DE9           PUSH     {R2}
   \   000001AC   CD20A0E3           MOV      R2,#+205
   \   000001B0   802E82E3           ORR      R2,R2,#0x800
   \   000001B4   04002DE9           PUSH     {R2}
   \   000001B8   FA22D4E1           LDRSH    R2,[R4, #+42]
   \   000001BC   0130A0E1           MOV      R3,R1
   \   000001C0   811081E0           ADD      R1,R1,R1, LSL #+1
   \   000001C4   04002DE9           PUSH     {R2}
   \   000001C8   007095E5           LDR      R7,[R5, #+0]
   \   000001CC   0020A0E1           MOV      R2,R0
   \   000001D0   000047E0           SUB      R0,R7,R0
   \   000001D4   ........           _BLF     BUTTON_CreateAsChild,??BUTTON_CreateAsChild??rA
   \   000001D8   B804C4E1           STRH     R0,[R4, #+72]
     21          	MainWinButton[4]  = BUTTON_CreateAsChild(LCDXSize-BWsize,(i++)*BHsize,BWsize,BHsize,WinHandl,TDU_BUTTON_ID_MW5,WM_CF_SHOW);
   \   000001DC   380094E5           LDR      R0,[R4, #+56]
   \   000001E0   341094E5           LDR      R1,[R4, #+52]
   \   000001E4   0220A0E3           MOV      R2,#+2
   \   000001E8   04002DE9           PUSH     {R2}
   \   000001EC   CE20A0E3           MOV      R2,#+206
   \   000001F0   802E82E3           ORR      R2,R2,#0x800
   \   000001F4   04002DE9           PUSH     {R2}
   \   000001F8   FA22D4E1           LDRSH    R2,[R4, #+42]
   \   000001FC   04002DE9           PUSH     {R2}
   \   00000200   007095E5           LDR      R7,[R5, #+0]
   \   00000204   0130A0E1           MOV      R3,R1
   \   00000208   0020A0E1           MOV      R2,R0
   \   0000020C   0111A0E1           LSL      R1,R1,#+2
   \   00000210   000047E0           SUB      R0,R7,R0
   \   00000214   ........           _BLF     BUTTON_CreateAsChild,??BUTTON_CreateAsChild??rA
   \   00000218   BA04C4E1           STRH     R0,[R4, #+74]
     22          	MainWinButton[5]  = BUTTON_CreateAsChild(LCDXSize-BWsize,(i++)*BHsize,BWsize,BHsize,WinHandl,TDU_BUTTON_ID_MW6,WM_CF_SHOW);
   \   0000021C   380094E5           LDR      R0,[R4, #+56]
   \   00000220   341094E5           LDR      R1,[R4, #+52]
   \   00000224   0220A0E3           MOV      R2,#+2
   \   00000228   04002DE9           PUSH     {R2}
   \   0000022C   CF20A0E3           MOV      R2,#+207
   \   00000230   802E82E3           ORR      R2,R2,#0x800
   \   00000234   04002DE9           PUSH     {R2}
   \   00000238   FA22D4E1           LDRSH    R2,[R4, #+42]
   \   0000023C   0130A0E1           MOV      R3,R1
   \   00000240   011181E0           ADD      R1,R1,R1, LSL #+2
   \   00000244   04002DE9           PUSH     {R2}
   \   00000248   007095E5           LDR      R7,[R5, #+0]
   \   0000024C   0020A0E1           MOV      R2,R0
   \   00000250   000047E0           SUB      R0,R7,R0
   \   00000254   ........           _BLF     BUTTON_CreateAsChild,??BUTTON_CreateAsChild??rA
   \   00000258   24D08DE2           ADD      SP,SP,#+36
   \   0000025C   BC04C4E1           STRH     R0,[R4, #+76]
     23          	ButtonSystem  = BUTTON_CreateAsChild(LCDXSize-BWsize,(i++)*BHsize,BWsize,BHsize+2,WinHandl,TDU_BUTTON_ID_MW7,WM_CF_SHOW);
   \   00000260   380094E5           LDR      R0,[R4, #+56]
   \   00000264   341094E5           LDR      R1,[R4, #+52]
   \   00000268   0220A0E3           MOV      R2,#+2
   \   0000026C   04002DE9           PUSH     {R2}
   \   00000270   8D2EA0E3           MOV      R2,#+2256
   \   00000274   04002DE9           PUSH     {R2}
   \   00000278   FA22D4E1           LDRSH    R2,[R4, #+42]
   \   0000027C   023081E2           ADD      R3,R1,#+2
   \   00000280   0670A0E3           MOV      R7,#+6
   \   00000284   04002DE9           PUSH     {R2}
   \   00000288   005095E5           LDR      R5,[R5, #+0]
   \   0000028C   0020A0E1           MOV      R2,R0
   \   00000290   970101E0           MUL      R1,R7,R1
     24          
     25          	SetBitmap();
     26          	TEXT_SetTextColor(HeadingText,TDU_C_HW_TEXT); TEXT_SetFont(HeadingText,&TDU_FONT_HW);
   \   00000294   ........           LDR      R7,??DataTable1  ;; TDU_FONT_HW
   \   00000298   000045E0           SUB      R0,R5,R0
   \   0000029C   ........           _BLF     BUTTON_CreateAsChild,??BUTTON_CreateAsChild??rA
   \   000002A0   BE04C4E1           STRH     R0,[R4, #+78]
   \   000002A4   0400A0E1           MOV      R0,R4
   \   000002A8   ........           BL       ??SetBitmap
   \   000002AC   F004D4E1           LDRSH    R0,[R4, #+64]
   \   000002B0   FF54E0E3           MVN      R5,#-16777216
   \   000002B4   0510A0E1           MOV      R1,R5
   \   000002B8   ........           _BLF     TEXT_SetTextColor,??TEXT_SetTextColor??rA
   \   000002BC   F004D4E1           LDRSH    R0,[R4, #+64]
   \   000002C0   0710A0E1           MOV      R1,R7
   \   000002C4   ........           _BLF     TEXT_SetFont,??TEXT_SetFont??rA
     27          	BUTTON_SetBitmapEx(ButtonSystem,  0,&bmButtonSystem,1,1);
   \   000002C8   78209FE5           LDR      R2,??TDUMainWin_1+0xC  ;; bmButtonSystem
   \   000002CC   0100A0E3           MOV      R0,#+1
   \   000002D0   01002DE9           PUSH     {R0}
   \   000002D4   0030A0E1           MOV      R3,R0
   \   000002D8   FE04D4E1           LDRSH    R0,[R4, #+78]
   \   000002DC   0010A0E3           MOV      R1,#+0
   \   000002E0   ........           _BLF     BUTTON_SetBitmapEx,??BUTTON_SetBitmapEx??rA
     28          	BUTTON_SetFont(ButtonAlarm, &TDU_FONT_HW);
   \   000002E4   F005D4E1           LDRSH    R0,[R4, #+80]
   \   000002E8   0710A0E1           MOV      R1,R7
   \   000002EC   ........           _BLF     BUTTON_SetFont,??BUTTON_SetFont??rA
     29          	BUTTON_SetBkColor(ButtonAlarm, 0, TDU_C_AL_BACK_NOAL);
   \   000002F0   F005D4E1           LDRSH    R0,[R4, #+80]
   \   000002F4   AA2CA0E3           MOV      R2,#+43520
   \   000002F8   0010A0E3           MOV      R1,#+0
   \   000002FC   ........           _BLF     BUTTON_SetBkColor,??BUTTON_SetBkColor??rA
     30          	BUTTON_SetText(ButtonAlarm, "No Alarm");
   \   00000300   F005D4E1           LDRSH    R0,[R4, #+80]
   \   00000304   0C1086E2           ADD      R1,R6,#+12
   \   00000308   ........           _BLF     BUTTON_SetText,??BUTTON_SetText??rA
     31          	BUTTON_SetTextColor(ButtonAlarm, 0, TDU_C_AL_TEXT_NOAL);
   \   0000030C   F005D4E1           LDRSH    R0,[R4, #+80]
   \   00000310   0520A0E1           MOV      R2,R5
   \   00000314   0010A0E3           MOV      R1,#+0
   \   00000318   ........           _BLF     BUTTON_SetTextColor,??BUTTON_SetTextColor??rA
     32          	BUTTON_SetTextColor(ButtonAlarm, 1, TDU_C_AL_TEXT_NOAL);
   \   0000031C   F005D4E1           LDRSH    R0,[R4, #+80]
   \   00000320   0520A0E1           MOV      R2,R5
   \   00000324   0110A0E3           MOV      R1,#+1
   \   00000328   ........           _BLF     BUTTON_SetTextColor,??BUTTON_SetTextColor??rA
     33          }
   \   0000032C   0400A0E1           MOV      R0,R4
   \   00000330   10D08DE2           ADD      SP,SP,#+16
   \   00000334   F040BDE8           POP      {R4-R7,LR}
   \   00000338   1EFF2FE1           BX       LR               ;; return
   \                     ??TDUMainWin_1:
   \   0000033C   ........           DC32     LCDXSize
   \   00000340   ........           DC32     `?<Constant "Surveyor2">`
   \   00000344   ........           DC32     LCDYSize
   \   00000348   ........           DC32     bmButtonSystem
     34          

   \                                 In segment CODE, align 4, keep-with-next
     35          void TDUMainWin::SetWindow(int WinID)
     36          {
   \                     ??SetWindow:
   \   00000000   F0432DE9           PUSH     {R4-R9,LR}
   \   00000004   38D04DE2           SUB      SP,SP,#+56
   \   00000008   0050A0E1           MOV      R5,R0
   \   0000000C   0170A0E1           MOV      R7,R1
     37          	// Test that Dialog windows not active
     38          	Protect();
   \   00000010   ........           _BLF     ??Protect,??Protect??rA
     39          	if ( !KeyBoard->Closed ) {					 //1
   \   00000014   9C079FE5           LDR      R0,??SetWindow_2  ;; KeyBoard
   \   00000018   001090E5           LDR      R1,[R0, #+0]
   \   0000001C   9800D1E5           LDRB     R0,[R1, #+152]
   \   00000020   000050E3           CMP      R0,#+0
   \   00000024   0400001A           BNE      ??SetWindow_3
     40          		KeyBoard->CloseTimer.Stop();
   \   00000028   9C0081E2           ADD      R0,R1,#+156
   \   0000002C   B81091E5           LDR      R1,[R1, #+184]
   \   00000030   001091E5           LDR      R1,[R1, #+0]
   \   00000034   0FE0A0E1           MOV      LR,PC
   \   00000038   11FF2FE1           BX       R1
     41          	}
     42          	if ( !OKMessageBox->Closed ) {			 //2
   \                     ??SetWindow_3:
   \   0000003C   78079FE5           LDR      R0,??SetWindow_2+0x4  ;; OKMessageBox
   \   00000040   001090E5           LDR      R1,[R0, #+0]
   \   00000044   3400D1E5           LDRB     R0,[R1, #+52]
   \   00000048   000050E3           CMP      R0,#+0
   \   0000004C   0400001A           BNE      ??SetWindow_4
     43          		OKMessageBox->CloseTimer.Stop();
   \   00000050   380081E2           ADD      R0,R1,#+56
   \   00000054   541091E5           LDR      R1,[R1, #+84]
   \   00000058   001091E5           LDR      R1,[R1, #+0]
   \   0000005C   0FE0A0E1           MOV      LR,PC
   \   00000060   11FF2FE1           BX       R1
     44          	}
     45          	if ( !ConfirmMessageBox->Closed ) {	 //3
   \                     ??SetWindow_4:
   \   00000064   54079FE5           LDR      R0,??SetWindow_2+0x8  ;; ConfirmMessageBox
   \   00000068   001090E5           LDR      R1,[R0, #+0]
   \   0000006C   9000D1E5           LDRB     R0,[R1, #+144]
   \   00000070   000050E3           CMP      R0,#+0
   \   00000074   0400001A           BNE      ??SetWindow_5
     46          		ConfirmMessageBox->CloseTimer.Stop();
   \   00000078   940081E2           ADD      R0,R1,#+148
   \   0000007C   B01091E5           LDR      R1,[R1, #+176]
   \   00000080   001091E5           LDR      R1,[R1, #+0]
   \   00000084   0FE0A0E1           MOV      LR,PC
   \   00000088   11FF2FE1           BX       R1
     47          	}
     48          	if ( !ListMessageBox->Closed ) {	//3
   \                     ??SetWindow_5:
   \   0000008C   30079FE5           LDR      R0,??SetWindow_2+0xC  ;; ListMessageBox
   \   00000090   001090E5           LDR      R1,[R0, #+0]
   \   00000094   3800D1E5           LDRB     R0,[R1, #+56]
   \   00000098   000050E3           CMP      R0,#+0
   \   0000009C   0400001A           BNE      ??SetWindow_6
     49          		ListMessageBox->CloseTimer.Stop();
   \   000000A0   3C0081E2           ADD      R0,R1,#+60
   \   000000A4   581091E5           LDR      R1,[R1, #+88]
   \   000000A8   001091E5           LDR      R1,[R1, #+0]
   \   000000AC   0FE0A0E1           MOV      LR,PC
   \   000000B0   11FF2FE1           BX       R1
     50          	}
     51          	if ( !AppWinSetupDiaIsClosed ) {		 //4
   \                     ??SetWindow_6:
   \   000000B4   0C079FE5           LDR      R0,??SetWindow_2+0x10  ;; AppWinSetupDiaIsClosed
   \   000000B8   0140A0E3           MOV      R4,#+1
   \   000000BC   0010D0E5           LDRB     R1,[R0, #+0]
   \   000000C0   000051E3           CMP      R1,#+0
   \   000000C4   0400001A           BNE      ??SetWindow_7
     52          		AppWinSetupDiaIsClosed = true;
   \   000000C8   0040C0E5           STRB     R4,[R0, #+0]
     53          		GUI_EndDialog(AppWinSetup->WinHandl, 0);
   \   000000CC   F8069FE5           LDR      R0,??SetWindow_2+0x14  ;; AppWinSetup
   \   000000D0   000090E5           LDR      R0,[R0, #+0]
   \   000000D4   FA02D0E1           LDRSH    R0,[R0, #+42]
   \   000000D8   ........           _BLF     GUI_EndDialog,??GUI_EndDialog??rA
     54          	}
     55          	if ( !AppSetupBallastIsClosed ) {		 //5
   \                     ??SetWindow_7:
   \   000000DC   EC069FE5           LDR      R0,??SetWindow_2+0x18  ;; AppSetupBallastIsClosed
   \   000000E0   0010D0E5           LDRB     R1,[R0, #+0]
   \   000000E4   000051E3           CMP      R1,#+0
   \   000000E8   0400001A           BNE      ??SetWindow_8
     56          		AppSetupBallastIsClosed = true;
   \   000000EC   0040C0E5           STRB     R4,[R0, #+0]
     57          		GUI_EndDialog(AppSetupBallast->WinHandl, 0);
   \   000000F0   DC069FE5           LDR      R0,??SetWindow_2+0x1C  ;; AppSetupBallast
   \   000000F4   000090E5           LDR      R0,[R0, #+0]
   \   000000F8   FA02D0E1           LDRSH    R0,[R0, #+42]
   \   000000FC   ........           _BLF     GUI_EndDialog,??GUI_EndDialog??rA
     58          	}
     59          	if ( !AppSetupCargoIsClosed ) {			 //6
   \                     ??SetWindow_8:
   \   00000100   D0069FE5           LDR      R0,??SetWindow_2+0x20  ;; AppSetupCargoIsClosed
   \   00000104   0010D0E5           LDRB     R1,[R0, #+0]
   \   00000108   000051E3           CMP      R1,#+0
   \   0000010C   0400001A           BNE      ??SetWindow_9
     60          		AppSetupCargoIsClosed = true;
   \   00000110   0040C0E5           STRB     R4,[R0, #+0]
     61          		GUI_EndDialog(AppSetupCargo->WinHandl, 0);
   \   00000114   C0069FE5           LDR      R0,??SetWindow_2+0x24  ;; AppSetupCargo
   \   00000118   000090E5           LDR      R0,[R0, #+0]
   \   0000011C   FA02D0E1           LDRSH    R0,[R0, #+42]
   \   00000120   ........           _BLF     GUI_EndDialog,??GUI_EndDialog??rA
     62          	}
     63          	if ( !AppSetupServiceIsClosed ) {		 //7
   \                     ??SetWindow_9:
   \   00000124   B4069FE5           LDR      R0,??SetWindow_2+0x28  ;; AppSetupServiceIsClosed
   \   00000128   0010D0E5           LDRB     R1,[R0, #+0]
   \   0000012C   000051E3           CMP      R1,#+0
   \   00000130   0400001A           BNE      ??SetWindow_10
     64          		AppSetupServiceIsClosed = true;
   \   00000134   0040C0E5           STRB     R4,[R0, #+0]
     65          		GUI_EndDialog(AppSetupService->WinHandl, 0);
   \   00000138   A4069FE5           LDR      R0,??SetWindow_2+0x2C  ;; AppSetupService
   \   0000013C   000090E5           LDR      R0,[R0, #+0]
   \   00000140   FA02D0E1           LDRSH    R0,[R0, #+42]
   \   00000144   ........           _BLF     GUI_EndDialog,??GUI_EndDialog??rA
     66          	}
     67          	if ( !AppSetupTankPressIsClosed ) {	 //8
   \                     ??SetWindow_10:
   \   00000148   98069FE5           LDR      R0,??SetWindow_2+0x30  ;; AppSetupTankPressIsClosed
   \   0000014C   0010D0E5           LDRB     R1,[R0, #+0]
   \   00000150   000051E3           CMP      R1,#+0
   \   00000154   0400001A           BNE      ??SetWindow_11
     68          		AppSetupTankPressIsClosed = true;
   \   00000158   0040C0E5           STRB     R4,[R0, #+0]
     69          		GUI_EndDialog(AppSetupTankPress->WinHandl, 0);
   \   0000015C   88069FE5           LDR      R0,??SetWindow_2+0x34  ;; AppSetupTankPress
   \   00000160   000090E5           LDR      R0,[R0, #+0]
   \   00000164   FA02D0E1           LDRSH    R0,[R0, #+42]
   \   00000168   ........           _BLF     GUI_EndDialog,??GUI_EndDialog??rA
     70          	}
     71          	if ( !AppSetupTempIsClosed ) {			 //9
   \                     ??SetWindow_11:
   \   0000016C   7C069FE5           LDR      R0,??SetWindow_2+0x38  ;; AppSetupTempIsClosed
   \   00000170   0010D0E5           LDRB     R1,[R0, #+0]
   \   00000174   000051E3           CMP      R1,#+0
   \   00000178   0400001A           BNE      ??SetWindow_12
     72          		AppSetupTempIsClosed = true;
   \   0000017C   0040C0E5           STRB     R4,[R0, #+0]
     73          		GUI_EndDialog(AppSetupTemp->WinHandl, 0);
   \   00000180   6C069FE5           LDR      R0,??SetWindow_2+0x3C  ;; AppSetupTemp
   \   00000184   000090E5           LDR      R0,[R0, #+0]
   \   00000188   FA02D0E1           LDRSH    R0,[R0, #+42]
   \   0000018C   ........           _BLF     GUI_EndDialog,??GUI_EndDialog??rA
     74          	}
     75          	if ( !AppSetupVoidSpaceIsClosed ) {			 //9
   \                     ??SetWindow_12:
   \   00000190   60069FE5           LDR      R0,??SetWindow_2+0x40  ;; AppSetupVoidSpaceIsClosed
   \   00000194   0010D0E5           LDRB     R1,[R0, #+0]
   \   00000198   000051E3           CMP      R1,#+0
   \   0000019C   0400001A           BNE      ??SetWindow_13
     76          		AppSetupVoidSpaceIsClosed = true;
   \   000001A0   0040C0E5           STRB     R4,[R0, #+0]
     77          		GUI_EndDialog(AppSetupVoidSpace->WinHandl, 0);
   \   000001A4   50069FE5           LDR      R0,??SetWindow_2+0x44  ;; AppSetupVoidSpace
   \   000001A8   000090E5           LDR      R0,[R0, #+0]
   \   000001AC   FA02D0E1           LDRSH    R0,[R0, #+42]
   \   000001B0   ........           _BLF     GUI_EndDialog,??GUI_EndDialog??rA
     78          	}
     79          	if ( !TankDetails->Closed ) {				 //10
   \                     ??SetWindow_13:
   \   000001B4   44069FE5           LDR      R0,??SetWindow_2+0x48  ;; TankDetails
   \   000001B8   000090E5           LDR      R0,[R0, #+0]
   \   000001BC   2C11D0E5           LDRB     R1,[R0, #+300]
   \   000001C0   000051E3           CMP      R1,#+0
   \   000001C4   0200001A           BNE      ??SetWindow_14
     80          		TankDetails->Closed = true;
   \   000001C8   2C41C0E5           STRB     R4,[R0, #+300]
     81          		GUI_EndDialog(TankDetails->WinHandl, 0);
   \   000001CC   FA02D0E1           LDRSH    R0,[R0, #+42]
   \   000001D0   ........           _BLF     GUI_EndDialog,??GUI_EndDialog??rA
     82          	}
     83          	if ( !AppSetupTankFarmIsClosed ) {			 //6
   \                     ??SetWindow_14:
   \   000001D4   28069FE5           LDR      R0,??SetWindow_2+0x4C  ;; AppSetupTankFarmIsClosed
   \   000001D8   0010D0E5           LDRB     R1,[R0, #+0]
   \   000001DC   000051E3           CMP      R1,#+0
   \   000001E0   0400001A           BNE      ??SetWindow_15
     84          		AppSetupTankFarmIsClosed = true;
   \   000001E4   0040C0E5           STRB     R4,[R0, #+0]
     85          		GUI_EndDialog(AppSetupTankFarm->WinHandl, 0);
   \   000001E8   18069FE5           LDR      R0,??SetWindow_2+0x50  ;; AppSetupTankFarm
   \   000001EC   000090E5           LDR      R0,[R0, #+0]
   \   000001F0   FA02D0E1           LDRSH    R0,[R0, #+42]
   \   000001F4   ........           _BLF     GUI_EndDialog,??GUI_EndDialog??rA
     86          	}
     87          	switch ( WinID ) {
   \                     ??SetWindow_15:
   \   000001F8   ........           LDR      R0,??DataTable12  ;; ConfigWindow
   \   000001FC   08869FE5           LDR      R8,??SetWindow_2+0x54  ;; `?<Constant "Configuration">`
   \   00000200   000090E5           LDR      R0,[R0, #+0]
   \   00000204   ........           LDR      R6,??DataTable11  ;; CurrentWinID
   \   00000208   00469FE5           LDR      R4,??SetWindow_2+0x58  ;; CurrentWinHandl
   \   0000020C   697047E2           SUB      R7,R7,#+105
   \   00000210   807E47E2           SUB      R7,R7,#+2048
   \   00000214   3D0057E3           CMP      R7,#+61
   \   00000218   6001008A           BHI      ??SetWindow_16
   \   0000021C   021F8FE2           ADR      R1,??SetWindow_1
   \   00000220   8770A0E1           MOV      R7,R7, LSL #+1
   \   00000224   B71091E1           LDRH     R1,[R1, R7]
   \   00000228   01F18FE0           ADD      PC,PC,R1, LSL #+2
   \                     ??SetWindow_1:
   \   0000022C   BB00DA005C01       DC16     +187,+218,+348,+348
   \              5C01        
   \   00000234   5C015C011E00       DC16     +348,+348,+30,+69
   \              4500        
   \   0000023C   4E0058006200       DC16     +78,+88,+98,+108
   \              6C00        
   \   00000244   76005C019300       DC16     +118,+348,+147,+176
   \              B000        
   \   0000024C   3B005C015C01       DC16     +59,+348,+348,+348
   \              5C01        
   \   00000254   5C015C015C01       DC16     +348,+348,+348,+348
   \              5C01        
   \   0000025C   5C01F7005C01       DC16     +348,+247,+348,+348
   \              5C01        
   \   00000264   5C015C015C01       DC16     +348,+348,+348,+348
   \              5C01        
   \   0000026C   5C015C015C01       DC16     +348,+348,+348,+258
   \              0201        
   \   00000274   5C015C015C01       DC16     +348,+348,+348,+348
   \              5C01        
   \   0000027C   5C015C015C01       DC16     +348,+348,+348,+348
   \              5C01        
   \   00000284   5C015C015C01       DC16     +348,+348,+348,+348
   \              5C01        
   \   0000028C   5C015C015C01       DC16     +348,+348,+348,+348
   \              5C01        
   \   00000294   5C015C015C01       DC16     +348,+348,+348,+348
   \              5C01        
   \   0000029C   5C015C015C01       DC16     +348,+348,+348,+348
   \              5C01        
   \   000002A4   0B011E01           DC16     +267,+286
     88          	case TDU_CARGO_WIN:
     89          		if ( CargoWindow ) {
   \                     ??SetWindow_17:
   \   000002A8   64759FE5           LDR      R7,??SetWindow_2+0x5C  ;; CargoWindow
   \   000002AC   000097E5           LDR      R0,[R7, #+0]
   \   000002B0   000050E3           CMP      R0,#+0
   \   000002B4   2C01000A           BEQ      ??SetWindow_18
     90          			CurrentWinHandl = CargoWindow->WinHandl;
   \   000002B8   FA02D0E1           LDRSH    R0,[R0, #+42]
     91          			CurrentWinID = TDU_CARGO_WIN;
     92          			TEXT_SetText(HeadingText,FindDictionaryWord(L_WORD9).c_str());	// Cargo
   \   000002BC   0910A0E3           MOV      R1,#+9
   \   000002C0   B000C4E1           STRH     R0,[R4, #+0]
   \   000002C4   6F00A0E3           MOV      R0,#+111
   \                     ??SetWindow_19:
   \   000002C8   800E80E3           ORR      R0,R0,#0x800
   \                     ??SetWindow_20:
   \   000002CC   000086E5           STR      R0,[R6, #+0]
   \   000002D0   0D00A0E1           MOV      R0,SP
   \   000002D4   ........           _BLF     ??FindDictionaryWord,??FindDictionaryWord??rA
   \   000002D8   18009DE5           LDR      R0,[SP, #+24]
   \   000002DC   100050E3           CMP      R0,#+16
   \   000002E0   F004D5E1           LDRSH    R0,[R5, #+64]
   \   000002E4   04109D25           LDRCS    R1,[SP, #+4]
   \   000002E8   04108D32           ADDCC    R1,SP,#+4
   \   000002EC   ........           _BLF     TEXT_SetText,??TEXT_SetText??rA
   \   000002F0   0020A0E3           MOV      R2,#+0
   \   000002F4   0110A0E3           MOV      R1,#+1
   \   000002F8   0D00A0E1           MOV      R0,SP
   \   000002FC   ........           _BLF     ??_Tidy,??_Tidy??rA
     93          			CargoWindow->SetButton();
   \   00000300   001097E5           LDR      R1,[R7, #+0]
   \   00000304   0100A0E1           MOV      R0,R1
   \   00000308   441091E5           LDR      R1,[R1, #+68]
   \   0000030C   001091E5           LDR      R1,[R1, #+0]
   \   00000310   0FE0A0E1           MOV      LR,PC
   \   00000314   11FF2FE1           BX       R1
   \   00000318   200100EA           B        ??SetWindow_16
     94          		} else {
     95          			TEXT_SetText(HeadingText,FindDictionaryWord(L_WORD100).c_str()); // Not in use
     96          		}
     97          		break;
     98          	case TDU_TANKFARM_WIN:
     99          		if ( TankFarmWindow ) {
   \                     ??SetWindow_21:
   \   0000031C   F4749FE5           LDR      R7,??SetWindow_2+0x60  ;; TankFarmWindow
   \   00000320   000097E5           LDR      R0,[R7, #+0]
   \   00000324   000050E3           CMP      R0,#+0
   \   00000328   0F01000A           BEQ      ??SetWindow_18
    100          			CurrentWinHandl = TankFarmWindow->WinHandl;
   \   0000032C   FA02D0E1           LDRSH    R0,[R0, #+42]
    101          			CurrentWinID = TDU_TANKFARM_WIN;
    102          			TEXT_SetText(HeadingText,FindDictionaryWord(L_WORD893).c_str());	// Tanks
   \   00000330   7D10A0E3           MOV      R1,#+125
   \   00000334   C01F81E3           ORR      R1,R1,#0x300
   \   00000338   B000C4E1           STRH     R0,[R4, #+0]
   \   0000033C   7900A0E3           MOV      R0,#+121
   \   00000340   E0FFFFEA           B        ??SetWindow_19
    103          			TankFarmWindow->SetButton();
    104          		} else {
    105          			TEXT_SetText(HeadingText,FindDictionaryWord(L_WORD100).c_str()); // Not in use
    106          		}
    107          		break;
    108          
    109          	case TDU_BALLAST_WIN:
    110          		if ( BallastWindow ) {
   \                     ??SetWindow_22:
   \   00000344   D0749FE5           LDR      R7,??SetWindow_2+0x64  ;; BallastWindow
   \   00000348   000097E5           LDR      R0,[R7, #+0]
   \   0000034C   000050E3           CMP      R0,#+0
   \   00000350   0501000A           BEQ      ??SetWindow_18
    111          			CurrentWinHandl = BallastWindow->WinHandl;
   \   00000354   FA02D0E1           LDRSH    R0,[R0, #+42]
    112          			CurrentWinID = TDU_BALLAST_WIN;
    113          			TEXT_SetText(HeadingText,FindDictionaryWord(L_WORD47).c_str());	// Ballast
   \   00000358   2F10A0E3           MOV      R1,#+47
   \   0000035C   B000C4E1           STRH     R0,[R4, #+0]
   \   00000360   870EA0E3           MOV      R0,#+2160
   \   00000364   D8FFFFEA           B        ??SetWindow_20
    114          			BallastWindow->SetButton();
    115          		} else {
    116          			TEXT_SetText(HeadingText,FindDictionaryWord(L_WORD100).c_str()); // Not in use
    117          		}
    118          		break;
    119          	case TDU_SERVICE_WIN:
    120          		if ( ServiceWindow ) {
   \                     ??SetWindow_23:
   \   00000368   B0749FE5           LDR      R7,??SetWindow_2+0x68  ;; ServiceWindow
   \   0000036C   000097E5           LDR      R0,[R7, #+0]
   \   00000370   000050E3           CMP      R0,#+0
   \   00000374   FC00000A           BEQ      ??SetWindow_18
    121          			CurrentWinHandl = ServiceWindow->WinHandl;
   \   00000378   FA02D0E1           LDRSH    R0,[R0, #+42]
    122          			CurrentWinID = TDU_SERVICE_WIN;
    123          			TEXT_SetText(HeadingText,FindDictionaryWord(L_WORD10).c_str());	// Service
   \   0000037C   0A10A0E3           MOV      R1,#+10
   \   00000380   B000C4E1           STRH     R0,[R4, #+0]
   \   00000384   7100A0E3           MOV      R0,#+113
   \   00000388   800E80E3           ORR      R0,R0,#0x800
   \   0000038C   CEFFFFEA           B        ??SetWindow_20
    124          			ServiceWindow->SetButton();
    125          		} else {
    126          			TEXT_SetText(HeadingText,FindDictionaryWord(L_WORD100).c_str()); // Not in use
    127          		}
    128          		break;
    129          	case TDU_TANKPRESS_WIN:
    130          		if ( TankPressWindow ) {
   \                     ??SetWindow_24:
   \   00000390   8C749FE5           LDR      R7,??SetWindow_2+0x6C  ;; TankPressWindow
   \   00000394   000097E5           LDR      R0,[R7, #+0]
   \   00000398   000050E3           CMP      R0,#+0
   \   0000039C   F200000A           BEQ      ??SetWindow_18
    131          			CurrentWinHandl = TankPressWindow->WinHandl;
   \   000003A0   FA02D0E1           LDRSH    R0,[R0, #+42]
    132          			CurrentWinID = TDU_TANKPRESS_WIN;
    133          			TEXT_SetText(HeadingText,FindDictionaryWord(L_WORD12).c_str());	// Tank pressure
   \   000003A4   0C10A0E3           MOV      R1,#+12
   \   000003A8   B000C4E1           STRH     R0,[R4, #+0]
   \   000003AC   7200A0E3           MOV      R0,#+114
   \   000003B0   800E80E3           ORR      R0,R0,#0x800
   \   000003B4   C4FFFFEA           B        ??SetWindow_20
    134          			TankPressWindow->SetButton();
    135          		} else {
    136          			TEXT_SetText(HeadingText,FindDictionaryWord(L_WORD100).c_str()); // Not in use
    137          		}
    138          		break;
    139          	case TDU_LINEPRESS_WIN:
    140          		if ( LinePressWindow ) {
   \                     ??SetWindow_25:
   \   000003B8   68749FE5           LDR      R7,??SetWindow_2+0x70  ;; LinePressWindow
   \   000003BC   000097E5           LDR      R0,[R7, #+0]
   \   000003C0   000050E3           CMP      R0,#+0
   \   000003C4   E800000A           BEQ      ??SetWindow_18
    141          			CurrentWinHandl = LinePressWindow->WinHandl;
   \   000003C8   FA02D0E1           LDRSH    R0,[R0, #+42]
    142          			CurrentWinID = TDU_LINEPRESS_WIN;
    143          			TEXT_SetText(HeadingText,FindDictionaryWord(L_WORD92).c_str());	// Cargo line pressure
   \   000003CC   5C10A0E3           MOV      R1,#+92
   \   000003D0   B000C4E1           STRH     R0,[R4, #+0]
   \   000003D4   7300A0E3           MOV      R0,#+115
   \   000003D8   800E80E3           ORR      R0,R0,#0x800
   \   000003DC   BAFFFFEA           B        ??SetWindow_20
    144          			LinePressWindow->SetButton();
    145          		} else {
    146          			TEXT_SetText(HeadingText,FindDictionaryWord(L_WORD100).c_str()); // Not in use
    147          		}
    148          		break;
    149          	case TDU_TEMP_WIN:
    150          		if ( TempWindow ) {
   \                     ??SetWindow_26:
   \   000003E0   44749FE5           LDR      R7,??SetWindow_2+0x74  ;; TempWindow
   \   000003E4   000097E5           LDR      R0,[R7, #+0]
   \   000003E8   000050E3           CMP      R0,#+0
   \   000003EC   DE00000A           BEQ      ??SetWindow_18
    151          			CurrentWinHandl = TempWindow->WinHandl;
   \   000003F0   FA02D0E1           LDRSH    R0,[R0, #+42]
    152          			CurrentWinID = TDU_TEMP_WIN;
    153          			TEXT_SetText(HeadingText,FindDictionaryWord(L_WORD11).c_str());	// Temperature
   \   000003F4   0B10A0E3           MOV      R1,#+11
   \   000003F8   B000C4E1           STRH     R0,[R4, #+0]
   \   000003FC   7400A0E3           MOV      R0,#+116
   \   00000400   800E80E3           ORR      R0,R0,#0x800
   \   00000404   B0FFFFEA           B        ??SetWindow_20
    154          			TempWindow->SetButton();
    155          		} else {
    156          			TEXT_SetText(HeadingText,FindDictionaryWord(L_WORD100).c_str()); // Not in use
    157          		}
    158          		break;
    159          	case TDU_LEVELSWITCH_WIN:
    160          		if ( LevelSwitchWindow ) {
   \                     ??SetWindow_27:
   \   00000408   20749FE5           LDR      R7,??SetWindow_2+0x78  ;; LevelSwitchWindow
   \   0000040C   000097E5           LDR      R0,[R7, #+0]
   \   00000410   000050E3           CMP      R0,#+0
   \   00000414   D400000A           BEQ      ??SetWindow_18
    161          			CurrentWinHandl = LevelSwitchWindow->WinHandl;
   \   00000418   FA02D0E1           LDRSH    R0,[R0, #+42]
    162          			CurrentWinID = TDU_LEVELSWITCH_WIN;
    163          			TEXT_SetText(HeadingText,FindDictionaryWord(L_WORD95).c_str());	// Level switch
   \   0000041C   5F10A0E3           MOV      R1,#+95
   \   00000420   B000C4E1           STRH     R0,[R4, #+0]
   \   00000424   7500A0E3           MOV      R0,#+117
   \   00000428   800E80E3           ORR      R0,R0,#0x800
   \   0000042C   000086E5           STR      R0,[R6, #+0]
   \   00000430   0D00A0E1           MOV      R0,SP
   \   00000434   ........           _BLF     ??FindDictionaryWord,??FindDictionaryWord??rA
   \   00000438   18009DE5           LDR      R0,[SP, #+24]
   \   0000043C   100050E3           CMP      R0,#+16
   \   00000440   F004D5E1           LDRSH    R0,[R5, #+64]
   \   00000444   04109D25           LDRCS    R1,[SP, #+4]
   \   00000448   04108D32           ADDCC    R1,SP,#+4
   \   0000044C   ........           _BLF     TEXT_SetText,??TEXT_SetText??rA
   \   00000450   0020A0E3           MOV      R2,#+0
   \   00000454   0110A0E3           MOV      R1,#+1
   \   00000458   0D00A0E1           MOV      R0,SP
   \   0000045C   ........           _BLF     ??_Tidy,??_Tidy??rA
    164          			LevelSwitchWindow->SetButton();
   \   00000460   001097E5           LDR      R1,[R7, #+0]
   \   00000464   0100A0E1           MOV      R0,R1
   \   00000468   441091E5           LDR      R1,[R1, #+68]
   \   0000046C   001091E5           LDR      R1,[R1, #+0]
   \   00000470   0FE0A0E1           MOV      LR,PC
   \   00000474   11FF2FE1           BX       R1
   \   00000478   C80000EA           B        ??SetWindow_16
    165          		} else {
    166          			TEXT_SetText(HeadingText,FindDictionaryWord(L_WORD100).c_str()); // Not in use
    167          		}
    168          		break;
    169          	case TDU_WATERINGR_WIN:
    170          		if ( WaterIngrWindow ) {
   \                     ??SetWindow_28:
   \   0000047C   B0739FE5           LDR      R7,??SetWindow_2+0x7C  ;; WaterIngrWindow
   \   00000480   000097E5           LDR      R0,[R7, #+0]
   \   00000484   000050E3           CMP      R0,#+0
   \   00000488   B700000A           BEQ      ??SetWindow_18
    171          			CurrentWinHandl = WaterIngrWindow->WinHandl;
   \   0000048C   FA02D0E1           LDRSH    R0,[R0, #+42]
    172          			CurrentWinID = TDU_WATERINGR_WIN;
    173          			TEXT_SetText(HeadingText,FindDictionaryWord(L_WORD94).c_str());	// Water Ingress Detection
   \   00000490   5E10A0E3           MOV      R1,#+94
   \   00000494   B000C4E1           STRH     R0,[R4, #+0]
   \   00000498   7700A0E3           MOV      R0,#+119
   \   0000049C   800E80E3           ORR      R0,R0,#0x800
   \   000004A0   000086E5           STR      R0,[R6, #+0]
   \   000004A4   0D00A0E1           MOV      R0,SP
   \   000004A8   ........           _BLF     ??FindDictionaryWord,??FindDictionaryWord??rA
   \   000004AC   18009DE5           LDR      R0,[SP, #+24]
   \   000004B0   100050E3           CMP      R0,#+16
   \   000004B4   F004D5E1           LDRSH    R0,[R5, #+64]
   \   000004B8   04109D25           LDRCS    R1,[SP, #+4]
   \   000004BC   04108D32           ADDCC    R1,SP,#+4
   \   000004C0   ........           _BLF     TEXT_SetText,??TEXT_SetText??rA
   \   000004C4   0020A0E3           MOV      R2,#+0
   \   000004C8   0110A0E3           MOV      R1,#+1
   \   000004CC   0D00A0E1           MOV      R0,SP
   \   000004D0   ........           _BLF     ??_Tidy,??_Tidy??rA
    174          			WaterIngrWindow->SetButton();
   \   000004D4   001097E5           LDR      R1,[R7, #+0]
   \   000004D8   0100A0E1           MOV      R0,R1
   \   000004DC   441091E5           LDR      R1,[R1, #+68]
   \   000004E0   001091E5           LDR      R1,[R1, #+0]
   \   000004E4   0FE0A0E1           MOV      LR,PC
   \   000004E8   11FF2FE1           BX       R1
   \   000004EC   AB0000EA           B        ??SetWindow_16
    175          		} else {
    176          			TEXT_SetText(HeadingText,FindDictionaryWord(L_WORD100).c_str()); // Not in use
    177          		}
    178          		break;
    179          	case TDU_VOIDSPACE_WIN:
    180          		if ( VoidSpaceWindow ) {
   \                     ??SetWindow_29:
   \   000004F0   40739FE5           LDR      R7,??SetWindow_2+0x80  ;; VoidSpaceWindow
   \   000004F4   000097E5           LDR      R0,[R7, #+0]
   \   000004F8   000050E3           CMP      R0,#+0
   \   000004FC   9A00000A           BEQ      ??SetWindow_18
    181          			CurrentWinHandl = VoidSpaceWindow->WinHandl;
   \   00000500   FA02D0E1           LDRSH    R0,[R0, #+42]
    182          			CurrentWinID = TDU_VOIDSPACE_WIN;
    183          			TEXT_SetText(HeadingText,FindDictionaryWord(L_WORD642).c_str());	// Void space
   \   00000504   8210A0E3           MOV      R1,#+130
   \   00000508   801F81E3           ORR      R1,R1,#0x200
   \   0000050C   B000C4E1           STRH     R0,[R4, #+0]
   \   00000510   7800A0E3           MOV      R0,#+120
   \   00000514   800E80E3           ORR      R0,R0,#0x800
   \   00000518   6BFFFFEA           B        ??SetWindow_20
    184          			VoidSpaceWindow->SetButton();
    185          		} else {
    186          			TEXT_SetText(HeadingText,FindDictionaryWord(L_WORD100).c_str()); // Not in use
    187          		}
    188          		break;
    189          	case TDU_SYSTEM_WIN:
    190          		if ( SystemWindow ) {
   \                     ??SetWindow_30:
   \   0000051C   ........           LDR      R7,??DataTable10  ;; SystemWindow
   \   00000520   000097E5           LDR      R0,[R7, #+0]
   \   00000524   000050E3           CMP      R0,#+0
   \   00000528   1800000A           BEQ      ??SetWindow_31
    191          			CurrentWinHandl = SystemWindow->WinHandl;
   \   0000052C   FA02D0E1           LDRSH    R0,[R0, #+42]
    192          			CurrentWinID = TDU_SYSTEM_WIN;
    193          			TEXT_SetText(HeadingText,FindDictionaryWord(L_WORD96).c_str());	// System
   \   00000530   6010A0E3           MOV      R1,#+96
   \   00000534   B000C4E1           STRH     R0,[R4, #+0]
   \   00000538   6900A0E3           MOV      R0,#+105
   \   0000053C   800E80E3           ORR      R0,R0,#0x800
   \   00000540   000086E5           STR      R0,[R6, #+0]
   \   00000544   0D00A0E1           MOV      R0,SP
   \   00000548   ........           _BLF     ??FindDictionaryWord,??FindDictionaryWord??rA
   \   0000054C   18009DE5           LDR      R0,[SP, #+24]
   \   00000550   100050E3           CMP      R0,#+16
   \   00000554   F004D5E1           LDRSH    R0,[R5, #+64]
   \   00000558   04109D25           LDRCS    R1,[SP, #+4]
   \   0000055C   04108D32           ADDCC    R1,SP,#+4
   \   00000560   ........           _BLF     TEXT_SetText,??TEXT_SetText??rA
   \   00000564   0020A0E3           MOV      R2,#+0
   \   00000568   0110A0E3           MOV      R1,#+1
   \   0000056C   0D00A0E1           MOV      R0,SP
   \   00000570   ........           _BLF     ??_Tidy,??_Tidy??rA
    194          			SystemWindow->SetButton();
   \   00000574   001097E5           LDR      R1,[R7, #+0]
   \   00000578   0100A0E1           MOV      R0,R1
   \   0000057C   441091E5           LDR      R1,[R1, #+68]
   \   00000580   001091E5           LDR      R1,[R1, #+0]
   \   00000584   0FE0A0E1           MOV      LR,PC
   \   00000588   11FF2FE1           BX       R1
   \   0000058C   830000EA           B        ??SetWindow_16
    195          		} else {
    196          			TEXT_SetText(HeadingText,FindDictionaryWord(L_WORD99).c_str());	// Not Configured
   \                     ??SetWindow_31:
   \   00000590   6310A0E3           MOV      R1,#+99
   \   00000594   750000EA           B        ??SetWindow_32
    197          		}
    198          		break;
    199          	case TDU_ALARM_WIN:
    200          		if ( AlarmWindow ) {
   \                     ??SetWindow_33:
   \   00000598   9C729FE5           LDR      R7,??SetWindow_2+0x84  ;; AlarmWindow
   \   0000059C   000097E5           LDR      R0,[R7, #+0]
   \   000005A0   000050E3           CMP      R0,#+0
   \   000005A4   7000000A           BEQ      ??SetWindow_18
    201          			CurrentWinHandl = AlarmWindow->WinHandl;
   \   000005A8   FA02D0E1           LDRSH    R0,[R0, #+42]
    202          			CurrentWinID = TDU_ALARM_WIN;
    203          			TEXT_SetText(HeadingText,FindDictionaryWord(L_WORD97).c_str());	// Alarm
   \   000005AC   6110A0E3           MOV      R1,#+97
   \   000005B0   B000C4E1           STRH     R0,[R4, #+0]
   \   000005B4   6A00A0E3           MOV      R0,#+106
   \   000005B8   800E80E3           ORR      R0,R0,#0x800
   \   000005BC   000086E5           STR      R0,[R6, #+0]
   \   000005C0   0D00A0E1           MOV      R0,SP
   \   000005C4   ........           _BLF     ??FindDictionaryWord,??FindDictionaryWord??rA
   \   000005C8   18009DE5           LDR      R0,[SP, #+24]
   \   000005CC   100050E3           CMP      R0,#+16
   \   000005D0   F004D5E1           LDRSH    R0,[R5, #+64]
   \   000005D4   04109D25           LDRCS    R1,[SP, #+4]
   \   000005D8   04108D32           ADDCC    R1,SP,#+4
   \   000005DC   ........           _BLF     TEXT_SetText,??TEXT_SetText??rA
   \   000005E0   0020A0E3           MOV      R2,#+0
   \   000005E4   0110A0E3           MOV      R1,#+1
   \   000005E8   0D00A0E1           MOV      R0,SP
   \   000005EC   ........           _BLF     ??_Tidy,??_Tidy??rA
    204          			AlarmWindow->SetButton();
   \   000005F0   001097E5           LDR      R1,[R7, #+0]
   \   000005F4   0100A0E1           MOV      R0,R1
   \   000005F8   441091E5           LDR      R1,[R1, #+68]
   \   000005FC   001091E5           LDR      R1,[R1, #+0]
   \   00000600   0FE0A0E1           MOV      LR,PC
   \   00000604   11FF2FE1           BX       R1
   \   00000608   640000EA           B        ??SetWindow_16
    205          		} else {
    206          			TEXT_SetText(HeadingText,FindDictionaryWord(L_WORD100).c_str()); // Not in use
    207          		}
    208          		break;
    209          	case TDU_CONFIG_MAIN_WIN:
    210          		if ( ConfigWindow ) {
   \                     ??SetWindow_34:
   \   0000060C   000050E3           CMP      R0,#+0
   \   00000610   5500000A           BEQ      ??SetWindow_18
    211          			CurrentWinHandl = ConfigWindow->WinHandl;
   \   00000614   F000D0E1           LDRSH    R0,[R0, #+0]
    212          			CurrentWinID = TDU_CONFIG_MAIN_WIN;
    213          			TEXT_SetText(HeadingText,"Configuration");
   \   00000618   0810A0E1           MOV      R1,R8
   \   0000061C   B000C4E1           STRH     R0,[R4, #+0]
   \   00000620   8200A0E3           MOV      R0,#+130
   \                     ??SetWindow_35:
   \   00000624   800E80E3           ORR      R0,R0,#0x800
   \   00000628   000086E5           STR      R0,[R6, #+0]
   \   0000062C   F004D5E1           LDRSH    R0,[R5, #+64]
   \   00000630   ........           _BLF     TEXT_SetText,??TEXT_SetText??rA
   \   00000634   590000EA           B        ??SetWindow_16
    214          //			ConfigWindow->SetButton();
    215          		} else {
    216          			TEXT_SetText(HeadingText,FindDictionaryWord(L_WORD100).c_str()); // Not in use
    217          		}
    218          		break;
    219          	case TDU_CALIBRATE_WIN:
    220          		if ( ConfigWindow ) {
   \                     ??SetWindow_36:
   \   00000638   000050E3           CMP      R0,#+0
   \   0000063C   4A00000A           BEQ      ??SetWindow_18
    221          			CurrentWinHandl = CalibrateScreen->WinHandl;
   \   00000640   ........           LDR      R0,??DataTable13  ;; CalibrateScreen
    222          			CurrentWinID = TDU_CALIBRATE_WIN;
    223          			TEXT_SetText(HeadingText,"Calibration");
   \   00000644   101088E2           ADD      R1,R8,#+16
   \   00000648   000090E5           LDR      R0,[R0, #+0]
   \   0000064C   FA02D0E1           LDRSH    R0,[R0, #+42]
   \   00000650   B000C4E1           STRH     R0,[R4, #+0]
   \   00000654   8C00A0E3           MOV      R0,#+140
   \   00000658   F1FFFFEA           B        ??SetWindow_35
    224          //			ConfigWindow->SetButton();
    225          		} else {
    226          			TEXT_SetText(HeadingText,FindDictionaryWord(L_WORD100).c_str()); // Not in use
    227          		}
    228          		break;
    229          	case TDU_TANK_CLEANING_WIN:
    230          		if ( ConfigWindow ) {
   \                     ??SetWindow_37:
   \   0000065C   000050E3           CMP      R0,#+0
   \   00000660   4100000A           BEQ      ??SetWindow_18
    231          			CurrentWinHandl = TankCleaningWindow->WinHandl;
   \   00000664   D4719FE5           LDR      R7,??SetWindow_2+0x88  ;; TankCleaningWindow
    232          			CurrentWinID = TDU_TANK_CLEANING_WIN;
    233          			TEXT_SetText(HeadingText, "Tank cleaning");
   \   00000668   1C1088E2           ADD      R1,R8,#+28
   \   0000066C   000097E5           LDR      R0,[R7, #+0]
   \   00000670   FA02D0E1           LDRSH    R0,[R0, #+42]
   \   00000674   B000C4E1           STRH     R0,[R4, #+0]
   \   00000678   A500A0E3           MOV      R0,#+165
   \   0000067C   800E80E3           ORR      R0,R0,#0x800
   \   00000680   000086E5           STR      R0,[R6, #+0]
   \   00000684   F004D5E1           LDRSH    R0,[R5, #+64]
   \   00000688   ........           _BLF     TEXT_SetText,??TEXT_SetText??rA
    234          			TankCleaningWindow->SetButton();
   \   0000068C   001097E5           LDR      R1,[R7, #+0]
   \   00000690   0100A0E1           MOV      R0,R1
   \   00000694   441091E5           LDR      R1,[R1, #+68]
   \   00000698   001091E5           LDR      R1,[R1, #+0]
   \   0000069C   0FE0A0E1           MOV      LR,PC
   \   000006A0   11FF2FE1           BX       R1
   \   000006A4   3D0000EA           B        ??SetWindow_16
    235          		} else {
    236          			TEXT_SetText(HeadingText,FindDictionaryWord(L_WORD100).c_str()); // Not in use
    237          		}
    238          		break;
    239          	case TDU_TANK_CLEANING_DETAILS_WIN:
    240          		if ( ConfigWindow ) {
   \                     ??SetWindow_38:
   \   000006A8   000050E3           CMP      R0,#+0
   \   000006AC   2E00000A           BEQ      ??SetWindow_18
    241          
    242          			if (TankCleaningDetailsWindow != NULL && TankCleaningDetailsWindow->GetTank() != NULL)
   \   000006B0   8C719FE5           LDR      R7,??SetWindow_2+0x8C  ;; TankCleaningDetailsWindow
   \   000006B4   000097E5           LDR      R0,[R7, #+0]
   \   000006B8   000050E3           CMP      R0,#+0
   \   000006BC   3700000A           BEQ      ??SetWindow_16
   \   000006C0   ........           _BLF     ??GetTank,??GetTank??rA
   \   000006C4   000050E3           CMP      R0,#+0
   \   000006C8   3400000A           BEQ      ??SetWindow_16
    243          			{
    244          				PROTank* pTank = TankCleaningDetailsWindow->GetTank();
   \   000006CC   000097E5           LDR      R0,[R7, #+0]
   \   000006D0   ........           _BLF     ??GetTank,??GetTank??rA
   \   000006D4   0090A0E1           MOV      R9,R0
    245          
    246          				CurrentWinHandl = TankCleaningDetailsWindow->WinHandl;
   \   000006D8   000097E5           LDR      R0,[R7, #+0]
   \   000006DC   FA02D0E1           LDRSH    R0,[R0, #+42]
   \   000006E0   B000C4E1           STRH     R0,[R4, #+0]
    247          				CurrentWinID = TDU_TANK_CLEANING_DETAILS_WIN;
   \   000006E4   A600A0E3           MOV      R0,#+166
   \   000006E8   800E80E3           ORR      R0,R0,#0x800
   \   000006EC   000086E5           STR      R0,[R6, #+0]
    248          
    249          				AnsiString titleStr;
   \   000006F0   1C008DE2           ADD      R0,SP,#+28
   \   000006F4   ........           _BLF     ??AnsiString,??AnsiString??rA
    250          				titleStr.cat_sprintf("%s TCMs", pTank->Name.c_str());
   \   000006F8   440089E2           ADD      R0,R9,#+68
   \   000006FC   181090E5           LDR      R1,[R0, #+24]
   \   00000700   2C2088E2           ADD      R2,R8,#+44
   \   00000704   100051E3           CMP      R1,#+16
   \   00000708   04309025           LDRCS    R3,[R0, #+4]
   \   0000070C   0D10A0E1           MOV      R1,SP
   \   00000710   04308032           ADDCC    R3,R0,#+4
   \   00000714   1C008DE2           ADD      R0,SP,#+28
   \   00000718   ........           _BLF     ??cat_sprintf,??cat_sprintf??rA
   \   0000071C   0020A0E3           MOV      R2,#+0
   \   00000720   0110A0E3           MOV      R1,#+1
   \   00000724   0D00A0E1           MOV      R0,SP
   \   00000728   ........           _BLF     ??_Tidy,??_Tidy??rA
    251          				TEXT_SetText(HeadingText, titleStr.c_str());
   \   0000072C   34009DE5           LDR      R0,[SP, #+52]
   \   00000730   100050E3           CMP      R0,#+16
   \   00000734   F004D5E1           LDRSH    R0,[R5, #+64]
   \   00000738   20109D25           LDRCS    R1,[SP, #+32]
   \   0000073C   20108D32           ADDCC    R1,SP,#+32
   \   00000740   ........           _BLF     TEXT_SetText,??TEXT_SetText??rA
    252          				TankCleaningDetailsWindow->SetButton();
   \   00000744   001097E5           LDR      R1,[R7, #+0]
   \   00000748   0100A0E1           MOV      R0,R1
   \   0000074C   441091E5           LDR      R1,[R1, #+68]
   \   00000750   001091E5           LDR      R1,[R1, #+0]
   \   00000754   0FE0A0E1           MOV      LR,PC
   \   00000758   11FF2FE1           BX       R1
    253          			}
   \   0000075C   0020A0E3           MOV      R2,#+0
   \   00000760   0110A0E3           MOV      R1,#+1
   \   00000764   1C008DE2           ADD      R0,SP,#+28
   \   00000768   0B0000EA           B        ??SetWindow_39
    254          		} else {
    255          			TEXT_SetText(HeadingText,FindDictionaryWord(L_WORD100).c_str()); // Not in use
   \                     ??SetWindow_18:
   \   0000076C   6410A0E3           MOV      R1,#+100
   \                     ??SetWindow_32:
   \   00000770   0D00A0E1           MOV      R0,SP
   \   00000774   ........           _BLF     ??FindDictionaryWord,??FindDictionaryWord??rA
   \   00000778   18009DE5           LDR      R0,[SP, #+24]
   \   0000077C   100050E3           CMP      R0,#+16
   \   00000780   F004D5E1           LDRSH    R0,[R5, #+64]
   \   00000784   04109D25           LDRCS    R1,[SP, #+4]
   \   00000788   04108D32           ADDCC    R1,SP,#+4
   \   0000078C   ........           _BLF     TEXT_SetText,??TEXT_SetText??rA
   \   00000790   0020A0E3           MOV      R2,#+0
   \   00000794   0110A0E3           MOV      R1,#+1
   \   00000798   0D00A0E1           MOV      R0,SP
   \                     ??SetWindow_39:
   \   0000079C   ........           _BLF     ??_Tidy,??_Tidy??rA
    256          		}
    257          		break;
    258          	default:
    259          		break;
    260          	}
    261          	UnProtect();
   \                     ??SetWindow_16:
   \   000007A0   ........           _BLF     ??UnProtect,??UnProtect??rA
    262          	WM_BringToTop(CurrentWinHandl);
   \   000007A4   F000D4E1           LDRSH    R0,[R4, #+0]
   \   000007A8   ........           _BLF     WM_BringToTop,??WM_BringToTop??rA
    263          }
   \   000007AC   38D08DE2           ADD      SP,SP,#+56
   \   000007B0   F043BDE8           POP      {R4-R9,LR}
   \   000007B4   1EFF2FE1           BX       LR               ;; return
   \                     ??SetWindow_2:
   \   000007B8   ........           DC32     KeyBoard
   \   000007BC   ........           DC32     OKMessageBox
   \   000007C0   ........           DC32     ConfirmMessageBox
   \   000007C4   ........           DC32     ListMessageBox
   \   000007C8   ........           DC32     AppWinSetupDiaIsClosed
   \   000007CC   ........           DC32     AppWinSetup
   \   000007D0   ........           DC32     AppSetupBallastIsClosed
   \   000007D4   ........           DC32     AppSetupBallast
   \   000007D8   ........           DC32     AppSetupCargoIsClosed
   \   000007DC   ........           DC32     AppSetupCargo
   \   000007E0   ........           DC32     AppSetupServiceIsClosed
   \   000007E4   ........           DC32     AppSetupService
   \   000007E8   ........           DC32     AppSetupTankPressIsClosed
   \   000007EC   ........           DC32     AppSetupTankPress
   \   000007F0   ........           DC32     AppSetupTempIsClosed
   \   000007F4   ........           DC32     AppSetupTemp
   \   000007F8   ........           DC32     AppSetupVoidSpaceIsClosed
   \   000007FC   ........           DC32     AppSetupVoidSpace
   \   00000800   ........           DC32     TankDetails
   \   00000804   ........           DC32     AppSetupTankFarmIsClosed
   \   00000808   ........           DC32     AppSetupTankFarm
   \   0000080C   ........           DC32     `?<Constant "Configuration">`
   \   00000810   ........           DC32     CurrentWinHandl
   \   00000814   ........           DC32     CargoWindow
   \   00000818   ........           DC32     TankFarmWindow
   \   0000081C   ........           DC32     BallastWindow
   \   00000820   ........           DC32     ServiceWindow
   \   00000824   ........           DC32     TankPressWindow
   \   00000828   ........           DC32     LinePressWindow
   \   0000082C   ........           DC32     TempWindow
   \   00000830   ........           DC32     LevelSwitchWindow
   \   00000834   ........           DC32     WaterIngrWindow
   \   00000838   ........           DC32     VoidSpaceWindow
   \   0000083C   ........           DC32     AlarmWindow
   \   00000840   ........           DC32     TankCleaningWindow
   \   00000844   ........           DC32     TankCleaningDetailsWindow
    264          

   \                                 In segment CODE, align 4, keep-with-next
    265          void TDUMainWin::SetCurrentWindow(int index)
    266          {
   \                     ??SetCurrentWindow:
   \   00000000   F0432DE9           PUSH     {R4-R9,LR}
    267          	Protect();
    268          	int OrgWinId= CurrentWinID;
   \   00000004   ........           LDR      R4,??DataTable11  ;; CurrentWinID
    269          	if ( index==6 ) {
   \   00000008   ........           LDR      R7,??DataTable14  ;; PreviousWinID
   \   0000000C   38D04DE2           SUB      SP,SP,#+56
   \   00000010   0060A0E1           MOV      R6,R0
   \   00000014   0180A0E1           MOV      R8,R1
   \   00000018   ........           _BLF     ??Protect,??Protect??rA
   \   0000001C   005094E5           LDR      R5,[R4, #+0]
   \   00000020   6990A0E3           MOV      R9,#+105
   \   00000024   809E89E3           ORR      R9,R9,#0x800
   \   00000028   060058E3           CMP      R8,#+6
   \   0000002C   0300001A           BNE      ??SetCurrentWindow_3
    270          		if ( CurrentWinID != TDU_SYSTEM_WIN ) {
   \   00000030   000094E5           LDR      R0,[R4, #+0]
   \   00000034   090050E1           CMP      R0,R9
   \   00000038   5900000A           BEQ      ??SetCurrentWindow_4
    271          			PreviousWinID = CurrentWinID;
   \   0000003C   560000EA           B        ??SetCurrentWindow_5
    272          		}
    273          		CurrentWinID = TDU_SYSTEM_WIN;
    274          	} else if ( index==7 ) {
   \                     ??SetCurrentWindow_3:
   \   00000040   070058E3           CMP      R8,#+7
   \   00000044   0600001A           BNE      ??SetCurrentWindow_6
    275          		if ( CurrentWinID != TDU_ALARM_WIN ) {
   \   00000048   001094E5           LDR      R1,[R4, #+0]
   \   0000004C   010089E2           ADD      R0,R9,#+1
   \   00000050   000051E1           CMP      R1,R0
    276          			PreviousWinID = CurrentWinID;
   \   00000054   00109415           LDRNE    R1,[R4, #+0]
   \   00000058   00108715           STRNE    R1,[R7, #+0]
    277          		}
    278          		CurrentWinID = TDU_ALARM_WIN;
   \   0000005C   000084E5           STR      R0,[R4, #+0]
   \   00000060   500000EA           B        ??SetCurrentWindow_7
    279          	} else {
    280          		if ( PROProjectInfo::PROProjectInfoPtr ) {
   \                     ??SetCurrentWindow_6:
   \   00000064   ........           LDR      R0,??DataTable17  ;; ??PROProjectInfoPtr
   \   00000068   000090E5           LDR      R0,[R0, #+0]
   \   0000006C   000050E3           CMP      R0,#+0
   \   00000070   3700000A           BEQ      ??SetCurrentWindow_8
    281          			switch ( NewAppList[index] ) {
   \   00000074   ........           LDR      R0,??DataTable15  ;; LastApplIndex
   \   00000078   081186E0           ADD      R1,R6,R8, LSL #+2
   \   0000007C   542091E5           LDR      R2,[R1, #+84]
   \   00000080   292042E2           SUB      R2,R2,#+41
   \   00000084   8C2D42E2           SUB      R2,R2,#+8960
   \   00000088   090052E3           CMP      R2,#+9
   \   0000008C   0600008A           BHI      ??SetCurrentWindow_9
   \   00000090   013F8FE2           ADR      R3,??SetCurrentWindow_1
   \   00000094   0230D3E7           LDRB     R3,[R3, R2]
   \   00000098   03F18FE0           ADD      PC,PC,R3, LSL #+2
   \                     ??SetCurrentWindow_1:
   \   0000009C   02020202           DC8      +2,+2,+2,+2
   \   000000A0   02020202           DC8      +2,+2,+2,+2
   \   000000A4   02020000           DC8      +2,+2,+0,+0
    282          			case TSN_TANKFARM_APP   :
    283          			case TSN_CARGO_APP      :
    284          			case TSN_BALLAST_APP    :
    285          			case TSN_SERVICE_APP    :
    286          			case TSN_TANKPRESS_APP  :
    287          			case TSN_LINEPRESS_APP  :
    288          			case TSN_TEMP_APP       :
    289          			case TSN_LEVELSWITCH_APP:
    290          			case TSN_WATERINGR_APP  :
    291          			case TSN_VOIDSPACE_APP  :
    292          				LastApplIndex = index;
   \                     ??SetCurrentWindow_10:
   \   000000A8   008080E5           STR      R8,[R0, #+0]
    293          				break;
    294          			default:
    295          				break;
    296          			}
    297          			switch ( NewAppList[index] ) {
   \                     ??SetCurrentWindow_9:
   \   000000AC   541091E5           LDR      R1,[R1, #+84]
   \   000000B0   291041E2           SUB      R1,R1,#+41
   \   000000B4   8C1D41E2           SUB      R1,R1,#+8960
   \   000000B8   0B0051E3           CMP      R1,#+11
   \   000000BC   1E00008A           BHI      ??SetCurrentWindow_11
   \   000000C0   012F8FE2           ADR      R2,??SetCurrentWindow_2
   \   000000C4   0120D2E7           LDRB     R2,[R2, R1]
   \   000000C8   02F18FE0           ADD      PC,PC,R2, LSL #+2
   \                     ??SetCurrentWindow_2:
   \   000000CC   0406080A           DC8      +4,+6,+8,+10
   \   000000D0   0C0E1012           DC8      +12,+14,+16,+18
   \   000000D4   14021618           DC8      +20,+2,+22,+24
    298          			case TSN_TANKFARM_APP:
    299          				CurrentWinID  = TDU_TANKFARM_WIN;
   \                     ??SetCurrentWindow_12:
   \   000000D8   101089E3           ORR      R1,R9,#0x10
   \   000000DC   140000EA           B        ??SetCurrentWindow_13
    300          				LastApplIndex = index;
    301          				break;
    302          			case TSN_CARGO_APP:
    303          				CurrentWinID  = TDU_CARGO_WIN;
   \                     ??SetCurrentWindow_14:
   \   000000E0   061089E3           ORR      R1,R9,#0x6
   \   000000E4   120000EA           B        ??SetCurrentWindow_13
    304          				LastApplIndex = index;
    305          				break;
    306          			case TSN_BALLAST_APP:
    307          				CurrentWinID  = TDU_BALLAST_WIN;
   \                     ??SetCurrentWindow_15:
   \   000000E8   871EA0E3           MOV      R1,#+2160
   \   000000EC   100000EA           B        ??SetCurrentWindow_13
    308          				LastApplIndex = index;
    309          				break;
    310          			case TSN_SERVICE_APP:
    311          				CurrentWinID  = TDU_SERVICE_WIN;
   \                     ??SetCurrentWindow_16:
   \   000000F0   081089E2           ADD      R1,R9,#+8
   \   000000F4   0E0000EA           B        ??SetCurrentWindow_13
    312          				LastApplIndex = index;
    313          				break;
    314          			case TSN_TANKPRESS_APP:
    315          				CurrentWinID  = TDU_TANKPRESS_WIN;
   \                     ??SetCurrentWindow_17:
   \   000000F8   091089E2           ADD      R1,R9,#+9
   \   000000FC   0C0000EA           B        ??SetCurrentWindow_13
    316          				LastApplIndex = index;
    317          				break;
    318          			case TSN_LINEPRESS_APP:
    319          				CurrentWinID  = TDU_LINEPRESS_WIN;
   \                     ??SetCurrentWindow_18:
   \   00000100   0A1089E2           ADD      R1,R9,#+10
   \   00000104   0A0000EA           B        ??SetCurrentWindow_13
    320          				LastApplIndex = index;
    321          				break;
    322          			case TSN_TEMP_APP:
    323          				CurrentWinID  = TDU_TEMP_WIN;
   \                     ??SetCurrentWindow_19:
   \   00000108   0B1089E2           ADD      R1,R9,#+11
   \   0000010C   080000EA           B        ??SetCurrentWindow_13
    324          				LastApplIndex = index;
    325          				break;
    326          			case TSN_LEVELSWITCH_APP:
    327          				CurrentWinID  = TDU_LEVELSWITCH_WIN;
   \                     ??SetCurrentWindow_20:
   \   00000110   0C1089E2           ADD      R1,R9,#+12
   \   00000114   060000EA           B        ??SetCurrentWindow_13
    328          				LastApplIndex = index;
    329          				break;
    330          			case TSN_WATERINGR_APP:
    331          				CurrentWinID  = TDU_WATERINGR_WIN;
   \                     ??SetCurrentWindow_21:
   \   00000118   0E1089E2           ADD      R1,R9,#+14
   \   0000011C   040000EA           B        ??SetCurrentWindow_13
    332          				LastApplIndex = index;
    333          				break;
    334          			case TSN_VOIDSPACE_APP:
    335          				CurrentWinID  = TDU_VOIDSPACE_WIN;
   \                     ??SetCurrentWindow_22:
   \   00000120   0F1089E2           ADD      R1,R9,#+15
   \   00000124   020000EA           B        ??SetCurrentWindow_13
    336          				LastApplIndex = index;
    337          				break;
    338          			case TSN_TANK_CLEANING_APP:
    339          				CurrentWinID  = TDU_TANK_CLEANING_WIN;
   \                     ??SetCurrentWindow_23:
   \   00000128   3C1089E2           ADD      R1,R9,#+60
   \   0000012C   000000EA           B        ??SetCurrentWindow_13
    340          				LastApplIndex = index;
    341          				break;
    342          			case TSN_TANK_CLEANING_DETAILS_APP:
    343          				CurrentWinID = TDU_TANK_CLEANING_DETAILS_WIN;
   \                     ??SetCurrentWindow_24:
   \   00000130   3D1089E2           ADD      R1,R9,#+61
   \                     ??SetCurrentWindow_13:
   \   00000134   001084E5           STR      R1,[R4, #+0]
    344          				LastApplIndex = index;
   \   00000138   008080E5           STR      R8,[R0, #+0]
    345          				break;
    346          			default:
    347          				break;
    348          			}
    349          			if ( OrgWinId != CurrentWinID ) {
   \                     ??SetCurrentWindow_11:
   \   0000013C   000094E5           LDR      R0,[R4, #+0]
   \   00000140   000055E1           CMP      R5,R0
   \   00000144   1700000A           BEQ      ??SetCurrentWindow_7
    350          				PreviousWinID = CurrentWinID;
   \   00000148   000094E5           LDR      R0,[R4, #+0]
   \   0000014C   000087E5           STR      R0,[R7, #+0]
   \   00000150   140000EA           B        ??SetCurrentWindow_7
    351          			}
    352          
    353          		} else {
    354          			GiveConfigWarning((AnsiString)FindDictionaryWord(L_WORD91).c_str());	// Unknown error in Configuration.
   \                     ??SetCurrentWindow_8:
   \   00000154   5B10A0E3           MOV      R1,#+91
   \   00000158   0D00A0E1           MOV      R0,SP
   \   0000015C   ........           _BLF     ??FindDictionaryWord,??FindDictionaryWord??rA
   \   00000160   18009DE5           LDR      R0,[SP, #+24]
   \   00000164   100050E3           CMP      R0,#+16
   \   00000168   04109D25           LDRCS    R1,[SP, #+4]
   \   0000016C   1C008DE2           ADD      R0,SP,#+28
   \   00000170   04108D32           ADDCC    R1,SP,#+4
   \   00000174   ........           _BLF     ??AnsiString_1,??AnsiString??rA_1
   \   00000178   ........           _BLF     ??GiveConfigWarning,??GiveConfigWarning??rA
   \   0000017C   0020A0E3           MOV      R2,#+0
   \   00000180   0110A0E3           MOV      R1,#+1
   \   00000184   1C008DE2           ADD      R0,SP,#+28
   \   00000188   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   0000018C   0020A0E3           MOV      R2,#+0
   \   00000190   0110A0E3           MOV      R1,#+1
   \   00000194   0D00A0E1           MOV      R0,SP
   \   00000198   ........           _BLF     ??_Tidy,??_Tidy??rA
    355          			PreviousWinID = CurrentWinID;
   \                     ??SetCurrentWindow_5:
   \   0000019C   000094E5           LDR      R0,[R4, #+0]
   \   000001A0   000087E5           STR      R0,[R7, #+0]
    356          			CurrentWinID = TDU_SYSTEM_WIN;
   \                     ??SetCurrentWindow_4:
   \   000001A4   009084E5           STR      R9,[R4, #+0]
    357          		}
    358          	}
    359          	SetWindow(CurrentWinID);
   \                     ??SetCurrentWindow_7:
   \   000001A8   001094E5           LDR      R1,[R4, #+0]
   \   000001AC   0600A0E1           MOV      R0,R6
   \   000001B0   ........           BL       ??SetWindow
    360          	if ( SystemWindow && ( OrgWinId != CurrentWinID) ) {
   \   000001B4   ........           LDR      R0,??DataTable10  ;; SystemWindow
   \   000001B8   000090E5           LDR      R0,[R0, #+0]
   \   000001BC   000050E3           CMP      R0,#+0
   \   000001C0   00109415           LDRNE    R1,[R4, #+0]
   \   000001C4   01005511           CMPNE    R5,R1
   \   000001C8   0000000A           BEQ      ??SetCurrentWindow_25
    361          		SystemWindow->SetModifiedFlag();
   \   000001CC   ........           _BLF     ??SetModifiedFlag,??SetModifiedFlag??rA
    362          	}
    363          
    364          	UnProtect();
   \                     ??SetCurrentWindow_25:
   \   000001D0   ........           _BLF     ??UnProtect,??UnProtect??rA
    365          }
   \   000001D4   38D08DE2           ADD      SP,SP,#+56
   \   000001D8   F043BDE8           POP      {R4-R9,LR}
   \   000001DC   1EFF2FE1           BX       LR               ;; return
    366          

   \                                 In segment CODE, align 4, keep-with-next
    367          void TDUMainWin::SetPreviousWindow(void)
    368          {
   \                     ??SetPreviousWindow:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
    369          	Protect();
    370          
    371          	if ( CurrentWinID == TDU_CONFIG_MAIN_WIN ) {
   \   00000004   ........           LDR      R5,??DataTable11  ;; CurrentWinID
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   ........           _BLF     ??Protect,??Protect??rA
   \   00000010   000095E5           LDR      R0,[R5, #+0]
   \   00000014   8210A0E3           MOV      R1,#+130
   \   00000018   801E81E3           ORR      R1,R1,#0x800
   \   0000001C   010050E1           CMP      R0,R1
   \   00000020   0300001A           BNE      ??SetPreviousWindow_1
    372          		WM_BringToBottom(ConfigWindow->WinHandl);
   \   00000024   ........           LDR      R0,??DataTable12  ;; ConfigWindow
   \   00000028   000090E5           LDR      R0,[R0, #+0]
   \   0000002C   F000D0E1           LDRSH    R0,[R0, #+0]
   \   00000030   ........           _BLF     WM_BringToBottom,??WM_BringToBottom??rA
    373          	}
    374          	if ( CurrentWinID == TDU_CALIBRATE_WIN ) {
   \                     ??SetPreviousWindow_1:
   \   00000034   000095E5           LDR      R0,[R5, #+0]
   \   00000038   8C10A0E3           MOV      R1,#+140
   \   0000003C   801E81E3           ORR      R1,R1,#0x800
   \   00000040   010050E1           CMP      R0,R1
   \   00000044   0300001A           BNE      ??SetPreviousWindow_2
    375          		WM_BringToBottom(CalibrateScreen->WinHandl);
   \   00000048   ........           LDR      R0,??DataTable13  ;; CalibrateScreen
   \   0000004C   000090E5           LDR      R0,[R0, #+0]
   \   00000050   FA02D0E1           LDRSH    R0,[R0, #+42]
   \   00000054   ........           _BLF     WM_BringToBottom,??WM_BringToBottom??rA
    376          	}
    377          	if ( (CurrentWinID == TDU_SYSTEM_WIN) && (PreviousWinID == TDU_SYSTEM_WIN) ) {
   \                     ??SetPreviousWindow_2:
   \   00000058   ........           LDR      R0,??DataTable14  ;; PreviousWinID
   \   0000005C   002095E5           LDR      R2,[R5, #+0]
   \   00000060   6910A0E3           MOV      R1,#+105
   \   00000064   801E81E3           ORR      R1,R1,#0x800
   \   00000068   010052E1           CMP      R2,R1
   \   0000006C   00209005           LDREQ    R2,[R0, #+0]
   \   00000070   01005201           CMPEQ    R2,R1
   \   00000074   0400001A           BNE      ??SetPreviousWindow_3
    378          		SetCurrentWindow(LastApplIndex);
   \   00000078   ........           LDR      R0,??DataTable15  ;; LastApplIndex
   \   0000007C   001090E5           LDR      R1,[R0, #+0]
   \   00000080   0400A0E1           MOV      R0,R4
   \   00000084   ........           BL       ??SetCurrentWindow
   \   00000088   020000EA           B        ??SetPreviousWindow_4
    379          	} else {
    380          		SetWindow(PreviousWinID);
   \                     ??SetPreviousWindow_3:
   \   0000008C   001090E5           LDR      R1,[R0, #+0]
   \   00000090   0400A0E1           MOV      R0,R4
   \   00000094   ........           BL       ??SetWindow
    381          	}
    382          	UnProtect();
   \                     ??SetPreviousWindow_4:
   \   00000098   ........           _BLF     ??UnProtect,??UnProtect??rA
    383          }
   \   0000009C   3040BDE8           POP      {R4,R5,LR}
   \   000000A0   1EFF2FE1           BX       LR               ;; return
    384          

   \                                 In segment CODE, align 4, keep-with-next
    385          void TDUMainWin::cbEventHandler(WM_MESSAGE * pMsg)
    386          {
   \                     ??cbEventHandler:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0040A0E1           MOV      R4,R0
    387          	//WM_HWIN hWin = pMsg->hWin;
    388          	switch ( pMsg->MsgId ) {
   \   00000008   000094E5           LDR      R0,[R4, #+0]
   \   0000000C   010050E2           SUBS     R0,R0,#+1
   \   00000010   0E005012           SUBSNE   R0,R0,#+14
   \   00000014   0200000A           BEQ      ??cbEventHandler_2
   \   00000018   170050E2           SUBS     R0,R0,#+23
   \   0000001C   0400000A           BEQ      ??cbEventHandler_3
   \   00000020   350000EA           B        ??cbEventHandler_4
    389          	case WM_PAINT:
    390          		GUI_SetBkColor(TDU_C_HW_BACK);GUI_Clear();
   \                     ??cbEventHandler_2:
   \   00000024   FF08A0E3           MOV      R0,#+16711680
   \   00000028   ........           _BLF     GUI_SetBkColor,??GUI_SetBkColor??rA
   \   0000002C   ........           _BLF     GUI_Clear,??GUI_Clear??rA
   \   00000030   140000EA           B        ??cbEventHandler_5
    391          		break;
    392          	case WM_CREATE:
    393          		{
    394          			GUI_SetBkColor(TDU_C_HW_BACK);GUI_Clear();
    395          		}
    396          		break;
    397          	case WM_NOTIFY_PARENT:
    398          		{
    399          			int NCode, Id;
    400          			Id    = WM_GetId(pMsg->hWinSrc);		/* Id of widget */
   \                     ??cbEventHandler_3:
   \   00000034   F600D4E1           LDRSH    R0,[R4, #+6]
   \   00000038   ........           _BLF     WM_GetId,??WM_GetId??rA
   \   0000003C   0010A0E1           MOV      R1,R0
    401          			NCode = pMsg->Data.v;								/* Notification code */
    402          			switch ( NCode ) {
   \   00000040   080094E5           LDR      R0,[R4, #+8]
   \   00000044   010050E3           CMP      R0,#+1
   \   00000048   0E00001A           BNE      ??cbEventHandler_5
    403          			
    404          			case WM_NOTIFICATION_CLICKED:		/* React only if pressed */
    405          				{
    406          					switch ( Id ) {
   \   0000004C   B4009FE5           LDR      R0,??cbEventHandler_6  ;; MainWindow
   \   00000050   C91041E2           SUB      R1,R1,#+201
   \   00000054   000090E5           LDR      R0,[R0, #+0]
   \   00000058   801E41E2           SUB      R1,R1,#+2048
   \   0000005C   070051E3           CMP      R1,#+7
   \   00000060   0800008A           BHI      ??cbEventHandler_5
   \   00000064   012F8FE2           ADR      R2,??cbEventHandler_1
   \   00000068   0120D2E7           LDRB     R2,[R2, R1]
   \   0000006C   02F18FE0           ADD      PC,PC,R2, LSL #+2
   \                     ??cbEventHandler_1:
   \   00000070   11010307           DC8      +17,+1,+3,+7
   \   00000074   090B0D0F           DC8      +9,+11,+13,+15
    407          					case TDU_BUTTON_ID_MW1:
    408          						MainWindow->SetCurrentWindow(0);
   \                     ??cbEventHandler_7:
   \   00000078   0010A0E3           MOV      R1,#+0
   \   0000007C   000000EA           B        ??cbEventHandler_8
    409          						break;
    410          					case TDU_BUTTON_ID_MW2:
    411          						MainWindow->SetCurrentWindow(1);
   \                     ??cbEventHandler_9:
   \   00000080   0110A0E3           MOV      R1,#+1
   \                     ??cbEventHandler_8:
   \   00000084   ........           BL       ??SetCurrentWindow
   \                     ??cbEventHandler_5:
   \   00000088   1040BDE8           POP      {R4,LR}
   \   0000008C   1EFF2FE1           BX       LR
    412          						break;
    413          					case TDU_BUTTON_ID_MW3:
    414          						MainWindow->SetCurrentWindow(2);
   \                     ??cbEventHandler_10:
   \   00000090   0210A0E3           MOV      R1,#+2
   \   00000094   FAFFFFEA           B        ??cbEventHandler_8
    415          						break;
    416          					case TDU_BUTTON_ID_MW4:
    417          						MainWindow->SetCurrentWindow(3);
   \                     ??cbEventHandler_11:
   \   00000098   0310A0E3           MOV      R1,#+3
   \   0000009C   F8FFFFEA           B        ??cbEventHandler_8
    418          						break;
    419          					case TDU_BUTTON_ID_MW5:
    420          						MainWindow->SetCurrentWindow(4);
   \                     ??cbEventHandler_12:
   \   000000A0   0410A0E3           MOV      R1,#+4
   \   000000A4   F6FFFFEA           B        ??cbEventHandler_8
    421          						break;
    422          					case TDU_BUTTON_ID_MW6:
    423          						MainWindow->SetCurrentWindow(5);
   \                     ??cbEventHandler_13:
   \   000000A8   0510A0E3           MOV      R1,#+5
   \   000000AC   F4FFFFEA           B        ??cbEventHandler_8
    424          						break;
    425          					case TDU_BUTTON_ID_MW7:
    426          						// System button
    427          						MainWindow->SetCurrentWindow(6);
   \                     ??cbEventHandler_14:
   \   000000B0   0610A0E3           MOV      R1,#+6
   \   000000B4   F2FFFFEA           B        ??cbEventHandler_8
    428          						break;
    429          					case TDU_BUTTON_ID_MW0:
    430          						// Alarm button
    431          						MainWindow->SetCurrentWindow(7);
   \                     ??cbEventHandler_15:
   \   000000B8   0710A0E3           MOV      R1,#+7
   \   000000BC   ........           BL       ??SetCurrentWindow
    432          						if ( AlarmCriticalComFailure::ComFailure ) {
   \   000000C0   44009FE5           LDR      R0,??cbEventHandler_6+0x4  ;; ??ComFailure
   \   000000C4   0000D0E5           LDRB     R0,[R0, #+0]
   \   000000C8   000050E3           CMP      R0,#+0
   \   000000CC   0800000A           BEQ      ??cbEventHandler_16
    433          							GiveRelayDutyMessage(0,RELAY_MSG_OFF,0,0);
   \   000000D0   0030A0E3           MOV      R3,#+0
   \   000000D4   0020A0E3           MOV      R2,#+0
   \   000000D8   0210A0E1           MOV      R1,R2
   \   000000DC   0100A0E1           MOV      R0,R1
   \   000000E0   ........           _BLF     ??GiveRelayDutyMessage,??GiveRelayDutyMessage??rA
    434          							AlarmBasic::AlarmSilence = true;
   \   000000E4   24009FE5           LDR      R0,??cbEventHandler_6+0x8  ;; ??AlarmSilence
   \   000000E8   0110A0E3           MOV      R1,#+1
   \   000000EC   0010C0E5           STRB     R1,[R0, #+0]
   \   000000F0   E4FFFFEA           B        ??cbEventHandler_5
    435          						} else {
    436          							ANPRO10_SendAlarmSilence();
   \                     ??cbEventHandler_16:
   \   000000F4   ........           _BLF     ??ANPRO10_SendAlarmSilence,??ANPRO10_SendAlarmSilence??rA
   \   000000F8   E2FFFFEA           B        ??cbEventHandler_5
    437          						}
    438          						break;
    439          					}
    440          				}
    441          				break;
    442          			}
    443          		}
    444          		break;
    445          	default:
    446          		WM_DefaultProc(pMsg);
   \                     ??cbEventHandler_4:
   \   000000FC   0400A0E1           MOV      R0,R4
   \   00000100   ........           _BLF     WM_DefaultProc,??WM_DefaultProc??rA
    447          	}
    448          }
   \                     ??cbEventHandler_17:
   \   00000104   DFFFFFEA           B        ??cbEventHandler_5
   \                     ??cbEventHandler_6:
   \   00000108   ........           DC32     MainWindow
   \   0000010C   ........           DC32     ??ComFailure
   \   00000110   ........           DC32     ??AlarmSilence
    449          

   \                                 In segment CODE, align 4, keep-with-next
    450          void TDUMainWin::SetBitmap(void)
    451          {
   \                     ??SetBitmap:
   \   00000000   704F2DE9           PUSH     {R4-R6,R8-R11,LR}
    452          	bool CargoSelected        = false;
    453          	bool BallastSelected      = false;
    454          	bool ServiceSelected      = false;
    455          	bool TankPressSelected    = false;
    456          	bool LinePressSelected    = false;
    457          	bool TempSelected         = false;
    458          	bool WaterIngrSelected    = false;
    459          	bool LevelSwitchSelected  = false;
    460          	bool VoidSpaceSelected    = false;
    461          	bool TankFramSelected     = false;
    462          	bool TankCleaningSelected = false;
    463          	int ButListIndex = 0;
   \   00000004   A0979FE5           LDR      R9,??SetBitmap_2  ;; ??ObjVector
   \   00000008   0050A0E1           MOV      R5,R0
   \   0000000C   ........           LDR      R0,??DataTable17  ;; ??PROProjectInfoPtr
   \   00000010   10D04DE2           SUB      SP,SP,#+16
   \   00000014   000090E5           LDR      R0,[R0, #+0]
   \   00000018   0010A0E3           MOV      R1,#+0
   \   0000001C   04108DE5           STR      R1,[SP, #+4]
   \   00000020   0080A0E3           MOV      R8,#+0
   \   00000024   00108DE5           STR      R1,[SP, #+0]
   \   00000028   0C10CDE5           STRB     R1,[SP, #+12]
   \   0000002C   0160A0E1           MOV      R6,R1
   \   00000030   0140A0E3           MOV      R4,#+1
   \   00000034   000050E3           CMP      R0,#+0
   \   00000038   0800000A           BEQ      ??SetBitmap_3
    464          
    465          	if ( PROProjectInfo::PROProjectInfoPtr ) {
    466          // switch 1
    467          		int NumberOfConfiguredApp = PROProjectInfo::PROProjectInfoPtr->NumberOfApp;
   \   0000003C   A80090E5           LDR      R0,[R0, #+168]
   \   00000040   08008DE5           STR      R0,[SP, #+8]
    468          		if ( NumberOfConfiguredApp>MAX_APPL )	NumberOfConfiguredApp = MAX_APPL;
   \   00000044   070050E3           CMP      R0,#+7
   \   00000048   0610A0A3           MOVGE    R1,#+6
   \   0000004C   08108DA5           STRGE    R1,[SP, #+8]
    469          		for ( int AppListIndex=0; AppListIndex<NumberOfConfiguredApp; AppListIndex++ ) {
   \   00000050   08009DE5           LDR      R0,[SP, #+8]
   \   00000054   00A0A0E3           MOV      R10,#+0
   \   00000058   010050E3           CMP      R0,#+1
   \   0000005C   240000AA           BGE      ??SetBitmap_4
    470          			switch ( PROProjectInfo::PROProjectInfoPtr->ApplicationList[AppListIndex] ) {
    471          			case TSN_TANKFARM_APP:
    472          				if ( !PROCargoTank::ObjVector.empty() ) {
    473          					TankFramSelected = true;
    474          					NewAppList[ButListIndex] = TSN_TANKFARM_APP;
    475          					BUTTON_SetBitmapEx(MainWinButton[ButListIndex++], 0,&bmLTank,1,1);
    476          				}
    477          				break;
    478          			case TSN_CARGO_APP:
    479          				if ( !PROCargoTank::ObjVector.empty() ) {
    480          					CargoSelected = true;
    481          					NewAppList[ButListIndex] = TSN_CARGO_APP;
    482          					BUTTON_SetBitmapEx(MainWinButton[ButListIndex++], 0,&bmButtonCargo,1,1);
    483          				} else {
    484          
    485          				}
    486          				break;
    487          			case TSN_BALLAST_APP:
    488          				if ( !PROBallastTank::ObjVector.empty() ) {
    489          					BallastSelected = true;
    490          					NewAppList[ButListIndex] = TSN_BALLAST_APP;
    491          					BUTTON_SetBitmapEx(MainWinButton[ButListIndex++], 0,&bmButtonBallast,1,1);
    492          				}
    493          				break;
    494          			case TSN_SERVICE_APP:
    495          				if ( !PROServiceTank::ObjVector.empty() ) {
    496          					ServiceSelected = true;
    497          					NewAppList[ButListIndex] = TSN_SERVICE_APP;
    498          					BUTTON_SetBitmapEx(MainWinButton[ButListIndex++], 0,&bmButtonService,1,1);
    499          				}
    500          				break;
    501          			case TSN_TANKPRESS_APP:
    502          				if ( !PROTankPressure::ObjVector.empty() ) {
    503          					TankPressSelected = true;
    504          					NewAppList[ButListIndex] = TSN_TANKPRESS_APP;
    505          					BUTTON_SetBitmapEx(MainWinButton[ButListIndex++], 0,&bmButtonTankPress,1,1);
    506          				}
    507          				break;
    508          			case TSN_LINEPRESS_APP:
    509          				if ( !PROLinePressure::ObjVector.empty() ) {
    510          					LinePressSelected = true;
    511          					NewAppList[ButListIndex] = TSN_LINEPRESS_APP;
    512          					BUTTON_SetBitmapEx(MainWinButton[ButListIndex++], 0,&bmButtonCargoLinePress,1,1);
    513          				}
    514          				break;
    515          			case TSN_TEMP_APP:
    516          				if ( !PROTemperature::ObjVector.empty() ) {
    517          					TempSelected = true;
    518          					NewAppList[ButListIndex] = TSN_TEMP_APP;
    519          					BUTTON_SetBitmapEx(MainWinButton[ButListIndex++], 0,&bmButtonTemperature,1,1);
    520          				}
    521          				break;
    522          			case TSN_LEVELSWITCH_APP:
    523          				if ( !PROLevelSwitch::ObjVector.empty() ) {
    524          					LevelSwitchSelected = true;
    525          					NewAppList[ButListIndex] = TSN_LEVELSWITCH_APP;
    526          					BUTTON_SetBitmapEx(MainWinButton[ButListIndex++], 0,&bmButtonHighLevel,1,1);
    527          				}
    528          				break;
    529          			case TSN_WATERINGR_APP:
    530          				if ( !PROWaterIngress::ObjVector.empty() ) {
    531          					WaterIngrSelected = true;
    532          					NewAppList[ButListIndex] = TSN_WATERINGR_APP;
    533          					BUTTON_SetBitmapEx(MainWinButton[ButListIndex++], 0,&bmButtonWaterIngress,1,1);
    534          				}
    535          				break;
    536          			case TSN_VOIDSPACE_APP:
    537          				if ( !PROVoidSpace::ObjVector.empty() ) {
    538          					WaterIngrSelected = true;
    539          					NewAppList[ButListIndex] = TSN_VOIDSPACE_APP;
    540          					BUTTON_SetBitmapEx(MainWinButton[ButListIndex++], 0,&bmButtonVoidSpace,1,1);
    541          				}
    542          				break;
    543          			case TSN_TANK_CLEANING_APP:
    544          				if ( !PROTankWashingMachine::ObjectSet.empty() ) {
    545          					TankCleaningSelected = true;
    546          					NewAppList[ButListIndex] = TSN_TANK_CLEANING_APP;
    547          					BUTTON_SetBitmapEx(MainWinButton[ButListIndex++], 0, &bmButtonTankwash,1,1);
    548          				}
    549          				break;
    550          			}
    551          		}//end Switch
    552          	}//end for(NumberOfConfiguredApp)
    553          	if ( (PROProjectInfo::ProjectType==2) ) {
   \                     ??SetBitmap_3:
   \   00000060   48079FE5           LDR      R0,??SetBitmap_2+0x4  ;; ??ObjVector_1 + 4
   \   00000064   48179FE5           LDR      R1,??SetBitmap_2+0x8  ;; ??ObjVector_1
   \   00000068   48379FE5           LDR      R3,??SetBitmap_2+0xC  ;; ??ProjectType
   \   0000006C   000090E5           LDR      R0,[R0, #+0]
   \   00000070   001091E5           LDR      R1,[R1, #+0]
   \   00000074   003093E5           LDR      R3,[R3, #+0]
   \   00000078   010040E0           SUB      R0,R0,R1
   \   0000007C   2021A0E1           LSR      R2,R0,#+2
   \   00000080   860085E0           ADD      R0,R5,R6, LSL #+1
   \   00000084   061185E0           ADD      R1,R5,R6, LSL #+2
   \   00000088   01A086E2           ADD      R10,R6,#+1
   \   0000008C   020053E3           CMP      R3,#+2
   \   00000090   C800001A           BNE      ??SetBitmap_5
    554          		if ( (ButListIndex<MAX_APPL) && !PROCargoTank::ObjVector.empty() && !TankFramSelected ) {
   \   00000094   060056E3           CMP      R6,#+6
   \   00000098   B80000AA           BGE      ??SetBitmap_6
   \   0000009C   000052E3           CMP      R2,#+0
   \   000000A0   0020A013           MOVNE    R2,#+0
   \   000000A4   0120A003           MOVEQ    R2,#+1
   \   000000A8   A50000EA           B        ??SetBitmap_7
   \                     ??SetBitmap_8:
   \   000000AC   08279FE5           LDR      R2,??SetBitmap_2+0x10  ;; ??ObjectSet + 16
   \   000000B0   002092E5           LDR      R2,[R2, #+0]
   \   000000B4   000052E3           CMP      R2,#+0
   \   000000B8   0C00000A           BEQ      ??SetBitmap_9
   \   000000BC   0C40CDE5           STRB     R4,[SP, #+12]
   \   000000C0   3320A0E3           MOV      R2,#+51
   \   000000C4   8C2D82E3           ORR      R2,R2,#0x2300
   \   000000C8   542081E5           STR      R2,[R1, #+84]
   \   000000CC   EC269FE5           LDR      R2,??SetBitmap_2+0x14  ;; bmButtonTankwash
   \                     ??SetBitmap_10:
   \   000000D0   0110A0E3           MOV      R1,#+1
   \   000000D4   02002DE9           PUSH     {R1}
   \                     ??SetBitmap_11:
   \   000000D8   0130A0E1           MOV      R3,R1
   \   000000DC   F204D0E1           LDRSH    R0,[R0, #+66]
   \   000000E0   0010A0E3           MOV      R1,#+0
   \   000000E4   0B60A0E1           MOV      R6,R11
   \   000000E8   ........           _BLF     BUTTON_SetBitmapEx,??BUTTON_SetBitmapEx??rA
   \   000000EC   04D08DE2           ADD      SP,SP,#+4
   \                     ??SetBitmap_9:
   \   000000F0   01A08AE2           ADD      R10,R10,#+1
   \                     ??SetBitmap_4:
   \   000000F4   08009DE5           LDR      R0,[SP, #+8]
   \   000000F8   00005AE1           CMP      R10,R0
   \   000000FC   D7FFFFAA           BGE      ??SetBitmap_3
   \   00000100   ........           LDR      R3,??DataTable17  ;; ??PROProjectInfoPtr
   \   00000104   A4069FE5           LDR      R0,??SetBitmap_2+0x4  ;; ??ObjVector_1 + 4
   \   00000108   A4169FE5           LDR      R1,??SetBitmap_2+0x8  ;; ??ObjVector_1
   \   0000010C   003093E5           LDR      R3,[R3, #+0]
   \   00000110   000090E5           LDR      R0,[R0, #+0]
   \   00000114   001091E5           LDR      R1,[R1, #+0]
   \   00000118   0A3183E0           ADD      R3,R3,R10, LSL #+2
   \   0000011C   AC3093E5           LDR      R3,[R3, #+172]
   \   00000120   010040E0           SUB      R0,R0,R1
   \   00000124   2021A0E1           LSR      R2,R0,#+2
   \   00000128   860085E0           ADD      R0,R5,R6, LSL #+1
   \   0000012C   061185E0           ADD      R1,R5,R6, LSL #+2
   \   00000130   01B086E2           ADD      R11,R6,#+1
   \   00000134   293043E2           SUB      R3,R3,#+41
   \   00000138   8C3D43E2           SUB      R3,R3,#+8960
   \   0000013C   0A0053E3           CMP      R3,#+10
   \   00000140   EAFFFF8A           BHI      ??SetBitmap_9
   \   00000144   01CF8FE2           ADR      R12,??SetBitmap_1
   \   00000148   D3C09CE1           LDRSB    R12,[R12, R3]
   \   0000014C   0CF18FE0           ADD      PC,PC,R12, LSL #+2
   \                     ??SetBitmap_1:
   \   00000150   0A121F2C           DC8      +10,+18,+31,+44
   \   00000154   3946535E           DC8      +57,+70,+83,+94
   \   00000158   6D02D600           DC8      +109,+2,+214,+0
   \                     ??SetBitmap_12:
   \   0000015C   000052E3           CMP      R2,#+0
   \   00000160   E2FFFF0A           BEQ      ??SetBitmap_9
   \   00000164   0140CDE5           STRB     R4,[SP, #+1]
   \   00000168   3220A0E3           MOV      R2,#+50
   \   0000016C   8C2D82E3           ORR      R2,R2,#0x2300
   \   00000170   542081E5           STR      R2,[R1, #+84]
   \   00000174   48269FE5           LDR      R2,??SetBitmap_2+0x18  ;; bmLTank
   \   00000178   D4FFFFEA           B        ??SetBitmap_10
   \                     ??SetBitmap_13:
   \   0000017C   000052E3           CMP      R2,#+0
   \   00000180   DAFFFF0A           BEQ      ??SetBitmap_9
   \   00000184   0640CDE5           STRB     R4,[SP, #+6]
   \   00000188   2920A0E3           MOV      R2,#+41
   \   0000018C   8C2D82E3           ORR      R2,R2,#0x2300
   \   00000190   542081E5           STR      R2,[R1, #+84]
   \   00000194   2C269FE5           LDR      R2,??SetBitmap_2+0x1C  ;; bmButtonCargo
   \   00000198   CCFFFFEA           B        ??SetBitmap_10
   \                     ??SetBitmap_14:
   \   0000019C   28269FE5           LDR      R2,??SetBitmap_2+0x20  ;; ??ObjVector_2 + 4
   \   000001A0   28369FE5           LDR      R3,??SetBitmap_2+0x24  ;; ??ObjVector_2
   \   000001A4   002092E5           LDR      R2,[R2, #+0]
   \   000001A8   003093E5           LDR      R3,[R3, #+0]
   \   000001AC   032042E0           SUB      R2,R2,R3
   \   000001B0   2221B0E1           LSRS     R2,R2,#+2
   \   000001B4   CDFFFF0A           BEQ      ??SetBitmap_9
   \   000001B8   0740CDE5           STRB     R4,[SP, #+7]
   \   000001BC   2A20A0E3           MOV      R2,#+42
   \   000001C0   8C2D82E3           ORR      R2,R2,#0x2300
   \   000001C4   542081E5           STR      R2,[R1, #+84]
   \   000001C8   04269FE5           LDR      R2,??SetBitmap_2+0x28  ;; bmButtonBallast
   \   000001CC   BFFFFFEA           B        ??SetBitmap_10
   \                     ??SetBitmap_15:
   \   000001D0   00269FE5           LDR      R2,??SetBitmap_2+0x2C  ;; ??ObjVector_3 + 4
   \   000001D4   00369FE5           LDR      R3,??SetBitmap_2+0x30  ;; ??ObjVector_3
   \   000001D8   002092E5           LDR      R2,[R2, #+0]
   \   000001DC   003093E5           LDR      R3,[R3, #+0]
   \   000001E0   032042E0           SUB      R2,R2,R3
   \   000001E4   2221B0E1           LSRS     R2,R2,#+2
   \   000001E8   C0FFFF0A           BEQ      ??SetBitmap_9
   \   000001EC   0440CDE5           STRB     R4,[SP, #+4]
   \   000001F0   2B20A0E3           MOV      R2,#+43
   \   000001F4   8C2D82E3           ORR      R2,R2,#0x2300
   \   000001F8   542081E5           STR      R2,[R1, #+84]
   \   000001FC   DC259FE5           LDR      R2,??SetBitmap_2+0x34  ;; bmButtonService
   \   00000200   B2FFFFEA           B        ??SetBitmap_10
   \                     ??SetBitmap_16:
   \   00000204   D8259FE5           LDR      R2,??SetBitmap_2+0x38  ;; ??ObjVector_4 + 4
   \   00000208   D8359FE5           LDR      R3,??SetBitmap_2+0x3C  ;; ??ObjVector_4
   \   0000020C   002092E5           LDR      R2,[R2, #+0]
   \   00000210   003093E5           LDR      R3,[R3, #+0]
   \   00000214   032042E0           SUB      R2,R2,R3
   \   00000218   2221B0E1           LSRS     R2,R2,#+2
   \   0000021C   B3FFFF0A           BEQ      ??SetBitmap_9
   \   00000220   0540CDE5           STRB     R4,[SP, #+5]
   \   00000224   2C20A0E3           MOV      R2,#+44
   \   00000228   8C2D82E3           ORR      R2,R2,#0x2300
   \   0000022C   542081E5           STR      R2,[R1, #+84]
   \   00000230   B4259FE5           LDR      R2,??SetBitmap_2+0x40  ;; bmButtonTankPress
   \   00000234   A5FFFFEA           B        ??SetBitmap_10
   \                     ??SetBitmap_17:
   \   00000238   B0259FE5           LDR      R2,??SetBitmap_2+0x44  ;; ??ObjVector_5 + 4
   \   0000023C   B0359FE5           LDR      R3,??SetBitmap_2+0x48  ;; ??ObjVector_5
   \   00000240   002092E5           LDR      R2,[R2, #+0]
   \   00000244   003093E5           LDR      R3,[R3, #+0]
   \   00000248   032042E0           SUB      R2,R2,R3
   \   0000024C   2221B0E1           LSRS     R2,R2,#+2
   \   00000250   A6FFFF0A           BEQ      ??SetBitmap_9
   \   00000254   0240CDE5           STRB     R4,[SP, #+2]
   \   00000258   2D20A0E3           MOV      R2,#+45
   \   0000025C   8C2D82E3           ORR      R2,R2,#0x2300
   \   00000260   542081E5           STR      R2,[R1, #+84]
   \   00000264   8C259FE5           LDR      R2,??SetBitmap_2+0x4C  ;; bmButtonCargoLinePress
   \   00000268   98FFFFEA           B        ??SetBitmap_10
   \                     ??SetBitmap_18:
   \   0000026C   88259FE5           LDR      R2,??SetBitmap_2+0x50  ;; ??ObjVector_6 + 4
   \   00000270   88359FE5           LDR      R3,??SetBitmap_2+0x54  ;; ??ObjVector_6
   \   00000274   002092E5           LDR      R2,[R2, #+0]
   \   00000278   003093E5           LDR      R3,[R3, #+0]
   \   0000027C   032042E0           SUB      R2,R2,R3
   \   00000280   2221B0E1           LSRS     R2,R2,#+2
   \   00000284   99FFFF0A           BEQ      ??SetBitmap_9
   \   00000288   0340CDE5           STRB     R4,[SP, #+3]
   \   0000028C   2E20A0E3           MOV      R2,#+46
   \   00000290   8C2D82E3           ORR      R2,R2,#0x2300
   \   00000294   542081E5           STR      R2,[R1, #+84]
   \   00000298   64259FE5           LDR      R2,??SetBitmap_2+0x58  ;; bmButtonTemperature
   \   0000029C   8BFFFFEA           B        ??SetBitmap_10
   \                     ??SetBitmap_19:
   \   000002A0   042099E5           LDR      R2,[R9, #+4]
   \   000002A4   003099E5           LDR      R3,[R9, #+0]
   \   000002A8   032042E0           SUB      R2,R2,R3
   \   000002AC   2221B0E1           LSRS     R2,R2,#+2
   \   000002B0   8EFFFF0A           BEQ      ??SetBitmap_9
   \   000002B4   0040CDE5           STRB     R4,[SP, #+0]
   \   000002B8   2F20A0E3           MOV      R2,#+47
   \   000002BC   8C2D82E3           ORR      R2,R2,#0x2300
   \   000002C0   542081E5           STR      R2,[R1, #+84]
   \   000002C4   3C259FE5           LDR      R2,??SetBitmap_2+0x5C  ;; bmButtonHighLevel
   \   000002C8   80FFFFEA           B        ??SetBitmap_10
   \                     ??SetBitmap_20:
   \   000002CC   38259FE5           LDR      R2,??SetBitmap_2+0x60  ;; ??ObjVector_7 + 4
   \   000002D0   38359FE5           LDR      R3,??SetBitmap_2+0x64  ;; ??ObjVector_7
   \   000002D4   002092E5           LDR      R2,[R2, #+0]
   \   000002D8   003093E5           LDR      R3,[R3, #+0]
   \   000002DC   032042E0           SUB      R2,R2,R3
   \   000002E0   2221B0E1           LSRS     R2,R2,#+2
   \   000002E4   81FFFF0A           BEQ      ??SetBitmap_9
   \   000002E8   3020A0E3           MOV      R2,#+48
   \   000002EC   8C2D82E3           ORR      R2,R2,#0x2300
   \   000002F0   542081E5           STR      R2,[R1, #+84]
   \   000002F4   18259FE5           LDR      R2,??SetBitmap_2+0x68  ;; bmButtonWaterIngress
   \   000002F8   0410A0E1           MOV      R1,R4
   \   000002FC   02002DE9           PUSH     {R1}
   \   00000300   0180A0E3           MOV      R8,#+1
   \   00000304   73FFFFEA           B        ??SetBitmap_11
   \                     ??SetBitmap_21:
   \   00000308   08259FE5           LDR      R2,??SetBitmap_2+0x6C  ;; ??ObjVector_8 + 4
   \   0000030C   08359FE5           LDR      R3,??SetBitmap_2+0x70  ;; ??ObjVector_8
   \   00000310   002092E5           LDR      R2,[R2, #+0]
   \   00000314   003093E5           LDR      R3,[R3, #+0]
   \   00000318   032042E0           SUB      R2,R2,R3
   \   0000031C   2221B0E1           LSRS     R2,R2,#+2
   \   00000320   72FFFF0A           BEQ      ??SetBitmap_9
   \   00000324   3120A0E3           MOV      R2,#+49
   \   00000328   8C2D82E3           ORR      R2,R2,#0x2300
   \   0000032C   542081E5           STR      R2,[R1, #+84]
   \   00000330   E8249FE5           LDR      R2,??SetBitmap_2+0x74  ;; bmButtonVoidSpace
   \   00000334   0410A0E1           MOV      R1,R4
   \   00000338   02002DE9           PUSH     {R1}
   \   0000033C   0180A0E3           MOV      R8,#+1
   \   00000340   64FFFFEA           B        ??SetBitmap_11
   \                     ??SetBitmap_7:
   \   00000344   0130DDE5           LDRB     R3,[SP, #+1]
   \   00000348   022093E1           ORRS     R2,R3,R2
   \   0000034C   0D00001A           BNE      ??SetBitmap_22
    555          			TankFramSelected = true;
    556          			NewAppList[ButListIndex] = TSN_TANKFARM_APP;
   \   00000350   3220A0E3           MOV      R2,#+50
   \   00000354   8C2D82E3           ORR      R2,R2,#0x2300
   \   00000358   542081E5           STR      R2,[R1, #+84]
    557          			BUTTON_SetBitmapEx(MainWinButton[ButListIndex++], 0,&bmLTank,1,1);
   \   0000035C   60249FE5           LDR      R2,??SetBitmap_2+0x18  ;; bmLTank
   \   00000360   0110A0E3           MOV      R1,#+1
   \   00000364   02002DE9           PUSH     {R1}
   \   00000368   F204D0E1           LDRSH    R0,[R0, #+66]
   \   0000036C   0130A0E1           MOV      R3,R1
   \   00000370   0010A0E3           MOV      R1,#+0
   \   00000374   ........           _BLF     BUTTON_SetBitmapEx,??BUTTON_SetBitmapEx??rA
   \   00000378   0A60A0E1           MOV      R6,R10
   \   0000037C   04D08DE2           ADD      SP,SP,#+4
    558          		}
    559          		if ( (ButListIndex<MAX_APPL) && !PROLevelSwitch::ObjVector.empty() && !LevelSwitchSelected ) {
   \                     ??SetBitmap_6:
   \   00000380   060056E3           CMP      R6,#+6
   \   00000384   380000AA           BGE      ??SetBitmap_23
   \                     ??SetBitmap_22:
   \   00000388   040099E5           LDR      R0,[R9, #+4]
   \   0000038C   001099E5           LDR      R1,[R9, #+0]
   \   00000390   010040E0           SUB      R0,R0,R1
   \   00000394   0010DDE5           LDRB     R1,[SP, #+0]
   \   00000398   2001B0E1           LSRS     R0,R0,#+2
   \   0000039C   0100A003           MOVEQ    R0,#+1
   \   000003A0   0000A013           MOVNE    R0,#+0
   \   000003A4   000091E1           ORRS     R0,R1,R0
   \   000003A8   3100001A           BNE      ??SetBitmap_24
    560          			LevelSwitchSelected = true;
    561          			NewAppList[ButListIndex] = TSN_LEVELSWITCH_APP;
   \   000003AC   060185E0           ADD      R0,R5,R6, LSL #+2
    562          			BUTTON_SetBitmapEx(MainWinButton[ButListIndex++], 0,&bmLTankOverfill,1,1);
   \   000003B0   6C249FE5           LDR      R2,??SetBitmap_2+0x78  ;; bmLTankOverfill
   \   000003B4   200000EA           B        ??SetBitmap_25
    563          		}
    564          	} else {
    565          		if ( (ButListIndex<MAX_APPL) && !PROCargoTank::ObjVector.empty() && !CargoSelected ) {
   \                     ??SetBitmap_5:
   \   000003B8   060056E3           CMP      R6,#+6
   \   000003BC   110000AA           BGE      ??SetBitmap_26
   \   000003C0   0630DDE5           LDRB     R3,[SP, #+6]
   \   000003C4   000052E3           CMP      R2,#+0
   \   000003C8   0120A003           MOVEQ    R2,#+1
   \   000003CC   0020A013           MOVNE    R2,#+0
   \   000003D0   022093E1           ORRS     R2,R3,R2
   \   000003D4   0D00001A           BNE      ??SetBitmap_27
    566          			CargoSelected = true;
    567          			NewAppList[ButListIndex] = TSN_CARGO_APP;
   \   000003D8   2920A0E3           MOV      R2,#+41
   \   000003DC   8C2D82E3           ORR      R2,R2,#0x2300
   \   000003E0   542081E5           STR      R2,[R1, #+84]
    568          			BUTTON_SetBitmapEx(MainWinButton[ButListIndex++], 0,&bmButtonCargo,1,1);
   \   000003E4   DC239FE5           LDR      R2,??SetBitmap_2+0x1C  ;; bmButtonCargo
   \   000003E8   0110A0E3           MOV      R1,#+1
   \   000003EC   02002DE9           PUSH     {R1}
   \   000003F0   F204D0E1           LDRSH    R0,[R0, #+66]
   \   000003F4   0130A0E1           MOV      R3,R1
   \   000003F8   0010A0E3           MOV      R1,#+0
   \   000003FC   ........           _BLF     BUTTON_SetBitmapEx,??BUTTON_SetBitmapEx??rA
   \   00000400   0A60A0E1           MOV      R6,R10
   \   00000404   04D08DE2           ADD      SP,SP,#+4
    569          		}
    570          		if ( (ButListIndex<MAX_APPL) && !PROLevelSwitch::ObjVector.empty() && !LevelSwitchSelected ) {
   \                     ??SetBitmap_26:
   \   00000408   060056E3           CMP      R6,#+6
   \   0000040C   160000AA           BGE      ??SetBitmap_23
   \                     ??SetBitmap_27:
   \   00000410   040099E5           LDR      R0,[R9, #+4]
   \   00000414   001099E5           LDR      R1,[R9, #+0]
   \   00000418   010040E0           SUB      R0,R0,R1
   \   0000041C   0010DDE5           LDRB     R1,[SP, #+0]
   \   00000420   2001B0E1           LSRS     R0,R0,#+2
   \   00000424   0100A003           MOVEQ    R0,#+1
   \   00000428   0000A013           MOVNE    R0,#+0
   \   0000042C   000091E1           ORRS     R0,R1,R0
   \   00000430   0F00001A           BNE      ??SetBitmap_24
    571          			LevelSwitchSelected = true;
    572          			NewAppList[ButListIndex] = TSN_LEVELSWITCH_APP;
   \   00000434   060185E0           ADD      R0,R5,R6, LSL #+2
    573          			BUTTON_SetBitmapEx(MainWinButton[ButListIndex++], 0,&bmButtonHighLevel,1,1);
   \   00000438   C8239FE5           LDR      R2,??SetBitmap_2+0x5C  ;; bmButtonHighLevel
   \                     ??SetBitmap_25:
   \   0000043C   2F10A0E3           MOV      R1,#+47
   \   00000440   8C1D81E3           ORR      R1,R1,#0x2300
   \   00000444   541080E5           STR      R1,[R0, #+84]
   \   00000448   0100A0E3           MOV      R0,#+1
   \   0000044C   01002DE9           PUSH     {R0}
   \   00000450   0030A0E1           MOV      R3,R0
   \   00000454   860085E0           ADD      R0,R5,R6, LSL #+1
   \   00000458   F204D0E1           LDRSH    R0,[R0, #+66]
   \   0000045C   0010A0E3           MOV      R1,#+0
   \   00000460   016086E2           ADD      R6,R6,#+1
   \   00000464   ........           _BLF     BUTTON_SetBitmapEx,??BUTTON_SetBitmapEx??rA
   \   00000468   04D08DE2           ADD      SP,SP,#+4
    574          		}
    575          	}
    576          	if ( (ButListIndex<MAX_APPL) && !PROBallastTank::ObjVector.empty() && !BallastSelected ) {
   \                     ??SetBitmap_23:
   \   0000046C   060056E3           CMP      R6,#+6
   \   00000470   180000AA           BGE      ??SetBitmap_28
   \                     ??SetBitmap_24:
   \   00000474   50039FE5           LDR      R0,??SetBitmap_2+0x20  ;; ??ObjVector_2 + 4
   \   00000478   50139FE5           LDR      R1,??SetBitmap_2+0x24  ;; ??ObjVector_2
   \   0000047C   000090E5           LDR      R0,[R0, #+0]
   \   00000480   001091E5           LDR      R1,[R1, #+0]
   \   00000484   010040E0           SUB      R0,R0,R1
   \   00000488   0710DDE5           LDRB     R1,[SP, #+7]
   \   0000048C   2001B0E1           LSRS     R0,R0,#+2
   \   00000490   0100A003           MOVEQ    R0,#+1
   \   00000494   0000A013           MOVNE    R0,#+0
   \   00000498   000091E1           ORRS     R0,R1,R0
   \   0000049C   0F00001A           BNE      ??SetBitmap_29
    577          		BallastSelected = true;
    578          		NewAppList[ButListIndex] = TSN_BALLAST_APP;
   \   000004A0   060185E0           ADD      R0,R5,R6, LSL #+2
    579          		BUTTON_SetBitmapEx(MainWinButton[ButListIndex++], 0,&bmButtonBallast,1,1);
   \   000004A4   28239FE5           LDR      R2,??SetBitmap_2+0x28  ;; bmButtonBallast
   \   000004A8   2A10A0E3           MOV      R1,#+42
   \   000004AC   8C1D81E3           ORR      R1,R1,#0x2300
   \   000004B0   541080E5           STR      R1,[R0, #+84]
   \   000004B4   0100A0E3           MOV      R0,#+1
   \   000004B8   01002DE9           PUSH     {R0}
   \   000004BC   0030A0E1           MOV      R3,R0
   \   000004C0   860085E0           ADD      R0,R5,R6, LSL #+1
   \   000004C4   F204D0E1           LDRSH    R0,[R0, #+66]
   \   000004C8   0010A0E3           MOV      R1,#+0
   \   000004CC   016086E2           ADD      R6,R6,#+1
   \   000004D0   ........           _BLF     BUTTON_SetBitmapEx,??BUTTON_SetBitmapEx??rA
   \   000004D4   04D08DE2           ADD      SP,SP,#+4
    580          	}
    581          	if ( (ButListIndex<MAX_APPL) && !PROServiceTank::ObjVector.empty() && !ServiceSelected ) {
   \                     ??SetBitmap_28:
   \   000004D8   060056E3           CMP      R6,#+6
   \   000004DC   180000AA           BGE      ??SetBitmap_30
   \                     ??SetBitmap_29:
   \   000004E0   F0029FE5           LDR      R0,??SetBitmap_2+0x2C  ;; ??ObjVector_3 + 4
   \   000004E4   F0129FE5           LDR      R1,??SetBitmap_2+0x30  ;; ??ObjVector_3
   \   000004E8   000090E5           LDR      R0,[R0, #+0]
   \   000004EC   001091E5           LDR      R1,[R1, #+0]
   \   000004F0   010040E0           SUB      R0,R0,R1
   \   000004F4   0410DDE5           LDRB     R1,[SP, #+4]
   \   000004F8   2001B0E1           LSRS     R0,R0,#+2
   \   000004FC   0100A003           MOVEQ    R0,#+1
   \   00000500   0000A013           MOVNE    R0,#+0
   \   00000504   000091E1           ORRS     R0,R1,R0
   \   00000508   0F00001A           BNE      ??SetBitmap_31
    582          		ServiceSelected = true;
    583          		NewAppList[ButListIndex] = TSN_SERVICE_APP;
   \   0000050C   060185E0           ADD      R0,R5,R6, LSL #+2
    584          		BUTTON_SetBitmapEx(MainWinButton[ButListIndex++], 0,&bmButtonService,1,1);
   \   00000510   C8229FE5           LDR      R2,??SetBitmap_2+0x34  ;; bmButtonService
   \   00000514   2B10A0E3           MOV      R1,#+43
   \   00000518   8C1D81E3           ORR      R1,R1,#0x2300
   \   0000051C   541080E5           STR      R1,[R0, #+84]
   \   00000520   0100A0E3           MOV      R0,#+1
   \   00000524   01002DE9           PUSH     {R0}
   \   00000528   0030A0E1           MOV      R3,R0
   \   0000052C   860085E0           ADD      R0,R5,R6, LSL #+1
   \   00000530   F204D0E1           LDRSH    R0,[R0, #+66]
   \   00000534   0010A0E3           MOV      R1,#+0
   \   00000538   016086E2           ADD      R6,R6,#+1
   \   0000053C   ........           _BLF     BUTTON_SetBitmapEx,??BUTTON_SetBitmapEx??rA
   \   00000540   04D08DE2           ADD      SP,SP,#+4
    585          	}
    586          	if ( (ButListIndex<MAX_APPL) && !PROTankPressure::ObjVector.empty() && !TankPressSelected ) {
   \                     ??SetBitmap_30:
   \   00000544   060056E3           CMP      R6,#+6
   \   00000548   180000AA           BGE      ??SetBitmap_32
   \                     ??SetBitmap_31:
   \   0000054C   90029FE5           LDR      R0,??SetBitmap_2+0x38  ;; ??ObjVector_4 + 4
   \   00000550   90129FE5           LDR      R1,??SetBitmap_2+0x3C  ;; ??ObjVector_4
   \   00000554   000090E5           LDR      R0,[R0, #+0]
   \   00000558   001091E5           LDR      R1,[R1, #+0]
   \   0000055C   010040E0           SUB      R0,R0,R1
   \   00000560   0510DDE5           LDRB     R1,[SP, #+5]
   \   00000564   2001B0E1           LSRS     R0,R0,#+2
   \   00000568   0100A003           MOVEQ    R0,#+1
   \   0000056C   0000A013           MOVNE    R0,#+0
   \   00000570   000091E1           ORRS     R0,R1,R0
   \   00000574   0F00001A           BNE      ??SetBitmap_33
    587          		TankPressSelected = true;
    588          		NewAppList[ButListIndex] = TSN_TANKPRESS_APP;
   \   00000578   060185E0           ADD      R0,R5,R6, LSL #+2
    589          		BUTTON_SetBitmapEx(MainWinButton[ButListIndex++], 0,&bmButtonTankPress,1,1);
   \   0000057C   68229FE5           LDR      R2,??SetBitmap_2+0x40  ;; bmButtonTankPress
   \   00000580   2C10A0E3           MOV      R1,#+44
   \   00000584   8C1D81E3           ORR      R1,R1,#0x2300
   \   00000588   541080E5           STR      R1,[R0, #+84]
   \   0000058C   0100A0E3           MOV      R0,#+1
   \   00000590   01002DE9           PUSH     {R0}
   \   00000594   0030A0E1           MOV      R3,R0
   \   00000598   860085E0           ADD      R0,R5,R6, LSL #+1
   \   0000059C   F204D0E1           LDRSH    R0,[R0, #+66]
   \   000005A0   0010A0E3           MOV      R1,#+0
   \   000005A4   016086E2           ADD      R6,R6,#+1
   \   000005A8   ........           _BLF     BUTTON_SetBitmapEx,??BUTTON_SetBitmapEx??rA
   \   000005AC   04D08DE2           ADD      SP,SP,#+4
    590          	}
    591          	if ( (ButListIndex<MAX_APPL) && !PROLinePressure::ObjVector.empty() && !LinePressSelected ) {
   \                     ??SetBitmap_32:
   \   000005B0   060056E3           CMP      R6,#+6
   \   000005B4   180000AA           BGE      ??SetBitmap_34
   \                     ??SetBitmap_33:
   \   000005B8   30029FE5           LDR      R0,??SetBitmap_2+0x44  ;; ??ObjVector_5 + 4
   \   000005BC   30129FE5           LDR      R1,??SetBitmap_2+0x48  ;; ??ObjVector_5
   \   000005C0   000090E5           LDR      R0,[R0, #+0]
   \   000005C4   001091E5           LDR      R1,[R1, #+0]
   \   000005C8   010040E0           SUB      R0,R0,R1
   \   000005CC   0210DDE5           LDRB     R1,[SP, #+2]
   \   000005D0   2001B0E1           LSRS     R0,R0,#+2
   \   000005D4   0100A003           MOVEQ    R0,#+1
   \   000005D8   0000A013           MOVNE    R0,#+0
   \   000005DC   000091E1           ORRS     R0,R1,R0
   \   000005E0   0F00001A           BNE      ??SetBitmap_35
    592          		LinePressSelected = true;
    593          		NewAppList[ButListIndex] = TSN_LINEPRESS_APP;
   \   000005E4   060185E0           ADD      R0,R5,R6, LSL #+2
    594          		BUTTON_SetBitmapEx(MainWinButton[ButListIndex++], 0,&bmButtonCargoLinePress,1,1);
   \   000005E8   08229FE5           LDR      R2,??SetBitmap_2+0x4C  ;; bmButtonCargoLinePress
   \   000005EC   2D10A0E3           MOV      R1,#+45
   \   000005F0   8C1D81E3           ORR      R1,R1,#0x2300
   \   000005F4   541080E5           STR      R1,[R0, #+84]
   \   000005F8   0100A0E3           MOV      R0,#+1
   \   000005FC   01002DE9           PUSH     {R0}
   \   00000600   0030A0E1           MOV      R3,R0
   \   00000604   860085E0           ADD      R0,R5,R6, LSL #+1
   \   00000608   F204D0E1           LDRSH    R0,[R0, #+66]
   \   0000060C   0010A0E3           MOV      R1,#+0
   \   00000610   016086E2           ADD      R6,R6,#+1
   \   00000614   ........           _BLF     BUTTON_SetBitmapEx,??BUTTON_SetBitmapEx??rA
   \   00000618   04D08DE2           ADD      SP,SP,#+4
    595          	}
    596          	if ( (ButListIndex<MAX_APPL) && !PROTemperature::ObjVector.empty() && !TempSelected ) {
   \                     ??SetBitmap_34:
   \   0000061C   060056E3           CMP      R6,#+6
   \   00000620   180000AA           BGE      ??SetBitmap_36
   \                     ??SetBitmap_35:
   \   00000624   D0019FE5           LDR      R0,??SetBitmap_2+0x50  ;; ??ObjVector_6 + 4
   \   00000628   D0119FE5           LDR      R1,??SetBitmap_2+0x54  ;; ??ObjVector_6
   \   0000062C   000090E5           LDR      R0,[R0, #+0]
   \   00000630   001091E5           LDR      R1,[R1, #+0]
   \   00000634   010040E0           SUB      R0,R0,R1
   \   00000638   0310DDE5           LDRB     R1,[SP, #+3]
   \   0000063C   2001B0E1           LSRS     R0,R0,#+2
   \   00000640   0100A003           MOVEQ    R0,#+1
   \   00000644   0000A013           MOVNE    R0,#+0
   \   00000648   000091E1           ORRS     R0,R1,R0
   \   0000064C   0F00001A           BNE      ??SetBitmap_37
    597          		TempSelected = true;
    598          		NewAppList[ButListIndex] = TSN_TEMP_APP;
   \   00000650   060185E0           ADD      R0,R5,R6, LSL #+2
    599          		BUTTON_SetBitmapEx(MainWinButton[ButListIndex++], 0,&bmButtonTemperature,1,1);
   \   00000654   A8219FE5           LDR      R2,??SetBitmap_2+0x58  ;; bmButtonTemperature
   \   00000658   2E10A0E3           MOV      R1,#+46
   \   0000065C   8C1D81E3           ORR      R1,R1,#0x2300
   \   00000660   541080E5           STR      R1,[R0, #+84]
   \   00000664   0100A0E3           MOV      R0,#+1
   \   00000668   01002DE9           PUSH     {R0}
   \   0000066C   0030A0E1           MOV      R3,R0
   \   00000670   860085E0           ADD      R0,R5,R6, LSL #+1
   \   00000674   F204D0E1           LDRSH    R0,[R0, #+66]
   \   00000678   0010A0E3           MOV      R1,#+0
   \   0000067C   016086E2           ADD      R6,R6,#+1
   \   00000680   ........           _BLF     BUTTON_SetBitmapEx,??BUTTON_SetBitmapEx??rA
   \   00000684   04D08DE2           ADD      SP,SP,#+4
    600          	}
    601          	if ( (ButListIndex<MAX_APPL) && !PROWaterIngress::ObjVector.empty() && !WaterIngrSelected ) {
   \                     ??SetBitmap_36:
   \   00000688   060056E3           CMP      R6,#+6
   \   0000068C   170000AA           BGE      ??SetBitmap_38
   \                     ??SetBitmap_37:
   \   00000690   74019FE5           LDR      R0,??SetBitmap_2+0x60  ;; ??ObjVector_7 + 4
   \   00000694   74119FE5           LDR      R1,??SetBitmap_2+0x64  ;; ??ObjVector_7
   \   00000698   000090E5           LDR      R0,[R0, #+0]
   \   0000069C   001091E5           LDR      R1,[R1, #+0]
   \   000006A0   010040E0           SUB      R0,R0,R1
   \   000006A4   2001B0E1           LSRS     R0,R0,#+2
   \   000006A8   0100A003           MOVEQ    R0,#+1
   \   000006AC   0000A013           MOVNE    R0,#+0
   \   000006B0   000098E1           ORRS     R0,R8,R0
   \   000006B4   0F00001A           BNE      ??SetBitmap_39
    602          		WaterIngrSelected = true;
    603          		NewAppList[ButListIndex] = TSN_WATERINGR_APP;
   \   000006B8   060185E0           ADD      R0,R5,R6, LSL #+2
    604          		BUTTON_SetBitmapEx(MainWinButton[ButListIndex++], 0,&bmButtonWaterIngress,1,1);
   \   000006BC   50219FE5           LDR      R2,??SetBitmap_2+0x68  ;; bmButtonWaterIngress
   \   000006C0   3010A0E3           MOV      R1,#+48
   \   000006C4   8C1D81E3           ORR      R1,R1,#0x2300
   \   000006C8   541080E5           STR      R1,[R0, #+84]
   \   000006CC   0100A0E3           MOV      R0,#+1
   \   000006D0   01002DE9           PUSH     {R0}
   \   000006D4   0030A0E1           MOV      R3,R0
   \   000006D8   860085E0           ADD      R0,R5,R6, LSL #+1
   \   000006DC   F204D0E1           LDRSH    R0,[R0, #+66]
   \   000006E0   0010A0E3           MOV      R1,#+0
   \   000006E4   016086E2           ADD      R6,R6,#+1
   \   000006E8   ........           _BLF     BUTTON_SetBitmapEx,??BUTTON_SetBitmapEx??rA
   \   000006EC   04D08DE2           ADD      SP,SP,#+4
    605          	}
    606          	if ( (ButListIndex<MAX_APPL) && !PROVoidSpace::ObjVector.empty()&& !VoidSpaceSelected ) {
   \                     ??SetBitmap_38:
   \   000006F0   060056E3           CMP      R6,#+6
   \   000006F4   140000AA           BGE      ??SetBitmap_40
   \                     ??SetBitmap_39:
   \   000006F8   18019FE5           LDR      R0,??SetBitmap_2+0x6C  ;; ??ObjVector_8 + 4
   \   000006FC   18119FE5           LDR      R1,??SetBitmap_2+0x70  ;; ??ObjVector_8
   \   00000700   000090E5           LDR      R0,[R0, #+0]
   \   00000704   001091E5           LDR      R1,[R1, #+0]
   \   00000708   010040E0           SUB      R0,R0,R1
   \   0000070C   2001B0E1           LSRS     R0,R0,#+2
   \   00000710   0D00000A           BEQ      ??SetBitmap_40
    607          		WaterIngrSelected = true;
    608          		NewAppList[ButListIndex] = TSN_VOIDSPACE_APP;
   \   00000714   060185E0           ADD      R0,R5,R6, LSL #+2
    609          		BUTTON_SetBitmapEx(MainWinButton[ButListIndex++], 0,&bmButtonVoidSpace,1,1);
   \   00000718   00219FE5           LDR      R2,??SetBitmap_2+0x74  ;; bmButtonVoidSpace
   \   0000071C   3110A0E3           MOV      R1,#+49
   \   00000720   8C1D81E3           ORR      R1,R1,#0x2300
   \   00000724   541080E5           STR      R1,[R0, #+84]
   \   00000728   0100A0E3           MOV      R0,#+1
   \   0000072C   01002DE9           PUSH     {R0}
   \   00000730   0030A0E1           MOV      R3,R0
   \   00000734   860085E0           ADD      R0,R5,R6, LSL #+1
   \   00000738   F204D0E1           LDRSH    R0,[R0, #+66]
   \   0000073C   0010A0E3           MOV      R1,#+0
   \   00000740   016086E2           ADD      R6,R6,#+1
   \   00000744   ........           _BLF     BUTTON_SetBitmapEx,??BUTTON_SetBitmapEx??rA
   \   00000748   04D08DE2           ADD      SP,SP,#+4
    610          	}
    611          	if ( (ButListIndex<MAX_APPL) && !PROTankWashingMachine::ObjectSet.empty() && !TankCleaningSelected ) {
   \                     ??SetBitmap_40:
   \   0000074C   060056E3           CMP      R6,#+6
   \   00000750   130000AA           BGE      ??SetBitmap_41
   \   00000754   60009FE5           LDR      R0,??SetBitmap_2+0x10  ;; ??ObjectSet + 16
   \   00000758   000090E5           LDR      R0,[R0, #+0]
   \   0000075C   000050E3           CMP      R0,#+0
   \   00000760   0C00DDE5           LDRB     R0,[SP, #+12]
   \   00000764   0040A013           MOVNE    R4,#+0
   \   00000768   040090E1           ORRS     R0,R0,R4
   \   0000076C   0C00001A           BNE      ??SetBitmap_41
    612          		TankCleaningSelected = true;
    613          		NewAppList[ButListIndex] = TSN_TANK_CLEANING_APP;
   \   00000770   060185E0           ADD      R0,R5,R6, LSL #+2
    614          		BUTTON_SetBitmapEx(MainWinButton[ButListIndex++], 0, &bmButtonTankwash,1,1);
   \   00000774   44209FE5           LDR      R2,??SetBitmap_2+0x14  ;; bmButtonTankwash
   \   00000778   3310A0E3           MOV      R1,#+51
   \   0000077C   8C1D81E3           ORR      R1,R1,#0x2300
   \   00000780   541080E5           STR      R1,[R0, #+84]
   \   00000784   0100A0E3           MOV      R0,#+1
   \   00000788   01002DE9           PUSH     {R0}
   \   0000078C   860085E0           ADD      R0,R5,R6, LSL #+1
   \   00000790   F204D0E1           LDRSH    R0,[R0, #+66]
   \   00000794   0130A0E3           MOV      R3,#+1
   \   00000798   0010A0E3           MOV      R1,#+0
   \   0000079C   ........           _BLF     BUTTON_SetBitmapEx,??BUTTON_SetBitmapEx??rA
   \   000007A0   04D08DE2           ADD      SP,SP,#+4
    615          	}
    616          
    617          }
   \                     ??SetBitmap_41:
   \   000007A4   7F4FBDE8           POP      {R0-R6,R8-R11,LR}
   \   000007A8   1EFF2FE1           BX       LR               ;; return
   \                     ??SetBitmap_2:
   \   000007AC   ........           DC32     ??ObjVector
   \   000007B0   ........           DC32     ??ObjVector_1 + 4
   \   000007B4   ........           DC32     ??ObjVector_1
   \   000007B8   ........           DC32     ??ProjectType
   \   000007BC   ........           DC32     ??ObjectSet + 16
   \   000007C0   ........           DC32     bmButtonTankwash
   \   000007C4   ........           DC32     bmLTank
   \   000007C8   ........           DC32     bmButtonCargo
   \   000007CC   ........           DC32     ??ObjVector_2 + 4
   \   000007D0   ........           DC32     ??ObjVector_2
   \   000007D4   ........           DC32     bmButtonBallast
   \   000007D8   ........           DC32     ??ObjVector_3 + 4
   \   000007DC   ........           DC32     ??ObjVector_3
   \   000007E0   ........           DC32     bmButtonService
   \   000007E4   ........           DC32     ??ObjVector_4 + 4
   \   000007E8   ........           DC32     ??ObjVector_4
   \   000007EC   ........           DC32     bmButtonTankPress
   \   000007F0   ........           DC32     ??ObjVector_5 + 4
   \   000007F4   ........           DC32     ??ObjVector_5
   \   000007F8   ........           DC32     bmButtonCargoLinePress
   \   000007FC   ........           DC32     ??ObjVector_6 + 4
   \   00000800   ........           DC32     ??ObjVector_6
   \   00000804   ........           DC32     bmButtonTemperature
   \   00000808   ........           DC32     bmButtonHighLevel
   \   0000080C   ........           DC32     ??ObjVector_7 + 4
   \   00000810   ........           DC32     ??ObjVector_7
   \   00000814   ........           DC32     bmButtonWaterIngress
   \   00000818   ........           DC32     ??ObjVector_8 + 4
   \   0000081C   ........           DC32     ??ObjVector_8
   \   00000820   ........           DC32     bmButtonVoidSpace
   \   00000824   ........           DC32     bmLTankOverfill

   \                                 In segment DIFUNCT, align 4, keep-with-next, root
   \   00000000                      REQUIRE ?call_ctors
   \   00000000   ........           DC32    ??__sti__routine

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "Surveyor2">`:
   \   00000000   537572766579       DC8 "Surveyor2"
   \              6F723200    
   \   0000000A   0000               DC8 0, 0
   \   0000000C   4E6F20416C61       DC8 "No Alarm"
   \              726D00      
   \   00000015   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "Configuration">`:
   \   00000000   436F6E666967       DC8 "Configuration"
   \              75726174696F
   \              6E00        
   \   0000000E   0000               DC8 0, 0
   \   00000010   43616C696272       DC8 "Calibration"
   \              6174696F6E00
   \   0000001C   54616E6B2063       DC8 "Tank cleaning"
   \              6C65616E696E
   \              6700        
   \   0000002A   0000               DC8 0, 0
   \   0000002C   25732054434D       DC8 "%s TCMs"
   \              7300        

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs TDUMainWin &TDUMainWin::new TDUMainWin()
   \                     `??new TDUMainWin`:
   \   00000000   00402DE9           PUSH     {LR}
   \   00000004   6C00A0E3           MOV      R0,#+108
   \   00000008   ........           _BLF     `??operator new`,`??operator new??rA`
   \   0000000C   000050E3           CMP      R0,#+0
   \   00000010   0000000A           BEQ      `??new TDUMainWin_1`
   \   00000014   ........           BL       ??TDUMainWin
   \                     `??new TDUMainWin_1`:
   \   00000018   0040BDE8           POP      {LR}
   \   0000001C   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void TDUMainWin::delete ~TDUMainWin(TDUMainWin *)
   \                     `??delete ~TDUMainWin`:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0040B0E1           MOVS     R4,R0
   \   00000008   0200000A           BEQ      `??delete ~TDUMainWin_1`
   \   0000000C   ........           _BLF     `?~TDUBasicWin`,`?~TDUBasicWin??rA`
   \   00000010   0400A0E1           MOV      R0,R4
   \   00000014   ........           _BLF     `??operator delete`,`??operator delete??rA`
   \                     `??delete ~TDUMainWin_1`:
   \   00000018   1040BDE8           POP      {R4,LR}
   \   0000001C   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   static __??Code32?? __intrinsic __code __interwork __atpcs void __sti__routine()
   \                     ??__sti__routine:
   \   00000000   1C109FE5           LDR      R1,??__sti__routine_1  ;; GUI_Font16_1
   \   00000004   ........           LDR      R0,??DataTable1  ;; TDU_FONT_HW
   \   00000008   30002DE9           PUSH     {R4,R5}
   \   0000000C   3C10B1E8           LDM      R1!,{R2-R5,R12}
   \   00000010   3C10A0E8           STM      R0!,{R2-R5,R12}
   \   00000014   1C1091E8           LDM      R1,{R2-R4,R12}
   \   00000018   1C1080E8           STM      R0,{R2-R4,R12}
   \   0000001C   3000BDE8           POP      {R4,R5}
   \   00000020   1EFF2FE1           BX       LR               ;; return
   \                     ??__sti__routine_1:
   \   00000024   ........           DC32     GUI_Font16_1

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable1:
   \   00000000   ........           DC32     TDU_FONT_HW

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable10:
   \   00000000   ........           DC32     SystemWindow

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable11:
   \   00000000   ........           DC32     CurrentWinID

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable12:
   \   00000000   ........           DC32     ConfigWindow

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable13:
   \   00000000   ........           DC32     CalibrateScreen

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable14:
   \   00000000   ........           DC32     PreviousWinID

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable15:
   \   00000000   ........           DC32     LastApplIndex

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable17:
   \   00000000   ........           DC32     ??PROProjectInfoPtr
    618          

   Maximum stack usage in bytes:

     Function                       CSTACK
     --------                       ------
     TDUMainWin::SetBitmap()           56
     TDUMainWin::SetCurrentWindow(int)
                                       84
     TDUMainWin::SetPreviousWindow()
                                       12
     TDUMainWin::SetWindow(int)        84
     TDUMainWin::TDUMainWin()          64
     TDUMainWin::cbEventHandler(WM_MESSAGE *)
                                        8
     TDUMainWin::delete ~TDUMainWin(TDUMainWin *)
                                        8
     TDUMainWin::new TDUMainWin()       4
     TDUMainWin::~TDUMainWin()          4
     __sti__routine()                   8


   Segment part sizes:

     Function/Label                 Bytes
     --------------                 -----
     TDU_FONT_HW                      36
     TDUMainWin::~TDUMainWin()        16
     TDUMainWin::TDUMainWin()        844
     TDUMainWin::SetWindow(int)     2120
     TDUMainWin::SetCurrentWindow(int)
                                     480
     TDUMainWin::SetPreviousWindow()
                                     164
     TDUMainWin::cbEventHandler(WM_MESSAGE *)
                                     276
     TDUMainWin::SetBitmap()        2088
     ?<Constant "Surveyor2">          24
     ?<Constant "Configuration">      52
     TDUMainWin::new TDUMainWin()     32
     TDUMainWin::delete ~TDUMainWin(TDUMainWin *)
                                      32
     __sti__routine()                 40
     ??DataTable1                      4
     ??DataTable10                     4
     ??DataTable11                     4
     ??DataTable12                     4
     ??DataTable13                     4
     ??DataTable14                     4
     ??DataTable15                     4
     ??DataTable17                     4
      Others                         464

 
 6 572 bytes in segment CODE
    76 bytes in segment DATA_C
    36 bytes in segment DATA_Z
     4 bytes in segment DIFUNCT
    12 bytes in segment INITTAB
 
 6 128 bytes of CODE  memory (+ 460 bytes shared)
    76 bytes of CONST memory
    36 bytes of DATA  memory

Errors: none
Warnings: none
