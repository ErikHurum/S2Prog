##############################################################################
#                                                                            #
# IAR ARM ANSI C/C++ Compiler V4.42A/W32               14/Sep/2022  15:14:31 #
# Copyright 1999-2005 IAR Systems. All rights reserved.                      #
#                                                                            #
#    Cpu mode        =  interwork                                            #
#    Endian          =  little                                               #
#    Stack alignment =  4                                                    #
#    Source file     =  D:\S2Prog\Shared\Src\ModbusWago473RegisterIn.cpp     #
#    Command line    =  D:\S2Prog\Shared\Src\ModbusWago473RegisterIn.cpp     #
#                       --fpu None -D OS_LIBMODE_SP -D CPU_S3C2410 -D        #
#                       OS_RAMVECT=0 -D OS_UART=-1 -D S2TXU -D USE_LZO=1 -D  #
#                       __ARM_LIBRARY__ -D WATCHDOG=1 -D NETWORK=1 -lCN      #
#                       D:\S2Prog\TXU\Debug\List\ -o                         #
#                       D:\S2Prog\TXU\Debug\Obj\ -z9 --debug --cpu_mode arm  #
#                       --endian little --cpu ARM920T --stack_align 4        #
#                       --interwork -e --enable_multibytes --eec++           #
#                       --dlib_config "C:\Program Files (x86)\IAR            #
#                       Systems\Embedded Workbench                           #
#                       4.0\arm\LIB\dl4tpainl8n.h" -I                        #
#                       D:\S2Prog\TXU\GUI\CORE\ -I D:\S2Prog\TXU\GUI\WM\ -I  #
#                       D:\S2Prog\TXU\GUI\WIDGET\ -I D:\S2Prog\TXU\CONFIG\   #
#                       -I D:\S2Prog\TXU\INC\ -I D:\S2Prog\TXU\..\SHARED\INC #
#                       \ -I D:\S2Prog\TXU\..\SHARED\SRC\ -I                 #
#                       D:\S2Prog\TXU\..\SHARED\LZO\minilzo.210\ -I          #
#                       D:\S2Prog\TXU\lwip-1.4.1\src\include\ -I             #
#                       D:\S2Prog\TXU\lwip-1.4.1\src\include\ipv4\ -I        #
#                       D:\S2Prog\TXU\lwip-1.4.1\src\ -I                     #
#                       D:\S2Prog\TXU\..\SHARED\Database\ -I                 #
#                       D:\S2Prog\TXU\src\ -I "C:\Program Files (x86)\IAR    #
#                       Systems\Embedded Workbench 4.0\arm\INC\"             #
#                       --inline_threshold=2                                 #
#    List file       =  D:\S2Prog\TXU\Debug\List\ModbusWago473RegisterIn.lst #
#    Object file     =  D:\S2Prog\TXU\Debug\Obj\ModbusWago473RegisterIn.r79  #
#                                                                            #
#                                                                            #
##############################################################################

D:\S2Prog\Shared\Src\ModbusWago473RegisterIn.cpp
      1          #include "TSNIncludes.h"

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void operator+(string const &, string const &)
   \                     `??operator+`:
   \   00000000   F0402DE9           PUSH     {R4-R7,LR}
   \   00000004   1CD04DE2           SUB      SP,SP,#+28
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   0150A0E1           MOV      R5,R1
   \   00000010   0260A0E1           MOV      R6,R2
   \   00000014   0020A0E3           MOV      R2,#+0
   \   00000018   0010A0E3           MOV      R1,#+0
   \   0000001C   0D00A0E1           MOV      R0,SP
   \   00000020   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000024   6C009FE5           LDR      R0,`??operator+_1`  ;; ??npos
   \   00000028   0020A0E3           MOV      R2,#+0
   \   0000002C   007090E5           LDR      R7,[R0, #+0]
   \   00000030   0510A0E1           MOV      R1,R5
   \   00000034   0730A0E1           MOV      R3,R7
   \   00000038   0D00A0E1           MOV      R0,SP
   \   0000003C   ........           _BLF     ??assign,??assign??rA
   \   00000040   0730A0E1           MOV      R3,R7
   \   00000044   0020A0E3           MOV      R2,#+0
   \   00000048   0610A0E1           MOV      R1,R6
   \   0000004C   0D00A0E1           MOV      R0,SP
   \   00000050   ........           _BLF     ??append,??append??rA
   \   00000054   0050A0E1           MOV      R5,R0
   \   00000058   0020A0E3           MOV      R2,#+0
   \   0000005C   0210A0E1           MOV      R1,R2
   \   00000060   0400A0E1           MOV      R0,R4
   \   00000064   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000068   0730A0E1           MOV      R3,R7
   \   0000006C   0020A0E3           MOV      R2,#+0
   \   00000070   0510A0E1           MOV      R1,R5
   \   00000074   0400A0E1           MOV      R0,R4
   \   00000078   ........           _BLF     ??assign,??assign??rA
   \   0000007C   0020A0E3           MOV      R2,#+0
   \   00000080   0110A0E3           MOV      R1,#+1
   \   00000084   0D00A0E1           MOV      R0,SP
   \   00000088   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   0000008C   1CD08DE2           ADD      SP,SP,#+28
   \   00000090   F040BDE8           POP      {R4-R7,LR}
   \   00000094   1EFF2FE1           BX       LR               ;; return
   \                     `??operator+_1`:
   \   00000098   ........           DC32     ??npos
      2          #pragma hdrstop
      3          #ifdef BORLAND
      4              #pragma package(smart_init)
      5          #endif
      6          //
      7          // See WAGO reference documentation for the 750-473 module.
      8          //

   \                                 In segment CODE, align 4, keep-with-next
      9          ModbusWago473RegisterIn::ModbusWago473RegisterIn(bool pIsCreatedFromMultiple):ModbusRegisterIn(pIsCreatedFromMultiple,C_PRO_MBUS_WAGO473_RIN)
   \                     ??ModbusWago473RegisterIn:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0040A0E1           MOV      R4,R0
     10          {
   \   00000008   0130A0E3           MOV      R3,#+1
   \   0000000C   2220A0E3           MOV      R2,#+34
   \   00000010   B02E82E3           ORR      R2,R2,#0xB00
   \   00000014   ........           _BLF     ??ModbusRegisterIn,??ModbusRegisterIn??rA
   \   00000018   ........           LDR      R0,??Subroutine7_0  ;; ??__vtbl
   \   0000001C   A40084E5           STR      R0,[R4, #+164]
     11              RegMax            = 0x7ff9;
   \   00000020   F900A0E3           MOV      R0,#+249
   \   00000024   7F0C80E3           ORR      R0,R0,#0x7F00
   \   00000028   A80184E5           STR      R0,[R4, #+424]
     12              MinRange          = 0.000;
   \   0000002C   0000A0E3           MOV      R0,#+0
   \   00000030   7C0184E5           STR      R0,[R4, #+380]
     13              MaxRange          = 0.032;
   \   00000034   ........           LDR      R0,??Subroutine7_0+0x4  ;; 0x3d03126f
   \   00000038   800184E5           STR      R0,[R4, #+384]
     14              HasSign           = false;
   \   0000003C   0000A0E3           MOV      R0,#+0
   \   00000040   8401C4E5           STRB     R0,[R4, #+388]
     15              HasDecimalScaling = false;
   \   00000044   9801C4E5           STRB     R0,[R4, #+408]
     16          }
   \   00000048   0400A0E1           MOV      R0,R4
   \   0000004C                      REQUIRE ?Subroutine7
   \   0000004C                      ;; // Fall through to label ?Subroutine7

   \                                 In segment CODE, align 4, keep-with-next
   \                     ?Subroutine7:
   \   00000000   1040BDE8           POP      {R4,LR}
   \   00000004   1EFF2FE1           BX       LR               ;; return
   \                     ??Subroutine7_0:
   \   00000008   ........           DC32     ??__vtbl
   \   0000000C   6F12033D           DC32     0x3d03126f
     17          

   \                                 In segment CODE, align 4, keep-with-next
     18          ModbusWago473RegisterIn::~ModbusWago473RegisterIn()
     19          {
   \                     `?~ModbusWago473RegisterIn`:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
   \   0000000C   000054E3           CMP      R4,#+0
   \   00000010   0500000A           BEQ      `?~ModbusWago473RegisterIn_1`
     20          }
   \   00000014   0010A0E3           MOV      R1,#+0
   \   00000018   ........           _BLF     `?~ModbusRegisterIn`,`?~ModbusRegisterIn??rA`
   \   0000001C   010015E3           TST      R5,#0x1
   \   00000020   0100000A           BEQ      `?~ModbusWago473RegisterIn_1`
   \   00000024   0400A0E1           MOV      R0,R4
   \   00000028   ........           _BLF     `??operator delete`,`??operator delete??rA`
   \                     `?~ModbusWago473RegisterIn_1`:
   \   0000002C   3040BDE8           POP      {R4,R5,LR}
   \   00000030   1EFF2FE1           BX       LR               ;; return
     21          
     22          
     23          //---------------------------------------------------------------------------
     24          ///////////////////////////////////////////////////////////////
     25          //
     26          // Routines for the Configuration
     27          //
     28          ///////////////////////////////////////////////////////////////

   \                                 In segment CODE, align 4, keep-with-next
     29          AnsiString ModbusWago473RegisterIn::MakeConfigString(int ExtraTabs)
     30          {
   \                     ??MakeConfigString:
   \   00000000   F0402DE9           PUSH     {R4-R7,LR}
   \   00000004   5BDF4DE2           SUB      SP,SP,#+364
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   0150A0E1           MOV      R5,R1
     31              AnsiString LocalString = ModbusObject::MakeConfigString();
     32              AnsiString ObjectIdStr;
     33              ObjectIdStr.cat_sprintf("0x%0x",RefObjectId);
     34          
     35              LocalString +=TabStr1+KeyWord(C_OBJECT_ID)+(AnsiString)ObjectIdStr;
   \   00000010   F8719FE5           LDR      R7,??MakeConfigString_2  ;; TabStr1
   \   00000014   0020A0E3           MOV      R2,#+0
   \   00000018   ........           _BLF     ??MakeConfigString_1,??MakeConfigString??rA
   \   0000001C   4D0F8DE2           ADD      R0,SP,#+308
   \   00000020   ........           _BLF     ??AnsiString,??AnsiString??rA
   \   00000024   9C3194E5           LDR      R3,[R4, #+412]
   \   00000028   E4219FE5           LDR      R2,??MakeConfigString_2+0x4  ;; `?<Constant "0x%0x">`
   \   0000002C   541F8DE2           ADD      R1,SP,#+336
   \   00000030   4D0F8DE2           ADD      R0,SP,#+308
   \   00000034   ........           _BLF     ??cat_sprintf,??cat_sprintf??rA
   \   00000038   0020A0E3           MOV      R2,#+0
   \   0000003C   0110A0E3           MOV      R1,#+1
   \   00000040   540F8DE2           ADD      R0,SP,#+336
   \   00000044   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000048   0020A0E3           MOV      R2,#+0
   \   0000004C   0010A0E3           MOV      R1,#+0
   \   00000050   54008DE2           ADD      R0,SP,#+84
   \   00000054   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000058   B8019FE5           LDR      R0,??MakeConfigString_2+0x8  ;; ??npos
   \   0000005C   0020A0E3           MOV      R2,#+0
   \   00000060   006090E5           LDR      R6,[R0, #+0]
   \   00000064   4D1F8DE2           ADD      R1,SP,#+308
   \   00000068   0630A0E1           MOV      R3,R6
   \   0000006C   54008DE2           ADD      R0,SP,#+84
   \   00000070   ........           _BLF     ??assign,??assign??rA
   \   00000074   D110A0E3           MOV      R1,#+209
   \   00000078   38008DE2           ADD      R0,SP,#+56
   \   0000007C   ........           _BLF     ??KeyWord,??KeyWord??rA
   \   00000080   38208DE2           ADD      R2,SP,#+56
   \   00000084   0710A0E1           MOV      R1,R7
   \   00000088   1C008DE2           ADD      R0,SP,#+28
   \   0000008C   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000090   54208DE2           ADD      R2,SP,#+84
   \   00000094   1C108DE2           ADD      R1,SP,#+28
   \   00000098   0D00A0E1           MOV      R0,SP
   \   0000009C   ........           _BLF     `??operator+`,`??operator+??rA`
   \   000000A0   0630A0E1           MOV      R3,R6
   \   000000A4   0020A0E3           MOV      R2,#+0
   \   000000A8   0D10A0E1           MOV      R1,SP
   \   000000AC   0500A0E1           MOV      R0,R5
   \   000000B0   ........           _BLF     ??append,??append??rA
   \   000000B4   0020A0E3           MOV      R2,#+0
   \   000000B8   0110A0E3           MOV      R1,#+1
   \   000000BC   0D00A0E1           MOV      R0,SP
   \   000000C0   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000000C4   0020A0E3           MOV      R2,#+0
   \   000000C8   0110A0E3           MOV      R1,#+1
   \   000000CC   54008DE2           ADD      R0,SP,#+84
   \   000000D0   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000000D4   0020A0E3           MOV      R2,#+0
   \   000000D8   0110A0E3           MOV      R1,#+1
   \   000000DC   1C008DE2           ADD      R0,SP,#+28
   \   000000E0   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000000E4   0020A0E3           MOV      R2,#+0
   \   000000E8   0110A0E3           MOV      R1,#+1
   \   000000EC   38008DE2           ADD      R0,SP,#+56
   \   000000F0   ........           _BLF     ??_Tidy,??_Tidy??rA
     36              LocalString +=TabStr1+KeyWord(C_VALUE_KEY)+ValueKeyWord(ValueKey);
   \   000000F4   A41194E5           LDR      R1,[R4, #+420]
   \   000000F8   C4008DE2           ADD      R0,SP,#+196
   \   000000FC   ........           _BLF     ??ValueKeyWord,??ValueKeyWord??rA
   \   00000100   D510A0E3           MOV      R1,#+213
   \   00000104   A8008DE2           ADD      R0,SP,#+168
   \   00000108   ........           _BLF     ??KeyWord,??KeyWord??rA
   \   0000010C   A8208DE2           ADD      R2,SP,#+168
   \   00000110   0710A0E1           MOV      R1,R7
   \   00000114   8C008DE2           ADD      R0,SP,#+140
   \   00000118   ........           _BLF     `??operator+`,`??operator+??rA`
   \   0000011C   C4208DE2           ADD      R2,SP,#+196
   \   00000120   8C108DE2           ADD      R1,SP,#+140
   \   00000124   70008DE2           ADD      R0,SP,#+112
   \   00000128   ........           _BLF     `??operator+`,`??operator+??rA`
   \   0000012C   0630A0E1           MOV      R3,R6
   \   00000130   0020A0E3           MOV      R2,#+0
   \   00000134   70108DE2           ADD      R1,SP,#+112
   \   00000138   0500A0E1           MOV      R0,R5
   \   0000013C   ........           _BLF     ??append,??append??rA
   \   00000140   0020A0E3           MOV      R2,#+0
   \   00000144   0110A0E3           MOV      R1,#+1
   \   00000148   70008DE2           ADD      R0,SP,#+112
   \   0000014C   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000150   0020A0E3           MOV      R2,#+0
   \   00000154   0110A0E3           MOV      R1,#+1
   \   00000158   C4008DE2           ADD      R0,SP,#+196
   \   0000015C   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000160   0020A0E3           MOV      R2,#+0
   \   00000164   0110A0E3           MOV      R1,#+1
   \   00000168   8C008DE2           ADD      R0,SP,#+140
   \   0000016C   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000170   0020A0E3           MOV      R2,#+0
   \   00000174   0110A0E3           MOV      R1,#+1
   \   00000178   A8008DE2           ADD      R0,SP,#+168
   \   0000017C   ........           _BLF     ??_Tidy,??_Tidy??rA
     37              LocalString +=TabStr1+KeyWord(C_MODBUS_END)+CrLfStr;
   \   00000180   6110A0E3           MOV      R1,#+97
   \   00000184   901E81E3           ORR      R1,R1,#0x900
   \   00000188   460F8DE2           ADD      R0,SP,#+280
   \   0000018C   ........           _BLF     ??KeyWord,??KeyWord??rA
   \   00000190   462F8DE2           ADD      R2,SP,#+280
   \   00000194   0710A0E1           MOV      R1,R7
   \   00000198   FC008DE2           ADD      R0,SP,#+252
   \   0000019C   ........           _BLF     `??operator+`,`??operator+??rA`
   \   000001A0   74209FE5           LDR      R2,??MakeConfigString_2+0xC  ;; CrLfStr
   \   000001A4   FC108DE2           ADD      R1,SP,#+252
   \   000001A8   E0008DE2           ADD      R0,SP,#+224
   \   000001AC   ........           _BLF     `??operator+`,`??operator+??rA`
   \   000001B0   0630A0E1           MOV      R3,R6
   \   000001B4   0020A0E3           MOV      R2,#+0
   \   000001B8   E0108DE2           ADD      R1,SP,#+224
   \   000001BC   0500A0E1           MOV      R0,R5
   \   000001C0   ........           _BLF     ??append,??append??rA
   \   000001C4   0020A0E3           MOV      R2,#+0
   \   000001C8   0110A0E3           MOV      R1,#+1
   \   000001CC   E0008DE2           ADD      R0,SP,#+224
   \   000001D0   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000001D4   0020A0E3           MOV      R2,#+0
   \   000001D8   0110A0E3           MOV      R1,#+1
   \   000001DC   FC008DE2           ADD      R0,SP,#+252
   \   000001E0   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000001E4   0020A0E3           MOV      R2,#+0
   \   000001E8   0110A0E3           MOV      R1,#+1
   \   000001EC   460F8DE2           ADD      R0,SP,#+280
   \   000001F0   ........           _BLF     ??_Tidy,??_Tidy??rA
     38              return(LocalString);
   \   000001F4   0020A0E3           MOV      R2,#+0
   \   000001F8   0110A0E3           MOV      R1,#+1
   \   000001FC   4D0F8DE2           ADD      R0,SP,#+308
   \   00000200   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000204   5BDF8DE2           ADD      SP,SP,#+364
   \   00000208   F040BDE8           POP      {R4-R7,LR}
   \   0000020C   1EFF2FE1           BX       LR               ;; return
   \                     ??MakeConfigString_2:
   \   00000210   ........           DC32     TabStr1
   \   00000214   ........           DC32     `?<Constant "0x%0x">`
   \   00000218   ........           DC32     ??npos
   \   0000021C   ........           DC32     CrLfStr
     39          }
     40          //---------------------------------------------------------------------------
     41          

   \                                 In segment CODE, align 4, keep-with-next
     42          void ModbusWago473RegisterIn::Update(void)
     43          {
   \                     ??Update:
   \   00000000   F0432DE9           PUSH     {R4-R9,LR}
     44              ModbusUnit *tmpPtr = FindUnit();
     45              if ( tmpPtr && tmpPtr->HasNewValue(Channel)) {
   \   00000004   FC609FE5           LDR      R6,??Update_1    ;; Master
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   ........           _BLF     ??FindUnit,??FindUnit??rA
   \   00000010   0080B0E1           MOVS     R8,R0
   \   00000014   695FA0E3           MOV      R5,#+420
   \   00000018   687FA0E3           MOV      R7,#+416
   \   0000001C   3000000A           BEQ      ??Update_2
   \   00000020   5C9FA0E3           MOV      R9,#+368
   \   00000024   041099E7           LDR      R1,[R9, +R4]
   \   00000028   ........           _BLF     ??HasNewValue,??HasNewValue??rA
   \   0000002C   000050E3           CMP      R0,#+0
   \   00000030   2B00000A           BEQ      ??Update_2
     46                  U16 rInVal   = tmpPtr->GetRegister(Channel,false);
   \   00000034   041099E7           LDR      R1,[R9, +R4]
   \   00000038   0020A0E3           MOV      R2,#+0
   \   0000003C   0800A0E1           MOV      R0,R8
   \   00000040   ........           _BLF     ??GetRegister,??GetRegister??rA
     47                  float InVal  = float(rInVal);
     48                  float Current= InVal/float(RegMax )*MaxRange;
   \   00000044   ........           _BLF     __ulongToFloat,??__ulongToFloat??rA
   \   00000048   0080A0E1           MOV      R8,R0
   \   0000004C   A80194E5           LDR      R0,[R4, #+424]
   \   00000050   ........           _BLF     __longToFloat,??__longToFloat??rA
   \   00000054   0010A0E1           MOV      R1,R0
   \   00000058   0800A0E1           MOV      R0,R8
   \   0000005C   ........           _BLF     __fDiv,??__fDiv??rA
   \   00000060   801194E5           LDR      R1,[R4, #+384]
   \   00000064   ........           _BLF     __fMul,??__fMul??rA
   \   00000068   0080A0E1           MOV      R8,R0
     49          
     50                  // No need for range check since the value can't get outside 32 mA
     51                  // Should add error check using statur register instead
     52                  if (ObjPtr) {
   \   0000006C   040097E7           LDR      R0,[R7, +R4]
   \   00000070   000050E3           CMP      R0,#+0
   \   00000074   2100000A           BEQ      ??Update_3
     53                      if (Master) {
   \   00000078   0010D6E5           LDRB     R1,[R6, #+0]
   \   0000007C   000051E3           CMP      R1,#+0
   \   00000080   1000000A           BEQ      ??Update_4
     54                          ObjPtr->SetTimeStamp();
   \   00000084   ........           _BLF     ??SetTimeStamp,??SetTimeStamp??rA
     55                          ObjPtr->PutFloatValue(ValueKey, Current);
   \   00000088   043097E7           LDR      R3,[R7, +R4]
   \   0000008C   041095E7           LDR      R1,[R5, +R4]
   \   00000090   0300A0E1           MOV      R0,R3
   \   00000094   A43093E5           LDR      R3,[R3, #+164]
   \   00000098   0820A0E1           MOV      R2,R8
   \   0000009C   343093E5           LDR      R3,[R3, #+52]
   \   000000A0   0FE0A0E1           MOV      LR,PC
   \   000000A4   13FF2FE1           BX       R3
     56                          ObjPtr->RefreshData(ValueKey);
   \   000000A8   042097E7           LDR      R2,[R7, +R4]
   \   000000AC   041095E7           LDR      R1,[R5, +R4]
   \   000000B0   0200A0E1           MOV      R0,R2
   \   000000B4   A42092E5           LDR      R2,[R2, #+164]
   \   000000B8   742092E5           LDR      R2,[R2, #+116]
   \   000000BC   0FE0A0E1           MOV      LR,PC
   \   000000C0   12FF2FE1           BX       R2
   \   000000C4   0D0000EA           B        ??Update_3
     57                      }else{
     58                          // Should also include the com port. Now send broadcast to all TDUs and PCs
     59                          // connected to this slave TCU
     60                          ObjPtr->SendModbusData(ValueKey, Current);
   \                     ??Update_4:
   \   000000C8   041095E7           LDR      R1,[R5, +R4]
   \   000000CC   6730A0E3           MOV      R3,#+103
   \   000000D0   0820A0E1           MOV      R2,R8
   \   000000D4   0118A0E1           MOV      R1,R1, LSL #+16
   \   000000D8   2118A0E1           MOV      R1,R1, LSR #+16
   \   000000DC   ........           _BLF     ??SendModbusData,??SendModbusData??rA
   \   000000E0   060000EA           B        ??Update_3
     61                      }
     62                  }
     63              } else {
     64                  if (ObjPtr && Master) {
   \                     ??Update_2:
   \   000000E4   040097E7           LDR      R0,[R7, +R4]
   \   000000E8   000050E3           CMP      R0,#+0
   \   000000EC   0010D615           LDRBNE   R1,[R6, #+0]
   \   000000F0   00005113           CMPNE    R1,#+0
   \   000000F4   0100000A           BEQ      ??Update_3
     65                      ObjPtr->SetOffline(ValueKey);
   \   000000F8   041095E7           LDR      R1,[R5, +R4]
   \   000000FC   ........           _BLF     ??SetOffline,??SetOffline??rA
     66                  }
     67              }
     68          }
   \                     ??Update_3:
   \   00000100   F043BDE8           POP      {R4-R9,LR}
   \   00000104   1EFF2FE1           BX       LR               ;; return
   \                     ??Update_1:
   \   00000108   ........           DC32     Master
     69          

   \                                 In segment CODE, align 4, keep-with-next
     70          AnsiString ModbusWago473RegisterIn::GetRegisterType(void)
     71          {
   \                     ??GetRegisterType:
   \   00000000   0100A0E1           MOV      R0,R1
     72              return "Wago 750-473";
   \   00000004   0C109FE5           LDR      R1,??GetRegisterType_1  ;; `?<Constant "Wago 750-473">`
   \   00000008   00402DE9           PUSH     {LR}
   \   0000000C   ........           _BLF     ??AnsiString_1,??AnsiString??rA_1
   \   00000010   0040BDE8           POP      {LR}
   \   00000014   1EFF2FE1           BX       LR               ;; return
   \                     ??GetRegisterType_1:
   \   00000018   ........           DC32     `?<Constant "Wago 750-473">`
     73          }

   \                                 In segment DIFUNCT, align 4, keep-with-next, root
   \   00000000                      REQUIRE ?call_ctors
   \   00000000   ........           DC32    ??__sti__routine

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "0x%0x">`:
   \   00000000   307825307800       DC8 "0x%0x"
   \   00000006   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "Wago 750-473">`:
   \   00000000   5761676F2037       DC8 "Wago 750-473"
   \              35302D343733
   \              00          
   \   0000000D   000000             DC8 0, 0, 0

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs ModbusWago473RegisterIn &ModbusWago473RegisterIn::new ModbusWago473RegisterIn(bool)
   \                     `??new ModbusWago473RegisterIn`:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   6C0FA0E3           MOV      R0,#+432
   \   0000000C   ........           _BLF     `??operator new`,`??operator new??rA`
   \   00000010   000050E3           CMP      R0,#+0
   \   00000014   0100000A           BEQ      `??new ModbusWago473RegisterIn_1`
   \   00000018   0410A0E1           MOV      R1,R4
   \   0000001C   ........           BL       ??ModbusWago473RegisterIn
   \                     `??new ModbusWago473RegisterIn_1`:
   \   00000020   ........           B        ?Subroutine7

   \                                 In segment CODE, align 4, keep-with-next
   \   static __??Code32?? __intrinsic __code __interwork __atpcs void __sti__routine()
   \                     ??__sti__routine:
   \   00000000   1EFF2FE1           BX       LR               ;; return
     74          

   Maximum stack usage in bytes:

     Function                       CSTACK
     --------                       ------
     ModbusWago473RegisterIn::GetRegisterType()
                                        4
     ModbusWago473RegisterIn::MakeConfigString(int)
                                      384
     ModbusWago473RegisterIn::ModbusWago473RegisterIn(bool)
                                        8
     ModbusWago473RegisterIn::Update()
                                       28
     ModbusWago473RegisterIn::new ModbusWago473RegisterIn(bool)
                                        8
     ModbusWago473RegisterIn::~ModbusWago473RegisterIn()
                                       12
     __sti__routine()                   0
     operator+(string const &, string const &)
                                       48


   Segment part sizes:

     Function/Label                 Bytes
     --------------                 -----
     operator+(string const &, string const &)
                                     156
     ModbusWago473RegisterIn::ModbusWago473RegisterIn(bool)
                                      76
     ?Subroutine7                     16
     ModbusWago473RegisterIn::~ModbusWago473RegisterIn()
                                      52
     ModbusWago473RegisterIn::MakeConfigString(int)
                                     544
     ModbusWago473RegisterIn::Update()
                                     268
     ModbusWago473RegisterIn::GetRegisterType()
                                      28
     ?<Constant "0x%0x">               8
     ?<Constant "Wago 750-473">       16
     ModbusWago473RegisterIn::new ModbusWago473RegisterIn(bool)
                                      36
     __sti__routine()                  4
      Others                         492

 
 1 496 bytes in segment CODE
   196 bytes in segment DATA_C
     4 bytes in segment DIFUNCT
 
 1 028 bytes of CODE  memory (+ 472 bytes shared)
   196 bytes of CONST memory

Errors: none
Warnings: none
