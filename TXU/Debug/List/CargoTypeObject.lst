##############################################################################
#                                                                            #
# IAR ARM ANSI C/C++ Compiler V4.42A/W32               14/Sep/2022  15:13:33 #
# Copyright 1999-2005 IAR Systems. All rights reserved.                      #
#                                                                            #
#    Cpu mode        =  interwork                                            #
#    Endian          =  little                                               #
#    Stack alignment =  4                                                    #
#    Source file     =  D:\S2Prog\Shared\Src\CargoTypeObject.cpp             #
#    Command line    =  D:\S2Prog\Shared\Src\CargoTypeObject.cpp --fpu None  #
#                       -D OS_LIBMODE_SP -D CPU_S3C2410 -D OS_RAMVECT=0 -D   #
#                       OS_UART=-1 -D S2TXU -D USE_LZO=1 -D __ARM_LIBRARY__  #
#                       -D WATCHDOG=1 -D NETWORK=1 -lCN                      #
#                       D:\S2Prog\TXU\Debug\List\ -o                         #
#                       D:\S2Prog\TXU\Debug\Obj\ -z9 --debug --cpu_mode arm  #
#                       --endian little --cpu ARM920T --stack_align 4        #
#                       --interwork -e --enable_multibytes --eec++           #
#                       --dlib_config "C:\Program Files (x86)\IAR            #
#                       Systems\Embedded Workbench                           #
#                       4.0\arm\LIB\dl4tpainl8n.h" -I                        #
#                       D:\S2Prog\TXU\GUI\CORE\ -I D:\S2Prog\TXU\GUI\WM\ -I  #
#                       D:\S2Prog\TXU\GUI\WIDGET\ -I D:\S2Prog\TXU\CONFIG\   #
#                       -I D:\S2Prog\TXU\INC\ -I D:\S2Prog\TXU\..\SHARED\INC #
#                       \ -I D:\S2Prog\TXU\..\SHARED\SRC\ -I                 #
#                       D:\S2Prog\TXU\..\SHARED\LZO\minilzo.210\ -I          #
#                       D:\S2Prog\TXU\lwip-1.4.1\src\include\ -I             #
#                       D:\S2Prog\TXU\lwip-1.4.1\src\include\ipv4\ -I        #
#                       D:\S2Prog\TXU\lwip-1.4.1\src\ -I                     #
#                       D:\S2Prog\TXU\..\SHARED\Database\ -I                 #
#                       D:\S2Prog\TXU\src\ -I "C:\Program Files (x86)\IAR    #
#                       Systems\Embedded Workbench 4.0\arm\INC\"             #
#                       --inline_threshold=2                                 #
#    List file       =  D:\S2Prog\TXU\Debug\List\CargoTypeObject.lst         #
#    Object file     =  D:\S2Prog\TXU\Debug\Obj\CargoTypeObject.r79          #
#                                                                            #
#                                                                            #
##############################################################################

D:\S2Prog\Shared\Src\CargoTypeObject.cpp
      1          #ifdef ANWIN
      2          	#include "LiteCall.hpp"
      3          #endif
      4          #include "TSNIncludes.h"

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs string::string(string const &)
   \                     ??string:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
   \   0000000C   0020A0E3           MOV      R2,#+0
   \   00000010   0010A0E3           MOV      R1,#+0
   \   00000014   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000018   1C009FE5           LDR      R0,??string_1    ;; ??npos
   \   0000001C   0020A0E3           MOV      R2,#+0
   \   00000020   003090E5           LDR      R3,[R0, #+0]
   \   00000024   0510A0E1           MOV      R1,R5
   \   00000028   0400A0E1           MOV      R0,R4
   \   0000002C   ........           _BLF     ??assign,??assign??rA
   \   00000030   0400A0E1           MOV      R0,R4
   \   00000034   3040BDE8           POP      {R4,R5,LR}
   \   00000038   1EFF2FE1           BX       LR               ;; return
   \                     ??string_1:
   \   0000003C   ........           DC32     ??npos

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void operator+(string const &, string const &)
   \                     `??operator+`:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   1CD04DE2           SUB      SP,SP,#+28
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   0250A0E1           MOV      R5,R2
   \   00000010   0D00A0E1           MOV      R0,SP
   \   00000014   ........           _BLF     ??string,??string??rA
   \   00000018   34109FE5           LDR      R1,`??operator+_2`  ;; ??npos
   \   0000001C   0020A0E3           MOV      R2,#+0
   \   00000020   003091E5           LDR      R3,[R1, #+0]
   \   00000024   0510A0E1           MOV      R1,R5
   \   00000028   ........           _BLF     ??append,??append??rA
   \   0000002C   0010A0E1           MOV      R1,R0
   \   00000030   0400A0E1           MOV      R0,R4
   \   00000034   ........           _BLF     ??string,??string??rA
   \   00000038   0020A0E3           MOV      R2,#+0
   \   0000003C   0110A0E3           MOV      R1,#+1
   \   00000040   0D00A0E1           MOV      R0,SP
   \   00000044   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000048   1CD08DE2           ADD      SP,SP,#+28
   \   0000004C   3040BDE8           POP      {R4,R5,LR}
   \   00000050   1EFF2FE1           BX       LR               ;; return
   \                     `??operator+_2`:
   \   00000054   ........           DC32     ??npos

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void operator+(string const &, char const *)
   \                     `??operator+_1`:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   1CD04DE2           SUB      SP,SP,#+28
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   0250A0E1           MOV      R5,R2
   \   00000010   0D00A0E1           MOV      R0,SP
   \   00000014   ........           _BLF     ??string,??string??rA
   \   00000018   0060A0E1           MOV      R6,R0
   \   0000001C   0500A0E1           MOV      R0,R5
   \   00000020   ........           _BLF     strlen,??strlen??rA
   \   00000024   0020A0E1           MOV      R2,R0
   \   00000028   0510A0E1           MOV      R1,R5
   \   0000002C   0600A0E1           MOV      R0,R6
   \   00000030   ........           _BLF     ??append_1,??append??rA_1
   \   00000034   0010A0E1           MOV      R1,R0
   \   00000038   0400A0E1           MOV      R0,R4
   \   0000003C   ........           _BLF     ??string,??string??rA
   \   00000040   0020A0E3           MOV      R2,#+0
   \   00000044   0110A0E3           MOV      R1,#+1
   \   00000048   0D00A0E1           MOV      R0,SP
   \   0000004C   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000050   1CD08DE2           ADD      SP,SP,#+28
   \   00000054   7040BDE8           POP      {R4-R6,LR}
   \   00000058   1EFF2FE1           BX       LR               ;; return
      5          #pragma hdrstop
      6          #ifdef ANWIN
      7          	#include "MainUnit.h"
      8          #endif
      9          
     10          
     11          /*
     12          *
     13          *   Copyright 1996-2012 Scanjet Ariston
     14          *
     15          */
     16          
     17          #ifdef BORLAND
     18              #pragma package(smart_init)
     19          #endif
     20          
     21          //---------------------------------------------------------------------------

   \                                 In segment DATA_C, align 4, align-sorted
     22          const TColor CargoTypeObject::ColorTable[] = {
   \                     ??ColorTable:
   \   00000000   80808000FFFF       DC32 8421504, 65535, 16776960, 4813423, 6856603, 32896, 16711680
   \              000000FFFF00
   \              6F7249009B9F
   \              680080800000
   \              0000FF00    
   \   0000001C   00FFFF00FFFF       DC32 16776960, 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535
   \              0000FFFF0000
   \              FFFF0000FFFF
   \              0000FFFF0000
   \              FFFF0000FFFF
   \              0000FFFF0000
   \   00000040   FFFF00006F72       DC32 65535, 4813423, 4813423, 4813423, 4813423, 4813423, 4813423
   \              49006F724900
   \              6F7249006F72
   \              49006F724900
   \              6F724900    
   \   0000005C   800080000080       DC32 8388736, 32768, 8062027, 8421504, 128, 33023, 16777215, 11587763
   \              00004B047B00
   \              808080008000
   \              0000FF800000
   \              FFFFFF00B3D0
   \              B000        
   \   0000007C   FFF08F000100       DC32 9433343, -2147483647, 8421376, 8421504, 16744703, -2147483624
   \              008000808000
   \              80808000FF80
   \              FF0018000080
   \   00000094   FF00FF00FF00       DC32 16711935, 8388863, 12632256, 16512
   \              8000C0C0C000
   \              80400000    
   \   __vtbl_entry const __data CargoTypeObject::__vtbl[24]
   \                     ??__vtbl:
   \   000000A4   ............       DC32 `?~CargoTypeObject`, ??WriteConfigToFile, ??LoadConfigFromFile
   \              ............
   \   000000B0   ............       DC32 ??MakeConfigString, ??LoadConfigString, ??RestoreSettings
   \              ............
   \   000000BC   ............       DC32 ??GetName, ??FindPROStatus, ??GetFloatValue, ??GetValue
   \              ............
   \              ........    
   \   000000CC   ............       DC32 ??GetStringValue, ??GetBitValue, ??PutValue, ??PutFloatValue
   \              ............
   \              ........    
   \   000000DC   ............       DC32 ??PutBitValue, ??ReceiveData, ??SendData, ??StartTimer
   \              ............
   \              ........    
   \   000000EC   ............       DC32 ??InputTimeout, ??GetValueInfoTable, ??GetServiceValueInfoTable
   \              ............
   \   000000F8   ............       DC32 ??SetModifiedFlag, ??IsAvailableNewData, ??DeleteCargo
   \              ............
   \   00000104   4C696E656172       DC8 "Linear"
   \              00          
   \   0000010B   00                 DC8 0
     23              clGray,                      //Simple
     24              clYellow,                    //Linear
     25              clAqua,                      //Ballast
     26              (TColor)0x49726f,    //HFO
     27              (TColor)0x689f9b,    //DO
     28              clOlive,                     //Lubricants
     29              clBlue,                      //Freshwater
     30              clAqua,                      //SeaWater
     31              clYellow,                    // API6A
     32              clYellow,                    // API6B
     33              clYellow,                    // API6D
     34              clYellow,                    // Astm 53A
     35              clYellow,                    // Astm 53B
     36              clYellow,                    // Astm 53D
     37              clYellow,                    // Astm 54A
     38              clYellow,                    // Astm 54B
     39              clYellow,                    // Astm 54C
     40              (TColor)0x49726f,            // Astm 59A
     41              (TColor)0x49726f,            // Astm 59B
     42              (TColor)0x49726f,            // Astm 59D
     43              (TColor)0x49726f,            // Astm 60A
     44              (TColor)0x49726f,            // Astm 60B
     45              (TColor)0x49726f,            // Astm 60C
     46              clPurple,
     47              clGreen,
     48              (TColor)0x007B044B,
     49              clDkGray,
     50              clMaroon,
     51              (TColor)0x000080FF,
     52              clWhite,
     53              (TColor)0x00B0D0B3,
     54              (TColor)0x008FF0FF,
     55              clBackground,
     56              clTeal,
     57              clGray,
     58              (TColor)0x00FF80FF,
     59              clInfoBk,
     60              clFuchsia,
     61              (TColor)0x008000FF,
     62              clSilver,
     63              (TColor)0x00004080,
     64          };
     65          

   \                                 In segment DATA_I, align 4, align-sorted
     66          int CargoTypeObject::NumberOfPredefined = CTY_API_60E;
   \                     ??NumberOfPredefined:
   \   00000000                      DS8 4
   \   00000004                      REQUIRE `?<Initializer for NumberOfPredefined>`
     67          #ifdef ANWIN
     68          TLiteQuery *CargoTypeObject::LiteQuery = NULL;
     69          #endif
     70          

   \                                 In segment DATA_C, align 4, align-sorted
     71          const int CargoTypeObject::NumberOfPredefColours = NELEMENTS(ColorTable);
   \                     ??NumberOfPredefColours:
   \   00000000   29000000           DC32 41
     72          

   \                                 In segment DATA_Z, align 4, align-sorted
     73          unsigned CargoTypeObject::NumberOfCargoTypes = 0;
   \                     ??NumberOfCargoTypes:
   \   00000000                      DS8 4

   \                                 In segment CODE, align 4, keep-with-next
     74          CargoTypeObject::CargoTypeObject(bool Fixed, bool AddToList) : PRogramObjectBase(AddToList) {
   \                     ??CargoTypeObject:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
     75              NumberOfCargoTypes++;
   \   00000004   EC609FE5           LDR      R6,??CargoTypeObject_1  ;; ??NumberOfCargoTypes
   \   00000008   1CD04DE2           SUB      SP,SP,#+28
   \   0000000C   0040A0E1           MOV      R4,R0
   \   00000010   0150A0E1           MOV      R5,R1
   \   00000014   0210A0E1           MOV      R1,R2
   \   00000018   ........           _BLF     ??PRogramObjectBase,??PRogramObjectBase??rA
   \   0000001C   D8009FE5           LDR      R0,??CargoTypeObject_1+0x4  ;; ??ColorTable
   \   00000020   A41080E2           ADD      R1,R0,#+164
   \   00000024   A41084E5           STR      R1,[R4, #+164]
   \   00000028   001096E5           LDR      R1,[R6, #+0]
   \   0000002C   011081E2           ADD      R1,R1,#+1
   \   00000030   001086E5           STR      R1,[R6, #+0]
     76              Name          = "Linear";
   \   00000034   411F80E2           ADD      R1,R0,#+260
   \   00000038   0D00A0E1           MOV      R0,SP
   \   0000003C   ........           _BLF     ??AnsiString,??AnsiString??rA
   \   00000040   ........           LDR      R1,??DataTable1  ;; ??npos
   \   00000044   0020A0E3           MOV      R2,#+0
   \   00000048   003091E5           LDR      R3,[R1, #+0]
   \   0000004C   0010A0E1           MOV      R1,R0
   \   00000050   440084E2           ADD      R0,R4,#+68
   \   00000054   ........           _BLF     ??assign,??assign??rA
   \   00000058   0020A0E3           MOV      R2,#+0
   \   0000005C   0110A0E3           MOV      R1,#+1
   \   00000060   0D00A0E1           MOV      R0,SP
   \   00000064   ........           _BLF     ??_Tidy,??_Tidy??rA
     77              IDNumber      = (C_CARGO_TYPE << 16) + NumberOfCargoTypes;
   \   00000068   000096E5           LDR      R0,[R6, #+0]
   \   0000006C   5016A0E3           MOV      R1,#+83886080
   \   00000070   AA1881E3           ORR      R1,R1,#0xAA0000
   \   00000074   000081E0           ADD      R0,R1,R0
   \   00000078   9C0084E5           STR      R0,[R4, #+156]
     78              Type          = C_CARGO_TYPE;
   \   0000007C   2108A0E1           MOV      R0,R1, LSR #+16
   \   00000080   A00084E5           STR      R0,[R4, #+160]
     79              CargoTypeKey  = CTY_NOT_DEFINED;
   \   00000084   0060E0E3           MVN      R6,#+0
   \   00000088   EC6084E5           STR      R6,[R4, #+236]
     80              InputBasicCargoType(CTY_LINEAR);
   \   0000008C   0110A0E3           MOV      R1,#+1
   \   00000090   0400A0E1           MOV      R0,R4
   \   00000094   ........           BL       ??InputBasicCargoType
     81              OD1           = 1.0;
   \   00000098   0000A0E3           MOV      R0,#+0
   \   0000009C   C015A0E3           MOV      R1,#+805306368
   \   000000A0   FF1681E3           ORR      R1,R1,#0xFF00000
   \   000000A4   B40084E5           STR      R0,[R4, #+180]
   \   000000A8   B81084E5           STR      R1,[R4, #+184]
     82              OD2           = 1.0;
   \   000000AC   BC0084E5           STR      R0,[R4, #+188]
   \   000000B0   C01084E5           STR      R1,[R4, #+192]
     83              Coeff         = 0.0000;
   \   000000B4   0010A0E3           MOV      R1,#+0
   \   000000B8   D40084E5           STR      R0,[R4, #+212]
   \   000000BC   D81084E5           STR      R1,[R4, #+216]
     84              IsFixed       = Fixed;
   \   000000C0   A850C4E5           STRB     R5,[R4, #+168]
     85              IsDefined     = false;
   \   000000C4   A900C4E5           STRB     R0,[R4, #+169]
     86          
     87              ActualTemp    = 15.0;
   \   000000C8   4004A0E3           MOV      R0,#+1073741824
   \   000000CC   5C0780E3           ORR      R0,R0,#0x1700000
   \   000000D0   AC0084E5           STR      R0,[R4, #+172]
     88              MolMass       = 0.0;
   \   000000D4   0100A0E1           MOV      R0,R1
   \   000000D8   DC0084E5           STR      R0,[R4, #+220]
   \   000000DC   E01084E5           STR      R1,[R4, #+224]
     89              Viscosity     = 0.0;
   \   000000E0   E40084E5           STR      R0,[R4, #+228]
   \   000000E4   E81084E5           STR      R1,[R4, #+232]
     90              DB_IdNumber   = -1;
   \   000000E8   B06084E5           STR      R6,[R4, #+176]
     91          }
   \   000000EC   0400A0E1           MOV      R0,R4
   \   000000F0   1CD08DE2           ADD      SP,SP,#+28
   \   000000F4   ........           B        ?Subroutine51
   \                     ??CargoTypeObject_1:
   \   000000F8   ........           DC32     ??NumberOfCargoTypes
   \   000000FC   ........           DC32     ??ColorTable

   \                                 In segment CODE, align 4, keep-with-next
   \                     ?Subroutine51:
   \   00000000   7040BDE8           POP      {R4-R6,LR}
   \   00000004   1EFF2FE1           BX       LR               ;; return
     92          

   \                                 In segment CODE, align 4, keep-with-next
     93          CargoTypeObject::~CargoTypeObject(void) {
   \                     `?~CargoTypeObject`:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
   \   0000000C   000054E3           CMP      R4,#+0
   \   00000010   0500000A           BEQ      `?~CargoTypeObject_1`
     94          }
   \   00000014   0010A0E3           MOV      R1,#+0
   \   00000018   ........           _BLF     `?~PRogramObjectBase`,`?~PRogramObjectBase??rA`
   \   0000001C   010015E3           TST      R5,#0x1
   \   00000020   0100000A           BEQ      `?~CargoTypeObject_1`
   \   00000024   0400A0E1           MOV      R0,R4
   \   00000028   ........           _BLF     `??operator delete`,`??operator delete??rA`
   \                     `?~CargoTypeObject_1`:
   \   0000002C                      REQUIRE ?Subroutine50
   \   0000002C                      ;; // Fall through to label ?Subroutine50

   \                                 In segment CODE, align 4, keep-with-next
   \                     ?Subroutine50:
   \   00000000   3040BDE8           POP      {R4,R5,LR}
   \   00000004   1EFF2FE1           BX       LR               ;; return
     95          
     96          ///////////////////////////////////////////////////////////////
     97          //
     98          // Routines for Saving of Settings
     99          //
    100          ///////////////////////////////////////////////////////////////
    101          

   \                                 In segment CODE, align 4, keep-with-next
    102          AnsiString CargoTypeObject::SaveSettings(int ExtraTabs) {
   \                     ??SaveSettings:
   \   00000000   F0432DE9           PUSH     {R4-R9,LR}
   \   00000004   88D04DE2           SUB      SP,SP,#+136
   \   00000008   80DE4DE2           SUB      SP,SP,#+2048
   \   0000000C   0040A0E1           MOV      R4,R0
   \   00000010   0150A0E1           MOV      R5,R1
   \   00000014   0260A0E1           MOV      R6,R2
    103              AnsiString TabStr1 = AnsiString::StringOfChar('\t', 1 + ExtraTabs);
   \   00000018   012086E2           ADD      R2,R6,#+1
   \   0000001C   0910A0E3           MOV      R1,#+9
   \   00000020   1C008DE2           ADD      R0,SP,#+28
   \   00000024   ........           _BLF     ??StringOfChar,??StringOfChar??rA
    104              AnsiString TabStr2 = AnsiString::StringOfChar('\t', 2 + ExtraTabs);
   \   00000028   022086E2           ADD      R2,R6,#+2
   \   0000002C   0910A0E3           MOV      R1,#+9
   \   00000030   0D00A0E1           MOV      R0,SP
   \   00000034   ........           _BLF     ??StringOfChar,??StringOfChar??rA
    105              AnsiString TabStr3 = AnsiString::StringOfChar('\t', 3 + ExtraTabs);
   \   00000038   032086E2           ADD      R2,R6,#+3
   \   0000003C   0910A0E3           MOV      R1,#+9
   \   00000040   EA0F8DE2           ADD      R0,SP,#+936
   \   00000044   400E80E2           ADD      R0,R0,#+1024
   \   00000048   ........           _BLF     ??StringOfChar,??StringOfChar??rA
    106              AnsiString TabStr4 = AnsiString::StringOfChar('\t', 4 + ExtraTabs);
   \   0000004C   042086E2           ADD      R2,R6,#+4
   \   00000050   0910A0E3           MOV      R1,#+9
   \   00000054   F10F8DE2           ADD      R0,SP,#+964
   \   00000058   400E80E2           ADD      R0,R0,#+1024
   \   0000005C   ........           _BLF     ??StringOfChar,??StringOfChar??rA
    107              AnsiString TabStr5 = AnsiString::StringOfChar('\t', 5 + ExtraTabs);
   \   00000060   052086E2           ADD      R2,R6,#+5
   \   00000064   0910A0E3           MOV      R1,#+9
   \   00000068   7E0E8DE2           ADD      R0,SP,#+2016
   \   0000006C   ........           _BLF     ??StringOfChar,??StringOfChar??rA
    108              AnsiString TabStr6 = AnsiString::StringOfChar('\t', 6 + ExtraTabs);
   \   00000070   062086E2           ADD      R2,R6,#+6
   \   00000074   0910A0E3           MOV      R1,#+9
   \   00000078   6C008DE2           ADD      R0,SP,#+108
   \   0000007C   800E80E2           ADD      R0,R0,#+2048
   \   00000080   ........           _BLF     ??StringOfChar,??StringOfChar??rA
    109          
    110              AnsiString LocalString;
   \   00000084   0500A0E1           MOV      R0,R5
   \   00000088   ........           _BLF     ??AnsiString_1,??AnsiString??rA_1
    111              if ( IsModified || WriteAll ) {
   \   0000008C   0000D4E5           LDRB     R0,[R4, #+0]
   \   00000090   000050E3           CMP      R0,#+0
   \   00000094   9C0C9F05           LDREQ    R0,??SaveSettings_1  ;; ??WriteAll
   \   00000098   0000D005           LDRBEQ   R0,[R0, #+0]
   \   0000009C   00005003           CMPEQ    R0,#+0
   \   000000A0   0603000A           BEQ      ??SaveSettings_2
    112                  IsModified = false;
    113                  LocalString += TabStr1 + KeyWord(C_CARGO_TYPE) + CrLfStr;
   \   000000A4   906C9FE5           LDR      R6,??SaveSettings_1+0x4  ;; CrLfStr
   \   000000A8   0000A0E3           MOV      R0,#+0
   \   000000AC   0000C4E5           STRB     R0,[R4, #+0]
   \   000000B0   AA10A0E3           MOV      R1,#+170
   \   000000B4   501E81E3           ORR      R1,R1,#0x500
   \   000000B8   70008DE2           ADD      R0,SP,#+112
   \   000000BC   ........           _BLF     ??KeyWord,??KeyWord??rA
   \   000000C0   70208DE2           ADD      R2,SP,#+112
   \   000000C4   1C108DE2           ADD      R1,SP,#+28
   \   000000C8   54008DE2           ADD      R0,SP,#+84
   \   000000CC   ........           _BLF     `??operator+`,`??operator+??rA`
   \   000000D0   0620A0E1           MOV      R2,R6
   \   000000D4   54108DE2           ADD      R1,SP,#+84
   \   000000D8   38008DE2           ADD      R0,SP,#+56
   \   000000DC   ........           _BLF     `??operator+`,`??operator+??rA`
   \   000000E0   ........           LDR      R0,??DataTable1  ;; ??npos
   \   000000E4   0020A0E3           MOV      R2,#+0
   \   000000E8   007090E5           LDR      R7,[R0, #+0]
   \   000000EC   38108DE2           ADD      R1,SP,#+56
   \   000000F0   0730A0E1           MOV      R3,R7
   \   000000F4   0500A0E1           MOV      R0,R5
   \   000000F8   ........           _BLF     ??append,??append??rA
   \   000000FC   0020A0E3           MOV      R2,#+0
   \   00000100   0110A0E3           MOV      R1,#+1
   \   00000104   38008DE2           ADD      R0,SP,#+56
   \   00000108   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   0000010C   0020A0E3           MOV      R2,#+0
   \   00000110   0110A0E3           MOV      R1,#+1
   \   00000114   54008DE2           ADD      R0,SP,#+84
   \   00000118   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   0000011C   0020A0E3           MOV      R2,#+0
   \   00000120   0110A0E3           MOV      R1,#+1
   \   00000124   70008DE2           ADD      R0,SP,#+112
   \   00000128   ........           _BLF     ??_Tidy,??_Tidy??rA
    114                  LocalString += TabStr2 + KeyWord(C_CT_NAME) + Name + CrLfStr;
   \   0000012C   B710A0E3           MOV      R1,#+183
   \   00000130   501E81E3           ORR      R1,R1,#0x500
   \   00000134   E0008DE2           ADD      R0,SP,#+224
   \   00000138   ........           _BLF     ??KeyWord,??KeyWord??rA
   \   0000013C   E0208DE2           ADD      R2,SP,#+224
   \   00000140   0D10A0E1           MOV      R1,SP
   \   00000144   C4008DE2           ADD      R0,SP,#+196
   \   00000148   ........           _BLF     `??operator+`,`??operator+??rA`
   \   0000014C   442084E2           ADD      R2,R4,#+68
   \   00000150   C4108DE2           ADD      R1,SP,#+196
   \   00000154   A8008DE2           ADD      R0,SP,#+168
   \   00000158   ........           _BLF     `??operator+`,`??operator+??rA`
   \   0000015C   0620A0E1           MOV      R2,R6
   \   00000160   A8108DE2           ADD      R1,SP,#+168
   \   00000164   8C008DE2           ADD      R0,SP,#+140
   \   00000168   ........           _BLF     `??operator+`,`??operator+??rA`
   \   0000016C   0730A0E1           MOV      R3,R7
   \   00000170   0020A0E3           MOV      R2,#+0
   \   00000174   8C108DE2           ADD      R1,SP,#+140
   \   00000178   0500A0E1           MOV      R0,R5
   \   0000017C   ........           _BLF     ??append,??append??rA
   \   00000180   0020A0E3           MOV      R2,#+0
   \   00000184   0110A0E3           MOV      R1,#+1
   \   00000188   8C008DE2           ADD      R0,SP,#+140
   \   0000018C   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000190   0020A0E3           MOV      R2,#+0
   \   00000194   0110A0E3           MOV      R1,#+1
   \   00000198   A8008DE2           ADD      R0,SP,#+168
   \   0000019C   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000001A0   0020A0E3           MOV      R2,#+0
   \   000001A4   0110A0E3           MOV      R1,#+1
   \   000001A8   C4008DE2           ADD      R0,SP,#+196
   \   000001AC   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000001B0   0020A0E3           MOV      R2,#+0
   \   000001B4   0110A0E3           MOV      R1,#+1
   \   000001B8   E0008DE2           ADD      R0,SP,#+224
   \   000001BC   ........           _BLF     ??_Tidy,??_Tidy??rA
    115                  LocalString += TabStr2 + KeyWord(C_CT_COLOUR) + (AnsiString)((int)Colour) + CrLfStr;
   \   000001C0   F41094E5           LDR      R1,[R4, #+244]
   \   000001C4   FF0F8DE2           ADD      R0,SP,#+1020
   \   000001C8   400E80E2           ADD      R0,R0,#+1024
   \   000001CC   ........           _BLF     ??AnsiString_2,??AnsiString??rA_2
   \   000001D0   0080A0E1           MOV      R8,R0
   \   000001D4   B610A0E3           MOV      R1,#+182
   \   000001D8   501E81E3           ORR      R1,R1,#0x500
   \   000001DC   540F8DE2           ADD      R0,SP,#+336
   \   000001E0   ........           _BLF     ??KeyWord,??KeyWord??rA
   \   000001E4   542F8DE2           ADD      R2,SP,#+336
   \   000001E8   0D10A0E1           MOV      R1,SP
   \   000001EC   4D0F8DE2           ADD      R0,SP,#+308
   \   000001F0   ........           _BLF     `??operator+`,`??operator+??rA`
   \   000001F4   0820A0E1           MOV      R2,R8
   \   000001F8   4D1F8DE2           ADD      R1,SP,#+308
   \   000001FC   460F8DE2           ADD      R0,SP,#+280
   \   00000200   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000204   0620A0E1           MOV      R2,R6
   \   00000208   461F8DE2           ADD      R1,SP,#+280
   \   0000020C   FC008DE2           ADD      R0,SP,#+252
   \   00000210   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000214   0730A0E1           MOV      R3,R7
   \   00000218   0020A0E3           MOV      R2,#+0
   \   0000021C   FC108DE2           ADD      R1,SP,#+252
   \   00000220   0500A0E1           MOV      R0,R5
   \   00000224   ........           _BLF     ??append,??append??rA
   \   00000228   0020A0E3           MOV      R2,#+0
   \   0000022C   0110A0E3           MOV      R1,#+1
   \   00000230   FC008DE2           ADD      R0,SP,#+252
   \   00000234   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000238   0020A0E3           MOV      R2,#+0
   \   0000023C   0110A0E3           MOV      R1,#+1
   \   00000240   460F8DE2           ADD      R0,SP,#+280
   \   00000244   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000248   0020A0E3           MOV      R2,#+0
   \   0000024C   0110A0E3           MOV      R1,#+1
   \   00000250   FF0F8DE2           ADD      R0,SP,#+1020
   \   00000254   400E80E2           ADD      R0,R0,#+1024
   \   00000258   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   0000025C   0020A0E3           MOV      R2,#+0
   \   00000260   0110A0E3           MOV      R1,#+1
   \   00000264   4D0F8DE2           ADD      R0,SP,#+308
   \   00000268   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   0000026C   0020A0E3           MOV      R2,#+0
   \   00000270   0110A0E3           MOV      R1,#+1
   \   00000274   540F8DE2           ADD      R0,SP,#+336
   \   00000278   ........           _BLF     ??_Tidy,??_Tidy??rA
    116                  LocalString += TabStr2 + KeyWord(C_CT_CARGO_TYPE_KEY) + (AnsiString)CargoTypeKey + CrLfStr;
   \   0000027C   EC1094E5           LDR      R1,[R4, #+236]
   \   00000280   18008DE2           ADD      R0,SP,#+24
   \   00000284   800E80E2           ADD      R0,R0,#+2048
   \   00000288   ........           _BLF     ??AnsiString_2,??AnsiString??rA_2
   \   0000028C   0080A0E1           MOV      R8,R0
   \   00000290   AD10A0E3           MOV      R1,#+173
   \   00000294   501E81E3           ORR      R1,R1,#0x500
   \   00000298   700F8DE2           ADD      R0,SP,#+448
   \   0000029C   ........           _BLF     ??KeyWord,??KeyWord??rA
   \   000002A0   702F8DE2           ADD      R2,SP,#+448
   \   000002A4   0D10A0E1           MOV      R1,SP
   \   000002A8   690F8DE2           ADD      R0,SP,#+420
   \   000002AC   ........           _BLF     `??operator+`,`??operator+??rA`
   \   000002B0   0820A0E1           MOV      R2,R8
   \   000002B4   691F8DE2           ADD      R1,SP,#+420
   \   000002B8   620F8DE2           ADD      R0,SP,#+392
   \   000002BC   ........           _BLF     `??operator+`,`??operator+??rA`
   \   000002C0   0620A0E1           MOV      R2,R6
   \   000002C4   621F8DE2           ADD      R1,SP,#+392
   \   000002C8   5B0F8DE2           ADD      R0,SP,#+364
   \   000002CC   ........           _BLF     `??operator+`,`??operator+??rA`
   \   000002D0   0730A0E1           MOV      R3,R7
   \   000002D4   0020A0E3           MOV      R2,#+0
   \   000002D8   5B1F8DE2           ADD      R1,SP,#+364
   \   000002DC   0500A0E1           MOV      R0,R5
   \   000002E0   ........           _BLF     ??append,??append??rA
   \   000002E4   0020A0E3           MOV      R2,#+0
   \   000002E8   0110A0E3           MOV      R1,#+1
   \   000002EC   5B0F8DE2           ADD      R0,SP,#+364
   \   000002F0   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000002F4   0020A0E3           MOV      R2,#+0
   \   000002F8   0110A0E3           MOV      R1,#+1
   \   000002FC   620F8DE2           ADD      R0,SP,#+392
   \   00000300   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000304   0020A0E3           MOV      R2,#+0
   \   00000308   0110A0E3           MOV      R1,#+1
   \   0000030C   18008DE2           ADD      R0,SP,#+24
   \   00000310   800E80E2           ADD      R0,R0,#+2048
   \   00000314   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000318   0020A0E3           MOV      R2,#+0
   \   0000031C   0110A0E3           MOV      R1,#+1
   \   00000320   690F8DE2           ADD      R0,SP,#+420
   \   00000324   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000328   0020A0E3           MOV      R2,#+0
   \   0000032C   0110A0E3           MOV      R1,#+1
   \   00000330   700F8DE2           ADD      R0,SP,#+448
   \   00000334   ........           _BLF     ??_Tidy,??_Tidy??rA
    117                  LocalString += TabStr2 + KeyWord(C_CT_BASIC_CARGO_TYPE) + (AnsiString)BaseCargoType + CrLfStr;
   \   00000338   F01094E5           LDR      R1,[R4, #+240]
   \   0000033C   34008DE2           ADD      R0,SP,#+52
   \   00000340   800E80E2           ADD      R0,R0,#+2048
   \   00000344   ........           _BLF     ??AnsiString_2,??AnsiString??rA_2
   \   00000348   0080A0E1           MOV      R8,R0
   \   0000034C   AE10A0E3           MOV      R1,#+174
   \   00000350   501E81E3           ORR      R1,R1,#0x500
   \   00000354   8C0F8DE2           ADD      R0,SP,#+560
   \   00000358   ........           _BLF     ??KeyWord,??KeyWord??rA
   \   0000035C   8C2F8DE2           ADD      R2,SP,#+560
   \   00000360   0D10A0E1           MOV      R1,SP
   \   00000364   850F8DE2           ADD      R0,SP,#+532
   \   00000368   ........           _BLF     `??operator+`,`??operator+??rA`
   \   0000036C   0820A0E1           MOV      R2,R8
   \   00000370   851F8DE2           ADD      R1,SP,#+532
   \   00000374   7E0F8DE2           ADD      R0,SP,#+504
   \   00000378   ........           _BLF     `??operator+`,`??operator+??rA`
   \   0000037C   0620A0E1           MOV      R2,R6
   \   00000380   7E1F8DE2           ADD      R1,SP,#+504
   \   00000384   770F8DE2           ADD      R0,SP,#+476
   \   00000388   ........           _BLF     `??operator+`,`??operator+??rA`
   \   0000038C   0730A0E1           MOV      R3,R7
   \   00000390   0020A0E3           MOV      R2,#+0
   \   00000394   771F8DE2           ADD      R1,SP,#+476
   \   00000398   0500A0E1           MOV      R0,R5
   \   0000039C   ........           _BLF     ??append,??append??rA
   \   000003A0   0020A0E3           MOV      R2,#+0
   \   000003A4   0110A0E3           MOV      R1,#+1
   \   000003A8   770F8DE2           ADD      R0,SP,#+476
   \   000003AC   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000003B0   0020A0E3           MOV      R2,#+0
   \   000003B4   0110A0E3           MOV      R1,#+1
   \   000003B8   7E0F8DE2           ADD      R0,SP,#+504
   \   000003BC   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000003C0   0020A0E3           MOV      R2,#+0
   \   000003C4   0110A0E3           MOV      R1,#+1
   \   000003C8   34008DE2           ADD      R0,SP,#+52
   \   000003CC   800E80E2           ADD      R0,R0,#+2048
   \   000003D0   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000003D4   0020A0E3           MOV      R2,#+0
   \   000003D8   0110A0E3           MOV      R1,#+1
   \   000003DC   850F8DE2           ADD      R0,SP,#+532
   \   000003E0   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000003E4   0020A0E3           MOV      R2,#+0
   \   000003E8   0110A0E3           MOV      R1,#+1
   \   000003EC   8C0F8DE2           ADD      R0,SP,#+560
   \   000003F0   ........           _BLF     ??_Tidy,??_Tidy??rA
    118                  LocalString += TabStr2 + KeyWord(C_CT_DB_IDNUMBER) + (AnsiString)DB_IdNumber + CrLfStr;
   \   000003F4   B01094E5           LDR      R1,[R4, #+176]
   \   000003F8   850E8DE2           ADD      R0,SP,#+2128
   \   000003FC   ........           _BLF     ??AnsiString_2,??AnsiString??rA_2
   \   00000400   0080A0E1           MOV      R8,R0
   \   00000404   BF10A0E3           MOV      R1,#+191
   \   00000408   501E81E3           ORR      R1,R1,#0x500
   \   0000040C   A80F8DE2           ADD      R0,SP,#+672
   \   00000410   ........           _BLF     ??KeyWord,??KeyWord??rA
   \   00000414   A82F8DE2           ADD      R2,SP,#+672
   \   00000418   0D10A0E1           MOV      R1,SP
   \   0000041C   A10F8DE2           ADD      R0,SP,#+644
   \   00000420   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000424   0820A0E1           MOV      R2,R8
   \   00000428   A11F8DE2           ADD      R1,SP,#+644
   \   0000042C   9A0F8DE2           ADD      R0,SP,#+616
   \   00000430   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000434   0620A0E1           MOV      R2,R6
   \   00000438   9A1F8DE2           ADD      R1,SP,#+616
   \   0000043C   930F8DE2           ADD      R0,SP,#+588
   \   00000440   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000444   0730A0E1           MOV      R3,R7
   \   00000448   0020A0E3           MOV      R2,#+0
   \   0000044C   931F8DE2           ADD      R1,SP,#+588
   \   00000450   0500A0E1           MOV      R0,R5
   \   00000454   ........           _BLF     ??append,??append??rA
   \   00000458   0020A0E3           MOV      R2,#+0
   \   0000045C   0110A0E3           MOV      R1,#+1
   \   00000460   930F8DE2           ADD      R0,SP,#+588
   \   00000464   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000468   0020A0E3           MOV      R2,#+0
   \   0000046C   0110A0E3           MOV      R1,#+1
   \   00000470   9A0F8DE2           ADD      R0,SP,#+616
   \   00000474   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000478   0020A0E3           MOV      R2,#+0
   \   0000047C   0110A0E3           MOV      R1,#+1
   \   00000480   850E8DE2           ADD      R0,SP,#+2128
   \   00000484   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000488   0020A0E3           MOV      R2,#+0
   \   0000048C   0110A0E3           MOV      R1,#+1
   \   00000490   A10F8DE2           ADD      R0,SP,#+644
   \   00000494   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000498   0020A0E3           MOV      R2,#+0
   \   0000049C   0110A0E3           MOV      R1,#+1
   \   000004A0   A80F8DE2           ADD      R0,SP,#+672
   \   000004A4   ........           _BLF     ??_Tidy,??_Tidy??rA
    119          
    120          #if defined(S2TXU) || defined(ANTDUSIM)
    121                  LocalString += TabStr2 + KeyWord(C_CT_OD1) + TabStr3 + FloatToAnsiString(OD1, 8, 5) + CrLfStr;
   \   000004A8   B40094E5           LDR      R0,[R4, #+180]
   \   000004AC   B81094E5           LDR      R1,[R4, #+184]
   \   000004B0   0880A0E3           MOV      R8,#+8
   \   000004B4   ........           _BLF     __doubleToFloat,??__doubleToFloat??rA
   \   000004B8   0010A0E1           MOV      R1,R0
   \   000004BC   0530A0E3           MOV      R3,#+5
   \   000004C0   0820A0E1           MOV      R2,R8
   \   000004C4   D20F8DE2           ADD      R0,SP,#+840
   \   000004C8   ........           _BLF     ??FloatToAnsiString,??FloatToAnsiString??rA
   \   000004CC   5B1EA0E3           MOV      R1,#+1456
   \   000004D0   CB0F8DE2           ADD      R0,SP,#+812
   \   000004D4   ........           _BLF     ??KeyWord,??KeyWord??rA
   \   000004D8   CB2F8DE2           ADD      R2,SP,#+812
   \   000004DC   0D10A0E1           MOV      R1,SP
   \   000004E0   C40F8DE2           ADD      R0,SP,#+784
   \   000004E4   ........           _BLF     `??operator+`,`??operator+??rA`
   \   000004E8   EA2F8DE2           ADD      R2,SP,#+936
   \   000004EC   402E82E2           ADD      R2,R2,#+1024
   \   000004F0   C41F8DE2           ADD      R1,SP,#+784
   \   000004F4   BD0F8DE2           ADD      R0,SP,#+756
   \   000004F8   ........           _BLF     `??operator+`,`??operator+??rA`
   \   000004FC   D22F8DE2           ADD      R2,SP,#+840
   \   00000500   BD1F8DE2           ADD      R1,SP,#+756
   \   00000504   B60F8DE2           ADD      R0,SP,#+728
   \   00000508   ........           _BLF     `??operator+`,`??operator+??rA`
   \   0000050C   0620A0E1           MOV      R2,R6
   \   00000510   B61F8DE2           ADD      R1,SP,#+728
   \   00000514   AF0F8DE2           ADD      R0,SP,#+700
   \   00000518   ........           _BLF     `??operator+`,`??operator+??rA`
   \   0000051C   0730A0E1           MOV      R3,R7
   \   00000520   0020A0E3           MOV      R2,#+0
   \   00000524   AF1F8DE2           ADD      R1,SP,#+700
   \   00000528   0500A0E1           MOV      R0,R5
   \   0000052C   ........           _BLF     ??append,??append??rA
   \   00000530   0020A0E3           MOV      R2,#+0
   \   00000534   0110A0E3           MOV      R1,#+1
   \   00000538   AF0F8DE2           ADD      R0,SP,#+700
   \   0000053C   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000540   0020A0E3           MOV      R2,#+0
   \   00000544   0110A0E3           MOV      R1,#+1
   \   00000548   B60F8DE2           ADD      R0,SP,#+728
   \   0000054C   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000550   0020A0E3           MOV      R2,#+0
   \   00000554   0110A0E3           MOV      R1,#+1
   \   00000558   D20F8DE2           ADD      R0,SP,#+840
   \   0000055C   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000560   0020A0E3           MOV      R2,#+0
   \   00000564   0110A0E3           MOV      R1,#+1
   \   00000568   BD0F8DE2           ADD      R0,SP,#+756
   \   0000056C   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000570   0020A0E3           MOV      R2,#+0
   \   00000574   0110A0E3           MOV      R1,#+1
   \   00000578   C40F8DE2           ADD      R0,SP,#+784
   \   0000057C   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000580   0020A0E3           MOV      R2,#+0
   \   00000584   0110A0E3           MOV      R1,#+1
   \   00000588   CB0F8DE2           ADD      R0,SP,#+812
   \   0000058C   ........           _BLF     ??_Tidy,??_Tidy??rA
    122                  LocalString += TabStr2 + KeyWord(C_CT_OD2) + TabStr3 + FloatToAnsiString(OD2, 8, 5) + CrLfStr;
   \   00000590   BC0094E5           LDR      R0,[R4, #+188]
   \   00000594   C01094E5           LDR      R1,[R4, #+192]
   \   00000598   0590A0E3           MOV      R9,#+5
   \   0000059C   ........           _BLF     __doubleToFloat,??__doubleToFloat??rA
   \   000005A0   0010A0E1           MOV      R1,R0
   \   000005A4   0930A0E1           MOV      R3,R9
   \   000005A8   0820A0E1           MOV      R2,R8
   \   000005AC   FC0F8DE2           ADD      R0,SP,#+1008
   \   000005B0   ........           _BLF     ??FloatToAnsiString,??FloatToAnsiString??rA
   \   000005B4   B110A0E3           MOV      R1,#+177
   \   000005B8   501E81E3           ORR      R1,R1,#0x500
   \   000005BC   F50F8DE2           ADD      R0,SP,#+980
   \   000005C0   ........           _BLF     ??KeyWord,??KeyWord??rA
   \   000005C4   F52F8DE2           ADD      R2,SP,#+980
   \   000005C8   0D10A0E1           MOV      R1,SP
   \   000005CC   EE0F8DE2           ADD      R0,SP,#+952
   \   000005D0   ........           _BLF     `??operator+`,`??operator+??rA`
   \   000005D4   EA2F8DE2           ADD      R2,SP,#+936
   \   000005D8   402E82E2           ADD      R2,R2,#+1024
   \   000005DC   EE1F8DE2           ADD      R1,SP,#+952
   \   000005E0   E70F8DE2           ADD      R0,SP,#+924
   \   000005E4   ........           _BLF     `??operator+`,`??operator+??rA`
   \   000005E8   FC2F8DE2           ADD      R2,SP,#+1008
   \   000005EC   E71F8DE2           ADD      R1,SP,#+924
   \   000005F0   E00F8DE2           ADD      R0,SP,#+896
   \   000005F4   ........           _BLF     `??operator+`,`??operator+??rA`
   \   000005F8   0620A0E1           MOV      R2,R6
   \   000005FC   E01F8DE2           ADD      R1,SP,#+896
   \   00000600   D90F8DE2           ADD      R0,SP,#+868
   \   00000604   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000608   0730A0E1           MOV      R3,R7
   \   0000060C   0020A0E3           MOV      R2,#+0
   \   00000610   D91F8DE2           ADD      R1,SP,#+868
   \   00000614   0500A0E1           MOV      R0,R5
   \   00000618   ........           _BLF     ??append,??append??rA
   \   0000061C   0020A0E3           MOV      R2,#+0
   \   00000620   0110A0E3           MOV      R1,#+1
   \   00000624   D90F8DE2           ADD      R0,SP,#+868
   \   00000628   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   0000062C   0020A0E3           MOV      R2,#+0
   \   00000630   0110A0E3           MOV      R1,#+1
   \   00000634   E00F8DE2           ADD      R0,SP,#+896
   \   00000638   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   0000063C   0020A0E3           MOV      R2,#+0
   \   00000640   0110A0E3           MOV      R1,#+1
   \   00000644   FC0F8DE2           ADD      R0,SP,#+1008
   \   00000648   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   0000064C   0020A0E3           MOV      R2,#+0
   \   00000650   0110A0E3           MOV      R1,#+1
   \   00000654   E70F8DE2           ADD      R0,SP,#+924
   \   00000658   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   0000065C   0020A0E3           MOV      R2,#+0
   \   00000660   0110A0E3           MOV      R1,#+1
   \   00000664   EE0F8DE2           ADD      R0,SP,#+952
   \   00000668   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   0000066C   0020A0E3           MOV      R2,#+0
   \   00000670   0110A0E3           MOV      R1,#+1
   \   00000674   F50F8DE2           ADD      R0,SP,#+980
   \   00000678   ........           _BLF     ??_Tidy,??_Tidy??rA
    123                  LocalString += TabStr5 + KeyWord(C_CT_REFTEMP1) + TabStr1 + FloatToAnsiString(RefTmp1, 8, 2) + CrLfStr;
   \   0000067C   C40094E5           LDR      R0,[R4, #+196]
   \   00000680   C81094E5           LDR      R1,[R4, #+200]
   \   00000684   0230A0E3           MOV      R3,#+2
   \   00000688   0390A0E1           MOV      R9,R3
   \   0000068C   ........           _BLF     __doubleToFloat,??__doubleToFloat??rA
   \   00000690   0010A0E1           MOV      R1,R0
   \   00000694   0930A0E1           MOV      R3,R9
   \   00000698   0820A0E1           MOV      R2,R8
   \   0000069C   98008DE2           ADD      R0,SP,#+152
   \   000006A0   400E80E2           ADD      R0,R0,#+1024
   \   000006A4   ........           _BLF     ??FloatToAnsiString,??FloatToAnsiString??rA
   \   000006A8   5B1E89E3           ORR      R1,R9,#0x5B0
   \   000006AC   7C008DE2           ADD      R0,SP,#+124
   \   000006B0   400E80E2           ADD      R0,R0,#+1024
   \   000006B4   ........           _BLF     ??KeyWord,??KeyWord??rA
   \   000006B8   7C208DE2           ADD      R2,SP,#+124
   \   000006BC   402E82E2           ADD      R2,R2,#+1024
   \   000006C0   7E1E8DE2           ADD      R1,SP,#+2016
   \   000006C4   460E8DE2           ADD      R0,SP,#+1120
   \   000006C8   ........           _BLF     `??operator+`,`??operator+??rA`
   \   000006CC   1C208DE2           ADD      R2,SP,#+28
   \   000006D0   461E8DE2           ADD      R1,SP,#+1120
   \   000006D4   44008DE2           ADD      R0,SP,#+68
   \   000006D8   400E80E2           ADD      R0,R0,#+1024
   \   000006DC   ........           _BLF     `??operator+`,`??operator+??rA`
   \   000006E0   98208DE2           ADD      R2,SP,#+152
   \   000006E4   402E82E2           ADD      R2,R2,#+1024
   \   000006E8   44108DE2           ADD      R1,SP,#+68
   \   000006EC   401E81E2           ADD      R1,R1,#+1024
   \   000006F0   28008DE2           ADD      R0,SP,#+40
   \   000006F4   400E80E2           ADD      R0,R0,#+1024
   \   000006F8   ........           _BLF     `??operator+`,`??operator+??rA`
   \   000006FC   0620A0E1           MOV      R2,R6
   \   00000700   28108DE2           ADD      R1,SP,#+40
   \   00000704   401E81E2           ADD      R1,R1,#+1024
   \   00000708   0C008DE2           ADD      R0,SP,#+12
   \   0000070C   400E80E2           ADD      R0,R0,#+1024
   \   00000710   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000714   0730A0E1           MOV      R3,R7
   \   00000718   0020A0E3           MOV      R2,#+0
   \   0000071C   0C108DE2           ADD      R1,SP,#+12
   \   00000720   401E81E2           ADD      R1,R1,#+1024
   \   00000724   0500A0E1           MOV      R0,R5
   \   00000728   ........           _BLF     ??append,??append??rA
   \   0000072C   0020A0E3           MOV      R2,#+0
   \   00000730   0110A0E3           MOV      R1,#+1
   \   00000734   0C008DE2           ADD      R0,SP,#+12
   \   00000738   400E80E2           ADD      R0,R0,#+1024
   \   0000073C   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000740   0020A0E3           MOV      R2,#+0
   \   00000744   0110A0E3           MOV      R1,#+1
   \   00000748   28008DE2           ADD      R0,SP,#+40
   \   0000074C   400E80E2           ADD      R0,R0,#+1024
   \   00000750   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000754   0020A0E3           MOV      R2,#+0
   \   00000758   0110A0E3           MOV      R1,#+1
   \   0000075C   98008DE2           ADD      R0,SP,#+152
   \   00000760   400E80E2           ADD      R0,R0,#+1024
   \   00000764   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000768   0020A0E3           MOV      R2,#+0
   \   0000076C   0110A0E3           MOV      R1,#+1
   \   00000770   44008DE2           ADD      R0,SP,#+68
   \   00000774   400E80E2           ADD      R0,R0,#+1024
   \   00000778   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   0000077C   0020A0E3           MOV      R2,#+0
   \   00000780   0110A0E3           MOV      R1,#+1
   \   00000784   460E8DE2           ADD      R0,SP,#+1120
   \   00000788   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   0000078C   0020A0E3           MOV      R2,#+0
   \   00000790   0110A0E3           MOV      R1,#+1
   \   00000794   7C008DE2           ADD      R0,SP,#+124
   \   00000798   400E80E2           ADD      R0,R0,#+1024
   \   0000079C   ........           _BLF     ??_Tidy,??_Tidy??rA
    124                  LocalString += TabStr5 + KeyWord(C_CT_REFTEMP2) + TabStr1 + FloatToAnsiString(RefTmp2, 8, 2) + CrLfStr;
   \   000007A0   CC0094E5           LDR      R0,[R4, #+204]
   \   000007A4   D01094E5           LDR      R1,[R4, #+208]
   \   000007A8   ........           _BLF     __doubleToFloat,??__doubleToFloat??rA
   \   000007AC   0010A0E1           MOV      R1,R0
   \   000007B0   0930A0E1           MOV      R3,R9
   \   000007B4   0820A0E1           MOV      R2,R8
   \   000007B8   540E8DE2           ADD      R0,SP,#+1344
   \   000007BC   ........           _BLF     ??FloatToAnsiString,??FloatToAnsiString??rA
   \   000007C0   B310A0E3           MOV      R1,#+179
   \   000007C4   501E81E3           ORR      R1,R1,#0x500
   \   000007C8   490F8DE2           ADD      R0,SP,#+292
   \   000007CC   400E80E2           ADD      R0,R0,#+1024
   \   000007D0   ........           _BLF     ??KeyWord,??KeyWord??rA
   \   000007D4   492F8DE2           ADD      R2,SP,#+292
   \   000007D8   402E82E2           ADD      R2,R2,#+1024
   \   000007DC   7E1E8DE2           ADD      R1,SP,#+2016
   \   000007E0   420F8DE2           ADD      R0,SP,#+264
   \   000007E4   400E80E2           ADD      R0,R0,#+1024
   \   000007E8   ........           _BLF     `??operator+`,`??operator+??rA`
   \   000007EC   1C208DE2           ADD      R2,SP,#+28
   \   000007F0   421F8DE2           ADD      R1,SP,#+264
   \   000007F4   401E81E2           ADD      R1,R1,#+1024
   \   000007F8   EC008DE2           ADD      R0,SP,#+236
   \   000007FC   400E80E2           ADD      R0,R0,#+1024
   \   00000800   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000804   542E8DE2           ADD      R2,SP,#+1344
   \   00000808   EC108DE2           ADD      R1,SP,#+236
   \   0000080C   401E81E2           ADD      R1,R1,#+1024
   \   00000810   4D0E8DE2           ADD      R0,SP,#+1232
   \   00000814   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000818   0620A0E1           MOV      R2,R6
   \   0000081C   4D1E8DE2           ADD      R1,SP,#+1232
   \   00000820   B4008DE2           ADD      R0,SP,#+180
   \   00000824   400E80E2           ADD      R0,R0,#+1024
   \   00000828   ........           _BLF     `??operator+`,`??operator+??rA`
   \   0000082C   0730A0E1           MOV      R3,R7
   \   00000830   0020A0E3           MOV      R2,#+0
   \   00000834   B4108DE2           ADD      R1,SP,#+180
   \   00000838   401E81E2           ADD      R1,R1,#+1024
   \   0000083C   0500A0E1           MOV      R0,R5
   \   00000840   ........           _BLF     ??append,??append??rA
   \   00000844   0020A0E3           MOV      R2,#+0
   \   00000848   0110A0E3           MOV      R1,#+1
   \   0000084C   B4008DE2           ADD      R0,SP,#+180
   \   00000850   400E80E2           ADD      R0,R0,#+1024
   \   00000854   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000858   0020A0E3           MOV      R2,#+0
   \   0000085C   0110A0E3           MOV      R1,#+1
   \   00000860   4D0E8DE2           ADD      R0,SP,#+1232
   \   00000864   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000868   0020A0E3           MOV      R2,#+0
   \   0000086C   0110A0E3           MOV      R1,#+1
   \   00000870   540E8DE2           ADD      R0,SP,#+1344
   \   00000874   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000878   0020A0E3           MOV      R2,#+0
   \   0000087C   0110A0E3           MOV      R1,#+1
   \   00000880   EC008DE2           ADD      R0,SP,#+236
   \   00000884   400E80E2           ADD      R0,R0,#+1024
   \   00000888   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   0000088C   0020A0E3           MOV      R2,#+0
   \   00000890   0110A0E3           MOV      R1,#+1
   \   00000894   420F8DE2           ADD      R0,SP,#+264
   \   00000898   400E80E2           ADD      R0,R0,#+1024
   \   0000089C   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000008A0   0020A0E3           MOV      R2,#+0
   \   000008A4   0110A0E3           MOV      R1,#+1
   \   000008A8   490F8DE2           ADD      R0,SP,#+292
   \   000008AC   400E80E2           ADD      R0,R0,#+1024
   \   000008B0   ........           _BLF     ??_Tidy,??_Tidy??rA
    125                  LocalString += TabStr4 + KeyWord(C_CT_COEFF) + TabStr2 + FloatToAnsiString(Coeff, 8, 6) + CrLfStr;
   \   000008B4   D40094E5           LDR      R0,[R4, #+212]
   \   000008B8   D81094E5           LDR      R1,[R4, #+216]
   \   000008BC   0630A0E3           MOV      R3,#+6
   \   000008C0   0390A0E1           MOV      R9,R3
   \   000008C4   ........           _BLF     __doubleToFloat,??__doubleToFloat??rA
   \   000008C8   0010A0E1           MOV      R1,R0
   \   000008CC   0930A0E1           MOV      R3,R9
   \   000008D0   0820A0E1           MOV      R2,R8
   \   000008D4   7A0F8DE2           ADD      R0,SP,#+488
   \   000008D8   400E80E2           ADD      R0,R0,#+1024
   \   000008DC   ........           _BLF     ??FloatToAnsiString,??FloatToAnsiString??rA
   \   000008E0   B410A0E3           MOV      R1,#+180
   \   000008E4   501E81E3           ORR      R1,R1,#0x500
   \   000008E8   730F8DE2           ADD      R0,SP,#+460
   \   000008EC   400E80E2           ADD      R0,R0,#+1024
   \   000008F0   ........           _BLF     ??KeyWord,??KeyWord??rA
   \   000008F4   732F8DE2           ADD      R2,SP,#+460
   \   000008F8   402E82E2           ADD      R2,R2,#+1024
   \   000008FC   F11F8DE2           ADD      R1,SP,#+964
   \   00000900   401E81E2           ADD      R1,R1,#+1024
   \   00000904   5B0E8DE2           ADD      R0,SP,#+1456
   \   00000908   ........           _BLF     `??operator+`,`??operator+??rA`
   \   0000090C   0D20A0E1           MOV      R2,SP
   \   00000910   5B1E8DE2           ADD      R1,SP,#+1456
   \   00000914   650F8DE2           ADD      R0,SP,#+404
   \   00000918   400E80E2           ADD      R0,R0,#+1024
   \   0000091C   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000920   7A2F8DE2           ADD      R2,SP,#+488
   \   00000924   402E82E2           ADD      R2,R2,#+1024
   \   00000928   651F8DE2           ADD      R1,SP,#+404
   \   0000092C   401E81E2           ADD      R1,R1,#+1024
   \   00000930   5E0F8DE2           ADD      R0,SP,#+376
   \   00000934   400E80E2           ADD      R0,R0,#+1024
   \   00000938   ........           _BLF     `??operator+`,`??operator+??rA`
   \   0000093C   0620A0E1           MOV      R2,R6
   \   00000940   5E1F8DE2           ADD      R1,SP,#+376
   \   00000944   401E81E2           ADD      R1,R1,#+1024
   \   00000948   570F8DE2           ADD      R0,SP,#+348
   \   0000094C   400E80E2           ADD      R0,R0,#+1024
   \   00000950   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000954   0730A0E1           MOV      R3,R7
   \   00000958   0020A0E3           MOV      R2,#+0
   \   0000095C   571F8DE2           ADD      R1,SP,#+348
   \   00000960   401E81E2           ADD      R1,R1,#+1024
   \   00000964   0500A0E1           MOV      R0,R5
   \   00000968   ........           _BLF     ??append,??append??rA
   \   0000096C   0020A0E3           MOV      R2,#+0
   \   00000970   0110A0E3           MOV      R1,#+1
   \   00000974   570F8DE2           ADD      R0,SP,#+348
   \   00000978   400E80E2           ADD      R0,R0,#+1024
   \   0000097C   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000980   0020A0E3           MOV      R2,#+0
   \   00000984   0110A0E3           MOV      R1,#+1
   \   00000988   5E0F8DE2           ADD      R0,SP,#+376
   \   0000098C   400E80E2           ADD      R0,R0,#+1024
   \   00000990   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000994   0020A0E3           MOV      R2,#+0
   \   00000998   0110A0E3           MOV      R1,#+1
   \   0000099C   7A0F8DE2           ADD      R0,SP,#+488
   \   000009A0   400E80E2           ADD      R0,R0,#+1024
   \   000009A4   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000009A8   0020A0E3           MOV      R2,#+0
   \   000009AC   0110A0E3           MOV      R1,#+1
   \   000009B0   650F8DE2           ADD      R0,SP,#+404
   \   000009B4   400E80E2           ADD      R0,R0,#+1024
   \   000009B8   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000009BC   0020A0E3           MOV      R2,#+0
   \   000009C0   0110A0E3           MOV      R1,#+1
   \   000009C4   5B0E8DE2           ADD      R0,SP,#+1456
   \   000009C8   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000009CC   0020A0E3           MOV      R2,#+0
   \   000009D0   0110A0E3           MOV      R1,#+1
   \   000009D4   730F8DE2           ADD      R0,SP,#+460
   \   000009D8   400E80E2           ADD      R0,R0,#+1024
   \   000009DC   ........           _BLF     ??_Tidy,??_Tidy??rA
    126                  LocalString += TabStr3 + KeyWord(C_CT_MOLMASS) + TabStr1 + FloatToAnsiString(MolMass, 8, 2) + CrLfStr;
   \   000009E0   DC0094E5           LDR      R0,[R4, #+220]
   \   000009E4   E01094E5           LDR      R1,[R4, #+224]
   \   000009E8   0230A0E3           MOV      R3,#+2
   \   000009EC   0390A0E1           MOV      R9,R3
   \   000009F0   ........           _BLF     __doubleToFloat,??__doubleToFloat??rA
   \   000009F4   0010A0E1           MOV      R1,R0
   \   000009F8   0930A0E1           MOV      R3,R9
   \   000009FC   0820A0E1           MOV      R2,R8
   \   00000A00   690E8DE2           ADD      R0,SP,#+1680
   \   00000A04   ........           _BLF     ??FloatToAnsiString,??FloatToAnsiString??rA
   \   00000A08   BD10A0E3           MOV      R1,#+189
   \   00000A0C   501E81E3           ORR      R1,R1,#0x500
   \   00000A10   9D0F8DE2           ADD      R0,SP,#+628
   \   00000A14   400E80E2           ADD      R0,R0,#+1024
   \   00000A18   ........           _BLF     ??KeyWord,??KeyWord??rA
   \   00000A1C   9D2F8DE2           ADD      R2,SP,#+628
   \   00000A20   402E82E2           ADD      R2,R2,#+1024
   \   00000A24   EA1F8DE2           ADD      R1,SP,#+936
   \   00000A28   401E81E2           ADD      R1,R1,#+1024
   \   00000A2C   960F8DE2           ADD      R0,SP,#+600
   \   00000A30   400E80E2           ADD      R0,R0,#+1024
   \   00000A34   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000A38   1C208DE2           ADD      R2,SP,#+28
   \   00000A3C   961F8DE2           ADD      R1,SP,#+600
   \   00000A40   401E81E2           ADD      R1,R1,#+1024
   \   00000A44   8F0F8DE2           ADD      R0,SP,#+572
   \   00000A48   400E80E2           ADD      R0,R0,#+1024
   \   00000A4C   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000A50   692E8DE2           ADD      R2,SP,#+1680
   \   00000A54   8F1F8DE2           ADD      R1,SP,#+572
   \   00000A58   401E81E2           ADD      R1,R1,#+1024
   \   00000A5C   620E8DE2           ADD      R0,SP,#+1568
   \   00000A60   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000A64   0620A0E1           MOV      R2,R6
   \   00000A68   621E8DE2           ADD      R1,SP,#+1568
   \   00000A6C   810F8DE2           ADD      R0,SP,#+516
   \   00000A70   400E80E2           ADD      R0,R0,#+1024
   \   00000A74   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000A78   0730A0E1           MOV      R3,R7
   \   00000A7C   0020A0E3           MOV      R2,#+0
   \   00000A80   811F8DE2           ADD      R1,SP,#+516
   \   00000A84   401E81E2           ADD      R1,R1,#+1024
   \   00000A88   0500A0E1           MOV      R0,R5
   \   00000A8C   ........           _BLF     ??append,??append??rA
   \   00000A90   0020A0E3           MOV      R2,#+0
   \   00000A94   0110A0E3           MOV      R1,#+1
   \   00000A98   810F8DE2           ADD      R0,SP,#+516
   \   00000A9C   400E80E2           ADD      R0,R0,#+1024
   \   00000AA0   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000AA4   0020A0E3           MOV      R2,#+0
   \   00000AA8   0110A0E3           MOV      R1,#+1
   \   00000AAC   620E8DE2           ADD      R0,SP,#+1568
   \   00000AB0   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000AB4   0020A0E3           MOV      R2,#+0
   \   00000AB8   0110A0E3           MOV      R1,#+1
   \   00000ABC   690E8DE2           ADD      R0,SP,#+1680
   \   00000AC0   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000AC4   0020A0E3           MOV      R2,#+0
   \   00000AC8   0110A0E3           MOV      R1,#+1
   \   00000ACC   8F0F8DE2           ADD      R0,SP,#+572
   \   00000AD0   400E80E2           ADD      R0,R0,#+1024
   \   00000AD4   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000AD8   0020A0E3           MOV      R2,#+0
   \   00000ADC   0110A0E3           MOV      R1,#+1
   \   00000AE0   960F8DE2           ADD      R0,SP,#+600
   \   00000AE4   400E80E2           ADD      R0,R0,#+1024
   \   00000AE8   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000AEC   0020A0E3           MOV      R2,#+0
   \   00000AF0   0110A0E3           MOV      R1,#+1
   \   00000AF4   9D0F8DE2           ADD      R0,SP,#+628
   \   00000AF8   400E80E2           ADD      R0,R0,#+1024
   \   00000AFC   ........           _BLF     ??_Tidy,??_Tidy??rA
    127                  LocalString += TabStr2 + KeyWord(C_CT_VISCOSITY) + TabStr1 + FloatToAnsiString(Viscosity, 8, 2) + CrLfStr;
   \   00000B00   E40094E5           LDR      R0,[R4, #+228]
   \   00000B04   E81094E5           LDR      R1,[R4, #+232]
   \   00000B08   ........           _BLF     __doubleToFloat,??__doubleToFloat??rA
   \   00000B0C   0010A0E1           MOV      R1,R0
   \   00000B10   0930A0E1           MOV      R3,R9
   \   00000B14   0820A0E1           MOV      R2,R8
   \   00000B18   CE0F8DE2           ADD      R0,SP,#+824
   \   00000B1C   400E80E2           ADD      R0,R0,#+1024
   \   00000B20   ........           _BLF     ??FloatToAnsiString,??FloatToAnsiString??rA
   \   00000B24   BE10A0E3           MOV      R1,#+190
   \   00000B28   501E81E3           ORR      R1,R1,#0x500
   \   00000B2C   C70F8DE2           ADD      R0,SP,#+796
   \   00000B30   400E80E2           ADD      R0,R0,#+1024
   \   00000B34   ........           _BLF     ??KeyWord,??KeyWord??rA
   \   00000B38   C72F8DE2           ADD      R2,SP,#+796
   \   00000B3C   402E82E2           ADD      R2,R2,#+1024
   \   00000B40   0D10A0E1           MOV      R1,SP
   \   00000B44   700E8DE2           ADD      R0,SP,#+1792
   \   00000B48   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000B4C   1C208DE2           ADD      R2,SP,#+28
   \   00000B50   701E8DE2           ADD      R1,SP,#+1792
   \   00000B54   B90F8DE2           ADD      R0,SP,#+740
   \   00000B58   400E80E2           ADD      R0,R0,#+1024
   \   00000B5C   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000B60   CE2F8DE2           ADD      R2,SP,#+824
   \   00000B64   402E82E2           ADD      R2,R2,#+1024
   \   00000B68   B91F8DE2           ADD      R1,SP,#+740
   \   00000B6C   401E81E2           ADD      R1,R1,#+1024
   \   00000B70   B20F8DE2           ADD      R0,SP,#+712
   \   00000B74   400E80E2           ADD      R0,R0,#+1024
   \   00000B78   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000B7C   0620A0E1           MOV      R2,R6
   \   00000B80   B21F8DE2           ADD      R1,SP,#+712
   \   00000B84   401E81E2           ADD      R1,R1,#+1024
   \   00000B88   AB0F8DE2           ADD      R0,SP,#+684
   \   00000B8C   400E80E2           ADD      R0,R0,#+1024
   \   00000B90   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000B94   0730A0E1           MOV      R3,R7
   \   00000B98   0020A0E3           MOV      R2,#+0
   \   00000B9C   AB1F8DE2           ADD      R1,SP,#+684
   \   00000BA0   401E81E2           ADD      R1,R1,#+1024
   \   00000BA4   0500A0E1           MOV      R0,R5
   \   00000BA8   ........           _BLF     ??append,??append??rA
   \   00000BAC   0020A0E3           MOV      R2,#+0
   \   00000BB0   0110A0E3           MOV      R1,#+1
   \   00000BB4   AB0F8DE2           ADD      R0,SP,#+684
   \   00000BB8   400E80E2           ADD      R0,R0,#+1024
   \   00000BBC   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000BC0   0020A0E3           MOV      R2,#+0
   \   00000BC4   0110A0E3           MOV      R1,#+1
   \   00000BC8   B20F8DE2           ADD      R0,SP,#+712
   \   00000BCC   400E80E2           ADD      R0,R0,#+1024
   \   00000BD0   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000BD4   0020A0E3           MOV      R2,#+0
   \   00000BD8   0110A0E3           MOV      R1,#+1
   \   00000BDC   CE0F8DE2           ADD      R0,SP,#+824
   \   00000BE0   400E80E2           ADD      R0,R0,#+1024
   \   00000BE4   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000BE8   0020A0E3           MOV      R2,#+0
   \   00000BEC   0110A0E3           MOV      R1,#+1
   \   00000BF0   B90F8DE2           ADD      R0,SP,#+740
   \   00000BF4   400E80E2           ADD      R0,R0,#+1024
   \   00000BF8   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000BFC   0020A0E3           MOV      R2,#+0
   \   00000C00   0110A0E3           MOV      R1,#+1
   \   00000C04   700E8DE2           ADD      R0,SP,#+1792
   \   00000C08   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000C0C   0020A0E3           MOV      R2,#+0
   \   00000C10   0110A0E3           MOV      R1,#+1
   \   00000C14   C70F8DE2           ADD      R0,SP,#+796
   \   00000C18   400E80E2           ADD      R0,R0,#+1024
   \   00000C1C   ........           _BLF     ??_Tidy,??_Tidy??rA
    128          #else
    129                  AnsiString tmpStr;
    130                  LocalString += TabStr2 + KeyWord(C_CT_OD1) + TabStr3 + tmpStr.sprintf("%8.5f", OD1) + CrLfStr;
    131                  LocalString += TabStr2 + KeyWord(C_CT_OD2) + TabStr3 + tmpStr.sprintf("%8.5f", OD2) + CrLfStr;
    132                  LocalString += TabStr2 + KeyWord(C_CT_REFTEMP1) + TabStr1 + tmpStr.sprintf("%8.2f", RefTmp1) + CrLfStr;
    133                  LocalString += TabStr2 + KeyWord(C_CT_REFTEMP2) + TabStr1 + tmpStr.sprintf("%8.2f", RefTmp2) + CrLfStr;
    134                  LocalString += TabStr2 + KeyWord(C_CT_COEFF) + TabStr2 + tmpStr.sprintf("%8.6f", Coeff) + CrLfStr;
    135                  LocalString += TabStr2 + KeyWord(C_CT_MOLMASS) + TabStr1 + tmpStr.sprintf("%8.2f", MolMass) + CrLfStr;
    136                  LocalString += TabStr2 + KeyWord(C_CT_VISCOSITY) + TabStr1 + tmpStr.sprintf("%8.2f", Viscosity) + CrLfStr;
    137          #endif
    138                  LocalString += TabStr1 + KeyWord(C_CT_END) + CrLfStr;
   \   00000C20   AF10A0E3           MOV      R1,#+175
   \   00000C24   501E81E3           ORR      R1,R1,#0x500
   \   00000C28   E30F8DE2           ADD      R0,SP,#+908
   \   00000C2C   400E80E2           ADD      R0,R0,#+1024
   \   00000C30   ........           _BLF     ??KeyWord,??KeyWord??rA
   \   00000C34   E32F8DE2           ADD      R2,SP,#+908
   \   00000C38   402E82E2           ADD      R2,R2,#+1024
   \   00000C3C   1C108DE2           ADD      R1,SP,#+28
   \   00000C40   770E8DE2           ADD      R0,SP,#+1904
   \   00000C44   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000C48   0620A0E1           MOV      R2,R6
   \   00000C4C   771E8DE2           ADD      R1,SP,#+1904
   \   00000C50   D50F8DE2           ADD      R0,SP,#+852
   \   00000C54   400E80E2           ADD      R0,R0,#+1024
   \   00000C58   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000C5C   0730A0E1           MOV      R3,R7
   \   00000C60   0020A0E3           MOV      R2,#+0
   \   00000C64   D51F8DE2           ADD      R1,SP,#+852
   \   00000C68   401E81E2           ADD      R1,R1,#+1024
   \   00000C6C   0500A0E1           MOV      R0,R5
   \   00000C70   ........           _BLF     ??append,??append??rA
   \   00000C74   0020A0E3           MOV      R2,#+0
   \   00000C78   0110A0E3           MOV      R1,#+1
   \   00000C7C   D50F8DE2           ADD      R0,SP,#+852
   \   00000C80   400E80E2           ADD      R0,R0,#+1024
   \   00000C84   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000C88   0020A0E3           MOV      R2,#+0
   \   00000C8C   0110A0E3           MOV      R1,#+1
   \   00000C90   770E8DE2           ADD      R0,SP,#+1904
   \   00000C94   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000C98   0020A0E3           MOV      R2,#+0
   \   00000C9C   0110A0E3           MOV      R1,#+1
   \   00000CA0   E30F8DE2           ADD      R0,SP,#+908
   \   00000CA4   400E80E2           ADD      R0,R0,#+1024
   \   00000CA8   ........           _BLF     ??_Tidy,??_Tidy??rA
    139                  LocalString += CrLfStr;
   \   00000CAC   0730A0E1           MOV      R3,R7
   \   00000CB0   0020A0E3           MOV      R2,#+0
   \   00000CB4   0610A0E1           MOV      R1,R6
   \   00000CB8   0500A0E1           MOV      R0,R5
   \   00000CBC   ........           _BLF     ??append,??append??rA
    140              }
    141              return (LocalString);
   \                     ??SaveSettings_2:
   \   00000CC0   0020A0E3           MOV      R2,#+0
   \   00000CC4   0110A0E3           MOV      R1,#+1
   \   00000CC8   6C008DE2           ADD      R0,SP,#+108
   \   00000CCC   800E80E2           ADD      R0,R0,#+2048
   \   00000CD0   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000CD4   0020A0E3           MOV      R2,#+0
   \   00000CD8   0110A0E3           MOV      R1,#+1
   \   00000CDC   7E0E8DE2           ADD      R0,SP,#+2016
   \   00000CE0   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000CE4   0020A0E3           MOV      R2,#+0
   \   00000CE8   0110A0E3           MOV      R1,#+1
   \   00000CEC   F10F8DE2           ADD      R0,SP,#+964
   \   00000CF0   400E80E2           ADD      R0,R0,#+1024
   \   00000CF4   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000CF8   0020A0E3           MOV      R2,#+0
   \   00000CFC   0110A0E3           MOV      R1,#+1
   \   00000D00   EA0F8DE2           ADD      R0,SP,#+936
   \   00000D04   400E80E2           ADD      R0,R0,#+1024
   \   00000D08   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000D0C   0020A0E3           MOV      R2,#+0
   \   00000D10   0110A0E3           MOV      R1,#+1
   \   00000D14   0D00A0E1           MOV      R0,SP
   \   00000D18   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000D1C   0020A0E3           MOV      R2,#+0
   \   00000D20   0110A0E3           MOV      R1,#+1
   \   00000D24   1C008DE2           ADD      R0,SP,#+28
   \   00000D28   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000D2C   88D08DE2           ADD      SP,SP,#+136
   \   00000D30   80DE8DE2           ADD      SP,SP,#+2048
   \   00000D34   ........           B        ?Subroutine52
   \                     ??SaveSettings_1:
   \   00000D38   ........           DC32     ??WriteAll
   \   00000D3C   ........           DC32     CrLfStr
    142          }

   \                                 In segment CODE, align 4, keep-with-next
   \                     ?Subroutine52:
   \   00000000   F043BDE8           POP      {R4-R9,LR}
   \   00000004   1EFF2FE1           BX       LR               ;; return
   \                     ??Subroutine52_0:
   \   00000008   ........           DC32     `?<Constant "Not defined">`
   \   0000000C   008066C0           DC32     0xffffffffc0668000
   \   00000010   008066C0           DC32     0xffffffffc0668000
   \   00000014   7B14AE47           DC32     0x47ae147b
    143          

   \                                 In segment CODE, align 4, keep-with-next
    144          bool CargoTypeObject::RestoreSettings(TSNConfigString *SettingsString) {
   \                     ??RestoreSettings:
   \   00000000   F04F2DE9           PUSH     {R4-R11,LR}
    145              bool NoError = true;
    146              int ErrorLine = 0;
   \   00000004   38A59FE5           LDR      R10,??RestoreSettings_1  ;; NewLineStr
   \   00000008   38B59FE5           LDR      R11,??RestoreSettings_1+0x4  ;; `?<Constant "Cargotype ">`
   \   0000000C   7FDF4DE2           SUB      SP,SP,#+508
   \   00000010   0040A0E1           MOV      R4,R0
   \   00000014   0150A0E1           MOV      R5,R1
   \   00000018   0190A0E3           MOV      R9,#+1
   \   0000001C   0010A0E3           MOV      R1,#+0
   \   00000020   00108DE5           STR      R1,[SP, #+0]
   \   00000024   0180E0E1           MVN      R8,R1
    147              int Key;
    148              do {
    149                  AnsiString InputKeyWord = SettingsString->NextWord(ErrorLine);
   \                     ??RestoreSettings_2:
   \   00000028   0030A0E3           MOV      R3,#+0
   \   0000002C   0D20A0E1           MOV      R2,SP
   \   00000030   74108DE2           ADD      R1,SP,#+116
   \   00000034   0500A0E1           MOV      R0,R5
   \   00000038   ........           _BLF     ??NextWord,??NextWord??rA
   \   0000003C   00009DE5           LDR      R0,[SP, #+0]
   \   00000040   000050E3           CMP      R0,#+0
   \   00000044   3900000A           BEQ      ??RestoreSettings_3
    150                  if ( ErrorLine ) {
    151                      if ( ErrorLine != EOF ) {
   \   00000048   080050E1           CMP      R0,R8
   \   0000004C   1B01000A           BEQ      ??RestoreSettings_4
    152                          RestoreSettingsWarning((AnsiString)"Cargotype " + Name + ":\nUnknown error started at line:" + (AnsiString)ErrorLine + NewLineStr);
   \   00000050   0010A0E1           MOV      R1,R0
   \   00000054   C8008DE2           ADD      R0,SP,#+200
   \   00000058   ........           _BLF     ??AnsiString_2,??AnsiString??rA_2
   \   0000005C   0070A0E1           MOV      R7,R0
   \   00000060   0B10A0E1           MOV      R1,R11
   \   00000064   AC008DE2           ADD      R0,SP,#+172
   \   00000068   ........           _BLF     ??AnsiString,??AnsiString??rA
   \   0000006C   442084E2           ADD      R2,R4,#+68
   \   00000070   0010A0E1           MOV      R1,R0
   \   00000074   04008DE2           ADD      R0,SP,#+4
   \   00000078   ........           _BLF     `??operator+`,`??operator+??rA`
   \   0000007C   0C208BE2           ADD      R2,R11,#+12
   \   00000080   04108DE2           ADD      R1,SP,#+4
   \   00000084   58008DE2           ADD      R0,SP,#+88
   \   00000088   ........           _BLF     `??operator+_1`,`??operator+??rA_1`
   \   0000008C   0720A0E1           MOV      R2,R7
   \   00000090   58108DE2           ADD      R1,SP,#+88
   \   00000094   3C008DE2           ADD      R0,SP,#+60
   \   00000098   ........           _BLF     `??operator+`,`??operator+??rA`
   \   0000009C   0A20A0E1           MOV      R2,R10
   \   000000A0   3C108DE2           ADD      R1,SP,#+60
   \   000000A4   20008DE2           ADD      R0,SP,#+32
   \   000000A8   ........           _BLF     `??operator+`,`??operator+??rA`
   \   000000AC   20108DE2           ADD      R1,SP,#+32
   \   000000B0   90008DE2           ADD      R0,SP,#+144
   \   000000B4   ........           _BLF     ??AnsiString_3,??AnsiString??rA_3
   \   000000B8   ........           _BLF     ??RestoreSettingsWarning,??RestoreSettingsWarning??rA
   \   000000BC   0020A0E3           MOV      R2,#+0
   \   000000C0   0110A0E3           MOV      R1,#+1
   \   000000C4   90008DE2           ADD      R0,SP,#+144
   \   000000C8   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000000CC   0020A0E3           MOV      R2,#+0
   \   000000D0   0110A0E3           MOV      R1,#+1
   \   000000D4   20008DE2           ADD      R0,SP,#+32
   \   000000D8   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000000DC   0020A0E3           MOV      R2,#+0
   \   000000E0   0110A0E3           MOV      R1,#+1
   \   000000E4   3C008DE2           ADD      R0,SP,#+60
   \   000000E8   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000000EC   0020A0E3           MOV      R2,#+0
   \   000000F0   0110A0E3           MOV      R1,#+1
   \   000000F4   C8008DE2           ADD      R0,SP,#+200
   \   000000F8   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000000FC   0020A0E3           MOV      R2,#+0
   \   00000100   0110A0E3           MOV      R1,#+1
   \   00000104   58008DE2           ADD      R0,SP,#+88
   \   00000108   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   0000010C   0020A0E3           MOV      R2,#+0
   \   00000110   0110A0E3           MOV      R1,#+1
   \   00000114   04008DE2           ADD      R0,SP,#+4
   \   00000118   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   0000011C   0020A0E3           MOV      R2,#+0
   \   00000120   0110A0E3           MOV      R1,#+1
   \   00000124   AC008DE2           ADD      R0,SP,#+172
   \                     ??RestoreSettings_5:
   \   00000128   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   0000012C   E30000EA           B        ??RestoreSettings_4
    153                      }
    154                  } else {
    155                      Key = FindConfigKey(InputKeyWord);
   \                     ??RestoreSettings_3:
   \   00000130   74108DE2           ADD      R1,SP,#+116
   \   00000134   04008DE2           ADD      R0,SP,#+4
   \   00000138   ........           _BLF     ??string,??string??rA
   \   0000013C   04008DE2           ADD      R0,SP,#+4
   \   00000140   ........           _BLF     ??FindConfigKey,??FindConfigKey??rA
   \   00000144   0060A0E1           MOV      R6,R0
   \   00000148   0020A0E3           MOV      R2,#+0
   \   0000014C   0110A0E3           MOV      R1,#+1
   \   00000150   04008DE2           ADD      R0,SP,#+4
   \   00000154   ........           _BLF     ??_Tidy,??_Tidy??rA
    156                      switch ( Key ) {
   \   00000158   FA0F56E3           CMP      R6,#+1000
   \   0000015C   EA10A013           MOVNE    R1,#+234
   \   00000160   C01F8113           ORRNE    R1,R1,#0x300
   \   00000164   01005611           CMPNE    R6,R1
   \   00000168   FB0F5613           CMPNE    R6,#+1004
   \   0000016C   7500000A           BEQ      ??RestoreSettings_6
   \   00000170   AD10A0E3           MOV      R1,#+173
   \   00000174   501E81E3           ORR      R1,R1,#0x500
   \   00000178   010056E1           CMP      R6,R1
   \   0000017C   7400000A           BEQ      ??RestoreSettings_7
   \   00000180   011081E2           ADD      R1,R1,#+1
   \   00000184   010056E1           CMP      R6,R1
   \   00000188   7700000A           BEQ      ??RestoreSettings_8
   \   0000018C   011081E3           ORR      R1,R1,#0x1
   \   00000190   010056E1           CMP      R6,R1
   \   00000194   C900000A           BEQ      ??RestoreSettings_4
   \   00000198   5B0E56E3           CMP      R6,#+1456
   \   0000019C   7E00000A           BEQ      ??RestoreSettings_9
   \   000001A0   021081E2           ADD      R1,R1,#+2
   \   000001A4   010056E1           CMP      R6,R1
   \   000001A8   8200000A           BEQ      ??RestoreSettings_10
   \   000001AC   011081E2           ADD      R1,R1,#+1
   \   000001B0   010056E1           CMP      R6,R1
   \   000001B4   8600000A           BEQ      ??RestoreSettings_11
   \   000001B8   011081E3           ORR      R1,R1,#0x1
   \   000001BC   010056E1           CMP      R6,R1
   \   000001C0   8A00000A           BEQ      ??RestoreSettings_12
   \   000001C4   011081E2           ADD      R1,R1,#+1
   \   000001C8   010056E1           CMP      R6,R1
   \   000001CC   8E00000A           BEQ      ??RestoreSettings_13
   \   000001D0   021081E3           ORR      R1,R1,#0x2
   \   000001D4   010056E1           CMP      R6,R1
   \   000001D8   9200000A           BEQ      ??RestoreSettings_14
   \   000001DC   011081E3           ORR      R1,R1,#0x1
   \   000001E0   010056E1           CMP      R6,R1
   \   000001E4   9500000A           BEQ      ??RestoreSettings_15
   \   000001E8   061081E2           ADD      R1,R1,#+6
   \   000001EC   010056E1           CMP      R6,R1
   \   000001F0   A100000A           BEQ      ??RestoreSettings_16
   \   000001F4   011081E2           ADD      R1,R1,#+1
   \   000001F8   010056E1           CMP      R6,R1
   \   000001FC   A500000A           BEQ      ??RestoreSettings_17
   \   00000200   011081E3           ORR      R1,R1,#0x1
   \   00000204   010056E1           CMP      R6,R1
   \   00000208   5D00000A           BEQ      ??RestoreSettings_18
   \   0000020C   9810A0E3           MOV      R1,#+152
   \   00000210   801E81E3           ORR      R1,R1,#0x800
   \   00000214   010056E1           CMP      R6,R1
   \   00000218   B910A013           MOVNE    R1,#+185
   \   0000021C   B01E8113           ORRNE    R1,R1,#0xB00
   \   00000220   01005611           CMPNE    R6,R1
   \   00000224   4700000A           BEQ      ??RestoreSettings_6
    157                      default:
    158                          NoError = false;
    159                          RestoreSettingsWarning((AnsiString)"Cargotype " + Name + ":\nThe keyword " + InputKeyWord + " is not allowed here!! Line:" + (AnsiString)SettingsString->LineCount + NewLineStr);
   \   00000228   1C1095E5           LDR      R1,[R5, #+28]
   \   0000022C   0090A0E3           MOV      R9,#+0
   \   00000230   710F8DE2           ADD      R0,SP,#+452
   \   00000234   ........           _BLF     ??AnsiString_2,??AnsiString??rA_2
   \   00000238   0070A0E1           MOV      R7,R0
   \   0000023C   0B10A0E1           MOV      R1,R11
   \   00000240   6A0F8DE2           ADD      R0,SP,#+424
   \   00000244   ........           _BLF     ??AnsiString,??AnsiString??rA
   \   00000248   0010A0E1           MOV      R1,R0
   \   0000024C   442084E2           ADD      R2,R4,#+68
   \   00000250   630F8DE2           ADD      R0,SP,#+396
   \   00000254   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000258   30208BE2           ADD      R2,R11,#+48
   \   0000025C   631F8DE2           ADD      R1,SP,#+396
   \   00000260   5C0F8DE2           ADD      R0,SP,#+368
   \   00000264   ........           _BLF     `??operator+_1`,`??operator+??rA_1`
   \   00000268   74208DE2           ADD      R2,SP,#+116
   \   0000026C   5C1F8DE2           ADD      R1,SP,#+368
   \   00000270   550F8DE2           ADD      R0,SP,#+340
   \   00000274   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000278   40208BE2           ADD      R2,R11,#+64
   \   0000027C   551F8DE2           ADD      R1,SP,#+340
   \   00000280   4E0F8DE2           ADD      R0,SP,#+312
   \   00000284   ........           _BLF     `??operator+_1`,`??operator+??rA_1`
   \   00000288   0720A0E1           MOV      R2,R7
   \   0000028C   4E1F8DE2           ADD      R1,SP,#+312
   \   00000290   470F8DE2           ADD      R0,SP,#+284
   \   00000294   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000298   0A20A0E1           MOV      R2,R10
   \   0000029C   471F8DE2           ADD      R1,SP,#+284
   \   000002A0   400F8DE2           ADD      R0,SP,#+256
   \   000002A4   ........           _BLF     `??operator+`,`??operator+??rA`
   \   000002A8   401F8DE2           ADD      R1,SP,#+256
   \   000002AC   E4008DE2           ADD      R0,SP,#+228
   \   000002B0   ........           _BLF     ??AnsiString_3,??AnsiString??rA_3
   \   000002B4   ........           _BLF     ??RestoreSettingsWarning,??RestoreSettingsWarning??rA
   \   000002B8   0020A0E3           MOV      R2,#+0
   \   000002BC   0110A0E3           MOV      R1,#+1
   \   000002C0   E4008DE2           ADD      R0,SP,#+228
   \   000002C4   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000002C8   0920A0E1           MOV      R2,R9
   \   000002CC   0110A0E3           MOV      R1,#+1
   \   000002D0   400F8DE2           ADD      R0,SP,#+256
   \   000002D4   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000002D8   0920A0E1           MOV      R2,R9
   \   000002DC   0110A0E3           MOV      R1,#+1
   \   000002E0   470F8DE2           ADD      R0,SP,#+284
   \   000002E4   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000002E8   0920A0E1           MOV      R2,R9
   \   000002EC   0110A0E3           MOV      R1,#+1
   \   000002F0   710F8DE2           ADD      R0,SP,#+452
   \   000002F4   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000002F8   0920A0E1           MOV      R2,R9
   \   000002FC   0110A0E3           MOV      R1,#+1
   \   00000300   4E0F8DE2           ADD      R0,SP,#+312
   \   00000304   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000308   0920A0E1           MOV      R2,R9
   \   0000030C   0110A0E3           MOV      R1,#+1
   \   00000310   550F8DE2           ADD      R0,SP,#+340
   \   00000314   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000318   0920A0E1           MOV      R2,R9
   \   0000031C   0110A0E3           MOV      R1,#+1
   \   00000320   5C0F8DE2           ADD      R0,SP,#+368
   \   00000324   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000328   0920A0E1           MOV      R2,R9
   \   0000032C   0110A0E3           MOV      R1,#+1
   \   00000330   630F8DE2           ADD      R0,SP,#+396
   \   00000334   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000338   0920A0E1           MOV      R2,R9
   \   0000033C   0110A0E3           MOV      R1,#+1
   \   00000340   6A0F8DE2           ADD      R0,SP,#+424
   \   00000344   77FFFFEA           B        ??RestoreSettings_5
    160                          break;
    161                      case C_AI_END:      // If AI type not found can continue with this
    162                      case C_AL_END:
    163                      case C_PRO_END:
    164                      case C_PRO_END_COMMON:
    165                      case C_PRO_END_PRO:
    166                          Key = C_CT_END;
   \                     ??RestoreSettings_6:
   \   00000348   AF60A0E3           MOV      R6,#+175
   \   0000034C   506E86E3           ORR      R6,R6,#0x500
   \   00000350   5A0000EA           B        ??RestoreSettings_4
    167                          break;
    168                      case C_CT_END:
    169                          break;
    170                      case C_CT_CARGO_TYPE_KEY:
    171                          CargoTypeKey = SettingsString->ReadLong(ErrorLine);
   \                     ??RestoreSettings_7:
   \   00000354   0020A0E3           MOV      R2,#+0
   \   00000358   0D10A0E1           MOV      R1,SP
   \   0000035C   0500A0E1           MOV      R0,R5
   \   00000360   ........           _BLF     ??ReadLong,??ReadLong??rA
   \   00000364   EC0084E5           STR      R0,[R4, #+236]
    172                          NoError = !ErrorLine;
   \   00000368   500000EA           B        ??RestoreSettings_19
    173                          break;
    174                      case C_CT_BASIC_CARGO_TYPE:
    175                          BaseCargoType = SettingsString->ReadLong(ErrorLine);
   \                     ??RestoreSettings_8:
   \   0000036C   0020A0E3           MOV      R2,#+0
   \   00000370   0D10A0E1           MOV      R1,SP
   \   00000374   0500A0E1           MOV      R0,R5
   \   00000378   ........           _BLF     ??ReadLong,??ReadLong??rA
   \   0000037C   F00084E5           STR      R0,[R4, #+240]
    176                          NoError = !ErrorLine;
   \   00000380   4A0000EA           B        ??RestoreSettings_19
    177                          break;
    178                      case C_CT_DB_IDNUMBER:
    179                          DB_IdNumber = SettingsString->ReadLong(ErrorLine);
   \                     ??RestoreSettings_18:
   \   00000384   0020A0E3           MOV      R2,#+0
   \   00000388   0D10A0E1           MOV      R1,SP
   \   0000038C   0500A0E1           MOV      R0,R5
   \   00000390   ........           _BLF     ??ReadLong,??ReadLong??rA
   \   00000394   B00084E5           STR      R0,[R4, #+176]
    180                          NoError = !ErrorLine;
   \   00000398   440000EA           B        ??RestoreSettings_19
    181                          break;
    182                      case C_CT_OD1:
    183                          OD1 = SettingsString->ReadDouble(ErrorLine);
   \                     ??RestoreSettings_9:
   \   0000039C   0020A0E3           MOV      R2,#+0
   \   000003A0   0D10A0E1           MOV      R1,SP
   \   000003A4   0500A0E1           MOV      R0,R5
   \   000003A8   ........           _BLF     ??ReadDouble,??ReadDouble??rA
   \   000003AC   B40084E5           STR      R0,[R4, #+180]
   \   000003B0   B81084E5           STR      R1,[R4, #+184]
    184                          NoError = !ErrorLine;
   \   000003B4   3D0000EA           B        ??RestoreSettings_19
    185                          break;
    186                      case C_CT_OD2:
    187                          OD2 = SettingsString->ReadDouble(ErrorLine);
   \                     ??RestoreSettings_10:
   \   000003B8   0020A0E3           MOV      R2,#+0
   \   000003BC   0D10A0E1           MOV      R1,SP
   \   000003C0   0500A0E1           MOV      R0,R5
   \   000003C4   ........           _BLF     ??ReadDouble,??ReadDouble??rA
   \   000003C8   BC0084E5           STR      R0,[R4, #+188]
   \   000003CC   C01084E5           STR      R1,[R4, #+192]
    188                          NoError = !ErrorLine;
   \   000003D0   360000EA           B        ??RestoreSettings_19
    189                          break;
    190                      case C_CT_REFTEMP1:
    191                          RefTmp1 = SettingsString->ReadDouble(ErrorLine);
   \                     ??RestoreSettings_11:
   \   000003D4   0020A0E3           MOV      R2,#+0
   \   000003D8   0D10A0E1           MOV      R1,SP
   \   000003DC   0500A0E1           MOV      R0,R5
   \   000003E0   ........           _BLF     ??ReadDouble,??ReadDouble??rA
   \   000003E4   C40084E5           STR      R0,[R4, #+196]
   \   000003E8   C81084E5           STR      R1,[R4, #+200]
    192                          NoError = !ErrorLine;
   \   000003EC   2F0000EA           B        ??RestoreSettings_19
    193                          break;
    194                      case C_CT_REFTEMP2:
    195                          RefTmp2 = SettingsString->ReadDouble(ErrorLine);
   \                     ??RestoreSettings_12:
   \   000003F0   0020A0E3           MOV      R2,#+0
   \   000003F4   0D10A0E1           MOV      R1,SP
   \   000003F8   0500A0E1           MOV      R0,R5
   \   000003FC   ........           _BLF     ??ReadDouble,??ReadDouble??rA
   \   00000400   CC0084E5           STR      R0,[R4, #+204]
   \   00000404   D01084E5           STR      R1,[R4, #+208]
    196                          NoError = !ErrorLine;
   \   00000408   280000EA           B        ??RestoreSettings_19
    197                          break;
    198                      case C_CT_COEFF:
    199                          Coeff = SettingsString->ReadDouble(ErrorLine);
   \                     ??RestoreSettings_13:
   \   0000040C   0020A0E3           MOV      R2,#+0
   \   00000410   0D10A0E1           MOV      R1,SP
   \   00000414   0500A0E1           MOV      R0,R5
   \   00000418   ........           _BLF     ??ReadDouble,??ReadDouble??rA
   \   0000041C   D40084E5           STR      R0,[R4, #+212]
   \   00000420   D81084E5           STR      R1,[R4, #+216]
    200                          NoError = !ErrorLine;
   \   00000424   210000EA           B        ??RestoreSettings_19
    201                          break;
    202                      case C_CT_COLOUR     :
    203                          Colour  = (TColor)SettingsString->ReadLong(ErrorLine);
   \                     ??RestoreSettings_14:
   \   00000428   0020A0E3           MOV      R2,#+0
   \   0000042C   0D10A0E1           MOV      R1,SP
   \   00000430   0500A0E1           MOV      R0,R5
   \   00000434   ........           _BLF     ??ReadLong,??ReadLong??rA
   \   00000438   F40084E5           STR      R0,[R4, #+244]
    204                          NoError = !ErrorLine;
   \   0000043C   1B0000EA           B        ??RestoreSettings_19
    205                          break;
    206                      case C_CT_NAME       :
    207                          Name = SettingsString->GetRemainingLine(ErrorLine);
   \                     ??RestoreSettings_15:
   \   00000440   0D20A0E1           MOV      R2,SP
   \   00000444   781F8DE2           ADD      R1,SP,#+480
   \   00000448   0500A0E1           MOV      R0,R5
   \   0000044C   ........           _BLF     ??GetRemainingLine,??GetRemainingLine??rA
   \   00000450   ........           LDR      R0,??DataTable5  ;; ??npos
   \   00000454   0020A0E3           MOV      R2,#+0
   \   00000458   003090E5           LDR      R3,[R0, #+0]
   \   0000045C   781F8DE2           ADD      R1,SP,#+480
   \   00000460   440084E2           ADD      R0,R4,#+68
   \   00000464   ........           _BLF     ??assign,??assign??rA
   \   00000468   0020A0E3           MOV      R2,#+0
   \   0000046C   0110A0E3           MOV      R1,#+1
   \   00000470   780F8DE2           ADD      R0,SP,#+480
   \   00000474   ........           _BLF     ??_Tidy,??_Tidy??rA
    208                          NoError = !ErrorLine;
   \   00000478   0C0000EA           B        ??RestoreSettings_19
    209                          break;
    210                      case C_CT_MOLMASS    :
    211                          MolMass = SettingsString->ReadDouble(ErrorLine);
   \                     ??RestoreSettings_16:
   \   0000047C   0020A0E3           MOV      R2,#+0
   \   00000480   0D10A0E1           MOV      R1,SP
   \   00000484   0500A0E1           MOV      R0,R5
   \   00000488   ........           _BLF     ??ReadDouble,??ReadDouble??rA
   \   0000048C   DC0084E5           STR      R0,[R4, #+220]
   \   00000490   E01084E5           STR      R1,[R4, #+224]
    212                          NoError = !ErrorLine;
   \   00000494   050000EA           B        ??RestoreSettings_19
    213                          break;
    214                      case C_CT_VISCOSITY    :
    215                          Viscosity = SettingsString->ReadDouble(ErrorLine);
   \                     ??RestoreSettings_17:
   \   00000498   0020A0E3           MOV      R2,#+0
   \   0000049C   0D10A0E1           MOV      R1,SP
   \   000004A0   0500A0E1           MOV      R0,R5
   \   000004A4   ........           _BLF     ??ReadDouble,??ReadDouble??rA
   \   000004A8   E40084E5           STR      R0,[R4, #+228]
   \   000004AC   E81084E5           STR      R1,[R4, #+232]
    216                          NoError = !ErrorLine;
   \                     ??RestoreSettings_19:
   \   000004B0   00009DE5           LDR      R0,[SP, #+0]
   \   000004B4   000050E3           CMP      R0,#+0
   \   000004B8   0190A003           MOVEQ    R9,#+1
   \   000004BC   0090A013           MOVNE    R9,#+0
    217                          break;
    218                      }
    219                  }
    220              }while ( NoError && (ErrorLine != EOF) && (Key != C_CT_END) );
   \                     ??RestoreSettings_4:
   \   000004C0   0020A0E3           MOV      R2,#+0
   \   000004C4   0110A0E3           MOV      R1,#+1
   \   000004C8   74008DE2           ADD      R0,SP,#+116
   \   000004CC   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000004D0   000059E3           CMP      R9,#+0
   \   000004D4   0D00000A           BEQ      ??RestoreSettings_20
   \   000004D8   00009DE5           LDR      R0,[SP, #+0]
   \   000004DC   080050E1           CMP      R0,R8
   \   000004E0   AF00A013           MOVNE    R0,#+175
   \   000004E4   500E8013           ORRNE    R0,R0,#0x500
   \   000004E8   00005611           CMPNE    R6,R0
   \   000004EC   CDFEFF1A           BNE      ??RestoreSettings_2
    221              if ( NoError ) {
    222                  switch ( BaseCargoType ) {
   \   000004F0   F00094E5           LDR      R0,[R4, #+240]
   \   000004F4   080040E2           SUB      R0,R0,#+8
   \   000004F8   120050E3           CMP      R0,#+18
   \   000004FC   0300008A           BHI      ??RestoreSettings_20
    223                  case CTY_SIMPLE_LIN:
    224                  case CTY_LINEAR    :
    225                  case CTY_BALLAST   :
    226                  case CTY_HFO       :
    227                  case CTY_DO        :
    228                  case CTY_LUB       :
    229                  case CTY_FW        :
    230                  case CTY_SEA       :
    231                      break;
    232                  case CTY_API_53A  :
    233                  case CTY_API_53B  :
    234                  case CTY_API_53D  :
    235                  case CTY_API_53E  :
    236                  case CTY_API_54A  :
    237                  case CTY_API_54B  :
    238                  case CTY_API_54D  :
    239                  case CTY_API_54E  :
    240                  case CTY_API_6A   :
    241                  case CTY_API_6B   :
    242                  case CTY_API_6D   :
    243                  case CTY_API_59A  :
    244                  case CTY_API_59B  :
    245                  case CTY_API_59D  :
    246                  case CTY_API_59E  :
    247                  case CTY_API_60A  :
    248                  case CTY_API_60B  :
    249                  case CTY_API_60D  :
    250                  case CTY_API_60E  :
    251                      ActualTemp = RefTmp2;
   \   00000500   CC0094E5           LDR      R0,[R4, #+204]
   \   00000504   D01094E5           LDR      R1,[R4, #+208]
   \   00000508   ........           _BLF     __doubleToFloat,??__doubleToFloat??rA
   \   0000050C   AC0084E5           STR      R0,[R4, #+172]
    252                      break;
    253                  default:
    254                      break;
    255                  }
    256              }
    257              if ( Master && NoError ) {
   \                     ??RestoreSettings_20:
   \   00000510   34009FE5           LDR      R0,??RestoreSettings_1+0x8  ;; Master
   \   00000514   0000D0E5           LDRB     R0,[R0, #+0]
   \   00000518   000019E1           TST      R9,R0
   \   0000051C   0500000A           BEQ      ??RestoreSettings_21
    258                  SendData(CMD_GENERIC_STATIC_DATA);
   \   00000520   A42094E5           LDR      R2,[R4, #+164]
   \   00000524   6610A0E3           MOV      R1,#+102
   \   00000528   402092E5           LDR      R2,[R2, #+64]
   \   0000052C   0400A0E1           MOV      R0,R4
   \   00000530   0FE0A0E1           MOV      LR,PC
   \   00000534   12FF2FE1           BX       R2
    259              }
    260          
    261              return (NoError);
   \                     ??RestoreSettings_21:
   \   00000538   0900A0E1           MOV      R0,R9
   \   0000053C   7FDF8DE2           ADD      SP,SP,#+508
   \   00000540   ........           B        ?Subroutine53
   \                     ??RestoreSettings_1:
   \   00000544   ........           DC32     NewLineStr
   \   00000548   ........           DC32     `?<Constant "Cargotype ">`
   \   0000054C   ........           DC32     Master
    262          }

   \                                 In segment CODE, align 4, keep-with-next
   \                     ?Subroutine53:
   \   00000000   F04FBDE8           POP      {R4-R11,LR}
   \   00000004   1EFF2FE1           BX       LR               ;; return
    263          

   \                                 In segment CODE, align 4, keep-with-next
    264          int CargoTypeObject::GetValue(int ValueId, int Index, float &MyRetValue,  int &DecPnt, int &Unit) {
   \                     ??GetValue:
   \   00000000   F14F2DE9           PUSH     {R0,R4-R11,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   28009DE5           LDR      R0,[SP, #+40]
    265              int Status = GETVAL_NO_ERR;
    266              switch ( ValueId ) {
   \   0000000C   F0C094E5           LDR      R12,[R4, #+240]
   \   00000010   0350A0E1           MOV      R5,R3
   \   00000014   2C309DE5           LDR      R3,[SP, #+44]
   \   00000018   0060A0E3           MOV      R6,#+0
   \   0000001C   05E0A0E3           MOV      LR,#+5
   \   00000020   0970A0E3           MOV      R7,#+9
   \   00000024   0480A0E3           MOV      R8,#+4
   \   00000028   0190A0E3           MOV      R9,#+1
   \   0000002C   00A0A0E3           MOV      R10,#+0
   \   00000030   7DBE51E2           SUBS     R11,R1,#+2000
   \   00000034   1A00000A           BEQ      ??GetValue_2
   \   00000038   02B05BE2           SUBS     R11,R11,#+2
   \   0000003C   1E00000A           BEQ      ??GetValue_3
   \   00000040   02B05BE2           SUBS     R11,R11,#+2
   \   00000044   5600000A           BEQ      ??GetValue_4
   \   00000048   01B05BE2           SUBS     R11,R11,#+1
   \   0000004C   4900000A           BEQ      ??GetValue_5
   \   00000050   03B05BE2           SUBS     R11,R11,#+3
   \   00000054   3E00000A           BEQ      ??GetValue_6
   \   00000058   03B05BE2           SUBS     R11,R11,#+3
   \   0000005C   1A00000A           BEQ      ??GetValue_7
   \   00000060   01B05BE2           SUBS     R11,R11,#+1
   \   00000064   1E00000A           BEQ      ??GetValue_8
   \   00000068   01B05BE2           SUBS     R11,R11,#+1
   \   0000006C   2200000A           BEQ      ??GetValue_9
   \   00000070   01B05BE2           SUBS     R11,R11,#+1
   \   00000074   2500000A           BEQ      ??GetValue_10
   \   00000078   01B05BE2           SUBS     R11,R11,#+1
   \   0000007C   2800000A           BEQ      ??GetValue_11
   \   00000080   01B05BE2           SUBS     R11,R11,#+1
   \   00000084   5000000A           BEQ      ??GetValue_12
   \   00000088   02B05BE2           SUBS     R11,R11,#+2
   \   0000008C   5500000A           BEQ      ??GetValue_13
   \   00000090   01B05BE2           SUBS     R11,R11,#+1
   \   00000094   5A00000A           BEQ      ??GetValue_14
   \   00000098   23B05BE2           SUBS     R11,R11,#+35
   \   0000009C   5C00000A           BEQ      ??GetValue_15
   \   000000A0   600000EA           B        ??GetValue_16
    267              case SVT_BASIC_TYPE:
    268                  DecPnt     = 0;
   \                     ??GetValue_2:
   \   000000A4   00A080E5           STR      R10,[R0, #+0]
    269                  Unit       = NO_UNIT;
   \   000000A8   00A083E5           STR      R10,[R3, #+0]
    270                  MyRetValue = BaseCargoType;
   \   000000AC   F00094E5           LDR      R0,[R4, #+240]
   \                     ??GetValue_17:
   \   000000B0   ........           _BLF     __longToFloat,??__longToFloat??rA
   \                     ??GetValue_18:
   \   000000B4   000085E5           STR      R0,[R5, #+0]
   \   000000B8   610000EA           B        ??GetValue_19
    271                  break;
    272              case SVT_CARGO_TYPE:
    273                  DecPnt     = 0;
   \                     ??GetValue_3:
   \   000000BC   00A080E5           STR      R10,[R0, #+0]
    274                  Unit       = NO_UNIT;
   \   000000C0   00A083E5           STR      R10,[R3, #+0]
    275                  MyRetValue = CargoTypeKey;
   \   000000C4   EC0094E5           LDR      R0,[R4, #+236]
   \   000000C8   F8FFFFEA           B        ??GetValue_17
    276                  break;
    277              case SVT_REF_DNS1 :
    278                  DecPnt     = 4;
   \                     ??GetValue_7:
   \   000000CC   008080E5           STR      R8,[R0, #+0]
    279                  Unit       = DENSITY_UNIT;
   \   000000D0   007083E5           STR      R7,[R3, #+0]
    280                  MyRetValue = OD1;
   \   000000D4   B40094E5           LDR      R0,[R4, #+180]
   \   000000D8   B81094E5           LDR      R1,[R4, #+184]
   \                     ??GetValue_20:
   \   000000DC   ........           _BLF     __doubleToFloat,??__doubleToFloat??rA
   \   000000E0   F3FFFFEA           B        ??GetValue_18
    281                  break;
    282              case SVT_REF_DNS2 :
    283                  DecPnt     = 4;
   \                     ??GetValue_8:
   \   000000E4   008080E5           STR      R8,[R0, #+0]
    284                  Unit       = DENSITY_UNIT;
   \   000000E8   007083E5           STR      R7,[R3, #+0]
    285                  MyRetValue = OD2;
   \   000000EC   BC0094E5           LDR      R0,[R4, #+188]
   \   000000F0   C01094E5           LDR      R1,[R4, #+192]
   \                     ??GetValue_21:
   \   000000F4   ........           _BLF     __doubleToFloat,??__doubleToFloat??rA
   \   000000F8   EDFFFFEA           B        ??GetValue_18
    286                  break;
    287              case SVT_REF_TMP1 :
    288                  DecPnt     = 1;
   \                     ??GetValue_9:
   \   000000FC   009080E5           STR      R9,[R0, #+0]
    289                  Unit       = TEMP_UNIT;
   \   00000100   00E083E5           STR      LR,[R3, #+0]
    290                  MyRetValue = RefTmp1;
   \   00000104   C40094E5           LDR      R0,[R4, #+196]
   \   00000108   C81094E5           LDR      R1,[R4, #+200]
   \   0000010C   F2FFFFEA           B        ??GetValue_20
    291                  break;
    292              case SVT_REF_TMP2 :
    293                  DecPnt     = 1;
   \                     ??GetValue_10:
   \   00000110   009080E5           STR      R9,[R0, #+0]
    294                  Unit       = TEMP_UNIT;
   \   00000114   00E083E5           STR      LR,[R3, #+0]
    295                  MyRetValue = RefTmp2;
   \   00000118   CC0094E5           LDR      R0,[R4, #+204]
   \   0000011C   D01094E5           LDR      R1,[R4, #+208]
   \   00000120   F3FFFFEA           B        ??GetValue_21
    296                  break;
    297              case SVT_COEFF :
    298                  switch ( BaseCargoType ) {
   \                     ??GetValue_11:
   \   00000124   08C04CE2           SUB      R12,R12,#+8
   \   00000128   29005CE3           CMP      R12,#+41
   \   0000012C   0100008A           BHI      ??GetValue_22
    299                  case CTY_API_53A  :
    300                  case CTY_API_53B  :
    301                  case CTY_API_53D  :
    302                  case CTY_API_53E  :
    303                  case CTY_API_54A  :
    304                  case CTY_API_54B  :
    305                  case CTY_API_54D  :
    306                  case CTY_API_54E  :
    307                  case CTY_API_6A   :
    308                  case CTY_API_6B   :
    309                  case CTY_API_6D   :
    310                  case CTY_API_59A  :
    311                  case CTY_API_59B  :
    312                  case CTY_API_59D  :
    313                  case CTY_API_59E  :
    314                  case CTY_API_60A  :
    315                  case CTY_API_60B  :
    316                  case CTY_API_60D  :
    317                  case CTY_API_60E  :
    318                  case CTY_GAS_AMMONIA      :
    319                  case CTY_GAS_BUTADIEN     :
    320                  case CTY_GAS_ISOBUTYLENE  :
    321                  case CTY_GAS_PROPYLENE    :
    322                  case CTY_GAS_PROPENOXIDE  :
    323                  case CTY_GAS_VYNILCHLORIDE:
    324                  case CTY_GAS_BUTANE         :
    325                  case CTY_GAS_PROPANE        :
    326                  case CTY_GAS_N_BUTANE       :
    327                  case CTY_GAS_ISO_BUTANE     :
    328                  case CTY_GAS_1_BUTANE       :
    329                  case CTY_GAS_CRUDE_C4       :
    330                  case CTY_GAS_RAFFINATE_1    :
    331                  case CTY_GAS_RAFFINATE_2    :
    332                  case CTY_GAS_PROPYLENE_REF  :
    333                  case CTY_GAS_GASOLIE        :
    334                  case CTY_GAS_FLEXICOKER_LPG :
    335                  case CTY_GAS_SULPHUR_1      :
    336                  case CTY_GAS_SULPHUR_2      :
    337                  case CTY_GAS_SULPHUR_3      :
    338                  case CTY_GAS_SULPHUR_4      :
    339                  case CTY_GAS_SULPHUR_5      :
    340                  case CTY_GAS_SULPHUR_6      :
    341                      Status = GETVAL_NO_DISPLAY;
   \                     ??GetValue_23:
   \   00000130   0360A0E3           MOV      R6,#+3
   \   00000134   420000EA           B        ??GetValue_19
    342                      break;
    343                  default:
    344                      DecPnt     = 5;
   \                     ??GetValue_22:
   \   00000138   00E080E5           STR      LR,[R0, #+0]
    345                      Unit       = DNS_COEFF_UNIT;
   \   0000013C   0B00A0E3           MOV      R0,#+11
   \   00000140   000083E5           STR      R0,[R3, #+0]
    346                      MyRetValue = Coeff;
   \   00000144   D40094E5           LDR      R0,[R4, #+212]
   \   00000148   D81094E5           LDR      R1,[R4, #+216]
   \                     ??GetValue_24:
   \   0000014C   ........           _BLF     __doubleToFloat,??__doubleToFloat??rA
   \   00000150   D7FFFFEA           B        ??GetValue_18
    347                      break;
    348                  }
    349                  break;
    350              case SVT_COMP_DNS:
    351                  DecPnt     = 4;
   \                     ??GetValue_6:
   \   00000154   008080E5           STR      R8,[R0, #+0]
    352                  Unit       = DENSITY_UNIT;
   \   00000158   007083E5           STR      R7,[R3, #+0]
    353                  MyRetValue = Comp_Density(ActualTemp);
   \   0000015C   AC0094E5           LDR      R0,[R4, #+172]
   \   00000160   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   00000164   0120A0E1           MOV      R2,R1
   \   00000168   0010A0E1           MOV      R1,R0
   \   0000016C   0400A0E1           MOV      R0,R4
   \   00000170   ........           BL       ??Comp_Density
   \   00000174   D8FFFFEA           B        ??GetValue_20
    354                  break;
    355              case SVT_VCF          :
    356                  switch ( BaseCargoType ) {
   \                     ??GetValue_5:
   \   00000178   07005CE3           CMP      R12,#+7
   \   0000017C   EBFFFF9A           BLS      ??GetValue_23
    357                  case CTY_SIMPLE_LIN:
    358                  case CTY_LINEAR    :
    359                  case CTY_BALLAST   :
    360                  case CTY_HFO       :
    361                  case CTY_DO        :
    362                  case CTY_LUB       :
    363                  case CTY_FW        :
    364                  case CTY_SEA       :
    365                      Status = GETVAL_NO_DISPLAY;
    366                      break;
    367                  case CTY_API_53A  :
    368                  case CTY_API_53B  :
    369                  case CTY_API_53D  :
    370                  case CTY_API_53E  :
    371                  case CTY_API_54A  :
    372                  case CTY_API_54B  :
    373                  case CTY_API_54D  :
    374                  case CTY_API_54E  :
    375                  case CTY_API_6A   :
    376                  case CTY_API_6B   :
    377                  case CTY_API_6D   :
    378                  case CTY_API_59A  :
    379                  case CTY_API_59B  :
    380                  case CTY_API_59D  :
    381                  case CTY_API_59E  :
    382                  case CTY_API_60A  :
    383                  case CTY_API_60B  :
    384                  case CTY_API_60D  :
    385                  case CTY_API_60E  :
    386                  case CTY_GAS_AMMONIA      :
    387                  case CTY_GAS_BUTADIEN     :
    388                  case CTY_GAS_ISOBUTYLENE  :
    389                  case CTY_GAS_PROPYLENE    :
    390                  case CTY_GAS_PROPENOXIDE  :
    391                  case CTY_GAS_VYNILCHLORIDE:
    392                  case CTY_GAS_BUTANE         :
    393                  case CTY_GAS_PROPANE        :
    394                  case CTY_GAS_N_BUTANE       :
    395                  case CTY_GAS_ISO_BUTANE     :
    396                  case CTY_GAS_1_BUTANE       :
    397                  case CTY_GAS_CRUDE_C4       :
    398                  case CTY_GAS_RAFFINATE_1    :
    399                  case CTY_GAS_RAFFINATE_2    :
    400                  case CTY_GAS_PROPYLENE_REF  :
    401                  case CTY_GAS_GASOLIE        :
    402                  case CTY_GAS_FLEXICOKER_LPG :
    403                  case CTY_GAS_SULPHUR_1      :
    404                  case CTY_GAS_SULPHUR_2      :
    405                  case CTY_GAS_SULPHUR_3      :
    406                  case CTY_GAS_SULPHUR_4      :
    407                  case CTY_GAS_SULPHUR_5      :
    408                  case CTY_GAS_SULPHUR_6      :
    409                  default:
    410                      DecPnt     = 4;
   \   00000180   008080E5           STR      R8,[R0, #+0]
    411                      Unit       =    NO_UNIT;
   \   00000184   00A083E5           STR      R10,[R3, #+0]
    412                      MyRetValue = Operator_Density_to_Vcf(ActualTemp);
   \   00000188   AC0094E5           LDR      R0,[R4, #+172]
   \   0000018C   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   00000190   0120A0E1           MOV      R2,R1
   \   00000194   0010A0E1           MOV      R1,R0
   \   00000198   0400A0E1           MOV      R0,R4
   \   0000019C   ........           BL       ??Vcf_Calc
   \   000001A0   D3FFFFEA           B        ??GetValue_21
    413                      break;
    414                  }
    415                  break;
    416              case SVT_API :
    417                  switch ( BaseCargoType ) {
   \                     ??GetValue_4:
   \   000001A4   08C04CE2           SUB      R12,R12,#+8
   \   000001A8   12005CE3           CMP      R12,#+18
   \   000001AC   DFFFFF8A           BHI      ??GetValue_23
    418                  case CTY_API_53A  :
    419                  case CTY_API_53B  :
    420                  case CTY_API_53D  :
    421                  case CTY_API_53E  :
    422                  case CTY_API_54A  :
    423                  case CTY_API_54B  :
    424                  case CTY_API_54D  :
    425                  case CTY_API_54E  :
    426                  case CTY_API_6A   :
    427                  case CTY_API_6B   :
    428                  case CTY_API_6D   :
    429                  case CTY_API_59A  :
    430                  case CTY_API_59B  :
    431                  case CTY_API_59D  :
    432                  case CTY_API_59E  :
    433                  case CTY_API_60A  :
    434                  case CTY_API_60B  :
    435                  case CTY_API_60D  :
    436                  case CTY_API_60E  :
    437                      {
    438                          bool AllowInput;
    439                          DecPnt     = 1;
   \   000001B0   009080E5           STR      R9,[R0, #+0]
    440                          Unit       = NO_UNIT;
   \   000001B4   00A083E5           STR      R10,[R3, #+0]
    441                          MyRetValue = OpDns_to_API(AllowInput);
   \   000001B8   0D10A0E1           MOV      R1,SP
   \   000001BC   0400A0E1           MOV      R0,R4
   \   000001C0   ........           BL       ??OpDns_to_API
   \   000001C4   ........           _BLF     __doubleToFloat,??__doubleToFloat??rA
   \                     ??GetValue_25:
   \   000001C8   B9FFFFEA           B        ??GetValue_18
    442                      }
    443                      break;
    444                  default:
    445                      Status = GETVAL_NO_DISPLAY;
    446                      break;
    447                  }
    448                  break;
    449              case SVT_MOLMASS    :
    450                  DecPnt     = 3;
   \                     ??GetValue_12:
   \   000001CC   0310A0E3           MOV      R1,#+3
   \   000001D0   001080E5           STR      R1,[R0, #+0]
    451                  Unit       = MOL_WEIGHT_UNIT;
   \   000001D4   1A00A0E3           MOV      R0,#+26
   \   000001D8   000083E5           STR      R0,[R3, #+0]
    452                  MyRetValue = MolMass;
   \   000001DC   DC0094E5           LDR      R0,[R4, #+220]
   \   000001E0   E01094E5           LDR      R1,[R4, #+224]
   \   000001E4   D8FFFFEA           B        ??GetValue_24
    453                  break;
    454              case SVT_VISCOSITY:
    455                  DecPnt     = 2;
   \                     ??GetValue_13:
   \   000001E8   0210A0E3           MOV      R1,#+2
   \   000001EC   001080E5           STR      R1,[R0, #+0]
    456                  Unit       = VISCOSITY_UNIT;
   \   000001F0   1C00A0E3           MOV      R0,#+28
   \   000001F4   000083E5           STR      R0,[R3, #+0]
    457                  MyRetValue = Viscosity;
   \   000001F8   E40094E5           LDR      R0,[R4, #+228]
   \   000001FC   E81094E5           LDR      R1,[R4, #+232]
   \   00000200   B5FFFFEA           B        ??GetValue_20
    458                  break;
    459              case SVT_CARGO_COLOR:
    460                  DecPnt     = 0;
   \                     ??GetValue_14:
   \   00000204   00A080E5           STR      R10,[R0, #+0]
    461                  Unit       = NO_UNIT;
   \   00000208   00A083E5           STR      R10,[R3, #+0]
    462                  MyRetValue = Colour;
   \   0000020C   F40094E5           LDR      R0,[R4, #+244]
   \   00000210   A6FFFFEA           B        ??GetValue_17
    463                  break;
    464              case SVT_DB_IDNUMBER:
    465                  DecPnt     = 0;
   \                     ??GetValue_15:
   \   00000214   00A080E5           STR      R10,[R0, #+0]
    466                  Unit       = NO_UNIT;
   \   00000218   00A083E5           STR      R10,[R3, #+0]
    467                  MyRetValue = DB_IdNumber;
   \   0000021C   B00094E5           LDR      R0,[R4, #+176]
   \   00000220   ........           _BLF     __longToFloat,??__longToFloat??rA
   \   00000224   A2FFFFEA           B        ??GetValue_18
    468                  break;
    469              default:
    470                  Status = PRogramObjectBase::GetValue(ValueId, Index, MyRetValue,  DecPnt, Unit);
   \                     ??GetValue_16:
   \   00000228   08002DE9           PUSH     {R3}
   \   0000022C   01002DE9           PUSH     {R0}
   \   00000230   0530A0E1           MOV      R3,R5
   \   00000234   0400A0E1           MOV      R0,R4
   \   00000238   ........           _BLF     ??GetValue_1,??GetValue??rA
   \   0000023C   0060A0E1           MOV      R6,R0
   \   00000240   08D08DE2           ADD      SP,SP,#+8
    471                  break;
    472              }
    473              return (Status);
   \                     ??GetValue_19:
   \   00000244   0600A0E1           MOV      R0,R6
   \   00000248   F24FBDE8           POP      {R1,R4-R11,LR}
   \   0000024C   1EFF2FE1           BX       LR               ;; return
    474          }
    475          
    476          // EHSMark 1. June 2022
    477          // Should include this in GetValue in later release. If so, MeasuredTemp must be added to this object

   \                                 In segment CODE, align 4, keep-with-next
    478          int CargoTypeObject::GetVCF_AtTemp(float Density, float Temperature,float &MyRetValue,  int &DecPnt, int &Unit) {
   \                     ??GetVCF_AtTemp:
   \   00000000   F0402DE9           PUSH     {R4-R7,LR}
   \   00000004   0050A0E1           MOV      R5,R0
   \   00000008   0360A0E1           MOV      R6,R3
    479              int Status = GETVAL_NO_ERR;
    480              switch ( BaseCargoType ) {
   \   0000000C   F03095E5           LDR      R3,[R5, #+240]
   \   00000010   0140A0E1           MOV      R4,R1
   \   00000014   14109DE5           LDR      R1,[SP, #+20]
   \   00000018   0200A0E1           MOV      R0,R2
   \   0000001C   18209DE5           LDR      R2,[SP, #+24]
   \   00000020   0070A0E3           MOV      R7,#+0
   \   00000024   070053E3           CMP      R3,#+7
    481              case CTY_SIMPLE_LIN:
    482              case CTY_LINEAR    :
    483              case CTY_BALLAST   :
    484              case CTY_HFO       :
    485              case CTY_DO        :
    486              case CTY_LUB       :
    487              case CTY_FW        :
    488              case CTY_SEA       :
    489                  Status = GETVAL_NO_DISPLAY;
   \   00000028   0370A093           MOVLS    R7,#+3
   \   0000002C   0F00009A           BLS      ??GetVCF_AtTemp_1
    490                  break;
    491              case CTY_API_53A  :
    492              case CTY_API_53B  :
    493              case CTY_API_53D  :
    494              case CTY_API_53E  :
    495              case CTY_API_54A  :
    496              case CTY_API_54B  :
    497              case CTY_API_54D  :
    498              case CTY_API_54E  :
    499              case CTY_API_6A   :
    500              case CTY_API_6B   :
    501              case CTY_API_6D   :
    502              case CTY_API_59A  :
    503              case CTY_API_59B  :
    504              case CTY_API_59D  :
    505              case CTY_API_59E  :
    506              case CTY_API_60A  :
    507              case CTY_API_60B  :
    508              case CTY_API_60D  :
    509              case CTY_API_60E  :
    510              case CTY_GAS_AMMONIA      :
    511              case CTY_GAS_BUTADIEN     :
    512              case CTY_GAS_ISOBUTYLENE  :
    513              case CTY_GAS_PROPYLENE    :
    514              case CTY_GAS_PROPENOXIDE  :
    515              case CTY_GAS_VYNILCHLORIDE:
    516              case CTY_GAS_BUTANE         :
    517              case CTY_GAS_PROPANE        :
    518              case CTY_GAS_N_BUTANE       :
    519              case CTY_GAS_ISO_BUTANE     :
    520              case CTY_GAS_1_BUTANE       :
    521              case CTY_GAS_CRUDE_C4       :
    522              case CTY_GAS_RAFFINATE_1    :
    523              case CTY_GAS_RAFFINATE_2    :
    524              case CTY_GAS_PROPYLENE_REF  :
    525              case CTY_GAS_GASOLIE        :
    526              case CTY_GAS_FLEXICOKER_LPG :
    527              case CTY_GAS_SULPHUR_1      :
    528              case CTY_GAS_SULPHUR_2      :
    529              case CTY_GAS_SULPHUR_3      :
    530              case CTY_GAS_SULPHUR_4      :
    531              case CTY_GAS_SULPHUR_5      :
    532              case CTY_GAS_SULPHUR_6      :
    533              default:
    534                  DecPnt     = 4;
   \   00000030   0430A0E3           MOV      R3,#+4
   \   00000034   003081E5           STR      R3,[R1, #+0]
    535                  Unit       = NO_UNIT;
   \   00000038   0010A0E3           MOV      R1,#+0
   \   0000003C   001082E5           STR      R1,[R2, #+0]
    536                  MyRetValue = DensityToVcfAtTemp(Density, Temperature);
   \   00000040   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   00000044   03002DE9           PUSH     {R0,R1}
   \   00000048   0400A0E1           MOV      R0,R4
   \   0000004C   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   00000050   0800BDE8           POP      {R3}
   \   00000054   0120A0E1           MOV      R2,R1
   \   00000058   0010A0E1           MOV      R1,R0
   \   0000005C   0500A0E1           MOV      R0,R5
   \   00000060   ........           BL       ??DensityToVcfAtTemp
   \   00000064   ........           _BLF     __doubleToFloat,??__doubleToFloat??rA
   \   00000068   000086E5           STR      R0,[R6, #+0]
   \   0000006C   04D08DE2           ADD      SP,SP,#+4
    537                  break;
    538              }
    539              return Status;
   \                     ??GetVCF_AtTemp_1:
   \   00000070   0700A0E1           MOV      R0,R7
   \   00000074   ........           B        ?Subroutine54
    540          
    541          }

   \                                 In segment CODE, align 4, keep-with-next
   \                     ?Subroutine54:
   \   00000000   F040BDE8           POP      {R4-R7,LR}
   \   00000004   1EFF2FE1           BX       LR               ;; return
   \                     ??Subroutine54_0:
   \   00000008   25237800           DC8      "%#x"

   \                                 In segment CODE, align 4, keep-with-next
    542          AnsiString CargoTypeObject::GetValueName(int BaseCargoType) {
    543              return LibGetValueName(BasicCargoNameList, SizeofBasicCargoNameList, BaseCargoType);
   \                     ??GetValueName:
   \   00000000   ........           LDR      R12,??DataTable3  ;; SizeofBasicCargoNameList
   \   00000004   00402DE9           PUSH     {LR}
   \   00000008   0020A0E3           MOV      R2,#+0
   \   0000000C   04002DE9           PUSH     {R2}
   \   00000010   00209CE5           LDR      R2,[R12, #+0]
   \   00000014   0130A0E1           MOV      R3,R1
   \   00000018   04109CE5           LDR      R1,[R12, #+4]
   \   0000001C   ........           _BLF     ??LibGetValueName,??LibGetValueName??rA
   \   00000020   0140BDE8           POP      {R0,LR}
   \   00000024   1EFF2FE1           BX       LR               ;; return
    544          }
    545          

   \                                 In segment CODE, align 4, keep-with-next
    546          int CargoTypeObject::GetStringValue(int ValueId, int Index, AnsiString &MyString) {
   \                     ??GetStringValue:
   \   00000000   F0402DE9           PUSH     {R4-R7,LR}
   \   00000004   0360A0E1           MOV      R6,R3
    547              int Status = GETVAL_NO_ERR;
    548              switch ( ValueId ) {
   \   00000008   ........           LDR      R3,??DataTable5  ;; ??npos
   \   0000000C   54D04DE2           SUB      SP,SP,#+84
   \   00000010   007093E5           LDR      R7,[R3, #+0]
   \   00000014   0050A0E1           MOV      R5,R0
   \   00000018   F00095E5           LDR      R0,[R5, #+240]
   \   0000001C   0040A0E3           MOV      R4,#+0
   \   00000020   D1C0A0E3           MOV      R12,#+209
   \   00000024   70CE8CE3           ORR      R12,R12,#0x700
   \   00000028   0C0051E1           CMP      R1,R12
   \   0000002C   0600000A           BEQ      ??GetStringValue_2
   \   00000030   02C08CE3           ORR      R12,R12,#0x2
   \   00000034   0C0051E1           CMP      R1,R12
   \   00000038   2400000A           BEQ      ??GetStringValue_3
   \   0000003C   0EC08CE2           ADD      R12,R12,#+14
   \   00000040   0C0051E1           CMP      R1,R12
   \   00000044   0D00000A           BEQ      ??GetStringValue_4
   \   00000048   350000EA           B        ??GetStringValue_5
    549              case SVT_BASIC_TYPE_NAME:
    550                  MyString = GetValueName(BaseCargoType);
   \                     ??GetStringValue_2:
   \   0000004C   0010A0E1           MOV      R1,R0
   \   00000050   38008DE2           ADD      R0,SP,#+56
   \   00000054   ........           BL       ??GetValueName
   \   00000058   0730A0E1           MOV      R3,R7
   \   0000005C   0020A0E3           MOV      R2,#+0
   \   00000060   38108DE2           ADD      R1,SP,#+56
   \   00000064   0600A0E1           MOV      R0,R6
   \   00000068   ........           _BLF     ??assign,??assign??rA
   \   0000006C   0420A0E1           MOV      R2,R4
   \   00000070   0110A0E3           MOV      R1,#+1
   \   00000074   38008DE2           ADD      R0,SP,#+56
   \                     ??GetStringValue_6:
   \   00000078   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   0000007C   2C0000EA           B        ??GetStringValue_7
    551                  break;
    552              case SVT_COLOUR:
    553                  {
    554                      AnsiString TmpStr;
   \                     ??GetStringValue_4:
   \   00000080   0D00A0E1           MOV      R0,SP
   \   00000084   ........           _BLF     ??AnsiString_1,??AnsiString??rA_1
    555                      MyString = TmpStr.sprintf("%#x", Colour);
   \   00000088   F43095E5           LDR      R3,[R5, #+244]
   \   0000008C   ........           ADR      R2,??Subroutine54_0  ;; "%#x"
   \   00000090   1C108DE2           ADD      R1,SP,#+28
   \   00000094   0D00A0E1           MOV      R0,SP
   \   00000098   ........           _BLF     ??sprintf,??sprintf??rA
   \   0000009C   0730A0E1           MOV      R3,R7
   \   000000A0   0020A0E3           MOV      R2,#+0
   \   000000A4   1C108DE2           ADD      R1,SP,#+28
   \   000000A8   0600A0E1           MOV      R0,R6
   \   000000AC   ........           _BLF     ??assign,??assign??rA
   \   000000B0   0420A0E1           MOV      R2,R4
   \   000000B4   0110A0E3           MOV      R1,#+1
   \   000000B8   1C008DE2           ADD      R0,SP,#+28
   \   000000BC   ........           _BLF     ??_Tidy,??_Tidy??rA
    556                  }
   \   000000C0   0420A0E1           MOV      R2,R4
   \   000000C4   0110A0E3           MOV      R1,#+1
   \   000000C8   0D00A0E1           MOV      R0,SP
   \   000000CC   E9FFFFEA           B        ??GetStringValue_6
    557                  break;
    558              case SVT_CARGO_TYPE_NAME:
    559                  if ( CargoTypeKey == CTY_NOT_DEFINED ) {
   \                     ??GetStringValue_3:
   \   000000D0   EC1095E5           LDR      R1,[R5, #+236]
   \   000000D4   010071E3           CMN      R1,#+1
   \   000000D8   0B00001A           BNE      ??GetStringValue_8
    560                      MyString = GetValueName(BaseCargoType);
   \   000000DC   0010A0E1           MOV      R1,R0
   \   000000E0   0D00A0E1           MOV      R0,SP
   \   000000E4   ........           BL       ??GetValueName
   \   000000E8   0730A0E1           MOV      R3,R7
   \   000000EC   0020A0E3           MOV      R2,#+0
   \   000000F0   0D10A0E1           MOV      R1,SP
   \   000000F4   0600A0E1           MOV      R0,R6
   \   000000F8   ........           _BLF     ??assign,??assign??rA
   \   000000FC   0420A0E1           MOV      R2,R4
   \   00000100   0110A0E3           MOV      R1,#+1
   \   00000104   0D00A0E1           MOV      R0,SP
   \   00000108   DAFFFFEA           B        ??GetStringValue_6
    561                  } else {
    562                      MyString = Name;
   \                     ??GetStringValue_8:
   \   0000010C   0730A0E1           MOV      R3,R7
   \   00000110   0020A0E3           MOV      R2,#+0
   \   00000114   441085E2           ADD      R1,R5,#+68
   \   00000118   0600A0E1           MOV      R0,R6
   \   0000011C   ........           _BLF     ??assign,??assign??rA
   \   00000120   030000EA           B        ??GetStringValue_7
    563                  }
    564                  break;
    565              default:
    566                  Status = PRogramObjectBase::GetStringValue(ValueId, Index, MyString);
   \                     ??GetStringValue_5:
   \   00000124   0630A0E1           MOV      R3,R6
   \   00000128   0500A0E1           MOV      R0,R5
   \   0000012C   ........           _BLF     ??GetStringValue_1,??GetStringValue??rA
   \   00000130   0040A0E1           MOV      R4,R0
    567                  break;
    568              }
    569              return (Status);
   \                     ??GetStringValue_7:
   \   00000134   0400A0E1           MOV      R0,R4
   \   00000138   54D08DE2           ADD      SP,SP,#+84
   \   0000013C                      REQUIRE ?Subroutine54
   \   0000013C                      ;; // Fall through to label ?Subroutine54
    570          }
    571          
    572          

   \                                 In segment CODE, align 4, keep-with-next
    573          int CargoTypeObject::PutValue(int ValueId, int Index, AnsiString NewValue, bool Local, int *UnitId) {
   \                     ??PutValue:
   \   00000000   F0432DE9           PUSH     {R4-R9,LR}
   \   00000004   5CD04DE2           SUB      SP,SP,#+92
   \   00000008   7890DDE5           LDRB     R9,[SP, #+120]
   \   0000000C   7C709DE5           LDR      R7,[SP, #+124]
   \   00000010   0060A0E1           MOV      R6,R0
   \   00000014   0140A0E1           MOV      R4,R1
   \   00000018   0250A0E1           MOV      R5,R2
   \   0000001C   0310A0E1           MOV      R1,R3
    574              int Status = E_NO_ERR, ValUnitId = NO_UNIT;
   \   00000020   0020A0E3           MOV      R2,#+0
   \   00000024   00208DE5           STR      R2,[SP, #+0]
   \   00000028   04208DE5           STR      R2,[SP, #+4]
    575              bool DoNotSave = false;
    576              switch ( ValueId ) {
   \   0000002C   0280E0E1           MVN      R8,R2
   \   00000030   EE20A0E3           MOV      R2,#+238
   \   00000034   C02F82E3           ORR      R2,R2,#0x300
   \   00000038   020054E1           CMP      R4,R2
   \   0000003C   4E00000A           BEQ      ??PutValue_2
   \   00000040   7D0E54E3           CMP      R4,#+2000
   \   00000044   1B00000A           BEQ      ??PutValue_3
   \   00000048   D420A0E3           MOV      R2,#+212
   \   0000004C   702E82E3           ORR      R2,R2,#0x700
   \   00000050   020054E1           CMP      R4,R2
   \   00000054   1401000A           BEQ      ??PutValue_4
   \   00000058   072082E2           ADD      R2,R2,#+7
   \   0000005C   020054E1           CMP      R4,R2
   \   00000060   6B00000A           BEQ      ??PutValue_5
   \   00000064   012082E2           ADD      R2,R2,#+1
   \   00000068   020054E1           CMP      R4,R2
   \   0000006C   8A00000A           BEQ      ??PutValue_6
   \   00000070   012082E3           ORR      R2,R2,#0x1
   \   00000074   020054E1           CMP      R4,R2
   \   00000078   A800000A           BEQ      ??PutValue_7
   \   0000007C   012082E2           ADD      R2,R2,#+1
   \   00000080   020054E1           CMP      R4,R2
   \   00000084   C600000A           BEQ      ??PutValue_8
   \   00000088   012082E3           ORR      R2,R2,#0x1
   \   0000008C   020054E1           CMP      R4,R2
   \   00000090   E400000A           BEQ      ??PutValue_9
   \   00000094   7E0E54E3           CMP      R4,#+2016
   \   00000098   2201000A           BEQ      ??PutValue_10
   \   0000009C   032082E2           ADD      R2,R2,#+3
   \   000000A0   020054E1           CMP      R4,R2
   \   000000A4   3E01000A           BEQ      ??PutValue_11
   \   000000A8   242082E2           ADD      R2,R2,#+36
   \   000000AC   020054E1           CMP      R4,R2
   \   000000B0   2200000A           BEQ      ??PutValue_12
   \   000000B4   570100EA           B        ??PutValue_13
    577              case SVT_BASIC_TYPE:
    578                  {
    579                      int Value = GetInt(NewValue, Status);
   \                     ??PutValue_3:
   \   000000B8   08008DE2           ADD      R0,SP,#+8
   \   000000BC   ........           _BLF     ??string,??string??rA
   \   000000C0   0D10A0E1           MOV      R1,SP
   \   000000C4   08008DE2           ADD      R0,SP,#+8
   \   000000C8   ........           _BLF     ??GetInt,??GetInt??rA
   \   000000CC   0040A0E1           MOV      R4,R0
   \   000000D0   0020A0E3           MOV      R2,#+0
   \   000000D4   0110A0E3           MOV      R1,#+1
   \   000000D8   08008DE2           ADD      R0,SP,#+8
   \   000000DC   ........           _BLF     ??_Tidy,??_Tidy??rA
    580                      if ( Status == E_NO_ERR ) {
   \   000000E0   00009DE5           LDR      R0,[SP, #+0]
   \   000000E4   000050E3           CMP      R0,#+0
   \   000000E8   5A01001A           BNE      ??PutValue_14
    581                          if ( !IsFixed ) {
   \   000000EC   A800D6E5           LDRB     R0,[R6, #+168]
   \   000000F0   000050E3           CMP      R0,#+0
   \   000000F4   0D00001A           BNE      ??PutValue_15
    582                              CargoTypeKey = CTY_NOT_DEFINED;
    583                              Name = "Not defined";
   \   000000F8   ........           LDR      R1,??Subroutine52_0  ;; `?<Constant "Not defined">`
   \   000000FC   EC8086E5           STR      R8,[R6, #+236]
   \   00000100   24008DE2           ADD      R0,SP,#+36
   \   00000104   ........           _BLF     ??AnsiString,??AnsiString??rA
   \   00000108   ........           LDR      R1,??DataTable5  ;; ??npos
   \   0000010C   0020A0E3           MOV      R2,#+0
   \   00000110   003091E5           LDR      R3,[R1, #+0]
   \   00000114   0010A0E1           MOV      R1,R0
   \   00000118   440086E2           ADD      R0,R6,#+68
   \   0000011C   ........           _BLF     ??assign,??assign??rA
   \   00000120   0020A0E3           MOV      R2,#+0
   \   00000124   0110A0E3           MOV      R1,#+1
   \   00000128   24008DE2           ADD      R0,SP,#+36
   \   0000012C   ........           _BLF     ??_Tidy,??_Tidy??rA
    584                          }
    585                          InputBasicCargoType(Value);
   \                     ??PutValue_15:
   \   00000130   0410A0E1           MOV      R1,R4
   \   00000134   0600A0E1           MOV      R0,R6
   \   00000138   ........           BL       ??InputBasicCargoType
   \   0000013C   450100EA           B        ??PutValue_14
    586                      }
    587                  }
    588                  break;
    589              case SVT_DB_IDNUMBER:
    590                  {
    591                      int Value = GetInt(NewValue, Status);
   \                     ??PutValue_12:
   \   00000140   08008DE2           ADD      R0,SP,#+8
   \   00000144   ........           _BLF     ??string,??string??rA
   \   00000148   0D10A0E1           MOV      R1,SP
   \   0000014C   08008DE2           ADD      R0,SP,#+8
   \   00000150   ........           _BLF     ??GetInt,??GetInt??rA
   \   00000154   0040A0E1           MOV      R4,R0
   \   00000158   0020A0E3           MOV      R2,#+0
   \   0000015C   0110A0E3           MOV      R1,#+1
   \   00000160   08008DE2           ADD      R0,SP,#+8
   \   00000164   ........           _BLF     ??_Tidy,??_Tidy??rA
    592                      if ( Status == E_NO_ERR ) {
   \   00000168   00009DE5           LDR      R0,[SP, #+0]
   \   0000016C   000050E3           CMP      R0,#+0
   \   00000170   3801001A           BNE      ??PutValue_14
    593                          DB_IdNumber = Value;
   \   00000174   B04086E5           STR      R4,[R6, #+176]
   \   00000178   360100EA           B        ??PutValue_14
    594                      }
    595                  }
    596                  break;
    597              case SVT_DENSITY:
    598                  {
    599                      ValUnitId = DENSITY_UNIT;
   \                     ??PutValue_2:
   \   0000017C   0920A0E3           MOV      R2,#+9
   \   00000180   04208DE5           STR      R2,[SP, #+4]
    600                      double Value = (double)ConvertToSi(NewValue, DENSITY_UNIT, Status, MIN_DENSITY, MAX_DENSITY, 0.0);
   \   00000184   08008DE2           ADD      R0,SP,#+8
   \   00000188   ........           _BLF     ??string,??string??rA
   \   0000018C   0000A0E3           MOV      R0,#+0
   \   00000190   0010A0E3           MOV      R1,#+0
   \   00000194   03002DE9           PUSH     {R0,R1}
   \   00000198   ........           LDR      R0,??DataTable10  ;; 0xffffffff9999999a
   \   0000019C   ........           LDR      R1,??DataTable11  ;; 0x40099999
   \   000001A0   03002DE9           PUSH     {R0,R1}
   \   000001A4   C01941E2           SUB      R1,R1,#+3145728
   \   000001A8   03002DE9           PUSH     {R0,R1}
   \   000001AC   18208DE2           ADD      R2,SP,#+24
   \   000001B0   20008DE2           ADD      R0,SP,#+32
   \   000001B4   0800BDE8           POP      {R3}
   \   000001B8   0910A0E3           MOV      R1,#+9
   \   000001BC   ........           _BLF     ??ConvertToSi,??ConvertToSi??rA
   \   000001C0   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   000001C4   0040A0E1           MOV      R4,R0
   \   000001C8   0150A0E1           MOV      R5,R1
   \   000001CC   0020A0E3           MOV      R2,#+0
   \   000001D0   0110A0E3           MOV      R1,#+1
   \   000001D4   1C008DE2           ADD      R0,SP,#+28
   \   000001D8   ........           _BLF     ??_Tidy,??_Tidy??rA
    601                      if ( Status == E_NO_ERR ) {
   \   000001DC   14009DE5           LDR      R0,[SP, #+20]
   \   000001E0   14D08DE2           ADD      SP,SP,#+20
   \   000001E4   000050E3           CMP      R0,#+0
   \   000001E8   2201001A           BNE      ??PutValue_16
    602                          CargoTypeKey = CTY_NOT_DEFINED;
   \   000001EC   EC8086E5           STR      R8,[R6, #+236]
    603                          InputBasicCargoType(CTY_SIMPLE_LIN);
   \   000001F0   0010A0E3           MOV      R1,#+0
   \   000001F4   0600A0E1           MOV      R0,R6
   \   000001F8   ........           BL       ??InputBasicCargoType
    604                          Status = OD1_Input(Value);
   \   000001FC   0520A0E1           MOV      R2,R5
   \   00000200   0410A0E1           MOV      R1,R4
   \   00000204   0600A0E1           MOV      R0,R6
   \   00000208   ........           BL       ??OD1_Input
   \   0000020C   00008DE5           STR      R0,[SP, #+0]
   \   00000210   180100EA           B        ??PutValue_16
    605                      }
    606                      DoNotSave = true;
    607                  }
    608                  break;
    609              case SVT_REF_DNS1 :
    610                  {
    611                      ValUnitId = DENSITY_UNIT;
   \                     ??PutValue_5:
   \   00000214   0920A0E3           MOV      R2,#+9
   \   00000218   04208DE5           STR      R2,[SP, #+4]
    612                      double Value = (double)ConvertToSi(NewValue, DENSITY_UNIT, Status, MIN_DENSITY, MAX_DENSITY, 0.0);
   \   0000021C   08008DE2           ADD      R0,SP,#+8
   \   00000220   ........           _BLF     ??string,??string??rA
   \   00000224   0000A0E3           MOV      R0,#+0
   \   00000228   0010A0E3           MOV      R1,#+0
   \   0000022C   03002DE9           PUSH     {R0,R1}
   \   00000230   ........           LDR      R0,??DataTable10  ;; 0xffffffff9999999a
   \   00000234   ........           LDR      R1,??DataTable11  ;; 0x40099999
   \   00000238   03002DE9           PUSH     {R0,R1}
   \   0000023C   C01941E2           SUB      R1,R1,#+3145728
   \   00000240   03002DE9           PUSH     {R0,R1}
   \   00000244   18208DE2           ADD      R2,SP,#+24
   \   00000248   20008DE2           ADD      R0,SP,#+32
   \   0000024C   0800BDE8           POP      {R3}
   \   00000250   0910A0E3           MOV      R1,#+9
   \   00000254   ........           _BLF     ??ConvertToSi,??ConvertToSi??rA
   \   00000258   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   0000025C   0040A0E1           MOV      R4,R0
   \   00000260   0150A0E1           MOV      R5,R1
   \   00000264   0020A0E3           MOV      R2,#+0
   \   00000268   0110A0E3           MOV      R1,#+1
   \   0000026C   1C008DE2           ADD      R0,SP,#+28
   \   00000270   ........           _BLF     ??_Tidy,??_Tidy??rA
    613                      if ( Status == E_NO_ERR ) {
   \   00000274   14009DE5           LDR      R0,[SP, #+20]
   \   00000278   14D08DE2           ADD      SP,SP,#+20
   \   0000027C   000050E3           CMP      R0,#+0
   \   00000280   F400001A           BNE      ??PutValue_14
    614                          Status = OD1_Input(Value);
   \   00000284   0520A0E1           MOV      R2,R5
   \   00000288   0410A0E1           MOV      R1,R4
   \   0000028C   0600A0E1           MOV      R0,R6
   \   00000290   ........           BL       ??OD1_Input
   \                     ??PutValue_17:
   \   00000294   00008DE5           STR      R0,[SP, #+0]
   \   00000298   EE0000EA           B        ??PutValue_14
    615                      }
    616                  }
    617                  break;
    618              case SVT_REF_DNS2 :
    619                  {
    620                      ValUnitId = DENSITY_UNIT;
   \                     ??PutValue_6:
   \   0000029C   0920A0E3           MOV      R2,#+9
   \   000002A0   04208DE5           STR      R2,[SP, #+4]
    621                      double Value = (double)ConvertToSi(NewValue, DENSITY_UNIT, Status, MIN_DENSITY, MAX_DENSITY, 0.0);
   \   000002A4   08008DE2           ADD      R0,SP,#+8
   \   000002A8   ........           _BLF     ??string,??string??rA
   \   000002AC   0000A0E3           MOV      R0,#+0
   \   000002B0   0010A0E3           MOV      R1,#+0
   \   000002B4   03002DE9           PUSH     {R0,R1}
   \   000002B8   ........           LDR      R0,??DataTable10  ;; 0xffffffff9999999a
   \   000002BC   ........           LDR      R1,??DataTable11  ;; 0x40099999
   \   000002C0   03002DE9           PUSH     {R0,R1}
   \   000002C4   C01941E2           SUB      R1,R1,#+3145728
   \   000002C8   03002DE9           PUSH     {R0,R1}
   \   000002CC   18208DE2           ADD      R2,SP,#+24
   \   000002D0   20008DE2           ADD      R0,SP,#+32
   \   000002D4   0800BDE8           POP      {R3}
   \   000002D8   0910A0E3           MOV      R1,#+9
   \   000002DC   ........           _BLF     ??ConvertToSi,??ConvertToSi??rA
   \   000002E0   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   000002E4   0040A0E1           MOV      R4,R0
   \   000002E8   0150A0E1           MOV      R5,R1
   \   000002EC   0020A0E3           MOV      R2,#+0
   \   000002F0   0110A0E3           MOV      R1,#+1
   \   000002F4   1C008DE2           ADD      R0,SP,#+28
   \   000002F8   ........           _BLF     ??_Tidy,??_Tidy??rA
    622                      if ( Status == E_NO_ERR ) {
   \   000002FC   14009DE5           LDR      R0,[SP, #+20]
   \   00000300   14D08DE2           ADD      SP,SP,#+20
   \   00000304   000050E3           CMP      R0,#+0
   \   00000308   D200001A           BNE      ??PutValue_14
    623                          Status = OD2_Input(Value);
   \   0000030C   0520A0E1           MOV      R2,R5
   \   00000310   0410A0E1           MOV      R1,R4
   \   00000314   0600A0E1           MOV      R0,R6
   \   00000318   ........           BL       ??OD2_Input
   \   0000031C   DCFFFFEA           B        ??PutValue_17
    624                      }
    625                  }
    626                  break;
    627              case SVT_REF_TMP1 :
    628                  {
    629                      ValUnitId = TEMP_UNIT;
   \                     ??PutValue_7:
   \   00000320   0520A0E3           MOV      R2,#+5
   \   00000324   04208DE5           STR      R2,[SP, #+4]
    630                      double Value = ConvertToSi(NewValue, TEMP_UNIT, Status, MIN_TEMP, MAX_TEMP, 0.0);
   \   00000328   08008DE2           ADD      R0,SP,#+8
   \   0000032C   ........           _BLF     ??string,??string??rA
   \   00000330   0000A0E3           MOV      R0,#+0
   \   00000334   0010A0E3           MOV      R1,#+0
   \   00000338   03002DE9           PUSH     {R0,R1}
   \   0000033C   4014A0E3           MOV      R1,#+1073741824
   \   00000340   691881E3           ORR      R1,R1,#0x690000
   \   00000344   03002DE9           PUSH     {R0,R1}
   \   00000348   ........           LDR      R1,??Subroutine52_0+0x4  ;; 0xffffffffc0668000
   \   0000034C   03002DE9           PUSH     {R0,R1}
   \   00000350   18208DE2           ADD      R2,SP,#+24
   \   00000354   20008DE2           ADD      R0,SP,#+32
   \   00000358   0800BDE8           POP      {R3}
   \   0000035C   0510A0E3           MOV      R1,#+5
   \   00000360   ........           _BLF     ??ConvertToSi,??ConvertToSi??rA
   \   00000364   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   00000368   0040A0E1           MOV      R4,R0
   \   0000036C   0150A0E1           MOV      R5,R1
   \   00000370   0020A0E3           MOV      R2,#+0
   \   00000374   0110A0E3           MOV      R1,#+1
   \   00000378   1C008DE2           ADD      R0,SP,#+28
   \   0000037C   ........           _BLF     ??_Tidy,??_Tidy??rA
    631                      if ( Status == E_NO_ERR ) {
   \   00000380   14009DE5           LDR      R0,[SP, #+20]
   \   00000384   14D08DE2           ADD      SP,SP,#+20
   \   00000388   000050E3           CMP      R0,#+0
   \   0000038C   B100001A           BNE      ??PutValue_14
    632                          Status = RefTmp1_Input(Value);
   \   00000390   0520A0E1           MOV      R2,R5
   \   00000394   0410A0E1           MOV      R1,R4
   \   00000398   0600A0E1           MOV      R0,R6
   \   0000039C   ........           BL       ??RefTmp1_Input
   \   000003A0   BBFFFFEA           B        ??PutValue_17
    633                      }
    634                  }
    635                  break;
    636              case SVT_REF_TMP2 :
    637                  {
    638                      ValUnitId = TEMP_UNIT;
   \                     ??PutValue_8:
   \   000003A4   0520A0E3           MOV      R2,#+5
   \   000003A8   04208DE5           STR      R2,[SP, #+4]
    639                      double Value = ConvertToSi(NewValue, TEMP_UNIT, Status, MIN_TEMP, MAX_TEMP, 0.0);
   \   000003AC   08008DE2           ADD      R0,SP,#+8
   \   000003B0   ........           _BLF     ??string,??string??rA
   \   000003B4   0000A0E3           MOV      R0,#+0
   \   000003B8   0010A0E3           MOV      R1,#+0
   \   000003BC   03002DE9           PUSH     {R0,R1}
   \   000003C0   4014A0E3           MOV      R1,#+1073741824
   \   000003C4   691881E3           ORR      R1,R1,#0x690000
   \   000003C8   03002DE9           PUSH     {R0,R1}
   \   000003CC   ........           LDR      R1,??Subroutine52_0+0x8  ;; 0xffffffffc0668000
   \   000003D0   03002DE9           PUSH     {R0,R1}
   \   000003D4   18208DE2           ADD      R2,SP,#+24
   \   000003D8   20008DE2           ADD      R0,SP,#+32
   \   000003DC   0800BDE8           POP      {R3}
   \   000003E0   0510A0E3           MOV      R1,#+5
   \   000003E4   ........           _BLF     ??ConvertToSi,??ConvertToSi??rA
   \   000003E8   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   000003EC   0040A0E1           MOV      R4,R0
   \   000003F0   0150A0E1           MOV      R5,R1
   \   000003F4   0020A0E3           MOV      R2,#+0
   \   000003F8   0110A0E3           MOV      R1,#+1
   \   000003FC   1C008DE2           ADD      R0,SP,#+28
   \   00000400   ........           _BLF     ??_Tidy,??_Tidy??rA
    640                      if ( Status == E_NO_ERR ) {
   \   00000404   14009DE5           LDR      R0,[SP, #+20]
   \   00000408   14D08DE2           ADD      SP,SP,#+20
   \   0000040C   000050E3           CMP      R0,#+0
   \   00000410   9000001A           BNE      ??PutValue_14
    641                          Status = RefTmp2_Input(Value);
   \   00000414   0520A0E1           MOV      R2,R5
   \   00000418   0410A0E1           MOV      R1,R4
   \   0000041C   0600A0E1           MOV      R0,R6
   \   00000420   ........           BL       ??RefTmp2_Input
   \   00000424   9AFFFFEA           B        ??PutValue_17
    642                      }
    643                  }
    644                  break;
    645              case SVT_COEFF :
    646                  {
    647                      ValUnitId = DNS_COEFF_UNIT;
   \                     ??PutValue_9:
   \   00000428   0B20A0E3           MOV      R2,#+11
   \   0000042C   04208DE5           STR      R2,[SP, #+4]
    648                      double Value = (double)ConvertToSi(NewValue, DNS_COEFF_UNIT, Status, MIN_COEFF, MAX_COEFF, 0.0);
   \   00000430   08008DE2           ADD      R0,SP,#+8
   \   00000434   ........           _BLF     ??string,??string??rA
   \   00000438   0000A0E3           MOV      R0,#+0
   \   0000043C   0010A0E3           MOV      R1,#+0
   \   00000440   03002DE9           PUSH     {R0,R1}
   \   00000444   ........           LDR      R0,??Subroutine52_0+0xC  ;; 0x47ae147b
   \   00000448   ........           LDR      R1,??DataTable12  ;; 0x3f847ae1
   \   0000044C   03002DE9           PUSH     {R0,R1}
   \   00000450   801481E3           ORR      R1,R1,#0x80000000
   \   00000454   03002DE9           PUSH     {R0,R1}
   \   00000458   18208DE2           ADD      R2,SP,#+24
   \   0000045C   20008DE2           ADD      R0,SP,#+32
   \   00000460   0800BDE8           POP      {R3}
   \   00000464   0B10A0E3           MOV      R1,#+11
   \   00000468   ........           _BLF     ??ConvertToSi,??ConvertToSi??rA
   \   0000046C   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   00000470   0040A0E1           MOV      R4,R0
   \   00000474   0150A0E1           MOV      R5,R1
   \   00000478   0020A0E3           MOV      R2,#+0
   \   0000047C   0110A0E3           MOV      R1,#+1
   \   00000480   1C008DE2           ADD      R0,SP,#+28
   \   00000484   ........           _BLF     ??_Tidy,??_Tidy??rA
    649                      if ( Status == E_NO_ERR ) {
   \   00000488   14009DE5           LDR      R0,[SP, #+20]
   \   0000048C   14D08DE2           ADD      SP,SP,#+20
   \   00000490   000050E3           CMP      R0,#+0
   \   00000494   6F00001A           BNE      ??PutValue_14
    650                          Status = Coeff_Input(Value);
   \   00000498   0520A0E1           MOV      R2,R5
   \   0000049C   0410A0E1           MOV      R1,R4
   \   000004A0   0600A0E1           MOV      R0,R6
   \   000004A4   ........           BL       ??Coeff_Input
   \   000004A8   79FFFFEA           B        ??PutValue_17
    651                      }
    652                  }
    653                  break;
    654              case SVT_API :
    655                  {
    656                      double Value = (double)ConvertToSi(NewValue, NO_UNIT, Status, MIN_API, MAX_API, 0.0);
   \                     ??PutValue_4:
   \   000004AC   08008DE2           ADD      R0,SP,#+8
   \   000004B0   ........           _BLF     ??string,??string??rA
   \   000004B4   0000A0E3           MOV      R0,#+0
   \   000004B8   0010A0E3           MOV      R1,#+0
   \   000004BC   03002DE9           PUSH     {R0,R1}
   \   000004C0   ........           LDR      R1,??DataTable13  ;; 0x40554000
   \   000004C4   03002DE9           PUSH     {R0,R1}
   \   000004C8   C014A0E3           MOV      R1,#-1073741824
   \   000004CC   901981E3           ORR      R1,R1,#0x240000
   \   000004D0   03002DE9           PUSH     {R0,R1}
   \   000004D4   18208DE2           ADD      R2,SP,#+24
   \   000004D8   0010A0E1           MOV      R1,R0
   \   000004DC   20008DE2           ADD      R0,SP,#+32
   \   000004E0   0800BDE8           POP      {R3}
   \   000004E4   ........           _BLF     ??ConvertToSi,??ConvertToSi??rA
   \   000004E8   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   000004EC   0040A0E1           MOV      R4,R0
   \   000004F0   0150A0E1           MOV      R5,R1
   \   000004F4   0020A0E3           MOV      R2,#+0
   \   000004F8   0110A0E3           MOV      R1,#+1
   \   000004FC   1C008DE2           ADD      R0,SP,#+28
   \   00000500   ........           _BLF     ??_Tidy,??_Tidy??rA
    657                      if ( Status == E_NO_ERR ) {
   \   00000504   14009DE5           LDR      R0,[SP, #+20]
   \   00000508   14D08DE2           ADD      SP,SP,#+20
   \   0000050C   000050E3           CMP      R0,#+0
   \   00000510   5000001A           BNE      ??PutValue_14
    658                          Status = Input_API(Value);
   \   00000514   0520A0E1           MOV      R2,R5
   \   00000518   0410A0E1           MOV      R1,R4
   \   0000051C   0600A0E1           MOV      R0,R6
   \   00000520   ........           BL       ??Input_API
   \   00000524   5AFFFFEA           B        ??PutValue_17
    659                      }
    660                  }
    661                  break;
    662              case SVT_MOLMASS    :
    663                  {
    664                      double Value = (double)ConvertToSi(NewValue, NO_UNIT, Status, MIN_MOLMASS, MAX_MOLMASS, 1.0);
   \                     ??PutValue_10:
   \   00000528   08008DE2           ADD      R0,SP,#+8
   \   0000052C   ........           _BLF     ??string,??string??rA
   \   00000530   0000A0E3           MOV      R0,#+0
   \   00000534   C015A0E3           MOV      R1,#+805306368
   \   00000538   FF1681E3           ORR      R1,R1,#0xFF00000
   \   0000053C   03002DE9           PUSH     {R0,R1}
   \   00000540   691881E2           ADD      R1,R1,#+6881280
   \   00000544   03002DE9           PUSH     {R0,R1}
   \   00000548   691841E2           SUB      R1,R1,#+6881280
   \   0000054C   03002DE9           PUSH     {R0,R1}
   \   00000550   18208DE2           ADD      R2,SP,#+24
   \   00000554   20008DE2           ADD      R0,SP,#+32
   \   00000558   0800BDE8           POP      {R3}
   \   0000055C   0010A0E3           MOV      R1,#+0
   \   00000560   ........           _BLF     ??ConvertToSi,??ConvertToSi??rA
   \   00000564   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   00000568   0040A0E1           MOV      R4,R0
   \   0000056C   0150A0E1           MOV      R5,R1
   \   00000570   0020A0E3           MOV      R2,#+0
   \   00000574   0110A0E3           MOV      R1,#+1
   \   00000578   1C008DE2           ADD      R0,SP,#+28
   \   0000057C   ........           _BLF     ??_Tidy,??_Tidy??rA
    665                      if ( Status == E_NO_ERR ) {
   \   00000580   14009DE5           LDR      R0,[SP, #+20]
   \   00000584   14D08DE2           ADD      SP,SP,#+20
   \   00000588   000050E3           CMP      R0,#+0
   \   0000058C   3100001A           BNE      ??PutValue_14
    666                          Status = Input_MolMass(Value);
   \   00000590   0520A0E1           MOV      R2,R5
   \   00000594   0410A0E1           MOV      R1,R4
   \   00000598   0600A0E1           MOV      R0,R6
   \   0000059C   ........           BL       ??Input_MolMass
   \   000005A0   3BFFFFEA           B        ??PutValue_17
    667                      }
    668                  }
    669                  break;
    670              case SVT_VISCOSITY:
    671                  {
    672                      double Value = (double)ConvertToSi(NewValue, VISCOSITY_UNIT, Status, MIN_VISCOSITY, MAX_VISCOSITY, 0.0);
   \                     ??PutValue_11:
   \   000005A4   08008DE2           ADD      R0,SP,#+8
   \   000005A8   ........           _BLF     ??string,??string??rA
   \   000005AC   0000A0E3           MOV      R0,#+0
   \   000005B0   0010A0E3           MOV      R1,#+0
   \   000005B4   03002DE9           PUSH     {R0,R1}
   \   000005B8   4014A0E3           MOV      R1,#+1073741824
   \   000005BC   591881E3           ORR      R1,R1,#0x590000
   \   000005C0   03002DE9           PUSH     {R0,R1}
   \   000005C4   0010A0E1           MOV      R1,R0
   \   000005C8   03002DE9           PUSH     {R0,R1}
   \   000005CC   18208DE2           ADD      R2,SP,#+24
   \   000005D0   20008DE2           ADD      R0,SP,#+32
   \   000005D4   0800BDE8           POP      {R3}
   \   000005D8   1C10A0E3           MOV      R1,#+28
   \   000005DC   ........           _BLF     ??ConvertToSi,??ConvertToSi??rA
   \   000005E0   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   000005E4   0040A0E1           MOV      R4,R0
   \   000005E8   0150A0E1           MOV      R5,R1
   \   000005EC   0020A0E3           MOV      R2,#+0
   \   000005F0   0110A0E3           MOV      R1,#+1
   \   000005F4   1C008DE2           ADD      R0,SP,#+28
   \   000005F8   ........           _BLF     ??_Tidy,??_Tidy??rA
    673                      if ( Status == E_NO_ERR ) {
   \   000005FC   14009DE5           LDR      R0,[SP, #+20]
   \   00000600   14D08DE2           ADD      SP,SP,#+20
   \   00000604   000050E3           CMP      R0,#+0
   \   00000608   1200001A           BNE      ??PutValue_14
    674                          Viscosity = Value;
   \   0000060C   E44086E5           STR      R4,[R6, #+228]
   \   00000610   E85086E5           STR      R5,[R6, #+232]
   \   00000614   120000EA           B        ??PutValue_18
    675                      }
    676                  }
    677                  break;
    678              default:
    679                  Status = PRogramObjectBase::PutValue(ValueId, Index, NewValue, Local, &ValUnitId);
   \                     ??PutValue_13:
   \   00000618   40008DE2           ADD      R0,SP,#+64
   \   0000061C   ........           _BLF     ??string,??string??rA
   \   00000620   04008DE2           ADD      R0,SP,#+4
   \   00000624   01002DE9           PUSH     {R0}
   \   00000628   00022DE9           PUSH     {R9}
   \   0000062C   48308DE2           ADD      R3,SP,#+72
   \   00000630   0520A0E1           MOV      R2,R5
   \   00000634   0410A0E1           MOV      R1,R4
   \   00000638   0600A0E1           MOV      R0,R6
   \   0000063C   ........           _BLF     ??PutValue_1,??PutValue??rA
   \   00000640   08008DE5           STR      R0,[SP, #+8]
   \   00000644   0020A0E3           MOV      R2,#+0
   \   00000648   0110A0E3           MOV      R1,#+1
   \   0000064C   48008DE2           ADD      R0,SP,#+72
   \   00000650   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000654   08D08DE2           ADD      SP,SP,#+8
   \                     ??PutValue_14:
   \   00000658   00009DE5           LDR      R0,[SP, #+0]
   \   0000065C   000050E3           CMP      R0,#+0
   \   00000660   0400001A           BNE      ??PutValue_16
    680                  break;
    681              }
    682              if ( !DoNotSave && Status == E_NO_ERR ) {
    683                  SetModifiedFlag();
   \                     ??PutValue_18:
   \   00000664   A41096E5           LDR      R1,[R6, #+164]
   \   00000668   0600A0E1           MOV      R0,R6
   \   0000066C   541091E5           LDR      R1,[R1, #+84]
   \   00000670   0FE0A0E1           MOV      LR,PC
   \   00000674   11FF2FE1           BX       R1
    684              }
    685              if ( UnitId ) {
   \                     ??PutValue_16:
   \   00000678   000057E3           CMP      R7,#+0
    686                  *UnitId = ValUnitId;
   \   0000067C   04009D15           LDRNE    R0,[SP, #+4]
   \   00000680   00008715           STRNE    R0,[R7, #+0]
    687              }
    688              return (Status);
   \   00000684   00009DE5           LDR      R0,[SP, #+0]
   \   00000688   5CD08DE2           ADD      SP,SP,#+92
   \   0000068C                      REQUIRE ?Subroutine52
   \   0000068C                      ;; // Fall through to label ?Subroutine52
    689          }
    690          

   \                                 In segment CODE, align 4, keep-with-next
    691          int CargoTypeObject::PutFloatValue(int ValueId, float NewValue) {
   \                     ??PutFloatValue:
   \   00000000   00402DE9           PUSH     {LR}
    692              int Status = E_NO_ERR;
    693              //switch ( ValueId ) {
    694              //default:
    695              Status = PRogramObjectBase::PutFloatValue(ValueId, NewValue);
    696              //    break;
    697              //}
    698              return (Status);
   \   00000004   ........           _BLF     ??PutFloatValue_1,??PutFloatValue??rA
   \   00000008   ........           B        ?Subroutine55
    699          
    700          }

   \                                 In segment CODE, align 4, keep-with-next
   \                     ?Subroutine55:
   \   00000000   0040BDE8           POP      {LR}
   \   00000004   1EFF2FE1           BX       LR               ;; return
    701          

   \                                 In segment CODE, align 4, keep-with-next
    702          ValueList* CargoTypeObject::GetValueInfoTableStatic(int &Entries, int Index) {
    703              Entries = SizeofCargoTypeValueList;
   \                     ??GetValueInfoTableStatic:
   \   00000000   0C109FE5           LDR      R1,??GetValueInfoTableStatic_1  ;; SizeofCargoTypeValueList
   \   00000004   002091E5           LDR      R2,[R1, #+0]
   \   00000008   002080E5           STR      R2,[R0, #+0]
    704              return (CargoTypeValueList);
   \   0000000C   040081E2           ADD      R0,R1,#+4
   \   00000010   1EFF2FE1           BX       LR               ;; return
   \                     ??GetValueInfoTableStatic_1:
   \   00000014   ........           DC32     SizeofCargoTypeValueList
    705          }
    706          
    707          
    708          
    709          ///////////////////////////////////////////////////////////
    710          //
    711          // This routine works with Celcius directly
    712          //
    713          ///////////////////////////////////////////////////////////

   \                                 In segment CODE, align 4, keep-with-next
    714          double CargoTypeObject::Vcf_Calc(double Temp) {
   \                     ??Vcf_Calc:
   \   00000000   D0402DE9           PUSH     {R4,R6,R7,LR}
   \   00000004   0040A0E1           MOV      R4,R0
    715              double Vcf;
    716              switch ( BaseCargoType ) {
   \   00000008   F00094E5           LDR      R0,[R4, #+240]
   \   0000000C   B46094E5           LDR      R6,[R4, #+180]
   \   00000010   B87094E5           LDR      R7,[R4, #+184]
   \   00000014   033040E2           SUB      R3,R0,#+3
   \   00000018   2E0053E3           CMP      R3,#+46
   \   0000001C   0E00008A           BHI      ??Vcf_Calc_2
   \   00000020   01CF8FE2           ADR      R12,??Vcf_Calc_1
   \   00000024   03C0DCE7           LDRB     R12,[R12, R3]
   \   00000028   0CF18FE0           ADD      PC,PC,R12, LSL #+2
   \                     ??Vcf_Calc_1:
   \   0000002C   100B2D0B           DC8      +16,+11,+45,+11
   \   00000030   0B101F2D           DC8      +11,+16,+31,+45
   \   00000034   101F2D10           DC8      +16,+31,+45,+16
   \   00000038   1F2D3B3B           DC8      +31,+45,+59,+59
   \   0000003C   3B3B3B3B           DC8      +59,+59,+59,+59
   \   00000040   43434949           DC8      +67,+67,+73,+73
   \   00000044   4F4F4F4F           DC8      +79,+79,+79,+79
   \   00000048   4F4F4F4F           DC8      +79,+79,+79,+79
   \   0000004C   4F4F4F4F           DC8      +79,+79,+79,+79
   \   00000050   4F4F4F4F           DC8      +79,+79,+79,+79
   \   00000054   4F4F4F4F           DC8      +79,+79,+79,+79
   \   00000058   4F4F4F00           DC8      +79,+79,+79,+0
    717              default:
    718                  Vcf = OD2 / OD1;
   \                     ??Vcf_Calc_2:
   \   0000005C   BC0094E5           LDR      R0,[R4, #+188]
   \   00000060   C01094E5           LDR      R1,[R4, #+192]
   \   00000064   0620A0E1           MOV      R2,R6
   \   00000068   0730A0E1           MOV      R3,R7
   \   0000006C   5C0000EA           B        ??Vcf_Calc_3
    719                  break;
    720              case CTY_HFO:
    721              case CTY_API_6A:
    722              case CTY_API_53A  :
    723              case CTY_API_54A:
    724                  Vcf = Vcf_6_and_54A_Calc(OD1, Temp - RefTmp1, NULL, false);
   \                     ??Vcf_Calc_4:
   \   00000070   0000A0E3           MOV      R0,#+0
   \   00000074   01002DE9           PUSH     {R0}
   \   00000078   01002DE9           PUSH     {R0}
   \   0000007C   C83094E5           LDR      R3,[R4, #+200]
   \   00000080   0100A0E1           MOV      R0,R1
   \   00000084   0210A0E1           MOV      R1,R2
   \   00000088   C42094E5           LDR      R2,[R4, #+196]
   \   0000008C   ........           _BLF     __dSub,??__dSub??rA
   \   00000090   0020A0E1           MOV      R2,R0
   \   00000094   0130A0E1           MOV      R3,R1
   \   00000098   0600A0E1           MOV      R0,R6
   \   0000009C   0710A0E1           MOV      R1,R7
   \   000000A0   ........           _BLF     ??Vcf_6_and_54A_Calc,??Vcf_6_and_54A_Calc??rA
   \                     ??Vcf_Calc_5:
   \   000000A4   08D08DE2           ADD      SP,SP,#+8        ;; stack cleaning
   \   000000A8   4E0000EA           B        ??Vcf_Calc_6
    725                  break;
    726              case CTY_API_6B:
    727              case CTY_API_53B:
    728              case CTY_API_54B:
    729                  Vcf = Vcf_6_and_54B_Calc(OD1, Temp - RefTmp1, NULL, false);
   \                     ??Vcf_Calc_7:
   \   000000AC   0000A0E3           MOV      R0,#+0
   \   000000B0   01002DE9           PUSH     {R0}
   \   000000B4   01002DE9           PUSH     {R0}
   \   000000B8   C83094E5           LDR      R3,[R4, #+200]
   \   000000BC   0100A0E1           MOV      R0,R1
   \   000000C0   0210A0E1           MOV      R1,R2
   \   000000C4   C42094E5           LDR      R2,[R4, #+196]
   \   000000C8   ........           _BLF     __dSub,??__dSub??rA
   \   000000CC   0020A0E1           MOV      R2,R0
   \   000000D0   0130A0E1           MOV      R3,R1
   \   000000D4   0600A0E1           MOV      R0,R6
   \   000000D8   0710A0E1           MOV      R1,R7
   \   000000DC   ........           _BLF     ??Vcf_6_and_54B_Calc,??Vcf_6_and_54B_Calc??rA
   \   000000E0   EFFFFFEA           B        ??Vcf_Calc_5
    730                  break;
    731              case CTY_LUB:
    732              case CTY_API_6D:
    733              case CTY_API_53D:
    734              case CTY_API_54D:
    735                  Vcf = Vcf_6_and_54D_Calc(OD1, Temp - RefTmp1, NULL, false);
   \                     ??Vcf_Calc_8:
   \   000000E4   0000A0E3           MOV      R0,#+0
   \   000000E8   01002DE9           PUSH     {R0}
   \   000000EC   01002DE9           PUSH     {R0}
   \   000000F0   C83094E5           LDR      R3,[R4, #+200]
   \   000000F4   0100A0E1           MOV      R0,R1
   \   000000F8   0210A0E1           MOV      R1,R2
   \   000000FC   C42094E5           LDR      R2,[R4, #+196]
   \   00000100   ........           _BLF     __dSub,??__dSub??rA
   \   00000104   0020A0E1           MOV      R2,R0
   \   00000108   0130A0E1           MOV      R3,R1
   \   0000010C   0600A0E1           MOV      R0,R6
   \   00000110   0710A0E1           MOV      R1,R7
   \   00000114   ........           _BLF     ??Vcf_6_and_54D_Calc,??Vcf_6_and_54D_Calc??rA
   \   00000118   E1FFFFEA           B        ??Vcf_Calc_5
    736                  break;
    737              case CTY_API_59A:
    738              case CTY_API_60A:
    739                  Vcf = FindVcf20(OD1, Temp);
   \                     ??Vcf_Calc_9:
   \   0000011C   06002DE9           PUSH     {R1,R2}
   \   00000120   0800BDE8           POP      {R3}
   \   00000124   0720A0E1           MOV      R2,R7
   \   00000128   0610A0E1           MOV      R1,R6
   \   0000012C   0400A0E1           MOV      R0,R4
   \   00000130   ........           BL       ??FindVcf20
   \   00000134   04D08DE2           ADD      SP,SP,#+4
   \   00000138   2A0000EA           B        ??Vcf_Calc_6
    740                  break;
    741              case CTY_API_59B:
    742              case CTY_API_60B:
    743                  Vcf = FindVcf20(OD1, Temp);
    744                  break;
    745              case CTY_API_59D:
    746              case CTY_API_60D:
    747                  Vcf = FindVcf20(OD1, Temp);
    748                  break;
    749              case CTY_API_53E:
    750              case CTY_API_54E:
    751                  Vcf = Ctl_LPG_Calc_54E(OD1, Temp);
   \                     ??Vcf_Calc_10:
   \   0000013C   0230A0E1           MOV      R3,R2
   \   00000140   0120A0E1           MOV      R2,R1
   \   00000144   0600A0E1           MOV      R0,R6
   \   00000148   0710A0E1           MOV      R1,R7
   \   0000014C   ........           _BLF     ??Ctl_LPG_Calc_54E,??Ctl_LPG_Calc_54E??rA
   \   00000150   240000EA           B        ??Vcf_Calc_6
    752                  break;
    753              case CTY_API_59E:
    754              case CTY_API_60E:
    755                  Vcf = Ctl_LPG_Calc_60E(OD1, Temp);
   \                     ??Vcf_Calc_11:
   \   00000154   0230A0E1           MOV      R3,R2
   \   00000158   0120A0E1           MOV      R2,R1
   \   0000015C   0600A0E1           MOV      R0,R6
   \   00000160   0710A0E1           MOV      R1,R7
   \   00000164   ........           _BLF     ??Ctl_LPG_Calc_60E,??Ctl_LPG_Calc_60E??rA
   \   00000168   1E0000EA           B        ??Vcf_Calc_6
    756                  break;
    757              case CTY_GAS_AMMONIA      :
    758              case CTY_GAS_BUTADIEN     :
    759              case CTY_GAS_ISOBUTYLENE  :
    760              case CTY_GAS_PROPYLENE    :
    761              case CTY_GAS_PROPENOXIDE  :
    762              case CTY_GAS_VYNILCHLORIDE:
    763              case CTY_GAS_BUTANE         :
    764              case CTY_GAS_PROPANE        :
    765              case CTY_GAS_N_BUTANE       :
    766              case CTY_GAS_ISO_BUTANE     :
    767              case CTY_GAS_1_BUTANE       :
    768              case CTY_GAS_CRUDE_C4       :
    769              case CTY_GAS_RAFFINATE_1    :
    770              case CTY_GAS_RAFFINATE_2    :
    771              case CTY_GAS_PROPYLENE_REF  :
    772              case CTY_GAS_GASOLIE        :
    773              case CTY_GAS_FLEXICOKER_LPG :
    774              case CTY_GAS_SULPHUR_1      :
    775              case CTY_GAS_SULPHUR_2      :
    776              case CTY_GAS_SULPHUR_3      :
    777              case CTY_GAS_SULPHUR_4      :
    778              case CTY_GAS_SULPHUR_5      :
    779              case CTY_GAS_SULPHUR_6      :
    780                  {
    781                      int ProductIndex = BaseCargoType - CTY_GAS_AMMONIA;
    782                      GasProduct *GasPtr = (GasProduct *)&Product[ProductIndex];
   \                     ??Vcf_Calc_12:
   \   0000016C   ........           LDR      LR,??DataTable21  ;; Product
   \   00000170   9B30E0E3           MVN      R3,#+155
   \   00000174   453CC3E3           BIC      R3,R3,#0x4500
   \   00000178   A5CFA0E3           MOV      R12,#+660
   \   0000017C   9CE020E0           MLA      R0,R12,R0,LR
   \   00000180   00C083E0           ADD      R12,R3,R0
    783                      double Density;
    784                      if ( GasPtr->TabEntries ) {
   \   00000184   60009CE5           LDR      R0,[R12, #+96]
   \   00000188   000050E3           CMP      R0,#+0
   \   0000018C   0500000A           BEQ      ??Vcf_Calc_13
    785                          Density = GetLiqDensityFromTable(Temp, GasPtr->DnsTable, GasPtr->TabEntries);
   \   00000190   01002DE9           PUSH     {R0}
   \   00000194   64308CE2           ADD      R3,R12,#+100
   \   00000198   0400A0E1           MOV      R0,R4
   \   0000019C   ........           BL       ??GetLiqDensityFromTable
   \   000001A0   04D08DE2           ADD      SP,SP,#+4
   \   000001A4   0C0000EA           B        ??Vcf_Calc_14
    786                      } else {
    787                          Density = ChemgasPureGasCalcLiquid(GasPtr->Q, GasPtr->F, GasPtr->A, GasPtr->B, Temp);
   \                     ??Vcf_Calc_13:
   \   000001A8   06002DE9           PUSH     {R1,R2}
   \   000001AC   40009CE5           LDR      R0,[R12, #+64]
   \   000001B0   44109CE5           LDR      R1,[R12, #+68]
   \   000001B4   03002DE9           PUSH     {R0,R1}
   \   000001B8   38009CE5           LDR      R0,[R12, #+56]
   \   000001BC   3C109CE5           LDR      R1,[R12, #+60]
   \   000001C0   03002DE9           PUSH     {R0,R1}
   \   000001C4   30209CE5           LDR      R2,[R12, #+48]
   \   000001C8   34309CE5           LDR      R3,[R12, #+52]
   \   000001CC   28009CE5           LDR      R0,[R12, #+40]
   \   000001D0   2C109CE5           LDR      R1,[R12, #+44]
   \   000001D4   ........           _BLF     ??ChemgasPureGasCalcLiquid,??ChemgasPureGasCalcLiquid??rA
   \   000001D8   18D08DE2           ADD      SP,SP,#+24
    788                      }
    789                      Vcf = Density / OD1;
   \                     ??Vcf_Calc_14:
   \   000001DC   B42094E5           LDR      R2,[R4, #+180]
   \   000001E0   B83094E5           LDR      R3,[R4, #+184]
   \                     ??Vcf_Calc_3:
   \   000001E4   ........           _BLF     __dDiv,??__dDiv??rA
    790                  }
    791                  break;
    792          
    793              }
    794              // Let us round off as in API
    795              return (Vcf);
   \                     ??Vcf_Calc_6:
   \   000001E8   D040BDE8           POP      {R4,R6,R7,LR}
   \   000001EC   1EFF2FE1           BX       LR               ;; return
    796          }
    797          

   \                                 In segment CODE, align 4, keep-with-next
    798          double CargoTypeObject::Comp_Density(double Temp) {
   \                     ??Comp_Density:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   0060A0E1           MOV      R6,R0
   \   00000008   0140A0E1           MOV      R4,R1
   \   0000000C   0250A0E1           MOV      R5,R2
    799              ActualTemp = Temp;
   \   00000010   0400A0E1           MOV      R0,R4
   \   00000014   0510A0E1           MOV      R1,R5
   \   00000018   ........           _BLF     __doubleToFloat,??__doubleToFloat??rA
   \   0000001C   AC0086E5           STR      R0,[R6, #+172]
    800              double Density;
    801              switch ( BaseCargoType ) {
   \   00000020   F00096E5           LDR      R0,[R6, #+240]
   \   00000024   021050E2           SUBS     R1,R0,#+2
   \   00000028   1000000A           BEQ      ??Comp_Density_1
   \   0000002C   011051E2           SUBS     R1,R1,#+1
   \   00000030   1400000A           BEQ      ??Comp_Density_2
   \   00000034   011051E2           SUBS     R1,R1,#+1
   \   00000038   1400000A           BEQ      ??Comp_Density_3
   \   0000003C   011051E2           SUBS     R1,R1,#+1
   \   00000040   1400000A           BEQ      ??Comp_Density_4
   \   00000044   011051E2           SUBS     R1,R1,#+1
   \   00000048   1400000A           BEQ      ??Comp_Density_5
   \   0000004C   011051E2           SUBS     R1,R1,#+1
   \   00000050   0A00000A           BEQ      ??Comp_Density_6
   \   00000054   011041E2           SUB      R1,R1,#+1
   \   00000058   120051E3           CMP      R1,#+18
   \   0000005C   1D00009A           BLS      ??Comp_Density_7
   \   00000060   131041E2           SUB      R1,R1,#+19
   \   00000064   160051E3           CMP      R1,#+22
   \   00000068   2400009A           BLS      ??Comp_Density_8
   \   0000006C   0D0000EA           B        ??Comp_Density_9
    802              case CTY_BALLAST:
    803                  Density = PROSystemData::BallastDensity;
   \                     ??Comp_Density_1:
   \   00000070   ........           LDR      R0,??DataTable15  ;; ??BallastDensity
   \                     ??Comp_Density_10:
   \   00000074   000090E5           LDR      R0,[R0, #+0]
   \   00000078   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   0000007C   3D0000EA           B        ??Comp_Density_11
    804                  break;
    805              case CTY_SEA    :
    806                  Density = PROSystemData::SeaWaterDensity;
   \                     ??Comp_Density_6:
   \   00000080   ........           LDR      R0,??DataTable16  ;; ??SeaWaterDensity
   \   00000084   FAFFFFEA           B        ??Comp_Density_10
    807                  break;
    808              case CTY_HFO    :
    809                  Density = PROSystemData::HeavyFuelDensity;
   \                     ??Comp_Density_2:
   \   00000088   ........           LDR      R0,??DataTable17  ;; ??HeavyFuelDensity
   \   0000008C   F8FFFFEA           B        ??Comp_Density_10
    810                  break;
    811              case CTY_DO     :
    812                  Density = PROSystemData::DieselDensity;
   \                     ??Comp_Density_3:
   \   00000090   ........           LDR      R0,??DataTable18  ;; ??DieselDensity
   \   00000094   F6FFFFEA           B        ??Comp_Density_10
    813                  break;
    814              case CTY_LUB    :
    815                  Density = PROSystemData::LubricantsDensity;
   \                     ??Comp_Density_4:
   \   00000098   ........           LDR      R0,??DataTable19  ;; ??LubricantsDensity
   \   0000009C   F4FFFFEA           B        ??Comp_Density_10
    816                  break;
    817              case CTY_FW     :
    818                  Density = PROSystemData::FreshWaterDensity;
   \                     ??Comp_Density_5:
   \   000000A0   ........           LDR      R0,??DataTable20  ;; ??FreshWaterDensity
   \   000000A4   F2FFFFEA           B        ??Comp_Density_10
    819                  break;
    820              default:
    821                  Density = OD1 - Coeff * (Temp - RefTmp1);
   \                     ??Comp_Density_9:
   \   000000A8   C40096E5           LDR      R0,[R6, #+196]
   \   000000AC   C81096E5           LDR      R1,[R6, #+200]
   \   000000B0   0420A0E1           MOV      R2,R4
   \   000000B4   0530A0E1           MOV      R3,R5
   \   000000B8   ........           _BLF     __dSub,??__dSub??rA
   \   000000BC   D42096E5           LDR      R2,[R6, #+212]
   \   000000C0   D83096E5           LDR      R3,[R6, #+216]
   \   000000C4   ........           _BLF     __dMul,??__dMul??rA
   \   000000C8   B42096E5           LDR      R2,[R6, #+180]
   \   000000CC   B83096E5           LDR      R3,[R6, #+184]
   \   000000D0   ........           _BLF     __dAdd,??__dAdd??rA
   \   000000D4   270000EA           B        ??Comp_Density_11
    822                  break;
    823              case CTY_API_6A     :
    824              case CTY_API_6B     :
    825              case CTY_API_6D     :
    826              case CTY_API_53A    :
    827              case CTY_API_53B    :
    828              case CTY_API_53D    :
    829              case CTY_API_53E    :
    830              case CTY_API_54A    :
    831              case CTY_API_54B    :
    832              case CTY_API_54D    :
    833              case CTY_API_54E    :
    834              case CTY_API_59A    :
    835              case CTY_API_59B    :
    836              case CTY_API_59D    :
    837              case CTY_API_59E    :
    838              case CTY_API_60A    :
    839              case CTY_API_60B    :
    840              case CTY_API_60D    :
    841              case CTY_API_60E    :
    842                  Density = OD1 * Vcf_Calc(Temp);
   \                     ??Comp_Density_7:
   \   000000D8   0520A0E1           MOV      R2,R5
   \   000000DC   0410A0E1           MOV      R1,R4
   \   000000E0   0600A0E1           MOV      R0,R6
   \   000000E4   ........           BL       ??Vcf_Calc
   \   000000E8   0020A0E1           MOV      R2,R0
   \   000000EC   B40096E5           LDR      R0,[R6, #+180]
   \   000000F0   0130A0E1           MOV      R3,R1
   \   000000F4   B81096E5           LDR      R1,[R6, #+184]
   \   000000F8   ........           _BLF     __dMul,??__dMul??rA
   \   000000FC   1D0000EA           B        ??Comp_Density_11
    843                  break;
    844              case CTY_GAS_AMMONIA      :
    845              case CTY_GAS_BUTADIEN     :
    846              case CTY_GAS_ISOBUTYLENE  :
    847              case CTY_GAS_PROPYLENE    :
    848              case CTY_GAS_PROPENOXIDE  :
    849              case CTY_GAS_VYNILCHLORIDE:
    850              case CTY_GAS_BUTANE         :
    851              case CTY_GAS_PROPANE        :
    852              case CTY_GAS_N_BUTANE       :
    853              case CTY_GAS_ISO_BUTANE     :
    854              case CTY_GAS_1_BUTANE       :
    855              case CTY_GAS_CRUDE_C4       :
    856              case CTY_GAS_RAFFINATE_1    :
    857              case CTY_GAS_RAFFINATE_2    :
    858              case CTY_GAS_PROPYLENE_REF  :
    859              case CTY_GAS_GASOLIE        :
    860              case CTY_GAS_FLEXICOKER_LPG :
    861              case CTY_GAS_SULPHUR_1      :
    862              case CTY_GAS_SULPHUR_2      :
    863              case CTY_GAS_SULPHUR_3      :
    864              case CTY_GAS_SULPHUR_4      :
    865              case CTY_GAS_SULPHUR_5      :
    866              case CTY_GAS_SULPHUR_6      :
    867                  {
    868                      int ProductIndex = BaseCargoType - CTY_GAS_AMMONIA;
    869          
    870                      GasProduct *GasPtr = (GasProduct *)&Product[ProductIndex];
   \                     ??Comp_Density_8:
   \   00000100   ........           LDR      R3,??DataTable21  ;; Product
   \   00000104   9B10E0E3           MVN      R1,#+155
   \   00000108   451CC1E3           BIC      R1,R1,#0x4500
   \   0000010C   A52FA0E3           MOV      R2,#+660
   \   00000110   923020E0           MLA      R0,R2,R0,R3
   \   00000114   00C081E0           ADD      R12,R1,R0
    871                      if ( GasPtr->TabEntries ) {
   \   00000118   60009CE5           LDR      R0,[R12, #+96]
   \   0000011C   000050E3           CMP      R0,#+0
   \   00000120   0700000A           BEQ      ??Comp_Density_12
    872                          Density = GetLiqDensityFromTable(Temp, GasPtr->DnsTable, GasPtr->TabEntries);
   \   00000124   01002DE9           PUSH     {R0}
   \   00000128   64308CE2           ADD      R3,R12,#+100
   \   0000012C   0520A0E1           MOV      R2,R5
   \   00000130   0410A0E1           MOV      R1,R4
   \   00000134   0600A0E1           MOV      R0,R6
   \   00000138   ........           BL       ??GetLiqDensityFromTable
   \   0000013C   04D08DE2           ADD      SP,SP,#+4
   \   00000140   0C0000EA           B        ??Comp_Density_11
    873                      } else {
    874                          Density = ChemgasPureGasCalcLiquid(GasPtr->Q, GasPtr->F, GasPtr->A, GasPtr->B, Temp);
   \                     ??Comp_Density_12:
   \   00000144   30002DE9           PUSH     {R4,R5}
   \   00000148   40009CE5           LDR      R0,[R12, #+64]
   \   0000014C   44109CE5           LDR      R1,[R12, #+68]
   \   00000150   03002DE9           PUSH     {R0,R1}
   \   00000154   38009CE5           LDR      R0,[R12, #+56]
   \   00000158   3C109CE5           LDR      R1,[R12, #+60]
   \   0000015C   03002DE9           PUSH     {R0,R1}
   \   00000160   30209CE5           LDR      R2,[R12, #+48]
   \   00000164   34309CE5           LDR      R3,[R12, #+52]
   \   00000168   28009CE5           LDR      R0,[R12, #+40]
   \   0000016C   2C109CE5           LDR      R1,[R12, #+44]
   \   00000170   ........           _BLF     ??ChemgasPureGasCalcLiquid,??ChemgasPureGasCalcLiquid??rA
   \   00000174   18D08DE2           ADD      SP,SP,#+24
    875                      }
    876                  }
    877                  break;
    878              }
    879              return (Density);
   \                     ??Comp_Density_11:
   \   00000178                      REQUIRE ?Subroutine51
   \   00000178                      ;; // Fall through to label ?Subroutine51
    880          }
    881          
    882          #define MAX_ITERATIONS  15
    883          #define ACCURACY_LIMIT   0.00005

   \                                 In segment CODE, align 4, keep-with-next
    884          double CargoTypeObject::FindVcf(double RhoT, double dT, double (*Function)(double NewRhoRef, double dTmp, int *CNo, bool FixedCurveNo)) {
   \                     ??FindVcf:
   \   00000000   08002DE9           PUSH     {R3}
   \   00000004   F64F2DE9           PUSH     {R1,R2,R4-R11,LR}
   \   00000008   34B09DE5           LDR      R11,[SP, #+52]
    885              double Vcf, RhoRef, NewRhoRef = RhoT;       // Init NewRhoAtRef
   \   0000000C   0D00A0E1           MOV      R0,SP
   \   00000010   C00090E8           LDM      R0,{R6,R7}
    886              int Cnt = 0;
   \   00000014   00A0A0E3           MOV      R10,#+0
    887              do {
    888                  RhoRef = NewRhoRef;
    889                  Vcf    = (*Function)(NewRhoRef, dT, NULL, false);
   \                     ??FindVcf_1:
   \   00000018   0000A0E3           MOV      R0,#+0
   \   0000001C   01002DE9           PUSH     {R0}
   \   00000020   01002DE9           PUSH     {R0}
   \   00000024   34008DE2           ADD      R0,SP,#+52
   \   00000028   0C0090E8           LDM      R0,{R2,R3}
   \   0000002C   0600A0E1           MOV      R0,R6
   \   00000030   0710A0E1           MOV      R1,R7
   \   00000034   0BC0A0E1           MOV      R12,R11
   \   00000038   0FE0A0E1           MOV      LR,PC
   \   0000003C   1CFF2FE1           BX       R12
   \   00000040   0040A0E1           MOV      R4,R0
   \   00000044   0150A0E1           MOV      R5,R1
    890                  NewRhoRef = RhoT / Vcf;
   \   00000048   08008DE2           ADD      R0,SP,#+8
   \   0000004C   030090E8           LDM      R0,{R0,R1}
   \   00000050   0680A0E1           MOV      R8,R6
   \   00000054   0790A0E1           MOV      R9,R7
   \   00000058   0420A0E1           MOV      R2,R4
   \   0000005C   0530A0E1           MOV      R3,R5
   \   00000060   ........           _BLF     __dDiv,??__dDiv??rA
   \   00000064   0060A0E1           MOV      R6,R0
   \   00000068   0170A0E1           MOV      R7,R1
    891              }while ( Cnt++ < MAX_ITERATIONS && fabs(NewRhoRef - RhoRef) >= ACCURACY_LIMIT );
   \   0000006C   0A00A0E1           MOV      R0,R10
   \   00000070   01A080E2           ADD      R10,R0,#+1
   \   00000074   0F0050E3           CMP      R0,#+15
   \   00000078   08D08DE2           ADD      SP,SP,#+8
   \   0000007C   090000AA           BGE      ??FindVcf_2
   \   00000080   0600A0E1           MOV      R0,R6
   \   00000084   0820A0E1           MOV      R2,R8
   \   00000088   0930A0E1           MOV      R3,R9
   \   0000008C   ........           _BLF     __dSub,??__dSub??rA
   \   00000090   ........           LDR      R2,??DataTable24  ;; 0xffffffffeb1c432d
   \   00000094   ........           LDR      R3,??DataTable25  ;; 0x3f0a36e2
   \   00000098   8014C1E3           BIC      R1,R1,#0x80000000
   \   0000009C   ........           _BLF     __dGreaterEqual,??__dGreaterEqual??rA
   \   000000A0   000050E3           CMP      R0,#+0
   \   000000A4   DBFFFF1A           BNE      ??FindVcf_1
    892              // Accept the solution
    893              RhoRef = NewRhoRef;
    894              return (Vcf);
   \                     ??FindVcf_2:
   \   000000A8   0400A0E1           MOV      R0,R4
   \   000000AC   0510A0E1           MOV      R1,R5
   \   000000B0   FC4FBDE8           POP      {R2-R11,LR}
   \   000000B4   ........           B        ??Subroutine49_0
    895          }

   \                                 In segment CODE, align 4, keep-with-next
   \                     ?Subroutine49:
   \   00000000   F04FBDE8           POP      {R4-R11,LR}
   \                     ??Subroutine49_0:
   \   00000004   04D08DE2           ADD      SP,SP,#+4
   \   00000008   1EFF2FE1           BX       LR               ;; return
    896          

   \                                 In segment CODE, align 4, keep-with-next
    897          double CargoTypeObject::FindDns(double RhoRefOrg, double dT, double (*Function)(double NewRhoRef, double dTmp, int *CNo, bool FixedCurveNo)) {
   \                     ??FindDns:
   \   00000000   08002DE9           PUSH     {R3}
   \   00000004   F64F2DE9           PUSH     {R1,R2,R4-R11,LR}
   \   00000008   18D04DE2           SUB      SP,SP,#+24
   \   0000000C   4CB09DE5           LDR      R11,[SP, #+76]
   \   00000010   44008DE2           ADD      R0,SP,#+68
   \   00000014   C00090E8           LDM      R0,{R6,R7}
    898              double RhoRef, NewRhoRef;    // Init NewRhoAtRef
    899              int CNo        = 0;
   \   00000018   0010A0E3           MOV      R1,#+0
   \   0000001C   04108DE5           STR      R1,[SP, #+4]
    900              int OrgCNo     = 0;
   \   00000020   00108DE5           STR      R1,[SP, #+0]
    901              int CurveCnt   = 0;
   \   00000024   08108DE5           STR      R1,[SP, #+8]
   \   00000028   01A0A0E3           MOV      R10,#+1
    902              bool FirstTime = true;
    903              double Vcf     = 1.0;
    904              do {
    905                  NewRhoRef = RhoRefOrg;
   \                     ??FindDns_1:
   \   0000002C   18008DE2           ADD      R0,SP,#+24
   \   00000030   000390E8           LDM      R0,{R8,R9}
    906                  int Cnt = 0;
   \   00000034   0010A0E3           MOV      R1,#+0
   \   00000038   0C108DE5           STR      R1,[SP, #+12]
    907                  do {
    908                      RhoRef = NewRhoRef;
    909                      if ( CurveCnt ) {
   \                     ??FindDns_2:
   \   0000003C   08109DE5           LDR      R1,[SP, #+8]
   \   00000040   0840A0E1           MOV      R4,R8
   \   00000044   0950A0E1           MOV      R5,R9
   \   00000048   0000A0E3           MOV      R0,#+0
   \   0000004C   000051E3           CMP      R1,#+0
   \   00000050   0E00000A           BEQ      ??FindDns_3
    910                          if ( FirstTime ) {
   \   00000054   00005AE3           CMP      R10,#+0
   \   00000058   0800000A           BEQ      ??FindDns_4
    911                              FirstTime = false;
    912                              // Ref API Volume X, page X-320 and Petroleum Measurement paper 3, page 39
    913                              RhoRef = 0.77884;
    914                              OrgCNo = CNo;  // Use the curve found from the latest iteration
   \   0000005C   04109DE5           LDR      R1,[SP, #+4]
   \   00000060   30419FE5           LDR      R4,??FindDns_5   ;; 0xffffffffdd1a21ea
   \   00000064   30519FE5           LDR      R5,??FindDns_5+0x4  ;; 0x3fe8ec41
   \   00000068   00A0A0E3           MOV      R10,#+0
   \   0000006C   00108DE5           STR      R1,[SP, #+0]
    915                              Vcf    = (*Function)(RhoRef, dT, &OrgCNo, true);
   \   00000070   0100A0E3           MOV      R0,#+1
   \                     ??FindDns_6:
   \   00000074   01002DE9           PUSH     {R0}
   \   00000078   04008DE2           ADD      R0,SP,#+4
   \   0000007C   0E0000EA           B        ??FindDns_7
    916                          } else {
    917                              OrgCNo = CNo;  // Use the curve found from the latest iteration
   \                     ??FindDns_4:
   \   00000080   04109DE5           LDR      R1,[SP, #+4]
    918                              Vcf    = (*Function)(RhoRef, dT, &OrgCNo, true);
   \   00000084   0100A0E3           MOV      R0,#+1
   \   00000088   00108DE5           STR      R1,[SP, #+0]
   \   0000008C   F8FFFFEA           B        ??FindDns_6
    919                          }
    920                      } else {
    921                          if ( FirstTime ) {
   \                     ??FindDns_3:
   \   00000090   00005AE3           CMP      R10,#+0
   \   00000094   0300000A           BEQ      ??FindDns_8
    922                              FirstTime = false;
   \   00000098   00A0A0E3           MOV      R10,#+0
    923                              Vcf = (*Function)(RhoRef, dT, &OrgCNo, false);
   \   0000009C   01002DE9           PUSH     {R0}
   \   000000A0   04008DE2           ADD      R0,SP,#+4
   \   000000A4   040000EA           B        ??FindDns_7
    924                          } else {
    925                              CNo = OrgCNo;
   \                     ??FindDns_8:
   \   000000A8   00109DE5           LDR      R1,[SP, #+0]
    926                              Vcf = (*Function)(RhoRef, dT, &CNo, true);
   \   000000AC   0100A0E3           MOV      R0,#+1
   \   000000B0   04108DE5           STR      R1,[SP, #+4]
   \   000000B4   01002DE9           PUSH     {R0}
   \   000000B8   08008DE2           ADD      R0,SP,#+8
   \                     ??FindDns_7:
   \   000000BC   01002DE9           PUSH     {R0}
   \   000000C0   0620A0E1           MOV      R2,R6
   \   000000C4   0730A0E1           MOV      R3,R7
   \   000000C8   0400A0E1           MOV      R0,R4
   \   000000CC   0510A0E1           MOV      R1,R5
   \   000000D0   0B80A0E1           MOV      R8,R11
   \   000000D4   0FE0A0E1           MOV      LR,PC
   \   000000D8   18FF2FE1           BX       R8
   \   000000DC   0020A0E1           MOV      R2,R0
   \   000000E0   0130A0E1           MOV      R3,R1
   \   000000E4   08D08DE2           ADD      SP,SP,#+8
    927                          }
    928                      }
    929                      NewRhoRef = APITruncate(RhoRefOrg / Vcf, 6);
   \   000000E8   18008DE2           ADD      R0,SP,#+24
   \   000000EC   030090E8           LDM      R0,{R0,R1}
   \   000000F0   10808DE2           ADD      R8,SP,#+16
   \   000000F4   ........           _BLF     __dDiv,??__dDiv??rA
   \   000000F8   030088E8           STM      R8,{R0,R1}
   \   000000FC   10008DE2           ADD      R0,SP,#+16
   \   00000100   030090E8           LDM      R0,{R0,R1}
   \   00000104   0620A0E3           MOV      R2,#+6
   \   00000108   ........           _BLF     ??APITruncate,??APITruncate??rA
    930                      NewRhoRef = APIRound(NewRhoRef, 2);
   \   0000010C   0220A0E3           MOV      R2,#+2
   \   00000110   ........           _BLF     ??APIRound,??APIRound??rA
   \   00000114   0080A0E1           MOV      R8,R0
    931                  }while ( Cnt++ < MAX_ITERATIONS && fabs(NewRhoRef - RhoRef) >= ACCURACY_LIMIT );
   \   00000118   0C009DE5           LDR      R0,[SP, #+12]
   \   0000011C   0190A0E1           MOV      R9,R1
   \   00000120   012080E2           ADD      R2,R0,#+1
   \   00000124   0C208DE5           STR      R2,[SP, #+12]
   \   00000128   0F0050E3           CMP      R0,#+15
   \   0000012C   090000AA           BGE      ??FindDns_9
   \   00000130   0800A0E1           MOV      R0,R8
   \   00000134   0420A0E1           MOV      R2,R4
   \   00000138   0530A0E1           MOV      R3,R5
   \   0000013C   ........           _BLF     __dSub,??__dSub??rA
   \   00000140   ........           LDR      R2,??DataTable24  ;; 0xffffffffeb1c432d
   \   00000144   ........           LDR      R3,??DataTable25  ;; 0x3f0a36e2
   \   00000148   8014C1E3           BIC      R1,R1,#0x80000000
   \   0000014C   ........           _BLF     __dGreaterEqual,??__dGreaterEqual??rA
   \   00000150   000050E3           CMP      R0,#+0
   \   00000154   B8FFFF1A           BNE      ??FindDns_2
    932                  CurveCnt++;
   \                     ??FindDns_9:
   \   00000158   08109DE5           LDR      R1,[SP, #+8]
    933                  FirstTime = true;
   \   0000015C   01A0A0E3           MOV      R10,#+1
   \   00000160   011081E2           ADD      R1,R1,#+1
   \   00000164   08108DE5           STR      R1,[SP, #+8]
    934              }while ( CurveCnt < 2 && CNo != OrgCNo );
   \   00000168   020051E3           CMP      R1,#+2
   \   0000016C   030000AA           BGE      ??FindDns_10
   \   00000170   04009DE5           LDR      R0,[SP, #+4]
   \   00000174   00109DE5           LDR      R1,[SP, #+0]
   \   00000178   010050E1           CMP      R0,R1
   \   0000017C   AAFFFF1A           BNE      ??FindDns_1
    935              // Accept the solution
    936              NewRhoRef = APITruncate(RhoRefOrg / Vcf, 3);
    937          //  NewRhoRef = APIRound(NewRhoRef,2);
    938              return (NewRhoRef);
   \                     ??FindDns_10:
   \   00000180   10008DE2           ADD      R0,SP,#+16
   \   00000184   030090E8           LDM      R0,{R0,R1}
   \   00000188   0320A0E3           MOV      R2,#+3
   \   0000018C   ........           _BLF     ??APITruncate,??APITruncate??rA
   \   00000190   20D08DE2           ADD      SP,SP,#+32
   \   00000194   ........           B        ?Subroutine49
   \                     ??FindDns_5:
   \   00000198   EA211ADD           DC32     0xffffffffdd1a21ea
   \   0000019C   41ECE83F           DC32     0x3fe8ec41
    939          }
    940          

   \                                 In segment CODE, align 4, keep-with-next
    941          double CargoTypeObject::FindVcf20(double Rho20, double Temp) {
   \                     ??FindVcf20:
   \   00000000   08002DE9           PUSH     {R3}
   \   00000004   F04F2DE9           PUSH     {R4-R11,LR}
   \   00000008   0080A0E1           MOV      R8,R0
   \   0000000C   0270A0E1           MOV      R7,R2
   \   00000010   F02098E5           LDR      R2,[R8, #+240]
   \   00000014   ........           LDR      R9,??DataTable31  ;; ??Vcf_6_and_54D_Calc
   \   00000018   24008DE2           ADD      R0,SP,#+36
   \   0000001C   300090E8           LDM      R0,{R4,R5}
   \   00000020   0160A0E1           MOV      R6,R1
   \   00000024   112042E2           SUB      R2,R2,#+17
   \   00000028   090052E3           CMP      R2,#+9
   \   0000002C   2901008A           BHI      ??FindVcf20_2
   \   00000030   023F8FE2           ADR      R3,??FindVcf20_1
   \   00000034   8220A0E1           MOV      R2,R2, LSL #+1
   \   00000038   B23093E1           LDRH     R3,[R3, R2]
   \   0000003C   03F18FE0           ADD      PC,PC,R3, LSL #+2
   \                     ??FindVcf20_1:
   \   00000040   04003B007100       DC16     +4,+59,+113,+167
   \              A700        
   \   00000048   CF00F8002501       DC16     +207,+248,+293,+293
   \              2501        
   \   00000050   20012001           DC16     +288,+288
    942              double VCF20;
    943              switch ( BaseCargoType ) {
    944              case CTY_API_6A :
    945              case CTY_API_6B :
    946              case CTY_API_6D :
    947              case CTY_API_53A:
    948              case CTY_API_53B:
    949              case CTY_API_53D:
    950              case CTY_API_54A:
    951              case CTY_API_54B:
    952              case CTY_API_54D:
    953              default:
    954                  break;
    955              case CTY_API_59A:
    956                  {
    957                      Temp   = APIRound5(Temp, 2);
   \                     ??FindVcf20_3:
   \   00000054   0220A0E3           MOV      R2,#+2
   \   00000058   0400A0E1           MOV      R0,R4
   \   0000005C   0510A0E1           MOV      R1,R5
   \   00000060   ........           _BLF     ??APIRound5,??APIRound5??rA
   \   00000064   0040A0E1           MOV      R4,R0
   \   00000068   0150A0E1           MOV      R5,R1
    958                      double dT = Temp - IP_REFTMP;
   \   0000006C   0000A0E3           MOV      R0,#+0
   \   00000070   C014A0E3           MOV      R1,#-1073741824
   \   00000074   D01981E3           ORR      R1,R1,#0x340000
   \   00000078   0420A0E1           MOV      R2,R4
   \   0000007C   0530A0E1           MOV      R3,R5
   \   00000080   ........           _BLF     __dAdd,??__dAdd??rA
   \   00000084   00A0A0E1           MOV      R10,R0
   \   00000088   01B0A0E1           MOV      R11,R1
    959                      Rho20  = APIRound5(Rho20, 4);
   \   0000008C   0420A0E3           MOV      R2,#+4
   \   00000090   0600A0E1           MOV      R0,R6
   \   00000094   0710A0E1           MOV      R1,R7
   \   00000098   ........           _BLF     ??APIRound5,??APIRound5??rA
   \   0000009C   0060A0E1           MOV      R6,R0
   \   000000A0   0170A0E1           MOV      R7,R1
    960                      Rho20  = APIRound(Rho20 * HydrometerCorrection(dT), 5);
   \   000000A4   0A00A0E1           MOV      R0,R10
   \   000000A8   0B10A0E1           MOV      R1,R11
   \   000000AC   ........           _BLF     __doubleToFloat,??__doubleToFloat??rA
   \   000000B0   ........           _BLF     ??HydrometerCorrection,??HydrometerCorrection??rA
   \   000000B4   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   000000B8   0620A0E1           MOV      R2,R6
   \   000000BC   0730A0E1           MOV      R3,R7
   \   000000C0   ........           _BLF     __dMul,??__dMul??rA
   \   000000C4   0520A0E3           MOV      R2,#+5
   \   000000C8   ........           _BLF     ??APIRound,??APIRound??rA
    961                      double dT15   = Temp - SI_REFTMP;
    962                      double RhoRef = FindDns(Rho20, dT15, Vcf_6_and_54A_Calc);
   \   000000CC   ........           LDR      R2,??DataTable39  ;; ??Vcf_6_and_54A_Calc
   \   000000D0   0060A0E1           MOV      R6,R0
   \   000000D4   0170A0E1           MOV      R7,R1
   \   000000D8   0290A0E1           MOV      R9,R2
   \   000000DC   0000A0E3           MOV      R0,#+0
   \   000000E0   C014A0E3           MOV      R1,#-1073741824
   \   000000E4   B81981E3           ORR      R1,R1,#0x2E0000
   \   000000E8   0420A0E1           MOV      R2,R4
   \   000000EC   0530A0E1           MOV      R3,R5
   \   000000F0   ........           _BLF     __dAdd,??__dAdd??rA
   \   000000F4   0920A0E1           MOV      R2,R9
   \   000000F8   07002DE9           PUSH     {R0-R2}
   \   000000FC   0800BDE8           POP      {R3}
   \   00000100   0720A0E1           MOV      R2,R7
   \   00000104   0610A0E1           MOV      R1,R6
   \   00000108   0800A0E1           MOV      R0,R8
   \   0000010C   ........           BL       ??FindDns
    963                      VCF20  = Vcf_59A_and_60A_Calc(RhoRef, dT, NULL, false);
   \   00000110   0020A0E3           MOV      R2,#+0
   \   00000114   04002DE9           PUSH     {R2}
   \   00000118   04002DE9           PUSH     {R2}
   \   0000011C   0A20A0E1           MOV      R2,R10
   \   00000120   0B30A0E1           MOV      R3,R11
   \                     ??FindVcf20_4:
   \   00000124   ........           _BLF     ??Vcf_59A_and_60A_Calc,??Vcf_59A_and_60A_Calc??rA
   \                     ??FindVcf20_5:
   \   00000128   10D08DE2           ADD      SP,SP,#+16       ;; stack cleaning
   \   0000012C   E90000EA           B        ??FindVcf20_2
    964                  }
    965                  break;
    966              case CTY_API_59B:
    967                  {
    968                      Temp   = APIRound5(Temp, 2);
   \                     ??FindVcf20_6:
   \   00000130   0220A0E3           MOV      R2,#+2
   \   00000134   0400A0E1           MOV      R0,R4
   \   00000138   0510A0E1           MOV      R1,R5
   \   0000013C   ........           _BLF     ??APIRound5,??APIRound5??rA
   \   00000140   0040A0E1           MOV      R4,R0
   \   00000144   0150A0E1           MOV      R5,R1
    969                      double dT = Temp - IP_REFTMP;
   \   00000148   0000A0E3           MOV      R0,#+0
   \   0000014C   C014A0E3           MOV      R1,#-1073741824
   \   00000150   D01981E3           ORR      R1,R1,#0x340000
   \   00000154   0420A0E1           MOV      R2,R4
   \   00000158   0530A0E1           MOV      R3,R5
   \   0000015C   ........           _BLF     __dAdd,??__dAdd??rA
   \   00000160   00A0A0E1           MOV      R10,R0
   \   00000164   01B0A0E1           MOV      R11,R1
    970                      Rho20  = APIRound5(Rho20, 4);
   \   00000168   0420A0E3           MOV      R2,#+4
   \   0000016C   0600A0E1           MOV      R0,R6
   \   00000170   0710A0E1           MOV      R1,R7
   \   00000174   ........           _BLF     ??APIRound5,??APIRound5??rA
   \   00000178   0060A0E1           MOV      R6,R0
   \   0000017C   0170A0E1           MOV      R7,R1
    971                      Rho20  = APIRound(Rho20 * HydrometerCorrection(dT), 5);
   \   00000180   0A00A0E1           MOV      R0,R10
   \   00000184   0B10A0E1           MOV      R1,R11
   \   00000188   ........           _BLF     __doubleToFloat,??__doubleToFloat??rA
   \   0000018C   ........           _BLF     ??HydrometerCorrection,??HydrometerCorrection??rA
   \   00000190   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   00000194   0620A0E1           MOV      R2,R6
   \   00000198   0730A0E1           MOV      R3,R7
   \   0000019C   ........           _BLF     __dMul,??__dMul??rA
   \   000001A0   0520A0E3           MOV      R2,#+5
   \   000001A4   ........           _BLF     ??APIRound,??APIRound??rA
    972                      double dT15   = Temp - SI_REFTMP;
    973                      double RhoRef = FindDns(Rho20, dT15, Vcf_6_and_54B_Calc);
   \   000001A8   ........           LDR      R2,??DataTable40  ;; ??Vcf_6_and_54B_Calc
   \   000001AC   0060A0E1           MOV      R6,R0
   \   000001B0   0170A0E1           MOV      R7,R1
   \   000001B4   0290A0E1           MOV      R9,R2
   \   000001B8   0000A0E3           MOV      R0,#+0
   \   000001BC   C014A0E3           MOV      R1,#-1073741824
   \   000001C0   B81981E3           ORR      R1,R1,#0x2E0000
   \   000001C4   0420A0E1           MOV      R2,R4
   \   000001C8   0530A0E1           MOV      R3,R5
   \   000001CC   ........           _BLF     __dAdd,??__dAdd??rA
   \   000001D0   0920A0E1           MOV      R2,R9
   \   000001D4   07002DE9           PUSH     {R0-R2}
   \   000001D8   0800BDE8           POP      {R3}
   \   000001DC   0720A0E1           MOV      R2,R7
   \   000001E0   0610A0E1           MOV      R1,R6
   \   000001E4   0800A0E1           MOV      R0,R8
   \   000001E8   ........           BL       ??FindDns
    974                      VCF20  = Vcf_59B_and_60B_Calc(RhoRef, dT, NULL, false);
   \   000001EC   0020A0E3           MOV      R2,#+0
   \   000001F0   04002DE9           PUSH     {R2}
   \   000001F4   04002DE9           PUSH     {R2}
   \   000001F8   0A20A0E1           MOV      R2,R10
   \   000001FC   0B30A0E1           MOV      R3,R11
   \   00000200   ........           _BLF     ??Vcf_59B_and_60B_Calc,??Vcf_59B_and_60B_Calc??rA
   \   00000204   C7FFFFEA           B        ??FindVcf20_5
    975                  }
    976                  break;
    977              case CTY_API_59D:
    978                  {
    979                      Temp   = APIRound5(Temp, 2);
   \                     ??FindVcf20_7:
   \   00000208   0220A0E3           MOV      R2,#+2
   \   0000020C   0400A0E1           MOV      R0,R4
   \   00000210   0510A0E1           MOV      R1,R5
   \   00000214   ........           _BLF     ??APIRound5,??APIRound5??rA
   \   00000218   0040A0E1           MOV      R4,R0
   \   0000021C   0150A0E1           MOV      R5,R1
    980                      double dT = Temp - IP_REFTMP;
   \   00000220   0000A0E3           MOV      R0,#+0
   \   00000224   C014A0E3           MOV      R1,#-1073741824
   \   00000228   D01981E3           ORR      R1,R1,#0x340000
   \   0000022C   0420A0E1           MOV      R2,R4
   \   00000230   0530A0E1           MOV      R3,R5
   \   00000234   ........           _BLF     __dAdd,??__dAdd??rA
   \   00000238   00A0A0E1           MOV      R10,R0
   \   0000023C   01B0A0E1           MOV      R11,R1
    981                      Rho20  = APIRound5(Rho20, 4);
   \   00000240   0420A0E3           MOV      R2,#+4
   \   00000244   0600A0E1           MOV      R0,R6
   \   00000248   0710A0E1           MOV      R1,R7
   \   0000024C   ........           _BLF     ??APIRound5,??APIRound5??rA
   \   00000250   0060A0E1           MOV      R6,R0
   \   00000254   0170A0E1           MOV      R7,R1
    982                      Rho20  = APIRound(Rho20 * HydrometerCorrection(dT), 5);
   \   00000258   0A00A0E1           MOV      R0,R10
   \   0000025C   0B10A0E1           MOV      R1,R11
   \   00000260   ........           _BLF     __doubleToFloat,??__doubleToFloat??rA
   \   00000264   ........           _BLF     ??HydrometerCorrection,??HydrometerCorrection??rA
   \   00000268   0520A0E3           MOV      R2,#+5
   \   0000026C   04002DE9           PUSH     {R2}
   \   00000270   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   00000274   0620A0E1           MOV      R2,R6
   \   00000278   0730A0E1           MOV      R3,R7
   \   0000027C   ........           _BLF     __dMul,??__dMul??rA
   \   00000280   0400BDE8           POP      {R2}
   \   00000284   ........           _BLF     ??APIRound,??APIRound??rA
   \   00000288   0060A0E1           MOV      R6,R0
   \   0000028C   0170A0E1           MOV      R7,R1
    983                      double dT15   = Temp - SI_REFTMP;
    984                      double RhoRef = FindDns(Rho20, dT15, Vcf_6_and_54D_Calc);
   \   00000290   0000A0E3           MOV      R0,#+0
   \   00000294   C014A0E3           MOV      R1,#-1073741824
   \   00000298   B81981E3           ORR      R1,R1,#0x2E0000
   \   0000029C   0420A0E1           MOV      R2,R4
   \   000002A0   0530A0E1           MOV      R3,R5
   \   000002A4   ........           _BLF     __dAdd,??__dAdd??rA
   \   000002A8   0920A0E1           MOV      R2,R9
   \   000002AC   07002DE9           PUSH     {R0-R2}
   \   000002B0   0800BDE8           POP      {R3}
   \   000002B4   0720A0E1           MOV      R2,R7
   \   000002B8   0610A0E1           MOV      R1,R6
   \   000002BC   0800A0E1           MOV      R0,R8
   \   000002C0   ........           BL       ??FindDns
    985                      VCF20  = Vcf_59D_and_60D_Calc(RhoRef, dT, NULL, false);
   \   000002C4   0020A0E3           MOV      R2,#+0
   \   000002C8   04002DE9           PUSH     {R2}
   \   000002CC   04002DE9           PUSH     {R2}
   \   000002D0   0A20A0E1           MOV      R2,R10
   \   000002D4   0B30A0E1           MOV      R3,R11
   \   000002D8   ........           _BLF     ??Vcf_59D_and_60D_Calc,??Vcf_59D_and_60D_Calc??rA
   \   000002DC   91FFFFEA           B        ??FindVcf20_5
    986                  }
    987                  break;
    988              case CTY_API_60A:
    989                  {
    990                      Temp   = APIRound5(Temp, 2);
   \                     ??FindVcf20_8:
   \   000002E0   0220A0E3           MOV      R2,#+2
   \   000002E4   0400A0E1           MOV      R0,R4
   \   000002E8   0510A0E1           MOV      R1,R5
   \   000002EC   ........           _BLF     ??APIRound5,??APIRound5??rA
   \   000002F0   0040A0E1           MOV      R4,R0
   \   000002F4   0150A0E1           MOV      R5,R1
    991                      double dT      = Temp - IP_REFTMP;
    992                      Rho20  = APIRound5(Rho20, 4);
   \   000002F8   0420A0E3           MOV      R2,#+4
   \   000002FC   0600A0E1           MOV      R0,R6
   \   00000300   0710A0E1           MOV      R1,R7
   \   00000304   ........           _BLF     ??APIRound5,??APIRound5??rA
   \   00000308   0060A0E1           MOV      R6,R0
    993                      double dT15   = IP_REFTMP - SI_REFTMP;
    994                      double RhoRef = FindDns(Rho20, dT15, Vcf_6_and_54A_Calc);
   \   0000030C   ........           LDR      R0,??DataTable39  ;; ??Vcf_6_and_54A_Calc
   \   00000310   0170A0E1           MOV      R7,R1
   \   00000314   01002DE9           PUSH     {R0}
   \   00000318   0000A0E3           MOV      R0,#+0
   \   0000031C   4014A0E3           MOV      R1,#+1073741824
   \   00000320   501981E3           ORR      R1,R1,#0x140000
   \   00000324   03002DE9           PUSH     {R0,R1}
   \   00000328   0800BDE8           POP      {R3}
   \   0000032C   0720A0E1           MOV      R2,R7
   \   00000330   0610A0E1           MOV      R1,R6
   \   00000334   0800A0E1           MOV      R0,R8
   \   00000338   ........           BL       ??FindDns
    995                      RhoRef = APIRound(RhoRef, 4);
   \   0000033C   0420A0E3           MOV      R2,#+4
   \   00000340   ........           _BLF     ??APIRound,??APIRound??rA
   \   00000344   0060A0E1           MOV      R6,R0
   \   00000348   0170A0E1           MOV      R7,R1
    996                      VCF20  = Vcf_59A_and_60A_Calc(RhoRef, dT, NULL, false);
   \   0000034C   0000A0E3           MOV      R0,#+0
   \   00000350   01002DE9           PUSH     {R0}
   \   00000354   01002DE9           PUSH     {R0}
   \   00000358   C014A0E3           MOV      R1,#-1073741824
   \   0000035C   D01981E3           ORR      R1,R1,#0x340000
   \   00000360   0420A0E1           MOV      R2,R4
   \   00000364   0530A0E1           MOV      R3,R5
   \   00000368   ........           _BLF     __dAdd,??__dAdd??rA
   \   0000036C   0020A0E1           MOV      R2,R0
   \   00000370   0130A0E1           MOV      R3,R1
   \   00000374   0600A0E1           MOV      R0,R6
   \   00000378   0710A0E1           MOV      R1,R7
   \   0000037C   68FFFFEA           B        ??FindVcf20_4
    997                  }
    998                  break;
    999              case CTY_API_60B:
   1000                  {
   1001                      Temp   = APIRound5(Temp, 2);
   \                     ??FindVcf20_9:
   \   00000380   0220A0E3           MOV      R2,#+2
   \   00000384   0400A0E1           MOV      R0,R4
   \   00000388   0510A0E1           MOV      R1,R5
   \   0000038C   ........           _BLF     ??APIRound5,??APIRound5??rA
   \   00000390   0040A0E1           MOV      R4,R0
   \   00000394   0150A0E1           MOV      R5,R1
   1002                      double dT      = Temp - IP_REFTMP;
   1003                      Rho20  = APIRound5(Rho20, 4);
   \   00000398   0420A0E3           MOV      R2,#+4
   \   0000039C   0600A0E1           MOV      R0,R6
   \   000003A0   0710A0E1           MOV      R1,R7
   \   000003A4   ........           _BLF     ??APIRound5,??APIRound5??rA
   \   000003A8   0060A0E1           MOV      R6,R0
   1004                      double dT15   = IP_REFTMP - SI_REFTMP;
   1005                      double RhoRef = FindDns(Rho20, dT15, Vcf_6_and_54B_Calc);
   \   000003AC   ........           LDR      R0,??DataTable40  ;; ??Vcf_6_and_54B_Calc
   \   000003B0   0170A0E1           MOV      R7,R1
   \   000003B4   01002DE9           PUSH     {R0}
   \   000003B8   0000A0E3           MOV      R0,#+0
   \   000003BC   4014A0E3           MOV      R1,#+1073741824
   \   000003C0   501981E3           ORR      R1,R1,#0x140000
   \   000003C4   03002DE9           PUSH     {R0,R1}
   \   000003C8   0800BDE8           POP      {R3}
   \   000003CC   0720A0E1           MOV      R2,R7
   \   000003D0   0610A0E1           MOV      R1,R6
   \   000003D4   0800A0E1           MOV      R0,R8
   \   000003D8   ........           BL       ??FindDns
   1006                      RhoRef = APIRound(RhoRef, 4);
   \   000003DC   0420A0E3           MOV      R2,#+4
   \   000003E0   ........           _BLF     ??APIRound,??APIRound??rA
   \   000003E4   0060A0E1           MOV      R6,R0
   \   000003E8   0170A0E1           MOV      R7,R1
   1007                      VCF20  = Vcf_59B_and_60B_Calc(RhoRef, dT, NULL, false);
   \   000003EC   0000A0E3           MOV      R0,#+0
   \   000003F0   01002DE9           PUSH     {R0}
   \   000003F4   01002DE9           PUSH     {R0}
   \   000003F8   C014A0E3           MOV      R1,#-1073741824
   \   000003FC   D01981E3           ORR      R1,R1,#0x340000
   \   00000400   0420A0E1           MOV      R2,R4
   \   00000404   0530A0E1           MOV      R3,R5
   \   00000408   ........           _BLF     __dAdd,??__dAdd??rA
   \   0000040C   0020A0E1           MOV      R2,R0
   \   00000410   0130A0E1           MOV      R3,R1
   \   00000414   0600A0E1           MOV      R0,R6
   \   00000418   0710A0E1           MOV      R1,R7
   \   0000041C   ........           _BLF     ??Vcf_59B_and_60B_Calc,??Vcf_59B_and_60B_Calc??rA
   \   00000420   40FFFFEA           B        ??FindVcf20_5
   1008                  }
   1009                  break;
   1010              case CTY_API_60D:
   1011                  {
   1012                      Temp   = APIRound5(Temp, 2);
   \                     ??FindVcf20_10:
   \   00000424   0220A0E3           MOV      R2,#+2
   \   00000428   0400A0E1           MOV      R0,R4
   \   0000042C   0510A0E1           MOV      R1,R5
   \   00000430   ........           _BLF     ??APIRound5,??APIRound5??rA
   \   00000434   0040A0E1           MOV      R4,R0
   \   00000438   0150A0E1           MOV      R5,R1
   1013                      double dT      = Temp - IP_REFTMP;
   1014                      Rho20  = APIRound5(Rho20, 4);
   \   0000043C   0420A0E3           MOV      R2,#+4
   \   00000440   0600A0E1           MOV      R0,R6
   \   00000444   0710A0E1           MOV      R1,R7
   \   00000448   ........           _BLF     ??APIRound5,??APIRound5??rA
   \   0000044C   0060A0E1           MOV      R6,R0
   \   00000450   0170A0E1           MOV      R7,R1
   1015                      double dT15   = IP_REFTMP - SI_REFTMP;
   1016                      double RhoRef = FindDns(Rho20, dT15, Vcf_6_and_54D_Calc);
   \   00000454   00022DE9           PUSH     {R9}
   \   00000458   0000A0E3           MOV      R0,#+0
   \   0000045C   4014A0E3           MOV      R1,#+1073741824
   \   00000460   501981E3           ORR      R1,R1,#0x140000
   \   00000464   03002DE9           PUSH     {R0,R1}
   \   00000468   0800BDE8           POP      {R3}
   \   0000046C   0720A0E1           MOV      R2,R7
   \   00000470   0610A0E1           MOV      R1,R6
   \   00000474   0800A0E1           MOV      R0,R8
   \   00000478   ........           BL       ??FindDns
   1017                      RhoRef = APIRound(RhoRef, 4);
   \   0000047C   0420A0E3           MOV      R2,#+4
   \   00000480   ........           _BLF     ??APIRound,??APIRound??rA
   \   00000484   0060A0E1           MOV      R6,R0
   \   00000488   0170A0E1           MOV      R7,R1
   1018                      VCF20  = Vcf_59D_and_60D_Calc(RhoRef, dT, NULL, false);
   \   0000048C   0000A0E3           MOV      R0,#+0
   \   00000490   01002DE9           PUSH     {R0}
   \   00000494   01002DE9           PUSH     {R0}
   \   00000498   C014A0E3           MOV      R1,#-1073741824
   \   0000049C   D01981E3           ORR      R1,R1,#0x340000
   \   000004A0   0420A0E1           MOV      R2,R4
   \   000004A4   0530A0E1           MOV      R3,R5
   \   000004A8   ........           _BLF     __dAdd,??__dAdd??rA
   \   000004AC   0020A0E1           MOV      R2,R0
   \   000004B0   0130A0E1           MOV      R3,R1
   \   000004B4   0600A0E1           MOV      R0,R6
   \   000004B8   0710A0E1           MOV      R1,R7
   \   000004BC   ........           _BLF     ??Vcf_59D_and_60D_Calc,??Vcf_59D_and_60D_Calc??rA
   \   000004C0   18FFFFEA           B        ??FindVcf20_5
   1019                  }
   1020                  break;
   1021              case CTY_API_59E:
   1022              case CTY_API_60E:
   1023                  VCF20 = Ctl_LPG_Calc_60E(Rho20, Temp);
   \                     ??FindVcf20_11:
   \   000004C4   0420A0E1           MOV      R2,R4
   \   000004C8   0530A0E1           MOV      R3,R5
   \   000004CC   0600A0E1           MOV      R0,R6
   \   000004D0   0710A0E1           MOV      R1,R7
   \   000004D4   ........           _BLF     ??Ctl_LPG_Calc_60E,??Ctl_LPG_Calc_60E??rA
   1024                  break;
   1025              } // End main switch
   1026              return (VCF20);
   \                     ??FindVcf20_2:
   \   000004D8                      REQUIRE ?Subroutine49
   \   000004D8                      ;; // Fall through to label ?Subroutine49
   1027          }
   1028          
   1029          
   1030          
   1031          #undef MAX_ITERATIONS
   1032          #undef ACCURACY_LIMIT
   1033          

   \                                 In segment CODE, align 4, keep-with-next
   1034          double CargoTypeObject::Dns_at_T_to_RefDns(double RhoT, double Temp) {
   \                     ??Dns_at_T_to_RefDns:
   \   00000000   08002DE9           PUSH     {R3}
   \   00000004   F04F2DE9           PUSH     {R4-R11,LR}
   \   00000008   ........           LDR      R11,??DataTable31  ;; ??Vcf_6_and_54D_Calc
   \   0000000C   00A0A0E1           MOV      R10,R0
   \   00000010   24008DE2           ADD      R0,SP,#+36
   \   00000014   C00090E8           LDM      R0,{R6,R7}
   \   00000018   F0009AE5           LDR      R0,[R10, #+240]
   \   0000001C   0140A0E1           MOV      R4,R1
   \   00000020   0250A0E1           MOV      R5,R2
   \   00000024   080040E2           SUB      R0,R0,#+8
   \   00000028   120050E3           CMP      R0,#+18
   \   0000002C   E001008A           BHI      ??Dns_at_T_to_RefDns_2
   \   00000030   021F8FE2           ADR      R1,??Dns_at_T_to_RefDns_1
   \   00000034   8000A0E1           MOV      R0,R0, LSL #+1
   \   00000038   B01091E1           LDRH     R1,[R1, R0]
   \   0000003C   01F18FE0           ADD      PC,PC,R1, LSL #+2
   \                     ??Dns_at_T_to_RefDns_1:
   \   00000040   090025004D00       DC16     +9,+37,+77,+33
   \              2100        
   \   00000048   3C005F002100       DC16     +60,+95,+33,+60
   \              3C00        
   \   00000050   5F007B00BC00       DC16     +95,+123,+188,+234
   \              EA00        
   \   00000058   280163019D01       DC16     +296,+355,+413,+114
   \              7200        
   \   00000060   7200D601D601       DC16     +114,+470,+470,+0
   \              0000        
   1035              double RhoRef, dT = 0.0;
   1036              switch ( BaseCargoType ) {
   1037              case CTY_API_6A :
   1038                  dT = Temp - API_REFTMP;
   \                     ??Dns_at_T_to_RefDns_3:
   \   00000068   ........           LDR      R0,??DataTable37  ;; 0xffffffffc71c71c7
   \   0000006C   74179FE5           LDR      R1,??Dns_at_T_to_RefDns_4  ;; 0xffffffffc02f1c71
   \                     ??Dns_at_T_to_RefDns_5:
   \   00000070   0620A0E1           MOV      R2,R6
   \   00000074   0730A0E1           MOV      R3,R7
   \   00000078   ........           _BLF     __dAdd,??__dAdd??rA
   \   0000007C   0080A0E1           MOV      R8,R0
   \   00000080   0190A0E1           MOV      R9,R1
   1039                  RhoT  *= HydrometerCorrection(dT);
   \   00000084   ........           _BLF     __doubleToFloat,??__doubleToFloat??rA
   \   00000088   ........           _BLF     ??HydrometerCorrection,??HydrometerCorrection??rA
   \   0000008C   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   00000090   0420A0E1           MOV      R2,R4
   \   00000094   0530A0E1           MOV      R3,R5
   \   00000098   ........           _BLF     __dMul,??__dMul??rA
   \   0000009C   0040A0E1           MOV      R4,R0
   1040                  RhoRef = FindDns(RhoT, dT, Vcf_6_and_54A_Calc);
   \   000000A0   ........           LDR      R0,??DataTable39  ;; ??Vcf_6_and_54A_Calc
   \                     ??Dns_at_T_to_RefDns_6:
   \   000000A4   0120A0E1           MOV      R2,R1
   \   000000A8   01002DE9           PUSH     {R0}
   \   000000AC   00032DE9           PUSH     {R8,R9}
   \   000000B0   0410A0E1           MOV      R1,R4
   \                     ??Dns_at_T_to_RefDns_7:
   \   000000B4   0800BDE8           POP      {R3}
   \   000000B8   0A00A0E1           MOV      R0,R10
   \   000000BC   ........           BL       ??FindDns
   \                     ??Dns_at_T_to_RefDns_8:
   \   000000C0   08D08DE2           ADD      SP,SP,#+8        ;; stack cleaning
   \   000000C4   C60100EA           B        ??Dns_at_T_to_RefDns_9
   1041                  break;
   1042              case CTY_API_53A:
   1043              case CTY_API_54A:
   1044                  dT = Temp - SI_REFTMP;
   \                     ??Dns_at_T_to_RefDns_10:
   \   000000C8   0000A0E3           MOV      R0,#+0
   \   000000CC   C014A0E3           MOV      R1,#-1073741824
   \   000000D0   B81981E3           ORR      R1,R1,#0x2E0000
   \   000000D4   E5FFFFEA           B        ??Dns_at_T_to_RefDns_5
   1045                  RhoT  *= HydrometerCorrection(dT);
   1046                  RhoRef = FindDns(RhoT, dT, Vcf_6_and_54A_Calc);
   1047                  break;
   1048              case CTY_API_6B :
   1049                  dT = Temp - API_REFTMP;
   \                     ??Dns_at_T_to_RefDns_11:
   \   000000D8   ........           LDR      R0,??DataTable37  ;; 0xffffffffc71c71c7
   \   000000DC   04179FE5           LDR      R1,??Dns_at_T_to_RefDns_4  ;; 0xffffffffc02f1c71
   \   000000E0   0620A0E1           MOV      R2,R6
   \   000000E4   0730A0E1           MOV      R3,R7
   \   000000E8   ........           _BLF     __dAdd,??__dAdd??rA
   \   000000EC   0080A0E1           MOV      R8,R0
   \   000000F0   0190A0E1           MOV      R9,R1
   1050                  RhoT  *= HydrometerCorrection(dT);
   \   000000F4   ........           _BLF     __doubleToFloat,??__doubleToFloat??rA
   \   000000F8   ........           _BLF     ??HydrometerCorrection,??HydrometerCorrection??rA
   \   000000FC   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   00000100   0420A0E1           MOV      R2,R4
   \   00000104   0530A0E1           MOV      R3,R5
   \   00000108   ........           _BLF     __dMul,??__dMul??rA
   \   0000010C   0040A0E1           MOV      R4,R0
   1051                  RhoRef = FindDns(RhoT, dT, Vcf_6_and_54B_Calc);
   \   00000110   ........           LDR      R0,??DataTable40  ;; ??Vcf_6_and_54B_Calc
   \   00000114   0120A0E1           MOV      R2,R1
   \   00000118   01002DE9           PUSH     {R0}
   \   0000011C   00032DE9           PUSH     {R8,R9}
   \   00000120   0410A0E1           MOV      R1,R4
   \                     ??Dns_at_T_to_RefDns_12:
   \   00000124   0800BDE8           POP      {R3}
   \   00000128   0A00A0E1           MOV      R0,R10
   \   0000012C   ........           BL       ??FindDns
   \   00000130   E2FFFFEA           B        ??Dns_at_T_to_RefDns_8
   1052                  break;
   1053              case CTY_API_53B:
   1054              case CTY_API_54B:
   1055                  dT = Temp - SI_REFTMP;
   \                     ??Dns_at_T_to_RefDns_13:
   \   00000134   0000A0E3           MOV      R0,#+0
   \   00000138   C014A0E3           MOV      R1,#-1073741824
   \   0000013C   B81981E3           ORR      R1,R1,#0x2E0000
   \   00000140   0620A0E1           MOV      R2,R6
   \   00000144   0730A0E1           MOV      R3,R7
   \   00000148   ........           _BLF     __dAdd,??__dAdd??rA
   \   0000014C   0080A0E1           MOV      R8,R0
   \   00000150   0190A0E1           MOV      R9,R1
   1056                  RhoT  *= HydrometerCorrection(dT);
   \   00000154   ........           _BLF     __doubleToFloat,??__doubleToFloat??rA
   \   00000158   ........           _BLF     ??HydrometerCorrection,??HydrometerCorrection??rA
   \   0000015C   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   00000160   0420A0E1           MOV      R2,R4
   \   00000164   0530A0E1           MOV      R3,R5
   \   00000168   ........           _BLF     __dMul,??__dMul??rA
   \   0000016C   0040A0E1           MOV      R4,R0
   1057                  RhoRef = FindDns(RhoT, dT, Vcf_6_and_54B_Calc);
   \   00000170   ........           LDR      R0,??DataTable40  ;; ??Vcf_6_and_54B_Calc
   \   00000174   CAFFFFEA           B        ??Dns_at_T_to_RefDns_6
   1058                  break;
   1059              case CTY_API_6D :
   1060                  dT = Temp - API_REFTMP;
   \                     ??Dns_at_T_to_RefDns_14:
   \   00000178   ........           LDR      R0,??DataTable37  ;; 0xffffffffc71c71c7
   \   0000017C   64169FE5           LDR      R1,??Dns_at_T_to_RefDns_4  ;; 0xffffffffc02f1c71
   \   00000180   0620A0E1           MOV      R2,R6
   \   00000184   0730A0E1           MOV      R3,R7
   \   00000188   ........           _BLF     __dAdd,??__dAdd??rA
   \   0000018C   0080A0E1           MOV      R8,R0
   \   00000190   0190A0E1           MOV      R9,R1
   1061                  RhoT  *= HydrometerCorrection(dT);
   \   00000194   ........           _BLF     __doubleToFloat,??__doubleToFloat??rA
   \   00000198   ........           _BLF     ??HydrometerCorrection,??HydrometerCorrection??rA
   \   0000019C   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   000001A0   0420A0E1           MOV      R2,R4
   \   000001A4   0530A0E1           MOV      R3,R5
   \   000001A8   ........           _BLF     __dMul,??__dMul??rA
   1062                  RhoRef = FindDns(RhoT, dT, Vcf_6_and_54D_Calc);
   \   000001AC   00082DE9           PUSH     {R11}
   \   000001B0   00032DE9           PUSH     {R8,R9}
   \   000001B4   0120A0E1           MOV      R2,R1
   \   000001B8   0010A0E1           MOV      R1,R0
   \   000001BC   D8FFFFEA           B        ??Dns_at_T_to_RefDns_12
   1063                  break;
   1064              case CTY_API_53D:
   1065              case CTY_API_54D:
   1066                  dT = Temp - SI_REFTMP;
   \                     ??Dns_at_T_to_RefDns_15:
   \   000001C0   0000A0E3           MOV      R0,#+0
   \   000001C4   C014A0E3           MOV      R1,#-1073741824
   \   000001C8   B81981E3           ORR      R1,R1,#0x2E0000
   \   000001CC   0620A0E1           MOV      R2,R6
   \   000001D0   0730A0E1           MOV      R3,R7
   \   000001D4   ........           _BLF     __dAdd,??__dAdd??rA
   \   000001D8   0080A0E1           MOV      R8,R0
   \   000001DC   0190A0E1           MOV      R9,R1
   1067                  RhoT  *= HydrometerCorrection(dT);
   \   000001E0   ........           _BLF     __doubleToFloat,??__doubleToFloat??rA
   \   000001E4   ........           _BLF     ??HydrometerCorrection,??HydrometerCorrection??rA
   \   000001E8   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   000001EC   0420A0E1           MOV      R2,R4
   \   000001F0   0530A0E1           MOV      R3,R5
   \   000001F4   ........           _BLF     __dMul,??__dMul??rA
   1068                  RhoRef = FindDns(RhoT, dT, Vcf_6_and_54D_Calc);
   \   000001F8   00082DE9           PUSH     {R11}
   \   000001FC   00032DE9           PUSH     {R8,R9}
   \   00000200   0120A0E1           MOV      R2,R1
   \   00000204   0010A0E1           MOV      R1,R0
   \   00000208   A9FFFFEA           B        ??Dns_at_T_to_RefDns_7
   1069                  break;
   1070              case CTY_API_53E:
   1071              case CTY_API_54E:
   1072                  RhoRef = Ctl_LPG_Calc_23E(RhoT, Temp, true);
   \                     ??Dns_at_T_to_RefDns_16:
   \   0000020C   0100A0E3           MOV      R0,#+1
   \   00000210   01002DE9           PUSH     {R0}
   \   00000214   0620A0E1           MOV      R2,R6
   \   00000218   0730A0E1           MOV      R3,R7
   \   0000021C   0400A0E1           MOV      R0,R4
   \   00000220   0510A0E1           MOV      R1,R5
   \   00000224   ........           _BLF     ??Ctl_LPG_Calc_23E,??Ctl_LPG_Calc_23E??rA
   \   00000228   04D08DE2           ADD      SP,SP,#+4
   \   0000022C   6C0100EA           B        ??Dns_at_T_to_RefDns_9
   1073                  break;
   1074              case CTY_API_59A:
   1075                  {
   1076                      Temp = APIRound5(Temp, 2);
   \                     ??Dns_at_T_to_RefDns_17:
   \   00000230   0220A0E3           MOV      R2,#+2
   \   00000234   0600A0E1           MOV      R0,R6
   \   00000238   0710A0E1           MOV      R1,R7
   \   0000023C   ........           _BLF     ??APIRound5,??APIRound5??rA
   \   00000240   0060A0E1           MOV      R6,R0
   \   00000244   0170A0E1           MOV      R7,R1
   1077                      dT   = Temp - IP_REFTMP;
   \   00000248   0000A0E3           MOV      R0,#+0
   \   0000024C   C014A0E3           MOV      R1,#-1073741824
   \   00000250   D01981E3           ORR      R1,R1,#0x340000
   \   00000254   0620A0E1           MOV      R2,R6
   \   00000258   0730A0E1           MOV      R3,R7
   \   0000025C   ........           _BLF     __dAdd,??__dAdd??rA
   \   00000260   0080A0E1           MOV      R8,R0
   \   00000264   0190A0E1           MOV      R9,R1
   1078                      RhoT = APIRound5(RhoT, 4);
   \   00000268   0420A0E3           MOV      R2,#+4
   \   0000026C   0400A0E1           MOV      R0,R4
   \   00000270   0510A0E1           MOV      R1,R5
   \   00000274   ........           _BLF     ??APIRound5,??APIRound5??rA
   \   00000278   0040A0E1           MOV      R4,R0
   \   0000027C   0150A0E1           MOV      R5,R1
   1079                      RhoT = APIRound(RhoT * HydrometerCorrection(dT), 5);
   \   00000280   0800A0E1           MOV      R0,R8
   \   00000284   0910A0E1           MOV      R1,R9
   \   00000288   ........           _BLF     __doubleToFloat,??__doubleToFloat??rA
   \   0000028C   ........           _BLF     ??HydrometerCorrection,??HydrometerCorrection??rA
   \   00000290   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   00000294   0420A0E1           MOV      R2,R4
   \   00000298   0530A0E1           MOV      R3,R5
   \   0000029C   ........           _BLF     __dMul,??__dMul??rA
   \   000002A0   0520A0E3           MOV      R2,#+5
   \   000002A4   ........           _BLF     ??APIRound,??APIRound??rA
   1080                      RhoRef = FindDns(RhoT, Temp - SI_REFTMP, Vcf_6_and_54A_Calc);
   \   000002A8   ........           LDR      R2,??DataTable39  ;; ??Vcf_6_and_54A_Calc
   \   000002AC   0040A0E1           MOV      R4,R0
   \   000002B0   0150A0E1           MOV      R5,R1
   \   000002B4   02B0A0E1           MOV      R11,R2
   \   000002B8   0000A0E3           MOV      R0,#+0
   \   000002BC   C014A0E3           MOV      R1,#-1073741824
   \   000002C0   B81981E3           ORR      R1,R1,#0x2E0000
   \   000002C4   0620A0E1           MOV      R2,R6
   \   000002C8   0730A0E1           MOV      R3,R7
   \   000002CC   ........           _BLF     __dAdd,??__dAdd??rA
   \   000002D0   0B20A0E1           MOV      R2,R11
   \   000002D4   07002DE9           PUSH     {R0-R2}
   \   000002D8   0800BDE8           POP      {R3}
   \   000002DC   0520A0E1           MOV      R2,R5
   \   000002E0   0410A0E1           MOV      R1,R4
   \   000002E4   0A00A0E1           MOV      R0,R10
   \   000002E8   ........           BL       ??FindDns
   1081                      double VCF20 = Vcf_59A_and_60A_Calc(RhoRef, dT, NULL, false);
   \   000002EC   0020A0E3           MOV      R2,#+0
   \   000002F0   04002DE9           PUSH     {R2}
   \   000002F4   04002DE9           PUSH     {R2}
   \   000002F8   0820A0E1           MOV      R2,R8
   \   000002FC   0930A0E1           MOV      R3,R9
   \   00000300   ........           _BLF     ??Vcf_59A_and_60A_Calc,??Vcf_59A_and_60A_Calc??rA
   \   00000304   0060A0E1           MOV      R6,R0
   \   00000308   0170A0E1           MOV      R7,R1
   1082                      double Dns20 = APITruncate(RhoT / VCF20, 6);
   1083                      RhoRef       = Dns20;
   \   0000030C   06A0A0E3           MOV      R10,#+6
   \   00000310   0400A0E1           MOV      R0,R4
   \   00000314   0510A0E1           MOV      R1,R5
   \   00000318   0620A0E1           MOV      R2,R6
   \   0000031C   0730A0E1           MOV      R3,R7
   \   00000320   ........           _BLF     __dDiv,??__dDiv??rA
   \   00000324   0A20A0E1           MOV      R2,R10
   \                     ??Dns_at_T_to_RefDns_18:
   \   00000328   ........           _BLF     ??APITruncate,??APITruncate??rA
   \   0000032C   10D08DE2           ADD      SP,SP,#+16
   \   00000330   2B0100EA           B        ??Dns_at_T_to_RefDns_9
   1084                  }
   1085                  break;
   1086              case CTY_API_59B:
   1087                  {
   1088                      Temp = APIRound5(Temp, 2);
   1089                      dT   = Temp - IP_REFTMP;
   \                     ??Dns_at_T_to_RefDns_19:
   \   00000334   0220A0E3           MOV      R2,#+2
   \   00000338   0600A0E1           MOV      R0,R6
   \   0000033C   0710A0E1           MOV      R1,R7
   \   00000340   ........           _BLF     ??APIRound5,??APIRound5??rA
   \   00000344   0020A0E3           MOV      R2,#+0
   \   00000348   C034A0E3           MOV      R3,#-1073741824
   \   0000034C   D03983E3           ORR      R3,R3,#0x340000
   \   00000350   ........           _BLF     __dAdd,??__dAdd??rA
   \   00000354   0080A0E1           MOV      R8,R0
   \   00000358   0190A0E1           MOV      R9,R1
   1090                      RhoT = APIRound5(RhoT, 4);
   \   0000035C   0420A0E3           MOV      R2,#+4
   \   00000360   0400A0E1           MOV      R0,R4
   \   00000364   0510A0E1           MOV      R1,R5
   \   00000368   ........           _BLF     ??APIRound5,??APIRound5??rA
   \   0000036C   0040A0E1           MOV      R4,R0
   \   00000370   0150A0E1           MOV      R5,R1
   1091                      RhoT = APIRound(RhoT * HydrometerCorrection(dT), 5);
   \   00000374   0800A0E1           MOV      R0,R8
   \   00000378   0910A0E1           MOV      R1,R9
   \   0000037C   ........           _BLF     __doubleToFloat,??__doubleToFloat??rA
   \   00000380   ........           _BLF     ??HydrometerCorrection,??HydrometerCorrection??rA
   \   00000384   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   00000388   0420A0E1           MOV      R2,R4
   \   0000038C   0530A0E1           MOV      R3,R5
   \   00000390   ........           _BLF     __dMul,??__dMul??rA
   \   00000394   0520A0E3           MOV      R2,#+5
   \   00000398   ........           _BLF     ??APIRound,??APIRound??rA
   \   0000039C   0040A0E1           MOV      R4,R0
   \   000003A0   0150A0E1           MOV      R5,R1
   1092                      //RhoRef = FindDns(RhoT,Temp - SI_REFTMP,Vcf_6_and_54B_Calc);
   1093                      //double VCF20 = Vcf_59B_and_60B_Calc(RhoRef,dT,NULL,false);
   1094                      double VCF20 = Vcf_59B_and_60B_Calc(RhoT, dT, NULL, false);
   \   000003A4   0000A0E3           MOV      R0,#+0
   \   000003A8   01002DE9           PUSH     {R0}
   \   000003AC   01002DE9           PUSH     {R0}
   \   000003B0   0820A0E1           MOV      R2,R8
   \   000003B4   0930A0E1           MOV      R3,R9
   \   000003B8   0400A0E1           MOV      R0,R4
   \   000003BC   ........           _BLF     ??Vcf_59B_and_60B_Calc,??Vcf_59B_and_60B_Calc??rA
   \   000003C0   0060A0E1           MOV      R6,R0
   \   000003C4   0170A0E1           MOV      R7,R1
   1095                      double Dns20 = APITruncate(RhoT / VCF20, 6);
   1096                      RhoRef       = Dns20;
   \   000003C8   06A0A0E3           MOV      R10,#+6
   \   000003CC   0400A0E1           MOV      R0,R4
   \   000003D0   0510A0E1           MOV      R1,R5
   \   000003D4   0620A0E1           MOV      R2,R6
   \   000003D8   0730A0E1           MOV      R3,R7
   \   000003DC   ........           _BLF     __dDiv,??__dDiv??rA
   \   000003E0   0A20A0E1           MOV      R2,R10
   \   000003E4   ........           _BLF     ??APITruncate,??APITruncate??rA
   \   000003E8   34FFFFEA           B        ??Dns_at_T_to_RefDns_8
   1097                  }
   1098                  break;
   1099              case CTY_API_59D:
   1100                  {
   1101                      Temp = APIRound5(Temp, 2);
   \                     ??Dns_at_T_to_RefDns_20:
   \   000003EC   0220A0E3           MOV      R2,#+2
   \   000003F0   0600A0E1           MOV      R0,R6
   \   000003F4   0710A0E1           MOV      R1,R7
   \   000003F8   ........           _BLF     ??APIRound5,??APIRound5??rA
   \   000003FC   0060A0E1           MOV      R6,R0
   \   00000400   0170A0E1           MOV      R7,R1
   1102                      dT   = Temp - IP_REFTMP;
   \   00000404   0000A0E3           MOV      R0,#+0
   \   00000408   C014A0E3           MOV      R1,#-1073741824
   \   0000040C   D01981E3           ORR      R1,R1,#0x340000
   \   00000410   0620A0E1           MOV      R2,R6
   \   00000414   0730A0E1           MOV      R3,R7
   \   00000418   ........           _BLF     __dAdd,??__dAdd??rA
   \   0000041C   0080A0E1           MOV      R8,R0
   \   00000420   0190A0E1           MOV      R9,R1
   1103                      RhoT = APIRound5(RhoT, 4);
   \   00000424   0420A0E3           MOV      R2,#+4
   \   00000428   0400A0E1           MOV      R0,R4
   \   0000042C   0510A0E1           MOV      R1,R5
   \   00000430   ........           _BLF     ??APIRound5,??APIRound5??rA
   \   00000434   0040A0E1           MOV      R4,R0
   \   00000438   0150A0E1           MOV      R5,R1
   1104                      RhoT = APIRound(RhoT * HydrometerCorrection(dT), 5);
   \   0000043C   0800A0E1           MOV      R0,R8
   \   00000440   0910A0E1           MOV      R1,R9
   \   00000444   ........           _BLF     __doubleToFloat,??__doubleToFloat??rA
   \   00000448   ........           _BLF     ??HydrometerCorrection,??HydrometerCorrection??rA
   \   0000044C   0520A0E3           MOV      R2,#+5
   \   00000450   04002DE9           PUSH     {R2}
   \   00000454   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   00000458   0420A0E1           MOV      R2,R4
   \   0000045C   0530A0E1           MOV      R3,R5
   \   00000460   ........           _BLF     __dMul,??__dMul??rA
   \   00000464   0400BDE8           POP      {R2}
   \   00000468   ........           _BLF     ??APIRound,??APIRound??rA
   \   0000046C   0040A0E1           MOV      R4,R0
   \   00000470   0150A0E1           MOV      R5,R1
   1105                      RhoRef = FindDns(RhoT, Temp - SI_REFTMP, Vcf_6_and_54D_Calc);
   \   00000474   0000A0E3           MOV      R0,#+0
   \   00000478   C014A0E3           MOV      R1,#-1073741824
   \   0000047C   B81981E3           ORR      R1,R1,#0x2E0000
   \   00000480   0620A0E1           MOV      R2,R6
   \   00000484   0730A0E1           MOV      R3,R7
   \   00000488   ........           _BLF     __dAdd,??__dAdd??rA
   \   0000048C   0B20A0E1           MOV      R2,R11
   \   00000490   07002DE9           PUSH     {R0-R2}
   \   00000494   0800BDE8           POP      {R3}
   \   00000498   0520A0E1           MOV      R2,R5
   \   0000049C   0410A0E1           MOV      R1,R4
   \   000004A0   0A00A0E1           MOV      R0,R10
   \   000004A4   ........           BL       ??FindDns
   1106                      double VCF20 = Vcf_59D_and_60D_Calc(RhoRef, dT, NULL, false);
   \   000004A8   0020A0E3           MOV      R2,#+0
   \   000004AC   04002DE9           PUSH     {R2}
   \   000004B0   04002DE9           PUSH     {R2}
   \   000004B4   0820A0E1           MOV      R2,R8
   \   000004B8   0930A0E1           MOV      R3,R9
   \   000004BC   ........           _BLF     ??Vcf_59D_and_60D_Calc,??Vcf_59D_and_60D_Calc??rA
   \   000004C0   0060A0E1           MOV      R6,R0
   \   000004C4   0170A0E1           MOV      R7,R1
   1107                      double Dns20 = APITruncate(RhoT / VCF20, 6);
   1108                      RhoRef       = Dns20;
   \   000004C8   0400A0E1           MOV      R0,R4
   \   000004CC   0510A0E1           MOV      R1,R5
   \   000004D0   0620A0E1           MOV      R2,R6
   \   000004D4   0730A0E1           MOV      R3,R7
   \   000004D8   ........           _BLF     __dDiv,??__dDiv??rA
   \   000004DC   0620A0E3           MOV      R2,#+6
   \   000004E0   90FFFFEA           B        ??Dns_at_T_to_RefDns_18
   1109                  }
   1110                  break;
   1111              case CTY_API_60A:
   1112                  {
   1113                      Temp   = APIRound5(Temp, 2);
   \                     ??Dns_at_T_to_RefDns_21:
   \   000004E4   0220A0E3           MOV      R2,#+2
   \   000004E8   0600A0E1           MOV      R0,R6
   \   000004EC   0710A0E1           MOV      R1,R7
   \   000004F0   ........           _BLF     ??APIRound5,??APIRound5??rA
   \   000004F4   0060A0E1           MOV      R6,R0
   \   000004F8   0170A0E1           MOV      R7,R1
   1114                      dT     = Temp - IP_REFTMP;
   1115                      RhoT   = APIRound5(RhoT, 1);
   \   000004FC   0120A0E3           MOV      R2,#+1
   \   00000500   0400A0E1           MOV      R0,R4
   \   00000504   0510A0E1           MOV      R1,R5
   \   00000508   ........           _BLF     ??APIRound5,??APIRound5??rA
   \   0000050C   0040A0E1           MOV      R4,R0
   1116                      RhoRef = FindDns(RhoT, IP_REFTMP - SI_REFTMP, Vcf_6_and_54A_Calc);
   \   00000510   ........           LDR      R0,??DataTable39  ;; ??Vcf_6_and_54A_Calc
   \   00000514   0150A0E1           MOV      R5,R1
   \   00000518   01002DE9           PUSH     {R0}
   \   0000051C   0000A0E3           MOV      R0,#+0
   \   00000520   4014A0E3           MOV      R1,#+1073741824
   \   00000524   501981E3           ORR      R1,R1,#0x140000
   \   00000528   03002DE9           PUSH     {R0,R1}
   \   0000052C   0800BDE8           POP      {R3}
   \   00000530   0520A0E1           MOV      R2,R5
   \   00000534   0410A0E1           MOV      R1,R4
   \   00000538   0A00A0E1           MOV      R0,R10
   \   0000053C   ........           BL       ??FindDns
   1117                      RhoRef = APIRound(RhoRef, 1);
   \   00000540   0120A0E3           MOV      R2,#+1
   \   00000544   ........           _BLF     ??APIRound,??APIRound??rA
   \   00000548   0080A0E1           MOV      R8,R0
   \   0000054C   0190A0E1           MOV      R9,R1
   1118                      double VCF20 = Vcf_59A_and_60A_Calc(RhoRef, dT, NULL, false);
   \   00000550   0000A0E3           MOV      R0,#+0
   \   00000554   01002DE9           PUSH     {R0}
   \   00000558   01002DE9           PUSH     {R0}
   \   0000055C   C014A0E3           MOV      R1,#-1073741824
   \   00000560   D01981E3           ORR      R1,R1,#0x340000
   \   00000564   0620A0E1           MOV      R2,R6
   \   00000568   0730A0E1           MOV      R3,R7
   \   0000056C   ........           _BLF     __dAdd,??__dAdd??rA
   \   00000570   0020A0E1           MOV      R2,R0
   \   00000574   0130A0E1           MOV      R3,R1
   \   00000578   0800A0E1           MOV      R0,R8
   \   0000057C   0910A0E1           MOV      R1,R9
   \   00000580   ........           _BLF     ??Vcf_59A_and_60A_Calc,??Vcf_59A_and_60A_Calc??rA
   \   00000584   0060A0E1           MOV      R6,R0
   \   00000588   0170A0E1           MOV      R7,R1
   1119                      if ( VCF20 >= 1.0 ) {
   \   0000058C   0020A0E3           MOV      R2,#+0
   \   00000590   C035A0E3           MOV      R3,#+805306368
   \   00000594   FF3683E3           ORR      R3,R3,#0xFF00000
   \   00000598   10D08DE2           ADD      SP,SP,#+16
   \   0000059C   ........           _BLF     __dGreaterEqual,??__dGreaterEqual??rA
   \   000005A0   000050E3           CMP      R0,#+0
   1120                          VCF20 = APIRound(VCF20, 4);
   \   000005A4   0420A013           MOVNE    R2,#+4
   1121                      } else {
   1122                          VCF20 = APIRound(VCF20, 5);
   \   000005A8   0520A003           MOVEQ    R2,#+5
   \   000005AC   0600A0E1           MOV      R0,R6
   \   000005B0   0710A0E1           MOV      R1,R7
   \   000005B4   ........           _BLF     ??APIRound,??APIRound??rA
   1123                      }
   1124                      RhoRef = APIRound(RhoT * VCF20, 3);
   \   000005B8   0420A0E1           MOV      R2,R4
   \   000005BC   0530A0E1           MOV      R3,R5
   \   000005C0   ........           _BLF     __dMul,??__dMul??rA
   \   000005C4   0320A0E3           MOV      R2,#+3
   \                     ??Dns_at_T_to_RefDns_22:
   \   000005C8   ........           _BLF     ??APIRound,??APIRound??rA
   \   000005CC   840000EA           B        ??Dns_at_T_to_RefDns_9
   1125                  }
   1126                  break;
   1127              case CTY_API_60B:
   1128                  {
   1129                      Temp   = APIRound5(Temp, 2);
   \                     ??Dns_at_T_to_RefDns_23:
   \   000005D0   0220A0E3           MOV      R2,#+2
   \   000005D4   0600A0E1           MOV      R0,R6
   \   000005D8   0710A0E1           MOV      R1,R7
   \   000005DC   ........           _BLF     ??APIRound5,??APIRound5??rA
   \   000005E0   0060A0E1           MOV      R6,R0
   \   000005E4   0170A0E1           MOV      R7,R1
   1130                      dT     = Temp - IP_REFTMP;
   1131                      RhoT   = APIRound5(RhoT, 1);
   \   000005E8   0120A0E3           MOV      R2,#+1
   \   000005EC   0400A0E1           MOV      R0,R4
   \   000005F0   0510A0E1           MOV      R1,R5
   \   000005F4   ........           _BLF     ??APIRound5,??APIRound5??rA
   \   000005F8   0040A0E1           MOV      R4,R0
   1132                      RhoRef = FindDns(RhoT, IP_REFTMP - SI_REFTMP, Vcf_6_and_54B_Calc);
   \   000005FC   ........           LDR      R0,??DataTable40  ;; ??Vcf_6_and_54B_Calc
   \   00000600   0150A0E1           MOV      R5,R1
   \   00000604   01002DE9           PUSH     {R0}
   \   00000608   0000A0E3           MOV      R0,#+0
   \   0000060C   4014A0E3           MOV      R1,#+1073741824
   \   00000610   501981E3           ORR      R1,R1,#0x140000
   \   00000614   03002DE9           PUSH     {R0,R1}
   \   00000618   0800BDE8           POP      {R3}
   \   0000061C   0520A0E1           MOV      R2,R5
   \   00000620   0410A0E1           MOV      R1,R4
   \   00000624   0A00A0E1           MOV      R0,R10
   \   00000628   ........           BL       ??FindDns
   1133                      RhoRef = APIRound(RhoRef, 1);
   \   0000062C   0120A0E3           MOV      R2,#+1
   \   00000630   ........           _BLF     ??APIRound,??APIRound??rA
   \   00000634   0080A0E1           MOV      R8,R0
   \   00000638   0190A0E1           MOV      R9,R1
   1134                      double VCF20 = Vcf_59B_and_60B_Calc(RhoRef, dT, NULL, false);
   \   0000063C   0000A0E3           MOV      R0,#+0
   \   00000640   01002DE9           PUSH     {R0}
   \   00000644   01002DE9           PUSH     {R0}
   \   00000648   C014A0E3           MOV      R1,#-1073741824
   \   0000064C   D01981E3           ORR      R1,R1,#0x340000
   \   00000650   0620A0E1           MOV      R2,R6
   \   00000654   0730A0E1           MOV      R3,R7
   \   00000658   ........           _BLF     __dAdd,??__dAdd??rA
   \   0000065C   0020A0E1           MOV      R2,R0
   \   00000660   0130A0E1           MOV      R3,R1
   \   00000664   0800A0E1           MOV      R0,R8
   \   00000668   0910A0E1           MOV      R1,R9
   \   0000066C   ........           _BLF     ??Vcf_59B_and_60B_Calc,??Vcf_59B_and_60B_Calc??rA
   \   00000670   0060A0E1           MOV      R6,R0
   \   00000674   0170A0E1           MOV      R7,R1
   1135                      if ( VCF20 >= 1.0 ) {
   \   00000678   0020A0E3           MOV      R2,#+0
   \   0000067C   C035A0E3           MOV      R3,#+805306368
   \   00000680   FF3683E3           ORR      R3,R3,#0xFF00000
   \   00000684   10D08DE2           ADD      SP,SP,#+16
   \   00000688   ........           _BLF     __dGreaterEqual,??__dGreaterEqual??rA
   \   0000068C   000050E3           CMP      R0,#+0
   1136                          VCF20 = APIRound(VCF20, 4);
   \   00000690   0420A013           MOVNE    R2,#+4
   1137                      } else {
   1138                          VCF20 = APIRound(VCF20, 5);
   \   00000694   0520A003           MOVEQ    R2,#+5
   \   00000698   0600A0E1           MOV      R0,R6
   \   0000069C   0710A0E1           MOV      R1,R7
   \   000006A0   ........           _BLF     ??APIRound,??APIRound??rA
   1139                      }
   1140                      RhoRef = APIRound(RhoT * VCF20, 1);
   \   000006A4   0420A0E1           MOV      R2,R4
   \   000006A8   0530A0E1           MOV      R3,R5
   \   000006AC   ........           _BLF     __dMul,??__dMul??rA
   \   000006B0   0120A0E3           MOV      R2,#+1
   \   000006B4   C3FFFFEA           B        ??Dns_at_T_to_RefDns_22
   1141                  }
   1142                  break;
   1143              case CTY_API_60D:
   1144                  {
   1145                      Temp   = APIRound5(Temp, 2);
   \                     ??Dns_at_T_to_RefDns_24:
   \   000006B8   0220A0E3           MOV      R2,#+2
   \   000006BC   0600A0E1           MOV      R0,R6
   \   000006C0   0710A0E1           MOV      R1,R7
   \   000006C4   ........           _BLF     ??APIRound5,??APIRound5??rA
   \   000006C8   0060A0E1           MOV      R6,R0
   \   000006CC   0170A0E1           MOV      R7,R1
   1146                      dT     = Temp - IP_REFTMP;
   1147                      RhoT   = APIRound5(RhoT, 1);
   \   000006D0   0120A0E3           MOV      R2,#+1
   \   000006D4   0400A0E1           MOV      R0,R4
   \   000006D8   0510A0E1           MOV      R1,R5
   \   000006DC   ........           _BLF     ??APIRound5,??APIRound5??rA
   \   000006E0   0040A0E1           MOV      R4,R0
   \   000006E4   0150A0E1           MOV      R5,R1
   1148                      RhoRef = FindDns(RhoT, IP_REFTMP - SI_REFTMP, Vcf_6_and_54D_Calc);
   \   000006E8   00082DE9           PUSH     {R11}
   \   000006EC   0000A0E3           MOV      R0,#+0
   \   000006F0   4014A0E3           MOV      R1,#+1073741824
   \   000006F4   501981E3           ORR      R1,R1,#0x140000
   \   000006F8   03002DE9           PUSH     {R0,R1}
   \   000006FC   0800BDE8           POP      {R3}
   \   00000700   0520A0E1           MOV      R2,R5
   \   00000704   0410A0E1           MOV      R1,R4
   \   00000708   0A00A0E1           MOV      R0,R10
   \   0000070C   ........           BL       ??FindDns
   1149                      RhoRef = APIRound(RhoRef, 1);
   \   00000710   0120A0E3           MOV      R2,#+1
   \   00000714   ........           _BLF     ??APIRound,??APIRound??rA
   \   00000718   0080A0E1           MOV      R8,R0
   \   0000071C   0190A0E1           MOV      R9,R1
   1150                      double VCF20 = Vcf_59D_and_60D_Calc(RhoRef, dT, NULL, false);
   \   00000720   0000A0E3           MOV      R0,#+0
   \   00000724   01002DE9           PUSH     {R0}
   \   00000728   01002DE9           PUSH     {R0}
   \   0000072C   C014A0E3           MOV      R1,#-1073741824
   \   00000730   D01981E3           ORR      R1,R1,#0x340000
   \   00000734   0620A0E1           MOV      R2,R6
   \   00000738   0730A0E1           MOV      R3,R7
   \   0000073C   ........           _BLF     __dAdd,??__dAdd??rA
   \   00000740   0020A0E1           MOV      R2,R0
   \   00000744   0130A0E1           MOV      R3,R1
   \   00000748   0800A0E1           MOV      R0,R8
   \   0000074C   0910A0E1           MOV      R1,R9
   \   00000750   ........           _BLF     ??Vcf_59D_and_60D_Calc,??Vcf_59D_and_60D_Calc??rA
   \   00000754   0060A0E1           MOV      R6,R0
   \   00000758   0170A0E1           MOV      R7,R1
   1151                      if ( VCF20 >= 1.0 ) {
   \   0000075C   0020A0E3           MOV      R2,#+0
   \   00000760   C035A0E3           MOV      R3,#+805306368
   \   00000764   FF3683E3           ORR      R3,R3,#0xFF00000
   \   00000768   10D08DE2           ADD      SP,SP,#+16
   \   0000076C   ........           _BLF     __dGreaterEqual,??__dGreaterEqual??rA
   \   00000770   000050E3           CMP      R0,#+0
   1152                          VCF20 = APIRound(VCF20, 4);
   \   00000774   0420A013           MOVNE    R2,#+4
   1153                      } else {
   1154                          VCF20 = APIRound(VCF20, 5);
   \   00000778   0520A003           MOVEQ    R2,#+5
   \   0000077C   0600A0E1           MOV      R0,R6
   \   00000780   0710A0E1           MOV      R1,R7
   \   00000784   ........           _BLF     ??APIRound,??APIRound??rA
   1155                      }
   1156                      RhoRef = APIRound(RhoT * VCF20, 1);
   \   00000788   0420A0E1           MOV      R2,R4
   \   0000078C   0530A0E1           MOV      R3,R5
   \   00000790   ........           _BLF     __dMul,??__dMul??rA
   \   00000794   0120A0E3           MOV      R2,#+1
   \   00000798   8AFFFFEA           B        ??Dns_at_T_to_RefDns_22
   1157                  }
   1158                  break;
   1159              case CTY_API_59E:
   1160              case CTY_API_60E:
   1161                  RhoRef = Ctl_LPG_Calc_59E(RhoT, Temp);
   \                     ??Dns_at_T_to_RefDns_25:
   \   0000079C   0620A0E1           MOV      R2,R6
   \   000007A0   0730A0E1           MOV      R3,R7
   \   000007A4   0400A0E1           MOV      R0,R4
   \   000007A8   0510A0E1           MOV      R1,R5
   \   000007AC   ........           _BLF     ??Ctl_LPG_Calc_59E,??Ctl_LPG_Calc_59E??rA
   \   000007B0   0B0000EA           B        ??Dns_at_T_to_RefDns_9
   1162                  break;
   1163              default:
   1164                  dT = Temp - SI_REFTMP;
   1165                  RhoRef = RhoT + Coeff * (dT);
   \                     ??Dns_at_T_to_RefDns_2:
   \   000007B4   0000A0E3           MOV      R0,#+0
   \   000007B8   C014A0E3           MOV      R1,#-1073741824
   \   000007BC   B81981E3           ORR      R1,R1,#0x2E0000
   \   000007C0   0620A0E1           MOV      R2,R6
   \   000007C4   0730A0E1           MOV      R3,R7
   \   000007C8   ........           _BLF     __dAdd,??__dAdd??rA
   \   000007CC   D4209AE5           LDR      R2,[R10, #+212]
   \   000007D0   D8309AE5           LDR      R3,[R10, #+216]
   \   000007D4   ........           _BLF     __dMul,??__dMul??rA
   \   000007D8   0420A0E1           MOV      R2,R4
   \   000007DC   0530A0E1           MOV      R3,R5
   \   000007E0   ........           _BLF     __dAdd,??__dAdd??rA
   1166                  break;
   1167              } // End main switch
   1168              return (RhoRef);
   \                     ??Dns_at_T_to_RefDns_9:
   \   000007E4   ........           B        ?Subroutine49
   \                     ??Dns_at_T_to_RefDns_4:
   \   000007E8   711C2FC0           DC32     0xffffffffc02f1c71
   1169          }
   1170          

   \                                 In segment CODE, align 4, keep-with-next
   1171          int CargoTypeObject::OD1_Input(double Op_Dns1) {
   \                     ??OD1_Input:
   \   00000000   F0432DE9           PUSH     {R4-R9,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   1172              int Error = E_NO_ERR;
   1173          
   1174              switch ( BaseCargoType ) {
   \   00000008   F00094E5           LDR      R0,[R4, #+240]
   \   0000000C   CC8094E5           LDR      R8,[R4, #+204]
   \   00000010   D09094E5           LDR      R9,[R4, #+208]
   \   00000014   0160A0E1           MOV      R6,R1
   \   00000018   0270A0E1           MOV      R7,R2
   \   0000001C   0050A0E3           MOV      R5,#+0
   \   00000020   0010A0E1           MOV      R1,R0
   \   00000024   310051E3           CMP      R1,#+49
   \   00000028   0F00008A           BHI      ??OD1_Input_3
   \   0000002C   012F8FE2           ADR      R2,??OD1_Input_1
   \   00000030   0120D2E7           LDRB     R2,[R2, R1]
   \   00000034   02F18FE0           ADD      PC,PC,R2, LSL #+2
   \                     ??OD1_Input_1:
   \   00000038   0E2D0E0E           DC8      +14,+45,+14,+14
   \   0000003C   0E0E0E0E           DC8      +14,+14,+14,+14
   \   00000040   0C0C0C4B           DC8      +12,+12,+12,+75
   \   00000044   4B4B4F4F           DC8      +75,+75,+79,+79
   \   00000048   4F4D4D4D           DC8      +79,+77,+77,+77
   \   0000004C   4F4F4F4B           DC8      +79,+79,+79,+75
   \   00000050   4F4D4FCA           DC8      +79,+77,+79,+202
   \   00000054   CACACACA           DC8      +202,+202,+202,+202
   \   00000058   CACACACA           DC8      +202,+202,+202,+202
   \   0000005C   CACACACA           DC8      +202,+202,+202,+202
   \   00000060   CACACACA           DC8      +202,+202,+202,+202
   \   00000064   CACACACA           DC8      +202,+202,+202,+202
   \   00000068   CACA0000           DC8      +202,+202,+0,+0
   1175              default     :
   1176                  Error = E_USE_API;
   \                     ??OD1_Input_3:
   \   0000006C   0850A0E3           MOV      R5,#+8
   \   00000070   BC0000EA           B        ??OD1_Input_4
   1177                  break;
   1178              case CTY_SIMPLE_LIN:
   1179                  if ( Op_Dns1 > MAX_DENSITY || Op_Dns1 < MIN_DENSITY )       Error = E_DENSITY;
   \                     ??OD1_Input_5:
   \   00000074   ........           LDR      R2,??DataTable97  ;; 0xffffffff9999999b
   \   00000078   ........           LDR      R3,??DataTable98  ;; 0x40099999
   \   0000007C   0600A0E1           MOV      R0,R6
   \   00000080   0710A0E1           MOV      R1,R7
   \   00000084   ........           _BLF     __dGreaterEqual,??__dGreaterEqual??rA
   \   00000088   000050E3           CMP      R0,#+0
   \   0000008C   0600001A           BNE      ??OD1_Input_6
   \   00000090   ........           LDR      R2,??DataTable99  ;; 0xffffffff9999999a
   \   00000094   ........           LDR      R3,??DataTable100  ;; 0x3fd99999
   \   00000098   0600A0E1           MOV      R0,R6
   \   0000009C   0710A0E1           MOV      R1,R7
   \   000000A0   ........           _BLF     __dLess,??__dLess??rA
   \   000000A4   000050E3           CMP      R0,#+0
   \   000000A8   0100000A           BEQ      ??OD1_Input_7
   \                     ??OD1_Input_6:
   \   000000AC   0250A0E3           MOV      R5,#+2
   \   000000B0   AC0000EA           B        ??OD1_Input_4
   1180                  else {
   1181                      OD1 = Op_Dns1;
   \                     ??OD1_Input_7:
   \   000000B4   B46084E5           STR      R6,[R4, #+180]
   \   000000B8   B87084E5           STR      R7,[R4, #+184]
   1182                      OD2 = Op_Dns1;
   \   000000BC   BC6084E5           STR      R6,[R4, #+188]
   \   000000C0   C07084E5           STR      R7,[R4, #+192]
   1183                      RefTmp1 = SI_REFTMP;
   \   000000C4   4014A0E3           MOV      R1,#+1073741824
   \   000000C8   B81981E3           ORR      R1,R1,#0x2E0000
   \   000000CC   C40084E5           STR      R0,[R4, #+196]
   \   000000D0   C81084E5           STR      R1,[R4, #+200]
   1184                      RefTmp2 = 35.0;
   \   000000D4   4E1981E2           ADD      R1,R1,#+1277952
   \   000000D8   CC0084E5           STR      R0,[R4, #+204]
   \   000000DC   D01084E5           STR      R1,[R4, #+208]
   1185                      Coeff   = 0.0;
   \   000000E0   0010A0E3           MOV      R1,#+0
   \   000000E4   D40084E5           STR      R0,[R4, #+212]
   \   000000E8   D81084E5           STR      R1,[R4, #+216]
   \   000000EC   9D0000EA           B        ??OD1_Input_4
   1186                  }
   1187                  break;
   1188              case CTY_BALLAST:
   1189                  if ( Op_Dns1 > MAX_DENSITY || Op_Dns1 < MIN_DENSITY )       Error = E_DENSITY;
   1190                  else {
   1191                      OD1 = Op_Dns1;
   1192                      OD2 = Op_Dns1;
   1193                      RefTmp1 = SI_REFTMP;
   1194                      RefTmp2 = 35.0;
   1195                      Coeff   = 0.0;
   1196                  }
   1197                  //Error = E_NO_USE_SYS_BALW;
   1198                  break;
   1199              case CTY_SEA:
   1200                  if ( Op_Dns1 > MAX_DENSITY || Op_Dns1 < MIN_DENSITY )       Error = E_DENSITY;
   1201                  else {
   1202                      OD1 = Op_Dns1;
   1203                      OD2 = Op_Dns1;
   1204                      RefTmp1 = SI_REFTMP;
   1205                      RefTmp2 = 35.0;
   1206                      Coeff   = 0.0;
   1207                  }
   1208                  //Error = E_NO_USE_SYS_SEAW;
   1209                  break;
   1210              case CTY_FW:
   1211                  if ( Op_Dns1 > MAX_DENSITY || Op_Dns1 < MIN_DENSITY )       Error = E_DENSITY;
   1212                  else {
   1213                      OD1 = Op_Dns1;
   1214                      OD2 = Op_Dns1;
   1215                      RefTmp1 = SI_REFTMP;
   1216                      RefTmp2 = 35.0;
   1217                      Coeff   = 0.0;
   1218                  }
   1219                  //Error = E_NO_USE_SYS_FW;
   1220                  break;
   1221              case CTY_HFO:
   1222                  if ( Op_Dns1 > MAX_DENSITY || Op_Dns1 < MIN_DENSITY )       Error = E_DENSITY;
   1223                  else {
   1224                      OD1 = Op_Dns1;
   1225                      OD2 = Op_Dns1;
   1226                      RefTmp1 = SI_REFTMP;
   1227                      RefTmp2 = 35.0;
   1228                      Coeff   = 0.0;
   1229                  }
   1230                  //Error = E_NO_USE_SYS_HFO;
   1231                  break;
   1232              case CTY_DO:
   1233                  if ( Op_Dns1 > MAX_DENSITY || Op_Dns1 < MIN_DENSITY )       Error = E_DENSITY;
   1234                  else {
   1235                      OD1 = Op_Dns1;
   1236                      OD2 = Op_Dns1;
   1237                      RefTmp1 = SI_REFTMP;
   1238                      RefTmp2 = 35.0;
   1239                      Coeff   = 0.0;
   1240                  }
   1241                  //Error = E_NO_USE_SYS_DIESEL;
   1242                  break;
   1243              case CTY_LUB:
   1244                  if ( Op_Dns1 > MAX_DENSITY || Op_Dns1 < MIN_DENSITY )       Error = E_DENSITY;
   1245                  else {
   1246                      OD1 = Op_Dns1;
   1247                      OD2 = Op_Dns1;
   1248                      RefTmp1 = SI_REFTMP;
   1249                      RefTmp2 = 35.0;
   1250                      Coeff   = 0.0;
   1251                  }
   1252                  //Error = E_NO_USE_SYS_LUB;
   1253                  break;
   1254              case CTY_LINEAR:
   1255                  {
   1256                      double Density = Op_Dns1 - (RefTmp2 - RefTmp1) * Coeff;
   \                     ??OD1_Input_8:
   \   000000F0   C40094E5           LDR      R0,[R4, #+196]
   \   000000F4   C81094E5           LDR      R1,[R4, #+200]
   \   000000F8   0820A0E1           MOV      R2,R8
   \   000000FC   0930A0E1           MOV      R3,R9
   \   00000100   ........           _BLF     __dSub,??__dSub??rA
   \   00000104   D42094E5           LDR      R2,[R4, #+212]
   \   00000108   D83094E5           LDR      R3,[R4, #+216]
   \   0000010C   ........           _BLF     __dMul,??__dMul??rA
   \   00000110   0620A0E1           MOV      R2,R6
   \   00000114   0730A0E1           MOV      R3,R7
   \   00000118   ........           _BLF     __dAdd,??__dAdd??rA
   1257                      if ( Density > MAX_DENSITY || Density < MIN_DENSITY )       Error = E_DENSITY;
   \   0000011C   ........           LDR      R2,??DataTable97  ;; 0xffffffff9999999b
   \   00000120   ........           LDR      R3,??DataTable98  ;; 0x40099999
   \   00000124   0080A0E1           MOV      R8,R0
   \   00000128   0190A0E1           MOV      R9,R1
   \   0000012C   ........           _BLF     __dGreaterEqual,??__dGreaterEqual??rA
   \   00000130   000050E3           CMP      R0,#+0
   \   00000134   DCFFFF1A           BNE      ??OD1_Input_6
   \   00000138   ........           LDR      R2,??DataTable99  ;; 0xffffffff9999999a
   \   0000013C   ........           LDR      R3,??DataTable100  ;; 0x3fd99999
   \   00000140   0800A0E1           MOV      R0,R8
   \   00000144   0910A0E1           MOV      R1,R9
   \   00000148   ........           _BLF     __dLess,??__dLess??rA
   \   0000014C   000050E3           CMP      R0,#+0
   \   00000150   D5FFFF1A           BNE      ??OD1_Input_6
   1258                      else {
   1259                          OD2 = Density;
   \   00000154   BC8084E5           STR      R8,[R4, #+188]
   \   00000158   C09084E5           STR      R9,[R4, #+192]
   1260                          OD1 = Op_Dns1;
   \   0000015C   B46084E5           STR      R6,[R4, #+180]
   \   00000160   B87084E5           STR      R7,[R4, #+184]
   \   00000164   7F0000EA           B        ??OD1_Input_4
   1261                      }
   1262                  }
   1263                  break;
   1264              case CTY_API_53A:
   1265              case CTY_API_53B:
   1266              case CTY_API_53D:
   1267              case CTY_API_53E:
   1268                  Error = E_USE_API54_TABLE;
   \                     ??OD1_Input_9:
   \   00000168   2E50A0E3           MOV      R5,#+46
   \   0000016C   7D0000EA           B        ??OD1_Input_4
   1269                  break;
   1270              case CTY_API_59A:
   1271              case CTY_API_59B:
   1272              case CTY_API_59D:
   1273              case CTY_API_59E:
   1274                  Error = E_USE_API60_TABLE;
   \                     ??OD1_Input_10:
   \   00000170   3450A0E3           MOV      R5,#+52
   \   00000174   7B0000EA           B        ??OD1_Input_4
   1275                  break;
   1276              case CTY_API_54A:
   1277              case CTY_API_54B:
   1278              case CTY_API_54D:
   1279              case CTY_API_54E:
   1280              case CTY_API_60A:
   1281              case CTY_API_60B:
   1282              case CTY_API_60D:
   1283              case CTY_API_60E:
   1284                  switch ( BaseCargoType ) {
   \                     ??OD1_Input_11:
   \   00000178   0E0040E2           SUB      R0,R0,#+14
   \   0000017C   0C0050E3           CMP      R0,#+12
   \   00000180   4E00008A           BHI      ??OD1_Input_12
   \   00000184   011F8FE2           ADR      R1,??OD1_Input_2
   \   00000188   0010D1E7           LDRB     R1,[R1, R0]
   \   0000018C   01F18FE0           ADD      PC,PC,R1, LSL #+2
   \                     ??OD1_Input_2:
   \   00000190   030C1C4B           DC8      +3,+12,+28,+75
   \   00000194   4B4B350C           DC8      +75,+75,+53,+12
   \   00000198   1C4B2B4B           DC8      +28,+75,+43,+75
   \   0000019C   3D000000           DC8      +61,+0,+0,+0
   1285                  case CTY_API_54A:
   1286                      if ( Op_Dns1 <  A54A_MIN_DNS ) return (E_REF_DNS1_TOO_LOW);
   \                     ??OD1_Input_13:
   \   000001A0   ........           LDR      R2,??DataTable69  ;; 0xffffffffdf3b645a
   \   000001A4   ........           LDR      R3,??DataTable70  ;; 0x3fe38d4f
   \   000001A8   0600A0E1           MOV      R0,R6
   \   000001AC   0710A0E1           MOV      R1,R7
   \   000001B0   ........           _BLF     __dLess,??__dLess??rA
   \   000001B4   000050E3           CMP      R0,#+0
   \   000001B8   0800000A           BEQ      ??OD1_Input_14
   \                     ??OD1_Input_15:
   \   000001BC   1900A0E3           MOV      R0,#+25
   \   000001C0   690000EA           B        ??OD1_Input_16
   1287                      if ( Op_Dns1 >  A54A_MAX_DNS ) return (E_REF_DNS1_TOO_HIGH);
   1288                      break;
   1289                  case CTY_API_54B:
   1290                      if ( Op_Dns1 <  A54B_MIN_DNS ) return (E_REF_DNS1_TOO_LOW);
   \                     ??OD1_Input_17:
   \   000001C4   ........           LDR      R2,??DataTable71  ;; 0x4189374c
   \   000001C8   ........           LDR      R3,??DataTable72  ;; 0x3fe4e560
   \   000001CC   0600A0E1           MOV      R0,R6
   \   000001D0   0710A0E1           MOV      R1,R7
   \   000001D4   ........           _BLF     __dLess,??__dLess??rA
   \   000001D8   000050E3           CMP      R0,#+0
   \   000001DC   F6FFFF1A           BNE      ??OD1_Input_15
   \                     ??OD1_Input_14:
   \   000001E0   ........           LDR      R2,??DataTable73  ;; 0x33333334
   \   000001E4   ........           LDR      R3,??DataTable74  ;; 0x3ff13333
   \   000001E8   0600A0E1           MOV      R0,R6
   \   000001EC   0710A0E1           MOV      R1,R7
   \   000001F0   ........           _BLF     __dGreaterEqual,??__dGreaterEqual??rA
   \   000001F4   000050E3           CMP      R0,#+0
   \   000001F8   3000000A           BEQ      ??OD1_Input_12
   \                     ??OD1_Input_18:
   \   000001FC   1A00A0E3           MOV      R0,#+26
   \   00000200   590000EA           B        ??OD1_Input_16
   1291                      if ( Op_Dns1 >  A54B_MAX_DNS ) return (E_REF_DNS1_TOO_HIGH);
   1292                      break;
   1293                  case CTY_API_54D :
   1294                      if ( Op_Dns1 <  A54D_MIN_DNS ) return (E_REF_DNS1_TOO_LOW);
   \                     ??OD1_Input_19:
   \   00000204   ........           LDR      R2,??DataTable99  ;; 0xffffffff9999999a
   \   00000208   ........           LDR      R3,??DataTable76  ;; 0x3fe99999
   \   0000020C   0600A0E1           MOV      R0,R6
   \   00000210   0710A0E1           MOV      R1,R7
   \   00000214   ........           _BLF     __dLess,??__dLess??rA
   \   00000218   000050E3           CMP      R0,#+0
   \   0000021C   E6FFFF1A           BNE      ??OD1_Input_15
   1295                      if ( Op_Dns1 >  A54D_MAX_DNS ) return (E_REF_DNS1_TOO_HIGH);
   \   00000220   ........           LDR      R2,??DataTable77  ;; 0x76c8b43a
   \   00000224   ........           LDR      R3,??DataTable78  ;; 0x3ff29fbe
   \                     ??OD1_Input_20:
   \   00000228   0600A0E1           MOV      R0,R6
   \   0000022C   0710A0E1           MOV      R1,R7
   \   00000230   ........           _BLF     __dGreaterEqual,??__dGreaterEqual??rA
   \   00000234   000050E3           CMP      R0,#+0
   \   00000238   2000000A           BEQ      ??OD1_Input_12
   \   0000023C   EEFFFFEA           B        ??OD1_Input_18
   1296                      break;
   1297                  case CTY_API_54E :
   1298                      if ( Op_Dns1 <  A54E_MIN_DNS ) return (E_REF_DNS1_TOO_LOW);
   \                     ??OD1_Input_21:
   \   00000240   ........           LDR      R2,??DataTable79  ;; 0xffffffffb780346e
   \   00000244   ........           LDR      R3,??DataTable80  ;; 0x3fd68240
   \   00000248   0600A0E1           MOV      R0,R6
   \   0000024C   0710A0E1           MOV      R1,R7
   \   00000250   ........           _BLF     __dLess,??__dLess??rA
   \   00000254   000050E3           CMP      R0,#+0
   \   00000258   D7FFFF1A           BNE      ??OD1_Input_15
   1299                      if ( Op_Dns1 >  A54E_MAX_DNS ) return (E_REF_DNS1_TOO_HIGH);
   \   0000025C   ........           LDR      R2,??DataTable81  ;; 0x25460aa7
   \   00000260   ........           LDR      R3,??DataTable82  ;; 0x3fe60275
   \   00000264   EFFFFFEA           B        ??OD1_Input_20
   1300                      break;
   1301                  case CTY_API_60A:
   1302                      if ( Op_Dns1 <  A60A_MIN_DNS ) return (E_REF_DNS1_TOO_LOW);
   \                     ??OD1_Input_22:
   \   00000268   ........           LDR      R2,??DataTable83  ;; 0xffffffffb851eb85
   \   0000026C   ........           LDR      R3,??DataTable84  ;; 0x3fe3851e
   \   00000270   0600A0E1           MOV      R0,R6
   \   00000274   0710A0E1           MOV      R1,R7
   \   00000278   ........           _BLF     __dLess,??__dLess??rA
   \   0000027C   000050E3           CMP      R0,#+0
   \   00000280   D6FFFF0A           BEQ      ??OD1_Input_14
   \   00000284   CCFFFFEA           B        ??OD1_Input_15
   1303                      if ( Op_Dns1 >  A60A_MAX_DNS ) return (E_REF_DNS1_TOO_HIGH);
   1304                      break;
   1305                  case CTY_API_60B:
   1306                      if ( Op_Dns1 <  A60B_MIN_DNS ) return (E_REF_DNS1_TOO_LOW);
   1307                      if ( Op_Dns1 >  A60B_MAX_DNS ) return (E_REF_DNS1_TOO_HIGH);
   1308                      break;
   1309                  case CTY_API_60D :
   1310                      if ( Op_Dns1 <  A60D_MIN_DNS ) return (E_REF_DNS1_TOO_LOW);
   1311                      if ( Op_Dns1 >  A60D_MAX_DNS ) return (E_REF_DNS1_TOO_HIGH);
   1312                      break;
   1313                  case CTY_API_60E :
   1314                      if ( Op_Dns1 <  A60E_MIN_DNS ) return (E_REF_DNS1_TOO_LOW);
   \                     ??OD1_Input_23:
   \   00000288   ........           LDR      R2,??DataTable85  ;; 0xffffffffa3055326
   \   0000028C   ........           LDR      R3,??DataTable86  ;; 0x3fd53a92
   \   00000290   0600A0E1           MOV      R0,R6
   \   00000294   0710A0E1           MOV      R1,R7
   \   00000298   ........           _BLF     __dLess,??__dLess??rA
   \   0000029C   000050E3           CMP      R0,#+0
   \   000002A0   C5FFFF1A           BNE      ??OD1_Input_15
   1315                      if ( Op_Dns1 >  A60E_MAX_DNS ) return (E_REF_DNS1_TOO_HIGH);
   \   000002A4   ........           LDR      R2,??DataTable87  ;; 0x1b71758f
   \   000002A8   ........           LDR      R3,??DataTable88  ;; 0x3fe5e00d
   \   000002AC   0600A0E1           MOV      R0,R6
   \   000002B0   0710A0E1           MOV      R1,R7
   \   000002B4   ........           _BLF     __dGreaterEqual,??__dGreaterEqual??rA
   \   000002B8   000050E3           CMP      R0,#+0
   \   000002BC   CEFFFF1A           BNE      ??OD1_Input_18
   1316                      break;
   1317                  }
   1318                  OD1   = Op_Dns1;
   \                     ??OD1_Input_12:
   \   000002C0   B46084E5           STR      R6,[R4, #+180]
   \   000002C4   B87084E5           STR      R7,[R4, #+184]
   1319                  OD2   = Comp_Density(RefTmp2);
   \   000002C8   0920A0E1           MOV      R2,R9
   \   000002CC   0810A0E1           MOV      R1,R8
   \   000002D0   0400A0E1           MOV      R0,R4
   \   000002D4   ........           BL       ??Comp_Density
   \   000002D8   BC0084E5           STR      R0,[R4, #+188]
   \   000002DC   C01084E5           STR      R1,[R4, #+192]
   1320                  {
   1321                      double dT = RefTmp2 - RefTmp1;
   \   000002E0   CC6094E5           LDR      R6,[R4, #+204]
   \   000002E4   D07094E5           LDR      R7,[R4, #+208]
   \   000002E8   C42094E5           LDR      R2,[R4, #+196]
   \   000002EC   C83094E5           LDR      R3,[R4, #+200]
   \   000002F0   0600A0E1           MOV      R0,R6
   \   000002F4   0710A0E1           MOV      R1,R7
   \   000002F8   ........           _BLF     __dSub,??__dSub??rA
   \   000002FC   0080A0E1           MOV      R8,R0
   \   00000300   0190A0E1           MOV      R9,R1
   1322                      if ( fabs(dT) > 1.0 ) {
   \   00000304   8014C1E3           BIC      R1,R1,#0x80000000
   \   00000308   0120A0E3           MOV      R2,#+1
   \   0000030C   C035A0E3           MOV      R3,#+805306368
   \   00000310   FF3683E3           ORR      R3,R3,#0xFF00000
   \   00000314   ........           _BLF     __dGreaterEqual,??__dGreaterEqual??rA
   \   00000318   000050E3           CMP      R0,#+0
   \   0000031C   0800000A           BEQ      ??OD1_Input_24
   1323                          Coeff = -(OD2 - OD1) / dT;
   \   00000320   B40094E5           LDR      R0,[R4, #+180]
   \   00000324   B81094E5           LDR      R1,[R4, #+184]
   \   00000328   BC2094E5           LDR      R2,[R4, #+188]
   \   0000032C   C03094E5           LDR      R3,[R4, #+192]
   \   00000330   ........           _BLF     __dSub,??__dSub??rA
   \   00000334   0820A0E1           MOV      R2,R8
   \   00000338   0930A0E1           MOV      R3,R9
   \   0000033C   ........           _BLF     __dDiv,??__dDiv??rA
   \   00000340   000000EA           B        ??OD1_Input_25
   1324                      } else {
   1325                          Coeff = 0.0;
   \                     ??OD1_Input_24:
   \   00000344   0010A0E3           MOV      R1,#+0
   \                     ??OD1_Input_25:
   \   00000348   D40084E5           STR      R0,[R4, #+212]
   \   0000034C   D81084E5           STR      R1,[R4, #+216]
   1326                      }
   1327                  }
   1328                  ActualTemp = RefTmp2;
   \   00000350   0600A0E1           MOV      R0,R6
   \   00000354   0710A0E1           MOV      R1,R7
   \   00000358   ........           _BLF     __doubleToFloat,??__doubleToFloat??rA
   \   0000035C   AC0084E5           STR      R0,[R4, #+172]
   \   00000360   000000EA           B        ??OD1_Input_4
   1329                  break;
   1330              case CTY_GAS_AMMONIA      :
   1331              case CTY_GAS_BUTADIEN     :
   1332              case CTY_GAS_ISOBUTYLENE  :
   1333              case CTY_GAS_PROPYLENE    :
   1334              case CTY_GAS_PROPENOXIDE  :
   1335              case CTY_GAS_VYNILCHLORIDE:
   1336              case CTY_GAS_BUTANE         :
   1337              case CTY_GAS_PROPANE        :
   1338              case CTY_GAS_N_BUTANE       :
   1339              case CTY_GAS_ISO_BUTANE     :
   1340              case CTY_GAS_1_BUTANE       :
   1341              case CTY_GAS_CRUDE_C4       :
   1342              case CTY_GAS_RAFFINATE_1    :
   1343              case CTY_GAS_RAFFINATE_2    :
   1344              case CTY_GAS_PROPYLENE_REF  :
   1345              case CTY_GAS_GASOLIE        :
   1346              case CTY_GAS_FLEXICOKER_LPG :
   1347              case CTY_GAS_SULPHUR_1      :
   1348              case CTY_GAS_SULPHUR_2      :
   1349              case CTY_GAS_SULPHUR_3      :
   1350              case CTY_GAS_SULPHUR_4      :
   1351              case CTY_GAS_SULPHUR_5      :
   1352              case CTY_GAS_SULPHUR_6      :
   1353                  Error = E_NO_INPUT_PERMISSION;
   \                     ??OD1_Input_26:
   \   00000364   2A50A0E3           MOV      R5,#+42
   1354                  break;
   1355              }
   1356              return (Error);
   \                     ??OD1_Input_4:
   \   00000368   0500A0E1           MOV      R0,R5
   \                     ??OD1_Input_16:
   \   0000036C   ........           B        ?Subroutine52
   1357          }
   1358          
   1359          

   \                                 In segment CODE, align 4, keep-with-next
   1360          int CargoTypeObject::OD2_Input(double Op_Dns2) {
   \                     ??OD2_Input:
   \   00000000   F0432DE9           PUSH     {R4-R9,LR}
   \   00000004   0070A0E1           MOV      R7,R0
   1361              int Error = false;
   1362              switch ( BaseCargoType ) {
   \   00000008   F00097E5           LDR      R0,[R7, #+240]
   \   0000000C   CC8097E5           LDR      R8,[R7, #+204]
   \   00000010   D09097E5           LDR      R9,[R7, #+208]
   \   00000014   0140A0E1           MOV      R4,R1
   \   00000018   0250A0E1           MOV      R5,R2
   \   0000001C   0060A0E3           MOV      R6,#+0
   \   00000020   0010A0E1           MOV      R1,R0
   \   00000024   310051E3           CMP      R1,#+49
   \   00000028   0F00008A           BHI      ??OD2_Input_3
   \   0000002C   012F8FE2           ADR      R2,??OD2_Input_1
   \   00000030   0120D2E7           LDRB     R2,[R2, R1]
   \   00000034   02F18FE0           ADD      PC,PC,R2, LSL #+2
   \                     ??OD2_Input_1:
   \   00000038   0E9A1016           DC8      +14,+154,+16,+22
   \   0000003C   181A1412           DC8      +24,+26,+20,+18
   \   00000040   0C0C0C1C           DC8      +12,+12,+12,+28
   \   00000044   1C1C0E0E           DC8      +28,+28,+14,+14
   \   00000048   0E1C1C1C           DC8      +14,+28,+28,+28
   \   0000004C   0E0E0E1C           DC8      +14,+14,+14,+28
   \   00000050   0E1C0EBE           DC8      +14,+28,+14,+190
   \   00000054   BEBEBEBE           DC8      +190,+190,+190,+190
   \   00000058   BEBEBEBE           DC8      +190,+190,+190,+190
   \   0000005C   BEBEBEBE           DC8      +190,+190,+190,+190
   \   00000060   BEBEBEBE           DC8      +190,+190,+190,+190
   \   00000064   BEBEBEBE           DC8      +190,+190,+190,+190
   \   00000068   BEBE0000           DC8      +190,+190,+0,+0
   1363              default     :
   1364                  Error = E_USE_API;
   \                     ??OD2_Input_3:
   \   0000006C   0860A0E3           MOV      R6,#+8
   \   00000070   B00000EA           B        ??OD2_Input_4
   1365                  break;
   1366              case CTY_SIMPLE_LIN:
   1367                  Error = E_USE_OD1;
   \                     ??OD2_Input_5:
   \   00000074   1460A0E3           MOV      R6,#+20
   \   00000078   AE0000EA           B        ??OD2_Input_4
   1368                  break;
   1369              case CTY_BALLAST:
   1370                  Error = E_NO_USE_SYS_BALW;
   \                     ??OD2_Input_6:
   \   0000007C   1260A0E3           MOV      R6,#+18
   \   00000080   AC0000EA           B        ??OD2_Input_4
   1371                  break;
   1372              case CTY_SEA:
   1373                  Error = E_NO_USE_SYS_SEAW;
   \                     ??OD2_Input_7:
   \   00000084   1160A0E3           MOV      R6,#+17
   \   00000088   AA0000EA           B        ??OD2_Input_4
   1374                  break;
   1375              case CTY_FW:
   1376                  Error = E_NO_USE_SYS_FW;
   \                     ??OD2_Input_8:
   \   0000008C   2260A0E3           MOV      R6,#+34
   \   00000090   A80000EA           B        ??OD2_Input_4
   1377                  break;
   1378              case CTY_HFO:
   1379                  Error = E_NO_USE_SYS_HFO;
   \                     ??OD2_Input_9:
   \   00000094   2360A0E3           MOV      R6,#+35
   \   00000098   A60000EA           B        ??OD2_Input_4
   1380                  break;
   1381              case CTY_DO:
   1382                  Error = E_NO_USE_SYS_DIESEL;
   \                     ??OD2_Input_10:
   \   0000009C   2460A0E3           MOV      R6,#+36
   \   000000A0   A40000EA           B        ??OD2_Input_4
   1383                  break;
   1384              case CTY_LUB:
   1385                  Error = E_NO_USE_SYS_LUB;
   \                     ??OD2_Input_11:
   \   000000A4   2560A0E3           MOV      R6,#+37
   \   000000A8   A20000EA           B        ??OD2_Input_4
   1386                  break;
   1387              case CTY_API_53A:
   1388              case CTY_API_53B:
   1389              case CTY_API_53D:
   1390              case CTY_API_53E:
   1391              case CTY_API_59A:
   1392              case CTY_API_59B:
   1393              case CTY_API_59D:
   1394              case CTY_API_59E:
   1395                  switch ( BaseCargoType ) {
   \                     ??OD2_Input_12:
   \   000000AC   0B0040E2           SUB      R0,R0,#+11
   \   000000B0   0E0050E3           CMP      R0,#+14
   \   000000B4   4E00008A           BHI      ??OD2_Input_13
   \   000000B8   011F8FE2           ADR      R1,??OD2_Input_2
   \   000000BC   0010D1E7           LDRB     R1,[R1, R0]
   \   000000C0   01F18FE0           ADD      PC,PC,R1, LSL #+2
   \                     ??OD2_Input_2:
   \   000000C4   030C1C4B           DC8      +3,+12,+28,+75
   \   000000C8   4B4B350C           DC8      +75,+75,+53,+12
   \   000000CC   1C4B4B4B           DC8      +28,+75,+75,+75
   \   000000D0   2B4B3D00           DC8      +43,+75,+61,+0
   1396                  case CTY_API_53A:
   1397                      if ( Op_Dns2 <  A53A_MIN_DNS ) return (E_REF_DNS2_TOO_LOW);
   \                     ??OD2_Input_14:
   \   000000D4   ........           LDR      R2,??DataTable69  ;; 0xffffffffdf3b645a
   \   000000D8   ........           LDR      R3,??DataTable70  ;; 0x3fe38d4f
   \   000000DC   0400A0E1           MOV      R0,R4
   \   000000E0   0510A0E1           MOV      R1,R5
   \   000000E4   ........           _BLF     __dLess,??__dLess??rA
   \   000000E8   000050E3           CMP      R0,#+0
   \   000000EC   0800000A           BEQ      ??OD2_Input_15
   \                     ??OD2_Input_16:
   \   000000F0   1B00A0E3           MOV      R0,#+27
   \   000000F4   900000EA           B        ??OD2_Input_17
   1398                      if ( Op_Dns2 >  A53A_MAX_DNS ) return (E_REF_DNS2_TOO_HIGH);
   1399                      break;
   1400                  case CTY_API_53B:
   1401                      if ( Op_Dns2 <  A53B_MIN_DNS ) return (E_REF_DNS2_TOO_LOW);
   \                     ??OD2_Input_18:
   \   000000F8   ........           LDR      R2,??DataTable71  ;; 0x4189374c
   \   000000FC   ........           LDR      R3,??DataTable72  ;; 0x3fe4e560
   \   00000100   0400A0E1           MOV      R0,R4
   \   00000104   0510A0E1           MOV      R1,R5
   \   00000108   ........           _BLF     __dLess,??__dLess??rA
   \   0000010C   000050E3           CMP      R0,#+0
   \   00000110   F6FFFF1A           BNE      ??OD2_Input_16
   \                     ??OD2_Input_15:
   \   00000114   ........           LDR      R2,??DataTable73  ;; 0x33333334
   \   00000118   ........           LDR      R3,??DataTable74  ;; 0x3ff13333
   \   0000011C   0400A0E1           MOV      R0,R4
   \   00000120   0510A0E1           MOV      R1,R5
   \   00000124   ........           _BLF     __dGreaterEqual,??__dGreaterEqual??rA
   \   00000128   000050E3           CMP      R0,#+0
   \   0000012C   3000000A           BEQ      ??OD2_Input_13
   \                     ??OD2_Input_19:
   \   00000130   1C00A0E3           MOV      R0,#+28
   \   00000134   800000EA           B        ??OD2_Input_17
   1402                      if ( Op_Dns2 >  A53B_MAX_DNS ) return (E_REF_DNS2_TOO_HIGH);
   1403                      break;
   1404                  case CTY_API_53D:
   1405                      if ( Op_Dns2 <  A53D_MIN_DNS ) return (E_REF_DNS2_TOO_LOW);
   \                     ??OD2_Input_20:
   \   00000138   ........           LDR      R2,??DataTable99  ;; 0xffffffff9999999a
   \   0000013C   ........           LDR      R3,??DataTable76  ;; 0x3fe99999
   \   00000140   0400A0E1           MOV      R0,R4
   \   00000144   0510A0E1           MOV      R1,R5
   \   00000148   ........           _BLF     __dLess,??__dLess??rA
   \   0000014C   000050E3           CMP      R0,#+0
   \   00000150   E6FFFF1A           BNE      ??OD2_Input_16
   1406                      if ( Op_Dns2 >  A53D_MAX_DNS ) return (E_REF_DNS2_TOO_HIGH);
   \   00000154   ........           LDR      R2,??DataTable77  ;; 0x76c8b43a
   \   00000158   ........           LDR      R3,??DataTable78  ;; 0x3ff29fbe
   \                     ??OD2_Input_21:
   \   0000015C   0400A0E1           MOV      R0,R4
   \   00000160   0510A0E1           MOV      R1,R5
   \   00000164   ........           _BLF     __dGreaterEqual,??__dGreaterEqual??rA
   \   00000168   000050E3           CMP      R0,#+0
   \   0000016C   2000000A           BEQ      ??OD2_Input_13
   \   00000170   EEFFFFEA           B        ??OD2_Input_19
   1407                      break;
   1408                  case CTY_API_53E:
   1409                      if ( Op_Dns2 <  A53E_MIN_DNS ) return (E_REF_DNS2_TOO_LOW);
   \                     ??OD2_Input_22:
   \   00000174   ........           LDR      R2,??DataTable79  ;; 0xffffffffb780346e
   \   00000178   ........           LDR      R3,??DataTable80  ;; 0x3fd68240
   \   0000017C   0400A0E1           MOV      R0,R4
   \   00000180   0510A0E1           MOV      R1,R5
   \   00000184   ........           _BLF     __dLess,??__dLess??rA
   \   00000188   000050E3           CMP      R0,#+0
   \   0000018C   D7FFFF1A           BNE      ??OD2_Input_16
   1410                      if ( Op_Dns2 >  A53E_MAX_DNS ) return (E_REF_DNS2_TOO_HIGH);
   \   00000190   ........           LDR      R2,??DataTable81  ;; 0x25460aa7
   \   00000194   ........           LDR      R3,??DataTable82  ;; 0x3fe60275
   \   00000198   EFFFFFEA           B        ??OD2_Input_21
   1411                      break;
   1412                  case CTY_API_59A:
   1413                      if ( Op_Dns2 <  A59A_MIN_DNS ) return (E_REF_DNS2_TOO_LOW);
   \                     ??OD2_Input_23:
   \   0000019C   ........           LDR      R2,??DataTable83  ;; 0xffffffffb851eb85
   \   000001A0   ........           LDR      R3,??DataTable84  ;; 0x3fe3851e
   \   000001A4   0400A0E1           MOV      R0,R4
   \   000001A8   0510A0E1           MOV      R1,R5
   \   000001AC   ........           _BLF     __dLess,??__dLess??rA
   \   000001B0   000050E3           CMP      R0,#+0
   \   000001B4   D6FFFF0A           BEQ      ??OD2_Input_15
   \   000001B8   CCFFFFEA           B        ??OD2_Input_16
   1414                      if ( Op_Dns2 >  A59A_MAX_DNS ) return (E_REF_DNS2_TOO_HIGH);
   1415                      break;
   1416                  case CTY_API_59B:
   1417                      if ( Op_Dns2 <  A59B_MIN_DNS ) return (E_REF_DNS2_TOO_LOW);
   1418                      if ( Op_Dns2 >  A59B_MAX_DNS ) return (E_REF_DNS2_TOO_HIGH);
   1419                      break;
   1420                  case CTY_API_59D:
   1421                      if ( Op_Dns2 <  A59D_MIN_DNS ) return (E_REF_DNS2_TOO_LOW);
   1422                      if ( Op_Dns2 >  A59D_MAX_DNS ) return (E_REF_DNS2_TOO_HIGH);
   1423                      break;
   1424                  case CTY_API_59E:
   1425                      if ( Op_Dns2 <  A59E_MIN_DNS ) return (E_REF_DNS2_TOO_LOW);
   \                     ??OD2_Input_24:
   \   000001BC   ........           LDR      R2,??DataTable85  ;; 0xffffffffa3055326
   \   000001C0   ........           LDR      R3,??DataTable86  ;; 0x3fd53a92
   \   000001C4   0400A0E1           MOV      R0,R4
   \   000001C8   0510A0E1           MOV      R1,R5
   \   000001CC   ........           _BLF     __dLess,??__dLess??rA
   \   000001D0   000050E3           CMP      R0,#+0
   \   000001D4   C5FFFF1A           BNE      ??OD2_Input_16
   1426                      if ( Op_Dns2 >  A59E_MAX_DNS ) return (E_REF_DNS2_TOO_HIGH);
   \   000001D8   ........           LDR      R2,??DataTable87  ;; 0x1b71758f
   \   000001DC   ........           LDR      R3,??DataTable88  ;; 0x3fe5e00d
   \   000001E0   0400A0E1           MOV      R0,R4
   \   000001E4   0510A0E1           MOV      R1,R5
   \   000001E8   ........           _BLF     __dGreaterEqual,??__dGreaterEqual??rA
   \   000001EC   000050E3           CMP      R0,#+0
   \   000001F0   CEFFFF1A           BNE      ??OD2_Input_19
   1427                      break;
   1428                  }
   1429                  OD1   = Dns_at_T_to_RefDns(Op_Dns2, RefTmp2);
   \                     ??OD2_Input_13:
   \   000001F4   00032DE9           PUSH     {R8,R9}
   \   000001F8   0800BDE8           POP      {R3}
   \   000001FC   0520A0E1           MOV      R2,R5
   \   00000200   0410A0E1           MOV      R1,R4
   \   00000204   0700A0E1           MOV      R0,R7
   \   00000208   ........           BL       ??Dns_at_T_to_RefDns
   \   0000020C   B40087E5           STR      R0,[R7, #+180]
   \   00000210   B81087E5           STR      R1,[R7, #+184]
   1430                  OD2   = Op_Dns2;
   \   00000214   BC4087E5           STR      R4,[R7, #+188]
   \   00000218   C05087E5           STR      R5,[R7, #+192]
   1431                  {
   1432                      double dT = RefTmp2 - RefTmp1;
   \   0000021C   CC4097E5           LDR      R4,[R7, #+204]
   \   00000220   D05097E5           LDR      R5,[R7, #+208]
   \   00000224   C42097E5           LDR      R2,[R7, #+196]
   \   00000228   C83097E5           LDR      R3,[R7, #+200]
   \   0000022C   0400A0E1           MOV      R0,R4
   \   00000230   0510A0E1           MOV      R1,R5
   \   00000234   ........           _BLF     __dSub,??__dSub??rA
   \   00000238   0080A0E1           MOV      R8,R0
   \   0000023C   0190A0E1           MOV      R9,R1
   1433                      if ( fabs(dT) > 1.0 ) {
   \   00000240   8014C1E3           BIC      R1,R1,#0x80000000
   \   00000244   0120A0E3           MOV      R2,#+1
   \   00000248   C035A0E3           MOV      R3,#+805306368
   \   0000024C   FF3683E3           ORR      R3,R3,#0xFF00000
   \   00000250   04D08DE2           ADD      SP,SP,#+4
   \   00000254   ........           _BLF     __dGreaterEqual,??__dGreaterEqual??rA
   \   00000258   000050E3           CMP      R0,#+0
   \   0000025C   0800000A           BEQ      ??OD2_Input_25
   1434                          Coeff = -(OD2 - OD1) / dT;
   \   00000260   B40097E5           LDR      R0,[R7, #+180]
   \   00000264   B81097E5           LDR      R1,[R7, #+184]
   \   00000268   BC2097E5           LDR      R2,[R7, #+188]
   \   0000026C   C03097E5           LDR      R3,[R7, #+192]
   \   00000270   ........           _BLF     __dSub,??__dSub??rA
   \   00000274   0820A0E1           MOV      R2,R8
   \   00000278   0930A0E1           MOV      R3,R9
   \   0000027C   ........           _BLF     __dDiv,??__dDiv??rA
   \   00000280   000000EA           B        ??OD2_Input_26
   1435                      } else {
   1436                          Coeff = 0.0;
   \                     ??OD2_Input_25:
   \   00000284   0010A0E3           MOV      R1,#+0
   \                     ??OD2_Input_26:
   \   00000288   D40087E5           STR      R0,[R7, #+212]
   \   0000028C   D81087E5           STR      R1,[R7, #+216]
   1437                      }
   1438                  }
   1439                  ActualTemp = RefTmp2;
   \   00000290   0400A0E1           MOV      R0,R4
   \   00000294   0510A0E1           MOV      R1,R5
   \   00000298   ........           _BLF     __doubleToFloat,??__doubleToFloat??rA
   \   0000029C   AC0087E5           STR      R0,[R7, #+172]
   \   000002A0   240000EA           B        ??OD2_Input_4
   1440                  break;
   1441              case CTY_API_54A:
   1442              case CTY_API_54B:
   1443              case CTY_API_54D:
   1444              case CTY_API_54E:
   1445              case CTY_API_60A:
   1446              case CTY_API_60B:
   1447              case CTY_API_60D:
   1448              case CTY_API_60E:
   1449                  Error = E_USE_OD1;
   1450                  break;
   1451              case CTY_LINEAR:
   1452                  {
   1453                      double dT = RefTmp2 - RefTmp1;
   \                     ??OD2_Input_27:
   \   000002A4   C42097E5           LDR      R2,[R7, #+196]
   \   000002A8   C83097E5           LDR      R3,[R7, #+200]
   \   000002AC   0800A0E1           MOV      R0,R8
   \   000002B0   0910A0E1           MOV      R1,R9
   \   000002B4   ........           _BLF     __dSub,??__dSub??rA
   \   000002B8   0080A0E1           MOV      R8,R0
   \   000002BC   0190A0E1           MOV      R9,R1
   1454                      if ( fabs(dT) < 1.0 )       return (E_REFTMP);
   \   000002C0   8014C1E3           BIC      R1,R1,#0x80000000
   \   000002C4   0020A0E3           MOV      R2,#+0
   \   000002C8   C035A0E3           MOV      R3,#+805306368
   \   000002CC   FF3683E3           ORR      R3,R3,#0xFF00000
   \   000002D0   ........           _BLF     __dLess,??__dLess??rA
   \   000002D4   000050E3           CMP      R0,#+0
   \   000002D8   0300A013           MOVNE    R0,#+3
   \   000002DC   1600001A           BNE      ??OD2_Input_17
   1455                      double Cx = (OD1 - Op_Dns2) / dT;
   \   000002E0   B40097E5           LDR      R0,[R7, #+180]
   \   000002E4   B81097E5           LDR      R1,[R7, #+184]
   \   000002E8   0420A0E1           MOV      R2,R4
   \   000002EC   0530A0E1           MOV      R3,R5
   \   000002F0   ........           _BLF     __dSub,??__dSub??rA
   \   000002F4   0820A0E1           MOV      R2,R8
   \   000002F8   0930A0E1           MOV      R3,R9
   \   000002FC   ........           _BLF     __dDiv,??__dDiv??rA
   1456                      if ( fabs(Cx) > 0.01 ) Error = E_COEFF;
   \   00000300   ........           LDR      R2,??DataTable95  ;; 0x47ae147c
   \   00000304   ........           LDR      R3,??DataTable96  ;; 0x3f847ae1
   \   00000308   0080A0E1           MOV      R8,R0
   \   0000030C   0190A0E1           MOV      R9,R1
   \   00000310   8014C1E3           BIC      R1,R1,#0x80000000
   \   00000314   ........           _BLF     __dGreaterEqual,??__dGreaterEqual??rA
   \   00000318   000050E3           CMP      R0,#+0
   \   0000031C   D4808705           STREQ    R8,[R7, #+212]
   \   00000320   D8908705           STREQ    R9,[R7, #+216]
   \   00000324   BC408705           STREQ    R4,[R7, #+188]
   \   00000328   C0508705           STREQ    R5,[R7, #+192]
   \   0000032C   0560A013           MOVNE    R6,#+5
   \   00000330   000000EA           B        ??OD2_Input_4
   1457                      else {
   1458                          Coeff = Cx;
   1459                          OD2   = Op_Dns2;
   1460                      }
   1461                  }
   1462                  break;
   1463              case CTY_GAS_AMMONIA      :
   1464              case CTY_GAS_BUTADIEN     :
   1465              case CTY_GAS_ISOBUTYLENE  :
   1466              case CTY_GAS_PROPYLENE    :
   1467              case CTY_GAS_PROPENOXIDE  :
   1468              case CTY_GAS_VYNILCHLORIDE:
   1469              case CTY_GAS_BUTANE         :
   1470              case CTY_GAS_PROPANE        :
   1471              case CTY_GAS_N_BUTANE       :
   1472              case CTY_GAS_ISO_BUTANE     :
   1473              case CTY_GAS_1_BUTANE       :
   1474              case CTY_GAS_CRUDE_C4       :
   1475              case CTY_GAS_RAFFINATE_1    :
   1476              case CTY_GAS_RAFFINATE_2    :
   1477              case CTY_GAS_PROPYLENE_REF  :
   1478              case CTY_GAS_GASOLIE        :
   1479              case CTY_GAS_FLEXICOKER_LPG :
   1480              case CTY_GAS_SULPHUR_1      :
   1481              case CTY_GAS_SULPHUR_2      :
   1482              case CTY_GAS_SULPHUR_3      :
   1483              case CTY_GAS_SULPHUR_4      :
   1484              case CTY_GAS_SULPHUR_5      :
   1485              case CTY_GAS_SULPHUR_6      :
   1486                  Error = E_NO_INPUT_PERMISSION;
   \                     ??OD2_Input_28:
   \   00000334   2A60A0E3           MOV      R6,#+42
   1487                  break;
   1488              }
   1489              return (Error);
   \                     ??OD2_Input_4:
   \   00000338   0600A0E1           MOV      R0,R6
   \                     ??OD2_Input_17:
   \   0000033C   ........           B        ?Subroutine52
   1490          }
   1491          

   \                                 In segment CODE, align 4, keep-with-next
   1492          int CargoTypeObject::RefTmp1_Input(double T1) {
   \                     ??RefTmp1_Input:
   \   00000000   F0432DE9           PUSH     {R4-R9,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   1493              int Error = false;
   1494              switch ( BaseCargoType ) {
   \   00000008   F00094E5           LDR      R0,[R4, #+240]
   \   0000000C   0180A0E1           MOV      R8,R1
   \   00000010   0290A0E1           MOV      R9,R2
   \   00000014   0050A0E3           MOV      R5,#+0
   \   00000018   000050E3           CMP      R0,#+0
   \   0000001C   3500000A           BEQ      ??RefTmp1_Input_1
   \   00000020   010050E2           SUBS     R0,R0,#+1
   \   00000024   0F00000A           BEQ      ??RefTmp1_Input_2
   \   00000028   010050E2           SUBS     R0,R0,#+1
   \   0000002C   3300000A           BEQ      ??RefTmp1_Input_3
   \   00000030   010050E2           SUBS     R0,R0,#+1
   \   00000034   3700000A           BEQ      ??RefTmp1_Input_4
   \   00000038   010050E2           SUBS     R0,R0,#+1
   \   0000003C   3700000A           BEQ      ??RefTmp1_Input_5
   \   00000040   010050E2           SUBS     R0,R0,#+1
   \   00000044   3700000A           BEQ      ??RefTmp1_Input_6
   \   00000048   010050E2           SUBS     R0,R0,#+1
   \   0000004C   2F00000A           BEQ      ??RefTmp1_Input_7
   \   00000050   010050E2           SUBS     R0,R0,#+1
   \   00000054   2B00000A           BEQ      ??RefTmp1_Input_8
   \   00000058   040040E2           SUB      R0,R0,#+4
   \   0000005C   260050E3           CMP      R0,#+38
   \   00000060   2400009A           BLS      ??RefTmp1_Input_1
   \   00000064   310000EA           B        ??RefTmp1_Input_9
   1495              case CTY_LINEAR:
   1496                  {
   1497                      double Density = OD1 - Coeff * (RefTmp2 - T1);
   \                     ??RefTmp1_Input_2:
   \   00000068   CC2094E5           LDR      R2,[R4, #+204]
   \   0000006C   D03094E5           LDR      R3,[R4, #+208]
   \   00000070   0800A0E1           MOV      R0,R8
   \   00000074   0910A0E1           MOV      R1,R9
   \   00000078   ........           _BLF     __dSub,??__dSub??rA
   \   0000007C   D42094E5           LDR      R2,[R4, #+212]
   \   00000080   D83094E5           LDR      R3,[R4, #+216]
   \   00000084   ........           _BLF     __dMul,??__dMul??rA
   \   00000088   B42094E5           LDR      R2,[R4, #+180]
   \   0000008C   B83094E5           LDR      R3,[R4, #+184]
   \   00000090   ........           _BLF     __dAdd,??__dAdd??rA
   1498                      if ( (Density > MAX_DENSITY) || (Density < MIN_DENSITY) )       Error = E_COEFF;
   \   00000094   ........           LDR      R2,??DataTable97  ;; 0xffffffff9999999b
   \   00000098   ........           LDR      R3,??DataTable98  ;; 0x40099999
   \   0000009C   0060A0E1           MOV      R6,R0
   \   000000A0   0170A0E1           MOV      R7,R1
   \   000000A4   ........           _BLF     __dGreaterEqual,??__dGreaterEqual??rA
   \   000000A8   000050E3           CMP      R0,#+0
   \   000000AC   0600001A           BNE      ??RefTmp1_Input_10
   \   000000B0   ........           LDR      R2,??DataTable99  ;; 0xffffffff9999999a
   \   000000B4   ........           LDR      R3,??DataTable100  ;; 0x3fd99999
   \   000000B8   0600A0E1           MOV      R0,R6
   \   000000BC   0710A0E1           MOV      R1,R7
   \   000000C0   ........           _BLF     __dLess,??__dLess??rA
   \   000000C4   000050E3           CMP      R0,#+0
   \   000000C8   0100000A           BEQ      ??RefTmp1_Input_11
   \                     ??RefTmp1_Input_10:
   \   000000CC   0550A0E3           MOV      R5,#+5
   \   000000D0   030000EA           B        ??RefTmp1_Input_12
   1499                      else {
   1500                          OD2      = Density;
   \                     ??RefTmp1_Input_11:
   \   000000D4   BC6084E5           STR      R6,[R4, #+188]
   \   000000D8   C07084E5           STR      R7,[R4, #+192]
   1501                          RefTmp1  = T1;
   \   000000DC   C48084E5           STR      R8,[R4, #+196]
   \   000000E0   C89084E5           STR      R9,[R4, #+200]
   1502                      }
   1503                  }
   1504                  ActualTemp = RefTmp2;
   \                     ??RefTmp1_Input_12:
   \   000000E4   CC0094E5           LDR      R0,[R4, #+204]
   \   000000E8   D01094E5           LDR      R1,[R4, #+208]
   \   000000EC   ........           _BLF     __doubleToFloat,??__doubleToFloat??rA
   \   000000F0   AC0084E5           STR      R0,[R4, #+172]
   \   000000F4   0E0000EA           B        ??RefTmp1_Input_13
   1505                  break;
   1506              case CTY_SIMPLE_LIN:
   1507                  Error = E_NO_INPUT_PERMISSION;
   \                     ??RefTmp1_Input_1:
   \   000000F8   2A50A0E3           MOV      R5,#+42
   \   000000FC   0C0000EA           B        ??RefTmp1_Input_13
   1508                  break;
   1509              case CTY_BALLAST:
   1510                  Error = E_NO_USE_SYS_BALW;
   \                     ??RefTmp1_Input_3:
   \   00000100   1250A0E3           MOV      R5,#+18
   \   00000104   0A0000EA           B        ??RefTmp1_Input_13
   1511                  break;
   1512              case CTY_SEA:
   1513                  Error = E_NO_USE_SYS_SEAW;
   \                     ??RefTmp1_Input_8:
   \   00000108   1150A0E3           MOV      R5,#+17
   \   0000010C   080000EA           B        ??RefTmp1_Input_13
   1514                  break;
   1515              case CTY_FW:
   1516                  Error = E_NO_USE_SYS_FW;
   \                     ??RefTmp1_Input_7:
   \   00000110   2250A0E3           MOV      R5,#+34
   \   00000114   060000EA           B        ??RefTmp1_Input_13
   1517                  break;
   1518              case CTY_HFO:
   1519                  Error = E_NO_USE_SYS_HFO;
   \                     ??RefTmp1_Input_4:
   \   00000118   2350A0E3           MOV      R5,#+35
   \   0000011C   040000EA           B        ??RefTmp1_Input_13
   1520                  break;
   1521              case CTY_DO:
   1522                  Error = E_NO_USE_SYS_DIESEL;
   \                     ??RefTmp1_Input_5:
   \   00000120   2450A0E3           MOV      R5,#+36
   \   00000124   020000EA           B        ??RefTmp1_Input_13
   1523                  break;
   1524              case CTY_LUB:
   1525                  Error = E_NO_USE_SYS_LUB;
   \                     ??RefTmp1_Input_6:
   \   00000128   2550A0E3           MOV      R5,#+37
   \   0000012C   000000EA           B        ??RefTmp1_Input_13
   1526                  break;
   1527              case CTY_API_53A:
   1528              case CTY_API_53B:
   1529              case CTY_API_53D:
   1530              case CTY_API_53E:
   1531              case CTY_API_54A:
   1532              case CTY_API_54B:
   1533              case CTY_API_54D:
   1534              case CTY_API_54E:
   1535              case CTY_API_59A:
   1536              case CTY_API_59B:
   1537              case CTY_API_59D:
   1538              case CTY_API_59E:
   1539              case CTY_API_60A:
   1540              case CTY_API_60B:
   1541              case CTY_API_60D:
   1542              case CTY_API_60E:
   1543              case CTY_GAS_AMMONIA      :
   1544              case CTY_GAS_BUTADIEN     :
   1545              case CTY_GAS_ISOBUTYLENE  :
   1546              case CTY_GAS_PROPYLENE    :
   1547              case CTY_GAS_PROPENOXIDE  :
   1548              case CTY_GAS_VYNILCHLORIDE:
   1549              case CTY_GAS_BUTANE         :
   1550              case CTY_GAS_PROPANE        :
   1551              case CTY_GAS_N_BUTANE       :
   1552              case CTY_GAS_ISO_BUTANE     :
   1553              case CTY_GAS_1_BUTANE       :
   1554              case CTY_GAS_CRUDE_C4       :
   1555              case CTY_GAS_RAFFINATE_1    :
   1556              case CTY_GAS_RAFFINATE_2    :
   1557              case CTY_GAS_PROPYLENE_REF  :
   1558              case CTY_GAS_GASOLIE        :
   1559              case CTY_GAS_FLEXICOKER_LPG :
   1560              case CTY_GAS_SULPHUR_1      :
   1561              case CTY_GAS_SULPHUR_2      :
   1562              case CTY_GAS_SULPHUR_3      :
   1563              case CTY_GAS_SULPHUR_4      :
   1564              case CTY_GAS_SULPHUR_5      :
   1565              case CTY_GAS_SULPHUR_6      :
   1566                  Error = E_NO_INPUT_PERMISSION;
   1567                  break;
   1568              default :
   1569                  Error = E_USE_API;
   \                     ??RefTmp1_Input_9:
   \   00000130   0850A0E3           MOV      R5,#+8
   1570                  break;
   1571          
   1572              }
   1573              return (Error);
   \                     ??RefTmp1_Input_13:
   \   00000134   0500A0E1           MOV      R0,R5
   \   00000138   ........           B        ?Subroutine52
   1574          }
   1575          

   \                                 In segment CODE, align 4, keep-with-next
   1576          int CargoTypeObject::RefTmp2_Input(double T2) {
   \                     ??RefTmp2_Input:
   \   00000000   F34F2DE9           PUSH     {R0,R1,R4-R11,LR}
   \   00000004   0050A0E1           MOV      R5,R0
   1577          
   1578              int Error = false;
   1579          
   1580              switch ( BaseCargoType ) {
   \   00000008   F00095E5           LDR      R0,[R5, #+240]
   \   0000000C   BC6095E5           LDR      R6,[R5, #+188]
   \   00000010   C07095E5           LDR      R7,[R5, #+192]
   \   00000014   C48095E5           LDR      R8,[R5, #+196]
   \   00000018   C89095E5           LDR      R9,[R5, #+200]
   \   0000001C   01A0A0E1           MOV      R10,R1
   \   00000020   02B0A0E1           MOV      R11,R2
   \   00000024   0040A0E3           MOV      R4,#+0
   \   00000028   310050E3           CMP      R0,#+49
   \   0000002C   7F00008A           BHI      ??RefTmp2_Input_2
   \   00000030   011F8FE2           ADR      R1,??RefTmp2_Input_1
   \   00000034   0010D1E7           LDRB     R1,[R1, R0]
   \   00000038   01F18FE0           ADD      PC,PC,R1, LSL #+2
   \                     ??RefTmp2_Input_1:
   \   0000003C   6E0C7076           DC8      +110,+12,+112,+118
   \   00000040   787A7472           DC8      +120,+122,+116,+114
   \   00000044   7C7C7C33           DC8      +124,+124,+124,+51
   \   00000048   33336A6A           DC8      +51,+51,+106,+106
   \   0000004C   6A333333           DC8      +106,+51,+51,+51
   \   00000050   6C6C6C33           DC8      +108,+108,+108,+51
   \   00000054   6A336C6E           DC8      +106,+51,+108,+110
   \   00000058   6E6E6E6E           DC8      +110,+110,+110,+110
   \   0000005C   6E6E6E6E           DC8      +110,+110,+110,+110
   \   00000060   6E6E6E6E           DC8      +110,+110,+110,+110
   \   00000064   6E6E6E6E           DC8      +110,+110,+110,+110
   \   00000068   6E6E6E6E           DC8      +110,+110,+110,+110
   \   0000006C   6E6E0000           DC8      +110,+110,+0,+0
   1581              case CTY_LINEAR:
   1582                  {
   1583                      double Cx;
   1584                      if ( RefTmp1 == T2 ) Error = E_REFTMP;
   \                     ??RefTmp2_Input_3:
   \   00000070   0A20A0E1           MOV      R2,R10
   \   00000074   0B30A0E1           MOV      R3,R11
   \   00000078   0800A0E1           MOV      R0,R8
   \   0000007C   0910A0E1           MOV      R1,R9
   \   00000080   ........           _BLF     __dEqual,??__dEqual??rA
   \   00000084   000050E3           CMP      R0,#+0
   \   00000088   0340A013           MOVNE    R4,#+3
   \   0000008C   6800001A           BNE      ??RefTmp2_Input_4
   1585                      else {
   1586                          Cx  = (OD2 - OD1) / (T2 - RefTmp1);
   \   00000090   0A00A0E1           MOV      R0,R10
   \   00000094   0B10A0E1           MOV      R1,R11
   \   00000098   0820A0E1           MOV      R2,R8
   \   0000009C   0930A0E1           MOV      R3,R9
   \   000000A0   ........           _BLF     __dSub,??__dSub??rA
   \   000000A4   B42095E5           LDR      R2,[R5, #+180]
   \   000000A8   B83095E5           LDR      R3,[R5, #+184]
   \   000000AC   0080A0E1           MOV      R8,R0
   \   000000B0   0190A0E1           MOV      R9,R1
   \   000000B4   0600A0E1           MOV      R0,R6
   \   000000B8   0710A0E1           MOV      R1,R7
   \   000000BC   ........           _BLF     __dSub,??__dSub??rA
   \   000000C0   0820A0E1           MOV      R2,R8
   \   000000C4   0930A0E1           MOV      R3,R9
   \   000000C8   ........           _BLF     __dDiv,??__dDiv??rA
   1587                          if ( fabs(Cx) > 0.01 ) Error = E_COEFF;
   \   000000CC   ........           LDR      R2,??DataTable95  ;; 0x47ae147c
   \   000000D0   ........           LDR      R3,??DataTable96  ;; 0x3f847ae1
   \   000000D4   0060A0E1           MOV      R6,R0
   \   000000D8   0170A0E1           MOV      R7,R1
   \   000000DC   8014C1E3           BIC      R1,R1,#0x80000000
   \   000000E0   ........           _BLF     __dGreaterEqual,??__dGreaterEqual??rA
   \   000000E4   000050E3           CMP      R0,#+0
   \   000000E8   0540A013           MOVNE    R4,#+5
   \   000000EC   5000001A           BNE      ??RefTmp2_Input_4
   1588                          else {
   1589                              Coeff   = -Cx;
   \   000000F0   0600A0E1           MOV      R0,R6
   \   000000F4   801427E2           EOR      R1,R7,#0x80000000
   \   000000F8   D40085E5           STR      R0,[R5, #+212]
   \   000000FC   D81085E5           STR      R1,[R5, #+216]
   1590                              RefTmp2 = T2;
   \   00000100   CCA085E5           STR      R10,[R5, #+204]
   \   00000104   D0B085E5           STR      R11,[R5, #+208]
   \   00000108   490000EA           B        ??RefTmp2_Input_4
   1591                          }
   1592                      }
   1593                  }
   1594                  break;
   1595              case CTY_API_53A:
   1596              case CTY_API_53B:
   1597              case CTY_API_53D:
   1598              case CTY_API_53E:
   1599              case CTY_API_59A:
   1600              case CTY_API_59B:
   1601              case CTY_API_59D:
   1602              case CTY_API_59E:
   1603                  {
   1604                      double dT = T2 - RefTmp1;
   \                     ??RefTmp2_Input_5:
   \   0000010C   0D00A0E1           MOV      R0,SP
   \   00000110   01002DE9           PUSH     {R0}
   \   00000114   0A00A0E1           MOV      R0,R10
   \   00000118   0B10A0E1           MOV      R1,R11
   \   0000011C   0820A0E1           MOV      R2,R8
   \   00000120   0930A0E1           MOV      R3,R9
   \   00000124   ........           _BLF     __dSub,??__dSub??rA
   \   00000128   0400BDE8           POP      {R2}
   1605                      if ( fabs(dT) < 1.0 ) {
   \   0000012C   C035A0E3           MOV      R3,#+805306368
   \   00000130   FF3683E3           ORR      R3,R3,#0xFF00000
   \   00000134   030082E8           STM      R2,{R0,R1}
   \   00000138   0D00A0E1           MOV      R0,SP
   \   0000013C   030090E8           LDM      R0,{R0,R1}
   \   00000140   0020A0E3           MOV      R2,#+0
   \   00000144   8014C1E3           BIC      R1,R1,#0x80000000
   \   00000148   ........           _BLF     __dLess,??__dLess??rA
   \   0000014C   000C2DE9           PUSH     {R10,R11}
   \   00000150   0800BDE8           POP      {R3}
   \   00000154   000050E3           CMP      R0,#+0
   \   00000158   0720A0E1           MOV      R2,R7
   \   0000015C   0610A0E1           MOV      R1,R6
   \   00000160   0500A0E1           MOV      R0,R5
   \   00000164   0800000A           BEQ      ??RefTmp2_Input_6
   1606                          OD1     = Dns_at_T_to_RefDns(OD2, T2);
   \   00000168   ........           BL       ??Dns_at_T_to_RefDns
   \   0000016C   0060A0E1           MOV      R6,R0
   \   00000170   0170A0E1           MOV      R7,R1
   1607                          RefTmp2 = T2;
   \   00000174   0A80A0E1           MOV      R8,R10
   \   00000178   0B90A0E1           MOV      R9,R11
   1608                          Coeff   = 1.0;
   \   0000017C   0000A0E3           MOV      R0,#+0
   \   00000180   C015A0E3           MOV      R1,#+805306368
   \   00000184   FF1681E3           ORR      R1,R1,#0xFF00000
   \   00000188   0A0000EA           B        ??RefTmp2_Input_7
   1609                      } else {
   1610                          // Do no density check here
   1611                          OD1     = Dns_at_T_to_RefDns(OD2, T2);
   \                     ??RefTmp2_Input_6:
   \   0000018C   ........           BL       ??Dns_at_T_to_RefDns
   1612                          RefTmp2 = T2;
   1613                          Coeff   = (OD1 - OD2) / dT;
   \   00000190   BC2095E5           LDR      R2,[R5, #+188]
   \   00000194   C03095E5           LDR      R3,[R5, #+192]
   \   00000198   0060A0E1           MOV      R6,R0
   \   0000019C   0170A0E1           MOV      R7,R1
   \   000001A0   ........           _BLF     __dSub,??__dSub??rA
   \   000001A4   04208DE2           ADD      R2,SP,#+4
   \   000001A8   0C0092E8           LDM      R2,{R2,R3}
   \   000001AC   0A80A0E1           MOV      R8,R10
   \   000001B0   0B90A0E1           MOV      R9,R11
   \   000001B4   ........           _BLF     __dDiv,??__dDiv??rA
   \                     ??RefTmp2_Input_7:
   \   000001B8   04D08DE2           ADD      SP,SP,#+4
   \   000001BC   D40085E5           STR      R0,[R5, #+212]
   \   000001C0   D81085E5           STR      R1,[R5, #+216]
   \   000001C4   CC8085E5           STR      R8,[R5, #+204]
   \   000001C8   D09085E5           STR      R9,[R5, #+208]
   \   000001CC   B46085E5           STR      R6,[R5, #+180]
   \   000001D0   B87085E5           STR      R7,[R5, #+184]
   1614                      }
   1615                  }
   1616                  ActualTemp = RefTmp2;
   \   000001D4   0800A0E1           MOV      R0,R8
   \   000001D8   0910A0E1           MOV      R1,R9
   \   000001DC   ........           _BLF     __doubleToFloat,??__doubleToFloat??rA
   \   000001E0   AC0085E5           STR      R0,[R5, #+172]
   \   000001E4   120000EA           B        ??RefTmp2_Input_4
   1617                  break;
   1618              case CTY_API_54A:
   1619              case CTY_API_54B:
   1620              case CTY_API_54D:
   1621              case CTY_API_54E:
   1622                  Error = E_USE_API53_TABLE;
   \                     ??RefTmp2_Input_8:
   \   000001E8   2D40A0E3           MOV      R4,#+45
   \   000001EC   100000EA           B        ??RefTmp2_Input_4
   1623                  break;
   1624              case CTY_API_60A:
   1625              case CTY_API_60B:
   1626              case CTY_API_60D:
   1627              case CTY_API_60E:
   1628                  Error = E_USE_API59_TABLE;
   \                     ??RefTmp2_Input_9:
   \   000001F0   3340A0E3           MOV      R4,#+51
   \   000001F4   0E0000EA           B        ??RefTmp2_Input_4
   1629                  break;
   1630              case CTY_SIMPLE_LIN:
   1631                  Error = E_NO_INPUT_PERMISSION;
   \                     ??RefTmp2_Input_10:
   \   000001F8   2A40A0E3           MOV      R4,#+42
   \   000001FC   0C0000EA           B        ??RefTmp2_Input_4
   1632                  break;
   1633              case CTY_BALLAST:
   1634                  Error = E_NO_USE_SYS_BALW;
   \                     ??RefTmp2_Input_11:
   \   00000200   1240A0E3           MOV      R4,#+18
   \   00000204   0A0000EA           B        ??RefTmp2_Input_4
   1635                  break;
   1636              case CTY_SEA:
   1637                  Error = E_NO_USE_SYS_SEAW;
   \                     ??RefTmp2_Input_12:
   \   00000208   1140A0E3           MOV      R4,#+17
   \   0000020C   080000EA           B        ??RefTmp2_Input_4
   1638                  break;
   1639              case CTY_FW:
   1640                  Error = E_NO_USE_SYS_FW;
   \                     ??RefTmp2_Input_13:
   \   00000210   2240A0E3           MOV      R4,#+34
   \   00000214   060000EA           B        ??RefTmp2_Input_4
   1641                  break;
   1642              case CTY_HFO:
   1643                  Error = E_NO_USE_SYS_HFO;
   \                     ??RefTmp2_Input_14:
   \   00000218   2340A0E3           MOV      R4,#+35
   \   0000021C   040000EA           B        ??RefTmp2_Input_4
   1644                  break;
   1645              case CTY_DO:
   1646                  Error = E_NO_USE_SYS_DIESEL;
   \                     ??RefTmp2_Input_15:
   \   00000220   2440A0E3           MOV      R4,#+36
   \   00000224   020000EA           B        ??RefTmp2_Input_4
   1647                  break;
   1648              case CTY_LUB:
   1649                  Error = E_NO_USE_SYS_LUB;
   \                     ??RefTmp2_Input_16:
   \   00000228   2540A0E3           MOV      R4,#+37
   \   0000022C   000000EA           B        ??RefTmp2_Input_4
   1650                  break;
   1651              case CTY_GAS_AMMONIA      :
   1652              case CTY_GAS_BUTADIEN     :
   1653              case CTY_GAS_ISOBUTYLENE  :
   1654              case CTY_GAS_PROPYLENE    :
   1655              case CTY_GAS_PROPENOXIDE  :
   1656              case CTY_GAS_VYNILCHLORIDE:
   1657              case CTY_GAS_BUTANE         :
   1658              case CTY_GAS_PROPANE        :
   1659              case CTY_GAS_N_BUTANE       :
   1660              case CTY_GAS_ISO_BUTANE     :
   1661              case CTY_GAS_1_BUTANE       :
   1662              case CTY_GAS_CRUDE_C4       :
   1663              case CTY_GAS_RAFFINATE_1    :
   1664              case CTY_GAS_RAFFINATE_2    :
   1665              case CTY_GAS_PROPYLENE_REF  :
   1666              case CTY_GAS_GASOLIE        :
   1667              case CTY_GAS_FLEXICOKER_LPG :
   1668              case CTY_GAS_SULPHUR_1      :
   1669              case CTY_GAS_SULPHUR_2      :
   1670              case CTY_GAS_SULPHUR_3      :
   1671              case CTY_GAS_SULPHUR_4      :
   1672              case CTY_GAS_SULPHUR_5      :
   1673              case CTY_GAS_SULPHUR_6      :
   1674                  Error = E_NO_INPUT_PERMISSION;
   1675                  break;
   1676              default     :
   1677                  Error = E_USE_API;
   \                     ??RefTmp2_Input_2:
   \   00000230   0840A0E3           MOV      R4,#+8
   1678                  break;
   1679          
   1680              }
   1681              return (Error);
   \                     ??RefTmp2_Input_4:
   \   00000234   0400A0E1           MOV      R0,R4
   \   00000238   F64FBDE8           POP      {R1,R2,R4-R11,LR}
   \   0000023C   1EFF2FE1           BX       LR               ;; return
   1682          }
   1683          

   \                                 In segment CODE, align 4, keep-with-next
   1684          int CargoTypeObject::Handle_New_Coeff(double Cx) {
   \                     ??Handle_New_Coeff:
   \   00000000   F0432DE9           PUSH     {R4-R9,LR}
   \   00000004   0060A0E1           MOV      R6,R0
   1685              int Error = false;
   1686          
   1687              double Density = OD1 - Cx * (RefTmp2 - RefTmp1);
   \   00000008   C40096E5           LDR      R0,[R6, #+196]
   \   0000000C   D03096E5           LDR      R3,[R6, #+208]
   \   00000010   0140A0E1           MOV      R4,R1
   \   00000014   C81096E5           LDR      R1,[R6, #+200]
   \   00000018   0250A0E1           MOV      R5,R2
   \   0000001C   CC2096E5           LDR      R2,[R6, #+204]
   \   00000020   0070A0E3           MOV      R7,#+0
   \   00000024   ........           _BLF     __dSub,??__dSub??rA
   \   00000028   0420A0E1           MOV      R2,R4
   \   0000002C   0530A0E1           MOV      R3,R5
   \   00000030   ........           _BLF     __dMul,??__dMul??rA
   \   00000034   B42096E5           LDR      R2,[R6, #+180]
   \   00000038   B83096E5           LDR      R3,[R6, #+184]
   \   0000003C   ........           _BLF     __dAdd,??__dAdd??rA
   1688              if ( Density > MAX_DENSITY ) {
   \   00000040   ........           LDR      R2,??DataTable97  ;; 0xffffffff9999999b
   \   00000044   ........           LDR      R3,??DataTable98  ;; 0x40099999
   \   00000048   0080A0E1           MOV      R8,R0
   \   0000004C   0190A0E1           MOV      R9,R1
   \   00000050   ........           _BLF     __dGreaterEqual,??__dGreaterEqual??rA
   \   00000054   000050E3           CMP      R0,#+0
   1689                  Error = E_HIGH;
   \   00000058   0670A013           MOVNE    R7,#+6
   \   0000005C   0A00001A           BNE      ??Handle_New_Coeff_1
   1690              } else if ( Density < MIN_DENSITY ) {
   \   00000060   ........           LDR      R2,??DataTable99  ;; 0xffffffff9999999a
   \   00000064   ........           LDR      R3,??DataTable100  ;; 0x3fd99999
   \   00000068   0800A0E1           MOV      R0,R8
   \   0000006C   0910A0E1           MOV      R1,R9
   \   00000070   ........           _BLF     __dLess,??__dLess??rA
   \   00000074   000050E3           CMP      R0,#+0
   1691                  Error = E_LOW;
   \   00000078   0770A013           MOVNE    R7,#+7
   1692              } else {
   1693                  OD2    = Density;
   \   0000007C   BC808605           STREQ    R8,[R6, #+188]
   \   00000080   C0908605           STREQ    R9,[R6, #+192]
   1694                  Coeff  = Cx;
   \   00000084   D4408605           STREQ    R4,[R6, #+212]
   \   00000088   D8508605           STREQ    R5,[R6, #+216]
   1695              }
   1696              return (Error);
   \                     ??Handle_New_Coeff_1:
   \   0000008C   0700A0E1           MOV      R0,R7
   \   00000090   ........           B        ?Subroutine52
   1697          }
   1698          

   \                                 In segment CODE, align 4, keep-with-next
   1699          int CargoTypeObject::Coeff_Input(double Cx) {
   \                     ??Coeff_Input:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   1700              int Error = false;
   1701              switch ( BaseCargoType ) {
   \   00000008   F00094E5           LDR      R0,[R4, #+240]
   \   0000000C   000050E3           CMP      R0,#+0
   \   00000010   1900000A           BEQ      ??Coeff_Input_1
   \   00000014   010050E2           SUBS     R0,R0,#+1
   \   00000018   0F00000A           BEQ      ??Coeff_Input_2
   \   0000001C   010050E2           SUBS     R0,R0,#+1
   \   00000020   1700000A           BEQ      ??Coeff_Input_3
   \   00000024   010050E2           SUBS     R0,R0,#+1
   \   00000028   1B00000A           BEQ      ??Coeff_Input_4
   \   0000002C   010050E2           SUBS     R0,R0,#+1
   \   00000030   1B00000A           BEQ      ??Coeff_Input_5
   \   00000034   010050E2           SUBS     R0,R0,#+1
   \   00000038   1B00000A           BEQ      ??Coeff_Input_6
   \   0000003C   010050E2           SUBS     R0,R0,#+1
   \   00000040   1300000A           BEQ      ??Coeff_Input_7
   \   00000044   010050E2           SUBS     R0,R0,#+1
   \   00000048   0F00000A           BEQ      ??Coeff_Input_8
   \   0000004C   040040E2           SUB      R0,R0,#+4
   \   00000050   260050E3           CMP      R0,#+38
   \   00000054   0800009A           BLS      ??Coeff_Input_1
   \   00000058   150000EA           B        ??Coeff_Input_9
   1702              case CTY_LINEAR:
   1703                  Error = Handle_New_Coeff(Cx);
   \                     ??Coeff_Input_2:
   \   0000005C   0400A0E1           MOV      R0,R4
   \   00000060   ........           BL       ??Handle_New_Coeff
   1704                  ActualTemp = RefTmp2;
   \   00000064   D01094E5           LDR      R1,[R4, #+208]
   \   00000068   0050A0E1           MOV      R5,R0
   \   0000006C   CC0094E5           LDR      R0,[R4, #+204]
   \   00000070   ........           _BLF     __doubleToFloat,??__doubleToFloat??rA
   \   00000074   AC0084E5           STR      R0,[R4, #+172]
   \   00000078   0E0000EA           B        ??Coeff_Input_10
   1705                  break;
   1706              case CTY_SIMPLE_LIN:
   1707                  Error = E_NO_INPUT_PERMISSION;
   \                     ??Coeff_Input_1:
   \   0000007C   2A50A0E3           MOV      R5,#+42
   \   00000080   0C0000EA           B        ??Coeff_Input_10
   1708                  break;
   1709              case CTY_BALLAST:
   1710                  Error = E_NO_USE_SYS_BALW;
   \                     ??Coeff_Input_3:
   \   00000084   1250A0E3           MOV      R5,#+18
   \   00000088   0A0000EA           B        ??Coeff_Input_10
   1711                  break;
   1712              case CTY_SEA:
   1713                  Error = E_NO_USE_SYS_SEAW;
   \                     ??Coeff_Input_8:
   \   0000008C   1150A0E3           MOV      R5,#+17
   \   00000090   080000EA           B        ??Coeff_Input_10
   1714                  break;
   1715              case CTY_FW:
   1716                  Error = E_NO_USE_SYS_FW;
   \                     ??Coeff_Input_7:
   \   00000094   2250A0E3           MOV      R5,#+34
   \   00000098   060000EA           B        ??Coeff_Input_10
   1717                  break;
   1718              case CTY_HFO:
   1719                  Error = E_NO_USE_SYS_HFO;
   \                     ??Coeff_Input_4:
   \   0000009C   2350A0E3           MOV      R5,#+35
   \   000000A0   040000EA           B        ??Coeff_Input_10
   1720                  break;
   1721              case CTY_DO:
   1722                  Error = E_NO_USE_SYS_DIESEL;
   \                     ??Coeff_Input_5:
   \   000000A4   2450A0E3           MOV      R5,#+36
   \   000000A8   020000EA           B        ??Coeff_Input_10
   1723                  break;
   1724              case CTY_LUB:
   1725                  Error = E_NO_USE_SYS_LUB;
   \                     ??Coeff_Input_6:
   \   000000AC   2550A0E3           MOV      R5,#+37
   \   000000B0   000000EA           B        ??Coeff_Input_10
   1726                  break;
   1727              case CTY_API_53A:
   1728              case CTY_API_53B:
   1729              case CTY_API_53D:
   1730              case CTY_API_53E:
   1731              case CTY_API_54A:
   1732              case CTY_API_54B:
   1733              case CTY_API_54D:
   1734              case CTY_API_54E:
   1735              case CTY_API_59A:
   1736              case CTY_API_59B:
   1737              case CTY_API_59D:
   1738              case CTY_API_59E:
   1739              case CTY_API_60A:
   1740              case CTY_API_60B:
   1741              case CTY_API_60D:
   1742              case CTY_API_60E:
   1743              case CTY_GAS_AMMONIA      :
   1744              case CTY_GAS_BUTADIEN     :
   1745              case CTY_GAS_ISOBUTYLENE  :
   1746              case CTY_GAS_PROPYLENE    :
   1747              case CTY_GAS_PROPENOXIDE  :
   1748              case CTY_GAS_VYNILCHLORIDE:
   1749              case CTY_GAS_BUTANE         :
   1750              case CTY_GAS_PROPANE        :
   1751              case CTY_GAS_N_BUTANE       :
   1752              case CTY_GAS_ISO_BUTANE     :
   1753              case CTY_GAS_1_BUTANE       :
   1754              case CTY_GAS_CRUDE_C4       :
   1755              case CTY_GAS_RAFFINATE_1    :
   1756              case CTY_GAS_RAFFINATE_2    :
   1757              case CTY_GAS_PROPYLENE_REF  :
   1758              case CTY_GAS_GASOLIE        :
   1759              case CTY_GAS_FLEXICOKER_LPG :
   1760              case CTY_GAS_SULPHUR_1      :
   1761              case CTY_GAS_SULPHUR_2      :
   1762              case CTY_GAS_SULPHUR_3      :
   1763              case CTY_GAS_SULPHUR_4      :
   1764              case CTY_GAS_SULPHUR_5      :
   1765              case CTY_GAS_SULPHUR_6      :
   1766                  Error = E_NO_INPUT_PERMISSION;
   1767                  break;
   1768              default     :
   1769                  Error = E_USE_API;
   \                     ??Coeff_Input_9:
   \   000000B4   0850A0E3           MOV      R5,#+8
   1770                  break;
   1771              }
   1772              return (Error);
   \                     ??Coeff_Input_10:
   \   000000B8   0500A0E1           MOV      R0,R5
   \   000000BC   ........           B        ?Subroutine50
   1773          }
   1774          

   \                                 In segment CODE, align 4, keep-with-next
   1775          double CargoTypeObject::GetOD1(bool &AllowInput) {
   1776              switch ( BaseCargoType ) {
   \                     ??GetOD1:
   \   00000000   F02090E5           LDR      R2,[R0, #+240]
   \   00000004   010052E3           CMP      R2,#+1
   \   00000008   0E204282           SUBHI    R2,R2,#+14
   \   0000000C   02005283           CMPHI    R2,#+2
   \   00000010   06204282           SUBHI    R2,R2,#+6
   \   00000014   02005283           CMPHI    R2,#+2
   1777              default:
   1778                  AllowInput = false;
   \   00000018   0020A083           MOVHI    R2,#+0
   1779                  break;
   1780              case CTY_LINEAR:
   1781              case CTY_SIMPLE_LIN:
   1782              case CTY_API_54A:
   1783              case CTY_API_54B:
   1784              case CTY_API_54D:
   1785              case CTY_API_60A:
   1786              case CTY_API_60B:
   1787              case CTY_API_60D:
   1788                  AllowInput = true;
   \   0000001C   0120A093           MOVLS    R2,#+1
   \   00000020   0020C1E5           STRB     R2,[R1, #+0]
   1789                  break;
   1790              }
   1791              return (OD1);
   \   00000024   B42090E5           LDR      R2,[R0, #+180]
   \   00000028   B81090E5           LDR      R1,[R0, #+184]
   \   0000002C   ........           B        ?Subroutine56
   1792          }

   \                                 In segment CODE, align 4, keep-with-next
   \                     ?Subroutine56:
   \   00000000   0200A0E1           MOV      R0,R2
   \   00000004   1EFF2FE1           BX       LR               ;; return
   1793          

   \                                 In segment CODE, align 4, keep-with-next
   1794          double CargoTypeObject::GetOD2(bool &AllowInput) {
   1795              switch ( BaseCargoType ) {
   \                     ??GetOD2:
   \   00000000   F02090E5           LDR      R2,[R0, #+240]
   \   00000004   012052E2           SUBS     R2,R2,#+1
   \   00000008   0500000A           BEQ      ??GetOD2_1
   \   0000000C   0D2042E2           SUB      R2,R2,#+13
   \   00000010   020052E3           CMP      R2,#+2
   \   00000014   06204282           SUBHI    R2,R2,#+6
   \   00000018   02005283           CMPHI    R2,#+2
   1796              default:
   1797                  AllowInput = false;
   \   0000001C   0020A083           MOVHI    R2,#+0
   \   00000020   0000008A           BHI      ??GetOD2_2
   1798                  break;
   1799              case CTY_LINEAR:
   1800              case CTY_API_54A:
   1801              case CTY_API_54B:
   1802              case CTY_API_54D:
   1803              case CTY_API_60A:
   1804              case CTY_API_60B:
   1805              case CTY_API_60D:
   1806                  AllowInput = true;
   \                     ??GetOD2_1:
   \   00000024   0120A0E3           MOV      R2,#+1
   \                     ??GetOD2_2:
   \   00000028   0020C1E5           STRB     R2,[R1, #+0]
   1807                  break;
   1808              }
   1809              return (OD2);
   \   0000002C   BC2090E5           LDR      R2,[R0, #+188]
   \   00000030   C01090E5           LDR      R1,[R0, #+192]
   \   00000034                      REQUIRE ?Subroutine56
   \   00000034                      ;; // Fall through to label ?Subroutine56
   1810          }
   1811          

   \                                 In segment CODE, align 4, keep-with-next
   1812          double CargoTypeObject::GetRefTmp1(bool &AllowInput) {
   1813              switch ( BaseCargoType ) {
   \                     ??GetRefTmp1:
   \   00000000   F02090E5           LDR      R2,[R0, #+240]
   \   00000004   010052E3           CMP      R2,#+1
   1814              default:
   1815                  AllowInput = false;
   \   00000008   0020A013           MOVNE    R2,#+0
   1816                  break;
   1817              case CTY_LINEAR:
   1818                  AllowInput = true;
   \   0000000C   0020C1E5           STRB     R2,[R1, #+0]
   1819                  break;
   1820              }
   1821              return (RefTmp1);
   \   00000010   C42090E5           LDR      R2,[R0, #+196]
   \   00000014   C81090E5           LDR      R1,[R0, #+200]
   \   00000018   ........           B        ?Subroutine56
   1822          }
   1823          

   \                                 In segment CODE, align 4, keep-with-next
   1824          double CargoTypeObject::GetRefTmp2(bool &AllowInput) {
   1825              switch ( BaseCargoType ) {
   \                     ??GetRefTmp2:
   \   00000000   F02090E5           LDR      R2,[R0, #+240]
   \   00000004   012052E2           SUBS     R2,R2,#+1
   \   00000008   0B00000A           BEQ      ??GetRefTmp2_1
   \   0000000C   0A2042E2           SUB      R2,R2,#+10
   \   00000010   020052E3           CMP      R2,#+2
   \   00000014   06204282           SUBHI    R2,R2,#+6
   \   00000018   02005283           CMPHI    R2,#+2
   \   0000001C   0600009A           BLS      ??GetRefTmp2_1
   \   00000020   062052E2           SUBS     R2,R2,#+6
   \   00000024   02205212           SUBSNE   R2,R2,#+2
   \   00000028   0300000A           BEQ      ??GetRefTmp2_1
   \   0000002C   022042E2           SUB      R2,R2,#+2
   \   00000030   160052E3           CMP      R2,#+22
   1826              default:
   1827                  AllowInput = false;
   \   00000034   0020A083           MOVHI    R2,#+0
   \   00000038   0000008A           BHI      ??GetRefTmp2_2
   1828                  break;
   1829              case CTY_LINEAR:
   1830              case CTY_API_53A:
   1831              case CTY_API_53B:
   1832              case CTY_API_53D:
   1833              case CTY_API_53E:
   1834              case CTY_API_59A:
   1835              case CTY_API_59B:
   1836              case CTY_API_59D:
   1837              case CTY_API_59E:
   1838              case CTY_GAS_AMMONIA      :
   1839              case CTY_GAS_BUTADIEN     :
   1840              case CTY_GAS_ISOBUTYLENE  :
   1841              case CTY_GAS_PROPYLENE    :
   1842              case CTY_GAS_PROPENOXIDE  :
   1843              case CTY_GAS_VYNILCHLORIDE:
   1844              case CTY_GAS_BUTANE         :
   1845              case CTY_GAS_PROPANE        :
   1846              case CTY_GAS_N_BUTANE       :
   1847              case CTY_GAS_ISO_BUTANE     :
   1848              case CTY_GAS_1_BUTANE       :
   1849              case CTY_GAS_CRUDE_C4       :
   1850              case CTY_GAS_RAFFINATE_1    :
   1851              case CTY_GAS_RAFFINATE_2    :
   1852              case CTY_GAS_PROPYLENE_REF  :
   1853              case CTY_GAS_GASOLIE        :
   1854              case CTY_GAS_FLEXICOKER_LPG :
   1855              case CTY_GAS_SULPHUR_1      :
   1856              case CTY_GAS_SULPHUR_2      :
   1857              case CTY_GAS_SULPHUR_3      :
   1858              case CTY_GAS_SULPHUR_4      :
   1859              case CTY_GAS_SULPHUR_5      :
   1860              case CTY_GAS_SULPHUR_6      :
   1861                  AllowInput = true;
   \                     ??GetRefTmp2_1:
   \   0000003C   0120A0E3           MOV      R2,#+1
   \                     ??GetRefTmp2_2:
   \   00000040   0020C1E5           STRB     R2,[R1, #+0]
   1862                  break;
   1863              }
   1864              return (RefTmp2);
   \   00000044   CC2090E5           LDR      R2,[R0, #+204]
   \   00000048   D01090E5           LDR      R1,[R0, #+208]
   \   0000004C   ........           B        ?Subroutine56
   1865          }
   1866          

   \                                 In segment CODE, align 4, keep-with-next
   1867          double CargoTypeObject::GetCoeff(bool &AllowInput) {
   1868              switch ( BaseCargoType ) {
   \                     ??GetCoeff:
   \   00000000   F02090E5           LDR      R2,[R0, #+240]
   \   00000004   010052E3           CMP      R2,#+1
   1869              default:
   1870                  AllowInput = false;
   \   00000008   0020A013           MOVNE    R2,#+0
   1871                  break;
   1872              case CTY_LINEAR:
   1873                  AllowInput = true;
   \   0000000C   0020C1E5           STRB     R2,[R1, #+0]
   1874                  break;
   1875              }
   1876              return (Coeff);
   \   00000010   D42090E5           LDR      R2,[R0, #+212]
   \   00000014   D81090E5           LDR      R1,[R0, #+216]
   \   00000018   ........           B        ?Subroutine56
   1877          }
   1878          
   1879          
   1880          
   1881          ////////////////////////////////////////////////////////
   1882          //
   1883          // Calculate API at Ref temp1
   1884          //
   1885          ////////////////////////////////////////////////////////

   \                                 In segment CODE, align 4, keep-with-next
   1886          double CargoTypeObject::MeasDns_to_API(double Temp, double RhoT) {
   \                     ??MeasDns_to_API:
   \   00000000   08002DE9           PUSH     {R3}
   \   00000004   30402DE9           PUSH     {R4,R5,LR}
   \   00000008   0030A0E1           MOV      R3,R0
   \   0000000C   0C008DE2           ADD      R0,SP,#+12
   \   00000010   300090E8           LDM      R0,{R4,R5}
   1887              double RhoRef = Dns_at_T_to_RefDns(RhoT, Temp);
   \   00000014   06002DE9           PUSH     {R1,R2}
   \   00000018   0300A0E1           MOV      R0,R3
   \   0000001C   0800BDE8           POP      {R3}
   \   00000020   0520A0E1           MOV      R2,R5
   \   00000024   0410A0E1           MOV      R1,R4
   \   00000028   ........           BL       ??Dns_at_T_to_RefDns
   1888          
   1889              return (Density_to_API(RhoRef));
   \   0000002C   ........           _BLF     __doubleToFloat,??__doubleToFloat??rA
   \   00000030   ........           _BLF     ??Density_to_API,??Density_to_API??rA
   \   00000034   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   00000038   3440BDE8           POP      {R2,R4,R5,LR}
   \   0000003C   ........           B        ??Subroutine49_0
   1890          }
   1891          

   \                                 In segment CODE, align 4, keep-with-next
   1892          double CargoTypeObject::OpDns_to_API(bool  &AllowInput) {
   \                     ??OpDns_to_API:
   \   00000000   00402DE9           PUSH     {LR}
   1893              switch ( BaseCargoType ) {
   \   00000004   F02090E5           LDR      R2,[R0, #+240]
   \   00000008   082042E2           SUB      R2,R2,#+8
   \   0000000C   020052E3           CMP      R2,#+2
   1894              default:
   1895                  AllowInput = false;
   \   00000010   0020A083           MOVHI    R2,#+0
   1896                  break;
   1897              case CTY_API_6A     :
   1898              case CTY_API_6B     :
   1899              case CTY_API_6D     :
   1900                  AllowInput = true;
   \   00000014   0120A093           MOVLS    R2,#+1
   \   00000018   0020C1E5           STRB     R2,[R1, #+0]
   1901                  break;
   1902              }
   1903              return (Density_to_API(OD1));
   \   0000001C   B42090E5           LDR      R2,[R0, #+180]
   \   00000020   B81090E5           LDR      R1,[R0, #+184]
   \   00000024   0200A0E1           MOV      R0,R2
   \   00000028   ........           _BLF     __doubleToFloat,??__doubleToFloat??rA
   \   0000002C   ........           _BLF     ??Density_to_API,??Density_to_API??rA
   \   00000030   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   00000034                      REQUIRE ?Subroutine55
   \   00000034                      ;; // Fall through to label ?Subroutine55
   1904          }
   1905          

   \                                 In segment CODE, align 4, keep-with-next
   1906          double CargoTypeObject::Operator_Density_to_Vcf(double Temp) {
   \                     ??Operator_Density_to_Vcf:
   \   00000000   00402DE9           PUSH     {LR}
   1907              // Density@T / Density@Reftmp
   1908              // Density@T is operator density1
   1909              return (Vcf_Calc(Temp));
   \   00000004   ........           BL       ??Vcf_Calc
   \   00000008   ........           B        ?Subroutine55
   1910          }
   1911          

   \                                 In segment CODE, align 4, keep-with-next
   1912          double CargoTypeObject::DensityToVcfAtTemp(double RhoT, double Temp) {
   \                     ??DensityToVcfAtTemp:
   \   00000000   08002DE9           PUSH     {R3}
   \   00000004   F0472DE9           PUSH     {R4-R10,LR}
   \   00000008   00A0A0E1           MOV      R10,R0
   1913              double Vcf, dT = Temp - RefTmp1;
   \   0000000C   C8309AE5           LDR      R3,[R10, #+200]
   \   00000010   20008DE2           ADD      R0,SP,#+32
   \   00000014   000390E8           LDM      R0,{R8,R9}
   \   00000018   0250A0E1           MOV      R5,R2
   \   0000001C   C4209AE5           LDR      R2,[R10, #+196]
   \   00000020   0140A0E1           MOV      R4,R1
   \   00000024   0800A0E1           MOV      R0,R8
   \   00000028   0910A0E1           MOV      R1,R9
   \   0000002C   ........           _BLF     __dSub,??__dSub??rA
   \   00000030   0060A0E1           MOV      R6,R0
   1914              switch ( BaseCargoType ) {
   \   00000034   F0009AE5           LDR      R0,[R10, #+240]
   \   00000038   0170A0E1           MOV      R7,R1
   \   0000003C   080040E2           SUB      R0,R0,#+8
   \   00000040   120050E3           CMP      R0,#+18
   \   00000044   0700008A           BHI      ??DensityToVcfAtTemp_2
   \   00000048   011F8FE2           ADR      R1,??DensityToVcfAtTemp_1
   \   0000004C   0010D1E7           LDRB     R1,[R1, R0]
   \   00000050   01F18FE0           ADD      PC,PC,R1, LSL #+2
   \                     ??DensityToVcfAtTemp_1:
   \   00000054   0A1D280A           DC8      +10,+29,+40,+10
   \   00000058   1D280A1D           DC8      +29,+40,+10,+29
   \   0000005C   28333E49           DC8      +40,+51,+62,+73
   \   00000060   333E4954           DC8      +51,+62,+73,+84
   \   00000064   545A5A00           DC8      +84,+90,+90,+0
   1915              default     :
   1916                  Vcf = RhoT / OD1;
   \                     ??DensityToVcfAtTemp_2:
   \   00000068   B4209AE5           LDR      R2,[R10, #+180]
   \   0000006C   B8309AE5           LDR      R3,[R10, #+184]
   \   00000070   0400A0E1           MOV      R0,R4
   \   00000074   0510A0E1           MOV      R1,R5
   \   00000078   ........           _BLF     __dDiv,??__dDiv??rA
   \   0000007C   540000EA           B        ??DensityToVcfAtTemp_3
   1917                  break;
   1918              case CTY_API_6A :
   1919              case CTY_API_53A:
   1920              case CTY_API_54A:
   1921                  RhoT *= HydrometerCorrection(dT);
   \                     ??DensityToVcfAtTemp_4:
   \   00000080   0600A0E1           MOV      R0,R6
   \   00000084   0710A0E1           MOV      R1,R7
   \   00000088   ........           _BLF     __doubleToFloat,??__doubleToFloat??rA
   \   0000008C   ........           _BLF     ??HydrometerCorrection,??HydrometerCorrection??rA
   \   00000090   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   00000094   0420A0E1           MOV      R2,R4
   \   00000098   0530A0E1           MOV      R3,R5
   \   0000009C   ........           _BLF     __dMul,??__dMul??rA
   \   000000A0   0040A0E1           MOV      R4,R0
   1922                  Vcf   = FindVcf(RhoT, dT, Vcf_6_and_54A_Calc);
   \   000000A4   ........           LDR      R0,??DataTable101  ;; ??Vcf_6_and_54A_Calc
   \                     ??DensityToVcfAtTemp_5:
   \   000000A8   0120A0E1           MOV      R2,R1
   \   000000AC   01002DE9           PUSH     {R0}
   \   000000B0   C0002DE9           PUSH     {R6,R7}
   \   000000B4   0800BDE8           POP      {R3}
   \   000000B8   0410A0E1           MOV      R1,R4
   \   000000BC   0A00A0E1           MOV      R0,R10
   \   000000C0   ........           BL       ??FindVcf
   \   000000C4   08D08DE2           ADD      SP,SP,#+8
   \   000000C8   410000EA           B        ??DensityToVcfAtTemp_3
   1923                  break;
   1924              case CTY_API_6B :
   1925              case CTY_API_53B:
   1926              case CTY_API_54B:
   1927                  RhoT *= HydrometerCorrection(dT);
   \                     ??DensityToVcfAtTemp_6:
   \   000000CC   0600A0E1           MOV      R0,R6
   \   000000D0   0710A0E1           MOV      R1,R7
   \   000000D4   ........           _BLF     __doubleToFloat,??__doubleToFloat??rA
   \   000000D8   ........           _BLF     ??HydrometerCorrection,??HydrometerCorrection??rA
   \   000000DC   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   000000E0   0420A0E1           MOV      R2,R4
   \   000000E4   0530A0E1           MOV      R3,R5
   \   000000E8   ........           _BLF     __dMul,??__dMul??rA
   \   000000EC   0040A0E1           MOV      R4,R0
   1928                  Vcf   = FindVcf(RhoT, dT, Vcf_6_and_54B_Calc);
   \   000000F0   ........           LDR      R0,??DataTable102  ;; ??Vcf_6_and_54B_Calc
   \   000000F4   EBFFFFEA           B        ??DensityToVcfAtTemp_5
   1929                  break;
   1930              case CTY_API_6D :
   1931              case CTY_API_53D:
   1932              case CTY_API_54D:
   1933                  RhoT *= HydrometerCorrection(dT);
   \                     ??DensityToVcfAtTemp_7:
   \   000000F8   0600A0E1           MOV      R0,R6
   \   000000FC   0710A0E1           MOV      R1,R7
   \   00000100   ........           _BLF     __doubleToFloat,??__doubleToFloat??rA
   \   00000104   ........           _BLF     ??HydrometerCorrection,??HydrometerCorrection??rA
   \   00000108   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   0000010C   0420A0E1           MOV      R2,R4
   \   00000110   0530A0E1           MOV      R3,R5
   \   00000114   ........           _BLF     __dMul,??__dMul??rA
   \   00000118   0040A0E1           MOV      R4,R0
   1934                  Vcf   = FindVcf(RhoT, dT, Vcf_6_and_54D_Calc);
   \   0000011C   ........           LDR      R0,??DataTable103  ;; ??Vcf_6_and_54D_Calc
   \   00000120   E0FFFFEA           B        ??DensityToVcfAtTemp_5
   1935                  break;
   1936              case CTY_API_59A:
   1937              case CTY_API_60A:
   1938                  RhoT *= HydrometerCorrection(dT);
   \                     ??DensityToVcfAtTemp_8:
   \   00000124   0600A0E1           MOV      R0,R6
   \   00000128   0710A0E1           MOV      R1,R7
   \   0000012C   ........           _BLF     __doubleToFloat,??__doubleToFloat??rA
   \   00000130   ........           _BLF     ??HydrometerCorrection,??HydrometerCorrection??rA
   \   00000134   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   00000138   0420A0E1           MOV      R2,R4
   \   0000013C   0530A0E1           MOV      R3,R5
   \   00000140   ........           _BLF     __dMul,??__dMul??rA
   \   00000144   0040A0E1           MOV      R4,R0
   1939                  Vcf   = FindVcf(RhoT, dT, Vcf_59A_and_60A_Calc);
   \   00000148   ........           LDR      R0,??DataTable104  ;; ??Vcf_59A_and_60A_Calc
   \   0000014C   D5FFFFEA           B        ??DensityToVcfAtTemp_5
   1940                  break;
   1941              case CTY_API_59B:
   1942              case CTY_API_60B:
   1943                  RhoT *= HydrometerCorrection(dT);
   \                     ??DensityToVcfAtTemp_9:
   \   00000150   0600A0E1           MOV      R0,R6
   \   00000154   0710A0E1           MOV      R1,R7
   \   00000158   ........           _BLF     __doubleToFloat,??__doubleToFloat??rA
   \   0000015C   ........           _BLF     ??HydrometerCorrection,??HydrometerCorrection??rA
   \   00000160   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   00000164   0420A0E1           MOV      R2,R4
   \   00000168   0530A0E1           MOV      R3,R5
   \   0000016C   ........           _BLF     __dMul,??__dMul??rA
   \   00000170   0040A0E1           MOV      R4,R0
   1944                  Vcf   = FindVcf(RhoT, dT, Vcf_59B_and_60B_Calc);
   \   00000174   ........           LDR      R0,??DataTable105  ;; ??Vcf_59B_and_60B_Calc
   \   00000178   CAFFFFEA           B        ??DensityToVcfAtTemp_5
   1945                  break;
   1946              case CTY_API_59D:
   1947              case CTY_API_60D:
   1948                  RhoT *= HydrometerCorrection(dT);
   \                     ??DensityToVcfAtTemp_10:
   \   0000017C   0600A0E1           MOV      R0,R6
   \   00000180   0710A0E1           MOV      R1,R7
   \   00000184   ........           _BLF     __doubleToFloat,??__doubleToFloat??rA
   \   00000188   ........           _BLF     ??HydrometerCorrection,??HydrometerCorrection??rA
   \   0000018C   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   00000190   0420A0E1           MOV      R2,R4
   \   00000194   0530A0E1           MOV      R3,R5
   \   00000198   ........           _BLF     __dMul,??__dMul??rA
   \   0000019C   0040A0E1           MOV      R4,R0
   1949                  Vcf   = FindVcf(RhoT, dT, Vcf_59D_and_60D_Calc);
   \   000001A0   ........           LDR      R0,??DataTable106  ;; ??Vcf_59D_and_60D_Calc
   \   000001A4   BFFFFFEA           B        ??DensityToVcfAtTemp_5
   1950                  break;
   1951              case CTY_API_53E:
   1952              case CTY_API_54E:
   1953                  Vcf   = Ctl_LPG_Calc_53E(RhoT, Temp);
   \                     ??DensityToVcfAtTemp_11:
   \   000001A8   0820A0E1           MOV      R2,R8
   \   000001AC   0930A0E1           MOV      R3,R9
   \   000001B0   0400A0E1           MOV      R0,R4
   \   000001B4   0510A0E1           MOV      R1,R5
   \   000001B8   ........           _BLF     ??Ctl_LPG_Calc_53E,??Ctl_LPG_Calc_53E??rA
   \   000001BC   040000EA           B        ??DensityToVcfAtTemp_3
   1954                  break;
   1955              case CTY_API_59E:
   1956              case CTY_API_60E:
   1957                  Vcf   = Ctl_LPG_Calc_59E(RhoT, Temp);
   \                     ??DensityToVcfAtTemp_12:
   \   000001C0   0820A0E1           MOV      R2,R8
   \   000001C4   0930A0E1           MOV      R3,R9
   \   000001C8   0400A0E1           MOV      R0,R4
   \   000001CC   0510A0E1           MOV      R1,R5
   \   000001D0   ........           _BLF     ??Ctl_LPG_Calc_59E,??Ctl_LPG_Calc_59E??rA
   1958                  break;
   1959              } // End main switch
   1960              return (Vcf);
   \                     ??DensityToVcfAtTemp_3:
   \   000001D4   F047BDE8           POP      {R4-R10,LR}
   \   000001D8   ........           B        ??Subroutine49_0
   1961          }
   1962          

   \                                 In segment CODE, align 4, keep-with-next
   1963          int CargoTypeObject::InputBasicCargoType(int CType) {
   \                     ??InputBasicCargoType:
   \   00000000   F0432DE9           PUSH     {R4-R9,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0120A0E1           MOV      R2,R1
   1964              BaseCargoType = CType;
   \   0000000C   F02084E5           STR      R2,[R4, #+240]
   1965              if ( CargoTypeKey  == CTY_NOT_DEFINED ) {
   \   00000010   EC0094E5           LDR      R0,[R4, #+236]
   1966                  Colour = ColorTable[BaseCargoType];
   1967              }
   1968              switch ( CType ) {
   \   00000014   0230A0E1           MOV      R3,R2
   \   00000018   010070E3           CMN      R0,#+1
   \   0000001C   0100A001           MOVEQ    R0,R1
   \   00000020   ........           LDREQ    R1,??DataTable107  ;; ??ColorTable
   \   00000024   00019107           LDREQ    R0,[R1, +R0, LSL #+2]
   \   00000028   F4008405           STREQ    R0,[R4, #+244]
   \   0000002C   B46094E5           LDR      R6,[R4, #+180]
   \   00000030   B87094E5           LDR      R7,[R4, #+184]
   \   00000034   BC0094E5           LDR      R0,[R4, #+188]
   \   00000038   C01094E5           LDR      R1,[R4, #+192]
   \   0000003C   CC8094E5           LDR      R8,[R4, #+204]
   \   00000040   D09094E5           LDR      R9,[R4, #+208]
   \   00000044   310053E3           CMP      R3,#+49
   \   00000048   2B00008A           BHI      ??InputBasicCargoType_3
   \   0000004C   025F8FE2           ADR      R5,??InputBasicCargoType_1
   \   00000050   8330A0E1           MOV      R3,R3, LSL #+1
   \   00000054   B35095E1           LDRH     R5,[R5, R3]
   \   00000058   05F18FE0           ADD      PC,PC,R5, LSL #+2
   \                     ??InputBasicCargoType_1:
   \   0000005C   340042001800       DC16     +52,+66,+24,+46
   \              2E00        
   \   00000064   300032002C00       DC16     +48,+50,+44,+42
   \              2A00        
   \   0000006C   4B004B004B00       DC16     +75,+75,+75,+287
   \              1F01        
   \   00000074   1F011F014B00       DC16     +287,+287,+75,+75
   \              4B00        
   \   0000007C   4B0047014701       DC16     +75,+327,+327,+327
   \              4701        
   \   00000084   4B004B004B00       DC16     +75,+75,+75,+287
   \              1F01        
   \   0000008C   4B0047014B00       DC16     +75,+327,+75,+333
   \              4D01        
   \   00000094   4D014D014D01       DC16     +333,+333,+333,+333
   \              4D01        
   \   0000009C   4D014D014D01       DC16     +333,+333,+333,+333
   \              4D01        
   \   000000A4   4D014D014D01       DC16     +333,+333,+333,+333
   \              4D01        
   \   000000AC   4D014D014D01       DC16     +333,+333,+333,+333
   \              4D01        
   \   000000B4   4D014D014D01       DC16     +333,+333,+333,+333
   \              4D01        
   \   000000BC   4D014D01           DC16     +333,+333
   1969              case CTY_BALLAST:
   1970                  OD1      = PROSystemData::BallastDensity;
   \                     ??InputBasicCargoType_4:
   \   000000C0   ........           LDR      R0,??DataTable144  ;; ??BallastDensity
   \                     ??InputBasicCargoType_5:
   \   000000C4   000090E5           LDR      R0,[R0, #+0]
   \   000000C8   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   000000CC   B40084E5           STR      R0,[R4, #+180]
   \   000000D0   B81084E5           STR      R1,[R4, #+184]
   1971                  OD2      = PROSystemData::BallastDensity;
   \   000000D4   BC0084E5           STR      R0,[R4, #+188]
   \   000000D8   C01084E5           STR      R1,[R4, #+192]
   1972                  Coeff    = 0.0;
   \   000000DC   0000A0E3           MOV      R0,#+0
   \   000000E0   0010A0E3           MOV      R1,#+0
   \   000000E4   D40084E5           STR      R0,[R4, #+212]
   \   000000E8   D81084E5           STR      R1,[R4, #+216]
   1973                  RefTmp1  = SI_REFTMP;
   \   000000EC   4014A0E3           MOV      R1,#+1073741824
   \   000000F0   B81981E3           ORR      R1,R1,#0x2E0000
   \   000000F4   C40084E5           STR      R0,[R4, #+196]
   \   000000F8   C81084E5           STR      R1,[R4, #+200]
   1974                  break;
   1975              case CTY_SEA:
   1976                  OD1      = PROSystemData::SeaWaterDensity;
   1977                  OD2      = PROSystemData::SeaWaterDensity;
   1978                  Coeff    = 0.0;
   1979                  RefTmp1  = SI_REFTMP;
   1980                  break;
   1981              case CTY_FW:
   1982                  OD1      = PROSystemData::FreshWaterDensity;
   1983                  OD2      = PROSystemData::FreshWaterDensity;
   1984                  Coeff    = 0.0;
   1985                  RefTmp1  = SI_REFTMP;
   1986                  break;
   1987              case CTY_HFO:
   1988                  OD1      = PROSystemData::HeavyFuelDensity;
   1989                  OD2      = PROSystemData::HeavyFuelDensity;
   1990                  Coeff    = 0.0;
   1991                  RefTmp1  = SI_REFTMP;
   1992                  break;
   1993              case CTY_DO:
   1994                  OD1      = PROSystemData::DieselDensity;
   1995                  OD2      = PROSystemData::DieselDensity;
   1996                  Coeff    = 0.0;
   1997                  RefTmp1  = SI_REFTMP;
   1998                  break;
   1999              case CTY_LUB:
   2000                  OD1      = PROSystemData::LubricantsDensity;
   2001                  OD2      = PROSystemData::LubricantsDensity;
   2002                  Coeff    = 0.0;
   2003                  RefTmp1  = SI_REFTMP;
   2004                  break;
   2005              case CTY_SIMPLE_LIN:
   2006                  OD2      = OD1;
   2007                  RefTmp1  = SI_REFTMP;
   2008                  RefTmp2  = 35.0;
   2009                  Coeff    = 0.000;
   2010                  break;
   2011              case CTY_LINEAR:
   2012                  RefTmp1  = SI_REFTMP;
   2013                  RefTmp2  = 35.0;
   2014                  break;
   2015              case CTY_API_6A :
   2016              case CTY_API_6B :
   2017              case CTY_API_6D :
   2018              case CTY_API_54A:
   2019              case CTY_API_54B:
   2020              case CTY_API_54D:
   2021              case CTY_API_54E:
   2022              case CTY_API_60A:
   2023              case CTY_API_60B:
   2024              case CTY_API_60D:
   2025              case CTY_API_60E:
   2026                  {
   2027                      double Vcf;
   2028                      switch ( CType ) {
   2029                      case CTY_API_6A     :
   2030                          RefTmp1 = API_REFTMP;
   2031                          Vcf     = Vcf_6_and_54A_Calc(OD1, RefTmp2 - RefTmp1, NULL, false);
   2032                          break;
   2033                      case CTY_API_54A    :
   2034                          RefTmp1 = SI_REFTMP;
   2035                          Vcf     = Vcf_6_and_54A_Calc(OD1, RefTmp2 - RefTmp1, NULL, false);
   2036                          break;
   2037                      case CTY_API_60A    :
   2038                          RefTmp1 = IP_REFTMP;
   2039                          Vcf     = Vcf_59A_and_60A_Calc(OD1, RefTmp2 - RefTmp1, NULL, false);
   2040                          break;
   2041                      case CTY_API_60B    :
   2042                          RefTmp1 = IP_REFTMP;
   2043                          Vcf     = Vcf_59B_and_60B_Calc(OD1, RefTmp2 - RefTmp1, NULL, false);
   2044                          break;
   2045                      case CTY_API_60D    :
   2046                          RefTmp1 = IP_REFTMP;
   2047                          Vcf     = Vcf_59D_and_60D_Calc(OD1, RefTmp2 - RefTmp1, NULL, false);
   2048                          break;
   2049                      case CTY_API_53E    :
   2050                      case CTY_API_54E    :
   2051                          RefTmp1 = SI_REFTMP;
   2052                          if ( OD1 < A53E_MIN_DNS ) {
   2053                              OD1 = A53E_MIN_DNS;
   2054                          } else if ( OD1 > A53E_MAX_DNS ) {
   2055                              OD1 = A53E_MAX_DNS;
   2056                          }
   2057                          Vcf     = Ctl_LPG_Calc_54E(OD1, RefTmp2);
   2058                          break;
   2059                      case CTY_API_59E    :
   2060                      case CTY_API_60E    :
   2061                          RefTmp1 = IP_REFTMP;
   2062                          if ( OD1 < A59E_MIN_DNS ) {
   2063                              OD1 = A59E_MIN_DNS;
   2064                          } else if ( OD1 > A59E_MAX_DNS ) {
   2065                              OD1 = A59E_MAX_DNS;
   2066                          }
   2067                          Vcf     = Ctl_LPG_Calc_60E(OD1, RefTmp2);
   2068                          break;
   2069                      case CTY_API_6B     :
   2070                          RefTmp1 = API_REFTMP;
   2071                          Vcf     = Vcf_6_and_54B_Calc(OD1, RefTmp2 - RefTmp1, NULL, false);
   2072                          break;
   2073                      case CTY_API_54B    :
   2074                          RefTmp1 = SI_REFTMP;
   2075                          Vcf     = Vcf_6_and_54B_Calc(OD1, RefTmp2 - RefTmp1, NULL, false);
   2076                          break;
   2077                      case CTY_API_6D   :
   2078                          RefTmp1 = API_REFTMP;
   2079                          Vcf     = Vcf_6_and_54D_Calc(OD1, RefTmp2 - RefTmp1, NULL, false);
   2080                          break;
   2081                      case CTY_API_54D   :
   2082                          RefTmp1 = SI_REFTMP;
   2083                          Vcf     = Vcf_6_and_54D_Calc(OD1, RefTmp2 - RefTmp1, NULL, false);
   2084                          break;
   2085                      }
   2086                      // Let us round off as in API
   2087                      Vcf = APIRound(Vcf, 4);
   2088                      OD2 = OD1 * Vcf;
   2089                      Coeff = -(OD2 - OD1) / (RefTmp2 - RefTmp1);
   2090                  }
   2091                  ActualTemp = RefTmp2;
   2092                  break;
   2093              case CTY_API_53A:
   2094              case CTY_API_53B:
   2095              case CTY_API_53D:
   2096              case CTY_API_53E:
   2097                  {
   2098                      OD1   = Dns_at_T_to_RefDns(OD2, RefTmp2);
   2099                      double dT = RefTmp2 - RefTmp1;
   2100                      if ( fabs(dT) > 1.0 ) {
   2101                          Coeff = -(OD2 - OD1) / dT;
   2102                      } else {
   2103                          Coeff = 0.0;
   2104                      }
   2105                  }
   2106                  ActualTemp = RefTmp2;
   2107                  break;
   2108              case CTY_API_59A:
   2109              case CTY_API_59B:
   2110              case CTY_API_59D:
   2111              case CTY_API_59E:
   2112                  {
   2113                      RefTmp1     = IP_REFTMP;
   2114                      OD1         = Dns_at_T_to_RefDns(OD2, RefTmp2);
   2115                      double dT   = RefTmp2 - RefTmp1;
   2116                      if ( fabs(dT) > 1.0 ) {
   2117                          Coeff = -(OD2 - OD1) / dT;
   2118                      } else {
   2119                          Coeff = 0.0;
   2120                      }
   2121                  }
   2122                  ActualTemp = RefTmp2;
   2123                  break;
   2124              case CTY_GAS_AMMONIA      :
   2125              case CTY_GAS_BUTADIEN     :
   2126              case CTY_GAS_ISOBUTYLENE  :
   2127              case CTY_GAS_PROPYLENE    :
   2128              case CTY_GAS_PROPENOXIDE  :
   2129              case CTY_GAS_BUTANE         :
   2130              case CTY_GAS_PROPANE        :
   2131              case CTY_GAS_N_BUTANE       :
   2132              case CTY_GAS_ISO_BUTANE     :
   2133              case CTY_GAS_1_BUTANE       :
   2134              case CTY_GAS_CRUDE_C4       :
   2135              case CTY_GAS_RAFFINATE_1    :
   2136              case CTY_GAS_RAFFINATE_2    :
   2137              case CTY_GAS_PROPYLENE_REF  :
   2138              case CTY_GAS_GASOLIE        :
   2139              case CTY_GAS_FLEXICOKER_LPG :
   2140              case CTY_GAS_SULPHUR_1      :
   2141              case CTY_GAS_SULPHUR_2      :
   2142              case CTY_GAS_SULPHUR_3      :
   2143              case CTY_GAS_SULPHUR_4      :
   2144              case CTY_GAS_SULPHUR_5      :
   2145              case CTY_GAS_SULPHUR_6      :
   2146              case CTY_GAS_VYNILCHLORIDE:
   2147                  RefTmp1 = SI_REFTMP;
   2148                  {
   2149                      int ProductIndex = BaseCargoType - CTY_GAS_AMMONIA;
   2150                      GasProduct *GasPtr = (GasProduct *)&Product[ProductIndex];
   2151                      if ( GasPtr->TabEntries ) {
   2152                          OD1 = GetLiqDensityFromTable(RefTmp1, GasPtr->DnsTable, GasPtr->TabEntries);
   2153                          OD2 = GetLiqDensityFromTable(RefTmp2, GasPtr->DnsTable, GasPtr->TabEntries);
   2154                          RefTmp2 = 35.0;
   2155                      } else {
   2156                          OD1 = ChemgasPureGasCalcLiquid(GasPtr->Q, GasPtr->F, GasPtr->A, GasPtr->B, RefTmp1);
   2157                          OD2 = ChemgasPureGasCalcLiquid(GasPtr->Q, GasPtr->F, GasPtr->A, GasPtr->B, RefTmp2);
   2158                          RefTmp2 = 30.0;
   2159                      }
   2160                      Coeff = -(OD2 - OD1) / (RefTmp2 - RefTmp1);
   2161                  }
   2162                  ActualTemp = RefTmp2;
   2163                  break;
   2164              }
   2165              return (E_NO_ERR);
   \                     ??InputBasicCargoType_3:
   \   000000FC   F043BDE8           POP      {R4-R9,LR}
   \   00000100   0000A0E3           MOV      R0,#+0
   \   00000104   1EFF2FE1           BX       LR               ;; return
   \                     ??InputBasicCargoType_6:
   \   00000108   ........           LDR      R0,??DataTable143  ;; ??SeaWaterDensity
   \   0000010C   ECFFFFEA           B        ??InputBasicCargoType_5
   \                     ??InputBasicCargoType_7:
   \   00000110   ........           LDR      R0,??DataTable145  ;; ??FreshWaterDensity
   \   00000114   EAFFFFEA           B        ??InputBasicCargoType_5
   \                     ??InputBasicCargoType_8:
   \   00000118   ........           LDR      R0,??DataTable146  ;; ??HeavyFuelDensity
   \   0000011C   E8FFFFEA           B        ??InputBasicCargoType_5
   \                     ??InputBasicCargoType_9:
   \   00000120   ........           LDR      R0,??DataTable147  ;; ??DieselDensity
   \   00000124   E6FFFFEA           B        ??InputBasicCargoType_5
   \                     ??InputBasicCargoType_10:
   \   00000128   ........           LDR      R0,??DataTable148  ;; ??LubricantsDensity
   \   0000012C   E4FFFFEA           B        ??InputBasicCargoType_5
   \                     ??InputBasicCargoType_11:
   \   00000130   BC6084E5           STR      R6,[R4, #+188]
   \   00000134   C07084E5           STR      R7,[R4, #+192]
   \   00000138   0000A0E3           MOV      R0,#+0
   \   0000013C   4014A0E3           MOV      R1,#+1073741824
   \   00000140   B81981E3           ORR      R1,R1,#0x2E0000
   \   00000144   C40084E5           STR      R0,[R4, #+196]
   \   00000148   C81084E5           STR      R1,[R4, #+200]
   \   0000014C   4E1981E2           ADD      R1,R1,#+1277952
   \   00000150   CC0084E5           STR      R0,[R4, #+204]
   \   00000154   D01084E5           STR      R1,[R4, #+208]
   \   00000158   0010A0E3           MOV      R1,#+0
   \   0000015C   D40084E5           STR      R0,[R4, #+212]
   \   00000160   D81084E5           STR      R1,[R4, #+216]
   \   00000164   E4FFFFEA           B        ??InputBasicCargoType_3
   \                     ??InputBasicCargoType_12:
   \   00000168   0000A0E3           MOV      R0,#+0
   \   0000016C   4014A0E3           MOV      R1,#+1073741824
   \   00000170   B81981E3           ORR      R1,R1,#0x2E0000
   \   00000174   C40084E5           STR      R0,[R4, #+196]
   \   00000178   C81084E5           STR      R1,[R4, #+200]
   \   0000017C   4E1981E2           ADD      R1,R1,#+1277952
   \   00000180   CC0084E5           STR      R0,[R4, #+204]
   \   00000184   D01084E5           STR      R1,[R4, #+208]
   \   00000188   DBFFFFEA           B        ??InputBasicCargoType_3
   \                     ??InputBasicCargoType_13:
   \   0000018C   082042E2           SUB      R2,R2,#+8
   \   00000190   120052E3           CMP      R2,#+18
   \   00000194   C600008A           BHI      ??InputBasicCargoType_14
   \   00000198   013F8FE2           ADR      R3,??InputBasicCargoType_2
   \   0000019C   0230D3E7           LDRB     R3,[R3, R2]
   \   000001A0   03F18FE0           ADD      PC,PC,R3, LSL #+2
   \                     ??InputBasicCargoType_2:
   \   000001A4   048FA9C3           DC8      +4,+143,+169,+195
   \   000001A8   C3C316A1           DC8      +195,+195,+22,+161
   \   000001AC   B2C3C3C3           DC8      +178,+195,+195,+195
   \   000001B0   1E2F4051           DC8      +30,+47,+64,+81
   \   000001B4   51707000           DC8      +81,+112,+112,+0
   \                     ??InputBasicCargoType_15:
   \   000001B8   ........           LDR      R0,??DataTable141  ;; 0xffffffffc71c71c7
   \   000001BC   ........           LDR      R1,??DataTable142  ;; 0x402f1c71
   \   000001C0   C40084E5           STR      R0,[R4, #+196]
   \   000001C4   C81084E5           STR      R1,[R4, #+200]
   \   000001C8   0000A0E3           MOV      R0,#+0
   \   000001CC   01002DE9           PUSH     {R0}
   \   000001D0   01002DE9           PUSH     {R0}
   \   000001D4   ........           LDR      R0,??DataTable141  ;; 0xffffffffc71c71c7
   \                     ??InputBasicCargoType_16:
   \   000001D8   801481E3           ORR      R1,R1,#0x80000000
   \   000001DC   0820A0E1           MOV      R2,R8
   \   000001E0   0930A0E1           MOV      R3,R9
   \   000001E4   ........           _BLF     __dAdd,??__dAdd??rA
   \   000001E8   0020A0E1           MOV      R2,R0
   \   000001EC   0130A0E1           MOV      R3,R1
   \   000001F0   0600A0E1           MOV      R0,R6
   \   000001F4   0710A0E1           MOV      R1,R7
   \   000001F8   ........           _BLF     ??Vcf_6_and_54A_Calc,??Vcf_6_and_54A_Calc??rA
   \   000001FC   AB0000EA           B        ??InputBasicCargoType_17
   \                     ??InputBasicCargoType_18:
   \   00000200   0000A0E3           MOV      R0,#+0
   \   00000204   4014A0E3           MOV      R1,#+1073741824
   \   00000208   B81981E3           ORR      R1,R1,#0x2E0000
   \   0000020C   C40084E5           STR      R0,[R4, #+196]
   \   00000210   C81084E5           STR      R1,[R4, #+200]
   \   00000214   01002DE9           PUSH     {R0}
   \   00000218   01002DE9           PUSH     {R0}
   \   0000021C   EDFFFFEA           B        ??InputBasicCargoType_16
   \                     ??InputBasicCargoType_19:
   \   00000220   0000A0E3           MOV      R0,#+0
   \   00000224   4014A0E3           MOV      R1,#+1073741824
   \   00000228   D01981E3           ORR      R1,R1,#0x340000
   \   0000022C   C40084E5           STR      R0,[R4, #+196]
   \   00000230   C81084E5           STR      R1,[R4, #+200]
   \   00000234   01002DE9           PUSH     {R0}
   \   00000238   01002DE9           PUSH     {R0}
   \   0000023C   801481E3           ORR      R1,R1,#0x80000000
   \   00000240   0820A0E1           MOV      R2,R8
   \   00000244   0930A0E1           MOV      R3,R9
   \   00000248   ........           _BLF     __dAdd,??__dAdd??rA
   \   0000024C   0020A0E1           MOV      R2,R0
   \   00000250   0130A0E1           MOV      R3,R1
   \   00000254   0600A0E1           MOV      R0,R6
   \   00000258   0710A0E1           MOV      R1,R7
   \   0000025C   ........           _BLF     ??Vcf_59A_and_60A_Calc,??Vcf_59A_and_60A_Calc??rA
   \   00000260   920000EA           B        ??InputBasicCargoType_17
   \                     ??InputBasicCargoType_20:
   \   00000264   0000A0E3           MOV      R0,#+0
   \   00000268   4014A0E3           MOV      R1,#+1073741824
   \   0000026C   D01981E3           ORR      R1,R1,#0x340000
   \   00000270   C40084E5           STR      R0,[R4, #+196]
   \   00000274   C81084E5           STR      R1,[R4, #+200]
   \   00000278   01002DE9           PUSH     {R0}
   \   0000027C   01002DE9           PUSH     {R0}
   \   00000280   801481E3           ORR      R1,R1,#0x80000000
   \   00000284   0820A0E1           MOV      R2,R8
   \   00000288   0930A0E1           MOV      R3,R9
   \   0000028C   ........           _BLF     __dAdd,??__dAdd??rA
   \   00000290   0020A0E1           MOV      R2,R0
   \   00000294   0130A0E1           MOV      R3,R1
   \   00000298   0600A0E1           MOV      R0,R6
   \   0000029C   0710A0E1           MOV      R1,R7
   \   000002A0   ........           _BLF     ??Vcf_59B_and_60B_Calc,??Vcf_59B_and_60B_Calc??rA
   \   000002A4   810000EA           B        ??InputBasicCargoType_17
   \                     ??InputBasicCargoType_21:
   \   000002A8   0000A0E3           MOV      R0,#+0
   \   000002AC   4014A0E3           MOV      R1,#+1073741824
   \   000002B0   D01981E3           ORR      R1,R1,#0x340000
   \   000002B4   C40084E5           STR      R0,[R4, #+196]
   \   000002B8   C81084E5           STR      R1,[R4, #+200]
   \   000002BC   01002DE9           PUSH     {R0}
   \   000002C0   01002DE9           PUSH     {R0}
   \   000002C4   801481E3           ORR      R1,R1,#0x80000000
   \   000002C8   0820A0E1           MOV      R2,R8
   \   000002CC   0930A0E1           MOV      R3,R9
   \   000002D0   ........           _BLF     __dAdd,??__dAdd??rA
   \   000002D4   0020A0E1           MOV      R2,R0
   \   000002D8   0130A0E1           MOV      R3,R1
   \   000002DC   0600A0E1           MOV      R0,R6
   \   000002E0   0710A0E1           MOV      R1,R7
   \   000002E4   ........           _BLF     ??Vcf_59D_and_60D_Calc,??Vcf_59D_and_60D_Calc??rA
   \   000002E8   700000EA           B        ??InputBasicCargoType_17
   \                     ??InputBasicCargoType_22:
   \   000002EC   ........           LDR      R2,??DataTable119  ;; 0xffffffffb780346e
   \   000002F0   ........           LDR      R3,??DataTable120  ;; 0x3fd68240
   \   000002F4   0000A0E3           MOV      R0,#+0
   \   000002F8   4014A0E3           MOV      R1,#+1073741824
   \   000002FC   B81981E3           ORR      R1,R1,#0x2E0000
   \   00000300   C40084E5           STR      R0,[R4, #+196]
   \   00000304   C81084E5           STR      R1,[R4, #+200]
   \   00000308   0600A0E1           MOV      R0,R6
   \   0000030C   0710A0E1           MOV      R1,R7
   \   00000310   ........           _BLF     __dLess,??__dLess??rA
   \   00000314   000050E3           CMP      R0,#+0
   \   00000318   ........           LDRNE    R0,??DataTable119  ;; 0xffffffffb780346e
   \   0000031C   ........           LDRNE    R1,??DataTable120  ;; 0x3fd68240
   \   00000320   0800001A           BNE      ??InputBasicCargoType_23
   \   00000324   ........           LDR      R2,??DataTable121  ;; 0x25460aa7
   \   00000328   ........           LDR      R3,??DataTable123  ;; 0x3fe60275
   \   0000032C   0600A0E1           MOV      R0,R6
   \   00000330   0710A0E1           MOV      R1,R7
   \   00000334   ........           _BLF     __dGreaterEqual,??__dGreaterEqual??rA
   \   00000338   000050E3           CMP      R0,#+0
   \   0000033C   0300000A           BEQ      ??InputBasicCargoType_24
   \   00000340   B8039FE5           LDR      R0,??InputBasicCargoType_25  ;; 0x25460aa6
   \   00000344   ........           LDR      R1,??DataTable123  ;; 0x3fe60275
   \                     ??InputBasicCargoType_23:
   \   00000348   B40084E5           STR      R0,[R4, #+180]
   \   0000034C   B81084E5           STR      R1,[R4, #+184]
   \                     ??InputBasicCargoType_24:
   \   00000350   B40094E5           LDR      R0,[R4, #+180]
   \   00000354   B81094E5           LDR      R1,[R4, #+184]
   \   00000358   0820A0E1           MOV      R2,R8
   \   0000035C   0930A0E1           MOV      R3,R9
   \   00000360   ........           _BLF     ??Ctl_LPG_Calc_54E,??Ctl_LPG_Calc_54E??rA
   \   00000364   520000EA           B        ??InputBasicCargoType_14
   \                     ??InputBasicCargoType_26:
   \   00000368   ........           LDR      R2,??DataTable126  ;; 0xffffffffa3055326
   \   0000036C   ........           LDR      R3,??DataTable127  ;; 0x3fd53a92
   \   00000370   0000A0E3           MOV      R0,#+0
   \   00000374   4014A0E3           MOV      R1,#+1073741824
   \   00000378   D01981E3           ORR      R1,R1,#0x340000
   \   0000037C   C40084E5           STR      R0,[R4, #+196]
   \   00000380   C81084E5           STR      R1,[R4, #+200]
   \   00000384   0600A0E1           MOV      R0,R6
   \   00000388   0710A0E1           MOV      R1,R7
   \   0000038C   ........           _BLF     __dLess,??__dLess??rA
   \   00000390   000050E3           CMP      R0,#+0
   \   00000394   ........           LDRNE    R0,??DataTable126  ;; 0xffffffffa3055326
   \   00000398   ........           LDRNE    R1,??DataTable127  ;; 0x3fd53a92
   \   0000039C   0800001A           BNE      ??InputBasicCargoType_27
   \   000003A0   ........           LDR      R2,??DataTable128  ;; 0x1b71758f
   \   000003A4   ........           LDR      R3,??DataTable130  ;; 0x3fe5e00d
   \   000003A8   0600A0E1           MOV      R0,R6
   \   000003AC   0710A0E1           MOV      R1,R7
   \   000003B0   ........           _BLF     __dGreaterEqual,??__dGreaterEqual??rA
   \   000003B4   000050E3           CMP      R0,#+0
   \   000003B8   0300000A           BEQ      ??InputBasicCargoType_28
   \   000003BC   40039FE5           LDR      R0,??InputBasicCargoType_25+0x4  ;; 0x1b71758e
   \   000003C0   ........           LDR      R1,??DataTable130  ;; 0x3fe5e00d
   \                     ??InputBasicCargoType_27:
   \   000003C4   B40084E5           STR      R0,[R4, #+180]
   \   000003C8   B81084E5           STR      R1,[R4, #+184]
   \                     ??InputBasicCargoType_28:
   \   000003CC   B40094E5           LDR      R0,[R4, #+180]
   \   000003D0   B81094E5           LDR      R1,[R4, #+184]
   \   000003D4   0820A0E1           MOV      R2,R8
   \   000003D8   0930A0E1           MOV      R3,R9
   \   000003DC   ........           _BLF     ??Ctl_LPG_Calc_60E,??Ctl_LPG_Calc_60E??rA
   \   000003E0   330000EA           B        ??InputBasicCargoType_14
   \                     ??InputBasicCargoType_29:
   \   000003E4   ........           LDR      R0,??DataTable141  ;; 0xffffffffc71c71c7
   \   000003E8   ........           LDR      R1,??DataTable142  ;; 0x402f1c71
   \   000003EC   C40084E5           STR      R0,[R4, #+196]
   \   000003F0   C81084E5           STR      R1,[R4, #+200]
   \   000003F4   0000A0E3           MOV      R0,#+0
   \   000003F8   01002DE9           PUSH     {R0}
   \   000003FC   01002DE9           PUSH     {R0}
   \   00000400   ........           LDR      R0,??DataTable141  ;; 0xffffffffc71c71c7
   \                     ??InputBasicCargoType_30:
   \   00000404   801481E3           ORR      R1,R1,#0x80000000
   \   00000408   0820A0E1           MOV      R2,R8
   \   0000040C   0930A0E1           MOV      R3,R9
   \   00000410   ........           _BLF     __dAdd,??__dAdd??rA
   \   00000414   0020A0E1           MOV      R2,R0
   \   00000418   0130A0E1           MOV      R3,R1
   \   0000041C   0600A0E1           MOV      R0,R6
   \   00000420   0710A0E1           MOV      R1,R7
   \   00000424   ........           _BLF     ??Vcf_6_and_54B_Calc,??Vcf_6_and_54B_Calc??rA
   \   00000428   200000EA           B        ??InputBasicCargoType_17
   \                     ??InputBasicCargoType_31:
   \   0000042C   0000A0E3           MOV      R0,#+0
   \   00000430   4014A0E3           MOV      R1,#+1073741824
   \   00000434   B81981E3           ORR      R1,R1,#0x2E0000
   \   00000438   C40084E5           STR      R0,[R4, #+196]
   \   0000043C   C81084E5           STR      R1,[R4, #+200]
   \   00000440   01002DE9           PUSH     {R0}
   \   00000444   01002DE9           PUSH     {R0}
   \   00000448   EDFFFFEA           B        ??InputBasicCargoType_30
   \                     ??InputBasicCargoType_32:
   \   0000044C   ........           LDR      R0,??DataTable141  ;; 0xffffffffc71c71c7
   \   00000450   ........           LDR      R1,??DataTable142  ;; 0x402f1c71
   \   00000454   C40084E5           STR      R0,[R4, #+196]
   \   00000458   C81084E5           STR      R1,[R4, #+200]
   \   0000045C   0000A0E3           MOV      R0,#+0
   \   00000460   01002DE9           PUSH     {R0}
   \   00000464   01002DE9           PUSH     {R0}
   \   00000468   ........           LDR      R0,??DataTable141  ;; 0xffffffffc71c71c7
   \   0000046C   060000EA           B        ??InputBasicCargoType_33
   \                     ??InputBasicCargoType_34:
   \   00000470   0000A0E3           MOV      R0,#+0
   \   00000474   4014A0E3           MOV      R1,#+1073741824
   \   00000478   B81981E3           ORR      R1,R1,#0x2E0000
   \   0000047C   C40084E5           STR      R0,[R4, #+196]
   \   00000480   C81084E5           STR      R1,[R4, #+200]
   \   00000484   01002DE9           PUSH     {R0}
   \   00000488   01002DE9           PUSH     {R0}
   \                     ??InputBasicCargoType_33:
   \   0000048C   801481E3           ORR      R1,R1,#0x80000000
   \   00000490   0820A0E1           MOV      R2,R8
   \   00000494   0930A0E1           MOV      R3,R9
   \   00000498   ........           _BLF     __dAdd,??__dAdd??rA
   \   0000049C   0020A0E1           MOV      R2,R0
   \   000004A0   0130A0E1           MOV      R3,R1
   \   000004A4   0600A0E1           MOV      R0,R6
   \   000004A8   0710A0E1           MOV      R1,R7
   \   000004AC   ........           _BLF     ??Vcf_6_and_54D_Calc,??Vcf_6_and_54D_Calc??rA
   \                     ??InputBasicCargoType_17:
   \   000004B0   08D08DE2           ADD      SP,SP,#+8        ;; stack cleaning
   \                     ??InputBasicCargoType_14:
   \   000004B4   0420A0E3           MOV      R2,#+4
   \   000004B8   ........           _BLF     ??APIRound,??APIRound??rA
   \   000004BC   0020A0E1           MOV      R2,R0
   \   000004C0   B40094E5           LDR      R0,[R4, #+180]
   \   000004C4   0130A0E1           MOV      R3,R1
   \   000004C8   B81094E5           LDR      R1,[R4, #+184]
   \   000004CC   ........           _BLF     __dMul,??__dMul??rA
   \   000004D0   0080A0E1           MOV      R8,R0
   \   000004D4   0190A0E1           MOV      R9,R1
   \   000004D8   7A0000EA           B        ??InputBasicCargoType_35
   \                     ??InputBasicCargoType_36:
   \   000004DC   00032DE9           PUSH     {R8,R9}
   \   000004E0   0800BDE8           POP      {R3}
   \   000004E4   0120A0E1           MOV      R2,R1
   \   000004E8   0010A0E1           MOV      R1,R0
   \   000004EC   0400A0E1           MOV      R0,R4
   \   000004F0   ........           BL       ??Dns_at_T_to_RefDns
   \   000004F4   B40084E5           STR      R0,[R4, #+180]
   \   000004F8   B81084E5           STR      R1,[R4, #+184]
   \   000004FC   CC0094E5           LDR      R0,[R4, #+204]
   \   00000500   D01094E5           LDR      R1,[R4, #+208]
   \   00000504   C42094E5           LDR      R2,[R4, #+196]
   \   00000508   C83094E5           LDR      R3,[R4, #+200]
   \   0000050C   ........           _BLF     __dSub,??__dSub??rA
   \   00000510   0060A0E1           MOV      R6,R0
   \   00000514   0170A0E1           MOV      R7,R1
   \   00000518   8014C1E3           BIC      R1,R1,#0x80000000
   \   0000051C   0120A0E3           MOV      R2,#+1
   \   00000520   C035A0E3           MOV      R3,#+805306368
   \   00000524   FF3683E3           ORR      R3,R3,#0xFF00000
   \   00000528   04D08DE2           ADD      SP,SP,#+4
   \   0000052C   ........           _BLF     __dGreaterEqual,??__dGreaterEqual??rA
   \   00000530   000050E3           CMP      R0,#+0
   \   00000534   0800000A           BEQ      ??InputBasicCargoType_37
   \   00000538   B40094E5           LDR      R0,[R4, #+180]
   \   0000053C   B81094E5           LDR      R1,[R4, #+184]
   \   00000540   BC2094E5           LDR      R2,[R4, #+188]
   \   00000544   C03094E5           LDR      R3,[R4, #+192]
   \                     ??InputBasicCargoType_38:
   \   00000548   ........           _BLF     __dSub,??__dSub??rA
   \   0000054C   0620A0E1           MOV      R2,R6
   \   00000550   0730A0E1           MOV      R3,R7
   \   00000554   ........           _BLF     __dDiv,??__dDiv??rA
   \   00000558   000000EA           B        ??InputBasicCargoType_39
   \                     ??InputBasicCargoType_37:
   \   0000055C   0010A0E3           MOV      R1,#+0
   \                     ??InputBasicCargoType_39:
   \   00000560   D40084E5           STR      R0,[R4, #+212]
   \   00000564   D81084E5           STR      R1,[R4, #+216]
   \   00000568   CC0094E5           LDR      R0,[R4, #+204]
   \   0000056C   D01094E5           LDR      R1,[R4, #+208]
   \   00000570   ........           _BLF     __doubleToFloat,??__doubleToFloat??rA
   \   00000574   AC0084E5           STR      R0,[R4, #+172]
   \   00000578   DFFEFFEA           B        ??InputBasicCargoType_3
   \                     ??InputBasicCargoType_40:
   \   0000057C   0020A0E3           MOV      R2,#+0
   \   00000580   4034A0E3           MOV      R3,#+1073741824
   \   00000584   D03983E3           ORR      R3,R3,#0x340000
   \   00000588   C42084E5           STR      R2,[R4, #+196]
   \   0000058C   C83084E5           STR      R3,[R4, #+200]
   \   00000590   D1FFFFEA           B        ??InputBasicCargoType_36
   \                     ??InputBasicCargoType_41:
   \   00000594   ........           LDR      R3,??DataTable154  ;; Product
   \   00000598   0000A0E3           MOV      R0,#+0
   \   0000059C   4014A0E3           MOV      R1,#+1073741824
   \   000005A0   B81981E3           ORR      R1,R1,#0x2E0000
   \   000005A4   C40084E5           STR      R0,[R4, #+196]
   \   000005A8   C81084E5           STR      R1,[R4, #+200]
   \   000005AC   9B00E0E3           MVN      R0,#+155
   \   000005B0   450CC0E3           BIC      R0,R0,#0x4500
   \   000005B4   0210A0E1           MOV      R1,R2
   \   000005B8   A52FA0E3           MOV      R2,#+660
   \   000005BC   923121E0           MLA      R1,R2,R1,R3
   \   000005C0   015080E0           ADD      R5,R0,R1
   \   000005C4   600095E5           LDR      R0,[R5, #+96]
   \   000005C8   000050E3           CMP      R0,#+0
   \   000005CC   1700000A           BEQ      ??InputBasicCargoType_42
   \   000005D0   01002DE9           PUSH     {R0}
   \   000005D4   643085E2           ADD      R3,R5,#+100
   \   000005D8   4014A0E3           MOV      R1,#+1073741824
   \   000005DC   B82981E3           ORR      R2,R1,#0x2E0000
   \   000005E0   0010A0E3           MOV      R1,#+0
   \   000005E4   0400A0E1           MOV      R0,R4
   \   000005E8   ........           BL       ??GetLiqDensityFromTable
   \   000005EC   B40084E5           STR      R0,[R4, #+180]
   \   000005F0   B81084E5           STR      R1,[R4, #+184]
   \   000005F4   600095E5           LDR      R0,[R5, #+96]
   \   000005F8   643085E2           ADD      R3,R5,#+100
   \   000005FC   01002DE9           PUSH     {R0}
   \   00000600   CC1094E5           LDR      R1,[R4, #+204]
   \   00000604   D02094E5           LDR      R2,[R4, #+208]
   \   00000608   0400A0E1           MOV      R0,R4
   \   0000060C   ........           BL       ??GetLiqDensityFromTable
   \   00000610   0190A0E1           MOV      R9,R1
   \   00000614   EC109FE5           LDR      R1,??InputBasicCargoType_25+0x8  ;; 0x40418000
   \   00000618   0080A0E1           MOV      R8,R0
   \   0000061C   0000A0E3           MOV      R0,#+0
   \   00000620   CC0084E5           STR      R0,[R4, #+204]
   \   00000624   D01084E5           STR      R1,[R4, #+208]
   \   00000628   08D08DE2           ADD      SP,SP,#+8
   \   0000062C   250000EA           B        ??InputBasicCargoType_35
   \                     ??InputBasicCargoType_42:
   \   00000630   4014A0E3           MOV      R1,#+1073741824
   \   00000634   B81981E3           ORR      R1,R1,#0x2E0000
   \   00000638   03002DE9           PUSH     {R0,R1}
   \   0000063C   400095E5           LDR      R0,[R5, #+64]
   \   00000640   441095E5           LDR      R1,[R5, #+68]
   \   00000644   03002DE9           PUSH     {R0,R1}
   \   00000648   380095E5           LDR      R0,[R5, #+56]
   \   0000064C   3C1095E5           LDR      R1,[R5, #+60]
   \   00000650   03002DE9           PUSH     {R0,R1}
   \   00000654   302095E5           LDR      R2,[R5, #+48]
   \   00000658   343095E5           LDR      R3,[R5, #+52]
   \   0000065C   280095E5           LDR      R0,[R5, #+40]
   \   00000660   2C1095E5           LDR      R1,[R5, #+44]
   \   00000664   ........           _BLF     ??ChemgasPureGasCalcLiquid,??ChemgasPureGasCalcLiquid??rA
   \   00000668   B40084E5           STR      R0,[R4, #+180]
   \   0000066C   B81084E5           STR      R1,[R4, #+184]
   \   00000670   CC0094E5           LDR      R0,[R4, #+204]
   \   00000674   D01094E5           LDR      R1,[R4, #+208]
   \   00000678   03002DE9           PUSH     {R0,R1}
   \   0000067C   400095E5           LDR      R0,[R5, #+64]
   \   00000680   441095E5           LDR      R1,[R5, #+68]
   \   00000684   03002DE9           PUSH     {R0,R1}
   \   00000688   380095E5           LDR      R0,[R5, #+56]
   \   0000068C   3C1095E5           LDR      R1,[R5, #+60]
   \   00000690   03002DE9           PUSH     {R0,R1}
   \   00000694   302095E5           LDR      R2,[R5, #+48]
   \   00000698   343095E5           LDR      R3,[R5, #+52]
   \   0000069C   280095E5           LDR      R0,[R5, #+40]
   \   000006A0   2C1095E5           LDR      R1,[R5, #+44]
   \   000006A4   ........           _BLF     ??ChemgasPureGasCalcLiquid,??ChemgasPureGasCalcLiquid??rA
   \   000006A8   30D08DE2           ADD      SP,SP,#+48
   \   000006AC   0080A0E1           MOV      R8,R0
   \   000006B0   0190A0E1           MOV      R9,R1
   \   000006B4   0000A0E3           MOV      R0,#+0
   \   000006B8   4014A0E3           MOV      R1,#+1073741824
   \   000006BC   F81981E3           ORR      R1,R1,#0x3E0000
   \   000006C0   CC0084E5           STR      R0,[R4, #+204]
   \   000006C4   D01084E5           STR      R1,[R4, #+208]
   \                     ??InputBasicCargoType_35:
   \   000006C8   BC8084E5           STR      R8,[R4, #+188]
   \   000006CC   C09084E5           STR      R9,[R4, #+192]
   \   000006D0   CC0094E5           LDR      R0,[R4, #+204]
   \   000006D4   D01094E5           LDR      R1,[R4, #+208]
   \   000006D8   C42094E5           LDR      R2,[R4, #+196]
   \   000006DC   C83094E5           LDR      R3,[R4, #+200]
   \   000006E0   ........           _BLF     __dSub,??__dSub??rA
   \   000006E4   0060A0E1           MOV      R6,R0
   \   000006E8   B40094E5           LDR      R0,[R4, #+180]
   \   000006EC   0170A0E1           MOV      R7,R1
   \   000006F0   B81094E5           LDR      R1,[R4, #+184]
   \   000006F4   0820A0E1           MOV      R2,R8
   \   000006F8   0930A0E1           MOV      R3,R9
   \   000006FC   91FFFFEA           B        ??InputBasicCargoType_38
   \                     ??InputBasicCargoType_25:
   \   00000700   A60A4625           DC32     0x25460aa6
   \   00000704   8E75711B           DC32     0x1b71758e
   \   00000708   00804140           DC32     0x40418000
   2166          }
   2167          
   2168          
   2169          

   \                                 In segment CODE, align 4, keep-with-next
   2170          int CargoTypeObject::Input_API(double API) {
   \                     ??Input_API:
   \   00000000   F04F2DE9           PUSH     {R4-R11,LR}
   \   00000004   0070A0E1           MOV      R7,R0
   2171              int EStatus = E_NO_ERR;
   2172          
   2173              switch ( BaseCargoType ) {
   \   00000008   F00097E5           LDR      R0,[R7, #+240]
   \   0000000C   01A0A0E1           MOV      R10,R1
   \   00000010   02B0A0E1           MOV      R11,R2
   \   00000014   0060A0E3           MOV      R6,#+0
   \   00000018   1A0050E3           CMP      R0,#+26
   \   0000001C   8C00008A           BHI      ??Input_API_3
   \   00000020   011F8FE2           ADR      R1,??Input_API_1
   \   00000024   0010D1E7           LDRB     R1,[R1, R0]
   \   00000028   01F18FE0           ADD      PC,PC,R1, LSL #+2
   \                     ??Input_API_1:
   \   0000002C   060C0810           DC8      +6,+12,+8,+16
   \   00000030   12140E0A           DC8      +18,+20,+14,+10
   \   00000034   1A1A1A16           DC8      +26,+26,+26,+22
   \   00000038   16161818           DC8      +22,+22,+24,+24
   \   0000003C   18161616           DC8      +24,+22,+22,+22
   \   00000040   18181816           DC8      +24,+24,+24,+22
   \   00000044   18161800           DC8      +24,+22,+24,+0
   2174              case CTY_SIMPLE_LIN:
   2175                  EStatus = E_NO_INPUT_PERMISSION;
   \                     ??Input_API_4:
   \   00000048   2A60A0E3           MOV      R6,#+42
   \   0000004C   800000EA           B        ??Input_API_3
   2176                  break;
   2177              case CTY_BALLAST:
   2178                  EStatus = E_NO_USE_SYS_BALW;
   \                     ??Input_API_5:
   \   00000050   1260A0E3           MOV      R6,#+18
   \   00000054   7E0000EA           B        ??Input_API_3
   2179                  break;
   2180              case CTY_SEA:
   2181                  EStatus = E_NO_USE_SYS_SEAW;
   \                     ??Input_API_6:
   \   00000058   1160A0E3           MOV      R6,#+17
   \   0000005C   7C0000EA           B        ??Input_API_3
   2182                  break;
   2183              case CTY_LINEAR:
   2184                  EStatus = E_SELECT_API_TABLE;
   \                     ??Input_API_7:
   \   00000060   1560A0E3           MOV      R6,#+21
   \   00000064   7A0000EA           B        ??Input_API_3
   2185                  break;
   2186              case CTY_FW:
   2187                  EStatus = E_NO_USE_SYS_FW;
   \                     ??Input_API_8:
   \   00000068   2260A0E3           MOV      R6,#+34
   \   0000006C   780000EA           B        ??Input_API_3
   2188                  break;
   2189              case CTY_HFO:
   2190                  EStatus = E_NO_USE_SYS_HFO;
   \                     ??Input_API_9:
   \   00000070   2360A0E3           MOV      R6,#+35
   \   00000074   760000EA           B        ??Input_API_3
   2191                  break;
   2192              case CTY_DO:
   2193                  EStatus = E_NO_USE_SYS_DIESEL;
   \                     ??Input_API_10:
   \   00000078   2460A0E3           MOV      R6,#+36
   \   0000007C   740000EA           B        ??Input_API_3
   2194                  break;
   2195              case CTY_LUB:
   2196                  EStatus = E_NO_USE_SYS_LUB;
   \                     ??Input_API_11:
   \   00000080   2560A0E3           MOV      R6,#+37
   \   00000084   720000EA           B        ??Input_API_3
   2197                  break;
   2198              case CTY_API_53A   :
   2199              case CTY_API_53B   :
   2200              case CTY_API_53D   :
   2201              case CTY_API_53E   :
   2202              case CTY_API_59A   :
   2203              case CTY_API_59B   :
   2204              case CTY_API_59D   :
   2205              case CTY_API_59E   :
   2206                  // May it should be possible to input API here as well
   2207                  EStatus = E_USE_OD2;
   \                     ??Input_API_12:
   \   00000088   2F60A0E3           MOV      R6,#+47
   \   0000008C   700000EA           B        ??Input_API_3
   2208                  break;
   2209              case CTY_API_54A   :
   2210              case CTY_API_54B   :
   2211              case CTY_API_54D   :
   2212              case CTY_API_54E   :
   2213              case CTY_API_60A   :
   2214              case CTY_API_60B   :
   2215              case CTY_API_60D   :
   2216              case CTY_API_60E   :
   2217                  // May it should be possible to input API here as well
   2218                  EStatus = E_USE_OD1;
   \                     ??Input_API_13:
   \   00000090   1460A0E3           MOV      R6,#+20
   \   00000094   6E0000EA           B        ??Input_API_3
   2219                  break;
   2220              case CTY_API_6A     :
   2221              case CTY_API_6B     :
   2222              case CTY_API_6D     :
   2223                  if ( (API > MIN_API) && (API < MAX_API) ) {
   \                     ??Input_API_14:
   \   00000098   0A00A0E1           MOV      R0,R10
   \   0000009C   0B10A0E1           MOV      R1,R11
   \   000000A0   0620E0E1           MVN      R2,R6
   \   000000A4   F035E0E3           MVN      R3,#+1006632960
   \   000000A8   F737C3E3           BIC      R3,R3,#0x3DC0000
   \   000000AC   ........           _BLF     __dGreaterEqual,??__dGreaterEqual??rA
   \   000000B0   000050E3           CMP      R0,#+0
   \   000000B4   6500000A           BEQ      ??Input_API_15
   \   000000B8   ........           LDR      R3,??DataTable138  ;; 0x40554000
   \   000000BC   0A00A0E1           MOV      R0,R10
   \   000000C0   0B10A0E1           MOV      R1,R11
   \   000000C4   0020A0E3           MOV      R2,#+0
   \   000000C8   ........           _BLF     __dLess,??__dLess??rA
   \   000000CC   000050E3           CMP      R0,#+0
   \   000000D0   5E00000A           BEQ      ??Input_API_15
   2224                      RefTmp1 = API_REFTMP;
   \   000000D4   ........           LDR      R0,??DataTable141  ;; 0xffffffffc71c71c7
   \   000000D8   ........           LDR      R1,??DataTable142  ;; 0x402f1c71
   \   000000DC   C40087E5           STR      R0,[R7, #+196]
   \   000000E0   C81087E5           STR      R1,[R7, #+200]
   2225                      double dT   = RefTmp2 - API_REFTMP;
   \   000000E4   CC2097E5           LDR      R2,[R7, #+204]
   \   000000E8   D03097E5           LDR      R3,[R7, #+208]
   \   000000EC   801481E3           ORR      R1,R1,#0x80000000
   \   000000F0   ........           _BLF     __dAdd,??__dAdd??rA
   \   000000F4   0080A0E1           MOV      R8,R0
   \   000000F8   0190A0E1           MOV      R9,R1
   2226                      OD1    = Api_to_Density(API);
   \   000000FC   0A00A0E1           MOV      R0,R10
   \   00000100   0B10A0E1           MOV      R1,R11
   \   00000104   ........           _BLF     __doubleToFloat,??__doubleToFloat??rA
   \   00000108   ........           _BLF     ??Api_to_Density,??Api_to_Density??rA
   \   0000010C   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   00000110   B40087E5           STR      R0,[R7, #+180]
   2227                      RefTmp1 = API_REFTMP;
   \   00000114   ........           LDR      R0,??DataTable141  ;; 0xffffffffc71c71c7
   \   00000118   B81087E5           STR      R1,[R7, #+184]
   \   0000011C   ........           LDR      R1,??DataTable142  ;; 0x402f1c71
   \   00000120   C40087E5           STR      R0,[R7, #+196]
   \   00000124   C81087E5           STR      R1,[R7, #+200]
   2228                      double Vcf;
   2229                      switch ( BaseCargoType ) {
   \   00000128   F00097E5           LDR      R0,[R7, #+240]
   \   0000012C   080040E2           SUB      R0,R0,#+8
   \   00000130   020050E3           CMP      R0,#+2
   \   00000134   2000008A           BHI      ??Input_API_16
   \   00000138   011F8FE2           ADR      R1,??Input_API_2
   \   0000013C   0010D1E7           LDRB     R1,[R1, R0]
   \   00000140   01F18FE0           ADD      PC,PC,R1, LSL #+2
   \                     ??Input_API_2:
   \   00000144   00091200           DC8      +0,+9,+18,+0
   2230                      case CTY_API_6A     :
   2231                          Vcf = Vcf_6_and_54A_Calc(OD1, dT, NULL, false);
   \                     ??Input_API_17:
   \   00000148   0000A0E3           MOV      R0,#+0
   \   0000014C   01002DE9           PUSH     {R0}
   \   00000150   01002DE9           PUSH     {R0}
   \   00000154   B40097E5           LDR      R0,[R7, #+180]
   \   00000158   B81097E5           LDR      R1,[R7, #+184]
   \   0000015C   0820A0E1           MOV      R2,R8
   \   00000160   0930A0E1           MOV      R3,R9
   \   00000164   ........           _BLF     ??Vcf_6_and_54A_Calc,??Vcf_6_and_54A_Calc??rA
   \   00000168   100000EA           B        ??Input_API_18
   2232                          break;
   2233                      case CTY_API_6B     :
   2234                          Vcf = Vcf_6_and_54B_Calc(OD1, dT, NULL, false);
   \                     ??Input_API_19:
   \   0000016C   0000A0E3           MOV      R0,#+0
   \   00000170   01002DE9           PUSH     {R0}
   \   00000174   01002DE9           PUSH     {R0}
   \   00000178   B40097E5           LDR      R0,[R7, #+180]
   \   0000017C   B81097E5           LDR      R1,[R7, #+184]
   \   00000180   0820A0E1           MOV      R2,R8
   \   00000184   0930A0E1           MOV      R3,R9
   \   00000188   ........           _BLF     ??Vcf_6_and_54B_Calc,??Vcf_6_and_54B_Calc??rA
   \   0000018C   070000EA           B        ??Input_API_18
   2235                          break;
   2236                      case CTY_API_6D     :
   2237                          Vcf = Vcf_6_and_54D_Calc(OD1, dT, NULL, false);
   \                     ??Input_API_20:
   \   00000190   0000A0E3           MOV      R0,#+0
   \   00000194   01002DE9           PUSH     {R0}
   \   00000198   01002DE9           PUSH     {R0}
   \   0000019C   B40097E5           LDR      R0,[R7, #+180]
   \   000001A0   B81097E5           LDR      R1,[R7, #+184]
   \   000001A4   0820A0E1           MOV      R2,R8
   \   000001A8   0930A0E1           MOV      R3,R9
   \   000001AC   ........           _BLF     ??Vcf_6_and_54D_Calc,??Vcf_6_and_54D_Calc??rA
   \                     ??Input_API_18:
   \   000001B0   0040A0E1           MOV      R4,R0
   \   000001B4   0150A0E1           MOV      R5,R1
   \   000001B8   08D08DE2           ADD      SP,SP,#+8
   2238                          break;
   2239                      }
   2240                      OD2 = OD1 * Vcf;
   \                     ??Input_API_16:
   \   000001BC   B4A097E5           LDR      R10,[R7, #+180]
   \   000001C0   B8B097E5           LDR      R11,[R7, #+184]
   \   000001C4   0420A0E1           MOV      R2,R4
   \   000001C8   0530A0E1           MOV      R3,R5
   \   000001CC   0A00A0E1           MOV      R0,R10
   \   000001D0   0B10A0E1           MOV      R1,R11
   \   000001D4   ........           _BLF     __dMul,??__dMul??rA
   \   000001D8   0040A0E1           MOV      R4,R0
   \   000001DC   0150A0E1           MOV      R5,R1
   \   000001E0   BC4087E5           STR      R4,[R7, #+188]
   \   000001E4   C05087E5           STR      R5,[R7, #+192]
   2241                      if ( fabs(dT) > 1.0 ) {
   \   000001E8   0800A0E1           MOV      R0,R8
   \   000001EC   0910A0E1           MOV      R1,R9
   \   000001F0   8014C1E3           BIC      R1,R1,#0x80000000
   \   000001F4   0120A0E3           MOV      R2,#+1
   \   000001F8   C035A0E3           MOV      R3,#+805306368
   \   000001FC   FF3683E3           ORR      R3,R3,#0xFF00000
   \   00000200   ........           _BLF     __dGreaterEqual,??__dGreaterEqual??rA
   \   00000204   000050E3           CMP      R0,#+0
   \   00000208   0800000A           BEQ      ??Input_API_21
   2242                          Coeff = -(OD2 - OD1) / dT;
   \   0000020C   0A00A0E1           MOV      R0,R10
   \   00000210   0B10A0E1           MOV      R1,R11
   \   00000214   0420A0E1           MOV      R2,R4
   \   00000218   0530A0E1           MOV      R3,R5
   \   0000021C   ........           _BLF     __dSub,??__dSub??rA
   \   00000220   0820A0E1           MOV      R2,R8
   \   00000224   0930A0E1           MOV      R3,R9
   \   00000228   ........           _BLF     __dDiv,??__dDiv??rA
   \   0000022C   000000EA           B        ??Input_API_22
   2243                      } else {
   2244                          Coeff = 0.0;
   \                     ??Input_API_21:
   \   00000230   0010A0E3           MOV      R1,#+0
   \                     ??Input_API_22:
   \   00000234   D40087E5           STR      R0,[R7, #+212]
   \   00000238   D81087E5           STR      R1,[R7, #+216]
   2245                      }
   2246                      ActualTemp = RefTmp2;
   \   0000023C   CC0097E5           LDR      R0,[R7, #+204]
   \   00000240   D01097E5           LDR      R1,[R7, #+208]
   \   00000244   ........           _BLF     __doubleToFloat,??__doubleToFloat??rA
   \   00000248   AC0087E5           STR      R0,[R7, #+172]
   \   0000024C   000000EA           B        ??Input_API_3
   2247                  } else {
   2248                      EStatus = E_API_OUT_OF_RANGE;
   \                     ??Input_API_15:
   \   00000250   1D60A0E3           MOV      R6,#+29
   2249                  }
   2250                  break;
   2251              }
   2252              return (EStatus);   // Ignore input if unknown cargo type
   \                     ??Input_API_3:
   \   00000254   0600A0E1           MOV      R0,R6
   \   00000258                      REQUIRE ?Subroutine53
   \   00000258                      ;; // Fall through to label ?Subroutine53
   2253          }
   2254          
   2255          

   \                                 In segment CODE, align 4, keep-with-next
   2256          int CargoTypeObject::Input_MolMass(double MMass) {
   2257              int EStatus = E_NO_ERR;
   2258          
   2259              switch ( BaseCargoType ) {
   \                     ??Input_MolMass:
   \   00000000   F0C090E5           LDR      R12,[R0, #+240]
   \   00000004   0030A0E3           MOV      R3,#+0
   \   00000008   17C04CE2           SUB      R12,R12,#+23
   \   0000000C   03005CE3           CMP      R12,#+3
   2260              default:
   2261                  EStatus = E_NO_INPUT_PERMISSION;
   \   00000010   2A30A083           MOVHI    R3,#+42
   2262                  break;
   2263              case CTY_API_53E   :
   2264              case CTY_API_54E   :
   2265              case CTY_API_59E   :
   2266              case CTY_API_60E   :
   2267                  MolMass = MMass;
   \   00000014   DC108095           STRLS    R1,[R0, #+220]
   \   00000018   E0208095           STRLS    R2,[R0, #+224]
   2268                  break;
   2269              }
   2270              return (EStatus);   // Ignore input if unknown cargo type
   \   0000001C   0300A0E1           MOV      R0,R3
   \   00000020   1EFF2FE1           BX       LR               ;; return
   2271          }
   2272          
   2273          // Assume that the density expansion coefficient is the same as
   2274          // the volume expansion coefficient
   2275          

   \                                 In segment CODE, align 4, keep-with-next
   2276          double CargoTypeObject::VolumeAtRefTmp(double Weight, double Volume, double RhoT, double Temp) {
   \                     ??VolumeAtRefTmp:
   \   00000000   08002DE9           PUSH     {R3}
   \   00000004   F0402DE9           PUSH     {R4-R7,LR}
   \   00000008   0030A0E1           MOV      R3,R0
   \   0000000C   0160A0E1           MOV      R6,R1
   \   00000010   0270A0E1           MOV      R7,R2
   2277              switch ( BaseCargoType ) {
   \   00000014   F02093E5           LDR      R2,[R3, #+240]
   \   00000018   14008DE2           ADD      R0,SP,#+20
   \   0000001C   300090E8           LDM      R0,{R4,R5}
   \   00000020   24008DE2           ADD      R0,SP,#+36
   \   00000024   030090E8           LDM      R0,{R0,R1}
   \   00000028   012052E2           SUBS     R2,R2,#+1
   \   0000002C   0600000A           BEQ      ??VolumeAtRefTmp_1
   \   00000030   072042E2           SUB      R2,R2,#+7
   \   00000034   290052E3           CMP      R2,#+41
   \   00000038   1700009A           BLS      ??VolumeAtRefTmp_2
   2278              default             :
   2279              case CTY_SIMPLE_LIN :
   2280              case CTY_SEA        :
   2281              case CTY_BALLAST    :
   2282              case CTY_FW         :
   2283              case CTY_HFO        :
   2284              case CTY_DO         :
   2285              case CTY_LUB        :
   2286                  return (Volume);
   \                     ??VolumeAtRefTmp_3:
   \   0000003C   0400A0E1           MOV      R0,R4
   \   00000040   0510A0E1           MOV      R1,R5
   \   00000044   F040BDE8           POP      {R4-R7,LR}
   \   00000048   ........           B        ??Subroutine49_0
   2287              case CTY_LINEAR:
   2288                  if ( OD1 ) {
   \                     ??VolumeAtRefTmp_1:
   \   0000004C   B44093E5           LDR      R4,[R3, #+180]
   \   00000050   B85093E5           LDR      R5,[R3, #+184]
   \   00000054   0000A0E3           MOV      R0,#+0
   \   00000058   0010A0E3           MOV      R1,#+0
   \   0000005C   0420A0E1           MOV      R2,R4
   \   00000060   0530A0E1           MOV      R3,R5
   \   00000064   ........           _BLF     __dNotEqual,??__dNotEqual??rA
   \   00000068   000050E3           CMP      R0,#+0
   \   0000006C   0700000A           BEQ      ??VolumeAtRefTmp_4
   2289                      Volume = Weight / OD1;
   \   00000070   0600A0E1           MOV      R0,R6
   \   00000074   0710A0E1           MOV      R1,R7
   \   00000078   0420A0E1           MOV      R2,R4
   \   0000007C   0530A0E1           MOV      R3,R5
   \   00000080   ........           _BLF     __dDiv,??__dDiv??rA
   \                     ??VolumeAtRefTmp_5:
   \   00000084   0040A0E1           MOV      R4,R0
   \   00000088   0150A0E1           MOV      R5,R1
   \   0000008C   EAFFFFEA           B        ??VolumeAtRefTmp_3
   2290                  } else {
   2291                      Volume = Weight;
   \                     ??VolumeAtRefTmp_4:
   \   00000090   0640A0E1           MOV      R4,R6
   \   00000094   0750A0E1           MOV      R5,R7
   \   00000098   E7FFFFEA           B        ??VolumeAtRefTmp_3
   2292                  }
   2293                  break;
   2294              case CTY_API_6A             :
   2295              case CTY_API_6B             :
   2296              case CTY_API_6D             :
   2297              case CTY_API_53A            :
   2298              case CTY_API_53B            :
   2299              case CTY_API_53D            :
   2300              case CTY_API_53E            :
   2301              case CTY_API_54A            :
   2302              case CTY_API_54B            :
   2303              case CTY_API_54D            :
   2304              case CTY_API_54E            :
   2305              case CTY_API_59A            :
   2306              case CTY_API_59B            :
   2307              case CTY_API_59D            :
   2308              case CTY_API_59E            :
   2309              case CTY_API_60A            :
   2310              case CTY_API_60B            :
   2311              case CTY_API_60D            :
   2312              case CTY_API_60E            :
   2313              case CTY_GAS_AMMONIA        :
   2314              case CTY_GAS_BUTADIEN       :
   2315              case CTY_GAS_ISOBUTYLENE    :
   2316              case CTY_GAS_PROPYLENE      :
   2317              case CTY_GAS_PROPENOXIDE    :
   2318              case CTY_GAS_VYNILCHLORIDE  :
   2319              case CTY_GAS_BUTANE         :
   2320              case CTY_GAS_PROPANE        :
   2321              case CTY_GAS_N_BUTANE       :
   2322              case CTY_GAS_ISO_BUTANE     :
   2323              case CTY_GAS_1_BUTANE       :
   2324              case CTY_GAS_CRUDE_C4       :
   2325              case CTY_GAS_RAFFINATE_1    :
   2326              case CTY_GAS_RAFFINATE_2    :
   2327              case CTY_GAS_PROPYLENE_REF  :
   2328              case CTY_GAS_GASOLIE        :
   2329              case CTY_GAS_FLEXICOKER_LPG :
   2330              case CTY_GAS_SULPHUR_1      :
   2331              case CTY_GAS_SULPHUR_2      :
   2332              case CTY_GAS_SULPHUR_3      :
   2333              case CTY_GAS_SULPHUR_4      :
   2334              case CTY_GAS_SULPHUR_5      :
   2335              case CTY_GAS_SULPHUR_6      :
   2336                  Volume *= Vcf_Calc(Temp);
   \                     ??VolumeAtRefTmp_2:
   \   0000009C   0120A0E1           MOV      R2,R1
   \   000000A0   0010A0E1           MOV      R1,R0
   \   000000A4   0300A0E1           MOV      R0,R3
   \   000000A8   ........           BL       ??Vcf_Calc
   \   000000AC   0420A0E1           MOV      R2,R4
   \   000000B0   0530A0E1           MOV      R3,R5
   \   000000B4   ........           _BLF     __dMul,??__dMul??rA
   \   000000B8   F1FFFFEA           B        ??VolumeAtRefTmp_5
   2337                  break;
   2338              } // End main switch
   2339              return (Volume);
   2340          }
   2341          

   \                                 In segment CODE, align 4, keep-with-next
   2342          void CargoTypeObject::Update_Density(void) {
   \                     ??Update_Density:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   2343          
   2344              switch ( BaseCargoType ) {
   \   00000008   F00094E5           LDR      R0,[R4, #+240]
   \   0000000C   020040E2           SUB      R0,R0,#+2
   \   00000010   050050E3           CMP      R0,#+5
   \   00000014   2000008A           BHI      ??Update_Density_2
   \   00000018   011F8FE2           ADR      R1,??Update_Density_1
   \   0000001C   0010D1E7           LDRB     R1,[R1, R0]
   \   00000020   01F18FE0           ADD      PC,PC,R1, LSL #+2
   \                     ??Update_Density_1:
   \   00000024   0307090B           DC8      +3,+7,+9,+11
   \   00000028   05010000           DC8      +5,+1,+0,+0
   2345              case CTY_SEA:
   2346                  OD1      = PROSystemData::SeaWaterDensity;
   \                     ??Update_Density_3:
   \   0000002C   ........           LDR      R0,??DataTable143  ;; ??SeaWaterDensity
   \   00000030   080000EA           B        ??Update_Density_4
   2347                  OD2      = PROSystemData::SeaWaterDensity;
   2348                  RefTmp1  = SI_REFTMP;
   2349                  RefTmp2  = 35.0;
   2350                  Coeff    = 0.0;
   2351                  break;
   2352              case CTY_BALLAST:
   2353                  OD1      = PROSystemData::BallastDensity;
   \                     ??Update_Density_5:
   \   00000034   ........           LDR      R0,??DataTable144  ;; ??BallastDensity
   \   00000038   060000EA           B        ??Update_Density_4
   2354                  OD2      = PROSystemData::BallastDensity;
   2355                  RefTmp1  = SI_REFTMP;
   2356                  RefTmp2  = 35.0;
   2357                  Coeff    = 0.0;
   2358                  break;
   2359              case CTY_FW:
   2360                  OD1      = PROSystemData::FreshWaterDensity;
   \                     ??Update_Density_6:
   \   0000003C   ........           LDR      R0,??DataTable145  ;; ??FreshWaterDensity
   \   00000040   040000EA           B        ??Update_Density_4
   2361                  OD2      = PROSystemData::FreshWaterDensity;
   2362                  RefTmp1  = SI_REFTMP;
   2363                  RefTmp2  = 35.0;
   2364                  Coeff    = 0.0;
   2365                  break;
   2366              case CTY_HFO:
   2367                  OD1      = PROSystemData::HeavyFuelDensity;
   \                     ??Update_Density_7:
   \   00000044   ........           LDR      R0,??DataTable146  ;; ??HeavyFuelDensity
   \   00000048   020000EA           B        ??Update_Density_4
   2368                  OD2      = PROSystemData::HeavyFuelDensity;
   2369                  RefTmp1  = SI_REFTMP;
   2370                  RefTmp2  = 35.0;
   2371                  Coeff    = 0.0;
   2372                  break;
   2373              case CTY_DO:
   2374                  OD1      = PROSystemData::DieselDensity;
   \                     ??Update_Density_8:
   \   0000004C   ........           LDR      R0,??DataTable147  ;; ??DieselDensity
   \   00000050   000000EA           B        ??Update_Density_4
   2375                  OD2      = PROSystemData::DieselDensity;
   2376                  RefTmp1  = SI_REFTMP;
   2377                  RefTmp2  = 35.0;
   2378                  Coeff    = 0.0;
   2379                  break;
   2380              case CTY_LUB:
   2381                  OD1      = PROSystemData::LubricantsDensity;
   \                     ??Update_Density_9:
   \   00000054   ........           LDR      R0,??DataTable148  ;; ??LubricantsDensity
   \                     ??Update_Density_4:
   \   00000058   000090E5           LDR      R0,[R0, #+0]
   \   0000005C   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   00000060   B40084E5           STR      R0,[R4, #+180]
   \   00000064   B81084E5           STR      R1,[R4, #+184]
   2382                  OD2      = PROSystemData::LubricantsDensity;
   \   00000068   BC0084E5           STR      R0,[R4, #+188]
   \   0000006C   C01084E5           STR      R1,[R4, #+192]
   2383                  RefTmp1  = SI_REFTMP;
   \   00000070   0000A0E3           MOV      R0,#+0
   \   00000074   4014A0E3           MOV      R1,#+1073741824
   \   00000078   B81981E3           ORR      R1,R1,#0x2E0000
   \   0000007C   C40084E5           STR      R0,[R4, #+196]
   \   00000080   C81084E5           STR      R1,[R4, #+200]
   2384                  RefTmp2  = 35.0;
   \   00000084   4E1981E2           ADD      R1,R1,#+1277952
   \   00000088   CC0084E5           STR      R0,[R4, #+204]
   \   0000008C   D01084E5           STR      R1,[R4, #+208]
   2385                  Coeff    = 0.0;
   \   00000090   0010A0E3           MOV      R1,#+0
   \   00000094   D40084E5           STR      R0,[R4, #+212]
   \   00000098   D81084E5           STR      R1,[R4, #+216]
   2386                  break;
   2387              }
   2388          }
   \                     ??Update_Density_2:
   \   0000009C   ........           B        ?Subroutine57

   \                                 In segment CODE, align 4, keep-with-next
   \                     ?Subroutine57:
   \   00000000   1040BDE8           POP      {R4,LR}
   \   00000004   1EFF2FE1           BX       LR               ;; return
   2389          
   2390          

   \                                 In segment CODE, align 4, keep-with-next
   2391          CargoTypeObject& CargoTypeObject::operator = (CargoTypeObject Src) {
   \                     `??operator=`:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
   2392              Type          = Src.Type;
   \   0000000C   A00095E5           LDR      R0,[R5, #+160]
   2393              BaseCargoType = Src.BaseCargoType;
   2394              CargoTypeKey  = Src.CargoTypeKey;
   2395              Colour        = Src.Colour;
   2396              OD1           = Src.OD1;
   2397              OD2           = Src.OD2;
   2398              RefTmp1       = Src.RefTmp1;
   2399              RefTmp2       = Src.RefTmp2;
   2400              Coeff         = Src.Coeff;
   2401              MolMass       = Src.MolMass;
   2402              Name          = Src.Name;
   \   00000010   0020A0E3           MOV      R2,#+0
   \   00000014   A00084E5           STR      R0,[R4, #+160]
   \   00000018   F00095E5           LDR      R0,[R5, #+240]
   \   0000001C   F00084E5           STR      R0,[R4, #+240]
   \   00000020   EC0095E5           LDR      R0,[R5, #+236]
   \   00000024   EC0084E5           STR      R0,[R4, #+236]
   \   00000028   F40095E5           LDR      R0,[R5, #+244]
   \   0000002C   F40084E5           STR      R0,[R4, #+244]
   \   00000030   B40095E5           LDR      R0,[R5, #+180]
   \   00000034   B81095E5           LDR      R1,[R5, #+184]
   \   00000038   B40084E5           STR      R0,[R4, #+180]
   \   0000003C   B81084E5           STR      R1,[R4, #+184]
   \   00000040   BC0095E5           LDR      R0,[R5, #+188]
   \   00000044   C01095E5           LDR      R1,[R5, #+192]
   \   00000048   BC0084E5           STR      R0,[R4, #+188]
   \   0000004C   C01084E5           STR      R1,[R4, #+192]
   \   00000050   C40095E5           LDR      R0,[R5, #+196]
   \   00000054   C81095E5           LDR      R1,[R5, #+200]
   \   00000058   C40084E5           STR      R0,[R4, #+196]
   \   0000005C   C81084E5           STR      R1,[R4, #+200]
   \   00000060   CC0095E5           LDR      R0,[R5, #+204]
   \   00000064   D01095E5           LDR      R1,[R5, #+208]
   \   00000068   CC0084E5           STR      R0,[R4, #+204]
   \   0000006C   D01084E5           STR      R1,[R4, #+208]
   \   00000070   D40095E5           LDR      R0,[R5, #+212]
   \   00000074   D81095E5           LDR      R1,[R5, #+216]
   \   00000078   D40084E5           STR      R0,[R4, #+212]
   \   0000007C   D81084E5           STR      R1,[R4, #+216]
   \   00000080   DC0095E5           LDR      R0,[R5, #+220]
   \   00000084   E01095E5           LDR      R1,[R5, #+224]
   \   00000088   DC0084E5           STR      R0,[R4, #+220]
   \   0000008C   ........           LDR      R0,??DataTable153  ;; ??npos
   \   00000090   E01084E5           STR      R1,[R4, #+224]
   \   00000094   003090E5           LDR      R3,[R0, #+0]
   \   00000098   441085E2           ADD      R1,R5,#+68
   \   0000009C   440084E2           ADD      R0,R4,#+68
   \   000000A0   ........           _BLF     ??assign,??assign??rA
   2403              Viscosity     = Src.Viscosity;
   \   000000A4   E40095E5           LDR      R0,[R5, #+228]
   \   000000A8   E81095E5           LDR      R1,[R5, #+232]
   \   000000AC   E40084E5           STR      R0,[R4, #+228]
   \   000000B0   E81084E5           STR      R1,[R4, #+232]
   2404              return *this;
   \   000000B4   0400A0E1           MOV      R0,R4
   \   000000B8   ........           B        ?Subroutine50
   2405          
   2406          }
   2407          
   2408          
   2409          

   \                                 In segment CODE, align 4, keep-with-next
   2410          int CargoTypeObject::ReceiveData(U8 *data) {
   \                     ??ReceiveData:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   3CD04DE2           SUB      SP,SP,#+60
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   0150A0E1           MOV      R5,R1
   2411              int ErrorStatus = E_OK;
   2412              ANPRO10_CommandHeading *pCH = (ANPRO10_CommandHeading *)data;
   2413              switch ( pCH->CommandNo ) {
   \   00000010   0100D5E5           LDRB     R0,[R5, #+1]
   \   00000014   0010D5E5           LDRB     R1,[R5, #+0]
   \   00000018   000481E1           ORR      R0,R1,R0, LSL #+8
   \   0000001C   660050E3           CMP      R0,#+102
   \   00000020   8C00001A           BNE      ??ReceiveData_1
   2414              case  CMD_GENERIC_STATIC_DATA:
   2415                  {
   2416                      ANPRO10_COMMAND_2800  *pData = (ANPRO10_COMMAND_2800 *)data;
   2417                      
   2418          #ifdef ANWIN
   2419                      bool dataChanged = isDifferentData(pData);
   2420          #endif
   2421                      CargoTypeKey = pData->CargoTypeKey;
   \   00000024   0C00D5E5           LDRB     R0,[R5, #+12]
   \   00000028   0B10D5E5           LDRB     R1,[R5, #+11]
   \   0000002C   000481E1           ORR      R0,R1,R0, LSL #+8
   \   00000030   0A10D5E5           LDRB     R1,[R5, #+10]
   \   00000034   000481E1           ORR      R0,R1,R0, LSL #+8
   \   00000038   0910D5E5           LDRB     R1,[R5, #+9]
   \   0000003C   000481E1           ORR      R0,R1,R0, LSL #+8
   \   00000040   EC0084E5           STR      R0,[R4, #+236]
   2422                      BaseCargoType = pData->BaseCargoType;
   \   00000044   1000D5E5           LDRB     R0,[R5, #+16]
   \   00000048   0F10D5E5           LDRB     R1,[R5, #+15]
   \   0000004C   000481E1           ORR      R0,R1,R0, LSL #+8
   \   00000050   0E10D5E5           LDRB     R1,[R5, #+14]
   \   00000054   000481E1           ORR      R0,R1,R0, LSL #+8
   \   00000058   0D10D5E5           LDRB     R1,[R5, #+13]
   \   0000005C   000481E1           ORR      R0,R1,R0, LSL #+8
   \   00000060   F00084E5           STR      R0,[R4, #+240]
   2423          
   2424                      Colour       = (TColor)pData->Colour;
   \   00000064   1400D5E5           LDRB     R0,[R5, #+20]
   \   00000068   1310D5E5           LDRB     R1,[R5, #+19]
   \   0000006C   000481E1           ORR      R0,R1,R0, LSL #+8
   \   00000070   1210D5E5           LDRB     R1,[R5, #+18]
   \   00000074   000481E1           ORR      R0,R1,R0, LSL #+8
   \   00000078   1110D5E5           LDRB     R1,[R5, #+17]
   \   0000007C   000481E1           ORR      R0,R1,R0, LSL #+8
   \   00000080   F40084E5           STR      R0,[R4, #+244]
   2425                      OD1          = pData->OD1;
   \   00000084   0000A0E3           MOV      R0,#+0
   \   00000088   0D10A0E1           MOV      R1,SP
   \                     ??ReceiveData_2:
   \   0000008C   152085E2           ADD      R2,R5,#+21
   \   00000090   0220D0E7           LDRB     R2,[R0, +R2]
   \   00000094   0120C0E7           STRB     R2,[R0, +R1]
   \   00000098   010080E2           ADD      R0,R0,#+1
   \   0000009C   040050E3           CMP      R0,#+4
   \   000000A0   F9FFFFBA           BLT      ??ReceiveData_2
   \   000000A4   00009DE5           LDR      R0,[SP, #+0]
   \   000000A8   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   000000AC   B40084E5           STR      R0,[R4, #+180]
   \   000000B0   B81084E5           STR      R1,[R4, #+184]
   2426                      OD2          = pData->OD2;
   \   000000B4   0000A0E3           MOV      R0,#+0
   \   000000B8   04108DE2           ADD      R1,SP,#+4
   \                     ??ReceiveData_3:
   \   000000BC   192085E2           ADD      R2,R5,#+25
   \   000000C0   0220D0E7           LDRB     R2,[R0, +R2]
   \   000000C4   0120C0E7           STRB     R2,[R0, +R1]
   \   000000C8   010080E2           ADD      R0,R0,#+1
   \   000000CC   040050E3           CMP      R0,#+4
   \   000000D0   F9FFFFBA           BLT      ??ReceiveData_3
   \   000000D4   04009DE5           LDR      R0,[SP, #+4]
   \   000000D8   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   000000DC   BC0084E5           STR      R0,[R4, #+188]
   \   000000E0   C01084E5           STR      R1,[R4, #+192]
   2427                      RefTmp1      = pData->RefTmp1;
   \   000000E4   0000A0E3           MOV      R0,#+0
   \   000000E8   08108DE2           ADD      R1,SP,#+8
   \                     ??ReceiveData_4:
   \   000000EC   1D2085E2           ADD      R2,R5,#+29
   \   000000F0   0220D0E7           LDRB     R2,[R0, +R2]
   \   000000F4   0120C0E7           STRB     R2,[R0, +R1]
   \   000000F8   010080E2           ADD      R0,R0,#+1
   \   000000FC   040050E3           CMP      R0,#+4
   \   00000100   F9FFFFBA           BLT      ??ReceiveData_4
   \   00000104   08009DE5           LDR      R0,[SP, #+8]
   \   00000108   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   0000010C   C40084E5           STR      R0,[R4, #+196]
   \   00000110   C81084E5           STR      R1,[R4, #+200]
   2428                      RefTmp2      = pData->RefTmp2;
   \   00000114   0000A0E3           MOV      R0,#+0
   \   00000118   0C108DE2           ADD      R1,SP,#+12
   \                     ??ReceiveData_5:
   \   0000011C   212085E2           ADD      R2,R5,#+33
   \   00000120   0220D0E7           LDRB     R2,[R0, +R2]
   \   00000124   0120C0E7           STRB     R2,[R0, +R1]
   \   00000128   010080E2           ADD      R0,R0,#+1
   \   0000012C   040050E3           CMP      R0,#+4
   \   00000130   F9FFFFBA           BLT      ??ReceiveData_5
   \   00000134   0C009DE5           LDR      R0,[SP, #+12]
   \   00000138   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   0000013C   CC0084E5           STR      R0,[R4, #+204]
   \   00000140   D01084E5           STR      R1,[R4, #+208]
   2429                      Coeff        = pData->Coeff;
   \   00000144   0000A0E3           MOV      R0,#+0
   \   00000148   10108DE2           ADD      R1,SP,#+16
   \                     ??ReceiveData_6:
   \   0000014C   252085E2           ADD      R2,R5,#+37
   \   00000150   0220D0E7           LDRB     R2,[R0, +R2]
   \   00000154   0120C0E7           STRB     R2,[R0, +R1]
   \   00000158   010080E2           ADD      R0,R0,#+1
   \   0000015C   040050E3           CMP      R0,#+4
   \   00000160   F9FFFFBA           BLT      ??ReceiveData_6
   \   00000164   10009DE5           LDR      R0,[SP, #+16]
   \   00000168   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   0000016C   D40084E5           STR      R0,[R4, #+212]
   \   00000170   D81084E5           STR      R1,[R4, #+216]
   2430                      ActualTemp   = pData->ActualTemp;
   \   00000174   0000A0E3           MOV      R0,#+0
   \   00000178   14108DE2           ADD      R1,SP,#+20
   \                     ??ReceiveData_7:
   \   0000017C   512085E2           ADD      R2,R5,#+81
   \   00000180   0220D0E7           LDRB     R2,[R0, +R2]
   \   00000184   0120C0E7           STRB     R2,[R0, +R1]
   \   00000188   010080E2           ADD      R0,R0,#+1
   \   0000018C   040050E3           CMP      R0,#+4
   \   00000190   F9FFFFBA           BLT      ??ReceiveData_7
   \   00000194   14009DE5           LDR      R0,[SP, #+20]
   2431                      MolMass      = pData->MolMass;
   \   00000198   18108DE2           ADD      R1,SP,#+24
   \   0000019C   AC0084E5           STR      R0,[R4, #+172]
   \   000001A0   0000A0E3           MOV      R0,#+0
   \                     ??ReceiveData_8:
   \   000001A4   552085E2           ADD      R2,R5,#+85
   \   000001A8   0220D0E7           LDRB     R2,[R0, +R2]
   \   000001AC   0120C0E7           STRB     R2,[R0, +R1]
   \   000001B0   010080E2           ADD      R0,R0,#+1
   \   000001B4   040050E3           CMP      R0,#+4
   \   000001B8   F9FFFFBA           BLT      ??ReceiveData_8
   \   000001BC   18009DE5           LDR      R0,[SP, #+24]
   \   000001C0   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   000001C4   DC0084E5           STR      R0,[R4, #+220]
   \   000001C8   E01084E5           STR      R1,[R4, #+224]
   2432                      Viscosity    = pData->Viscosity;
   \   000001CC   0000A0E3           MOV      R0,#+0
   \   000001D0   1C108DE2           ADD      R1,SP,#+28
   \                     ??ReceiveData_9:
   \   000001D4   592085E2           ADD      R2,R5,#+89
   \   000001D8   0220D0E7           LDRB     R2,[R0, +R2]
   \   000001DC   0120C0E7           STRB     R2,[R0, +R1]
   \   000001E0   010080E2           ADD      R0,R0,#+1
   \   000001E4   040050E3           CMP      R0,#+4
   \   000001E8   F9FFFFBA           BLT      ??ReceiveData_9
   \   000001EC   1C009DE5           LDR      R0,[SP, #+28]
   \   000001F0   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   000001F4   E40084E5           STR      R0,[R4, #+228]
   \   000001F8   E81084E5           STR      R1,[R4, #+232]
   2433                      Name         = pData->Name;
   \   000001FC   291085E2           ADD      R1,R5,#+41
   \   00000200   20008DE2           ADD      R0,SP,#+32
   \   00000204   ........           _BLF     ??AnsiString,??AnsiString??rA
   \   00000208   ........           LDR      R1,??DataTable153  ;; ??npos
   \   0000020C   0020A0E3           MOV      R2,#+0
   \   00000210   003091E5           LDR      R3,[R1, #+0]
   \   00000214   0010A0E1           MOV      R1,R0
   \   00000218   440084E2           ADD      R0,R4,#+68
   \   0000021C   ........           _BLF     ??assign,??assign??rA
   \   00000220   0020A0E3           MOV      R2,#+0
   \   00000224   0110A0E3           MOV      R1,#+1
   \   00000228   20008DE2           ADD      R0,SP,#+32
   \   0000022C   ........           _BLF     ??_Tidy,??_Tidy??rA
   2434                      DB_IdNumber  = pData->DB_IdNumber;
   \   00000230   6000D5E5           LDRB     R0,[R5, #+96]
   \   00000234   5F10D5E5           LDRB     R1,[R5, #+95]
   \   00000238   000481E1           ORR      R0,R1,R0, LSL #+8
   \   0000023C   5E10D5E5           LDRB     R1,[R5, #+94]
   \   00000240   000481E1           ORR      R0,R1,R0, LSL #+8
   \   00000244   5D10D5E5           LDRB     R1,[R5, #+93]
   \   00000248   000481E1           ORR      R0,R1,R0, LSL #+8
   \   0000024C   B00084E5           STR      R0,[R4, #+176]
   2435                      ErrorStatus  =  E_OK;
   \   00000250   0000A0E3           MOV      R0,#+0
   \   00000254   000000EA           B        ??ReceiveData_10
   2436          #ifdef ANWIN
   2437          /*
   2438                      if ( DB_IdNumber == -1 && IsDefined ) {
   2439                          AddToDatabase();
   2440                          LibPutValue(SVT_DB_IDNUMBER, this,DB_IdNumber);
   2441                      }else if ( dataChanged ) {
   2442                          UpdateDatabase();
   2443                      }
   2444          */
   2445          #endif            
   2446                  }
   2447                  break;
   2448              default:
   2449                  ErrorStatus = E_UNKNOWN_COMMAND;
   \                     ??ReceiveData_1:
   \   00000258   0100A0E3           MOV      R0,#+1
   2450                  break;
   2451              }
   2452              return (ErrorStatus);
   \                     ??ReceiveData_10:
   \   0000025C   3CD08DE2           ADD      SP,SP,#+60
   \   00000260   ........           B        ?Subroutine50
   2453          }
   2454          

   \                                 In segment CODE, align 4, keep-with-next
   2455          int CargoTypeObject::SendData(U16 cmd) {
   \                     ??SendData:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   6CD04DE2           SUB      SP,SP,#+108
   \   00000008   0040A0E1           MOV      R4,R0
   2456              int ErrorStatus = E_OK;
   2457              switch ( cmd ) {
   \   0000000C   660051E3           CMP      R1,#+102
   \   00000010   9F00001A           BNE      ??SendData_1
   2458              case CMD_GENERIC_STATIC_DATA:
   2459                  {
   2460                      QueueANPRO10_COMMAND_2800 Cmd;
   2461                      Cmd.TxInfo.Port        = NULL;
   \   00000014   0010A0E3           MOV      R1,#+0
   \   00000018   04108DE5           STR      R1,[SP, #+4]
   2462                      Cmd.TxInfo.rxAddr      = DEVICE_BROADCAST_ADDR;
   \   0000001C   FF10A0E3           MOV      R1,#+255
   \   00000020   0810CDE5           STRB     R1,[SP, #+8]
   2463                      Cmd.TxInfo.rxId        = DEVICE_BROADCAST_TXU;
   \   00000024   0E10A0E3           MOV      R1,#+14
   \   00000028   0910CDE5           STRB     R1,[SP, #+9]
   2464                      Cmd.Data.ObjectId      = IDNumber;
   \   0000002C   9C0094E5           LDR      R0,[R4, #+156]
   2465                      Cmd.Data.ndb           = sizeof(Cmd) - sizeof(QueueANPRO10_CommandHeading);
   \   00000030   5D10A0E3           MOV      R1,#+93
   \   00000034   0E00CDE5           STRB     R0,[SP, #+14]
   \   00000038   2004A0E1           LSR      R0,R0,#+8
   \   0000003C   0F00CDE5           STRB     R0,[SP, #+15]
   \   00000040   2004A0E1           LSR      R0,R0,#+8
   \   00000044   1000CDE5           STRB     R0,[SP, #+16]
   \   00000048   2004A0E1           LSR      R0,R0,#+8
   \   0000004C   1100CDE5           STRB     R0,[SP, #+17]
   \   00000050   BC10CDE1           STRH     R1,[SP, #+12]
   2466                      Cmd.Data.CommandNo     = CMD_GENERIC_STATIC_DATA;
   \   00000054   6610A0E3           MOV      R1,#+102
   \   00000058   BA10CDE1           STRH     R1,[SP, #+10]
   2467                      Cmd.Data.CargoTypeKey  = CargoTypeKey;
   \   0000005C   EC0094E5           LDR      R0,[R4, #+236]
   \   00000060   1300CDE5           STRB     R0,[SP, #+19]
   \   00000064   2004A0E1           LSR      R0,R0,#+8
   \   00000068   1400CDE5           STRB     R0,[SP, #+20]
   \   0000006C   2004A0E1           LSR      R0,R0,#+8
   \   00000070   1500CDE5           STRB     R0,[SP, #+21]
   \   00000074   2004A0E1           LSR      R0,R0,#+8
   \   00000078   1600CDE5           STRB     R0,[SP, #+22]
   2468                      Cmd.Data.BaseCargoType = BaseCargoType;
   \   0000007C   F00094E5           LDR      R0,[R4, #+240]
   \   00000080   1700CDE5           STRB     R0,[SP, #+23]
   \   00000084   2004A0E1           LSR      R0,R0,#+8
   \   00000088   1800CDE5           STRB     R0,[SP, #+24]
   \   0000008C   2004A0E1           LSR      R0,R0,#+8
   \   00000090   1900CDE5           STRB     R0,[SP, #+25]
   \   00000094   2004A0E1           LSR      R0,R0,#+8
   \   00000098   1A00CDE5           STRB     R0,[SP, #+26]
   2469                      Cmd.Data.Colour        = Colour;
   \   0000009C   F40094E5           LDR      R0,[R4, #+244]
   \   000000A0   1B00CDE5           STRB     R0,[SP, #+27]
   \   000000A4   2004A0E1           LSR      R0,R0,#+8
   \   000000A8   1C00CDE5           STRB     R0,[SP, #+28]
   \   000000AC   2004A0E1           LSR      R0,R0,#+8
   \   000000B0   1D00CDE5           STRB     R0,[SP, #+29]
   \   000000B4   2004A0E1           LSR      R0,R0,#+8
   \   000000B8   1E00CDE5           STRB     R0,[SP, #+30]
   2470                      Cmd.Data.OD1           = OD1;
   \   000000BC   B40094E5           LDR      R0,[R4, #+180]
   \   000000C0   B81094E5           LDR      R1,[R4, #+184]
   \   000000C4   ........           _BLF     __doubleToFloat,??__doubleToFloat??rA
   \   000000C8   00008DE5           STR      R0,[SP, #+0]
   \   000000CC   0000A0E3           MOV      R0,#+0
   \   000000D0   1F108DE2           ADD      R1,SP,#+31
   \                     ??SendData_2:
   \   000000D4   0D20A0E1           MOV      R2,SP
   \   000000D8   0220D0E7           LDRB     R2,[R0, +R2]
   \   000000DC   0120C0E7           STRB     R2,[R0, +R1]
   \   000000E0   010080E2           ADD      R0,R0,#+1
   \   000000E4   040050E3           CMP      R0,#+4
   \   000000E8   F9FFFFBA           BLT      ??SendData_2
   2471                      Cmd.Data.OD2           = OD2;
   \   000000EC   BC0094E5           LDR      R0,[R4, #+188]
   \   000000F0   C01094E5           LDR      R1,[R4, #+192]
   \   000000F4   ........           _BLF     __doubleToFloat,??__doubleToFloat??rA
   \   000000F8   00008DE5           STR      R0,[SP, #+0]
   \   000000FC   0000A0E3           MOV      R0,#+0
   \   00000100   23108DE2           ADD      R1,SP,#+35
   \                     ??SendData_3:
   \   00000104   0D20A0E1           MOV      R2,SP
   \   00000108   0220D0E7           LDRB     R2,[R0, +R2]
   \   0000010C   0120C0E7           STRB     R2,[R0, +R1]
   \   00000110   010080E2           ADD      R0,R0,#+1
   \   00000114   040050E3           CMP      R0,#+4
   \   00000118   F9FFFFBA           BLT      ??SendData_3
   2472                      Cmd.Data.RefTmp1       = RefTmp1;
   \   0000011C   C40094E5           LDR      R0,[R4, #+196]
   \   00000120   C81094E5           LDR      R1,[R4, #+200]
   \   00000124   ........           _BLF     __doubleToFloat,??__doubleToFloat??rA
   \   00000128   00008DE5           STR      R0,[SP, #+0]
   \   0000012C   0000A0E3           MOV      R0,#+0
   \   00000130   27108DE2           ADD      R1,SP,#+39
   \                     ??SendData_4:
   \   00000134   0D20A0E1           MOV      R2,SP
   \   00000138   0220D0E7           LDRB     R2,[R0, +R2]
   \   0000013C   0120C0E7           STRB     R2,[R0, +R1]
   \   00000140   010080E2           ADD      R0,R0,#+1
   \   00000144   040050E3           CMP      R0,#+4
   \   00000148   F9FFFFBA           BLT      ??SendData_4
   2473                      Cmd.Data.RefTmp2       = RefTmp2;
   \   0000014C   CC0094E5           LDR      R0,[R4, #+204]
   \   00000150   D01094E5           LDR      R1,[R4, #+208]
   \   00000154   ........           _BLF     __doubleToFloat,??__doubleToFloat??rA
   \   00000158   00008DE5           STR      R0,[SP, #+0]
   \   0000015C   0000A0E3           MOV      R0,#+0
   \   00000160   2B108DE2           ADD      R1,SP,#+43
   \                     ??SendData_5:
   \   00000164   0D20A0E1           MOV      R2,SP
   \   00000168   0220D0E7           LDRB     R2,[R0, +R2]
   \   0000016C   0120C0E7           STRB     R2,[R0, +R1]
   \   00000170   010080E2           ADD      R0,R0,#+1
   \   00000174   040050E3           CMP      R0,#+4
   \   00000178   F9FFFFBA           BLT      ??SendData_5
   2474                      Cmd.Data.Coeff         = Coeff;
   \   0000017C   D40094E5           LDR      R0,[R4, #+212]
   \   00000180   D81094E5           LDR      R1,[R4, #+216]
   \   00000184   ........           _BLF     __doubleToFloat,??__doubleToFloat??rA
   \   00000188   00008DE5           STR      R0,[SP, #+0]
   \   0000018C   0000A0E3           MOV      R0,#+0
   \   00000190   2F108DE2           ADD      R1,SP,#+47
   \                     ??SendData_6:
   \   00000194   0D20A0E1           MOV      R2,SP
   \   00000198   0220D0E7           LDRB     R2,[R0, +R2]
   \   0000019C   0120C0E7           STRB     R2,[R0, +R1]
   \   000001A0   010080E2           ADD      R0,R0,#+1
   \   000001A4   040050E3           CMP      R0,#+4
   \   000001A8   F9FFFFBA           BLT      ??SendData_6
   2475                      Cmd.Data.ActualTemp    = ActualTemp;
   \   000001AC   0000A0E3           MOV      R0,#+0
   \   000001B0   5B108DE2           ADD      R1,SP,#+91
   \                     ??SendData_7:
   \   000001B4   AC2084E2           ADD      R2,R4,#+172
   \   000001B8   0220D0E7           LDRB     R2,[R0, +R2]
   \   000001BC   0120C0E7           STRB     R2,[R0, +R1]
   \   000001C0   010080E2           ADD      R0,R0,#+1
   \   000001C4   040050E3           CMP      R0,#+4
   \   000001C8   F9FFFFBA           BLT      ??SendData_7
   2476                      Cmd.Data.MolMass       = MolMass;
   \   000001CC   DC0094E5           LDR      R0,[R4, #+220]
   \   000001D0   E01094E5           LDR      R1,[R4, #+224]
   \   000001D4   ........           _BLF     __doubleToFloat,??__doubleToFloat??rA
   \   000001D8   00008DE5           STR      R0,[SP, #+0]
   \   000001DC   0000A0E3           MOV      R0,#+0
   \   000001E0   5F108DE2           ADD      R1,SP,#+95
   \                     ??SendData_8:
   \   000001E4   0D20A0E1           MOV      R2,SP
   \   000001E8   0220D0E7           LDRB     R2,[R0, +R2]
   \   000001EC   0120C0E7           STRB     R2,[R0, +R1]
   \   000001F0   010080E2           ADD      R0,R0,#+1
   \   000001F4   040050E3           CMP      R0,#+4
   \   000001F8   F9FFFFBA           BLT      ??SendData_8
   2477                      Cmd.Data.Viscosity     = Viscosity;
   \   000001FC   E40094E5           LDR      R0,[R4, #+228]
   \   00000200   E81094E5           LDR      R1,[R4, #+232]
   \   00000204   ........           _BLF     __doubleToFloat,??__doubleToFloat??rA
   \   00000208   00008DE5           STR      R0,[SP, #+0]
   \   0000020C   0000A0E3           MOV      R0,#+0
   \   00000210   63108DE2           ADD      R1,SP,#+99
   \                     ??SendData_9:
   \   00000214   0D20A0E1           MOV      R2,SP
   \   00000218   0220D0E7           LDRB     R2,[R0, +R2]
   \   0000021C   0120C0E7           STRB     R2,[R0, +R1]
   \   00000220   010080E2           ADD      R0,R0,#+1
   \   00000224   040050E3           CMP      R0,#+4
   \   00000228   F9FFFFBA           BLT      ??SendData_9
   2478                      Cmd.Data.DB_IdNumber   = DB_IdNumber;
   \   0000022C   B00094E5           LDR      R0,[R4, #+176]
   2479                      memset(Cmd.Data.Name, 0, CTY_MAX_NAME_LENGTH);
   \   00000230   2820A0E3           MOV      R2,#+40
   \   00000234   6700CDE5           STRB     R0,[SP, #+103]
   \   00000238   2004A0E1           LSR      R0,R0,#+8
   \   0000023C   6800CDE5           STRB     R0,[SP, #+104]
   \   00000240   2004A0E1           LSR      R0,R0,#+8
   \   00000244   6900CDE5           STRB     R0,[SP, #+105]
   \   00000248   2004A0E1           LSR      R0,R0,#+8
   \   0000024C   6A00CDE5           STRB     R0,[SP, #+106]
   \   00000250   0010A0E3           MOV      R1,#+0
   \   00000254   33008DE2           ADD      R0,SP,#+51
   \   00000258   ........           _BLF     memset,??memset??rA
   2480                      strncpy(Cmd.Data.Name, Name.c_str(), CTY_MAX_NAME_LENGTH);
   \   0000025C   440084E2           ADD      R0,R4,#+68
   \   00000260   181090E5           LDR      R1,[R0, #+24]
   \   00000264   2820A0E3           MOV      R2,#+40
   \   00000268   100051E3           CMP      R1,#+16
   \   0000026C   04109025           LDRCS    R1,[R0, #+4]
   \   00000270   04108032           ADDCC    R1,R0,#+4
   \   00000274   33008DE2           ADD      R0,SP,#+51
   \   00000278   ........           _BLF     strncpy,??strncpy??rA
   2481                      bool sent = ANPRO10SendNormal(&Cmd);
   2482                      if ( !sent ) ErrorStatus =  E_QUEUE_FULL;
   \   0000027C   04008DE2           ADD      R0,SP,#+4
   \   00000280   ........           _BLF     ??ANPRO10SendNormal,??ANPRO10SendNormal??rA
   \   00000284   000050E3           CMP      R0,#+0
   \   00000288   0000A013           MOVNE    R0,#+0
   \   0000028C   0300A003           MOVEQ    R0,#+3
   \   00000290   000000EA           B        ??SendData_10
   2483                      else ErrorStatus =  E_OK;
   2484                  }
   2485                  break;
   2486              default:
   2487                  ErrorStatus =  E_UNKNOWN_COMMAND;
   \                     ??SendData_1:
   \   00000294   0100A0E3           MOV      R0,#+1
   2488                  break;
   2489              }
   2490              return (ErrorStatus);
   \                     ??SendData_10:
   \   00000298   6CD08DE2           ADD      SP,SP,#+108
   \   0000029C   ........           B        ?Subroutine50
   2491          }
   2492          

   \                                 In segment CODE, align 4, keep-with-next
   2493          int CargoTypeObject::FindCargoIndex(AnsiString Name) {
   \                     ??FindCargoIndex:
   \   00000000   F0402DE9           PUSH     {R4-R7,LR}
   2494              for ( int i = 0; i < SizeofBasicCargoNameList; i++ ) {
   \   00000004   ........           LDR      R6,??DataTable151  ;; SizeofBasicCargoNameList
   \   00000008   1CD04DE2           SUB      SP,SP,#+28
   \   0000000C   0040A0E1           MOV      R4,R0
   \   00000010   0050A0E3           MOV      R5,#+0
   \   00000014   000000EA           B        ??FindCargoIndex_1
   \                     ??FindCargoIndex_2:
   \   00000018   015085E2           ADD      R5,R5,#+1
   \                     ??FindCargoIndex_1:
   \   0000001C   002096E5           LDR      R2,[R6, #+0]
   \   00000020   020055E1           CMP      R5,R2
   \   00000024   1C0000AA           BGE      ??FindCargoIndex_3
   2495                  if ( LibGetValueName(BasicCargoNameList, SizeofBasicCargoNameList, i) == Name ) {
   \   00000028   0000A0E3           MOV      R0,#+0
   \   0000002C   01002DE9           PUSH     {R0}
   \   00000030   041096E5           LDR      R1,[R6, #+4]
   \   00000034   0530A0E1           MOV      R3,R5
   \   00000038   04008DE2           ADD      R0,SP,#+4
   \   0000003C   ........           _BLF     ??LibGetValueName,??LibGetValueName??rA
   \   00000040   180094E5           LDR      R0,[R4, #+24]
   \   00000044   04D08DE2           ADD      SP,SP,#+4
   \   00000048   100050E3           CMP      R0,#+16
   \   0000004C   140094E5           LDR      R0,[R4, #+20]
   \   00000050   04309425           LDRCS    R3,[R4, #+4]
   \   00000054   01002DE9           PUSH     {R0}
   \   00000058   18209DE5           LDR      R2,[SP, #+24]
   \   0000005C   04308432           ADDCC    R3,R4,#+4
   \   00000060   0010A0E3           MOV      R1,#+0
   \   00000064   04008DE2           ADD      R0,SP,#+4
   \   00000068   ........           _BLF     ??compare,??compare??rA
   \   0000006C   000050E3           CMP      R0,#+0
   \   00000070   04D08DE2           ADD      SP,SP,#+4
   \   00000074   0170A003           MOVEQ    R7,#+1
   \   00000078   0070A013           MOVNE    R7,#+0
   \   0000007C   0020A0E3           MOV      R2,#+0
   \   00000080   0110A0E3           MOV      R1,#+1
   \   00000084   0D00A0E1           MOV      R0,SP
   \   00000088   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   0000008C   000057E3           CMP      R7,#+0
   \   00000090   E0FFFF0A           BEQ      ??FindCargoIndex_2
   2496                      return i;
   \   00000094   0500A0E1           MOV      R0,R5
   \   00000098   000000EA           B        ??FindCargoIndex_4
   2497                  }
   2498              }
   2499              return -1;
   \                     ??FindCargoIndex_3:
   \   0000009C   0000E0E3           MVN      R0,#+0
   \                     ??FindCargoIndex_4:
   \   000000A0   1CD08DE2           ADD      SP,SP,#+28
   \   000000A4   ........           B        ?Subroutine54
   2500          }
   2501          
   2502          

   \                                 In segment CODE, align 4, keep-with-next
   2503          bool CargoTypeObject::IsTheCargoDefined(void) {
   2504              return IsDefined;
   \                     ??IsTheCargoDefined:
   \   00000000   A900D0E5           LDRB     R0,[R0, #+169]
   \   00000004   1EFF2FE1           BX       LR               ;; return
   2505          }
   2506          

   \                                 In segment CODE, align 4, keep-with-next
   2507          void CargoTypeObject::DeleteCargo(void) {
   \                     ??DeleteCargo:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   1CD04DE2           SUB      SP,SP,#+28
   \   00000008   0040A0E1           MOV      R4,R0
   2508              IsDefined = false;
   \   0000000C   0000A0E3           MOV      R0,#+0
   \   00000010   A900C4E5           STRB     R0,[R4, #+169]
   2509              Colour        = ColorTable[BaseCargoType];
   \   00000014   ........           LDR      R0,??DataTable152  ;; ??ColorTable
   \   00000018   F01094E5           LDR      R1,[R4, #+240]
   \   0000001C   011190E7           LDR      R1,[R0, +R1, LSL #+2]
   \   00000020   F41084E5           STR      R1,[R4, #+244]
   2510              if ( !IsFixed ) {
   \   00000024   A810D4E5           LDRB     R1,[R4, #+168]
   \   00000028   000051E3           CMP      R1,#+0
   2511                  CargoTypeKey  = CTY_NOT_DEFINED;
   \   0000002C   0010E003           MVNEQ    R1,#+0
   \   00000030   EC108405           STREQ    R1,[R4, #+236]
   2512              }
   2513              Name          = "Linear";
   \   00000034   411F80E2           ADD      R1,R0,#+260
   \   00000038   0D00A0E1           MOV      R0,SP
   \   0000003C   ........           _BLF     ??AnsiString,??AnsiString??rA
   \   00000040   ........           LDR      R1,??DataTable153  ;; ??npos
   \   00000044   0020A0E3           MOV      R2,#+0
   \   00000048   003091E5           LDR      R3,[R1, #+0]
   \   0000004C   0010A0E1           MOV      R1,R0
   \   00000050   440084E2           ADD      R0,R4,#+68
   \   00000054   ........           _BLF     ??assign,??assign??rA
   \   00000058   0020A0E3           MOV      R2,#+0
   \   0000005C   0110A0E3           MOV      R1,#+1
   \   00000060   0D00A0E1           MOV      R0,SP
   \   00000064   ........           _BLF     ??_Tidy,??_Tidy??rA
   2514              InputBasicCargoType(CTY_LINEAR);
   \   00000068   0110A0E3           MOV      R1,#+1
   \   0000006C   0400A0E1           MOV      R0,R4
   \   00000070   ........           BL       ??InputBasicCargoType
   2515          }
   \   00000074   1CD08DE2           ADD      SP,SP,#+28
   \   00000078                      REQUIRE ?Subroutine57
   \   00000078                      ;; // Fall through to label ?Subroutine57
   2516          

   \                                 In segment CODE, align 4, keep-with-next
   2517          void CargoTypeObject::SetTemperature(double NewTemp) {
   \                     ??SetTemperature:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   2518              ActualTemp = NewTemp;
   \   00000008   0100A0E1           MOV      R0,R1
   \   0000000C   0210A0E1           MOV      R1,R2
   \   00000010   ........           _BLF     __doubleToFloat,??__doubleToFloat??rA
   \   00000014   AC0084E5           STR      R0,[R4, #+172]
   2519          }
   \   00000018   ........           B        ?Subroutine57
   2520          // The following calculations are used in systems delivered to Henri Systems
   2521          // The code return 54.67*((Press+AIPressSensor::AtmPressure)* MH2O_TO_BAR+NORMAL_ATM)/(84.6*(TEMP_ZERO+Temp));
   2522          // is from Hashi Energy. They got it from Agip
   2523          

   \                                 In segment CODE, align 4, keep-with-next
   2524          double CargoTypeObject::GasDensity(double Temp, double Press) {
   \                     ??GasDensity:
   \   00000000   08002DE9           PUSH     {R3}
   \   00000004   F14F2DE9           PUSH     {R0,R4-R11,LR}
   \   00000008   08D04DE2           SUB      SP,SP,#+8
   \   0000000C   30008DE2           ADD      R0,SP,#+48
   \   00000010   300090E8           LDM      R0,{R4,R5}
   2525              if ( BaseCargoType >= CTY_GAS_AMMONIA ) {
   \   00000014   08009DE5           LDR      R0,[SP, #+8]
   \   00000018   0180A0E1           MOV      R8,R1
   \   0000001C   F00090E5           LDR      R0,[R0, #+240]
   \   00000020   0290A0E1           MOV      R9,R2
   \   00000024   1B0050E3           CMP      R0,#+27
   \   00000028   150000BA           BLT      ??GasDensity_1
   2526                  int ProductIndex = BaseCargoType - CTY_GAS_AMMONIA;
   2527                  GasProduct *GasPtr = (GasProduct *)&Product[ProductIndex];
   \   0000002C   ........           LDR      R3,??DataTable154  ;; Product
   \   00000030   9B10E0E3           MVN      R1,#+155
   \   00000034   451CC1E3           BIC      R1,R1,#0x4500
   \   00000038   A52FA0E3           MOV      R2,#+660
   \   0000003C   923020E0           MLA      R0,R2,R0,R3
   \   00000040   000081E0           ADD      R0,R1,R0
   2528          
   2529                  if ( GasPtr->TabEntries ) {
   \   00000044   601090E5           LDR      R1,[R0, #+96]
   \   00000048   000051E3           CMP      R1,#+0
   \   0000004C   0A00000A           BEQ      ??GasDensity_2
   2530                      return GetVapDensityFromTable(Temp, Press, GasPtr->DnsTable, GasPtr->TabEntries);
   \   00000050   02002DE9           PUSH     {R1}
   \   00000054   640080E2           ADD      R0,R0,#+100
   \   00000058   01002DE9           PUSH     {R0}
   \   0000005C   30002DE9           PUSH     {R4,R5}
   \   00000060   18009DE5           LDR      R0,[SP, #+24]
   \   00000064   0800BDE8           POP      {R3}
   \   00000068   0920A0E1           MOV      R2,R9
   \   0000006C   0810A0E1           MOV      R1,R8
   \   00000070   ........           BL       ??GetVapDensityFromTable
   \   00000074   0CD08DE2           ADD      SP,SP,#+12
   \   00000078   610000EA           B        ??GasDensity_3
   2531                  } else {
   2532                      return 0.0; //ChemgasPureGasCalcVapour(GasPtr->MolMass,GasPtr->H,GasPtr->N,Temp,Press);
   \                     ??GasDensity_2:
   \   0000007C   0000A0E3           MOV      R0,#+0
   \   00000080   5F0000EA           B        ??GasDensity_3
   2533                  }
   2534          
   2535              } else {
   2536                  /*
   2537                  Original calculation of gas weight
   2538                  float GasWeight     = GasVolume*54.67*(Pressure* MH2O_TO_BAR+1.0332)/(84.6*(TEMP_ZERO+Temperature));
   2539                  */
   2540                  if ( MolMass ) {
   \                     ??GasDensity_1:
   \   00000084   80019FE5           LDR      R0,??GasDensity_4  ;; ??AtmPressure
   \   00000088   000090E5           LDR      R0,[R0, #+0]
   \   0000008C   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   00000090   00A0A0E1           MOV      R10,R0
   \   00000094   01B0A0E1           MOV      R11,R1
   \   00000098   0A20A0E1           MOV      R2,R10
   \   0000009C   0B30A0E1           MOV      R3,R11
   \   000000A0   0400A0E1           MOV      R0,R4
   \   000000A4   0510A0E1           MOV      R1,R5
   \   000000A8   ........           _BLF     __dAdd,??__dAdd??rA
   \   000000AC   08309DE5           LDR      R3,[SP, #+8]
   \   000000B0   0060A0E1           MOV      R6,R0
   \   000000B4   DC0093E5           LDR      R0,[R3, #+220]
   \   000000B8   0170A0E1           MOV      R7,R1
   \   000000BC   E01093E5           LDR      R1,[R3, #+224]
   \   000000C0   0D20A0E1           MOV      R2,SP
   \   000000C4   030082E8           STM      R2,{R0,R1}
   \   000000C8   0D00A0E1           MOV      R0,SP
   \   000000CC   030090E8           LDM      R0,{R0,R1}
   \   000000D0   0020A0E1           MOV      R2,R0
   \   000000D4   0130A0E1           MOV      R3,R1
   \   000000D8   0000A0E3           MOV      R0,#+0
   \   000000DC   0010A0E3           MOV      R1,#+0
   \   000000E0   ........           _BLF     __dNotEqual,??__dNotEqual??rA
   \   000000E4   000050E3           CMP      R0,#+0
   \   000000E8   2500000A           BEQ      ??GasDensity_5
   2541                      double VapPress = (Press + AIPressSensor::AtmPressure) * MH2O_TO_BAR;
   \   000000EC   ........           LDR      R0,??DataTable163  ;; 0xffffffffda554b8c
   \   000000F0   ........           LDR      R1,??DataTable164  ;; 0x3fb91ae2
   \   000000F4   0620A0E1           MOV      R2,R6
   \   000000F8   0730A0E1           MOV      R3,R7
   \   000000FC   ........           _BLF     __dMul,??__dMul??rA
   2542                      if ( VapPress <= 0.8 ) {
   \   00000100   ........           LDR      R2,??DataTable157  ;; 0xffffffff9999999b
   \   00000104   ........           LDR      R3,??DataTable158  ;; 0x3fe99999
   \   00000108   0040A0E1           MOV      R4,R0
   \   0000010C   0150A0E1           MOV      R5,R1
   \   00000110   ........           _BLF     __dLess,??__dLess??rA
   2543                          VapPress = 1.0;
   2544                      }
   2545                      return ((MolMass / GAS_CONSTANT_HS * TEMP_ZERO) / (Temp + TEMP_ZERO) * VapPress) / 1000.0;
   \   00000114   F4109FE5           LDR      R1,??GasDensity_4+0x4  ;; 0x40711266
   \   00000118   000050E3           CMP      R0,#+0
   \   0000011C   F0009FE5           LDR      R0,??GasDensity_4+0x8  ;; 0x66666666
   \   00000120   0040A013           MOVNE    R4,#+0
   \   00000124   C055A013           MOVNE    R5,#+805306368
   \   00000128   FF568513           ORRNE    R5,R5,#0xFF00000
   \   0000012C   0820A0E1           MOV      R2,R8
   \   00000130   0930A0E1           MOV      R3,R9
   \   00000134   ........           _BLF     __dAdd,??__dAdd??rA
   \   00000138   0060A0E1           MOV      R6,R0
   \   0000013C   0170A0E1           MOV      R7,R1
   \   00000140   D0209FE5           LDR      R2,??GasDensity_4+0xC  ;; 0x33333333
   \   00000144   D0309FE5           LDR      R3,??GasDensity_4+0x10  ;; 0x4036b333
   \   00000148   0D00A0E1           MOV      R0,SP
   \   0000014C   030090E8           LDM      R0,{R0,R1}
   \   00000150   ........           _BLF     __dDiv,??__dDiv??rA
   \   00000154   B8209FE5           LDR      R2,??GasDensity_4+0x8  ;; 0x66666666
   \   00000158   B0309FE5           LDR      R3,??GasDensity_4+0x4  ;; 0x40711266
   \   0000015C   ........           _BLF     __dMul,??__dMul??rA
   \   00000160   0620A0E1           MOV      R2,R6
   \   00000164   0730A0E1           MOV      R3,R7
   \   00000168   ........           _BLF     __dDiv,??__dDiv??rA
   \   0000016C   0420A0E1           MOV      R2,R4
   \   00000170   0530A0E1           MOV      R3,R5
   \   00000174   ........           _BLF     __dMul,??__dMul??rA
   \   00000178   ........           LDR      R3,??DataTable162  ;; 0x408f4000
   \   0000017C   0020A0E3           MOV      R2,#+0
   \   00000180   1E0000EA           B        ??GasDensity_6
   2546                  } else {
   2547                      if ( Press + AIPressSensor::AtmPressure < 0.0 ) {
   \                     ??GasDensity_5:
   \   00000184   0600A0E1           MOV      R0,R6
   \   00000188   0710A0E1           MOV      R1,R7
   \   0000018C   0020A0E3           MOV      R2,#+0
   \   00000190   0030A0E3           MOV      R3,#+0
   \   00000194   ........           _BLF     __dLess,??__dLess??rA
   2548                          Press = 0.0;
   2549                      }
   2550                      return 54.67 * ((Press + AIPressSensor::AtmPressure) * MH2O_TO_BAR) / (84.6 * (TEMP_ZERO + Temp));
   \   00000198   70109FE5           LDR      R1,??GasDensity_4+0x4  ;; 0x40711266
   \   0000019C   000050E3           CMP      R0,#+0
   \   000001A0   6C009FE5           LDR      R0,??GasDensity_4+0x8  ;; 0x66666666
   \   000001A4   0040A013           MOVNE    R4,#+0
   \   000001A8   0050A013           MOVNE    R5,#+0
   \   000001AC   0820A0E1           MOV      R2,R8
   \   000001B0   0930A0E1           MOV      R3,R9
   \   000001B4   ........           _BLF     __dAdd,??__dAdd??rA
   \   000001B8   54209FE5           LDR      R2,??GasDensity_4+0x8  ;; 0x66666666
   \   000001BC   5C309FE5           LDR      R3,??GasDensity_4+0x14  ;; 0x40552666
   \   000001C0   ........           _BLF     __dMul,??__dMul??rA
   \   000001C4   0060A0E1           MOV      R6,R0
   \   000001C8   0170A0E1           MOV      R7,R1
   \   000001CC   0A20A0E1           MOV      R2,R10
   \   000001D0   0B30A0E1           MOV      R3,R11
   \   000001D4   0400A0E1           MOV      R0,R4
   \   000001D8   0510A0E1           MOV      R1,R5
   \   000001DC   ........           _BLF     __dAdd,??__dAdd??rA
   \   000001E0   ........           LDR      R2,??DataTable163  ;; 0xffffffffda554b8c
   \   000001E4   ........           LDR      R3,??DataTable164  ;; 0x3fb91ae2
   \   000001E8   ........           _BLF     __dMul,??__dMul??rA
   \   000001EC   30209FE5           LDR      R2,??GasDensity_4+0x18  ;; 0xffffffff8f5c28f6
   \   000001F0   30309FE5           LDR      R3,??GasDensity_4+0x1C  ;; 0x404b55c2
   \   000001F4   ........           _BLF     __dMul,??__dMul??rA
   \   000001F8   0620A0E1           MOV      R2,R6
   \   000001FC   0730A0E1           MOV      R3,R7
   \                     ??GasDensity_6:
   \   00000200   ........           _BLF     __dDiv,??__dDiv??rA
   \                     ??GasDensity_3:
   \   00000204   0CD08DE2           ADD      SP,SP,#+12
   \   00000208   ........           B        ?Subroutine49
   \                     ??GasDensity_4:
   \   0000020C   ........           DC32     ??AtmPressure
   \   00000210   66127140           DC32     0x40711266
   \   00000214   66666666           DC32     0x66666666
   \   00000218   33333333           DC32     0x33333333
   \   0000021C   33B33640           DC32     0x4036b333
   \   00000220   66265540           DC32     0x40552666
   \   00000224   F6285C8F           DC32     0xffffffff8f5c28f6
   \   00000228   C2554B40           DC32     0x404b55c2
   2551                  }
   2552              }
   2553          
   2554          }
   2555          
   2556          

   \                                 In segment CODE, align 4, keep-with-next
   2557          double CargoTypeObject::GetLiqDensityFromTable(double Temp, DnsInfo Table[], int Entries) {
   \                     ??GetLiqDensityFromTable:
   \   00000000   F04D2DE9           PUSH     {R4-R8,R10,R11,LR}
   \   00000004   20609DE5           LDR      R6,[SP, #+32]
   \   00000008   0140A0E1           MOV      R4,R1
   \   0000000C   0250A0E1           MOV      R5,R2
   \   00000010   0380A0E1           MOV      R8,R3
   2558              if ( !Entries ) return 0.0;
   \   00000014   000056E3           CMP      R6,#+0
   \   00000018   0000A003           MOVEQ    R0,#+0
   \   0000001C   0010A003           MOVEQ    R1,#+0
   \   00000020   3300000A           BEQ      ??GetLiqDensityFromTable_1
   2559              int  i = 0;
   \   00000024   0070A0E3           MOV      R7,#+0
   2560              float RetVal;
   2561              if ( Entries == 1 ) {
   \   00000028   010056E3           CMP      R6,#+1
   2562                  return (Table[0].DensitySolid);
   \   0000002C   04009805           LDREQ    R0,[R8, #+4]
   \   00000030   2E00000A           BEQ      ??GetLiqDensityFromTable_2
   2563              }
   2564              if ( Table[0].Temp > Table[1].Temp ) {
   \   00000034   100098E5           LDR      R0,[R8, #+16]
   \   00000038   001098E5           LDR      R1,[R8, #+0]
   \   0000003C   ........           _BLF     __fLess,??__fLess??rA
   \   00000040   000050E3           CMP      R0,#+0
   \   00000044   0D00000A           BEQ      ??GetLiqDensityFromTable_3
   2565                  while ( (i < Entries) && (Table[i].Temp > Temp) ) i++;
   \                     ??GetLiqDensityFromTable_4:
   \   00000048   060057E1           CMP      R7,R6
   \   0000004C   140000AA           BGE      ??GetLiqDensityFromTable_5
   \   00000050   070298E7           LDR      R0,[R8, +R7, LSL #+4]
   \   00000054   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   00000058   0020A0E1           MOV      R2,R0
   \   0000005C   0130A0E1           MOV      R3,R1
   \   00000060   0400A0E1           MOV      R0,R4
   \   00000064   0510A0E1           MOV      R1,R5
   \   00000068   ........           _BLF     __dLess,??__dLess??rA
   \   0000006C   000050E3           CMP      R0,#+0
   \   00000070   0B00000A           BEQ      ??GetLiqDensityFromTable_5
   \   00000074   017087E2           ADD      R7,R7,#+1
   \   00000078   F2FFFFEA           B        ??GetLiqDensityFromTable_4
   2566              } else {
   2567                  while ( (i < Entries) && (Table[i].Temp < Temp) ) i++;
   \                     ??GetLiqDensityFromTable_6:
   \   0000007C   017087E2           ADD      R7,R7,#+1
   \                     ??GetLiqDensityFromTable_3:
   \   00000080   060057E1           CMP      R7,R6
   \   00000084   060000AA           BGE      ??GetLiqDensityFromTable_5
   \   00000088   070298E7           LDR      R0,[R8, +R7, LSL #+4]
   \   0000008C   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   00000090   0420A0E1           MOV      R2,R4
   \   00000094   0530A0E1           MOV      R3,R5
   \   00000098   ........           _BLF     __dLess,??__dLess??rA
   \   0000009C   000050E3           CMP      R0,#+0
   \   000000A0   F5FFFF1A           BNE      ??GetLiqDensityFromTable_6
   2568              }
   2569          
   2570              if ( i > Entries - 1 ) {
   \                     ??GetLiqDensityFromTable_5:
   \   000000A4   010046E2           SUB      R0,R6,#+1
   \   000000A8   070050E1           CMP      R0,R7
   2571                  RetVal = Table[Entries - 1].DensitySolid;
   \   000000AC   060288B0           ADDLT    R0,R8,R6, LSL #+4
   \   000000B0   0C0010B5           LDRLT    R0,[R0, #-12]
   \   000000B4   0D0000BA           BLT      ??GetLiqDensityFromTable_2
   2572              } else {
   2573                  if ( !i )   i++;
   \   000000B8   000057E3           CMP      R7,#+0
   \   000000BC   0170A003           MOVEQ    R7,#+1
   2574                  RetVal = IntPol1stDeg(Table[i - 1].Temp, Table[i].Temp, Table[i - 1].DensitySolid, Table[i].DensitySolid, Temp);
   \   000000C0   076288E0           ADD      R6,R8,R7, LSL #+4
   \   000000C4   107046E2           SUB      R7,R6,#+16
   \   000000C8   0400A0E1           MOV      R0,R4
   \   000000CC   0510A0E1           MOV      R1,R5
   \   000000D0   ........           _BLF     __doubleToFloat,??__doubleToFloat??rA
   \   000000D4   01002DE9           PUSH     {R0}
   \   000000D8   043096E5           LDR      R3,[R6, #+4]
   \   000000DC   042097E5           LDR      R2,[R7, #+4]
   \   000000E0   001096E5           LDR      R1,[R6, #+0]
   \   000000E4   000097E5           LDR      R0,[R7, #+0]
   \   000000E8   ........           _BLF     ??IntPol1stDeg,??IntPol1stDeg??rA
   \   000000EC   04D08DE2           ADD      SP,SP,#+4
   2575              }
   2576              return (RetVal);
   \                     ??GetLiqDensityFromTable_2:
   \   000000F0   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \                     ??GetLiqDensityFromTable_1:
   \   000000F4   F04DBDE8           POP      {R4-R8,R10,R11,LR}
   \   000000F8   1EFF2FE1           BX       LR               ;; return
   2577          
   2578          }
   2579          

   \                                 In segment CODE, align 4, keep-with-next
   2580          double CargoTypeObject::GetVapDensityFromTable(double Temp, double Press, DnsInfo Table[], int Entries) {
   \                     ??GetVapDensityFromTable:
   \   00000000   08002DE9           PUSH     {R3}
   \   00000004   F04F2DE9           PUSH     {R4-R11,LR}
   \   00000008   30809DE5           LDR      R8,[SP, #+48]
   \   0000000C   2C609DE5           LDR      R6,[SP, #+44]
   \   00000010   0140A0E1           MOV      R4,R1
   \   00000014   0250A0E1           MOV      R5,R2
   2581              if ( !Entries ) return 0.0;
   \   00000018   000058E3           CMP      R8,#+0
   \   0000001C   0000A003           MOVEQ    R0,#+0
   \   00000020   0010A003           MOVEQ    R1,#+0
   \   00000024   4F00000A           BEQ      ??GetVapDensityFromTable_1
   2582              int    i        = 0;
   \   00000028   0070A0E3           MOV      R7,#+0
   2583              if ( Entries == 1 ) {
   \   0000002C   010058E3           CMP      R8,#+1
   \   00000030   0200001A           BNE      ??GetVapDensityFromTable_2
   2584                  return (Table[0].DensitySolid);
   \   00000034   040096E5           LDR      R0,[R6, #+4]
   \   00000038   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   0000003C   490000EA           B        ??GetVapDensityFromTable_1
   2585              }
   2586              if ( Table[0].Temp > Table[1].Temp ) {
   \                     ??GetVapDensityFromTable_2:
   \   00000040   100096E5           LDR      R0,[R6, #+16]
   \   00000044   001096E5           LDR      R1,[R6, #+0]
   \   00000048   ........           _BLF     __fLess,??__fLess??rA
   \   0000004C   000050E3           CMP      R0,#+0
   \   00000050   0D00000A           BEQ      ??GetVapDensityFromTable_3
   2587                  while ( (i < Entries) && (Table[i].Temp > Temp) ) i++;
   \                     ??GetVapDensityFromTable_4:
   \   00000054   080057E1           CMP      R7,R8
   \   00000058   140000AA           BGE      ??GetVapDensityFromTable_5
   \   0000005C   070296E7           LDR      R0,[R6, +R7, LSL #+4]
   \   00000060   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   00000064   0020A0E1           MOV      R2,R0
   \   00000068   0130A0E1           MOV      R3,R1
   \   0000006C   0400A0E1           MOV      R0,R4
   \   00000070   0510A0E1           MOV      R1,R5
   \   00000074   ........           _BLF     __dLess,??__dLess??rA
   \   00000078   000050E3           CMP      R0,#+0
   \   0000007C   0B00000A           BEQ      ??GetVapDensityFromTable_5
   \   00000080   017087E2           ADD      R7,R7,#+1
   \   00000084   F2FFFFEA           B        ??GetVapDensityFromTable_4
   2588              } else {
   2589                  while ( (i < Entries) && (Table[i].Temp < Temp) ) i++;
   \                     ??GetVapDensityFromTable_6:
   \   00000088   017087E2           ADD      R7,R7,#+1
   \                     ??GetVapDensityFromTable_3:
   \   0000008C   080057E1           CMP      R7,R8
   \   00000090   060000AA           BGE      ??GetVapDensityFromTable_5
   \   00000094   070296E7           LDR      R0,[R6, +R7, LSL #+4]
   \   00000098   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   0000009C   0420A0E1           MOV      R2,R4
   \   000000A0   0530A0E1           MOV      R3,R5
   \   000000A4   ........           _BLF     __dLess,??__dLess??rA
   \   000000A8   000050E3           CMP      R0,#+0
   \   000000AC   F5FFFF1A           BNE      ??GetVapDensityFromTable_6
   2590              }
   2591          
   2592              if ( !i ) {
   \                     ??GetVapDensityFromTable_5:
   \   000000B0   000057E3           CMP      R7,#+0
   2593                  i++;
   \   000000B4   0170A003           MOVEQ    R7,#+1
   \   000000B8   0200000A           BEQ      ??GetVapDensityFromTable_7
   2594              } else if ( i > Entries - 1 ) {
   \   000000BC   010048E2           SUB      R0,R8,#+1
   \   000000C0   070050E1           CMP      R0,R7
   2595                  i = Entries - 1;
   \   000000C4   0070A0B1           MOVLT    R7,R0
   2596              }
   2597              Press *= MH2O_TO_BAR;
   2598              double VapPress = IntPol1stDeg(Table[i - 1].Temp, Table[i].Temp, Table[i - 1].Pressure, Table[i].Pressure, Temp);
   \                     ??GetVapDensityFromTable_7:
   \   000000C8   076286E0           ADD      R6,R6,R7, LSL #+4
   \   000000CC   088086E2           ADD      R8,R6,#+8
   \   000000D0   107046E2           SUB      R7,R6,#+16
   \   000000D4   0400A0E1           MOV      R0,R4
   \   000000D8   0510A0E1           MOV      R1,R5
   \   000000DC   ........           _BLF     __doubleToFloat,??__doubleToFloat??rA
   \   000000E0   0090A0E1           MOV      R9,R0
   \   000000E4   01002DE9           PUSH     {R0}
   \   000000E8   043098E5           LDR      R3,[R8, #+4]
   \   000000EC   0C2097E5           LDR      R2,[R7, #+12]
   \   000000F0   001096E5           LDR      R1,[R6, #+0]
   \   000000F4   000097E5           LDR      R0,[R7, #+0]
   \   000000F8   ........           _BLF     ??IntPol1stDeg,??IntPol1stDeg??rA
   \   000000FC   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   00000100   0040A0E1           MOV      R4,R0
   \   00000104   0150A0E1           MOV      R5,R1
   2599              //double DnsLiq = IntPol1stDeg(Table[i-1].Temp,Table[i].Temp,Table[i-1].DensitySolid,Table[i].DensitySolid,Temp);
   2600              // The density unit for vapour must be converted to tom/m3
   2601              double DnsVap   = IntPol1stDeg(Table[i - 1].Temp, Table[i].Temp, Table[i - 1].DensityVapor, Table[i].DensityVapor, Temp) / 1000.0;
   \   00000108   00022DE9           PUSH     {R9}
   \   0000010C   003098E5           LDR      R3,[R8, #+0]
   \   00000110   082097E5           LDR      R2,[R7, #+8]
   \   00000114   001096E5           LDR      R1,[R6, #+0]
   \   00000118   000097E5           LDR      R0,[R7, #+0]
   \   0000011C   ........           _BLF     ??IntPol1stDeg,??IntPol1stDeg??rA
   \   00000120   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   00000124   ........           LDR      R3,??DataTable162  ;; 0x408f4000
   \   00000128   0020A0E3           MOV      R2,#+0
   \   0000012C   ........           _BLF     __dDiv,??__dDiv??rA
   \   00000130   00A0A0E1           MOV      R10,R0
   2602              double Density  = Press * DnsVap / VapPress;
   2603          
   2604              return (Density);
   \   00000134   2C008DE2           ADD      R0,SP,#+44
   \   00000138   0C0090E8           LDM      R0,{R2,R3}
   \   0000013C   ........           LDR      R0,??DataTable163  ;; 0xffffffffda554b8c
   \   00000140   01B0A0E1           MOV      R11,R1
   \   00000144   ........           LDR      R1,??DataTable164  ;; 0x3fb91ae2
   \   00000148   ........           _BLF     __dMul,??__dMul??rA
   \   0000014C   0A20A0E1           MOV      R2,R10
   \   00000150   0B30A0E1           MOV      R3,R11
   \   00000154   ........           _BLF     __dMul,??__dMul??rA
   \   00000158   0420A0E1           MOV      R2,R4
   \   0000015C   0530A0E1           MOV      R3,R5
   \   00000160   ........           _BLF     __dDiv,??__dDiv??rA
   \   00000164   08D08DE2           ADD      SP,SP,#+8
   \                     ??GetVapDensityFromTable_1:
   \   00000168   ........           B        ?Subroutine49
   2605          
   2606          }
   2607          

   \                                 In segment DATA_I, align 4, align-sorted
   2608          ValueList CargoTypeValueList[] =  {
   2609              { L_WORD304, L_WORD237, SVT_BLANK },                                   //   {"Unused"       ,"",SVT_BLANK},
   2610              { L_WORD393, L_WORD237, SVT_CARGO_TYPE_NAME },                         //   {"Cargo Name"   ,"",SVT_CARGO_TYPE_NAME},
   2611              { L_WORD102, L_WORD237, SVT_API },                                     //   {"API"          ,"",SVT_API},
   2612              { L_WORD394, L_WORD237, SVT_VCF },                                     //   {"VolCorrFactor","",SVT_VCF},
   2613              { L_WORD395, L_WORD237, SVT_VCF_AT_TEMP },                             //   {"VCF@Temp"     ,"",SVT_VCF_AT_TEMP},
   2614              { L_WORD396, L_WORD237, SVT_MEASURED_API },                            //   {"Measured API" ,"",SVT_MEASURED_API},
   2615              { L_WORD397, L_WORD237, SVT_COMP_DNS },                                //   {"Comp. Density","",SVT_COMP_DNS},
   2616              { L_WORD398, L_WORD237, SVT_REF_DNS1 },                                //   {"Ref.Density1" ,"",SVT_REF_DNS1},
   2617              { L_WORD399, L_WORD237, SVT_REF_DNS2 },                                //   {"Ref.Density2" ,"",SVT_REF_DNS2},
   2618              { L_WORD400, L_WORD237, SVT_REF_TMP1 },                                //   {"Ref. Temp1"   ,"",SVT_REF_TMP1},
   2619              { L_WORD401, L_WORD237, SVT_REF_TMP2 },                                //   {"Ref. Temp2"   ,"",SVT_REF_TMP2},
   2620              { L_WORD108, L_WORD237, SVT_COEFF },                                   //   {"Coefficient"  ,"",SVT_COEFF},
   2621              { L_WORD995, L_WORD237, SVT_MOLMASS },                                 //   {"MOL Mass"     ,"",SVT_MOLMASS},
   2622              { L_WORD1087, L_WORD237, SVT_VISCOSITY },                               //   {"Viscosity"    ,"",SVT_VISCOSITY},
   2623              { L_WORD1096, L_WORD237, SVT_CARGO_COLOR },                             //   {"Cargo color"  ,"",SVT_CARGO_COLOR},
   2624              SVT_CARGO_COLOR
   2625          
   2626          };
   2627          int SizeofCargoTypeValueList        = NELEMENTS(CargoTypeValueList);
   \                     SizeofCargoTypeValueList:
   \   00000000                      DS8 4
   \   00000004                      REQUIRE `?<Initializer for SizeofCargoTypeValueList>`
   \                     CargoTypeValueList:
   \   00000004                      DS8 192
   \   000000C4                      REQUIRE `?<Initializer for CargoTypeValueList>`
   2628          

   \                                 In segment DATA_I, align 4, align-sorted
   2629          ValueList DefaultBasicCargoNameList[] =  {
   \                     DefaultBasicCargoNameList:
   \   00000000                      DS8 336
   \   00000150                      REQUIRE `?<Initializer for DefaultBasicCargoNameList>`
   2630              { L_WORD402, L_WORD237, CTY_NOT_DEFINED },                            // "Not defined"
   2631              { L_WORD403, L_WORD237, CTY_SIMPLE_LIN },                             // "Simple"
   2632              { L_WORD101, L_WORD237, CTY_LINEAR },                                 // "Linear"
   2633              { L_WORD405, L_WORD237, CTY_BALLAST },                                // "Ballast"
   2634              { L_WORD406, L_WORD237, CTY_HFO },                                    // "Heavy fuel"
   2635              { L_WORD407, L_WORD237, CTY_DO },                                     // "Diesel"
   2636              { L_WORD408, L_WORD237, CTY_LUB },                                    // "Lubricants"
   2637              { L_WORD409, L_WORD237, CTY_FW },                                     // "Fresh water"
   2638              { L_WORD410, L_WORD237, CTY_SEA },                                    // "Sea water"
   2639              { L_WORD411, L_WORD237, CTY_API_6A },                                 // "API 6A"
   2640              { L_WORD412, L_WORD237, CTY_API_6B },                                 // "API 6B"
   2641              { L_WORD413, L_WORD237, CTY_API_6D },                                 // "API 6D"
   2642              { L_WORD414, L_WORD237, CTY_API_53A },                                // "API 53A"
   2643              { L_WORD415, L_WORD237, CTY_API_53B },                                // "API 53B"
   2644              { L_WORD416, L_WORD237, CTY_API_53D },                                // "API 53D"
   2645              { L_WORD939, L_WORD237, CTY_API_53E },                                // "API 53E"
   2646              { L_WORD417, L_WORD237, CTY_API_54A },                                // "API 54A"
   2647              { L_WORD418, L_WORD237, CTY_API_54B },                                // "API 54B"
   2648              { L_WORD419, L_WORD237, CTY_API_54D },                                // "API 54D"
   2649              { L_WORD940, L_WORD237, CTY_API_54E },                                // "API 54D"
   2650              { L_WORD923, L_WORD237, CTY_API_59A },                                // "API 59A"
   2651              { L_WORD924, L_WORD237, CTY_API_59B },                                // "API 59B"
   2652              { L_WORD925, L_WORD237, CTY_API_59D },                                // "API 59D"
   2653              { L_WORD941, L_WORD237, CTY_API_59E },                                // "API 59E"
   2654              { L_WORD926, L_WORD237, CTY_API_60A },                                // "API 60A"
   2655              { L_WORD927, L_WORD237, CTY_API_60B },                                // "API 60B"
   2656              { L_WORD928, L_WORD237, CTY_API_60D },                                // "API 60D"
   2657              { L_WORD942, L_WORD237, CTY_API_60E },                                // "API 60E"
   2658          };

   \                                 In segment DATA_I, align 4, align-sorted
   2659          int SizeofDefaultBasicCargoNameList = NELEMENTS(DefaultBasicCargoNameList);
   \                     SizeofDefaultBasicCargoNameList:
   \   00000000                      DS8 4
   \   00000004                      REQUIRE `?<Initializer for SizeofDefaultBasicCargoNameL`

   \                                 In segment DATA_I, align 4, align-sorted
   2660          int SizeofBasicCargoNameList        = NELEMENTS(DefaultBasicCargoNameList);
   \                     SizeofBasicCargoNameList:
   \   00000000                      DS8 4
   \   00000004                      REQUIRE `?<Initializer for SizeofBasicCargoNameList>`
   2661          
   2662          ValueList *BasicCargoNameList = DefaultBasicCargoNameList;
   \                     BasicCargoNameList:
   \   00000004                      DS8 4
   \   00000008                      REQUIRE `?<Initializer for BasicCargoNameList>`
   2663          

   \                                 In segment DATA_I, align 4, align-sorted
   2664          ValueList ChemGasCargoNameList[] =  {
   \                     ChemGasCargoNameList:
   \   00000000                      DS8 612
   \   00000264                      REQUIRE `?<Initializer for ChemGasCargoNameList>`
   2665              { L_WORD402, L_WORD237, CTY_NOT_DEFINED },                            // "Not defined"
   2666              { L_WORD403, L_WORD237, CTY_SIMPLE_LIN },                             // "Simple"
   2667              { L_WORD101, L_WORD237, CTY_LINEAR },                                 // "Linear"
   2668              { L_WORD405, L_WORD237, CTY_BALLAST },                                // "Ballast"
   2669              { L_WORD406, L_WORD237, CTY_HFO },                                    // "Heavy fuel"
   2670              { L_WORD407, L_WORD237, CTY_DO },                                     // "Diesel"
   2671              { L_WORD408, L_WORD237, CTY_LUB },                                    // "Lubricants"
   2672              { L_WORD409, L_WORD237, CTY_FW },                                     // "Fresh water"
   2673              { L_WORD410, L_WORD237, CTY_SEA },                                    // "Sea water"
   2674              { L_WORD411, L_WORD237, CTY_API_6A },                                 // "API 6A"
   2675              { L_WORD412, L_WORD237, CTY_API_6B },                                 // "API 6B"
   2676              { L_WORD413, L_WORD237, CTY_API_6D },                                 // "API 6D"
   2677              { L_WORD414, L_WORD237, CTY_API_53A },                                // "API 53A"
   2678              { L_WORD415, L_WORD237, CTY_API_53B },                                // "API 53B"
   2679              { L_WORD416, L_WORD237, CTY_API_53D },                                // "API 53D"
   2680              { L_WORD939, L_WORD237, CTY_API_53E },                                // "API 53E"
   2681              { L_WORD417, L_WORD237, CTY_API_54A },                                // "API 54A"
   2682              { L_WORD418, L_WORD237, CTY_API_54B },                                // "API 54B"
   2683              { L_WORD419, L_WORD237, CTY_API_54D },                                // "API 54D"
   2684              { L_WORD940, L_WORD237, CTY_API_54E },                                // "API 54D"
   2685              { L_WORD923, L_WORD237, CTY_API_59A },                                // "API 59A"
   2686              { L_WORD924, L_WORD237, CTY_API_59B },                                // "API 59B"
   2687              { L_WORD925, L_WORD237, CTY_API_59D },                                // "API 59D"
   2688              { L_WORD941, L_WORD237, CTY_API_59E },                                // "API 59E"
   2689              { L_WORD926, L_WORD237, CTY_API_60A },                                // "API 60A"
   2690              { L_WORD927, L_WORD237, CTY_API_60B },                                // "API 60B"
   2691              { L_WORD928, L_WORD237, CTY_API_60D },                                // "API 60D"
   2692              { L_WORD942, L_WORD237, CTY_API_60E },                                // "API 60E"
   2693          
   2694              { L_WORD948, L_WORD237, CTY_GAS_AMMONIA },                      // "Ammoniak"
   2695              { L_WORD949, L_WORD237, CTY_GAS_BUTADIEN },                      // "Butadien"
   2696              { L_WORD950, L_WORD237, CTY_GAS_ISOBUTYLENE },                      // "Isobutylene"
   2697              { L_WORD951, L_WORD237, CTY_GAS_PROPYLENE },                      // "Propylene"
   2698              { L_WORD952, L_WORD237, CTY_GAS_PROPENOXIDE },                      // "Propenoxide"
   2699              { L_WORD953, L_WORD237, CTY_GAS_VYNILCHLORIDE },                      // "Vynilchloride"
   2700          
   2701              { L_WORD964, L_WORD237, CTY_GAS_BUTANE },                     // "Butane"
   2702              { L_WORD965, L_WORD237, CTY_GAS_PROPANE },                     // "Propane"
   2703              { L_WORD966, L_WORD237, CTY_GAS_N_BUTANE },                     // "N-Butane"
   2704              { L_WORD967, L_WORD237, CTY_GAS_ISO_BUTANE },                     // "ISO-Butane"
   2705              { L_WORD968, L_WORD237, CTY_GAS_1_BUTANE },                     // "1-Butene"
   2706              { L_WORD969, L_WORD237, CTY_GAS_CRUDE_C4 },                     // "Crude C4"
   2707              { L_WORD970, L_WORD237, CTY_GAS_RAFFINATE_1 },                     // "Raffinate 1"
   2708              { L_WORD971, L_WORD237, CTY_GAS_RAFFINATE_2 },                     // "Raffinate 2"
   2709              { L_WORD972, L_WORD237, CTY_GAS_PROPYLENE_REF },                     // "Propylene Ref"
   2710              { L_WORD973, L_WORD237, CTY_GAS_GASOLIE },                     // "Gasolie    "
   2711              { L_WORD974, L_WORD237, CTY_GAS_FLEXICOKER_LPG },                     // "Flexicoker LPG"
   2712              { L_WORD975, L_WORD237, CTY_GAS_SULPHUR_1 },                     // "Sulphur-1"
   2713              { L_WORD976, L_WORD237, CTY_GAS_SULPHUR_2 },                     // "Sulphur-2"
   2714              { L_WORD977, L_WORD237, CTY_GAS_SULPHUR_3 },                     // "Sulphur-3"
   2715              { L_WORD978, L_WORD237, CTY_GAS_SULPHUR_4 },                     // "Sulphur-4"
   2716              { L_WORD979, L_WORD237, CTY_GAS_SULPHUR_5 },                     // "Sulphur-5"
   2717              { L_WORD980, L_WORD237, CTY_GAS_SULPHUR_6 },                     // "Sulphur-6"
   2718          };

   \                                 In segment DATA_I, align 4, align-sorted
   2719          int SizeofChemGasCargoNameList = NELEMENTS(ChemGasCargoNameList);
   \                     SizeofChemGasCargoNameList:
   \   00000000                      DS8 4
   \   00000004                      REQUIRE `?<Initializer for SizeofChemGasCargoNameList>`

   \                                 In segment DATA_ID, align 4, align-sorted
   \                     `?<Initializer for NumberOfPredefined>`:
   \   00000000   1A000000           DC32 26

   \                                 In segment DATA_ID, align 4, align-sorted
   \                     `?<Initializer for SizeofCargoTypeValueList>`:
   \   00000000   10000000           DC32 16
   \                     `?<Initializer for CargoTypeValueList>`:
   \   00000004   30010000ED00       DC32 304, 237, 1000, 393, 237, 2003, 102, 237, 2004, 394, 237, 2005
   \              0000E8030000
   \              89010000ED00
   \              0000D3070000
   \              66000000ED00
   \              0000D4070000
   \              8A010000ED00
   \              0000D5070000
   \   00000034   8B010000ED00       DC32 395, 237, 2006, 396, 237, 2007, 397, 237, 2008, 398, 237, 2011
   \              0000D6070000
   \              8C010000ED00
   \              0000D7070000
   \              8D010000ED00
   \              0000D8070000
   \              8E010000ED00
   \              0000DB070000
   \   00000064   8F010000ED00       DC32 399, 237, 2012, 400, 237, 2013, 401, 237, 2014, 108, 237, 2015
   \              0000DC070000
   \              90010000ED00
   \              0000DD070000
   \              91010000ED00
   \              0000DE070000
   \              6C000000ED00
   \              0000DF070000
   \   00000094   E3030000ED00       DC32 995, 237, 2016, 1087, 237, 2018, 1096, 237, 2019, 2019
   \              0000E0070000
   \              3F040000ED00
   \              0000E2070000
   \              48040000ED00
   \              0000E3070000
   \              E3070000    
   \   000000BC   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0
   \              0000        

   \                                 In segment DATA_ID, align 4, align-sorted
   \                     `?<Initializer for DefaultBasicCargoNameList>`:
   \   00000000   92010000ED00       DC32 402, 237, -1, 403, 237, 0, 101, 237, 1, 405, 237, 2, 406, 237, 3
   \              0000FFFFFFFF
   \              93010000ED00
   \              000000000000
   \              65000000ED00
   \              000001000000
   \              95010000ED00
   \              000002000000
   \              96010000ED00
   \              000003000000
   \   0000003C   97010000ED00       DC32 407, 237, 4, 408, 237, 5, 409, 237, 6, 410, 237, 7, 411, 237, 8
   \              000004000000
   \              98010000ED00
   \              000005000000
   \              99010000ED00
   \              000006000000
   \              9A010000ED00
   \              000007000000
   \              9B010000ED00
   \              000008000000
   \   00000078   9C010000ED00       DC32 412, 237, 9, 413, 237, 10, 414, 237, 11, 415, 237, 12, 416, 237
   \              000009000000
   \              9D010000ED00
   \              00000A000000
   \              9E010000ED00
   \              00000B000000
   \              9F010000ED00
   \              00000C000000
   \              A0010000ED00
   \              0000        
   \   000000B0   0D000000AB03       DC32 13, 939, 237, 23, 417, 237, 14, 418, 237, 15, 419, 237, 16, 940
   \              0000ED000000
   \              17000000A101
   \              0000ED000000
   \              0E000000A201
   \              0000ED000000
   \              0F000000A301
   \              0000ED000000
   \              10000000AC03
   \              0000        
   \   000000E8   ED0000001800       DC32 237, 24, 923, 237, 17, 924, 237, 18, 925, 237, 19, 941, 237, 25
   \              00009B030000
   \              ED0000001100
   \              00009C030000
   \              ED0000001200
   \              00009D030000
   \              ED0000001300
   \              0000AD030000
   \              ED0000001900
   \              0000        
   \   00000120   9E030000ED00       DC32 926, 237, 20, 927, 237, 21, 928, 237, 22, 942, 237, 26
   \              000014000000
   \              9F030000ED00
   \              000015000000
   \              A0030000ED00
   \              000016000000
   \              AE030000ED00
   \              00001A000000

   \                                 In segment DATA_ID, align 4, align-sorted
   \                     `?<Initializer for SizeofDefaultBasicCargoNameL`:
   \   00000000   1C000000           DC32 28

   \                                 In segment DATA_ID, align 4, align-sorted
   \                     `?<Initializer for SizeofBasicCargoNameList>`:
   \   00000000   1C000000           DC32 28
   \                     `?<Initializer for BasicCargoNameList>`:
   \   00000004   ........           DC32 DefaultBasicCargoNameList

   \                                 In segment DATA_ID, align 4, align-sorted
   \                     `?<Initializer for ChemGasCargoNameList>`:
   \   00000000   92010000ED00       DC32 402, 237, -1, 403, 237, 0, 101, 237, 1, 405, 237, 2, 406, 237, 3
   \              0000FFFFFFFF
   \              93010000ED00
   \              000000000000
   \              65000000ED00
   \              000001000000
   \              95010000ED00
   \              000002000000
   \              96010000ED00
   \              000003000000
   \   0000003C   97010000ED00       DC32 407, 237, 4, 408, 237, 5, 409, 237, 6, 410, 237, 7, 411, 237, 8
   \              000004000000
   \              98010000ED00
   \              000005000000
   \              99010000ED00
   \              000006000000
   \              9A010000ED00
   \              000007000000
   \              9B010000ED00
   \              000008000000
   \   00000078   9C010000ED00       DC32 412, 237, 9, 413, 237, 10, 414, 237, 11, 415, 237, 12, 416, 237
   \              000009000000
   \              9D010000ED00
   \              00000A000000
   \              9E010000ED00
   \              00000B000000
   \              9F010000ED00
   \              00000C000000
   \              A0010000ED00
   \              0000        
   \   000000B0   0D000000AB03       DC32 13, 939, 237, 23, 417, 237, 14, 418, 237, 15, 419, 237, 16, 940
   \              0000ED000000
   \              17000000A101
   \              0000ED000000
   \              0E000000A201
   \              0000ED000000
   \              0F000000A301
   \              0000ED000000
   \              10000000AC03
   \              0000        
   \   000000E8   ED0000001800       DC32 237, 24, 923, 237, 17, 924, 237, 18, 925, 237, 19, 941, 237, 25
   \              00009B030000
   \              ED0000001100
   \              00009C030000
   \              ED0000001200
   \              00009D030000
   \              ED0000001300
   \              0000AD030000
   \              ED0000001900
   \              0000        
   \   00000120   9E030000ED00       DC32 926, 237, 20, 927, 237, 21, 928, 237, 22, 942, 237, 26, 948, 237
   \              000014000000
   \              9F030000ED00
   \              000015000000
   \              A0030000ED00
   \              000016000000
   \              AE030000ED00
   \              00001A000000
   \              B4030000ED00
   \              0000        
   \   00000158   1B000000B503       DC32 27, 949, 237, 28, 950, 237, 29, 951, 237, 30, 952, 237, 31, 953
   \              0000ED000000
   \              1C000000B603
   \              0000ED000000
   \              1D000000B703
   \              0000ED000000
   \              1E000000B803
   \              0000ED000000
   \              1F000000B903
   \              0000        
   \   00000190   ED0000002000       DC32 237, 32, 964, 237, 33, 965, 237, 34, 966, 237, 35, 967, 237, 36
   \              0000C4030000
   \              ED0000002100
   \              0000C5030000
   \              ED0000002200
   \              0000C6030000
   \              ED0000002300
   \              0000C7030000
   \              ED0000002400
   \              0000        
   \   000001C8   C8030000ED00       DC32 968, 237, 37, 969, 237, 38, 970, 237, 39, 971, 237, 40, 972, 237
   \              000025000000
   \              C9030000ED00
   \              000026000000
   \              CA030000ED00
   \              000027000000
   \              CB030000ED00
   \              000028000000
   \              CC030000ED00
   \              0000        
   \   00000200   29000000CD03       DC32 41, 973, 237, 42, 974, 237, 43, 975, 237, 44, 976, 237, 45, 977
   \              0000ED000000
   \              2A000000CE03
   \              0000ED000000
   \              2B000000CF03
   \              0000ED000000
   \              2C000000D003
   \              0000ED000000
   \              2D000000D103
   \              0000        
   \   00000238   ED0000002E00       DC32 237, 46, 978, 237, 47, 979, 237, 48, 980, 237, 49
   \              0000D2030000
   \              ED0000002F00
   \              0000D3030000
   \              ED0000003000
   \              0000D4030000
   \              ED0000003100
   \              0000        

   \                                 In segment DATA_ID, align 4, align-sorted
   \                     `?<Initializer for SizeofChemGasCargoNameList>`:
   \   00000000   33000000           DC32 51

   \                                 In segment DIFUNCT, align 4, keep-with-next, root
   \   00000000                      REQUIRE ?call_ctors
   \   00000000   ........           DC32    ??__sti__routine

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "Cargotype ">`:
   \   00000000   436172676F74       DC8 "Cargotype "
   \              7970652000  
   \   0000000B   00                 DC8 0
   \   0000000C   3A0A556E6B6E       DC8 ":\012Unknown error started at line:"
   \              6F776E206572
   \              726F72207374
   \              617274656420
   \              6174206C696E
   \              653A00      
   \   0000002D   000000             DC8 0, 0, 0
   \   00000030   3A0A54686520       DC8 ":\012The keyword "
   \              6B6579776F72
   \              642000      
   \   0000003F   00                 DC8 0
   \   00000040   206973206E6F       DC8 " is not allowed here!! Line:"
   \              7420616C6C6F
   \              776564206865
   \              72652121204C
   \              696E653A00  
   \   0000005D   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \   00000000   25237800           DC8 "%#x"

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "Not defined">`:
   \   00000000   4E6F74206465       DC8 "Not defined"
   \              66696E656400

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs CargoTypeObject &CargoTypeObject::new CargoTypeObject(bool, bool)
   \                     `??new CargoTypeObject`:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
   \   0000000C   F800A0E3           MOV      R0,#+248
   \   00000010   ........           _BLF     `??operator new`,`??operator new??rA`
   \   00000014   000050E3           CMP      R0,#+0
   \   00000018   0200000A           BEQ      `??new CargoTypeObject_1`
   \   0000001C   0520A0E1           MOV      R2,R5
   \   00000020   0410A0E1           MOV      R1,R4
   \   00000024   ........           BL       ??CargoTypeObject
   \                     `??new CargoTypeObject_1`:
   \   00000028   ........           B        ?Subroutine50

   \                                 In segment CODE, align 4, keep-with-next
   \   static __??Code32?? __intrinsic __code __interwork __atpcs void __sti__routine()
   \                     ??__sti__routine:
   \   00000000   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable1:
   \   00000000   ........           DC32     ??npos

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable3:
   \   00000000   ........           DC32     SizeofBasicCargoNameList

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable5:
   \   00000000   ........           DC32     ??npos

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable10:
   \   00000000   9A999999           DC32     0xffffffff9999999a

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable11:
   \   00000000   99990940           DC32     0x40099999

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable12:
   \   00000000   E17A843F           DC32     0x3f847ae1

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable13:
   \   00000000   00405540           DC32     0x40554000

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable15:
   \   00000000   ........           DC32     ??BallastDensity

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable16:
   \   00000000   ........           DC32     ??SeaWaterDensity

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable17:
   \   00000000   ........           DC32     ??HeavyFuelDensity

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable18:
   \   00000000   ........           DC32     ??DieselDensity

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable19:
   \   00000000   ........           DC32     ??LubricantsDensity

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable20:
   \   00000000   ........           DC32     ??FreshWaterDensity

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable21:
   \   00000000   ........           DC32     Product

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable24:
   \   00000000   2D431CEB           DC32     0xffffffffeb1c432d

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable25:
   \   00000000   E2360A3F           DC32     0x3f0a36e2

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable31:
   \   00000000   ........           DC32     ??Vcf_6_and_54D_Calc

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable37:
   \   00000000   C7711CC7           DC32     0xffffffffc71c71c7

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable39:
   \   00000000   ........           DC32     ??Vcf_6_and_54A_Calc

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable40:
   \   00000000   ........           DC32     ??Vcf_6_and_54B_Calc

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable69:
   \   00000000   5A643BDF           DC32     0xffffffffdf3b645a

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable70:
   \   00000000   4F8DE33F           DC32     0x3fe38d4f

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable71:
   \   00000000   4C378941           DC32     0x4189374c

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable72:
   \   00000000   60E5E43F           DC32     0x3fe4e560

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable73:
   \   00000000   34333333           DC32     0x33333334

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable74:
   \   00000000   3333F13F           DC32     0x3ff13333

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable76:
   \   00000000   9999E93F           DC32     0x3fe99999

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable77:
   \   00000000   3AB4C876           DC32     0x76c8b43a

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable78:
   \   00000000   BE9FF23F           DC32     0x3ff29fbe

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable79:
   \   00000000   6E3480B7           DC32     0xffffffffb780346e

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable80:
   \   00000000   4082D63F           DC32     0x3fd68240

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable81:
   \   00000000   A70A4625           DC32     0x25460aa7

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable82:
   \   00000000   7502E63F           DC32     0x3fe60275

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable83:
   \   00000000   85EB51B8           DC32     0xffffffffb851eb85

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable84:
   \   00000000   1E85E33F           DC32     0x3fe3851e

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable85:
   \   00000000   265305A3           DC32     0xffffffffa3055326

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable86:
   \   00000000   923AD53F           DC32     0x3fd53a92

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable87:
   \   00000000   8F75711B           DC32     0x1b71758f

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable88:
   \   00000000   0DE0E53F           DC32     0x3fe5e00d

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable95:
   \   00000000   7C14AE47           DC32     0x47ae147c

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable96:
   \   00000000   E17A843F           DC32     0x3f847ae1

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable97:
   \   00000000   9B999999           DC32     0xffffffff9999999b

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable98:
   \   00000000   99990940           DC32     0x40099999

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable99:
   \   00000000   9A999999           DC32     0xffffffff9999999a

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable100:
   \   00000000   9999D93F           DC32     0x3fd99999

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable101:
   \   00000000   ........           DC32     ??Vcf_6_and_54A_Calc

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable102:
   \   00000000   ........           DC32     ??Vcf_6_and_54B_Calc

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable103:
   \   00000000   ........           DC32     ??Vcf_6_and_54D_Calc

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable104:
   \   00000000   ........           DC32     ??Vcf_59A_and_60A_Calc

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable105:
   \   00000000   ........           DC32     ??Vcf_59B_and_60B_Calc

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable106:
   \   00000000   ........           DC32     ??Vcf_59D_and_60D_Calc

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable107:
   \   00000000   ........           DC32     ??ColorTable

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable119:
   \   00000000   6E3480B7           DC32     0xffffffffb780346e

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable120:
   \   00000000   4082D63F           DC32     0x3fd68240

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable121:
   \   00000000   A70A4625           DC32     0x25460aa7

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable123:
   \   00000000   7502E63F           DC32     0x3fe60275

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable126:
   \   00000000   265305A3           DC32     0xffffffffa3055326

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable127:
   \   00000000   923AD53F           DC32     0x3fd53a92

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable128:
   \   00000000   8F75711B           DC32     0x1b71758f

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable130:
   \   00000000   0DE0E53F           DC32     0x3fe5e00d

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable138:
   \   00000000   00405540           DC32     0x40554000

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable141:
   \   00000000   C7711CC7           DC32     0xffffffffc71c71c7

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable142:
   \   00000000   711C2F40           DC32     0x402f1c71

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable143:
   \   00000000   ........           DC32     ??SeaWaterDensity

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable144:
   \   00000000   ........           DC32     ??BallastDensity

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable145:
   \   00000000   ........           DC32     ??FreshWaterDensity

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable146:
   \   00000000   ........           DC32     ??HeavyFuelDensity

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable147:
   \   00000000   ........           DC32     ??DieselDensity

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable148:
   \   00000000   ........           DC32     ??LubricantsDensity

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable151:
   \   00000000   ........           DC32     SizeofBasicCargoNameList

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable152:
   \   00000000   ........           DC32     ??ColorTable

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable153:
   \   00000000   ........           DC32     ??npos

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable154:
   \   00000000   ........           DC32     Product

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable157:
   \   00000000   9B999999           DC32     0xffffffff9999999b

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable158:
   \   00000000   9999E93F           DC32     0x3fe99999

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable162:
   \   00000000   00408F40           DC32     0x408f4000

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable163:
   \   00000000   8C4B55DA           DC32     0xffffffffda554b8c

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable164:
   \   00000000   E21AB93F           DC32     0x3fb91ae2

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable165:
   \   00000000   ........           DC32     ??Vcf_6_and_54A_Calc

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable166:
   \   00000000   ........           DC32     ??Vcf_6_and_54B_Calc

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable167:
   \   00000000   ........           DC32     ??Vcf_6_and_54D_Calc

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable168:
   \   00000000   ........           DC32     ??Vcf_59A_and_60A_Calc

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable169:
   \   00000000   ........           DC32     ??Vcf_59B_and_60B_Calc

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable170:
   \   00000000   ........           DC32     ??Vcf_59D_and_60D_Calc
   2720          
   2721          
   2722          //--------------------------------------------------------------------------------------------------------------------
   2723          
   2724          #ifdef ANWIN
   2725          void CargoTypeObject::AddToDatabase(void) {
   2726          	//PROCargoTank::LogSema.Acquire();
   2727              time_t rawtime          = GetGMT();
   2728          
   2729              LiteQuery->SQL->Clear();
   2730              LiteQuery->SQL->Add("SELECT * FROM CargoTypes");
   2731              LiteQuery->Open();
   2732              try {
   2733                  // append record
   2734                  LiteQuery->Append();
   2735          
   2736                  LiteQuery->FieldByName("UpdatedTimeGMT")->AsInteger = rawtime;
   2737          
   2738                  LiteQuery->FieldByName("Name")->AsString            = Name;
   2739                  LiteQuery->FieldByName("BaseCargoType")->AsInteger  = BaseCargoType;
   2740                  LiteQuery->FieldByName("OpDns1")->AsFloat           = OD1;
   2741                  LiteQuery->FieldByName("OpDns2")->AsFloat           = OD2;
   2742          		LiteQuery->FieldByName("RefTemp1")->AsFloat         = RefTmp1;
   2743          		LiteQuery->FieldByName("RefTemp2")->AsFloat         = RefTmp2;
   2744                  LiteQuery->FieldByName("Coeff")->AsFloat            = Coeff;
   2745          		LiteQuery->FieldByName("MolMass")->AsFloat          = MolMass;
   2746                  LiteQuery->FieldByName("Viscosity")->AsFloat        = Viscosity;
   2747          		LiteQuery->FieldByName("Color")->AsInteger          = Colour;
   2748                  LiteQuery->Post();
   2749                  DB_IdNumber =  LiteQuery->FieldByName("Id")->AsInteger;
   2750              }
   2751              __finally{
   2752          //        LiteQuery->Free();
   2753          	}
   2754          	//PROCargoTank::LogSema.Release();
   2755          }
   2756          
   2757          void CargoTypeObject::UpdateDatabase(void) {
   2758          	//PROCargoTank::LogSema.Acquire();
   2759          	time_t rawtime          = GetGMT();
   2760          
   2761          	// retrieve data
   2762          	LiteQuery->SQL->Clear();
   2763          	LiteQuery->SQL->Add("SELECT * FROM CargoTypes");
   2764          	LiteQuery->Open();
   2765          	LiteQuery->FindKey(ARRAYOFCONST((DB_IdNumber)));
   2766          
   2767          
   2768          
   2769          	// retrieve data
   2770          	//	ShowMessage("Records of this alarm= "+IntToStr(LiteQuery->FetchRows));
   2771          
   2772          	try {
   2773          		// retrieve data
   2774          
   2775          		// update record
   2776          		LiteQuery->Edit();
   2777          		LiteQuery->FieldByName("UpdatedTimeGMT")->AsInteger = rawtime;
   2778          		LiteQuery->FieldByName("Name")->AsString            = Name;
   2779          		LiteQuery->FieldByName("BaseCargoType")->AsInteger  = BaseCargoType;
   2780          		LiteQuery->FieldByName("OpDns1")->AsFloat           = OD1;
   2781          		LiteQuery->FieldByName("OpDns2")->AsFloat           = OD2;
   2782          		LiteQuery->FieldByName("RefTemp1")->AsFloat         = RefTmp1;
   2783          		LiteQuery->FieldByName("RefTemp2")->AsFloat         = RefTmp2;
   2784          		LiteQuery->FieldByName("Coeff")->AsFloat            = Coeff;
   2785          		LiteQuery->FieldByName("MolMass")->AsFloat          = MolMass;
   2786          		LiteQuery->FieldByName("Viscosity")->AsFloat        = Viscosity;
   2787          		LiteQuery->FieldByName("Color")->AsInteger          = Colour;
   2788                  LiteQuery->Post();
   2789              }
   2790              __finally{
   2791          //        LiteQuery->Free();
   2792              }
   2793          
   2794          	//PROCargoTank::LogSema.Release();
   2795          }
   2796          
   2797          void CargoTypeObject::SetLiteQueryPtr(TLiteQuery *LiteQueryPtr){
   2798              LiteQuery = LiteQueryPtr; 
   2799          }
   2800          bool CargoTypeObject::isDifferentData(ANPRO10_COMMAND_2800 *pData) {
   2801              bool isNoDiff =  ( 
   2802                 IsDefined      == pData->IsDefined
   2803              && CargoTypeKey   == pData->CargoTypeKey
   2804              && BaseCargoType  == pData->BaseCargoType
   2805              && Colour         == (TColor)pData->Colour
   2806              && OD1            == pData->OD1
   2807              && OD2            == pData->OD2
   2808              && RefTmp1        == pData->RefTmp1
   2809              && RefTmp2        == pData->RefTmp2
   2810              && Coeff          == pData->Coeff
   2811              && MolMass        == pData->MolMass
   2812              && Viscosity      == pData->Viscosity
   2813              && ActualTemp     == pData->ActualTemp
   2814              && Name           == pData->Name
   2815              && DB_IdNumber    == pData->DB_IdNumber);
   2816              return !isNoDiff;
   2817          }
   2818          
   2819          
   2820          void CargoTypeObject::PrepareDatabase(void)
   2821          {
   2822          	//PROCargoTank::LogSema.Acquire();
   2823          
   2824          	TLiteQuery *LiteQuery1 = new TLiteQuery(NULL);
   2825              TLiteQuery *LiteQuery2 = new TLiteQuery(NULL);
   2826          	try {
   2827          		//LiteQuery1->CachedUpdates = true;
   2828          		// LiteConnection is either TLiteConnection already set up
   2829                  LiteQuery1->Connection = MainForm->DataLogLiteConnection;
   2830                  LiteQuery2->Connection = MainForm->DataLogLiteConnection;
   2831          
   2832          		// retrieve data
   2833          		for(int i=CTY_NOT_DEFINED; i <= CTY_GAS_SULPHUR_6; i++){
   2834          			LiteQuery1->SQL->Text = "SELECT * FROM BasicCargoTypes";
   2835          			LiteQuery1->Execute();
   2836          			AnsiString MySQL = "SELECT * FROM BasicCargoTypes WHERE Id='"+AnsiString(i)+"'";
   2837          			LiteQuery2->SQL->Text = MySQL;
   2838          			LiteQuery2->Options->QueryRecCount = true;
   2839          
   2840          			//LiteQuery2->SQL->Text = "SELECT Id FROM BasicCargoTypes where Id="+AnsiString(i);
   2841          			LiteQuery2->Execute();
   2842          			int NumberOfRecords = LiteQuery2->RecordCount;
   2843          			if ( !NumberOfRecords ){
   2844          				AddBasicCargTypeRecord(LiteQuery1, GetValueName(i), i);
   2845          			}
   2846                  }
   2847          	}
   2848          	__finally{
   2849                  LiteQuery1->Free();
   2850                  LiteQuery2->Free();
   2851          	}
   2852          	//PROCargoTank::LogSema.Release();
   2853          
   2854          
   2855          }
   2856          
   2857          void CargoTypeObject::AddBasicCargTypeRecord(TLiteQuery *LiteQuery1,AnsiString BasicName, int IdKey)
   2858          {
   2859          
   2860          		try {
   2861          			// append record
   2862          			LiteQuery1->Append();
   2863          			LiteQuery1->FieldByName("Name")->AsString = BasicName;
   2864          			LiteQuery1->FieldByName("Id")->AsInteger  = IdKey;
   2865          			LiteQuery1->Post();
   2866          		}
   2867          		__finally{
   2868          		}
   2869          
   2870          }
   2871          
   2872          #endif
   2873          

   Maximum stack usage in bytes:

     Function                       CSTACK
     --------                       ------
     CargoTypeObject::CargoTypeObject(bool, bool)
                                       44
     CargoTypeObject::Coeff_Input(double)
                                       12
     CargoTypeObject::Comp_Density(double)
                                       40
     CargoTypeObject::DeleteCargo()    36
     CargoTypeObject::DensityToVcfAtTemp(double, double)
                                       44
     CargoTypeObject::Dns_at_T_to_RefDns(double, double)
                                       52
     CargoTypeObject::FindCargoIndex(AnsiString)
                                       52
     CargoTypeObject::FindDns(double, double, double (*)(double, double, int *, bool))
                                       76
     CargoTypeObject::FindVcf(double, double, double (*)(double, double, int *, bool))
                                       52
     CargoTypeObject::FindVcf20(double, double)
                                       52
     CargoTypeObject::GasDensity(double, double)
                                       64
     CargoTypeObject::GetCoeff(bool &)
                                        0
     CargoTypeObject::GetLiqDensityFromTable(double, DnsInfo *, int)
                                       36
     CargoTypeObject::GetOD1(bool &)
                                        0
     CargoTypeObject::GetOD2(bool &)
                                        0
     CargoTypeObject::GetRefTmp1(bool &)
                                        0
     CargoTypeObject::GetRefTmp2(bool &)
                                        0
     CargoTypeObject::GetStringValue(int, int, AnsiString &)
                                      104
     CargoTypeObject::GetVCF_AtTemp(float, float, float &, int &, int &)
                                       28
     CargoTypeObject::GetValue(int, int, float &, int &, int &)
                                       48
     CargoTypeObject::GetValueInfoTableStatic(int &, int)
                                        0
     CargoTypeObject::GetValueName(int)
                                        8
     CargoTypeObject::GetVapDensityFromTable(double, double, DnsInfo *, int)
                                       44
     CargoTypeObject::Handle_New_Coeff(double)
                                       28
     CargoTypeObject::InputBasicCargoType(int)
                                       76
     CargoTypeObject::Input_API(double)
                                       44
     CargoTypeObject::Input_MolMass(double)
                                        0
     CargoTypeObject::IsTheCargoDefined()
                                        0
     CargoTypeObject::MeasDns_to_API(double, double)
                                       20
     CargoTypeObject::OD1_Input(double)
                                       28
     CargoTypeObject::OD2_Input(double)
                                       36
     CargoTypeObject::OpDns_to_API(bool &)
                                        4
     CargoTypeObject::Operator_Density_to_Vcf(double)
                                        4
     CargoTypeObject::PutFloatValue(int, float)
                                        4
     CargoTypeObject::PutValue(int, int, AnsiString, bool, int *)
                                      144
     CargoTypeObject::ReceiveData(unsigned char *)
                                       72
     CargoTypeObject::RefTmp1_Input(double)
                                       28
     CargoTypeObject::RefTmp2_Input(double)
                                       52
     CargoTypeObject::RestoreSettings(TSNConfigString *)
                                      544
     CargoTypeObject::SaveSettings(int)
                                     2212
     CargoTypeObject::SendData(unsigned short)
                                      120
     CargoTypeObject::SetTemperature(double)
                                        8
     CargoTypeObject::Update_Density()
                                        8
     CargoTypeObject::Vcf_Calc(double)
                                       40
     CargoTypeObject::VolumeAtRefTmp(double, double, double, double)
                                       20
     CargoTypeObject::new CargoTypeObject(bool, bool)
                                       12
     CargoTypeObject::operator=(CargoTypeObject)
                                       12
     CargoTypeObject::~CargoTypeObject()
                                       12
     __sti__routine()                   0
     operator+(string const &, char const *)
                                       44
     operator+(string const &, string const &)
                                       40
     string::string(string const &)    12


   Segment part sizes:

     Function/Label                 Bytes
     --------------                 -----
     string::string(string const &)   64
     operator+(string const &, string const &)
                                      88
     operator+(string const &, char const *)
                                      92
     CargoTypeObject::ColorTable     268
     CargoTypeObject::NumberOfPredefined
                                       4
     CargoTypeObject::NumberOfPredefColours
                                       4
     CargoTypeObject::NumberOfCargoTypes
                                       4
     CargoTypeObject::CargoTypeObject(bool, bool)
                                     256
     ?Subroutine51                     8
     CargoTypeObject::~CargoTypeObject()
                                      44
     ?Subroutine50                     8
     CargoTypeObject::SaveSettings(int)
                                    3392
     ?Subroutine52                    24
     CargoTypeObject::RestoreSettings(TSNConfigString *)
                                    1360
     ?Subroutine53                     8
     CargoTypeObject::GetValue(int, int, float &, int &, int &)
                                     592
     CargoTypeObject::GetVCF_AtTemp(float, float, float &, int &, int &)
                                     120
     ?Subroutine54                    12
     CargoTypeObject::GetValueName(int)
                                      40
     CargoTypeObject::GetStringValue(int, int, AnsiString &)
                                     316
     CargoTypeObject::PutValue(int, int, AnsiString, bool, int *)
                                    1676
     CargoTypeObject::PutFloatValue(int, float)
                                      12
     ?Subroutine55                     8
     CargoTypeObject::GetValueInfoTableStatic(int &, int)
                                      24
     CargoTypeObject::Vcf_Calc(double)
                                     496
     CargoTypeObject::Comp_Density(double)
                                     376
     CargoTypeObject::FindVcf(double, double, double (*)(double, double, int *, bool))
                                     184
     ?Subroutine49                    12
     CargoTypeObject::FindDns(double, double, double (*)(double, double, int *, bool))
                                     416
     CargoTypeObject::FindVcf20(double, double)
                                    1240
     CargoTypeObject::Dns_at_T_to_RefDns(double, double)
                                    2028
     CargoTypeObject::OD1_Input(double)
                                     880
     CargoTypeObject::OD2_Input(double)
                                     832
     CargoTypeObject::RefTmp1_Input(double)
                                     316
     CargoTypeObject::RefTmp2_Input(double)
                                     576
     CargoTypeObject::Handle_New_Coeff(double)
                                     148
     CargoTypeObject::Coeff_Input(double)
                                     192
     CargoTypeObject::GetOD1(bool &)
                                      48
     ?Subroutine56                     8
     CargoTypeObject::GetOD2(bool &)
                                      52
     CargoTypeObject::GetRefTmp1(bool &)
                                      28
     CargoTypeObject::GetRefTmp2(bool &)
                                      80
     CargoTypeObject::GetCoeff(bool &)
                                      28
     CargoTypeObject::MeasDns_to_API(double, double)
                                      64
     CargoTypeObject::OpDns_to_API(bool &)
                                      52
     CargoTypeObject::Operator_Density_to_Vcf(double)
                                      12
     CargoTypeObject::DensityToVcfAtTemp(double, double)
                                     476
     CargoTypeObject::InputBasicCargoType(int)
                                    1804
     CargoTypeObject::Input_API(double)
                                     600
     CargoTypeObject::Input_MolMass(double)
                                      36
     CargoTypeObject::VolumeAtRefTmp(double, double, double, double)
                                     188
     CargoTypeObject::Update_Density()
                                     160
     ?Subroutine57                     8
     CargoTypeObject::operator=(CargoTypeObject)
                                     188
     CargoTypeObject::ReceiveData(unsigned char *)
                                     612
     CargoTypeObject::SendData(unsigned short)
                                     672
     CargoTypeObject::FindCargoIndex(AnsiString)
                                     168
     CargoTypeObject::IsTheCargoDefined()
                                       8
     CargoTypeObject::DeleteCargo()  120
     CargoTypeObject::SetTemperature(double)
                                      28
     CargoTypeObject::GasDensity(double, double)
                                     556
     CargoTypeObject::GetLiqDensityFromTable(double, DnsInfo *, int)
                                     252
     CargoTypeObject::GetVapDensityFromTable(double, double, DnsInfo *, int)
                                     364
     SizeofCargoTypeValueList        196
     DefaultBasicCargoNameList       336
     SizeofDefaultBasicCargoNameList
                                       4
     SizeofBasicCargoNameList          8
     ChemGasCargoNameList            612
     SizeofChemGasCargoNameList        4
     ?<Initializer for NumberOfPredefined>
                                       4
     ?<Initializer for SizeofCargoTypeValueList>
                                     196
     ?<Initializer for DefaultBasicCargoNameList>
                                     336
     ?<Initializer for SizeofDefaultBasicCargoNameL
                                       4
     ?<Initializer for SizeofBasicCargoNameList>
                                       8
     ?<Initializer for ChemGasCargoNameList>
                                     612
     ?<Initializer for SizeofChemGasCargoNameList>
                                       4
     ?<Constant "Cargotype ">         96
     ?<Constant "%#x">                 4
     ?<Constant "Not defined">        12
     CargoTypeObject::new CargoTypeObject(bool, bool)
                                      44
     __sti__routine()                  4
     ??DataTable1                      4
     ??DataTable3                      4
     ??DataTable5                      4
     ??DataTable10                     4
     ??DataTable11                     4
     ??DataTable12                     4
     ??DataTable13                     4
     ??DataTable15                     4
     ??DataTable16                     4
     ??DataTable17                     4
     ??DataTable18                     4
     ??DataTable19                     4
     ??DataTable20                     4
     ??DataTable21                     4
     ??DataTable24                     4
     ??DataTable25                     4
     ??DataTable31                     4
     ??DataTable37                     4
     ??DataTable39                     4
     ??DataTable40                     4
     ??DataTable69                     4
     ??DataTable70                     4
     ??DataTable71                     4
     ??DataTable72                     4
     ??DataTable73                     4
     ??DataTable74                     4
     ??DataTable76                     4
     ??DataTable77                     4
     ??DataTable78                     4
     ??DataTable79                     4
     ??DataTable80                     4
     ??DataTable81                     4
     ??DataTable82                     4
     ??DataTable83                     4
     ??DataTable84                     4
     ??DataTable85                     4
     ??DataTable86                     4
     ??DataTable87                     4
     ??DataTable88                     4
     ??DataTable95                     4
     ??DataTable96                     4
     ??DataTable97                     4
     ??DataTable98                     4
     ??DataTable99                     4
     ??DataTable100                    4
     ??DataTable101                    4
     ??DataTable102                    4
     ??DataTable103                    4
     ??DataTable104                    4
     ??DataTable105                    4
     ??DataTable106                    4
     ??DataTable107                    4
     ??DataTable119                    4
     ??DataTable120                    4
     ??DataTable121                    4
     ??DataTable123                    4
     ??DataTable126                    4
     ??DataTable127                    4
     ??DataTable128                    4
     ??DataTable130                    4
     ??DataTable138                    4
     ??DataTable141                    4
     ??DataTable142                    4
     ??DataTable143                    4
     ??DataTable144                    4
     ??DataTable145                    4
     ??DataTable146                    4
     ??DataTable147                    4
     ??DataTable148                    4
     ??DataTable151                    4
     ??DataTable152                    4
     ??DataTable153                    4
     ??DataTable154                    4
     ??DataTable157                    4
     ??DataTable158                    4
     ??DataTable162                    4
     ??DataTable163                    4
     ??DataTable164                    4
     ??DataTable165                    4
     ??DataTable166                    4
     ??DataTable167                    4
     ??DataTable168                    4
     ??DataTable169                    4
     ??DataTable170                    4
      Others                        1016

 
 23 824 bytes in segment CODE
    384 bytes in segment DATA_C
  1 164 bytes in segment DATA_I
  1 164 bytes in segment DATA_ID
      4 bytes in segment DATA_Z
      4 bytes in segment DIFUNCT
     24 bytes in segment INITTAB
 
 22 596 bytes of CODE  memory (+ 1 256 bytes shared)
  1 548 bytes of CONST memory
  1 168 bytes of DATA  memory

Errors: none
Warnings: none
