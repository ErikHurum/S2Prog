##############################################################################
#                                                                            #
# IAR ARM ANSI C/C++ Compiler V4.42A/W32               14/Sep/2022  15:19:05 #
# Copyright 1999-2005 IAR Systems. All rights reserved.                      #
#                                                                            #
#    Cpu mode        =  interwork                                            #
#    Endian          =  little                                               #
#    Stack alignment =  4                                                    #
#    Source file     =  D:\S2Prog\TXU\src\TDUUserManual.cpp                  #
#    Command line    =  D:\S2Prog\TXU\src\TDUUserManual.cpp --fpu None -D    #
#                       OS_LIBMODE_SP -D CPU_S3C2410 -D OS_RAMVECT=0 -D      #
#                       OS_UART=-1 -D S2TXU -D USE_LZO=1 -D __ARM_LIBRARY__  #
#                       -D WATCHDOG=1 -D NETWORK=1 -lCN                      #
#                       D:\S2Prog\TXU\Debug\List\ -o                         #
#                       D:\S2Prog\TXU\Debug\Obj\ -s9 --debug --cpu_mode arm  #
#                       --endian little --cpu ARM920T --stack_align 4        #
#                       --interwork -e --enable_multibytes --eec++           #
#                       --dlib_config "C:\Program Files (x86)\IAR            #
#                       Systems\Embedded Workbench                           #
#                       4.0\arm\LIB\dl4tpainl8n.h" -I                        #
#                       D:\S2Prog\TXU\GUI\CORE\ -I D:\S2Prog\TXU\GUI\WM\ -I  #
#                       D:\S2Prog\TXU\GUI\WIDGET\ -I D:\S2Prog\TXU\CONFIG\   #
#                       -I D:\S2Prog\TXU\INC\ -I D:\S2Prog\TXU\..\SHARED\INC #
#                       \ -I D:\S2Prog\TXU\..\SHARED\SRC\ -I                 #
#                       D:\S2Prog\TXU\..\SHARED\LZO\minilzo.210\ -I          #
#                       D:\S2Prog\TXU\lwip-1.4.1\src\include\ -I             #
#                       D:\S2Prog\TXU\lwip-1.4.1\src\include\ipv4\ -I        #
#                       D:\S2Prog\TXU\lwip-1.4.1\src\ -I                     #
#                       D:\S2Prog\TXU\..\SHARED\Database\ -I                 #
#                       D:\S2Prog\TXU\src\ -I "C:\Program Files (x86)\IAR    #
#                       Systems\Embedded Workbench 4.0\arm\INC\"             #
#                       --inline_threshold=2                                 #
#    List file       =  D:\S2Prog\TXU\Debug\List\TDUUserManual.lst           #
#    Object file     =  D:\S2Prog\TXU\Debug\Obj\TDUUserManual.r79            #
#                                                                            #
#                                                                            #
##############################################################################

D:\S2Prog\TXU\src\TDUUserManual.cpp
      1          #include "TDUIncludes.h"
      2          

   \                                 In segment CODE, align 4, keep-with-next
      3          TDUUserManual::~TDUUserManual(void)
      4          {
   \                     `?~TDUUserManual`:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0040A0E1           MOV      R4,R0
      5          }
   \   00000008   380084E2           ADD      R0,R4,#+56
   \   0000000C   ........           _BLF     `?~CloseWindowTimer`,`?~CloseWindowTimer??rA`
   \   00000010   0400A0E1           MOV      R0,R4
   \   00000014   ........           _BLF     `?~TDUBasicWin`,`?~TDUBasicWin??rA`
   \   00000018   1040BDE8           POP      {R4,LR}
   \   0000001C   1EFF2FE1           BX       LR               ;; return
      6          

   \                                 In segment CODE, align 4, keep-with-next
      7          TDUUserManual::TDUUserManual(void)
   \                     ??TDUUserManual:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   18D04DE2           SUB      SP,SP,#+24
   \   00000008   0040A0E1           MOV      R4,R0
      8          {
   \   0000000C   ........           _BLF     ??TDUBasicWin,??TDUBasicWin??rA
   \   00000010   380084E2           ADD      R0,R4,#+56
   \   00000014   ........           _BLF     ??CloseWindowTimer,??CloseWindowTimer??rA
      9            Closed = true;
     10            {
     11          	  const GUIKey Words[] ={
     12          		  {TDU_USERMAN_WIN	,0,L_WORD21},
     13          		  {GUI_ID_CLOSE		,0,L_WORD18},
     14          	  };
   \   00000018   34109FE5           LDR      R1,??TDUUserManual_1  ;; `?<Constant {{2196, 0, 21}, {5, 0, 18}}>`
   \   0000001C   0100A0E3           MOV      R0,#+1
   \   00000020   3600C4E5           STRB     R0,[R4, #+54]
   \   00000024   6C5091E8           LDM      R1,{R2,R3,R5,R6,R12,LR}
   \   00000028   0D00A0E1           MOV      R0,SP
     15          	  AddToSKeyList((GUIKey*)Words,NELEMENTS(Words));
   \   0000002C   0D10A0E1           MOV      R1,SP
   \   00000030   6C5080E8           STM      R0,{R2,R3,R5,R6,R12,LR}
   \   00000034   0130A0E3           MOV      R3,#+1
   \   00000038   0220A0E3           MOV      R2,#+2
   \   0000003C   0400A0E1           MOV      R0,R4
   \   00000040   ........           _BLF     ??AddToSKeyList,??AddToSKeyList??rA
     16            }
     17          }
   \   00000044   0400A0E1           MOV      R0,R4
   \   00000048   18D08DE2           ADD      SP,SP,#+24
   \   0000004C   7040BDE8           POP      {R4-R6,LR}
   \   00000050   1EFF2FE1           BX       LR               ;; return
   \                     ??TDUUserManual_1:
   \   00000054   ........           DC32     `?<Constant {{2196, 0, 21}, {5, 0, 18}}>`
     18          

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "User manual">`:
   \   00000000   55736572206D       DC8 "User manual"
   \              616E75616C00
     19          const GUI_WIDGET_CREATE_INFO TDUUserManual::aDialogCreate[] =
   \                     ??aDialogCreate:
   \   0000000C   ............       DC32 FRAMEWIN_CreateIndirect, `?<Constant "User manual">`
   \              ....        
   \   00000014   940800000000       DC16 2196, 0, 0, 0, 0, 128
   \              000000008000
   \   00000020   00000000....       DC32 0, BUTTON_CreateIndirect, `?<Constant "Close">`
   \              ............
   \   0000002C   0500BE00A000       DC16 5, 190, 160, 60, 22
   \              3C001600    
   \   00000036   000000000000       DC8 0, 0, 0, 0, 0, 0
     20          {
     21          	{ FRAMEWIN_CreateIndirect, "User manual", TDU_USERMAN_WIN, 0, 0, 0, 0, FRAMEWIN_CF_MAXIMIZED, 0 },
     22          	{ BUTTON_CreateIndirect, "Close",     GUI_ID_CLOSE   ,190, 160,  60, 22 },
     23          };
     24          

   \                                 In segment CODE, align 4, keep-with-next
     25          void TDUUserManual::ExecDialogBox(WM_HWIN hCurrentWin)
     26          {
   \                     ??ExecDialogBox:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   0040A0E1           MOV      R4,R0
     27          
     28          	if(Closed){
   \   00000008   3600D4E5           LDRB     R0,[R4, #+54]
   \   0000000C   000050E3           CMP      R0,#+0
   \   00000010   2D00000A           BEQ      ??ExecDialogBox_1
     29          		Closed = false;
     30          		//int scrollwith = SCROLLBAR_SetDefaultWidth(20);
     31          		WinHandl = GUI_CreateDialogBox(aDialogCreate, GUI_COUNTOF(aDialogCreate),&cbUserManual,hCurrentWin, 0, 0);
   \   00000014   C0509FE5           LDR      R5,??ExecDialogBox_2  ;; `?<Constant "User manual">`
   \   00000018   C0209FE5           LDR      R2,??ExecDialogBox_2+0x4  ;; ??cbUserManual
   \   0000001C   0000A0E3           MOV      R0,#+0
   \   00000020   3600C4E5           STRB     R0,[R4, #+54]
   \   00000024   01002DE9           PUSH     {R0}
   \   00000028   01002DE9           PUSH     {R0}
   \   0000002C   0130A0E1           MOV      R3,R1
   \   00000030   0210A0E3           MOV      R1,#+2
   \   00000034   0C0085E2           ADD      R0,R5,#+12
   \   00000038   ........           _BLF     GUI_CreateDialogBox,??GUI_CreateDialogBox??rA
   \   0000003C   BA02C4E1           STRH     R0,[R4, #+42]
     32          		hUserManual = MULTIEDIT_Create(4, 16, 274, 156, WinHandl, 0, WM_CF_SHOW, MULTIEDIT_CF_AUTOSCROLLBAR_V, "User manual", 100);
   \   00000040   6400A0E3           MOV      R0,#+100
   \   00000044   01002DE9           PUSH     {R0}
   \   00000048   20002DE9           PUSH     {R5}
   \   0000004C   0800A0E3           MOV      R0,#+8
   \   00000050   01002DE9           PUSH     {R0}
   \   00000054   0200A0E3           MOV      R0,#+2
   \   00000058   01002DE9           PUSH     {R0}
   \   0000005C   0000A0E3           MOV      R0,#+0
   \   00000060   01002DE9           PUSH     {R0}
   \   00000064   FA02D4E1           LDRSH    R0,[R4, #+42]
   \   00000068   9C30A0E3           MOV      R3,#+156
   \   0000006C   762083E2           ADD      R2,R3,#+118
   \   00000070   01002DE9           PUSH     {R0}
   \   00000074   1010A0E3           MOV      R1,#+16
   \   00000078   0400A0E3           MOV      R0,#+4
   \   0000007C   ........           _BLF     MULTIEDIT_Create,??MULTIEDIT_Create??rA
   \   00000080   B403C4E1           STRH     R0,[R4, #+52]
     33          		MULTIEDIT_SetReadOnly(hUserManual, 1);
   \   00000084   0110A0E3           MOV      R1,#+1
   \   00000088   ........           _BLF     MULTIEDIT_SetReadOnly,??MULTIEDIT_SetReadOnly??rA
     34          		MULTIEDIT_SetWrapWord(hUserManual);
   \   0000008C   F403D4E1           LDRSH    R0,[R4, #+52]
   \   00000090   ........           _BLF     MULTIEDIT_SetWrapWord,??MULTIEDIT_SetWrapWord??rA
     35          		MULTIEDIT_SetText(hUserManual, UserManual.c_str());
   \   00000094   48009FE5           LDR      R0,??ExecDialogBox_2+0x8  ;; UserManual
   \   00000098   181090E5           LDR      R1,[R0, #+24]
   \   0000009C   20D08DE2           ADD      SP,SP,#+32
   \   000000A0   100051E3           CMP      R1,#+16
   \   000000A4   04109025           LDRCS    R1,[R0, #+4]
   \   000000A8   04108032           ADDCC    R1,R0,#+4
   \   000000AC   F403D4E1           LDRSH    R0,[R4, #+52]
   \   000000B0   ........           _BLF     MULTIEDIT_SetText,??MULTIEDIT_SetText??rA
     36          		MULTIEDIT_SetAutoScrollV(hUserManual, 1);
   \   000000B4   F403D4E1           LDRSH    R0,[R4, #+52]
   \   000000B8   0110A0E3           MOV      R1,#+1
   \   000000BC   ........           _BLF     MULTIEDIT_SetAutoScrollV,??MULTIEDIT_SetAutoScrollV??rA
     37          		WM_EnableMemdev(WinHandl);
   \   000000C0   FA02D4E1           LDRSH    R0,[R4, #+42]
   \   000000C4   ........           _BLF     WM_EnableMemdev,??WM_EnableMemdev??rA
   \   000000C8   010000EA           B        ??ExecDialogBox_3
     38          	}else{
     39          		WM_BringToTop(WinHandl);
   \                     ??ExecDialogBox_1:
   \   000000CC   FA02D4E1           LDRSH    R0,[R4, #+42]
   \   000000D0   ........           _BLF     WM_BringToTop,??WM_BringToTop??rA
     40          	}
     41          }
   \                     ??ExecDialogBox_3:
   \   000000D4   3040BDE8           POP      {R4,R5,LR}
   \   000000D8   1EFF2FE1           BX       LR               ;; return
   \                     ??ExecDialogBox_2:
   \   000000DC   ........           DC32     `?<Constant "User manual">`
   \   000000E0   ........           DC32     ??cbUserManual
   \   000000E4   ........           DC32     UserManual
     42          

   \                                 In segment CODE, align 4, keep-with-next
     43          void TDUUserManual::cbUserManual(WM_MESSAGE *pMsg)
     44          {
   \                     ??cbUserManual:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
     45          	int NCode, Id;
     46          	WM_HWIN hWin = pMsg->hWin;
     47          	switch (pMsg->MsgId)
   \   00000004   98509FE5           LDR      R5,??cbUserManual_1  ;; SystemWindow
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   000095E5           LDR      R0,[R5, #+0]
   \   00000010   001094E5           LDR      R1,[R4, #+0]
   \   00000014   580090E5           LDR      R0,[R0, #+88]
   \   00000018   0D1041E2           SUB      R1,R1,#+13
   \   0000001C   010051E3           CMP      R1,#+1
   \   00000020   1000009A           BLS      ??cbUserManual_2
   \   00000024   021051E2           SUBS     R1,R1,#+2
   \   00000028   0400000A           BEQ      ??cbUserManual_3
   \   0000002C   0E1051E2           SUBS     R1,R1,#+14
   \   00000030   0500000A           BEQ      ??cbUserManual_4
   \   00000034   091051E2           SUBS     R1,R1,#+9
   \   00000038   0C00000A           BEQ      ??cbUserManual_5
   \   0000003C   150000EA           B        ??cbUserManual_6
     48          	{
     49          		case WM_PAINT:
     50          			SystemWindow->SysWin1->UserManualWin->UpdateLanguage();
   \                     ??cbUserManual_3:
   \   00000040   780090E5           LDR      R0,[R0, #+120]
   \   00000044   ........           _BLF     ??UpdateLanguage,??UpdateLanguage??rA
   \   00000048   060000EA           B        ??cbUserManual_2
     51          			break;
     52          		case WM_INIT_DIALOG:
     53          			SystemWindow->SysWin1->InitConfigLoginWin(hWin);
   \                     ??cbUserManual_4:
   \   0000004C   F410D4E1           LDRSH    R1,[R4, #+4]
   \   00000050   ........           _BLF     ??InitConfigLoginWin,??InitConfigLoginWin??rA
     54          			SystemWindow->SysWin1->UserManualWin->FirstTime = true;
   \   00000054   000095E5           LDR      R0,[R5, #+0]
   \   00000058   0110A0E3           MOV      R1,#+1
   \   0000005C   580090E5           LDR      R0,[R0, #+88]
   \   00000060   780090E5           LDR      R0,[R0, #+120]
   \   00000064   2810C0E5           STRB     R1,[R0, #+40]
   \                     ??cbUserManual_2:
   \   00000068   3040BDE8           POP      {R4,R5,LR}
   \   0000006C   1EFF2FE1           BX       LR
     55          		break;
     56          		case WM_TOUCH_CHILD:
     57          		break;
     58          		case WM_KEY:
     59          		break;
     60          		case WM_NOTIFY_PARENT:
     61          			Id    = WM_GetId(pMsg->hWinSrc);    /* Id of widget */
   \                     ??cbUserManual_5:
   \   00000070   F600D4E1           LDRSH    R0,[R4, #+6]
   \   00000074   ........           _BLF     WM_GetId,??WM_GetId??rA
     62          			NCode = pMsg->Data.v;               /* Notification code */
     63          			switch (NCode)
   \   00000078   081094E5           LDR      R1,[R4, #+8]
   \   0000007C   020051E3           CMP      R1,#+2
     64          			{
     65          				case WM_NOTIFICATION_RELEASED:    /* React only if released */
     66          					switch(Id)
   \   00000080   05005003           CMPEQ    R0,#+5
   \   00000084   F7FFFF1A           BNE      ??cbUserManual_2
     67          					{
     68          						case GUI_ID_CLOSE:   /* Close Button */
     69          							SystemWindow->SysWin1->CloseSysWin();
   \   00000088   000095E5           LDR      R0,[R5, #+0]
   \   0000008C   580090E5           LDR      R0,[R0, #+88]
   \   00000090   ........           _BLF     ??CloseSysWin,??CloseSysWin??rA
   \   00000094   F3FFFFEA           B        ??cbUserManual_2
     70          						break;
     71          					}
     72          				break;
     73          			}
     74          		break;
     75          		default:
     76          		WM_DefaultProc(pMsg);
   \                     ??cbUserManual_6:
   \   00000098   0400A0E1           MOV      R0,R4
   \   0000009C   ........           _BLF     WM_DefaultProc,??WM_DefaultProc??rA
     77          	}
     78          }
   \                     ??cbUserManual_7:
   \   000000A0   F0FFFFEA           B        ??cbUserManual_2
   \                     ??cbUserManual_1:
   \   000000A4   ........           DC32     SystemWindow

   \                                 In segment DIFUNCT, align 4, keep-with-next, root
   \   00000000                      REQUIRE ?call_ctors
   \   00000000   ........           DC32    ??__sti__routine

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "Close">`:
   \   00000000   436C6F736500       DC8 "Close"
   \   00000006   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant {{2196, 0, 21}, {5, 0, 18}}>`:
   \   00000000   940800000000       DC32 2196, 0, 21, 5, 0, 18
   \              000015000000
   \              050000000000
   \              000012000000

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs TDUUserManual &TDUUserManual::new TDUUserManual()
   \                     `??new TDUUserManual`:
   \   00000000   00402DE9           PUSH     {LR}
   \   00000004   6000A0E3           MOV      R0,#+96
   \   00000008   ........           _BLF     `??operator new`,`??operator new??rA`
   \   0000000C   000050E3           CMP      R0,#+0
   \   00000010   0000000A           BEQ      `??new TDUUserManual_1`
   \   00000014   ........           BL       ??TDUUserManual
   \                     `??new TDUUserManual_1`:
   \   00000018   0040BDE8           POP      {LR}
   \   0000001C   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void TDUUserManual::delete ~TDUUserManual(TDUUserManual *)
   \                     `??delete ~TDUUserManual`:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0040B0E1           MOVS     R4,R0
   \   00000008   0200000A           BEQ      `??delete ~TDUUserManual_1`
   \   0000000C   ........           BL       `?~TDUUserManual`
   \   00000010   0400A0E1           MOV      R0,R4
   \   00000014   ........           _BLF     `??operator delete`,`??operator delete??rA`
   \                     `??delete ~TDUUserManual_1`:
   \   00000018   1040BDE8           POP      {R4,LR}
   \   0000001C   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   static __??Code32?? __intrinsic __code __interwork __atpcs void __sti__routine()
   \                     ??__sti__routine:
   \   00000000   1EFF2FE1           BX       LR               ;; return
     79          

   Maximum stack usage in bytes:

     Function                       CSTACK
     --------                       ------
     TDUUserManual::ExecDialogBox(GUI_HWIN)
                                       44
     TDUUserManual::TDUUserManual()    40
     TDUUserManual::cbUserManual(WM_MESSAGE *)
                                       12
     TDUUserManual::delete ~TDUUserManual(TDUUserManual *)
                                        8
     TDUUserManual::new TDUUserManual()
                                        4
     TDUUserManual::~TDUUserManual()
                                        8
     __sti__routine()                   0


   Segment part sizes:

     Function/Label                 Bytes
     --------------                 -----
     TDUUserManual::~TDUUserManual()
                                      32
     TDUUserManual::TDUUserManual()   88
     ?<Constant "User manual">        60
     TDUUserManual::ExecDialogBox(GUI_HWIN)
                                     232
     TDUUserManual::cbUserManual(WM_MESSAGE *)
                                     168
     ?<Constant "Close">               8
     ?<Constant {{2196, 0, 21}, {5, 0, 18}}>
                                      24
     TDUUserManual::new TDUUserManual()
                                      32
     TDUUserManual::delete ~TDUUserManual(TDUUserManual *)
                                      32
     __sti__routine()                  4
      Others                         272

 
 856 bytes in segment CODE
  92 bytes in segment DATA_C
   4 bytes in segment DIFUNCT
 
 592 bytes of CODE  memory (+ 268 bytes shared)
  92 bytes of CONST memory

Errors: none
Warnings: none
