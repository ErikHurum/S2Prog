##############################################################################
#                                                                            #
# IAR ARM ANSI C/C++ Compiler V4.42A/W32               14/Sep/2022  15:19:21 #
# Copyright 1999-2005 IAR Systems. All rights reserved.                      #
#                                                                            #
#    Cpu mode        =  interwork                                            #
#    Endian          =  little                                               #
#    Stack alignment =  4                                                    #
#    Source file     =  D:\S2Prog\Shared\Src\TSNAsyncReceiver.cpp            #
#    Command line    =  D:\S2Prog\Shared\Src\TSNAsyncReceiver.cpp --fpu      #
#                       None -D OS_LIBMODE_SP -D CPU_S3C2410 -D              #
#                       OS_RAMVECT=0 -D OS_UART=-1 -D S2TXU -D USE_LZO=1 -D  #
#                       __ARM_LIBRARY__ -D WATCHDOG=1 -D NETWORK=1 -lCN      #
#                       D:\S2Prog\TXU\Debug\List\ -o                         #
#                       D:\S2Prog\TXU\Debug\Obj\ -z9 --debug --cpu_mode arm  #
#                       --endian little --cpu ARM920T --stack_align 4        #
#                       --interwork -e --enable_multibytes --eec++           #
#                       --dlib_config "C:\Program Files (x86)\IAR            #
#                       Systems\Embedded Workbench                           #
#                       4.0\arm\LIB\dl4tpainl8n.h" -I                        #
#                       D:\S2Prog\TXU\GUI\CORE\ -I D:\S2Prog\TXU\GUI\WM\ -I  #
#                       D:\S2Prog\TXU\GUI\WIDGET\ -I D:\S2Prog\TXU\CONFIG\   #
#                       -I D:\S2Prog\TXU\INC\ -I D:\S2Prog\TXU\..\SHARED\INC #
#                       \ -I D:\S2Prog\TXU\..\SHARED\SRC\ -I                 #
#                       D:\S2Prog\TXU\..\SHARED\LZO\minilzo.210\ -I          #
#                       D:\S2Prog\TXU\lwip-1.4.1\src\include\ -I             #
#                       D:\S2Prog\TXU\lwip-1.4.1\src\include\ipv4\ -I        #
#                       D:\S2Prog\TXU\lwip-1.4.1\src\ -I                     #
#                       D:\S2Prog\TXU\..\SHARED\Database\ -I                 #
#                       D:\S2Prog\TXU\src\ -I "C:\Program Files (x86)\IAR    #
#                       Systems\Embedded Workbench 4.0\arm\INC\"             #
#                       --inline_threshold=2                                 #
#    List file       =  D:\S2Prog\TXU\Debug\List\TSNAsyncReceiver.lst        #
#    Object file     =  D:\S2Prog\TXU\Debug\Obj\TSNAsyncReceiver.r79         #
#                                                                            #
#                                                                            #
##############################################################################

D:\S2Prog\Shared\Src\TSNAsyncReceiver.cpp
      1          #ifdef ANBOOTLOADER
      2          #include "RTOS.h"
      3          #include "ANPro10Inc.h"
      4          #else
      5          #include "TSNIncludes.h"

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void _Vector_impl<OS_TASK *, allocator<OS_TASK *>>::_Tidy0()
   \                     ??_Tidy0:
   \   00000000   00402DE9           PUSH     {LR}
   \   00000004   001090E5           LDR      R1,[R0, #+0]
   \   00000008   000051E3           CMP      R1,#+0
   \   0000000C   0200000A           BEQ      ??_Tidy0_1
   \   00000010   041080E5           STR      R1,[R0, #+4]
   \   00000014   0100A0E1           MOV      R0,R1
   \   00000018   ........           _BLF     `??operator delete`,`??operator delete??rA`
   \                     ??_Tidy0_1:
   \   0000001C   0040BDE8           POP      {LR}
   \   00000020   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs OS_TASK ** _Vector_impl<OS_TASK *, allocator<OS_TASK *>>::_Insert(OS_TASK **, OS_TASK * const &)
   \                     ??_Insert:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   005092E5           LDR      R5,[R2, #+0]
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   000094E5           LDR      R0,[R4, #+0]
   \   00000010   0120A0E3           MOV      R2,#+1
   \   00000014   000050E3           CMP      R0,#+0
   \   00000018   0060A003           MOVEQ    R6,#+0
   \   0000001C   00604110           SUBNE    R6,R1,R0
   \   00000020   0400A0E1           MOV      R0,R4
   \   00000024   ........           _BLF     ??_Make_room,??_Make_room??rA
   \   00000028   0110A0E3           MOV      R1,#+1
   \                     ??_Insert_1:
   \   0000002C   ........           STR      R5,[R0], #+4
   \   00000030   011051E2           SUBS     R1,R1,#+1
   \   00000034   FCFFFF1A           BNE      ??_Insert_1
   \   00000038   000094E5           LDR      R0,[R4, #+0]
   \   0000003C   000086E0           ADD      R0,R6,R0
   \   00000040   7040BDE8           POP      {R4-R6,LR}
   \   00000044   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs OS_TASK ** _Vector_impl<OS_TASK *, allocator<OS_TASK *>>::_Make_room(OS_TASK **, unsigned int)
   \                     ??_Make_room:
   \   00000000   F0472DE9           PUSH     {R4-R10,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   000094E5           LDR      R0,[R4, #+0]
   \   0000000C   0150A0E1           MOV      R5,R1
   \   00000010   081094E5           LDR      R1,[R4, #+8]
   \   00000014   0260A0E1           MOV      R6,R2
   \   00000018   001041E0           SUB      R1,R1,R0
   \   0000001C   2171A0E1           LSR      R7,R1,#+2
   \   00000020   041094E5           LDR      R1,[R4, #+4]
   \   00000024   000056E3           CMP      R6,#+0
   \   00000028   000041E0           SUB      R0,R1,R0
   \   0000002C   2001A0E1           LSR      R0,R0,#+2
   \   00000030   2900000A           BEQ      ??_Make_room_1
   \   00000034   C024E0E3           MVN      R2,#-1073741824
   \   00000038   002042E0           SUB      R2,R2,R0
   \   0000003C   060052E1           CMP      R2,R6
   \   00000040   2500003A           BCC      ??_Make_room_1
   \   00000044   008086E0           ADD      R8,R6,R0
   \   00000048   080057E1           CMP      R7,R8
   \   0000004C   1C00002A           BCS      ??_Make_room_2
   \   00000050   A700A0E1           LSR      R0,R7,#+1
   \   00000054   C014E0E3           MVN      R1,#-1073741824
   \   00000058   001041E0           SUB      R1,R1,R0
   \   0000005C   070051E1           CMP      R1,R7
   \   00000060   0070A033           MOVCC    R7,#+0
   \   00000064   07708020           ADDCS    R7,R0,R7
   \   00000068   080057E1           CMP      R7,R8
   \   0000006C   0870A031           MOVCC    R7,R8
   \   00000070   0701A0E1           LSL      R0,R7,#+2
   \   00000074   ........           _BLF     `??operator new`,`??operator new??rA`
   \   00000078   0090A0E1           MOV      R9,R0
   \   0000007C   000094E5           LDR      R0,[R4, #+0]
   \   00000080   0920A0E1           MOV      R2,R9
   \   00000084   0510A0E1           MOV      R1,R5
   \   00000088   ........           _BLF     _Copy_a4,??_Copy_a4??rA
   \   0000008C   041094E5           LDR      R1,[R4, #+4]
   \   00000090   00A0A0E1           MOV      R10,R0
   \   00000094   06218AE0           ADD      R2,R10,R6, LSL #+2
   \   00000098   0500A0E1           MOV      R0,R5
   \   0000009C   ........           _BLF     _Copy_a4,??_Copy_a4??rA
   \   000000A0   0400A0E1           MOV      R0,R4
   \   000000A4   ........           _BLF     ??_Tidy0,??_Tidy0??rA
   \   000000A8   070189E0           ADD      R0,R9,R7, LSL #+2
   \   000000AC   080084E5           STR      R0,[R4, #+8]
   \   000000B0   080189E0           ADD      R0,R9,R8, LSL #+2
   \   000000B4   040084E5           STR      R0,[R4, #+4]
   \   000000B8   009084E5           STR      R9,[R4, #+0]
   \   000000BC   0A50A0E1           MOV      R5,R10
   \   000000C0   050000EA           B        ??_Make_room_1
   \                     ??_Make_room_2:
   \   000000C4   062181E0           ADD      R2,R1,R6, LSL #+2
   \   000000C8   0500A0E1           MOV      R0,R5
   \   000000CC   ........           _BLF     _Copy_backward_a4,??_Copy_backward_a4??rA
   \   000000D0   040094E5           LDR      R0,[R4, #+4]
   \   000000D4   060180E0           ADD      R0,R0,R6, LSL #+2
   \   000000D8   040084E5           STR      R0,[R4, #+4]
   \                     ??_Make_room_1:
   \   000000DC   0500A0E1           MOV      R0,R5
   \   000000E0   F047BDE8           POP      {R4-R10,LR}
   \   000000E4   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void _Vector_impl<OS_TASK *, allocator<OS_TASK *>>::_Push_back0(OS_TASK *)
   \                     ??_Push_back0:
   \   00000000   02402DE9           PUSH     {R1,LR}
   \   00000004   041090E5           LDR      R1,[R0, #+4]
   \   00000008   082090E5           LDR      R2,[R0, #+8]
   \   0000000C   020051E1           CMP      R1,R2
   \   00000010   0800002A           BCS      ??_Push_back0_1
   \   00000014   00209DE5           LDR      R2,[SP, #+0]
   \   00000018   0130A0E3           MOV      R3,#+1
   \   0000001C   01C0A0E1           MOV      R12,R1
   \                     ??_Push_back0_2:
   \   00000020   ........           STR      R2,[R12], #+4
   \   00000024   013053E2           SUBS     R3,R3,#+1
   \   00000028   FCFFFF1A           BNE      ??_Push_back0_2
   \   0000002C   041081E2           ADD      R1,R1,#+4
   \   00000030   041080E5           STR      R1,[R0, #+4]
   \   00000034   010000EA           B        ??_Push_back0_3
   \                     ??_Push_back0_1:
   \   00000038   0D20A0E1           MOV      R2,SP
   \   0000003C   ........           _BLF     ??_Insert,??_Insert??rA
   \                     ??_Push_back0_3:
   \   00000040   0140BDE8           POP      {R0,LR}
   \   00000044   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs vector<OS_TASK *>::~vector()
   \                     `?~vector`:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   ........           _BLF     ??_Tidy0,??_Tidy0??rA
   \   0000000C   0000A0E3           MOV      R0,#+0
   \   00000010   000084E5           STR      R0,[R4, #+0]
   \   00000014   040084E5           STR      R0,[R4, #+4]
   \   00000018   080084E5           STR      R0,[R4, #+8]
   \   0000001C   1040BDE8           POP      {R4,LR}
   \   00000020   1EFF2FE1           BX       LR               ;; return
      6          #include "TSNAsyncReceiver.h"
      7          #endif
      8          
      9          

   \                                 In segment DATA_Z, align 4, align-sorted
     10          TSNAsyncReceiver *TSNAsyncReceiver::ReceiveTasks[ASYNC_RECEIVER_TASKS];
   \                     ??ReceiveTasks:
   \   00000000                      DS8 28
     11          #ifdef S2TXU

   \                                 In segment DATA_Z, align 4, align-sorted
     12          vector<OS_TASK *>TSNAsyncReceiver::IOTasks;
   \                     ??IOTasks:
   \   00000000                      DS8 12
     13          #endif
     14          // this routine is supposed to start a ReceiveTask on the first available configured port/uart

   \                                 In segment CODE, align 4, keep-with-next
     15          void TSNAsyncReceiver::EntryPoint(void *portNoPtr) {
   \                     ??EntryPoint:
   \   00000000   F0412DE9           PUSH     {R4-R8,LR}
     16              const int portNo = (int)portNoPtr;
     17              const int Device = TSNUart::Channels[portNo]->Device;
   \   00000004   5C419FE5           LDR      R4,??EntryPoint_2  ;; ??Channels
     18              switch ( Device ) {
   \   00000008   5C519FE5           LDR      R5,??EntryPoint_2+0x4  ;; OS_pCurrentTask
   \   0000000C   ........           LDR      R6,??DataTable1  ;; ??IOTasks
   \   00000010   0070A0E1           MOV      R7,R0
   \   00000014   071194E7           LDR      R1,[R4, +R7, LSL #+2]
   \   00000018   000095E5           LDR      R0,[R5, #+0]
   \   0000001C   A82091E5           LDR      R2,[R1, #+168]
   \   00000020   613042E2           SUB      R3,R2,#+97
   \   00000024   7C3D43E2           SUB      R3,R3,#+7936
   \   00000028   130053E3           CMP      R3,#+19
   \   0000002C   4900008A           BHI      ??EntryPoint_3
   \   00000030   018F8FE2           ADR      R8,??EntryPoint_1
   \   00000034   0380D8E7           LDRB     R8,[R8, R3]
   \   00000038   08F18FE0           ADD      PC,PC,R8, LSL #+2
   \                     ??EntryPoint_1:
   \   0000003C   2F2F2F0E           DC8      +47,+47,+47,+14
   \   00000040   2F41463B           DC8      +47,+65,+70,+59
   \   00000044   3B3B3B3B           DC8      +59,+59,+59,+59
   \   00000048   3B3B3B3B           DC8      +59,+59,+59,+59
   \   0000004C   3B2C041D           DC8      +59,+44,+4,+29
     19              case C_UART_DEVICE_PRINTER:
     20          #ifdef S2TXU
     21                  {
     22                      PROPrinter *PROPrinterPtr = PROPrinter::FindPrinterPort(portNo);
   \                     ??EntryPoint_4:
   \   00000050   0700A0E1           MOV      R0,R7
   \   00000054   ........           _BLF     ??FindPrinterPort,??FindPrinterPort??rA
   \   00000058   0080B0E1           MOVS     R8,R0
     23                      if ( PROPrinterPtr ) {
   \   0000005C   0500000A           BEQ      ??EntryPoint_5
     24                          OS_TASK *tmpTaskPtr = OS_GetpCurrentTask();
     25                          IOTasks.push_back(tmpTaskPtr);
   \   00000060   001095E5           LDR      R1,[R5, #+0]
   \   00000064   0600A0E1           MOV      R0,R6
   \   00000068   ........           _BLF     ??_Push_back0,??_Push_back0??rA
     26                          //OS_SetPriority(tmpTaskPtr,130);
     27                          PROPrinterPtr->PrinterTask(TSNUart::Channels[portNo]);
   \   0000006C   071194E7           LDR      R1,[R4, +R7, LSL #+2]
   \   00000070   0800A0E1           MOV      R0,R8
   \   00000074   ........           _BLF     ??PrinterTask,??PrinterTask??rA
     28                      }
     29                  }
     30          #endif
     31              case C_UART_DEVICE_ANPRO3:
     32          #ifdef S2TXU
     33                  {
     34                      AnPro3object *ANPRO3Ptr = AnPro3object::FindANPRO3Object(portNo);
   \                     ??EntryPoint_5:
   \   00000078   0700A0E1           MOV      R0,R7
   \   0000007C   ........           _BLF     ??FindANPRO3Object,??FindANPRO3Object??rA
   \   00000080   0080B0E1           MOVS     R8,R0
     35                      if ( ANPRO3Ptr ) {
   \   00000084   3300000A           BEQ      ??EntryPoint_3
     36                          OS_TASK *tmpTaskPtr = OS_GetpCurrentTask();
   \   00000088   005095E5           LDR      R5,[R5, #+0]
     37                          IOTasks.push_back(tmpTaskPtr);
   \   0000008C   0600A0E1           MOV      R0,R6
   \   00000090   0510A0E1           MOV      R1,R5
   \   00000094   ........           _BLF     ??_Push_back0,??_Push_back0??rA
     38                          OS_SetPriority(tmpTaskPtr, 130);
   \   00000098   8210A0E3           MOV      R1,#+130
   \   0000009C   0500A0E1           MOV      R0,R5
   \   000000A0   ........           _BLF     OS_SetPriority,??OS_SetPriority??rA
     39                          ANPRO3Ptr->ANPRO3Task(TSNUart::Channels[portNo]);
   \   000000A4   071194E7           LDR      R1,[R4, +R7, LSL #+2]
   \   000000A8   0800A0E1           MOV      R0,R8
   \   000000AC   ........           _BLF     ??ANPRO3Task,??ANPRO3Task??rA
   \   000000B0   280000EA           B        ??EntryPoint_3
     40                      }
     41                  }
     42          #endif
     43                  break;
     44              case C_UART_DEVICE_SAAB:
     45          #ifdef S2TXU
     46                  {
     47                      OS_TASK *tmpTaskPtr = OS_GetpCurrentTask();
     48                      IOTasks.push_back(tmpTaskPtr);
   \                     ??EntryPoint_6:
   \   000000B4   0010A0E1           MOV      R1,R0
   \   000000B8   0600A0E1           MOV      R0,R6
   \   000000BC   ........           _BLF     ??_Push_back0,??_Push_back0??rA
     49                      SaabProtcol *SaabProtcolPtr = SaabProtcol::FindSaabProtocolObject(portNo);
   \   000000C0   0700A0E1           MOV      R0,R7
   \   000000C4   ........           _BLF     ??FindSaabProtocolObject,??FindSaabProtocolObject??rA
     50                      if ( !SaabProtcolPtr ) {
   \   000000C8   000050E3           CMP      R0,#+0
   \   000000CC   0200001A           BNE      ??EntryPoint_7
     51                          SaabProtcolPtr = new SaabProtcol(portNo);
   \   000000D0   0010A0E3           MOV      R1,#+0
   \   000000D4   0700A0E1           MOV      R0,R7
   \   000000D8   ........           _BLF     `??new SaabProtcol`,`??new SaabProtcol??rA`
     52          
     53                      }
     54                      if ( SaabProtcolPtr ) {
   \                     ??EntryPoint_7:
   \   000000DC   000050E3           CMP      R0,#+0
   \   000000E0   1C00000A           BEQ      ??EntryPoint_3
     55                          SaabProtcolPtr->SaabComTask(TSNUart::Channels[portNo]);
   \   000000E4   071194E7           LDR      R1,[R4, +R7, LSL #+2]
   \   000000E8   ........           _BLF     ??SaabComTask,??SaabComTask??rA
   \   000000EC   190000EA           B        ??EntryPoint_3
     56                      }
     57                  }
     58          #endif
     59                  break;
     60          
     61              case C_UART_DEVICE_TPC:
     62          #ifdef S2TXU
     63                  TPCxObject::TPCxTask(TSNUart::Channels[portNo]);
   \                     ??EntryPoint_8:
   \   000000F0   0100A0E1           MOV      R0,R1
   \   000000F4   ........           _BLF     ??TPCxTask,??TPCxTask??rA
   \   000000F8   160000EA           B        ??EntryPoint_3
     64          #endif
     65                  break;
     66              case C_UART_DEVICE_ANPRO10:
     67              case C_UART_DEVICE_TDU:
     68              case C_UART_DEVICE_PC:
     69              case C_UART_DEVICE_TCU:
     70          #ifdef S2TXU
     71                  {
     72                      int Priority = 130;
   \                     ??EntryPoint_9:
   \   000000FC   8210A0E3           MOV      R1,#+130
     73                      switch ( Device ) {
   \   00000100   6530A0E3           MOV      R3,#+101
   \   00000104   7C3D83E3           ORR      R3,R3,#0x1F00
   \   00000108   030052E1           CMP      R2,R3
     74                      case C_UART_DEVICE_ANPRO10:
     75                          Priority = 110;
   \   0000010C   6E10A003           MOVEQ    R1,#+110
     76                          break;
     77                      case C_UART_DEVICE_TDU:
     78                      case C_UART_DEVICE_PC:
     79                      case C_UART_DEVICE_TCU:
     80                          break;
     81                      }
     82                      OS_TASK *tmpTaskPtr = OS_GetpCurrentTask();
     83                      OS_SetPriority(tmpTaskPtr, Priority);
   \   00000110   ........           _BLF     OS_SetPriority,??OS_SetPriority??rA
     84                      ANPRO10_Receive(TSNUart::Channels[portNo], 10000);
   \   00000114   070194E7           LDR      R0,[R4, +R7, LSL #+2]
   \   00000118   0020A0E3           MOV      R2,#+0
   \   0000011C   1010A0E3           MOV      R1,#+16
   \   00000120   9C1D81E3           ORR      R1,R1,#0x2700
   \   00000124   ........           _BLF     ??ANPRO10_Receive,??ANPRO10_Receive??rA
   \   00000128   0A0000EA           B        ??EntryPoint_3
     85                  }
     86          #endif
     87                  break;
     88              case C_UART_DEVICE_MODICON_MASTER_TCP   :
     89              case C_UART_DEVICE_MODICON_SLAVE_TCP    :
     90              case C_UART_DEVICE_MODICON_MASTER       :
     91              case C_UART_DEVICE_MODICON_SLAVE        :
     92              case C_UART_DEVICE_MODBUS_SLAVE         :
     93              case C_UART_DEVICE_MODBUS_SLAVE_INV     :
     94              case C_UART_DEVICE_MODBUS_SLAVE_TCP     :
     95              case C_UART_DEVICE_MODBUS_MASTER        :
     96              case C_UART_DEVICE_MODBUS_MASTER_INV    :
     97              case C_UART_DEVICE_MODBUS_MASTER_TCP    :
     98          #ifdef S2TXU
     99          // This cause the c-spy crash
    100                  {
    101                      OS_TASK *tmpTaskPtr = OS_GetpCurrentTask();
    102                      IOTasks.push_back(tmpTaskPtr);
   \                     ??EntryPoint_10:
   \   0000012C   0010A0E1           MOV      R1,R0
   \   00000130   0600A0E1           MOV      R0,R6
   \   00000134   ........           _BLF     ??_Push_back0,??_Push_back0??rA
    103                      ModbusObject::ModbusTask(TSNUart::Channels[portNo]);
   \   00000138   070194E7           LDR      R0,[R4, +R7, LSL #+2]
   \   0000013C   ........           _BLF     ??ModbusTask,??ModbusTask??rA
   \   00000140   040000EA           B        ??EntryPoint_3
    104                  }
    105          #endif
    106                  break;
    107              case C_UART_DEVICE_ZB:
    108          #ifdef S2TXU
    109                  {
    110                      OS_TASK *tmpTaskPtr = OS_GetpCurrentTask();
    111                      IOTasks.push_back(tmpTaskPtr);
   \                     ??EntryPoint_11:
   \   00000144   0010A0E1           MOV      R1,R0
   \   00000148   0600A0E1           MOV      R0,R6
   \   0000014C   ........           _BLF     ??_Push_back0,??_Push_back0??rA
    112                      ANPRO10_IO_Handler(TSNUart::Channels[portNo]);
   \   00000150   070194E7           LDR      R0,[R4, +R7, LSL #+2]
   \   00000154   ........           _BLF     ??ANPRO10_IO_Handler,??ANPRO10_IO_Handler??rA
    113                  }
    114          #endif
    115                  break;
    116              }
    117              // shall not return
    118              while ( 1 ) {
    119                  TSN_Delay(60000);
   \                     ??EntryPoint_3:
   \   00000158   6000A0E3           MOV      R0,#+96
   \   0000015C   EA0C80E3           ORR      R0,R0,#0xEA00
   \   00000160   ........           _BLF     OS_Delay,??OS_Delay??rA
   \   00000164   FBFFFFEA           B        ??EntryPoint_3
   \                     ??EntryPoint_2:
   \   00000168   ........           DC32     ??Channels
   \   0000016C   ........           DC32     OS_pCurrentTask
    120              }
    121          }
    122          

   \                                 In segment CODE, align 4, keep-with-next
    123          TSNAsyncReceiver::TSNAsyncReceiver(TSNUart *port) {
    124          }
   \                     ??TSNAsyncReceiver:
   \   00000000   1EFF2FE1           BX       LR               ;; return
    125          

   \                                 In segment CODE, align 4, keep-with-next
    126          TSNAsyncReceiver::~TSNAsyncReceiver() {
    127          }
   \                     `?~TSNAsyncReceiver`:
   \   00000000   1EFF2FE1           BX       LR               ;; return

   \                                 In segment DIFUNCT, align 4, keep-with-next, root
   \   00000000                      REQUIRE ?call_ctors
   \   00000000   ........           DC32    ??__sti__routine

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs TSNAsyncReceiver &TSNAsyncReceiver::new TSNAsyncReceiver(TSNUart *)
   \                     `??new TSNAsyncReceiver`:
   \   00000000   00402DE9           PUSH     {LR}
   \   00000004   0100A0E3           MOV      R0,#+1
   \   00000008   ........           _BLF     `??operator new`,`??operator new??rA`
   \   0000000C   ........           B        ?Subroutine6

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void TSNAsyncReceiver::delete ~TSNAsyncReceiver(TSNAsyncReceiver *)
   \                     `??delete ~TSNAsyncReceiver`:
   \   00000000   00402DE9           PUSH     {LR}
   \   00000004   000050E3           CMP      R0,#+0
   \   00000008   0000000A           BEQ      `??delete ~TSNAsyncReceiver_1`
   \   0000000C   ........           _BLF     `??operator delete`,`??operator delete??rA`
   \                     `??delete ~TSNAsyncReceiver_1`:
   \   00000010                      REQUIRE ?Subroutine6
   \   00000010                      ;; // Fall through to label ?Subroutine6

   \                                 In segment CODE, align 4, keep-with-next
   \                     ?Subroutine6:
   \   00000000   0040BDE8           POP      {LR}
   \   00000004   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   static __??Code32?? __intrinsic __code __interwork __atpcs void __sti__routine()
   \                     ??__sti__routine:
   \   00000000   ........           LDR      R0,??DataTable1  ;; ??IOTasks
   \   00000004   00402DE9           PUSH     {LR}
   \   00000008   0010A0E3           MOV      R1,#+0
   \   0000000C   001080E5           STR      R1,[R0, #+0]
   \   00000010   041080E5           STR      R1,[R0, #+4]
   \   00000014   081080E5           STR      R1,[R0, #+8]
   \   00000018   04009FE5           LDR      R0,??__sti__routine_1  ;; ?_0
   \   0000001C   ........           _BLF     __record_needed_destruction,??__record_needed_destruction??rA
   \   00000020   ........           B        ?Subroutine6
   \                     ??__sti__routine_1:
   \   00000024   ........           DC32     ?_0

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable1:
   \   00000000   ........           DC32     ??IOTasks

   Maximum stack usage in bytes:

     Function                       CSTACK
     --------                       ------
     TSNAsyncReceiver::EntryPoint(void *)
                                       24
     TSNAsyncReceiver::TSNAsyncReceiver(TSNUart *)
                                        0
     TSNAsyncReceiver::delete ~TSNAsyncReceiver(TSNAsyncReceiver *)
                                        4
     TSNAsyncReceiver::new TSNAsyncReceiver(TSNUart *)
                                        4
     TSNAsyncReceiver::~TSNAsyncReceiver()
                                        0
     _Vector_impl<OS_TASK *, allocator<OS_TASK *>>::_Insert(OS_TASK **, OS_TASK * const &)
                                       16
     _Vector_impl<OS_TASK *, allocator<OS_TASK *>>::_Make_room(OS_TASK **, unsigned int)
                                       32
     _Vector_impl<OS_TASK *, allocator<OS_TASK *>>::_Push_back0(OS_TASK *)
                                        8
     _Vector_impl<OS_TASK *, allocator<OS_TASK *>>::_Tidy0()
                                        4
     __sti__routine()                   4
     vector<OS_TASK *>::~vector()       8


   Segment part sizes:

     Function/Label                 Bytes
     --------------                 -----
     _Vector_impl<OS_TASK *, allocator<OS_TASK *>>::_Tidy0()
                                      36
     _Vector_impl<OS_TASK *, allocator<OS_TASK *>>::_Insert(OS_TASK **, OS_TASK * const &)
                                      72
     _Vector_impl<OS_TASK *, allocator<OS_TASK *>>::_Make_room(OS_TASK **, unsigned int)
                                     232
     _Vector_impl<OS_TASK *, allocator<OS_TASK *>>::_Push_back0(OS_TASK *)
                                      72
     vector<OS_TASK *>::~vector()     36
     TSNAsyncReceiver::ReceiveTasks   28
     TSNAsyncReceiver::IOTasks        12
     TSNAsyncReceiver::EntryPoint(void *)
                                     368
     TSNAsyncReceiver::TSNAsyncReceiver(TSNUart *)
                                       4
     TSNAsyncReceiver::~TSNAsyncReceiver()
                                       4
     TSNAsyncReceiver::new TSNAsyncReceiver(TSNUart *)
                                      16
     TSNAsyncReceiver::delete ~TSNAsyncReceiver(TSNAsyncReceiver *)
                                      16
     ?Subroutine6                      8
     __sti__routine()                 40
     ??DataTable1                      4
      Others                         320

 
 1 196 bytes in segment CODE
    12 bytes in segment DATA_C
    44 bytes in segment DATA_Z
     4 bytes in segment DIFUNCT
    12 bytes in segment INITTAB
 
 464 bytes of CODE  memory (+ 748 bytes shared)
  12 bytes of CONST memory
  44 bytes of DATA  memory

Errors: none
Warnings: none
