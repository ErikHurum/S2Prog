##############################################################################
#                                                                            #
# IAR ARM ANSI C/C++ Compiler V4.42A/W32               14/Sep/2022  15:13:52 #
# Copyright 1999-2005 IAR Systems. All rights reserved.                      #
#                                                                            #
#    Cpu mode        =  interwork                                            #
#    Endian          =  little                                               #
#    Stack alignment =  4                                                    #
#    Source file     =  D:\S2Prog\Shared\Src\IOUnitZBAna.cpp                 #
#    Command line    =  D:\S2Prog\Shared\Src\IOUnitZBAna.cpp --fpu None -D   #
#                       OS_LIBMODE_SP -D CPU_S3C2410 -D OS_RAMVECT=0 -D      #
#                       OS_UART=-1 -D S2TXU -D USE_LZO=1 -D __ARM_LIBRARY__  #
#                       -D WATCHDOG=1 -D NETWORK=1 -lCN                      #
#                       D:\S2Prog\TXU\Debug\List\ -o                         #
#                       D:\S2Prog\TXU\Debug\Obj\ -z9 --debug --cpu_mode arm  #
#                       --endian little --cpu ARM920T --stack_align 4        #
#                       --interwork -e --enable_multibytes --eec++           #
#                       --dlib_config "C:\Program Files (x86)\IAR            #
#                       Systems\Embedded Workbench                           #
#                       4.0\arm\LIB\dl4tpainl8n.h" -I                        #
#                       D:\S2Prog\TXU\GUI\CORE\ -I D:\S2Prog\TXU\GUI\WM\ -I  #
#                       D:\S2Prog\TXU\GUI\WIDGET\ -I D:\S2Prog\TXU\CONFIG\   #
#                       -I D:\S2Prog\TXU\INC\ -I D:\S2Prog\TXU\..\SHARED\INC #
#                       \ -I D:\S2Prog\TXU\..\SHARED\SRC\ -I                 #
#                       D:\S2Prog\TXU\..\SHARED\LZO\minilzo.210\ -I          #
#                       D:\S2Prog\TXU\lwip-1.4.1\src\include\ -I             #
#                       D:\S2Prog\TXU\lwip-1.4.1\src\include\ipv4\ -I        #
#                       D:\S2Prog\TXU\lwip-1.4.1\src\ -I                     #
#                       D:\S2Prog\TXU\..\SHARED\Database\ -I                 #
#                       D:\S2Prog\TXU\src\ -I "C:\Program Files (x86)\IAR    #
#                       Systems\Embedded Workbench 4.0\arm\INC\"             #
#                       --inline_threshold=2                                 #
#    List file       =  D:\S2Prog\TXU\Debug\List\IOUnitZBAna.lst             #
#    Object file     =  D:\S2Prog\TXU\Debug\Obj\IOUnitZBAna.r79              #
#                                                                            #
#                                                                            #
##############################################################################

D:\S2Prog\Shared\Src\IOUnitZBAna.cpp
      1          #include "TSNIncludes.h"

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs string::string(string const &)
   \                     ??string:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
   \   0000000C   0020A0E3           MOV      R2,#+0
   \   00000010   0010A0E3           MOV      R1,#+0
   \   00000014   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000018   1C009FE5           LDR      R0,??string_1    ;; ??npos
   \   0000001C   0020A0E3           MOV      R2,#+0
   \   00000020   003090E5           LDR      R3,[R0, #+0]
   \   00000024   0510A0E1           MOV      R1,R5
   \   00000028   0400A0E1           MOV      R0,R4
   \   0000002C   ........           _BLF     ??assign,??assign??rA
   \   00000030   0400A0E1           MOV      R0,R4
   \   00000034   3040BDE8           POP      {R4,R5,LR}
   \   00000038   1EFF2FE1           BX       LR               ;; return
   \                     ??string_1:
   \   0000003C   ........           DC32     ??npos

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs _Tree_algobase<allocator<void>>::_Genptr _Tree_algobase<allocator<void>>::_DecP(_Tree_algobase<allocator<void>>::_Genptr)
   \                     ??_DecP:
   \   00000000   0D10D0E5           LDRB     R1,[R0, #+13]
   \   00000004   000051E3           CMP      R1,#+0
   \   00000008   08009015           LDRNE    R0,[R0, #+8]
   \   0000000C   1EFF2F11           BXNE     LR
   \   00000010   001090E5           LDR      R1,[R0, #+0]
   \   00000014   0D20D1E5           LDRB     R2,[R1, #+13]
   \   00000018   000052E3           CMP      R2,#+0
   \   0000001C   0700001A           BNE      ??_DecP_1
   \   00000020   000000EA           B        ??_DecP_2
   \                     ??_DecP_3:
   \   00000024   0010A0E1           MOV      R1,R0
   \                     ??_DecP_2:
   \   00000028   080091E5           LDR      R0,[R1, #+8]
   \   0000002C   0D20D0E5           LDRB     R2,[R0, #+13]
   \   00000030   000052E3           CMP      R2,#+0
   \   00000034   FAFFFF0A           BEQ      ??_DecP_3
   \   00000038   0100A0E1           MOV      R0,R1
   \   0000003C   1EFF2FE1           BX       LR
   \                     ??_DecP_1:
   \   00000040   041090E5           LDR      R1,[R0, #+4]
   \   00000044   0D20D1E5           LDRB     R2,[R1, #+13]
   \   00000048   000052E3           CMP      R2,#+0
   \   0000004C   1EFF2F11           BXNE     LR
   \   00000050   002091E5           LDR      R2,[R1, #+0]
   \   00000054   020050E1           CMP      R0,R2
   \   00000058   0100A0E1           MOV      R0,R1
   \   0000005C   F7FFFF0A           BEQ      ??_DecP_1
   \   00000060   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs _Tree_algobase<allocator<void>>::_Genptr _Tree_algobase<allocator<void>>::_IncP(_Tree_algobase<allocator<void>>::_Genptr)
   \                     ??_IncP:
   \   00000000   0D10D0E5           LDRB     R1,[R0, #+13]
   \   00000004   000051E3           CMP      R1,#+0
   \   00000008   1EFF2F11           BXNE     LR
   \   0000000C   081090E5           LDR      R1,[R0, #+8]
   \   00000010   0D20D1E5           LDRB     R2,[R1, #+13]
   \   00000014   000052E3           CMP      R2,#+0
   \   00000018   0700001A           BNE      ??_IncP_1
   \   0000001C   000000EA           B        ??_IncP_2
   \                     ??_IncP_3:
   \   00000020   0010A0E1           MOV      R1,R0
   \                     ??_IncP_2:
   \   00000024   000091E5           LDR      R0,[R1, #+0]
   \   00000028   0D20D0E5           LDRB     R2,[R0, #+13]
   \   0000002C   000052E3           CMP      R2,#+0
   \   00000030   FAFFFF0A           BEQ      ??_IncP_3
   \   00000034   060000EA           B        ??_IncP_4
   \                     ??_IncP_5:
   \   00000038   0100A0E1           MOV      R0,R1
   \                     ??_IncP_1:
   \   0000003C   041090E5           LDR      R1,[R0, #+4]
   \   00000040   0D20D1E5           LDRB     R2,[R1, #+13]
   \   00000044   000052E3           CMP      R2,#+0
   \   00000048   08209105           LDREQ    R2,[R1, #+8]
   \   0000004C   02005001           CMPEQ    R0,R2
   \   00000050   F8FFFF0A           BEQ      ??_IncP_5
   \                     ??_IncP_4:
   \   00000054   0100A0E1           MOV      R0,R1
   \   00000058   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void _Tree_algobase<allocator<void>>::_Clear()
   \                     ??_Clear:
   \   00000000   040080E5           STR      R0,[R0, #+4]
   \   00000004   000080E5           STR      R0,[R0, #+0]
   \   00000008   080080E5           STR      R0,[R0, #+8]
   \   0000000C   0110A0E3           MOV      R1,#+1
   \   00000010   0D10C0E5           STRB     R1,[R0, #+13]
   \   00000014   0C10C0E5           STRB     R1,[R0, #+12]
   \   00000018   0010A0E3           MOV      R1,#+0
   \   0000001C   101080E5           STR      R1,[R0, #+16]
   \   00000020   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void _Tree_algobase<allocator<void>>::_Rrotate(_Tree_algobase<allocator<void>>::_Genptr)
   \                     ??_Rrotate:
   \   00000000   002091E5           LDR      R2,[R1, #+0]
   \   00000004   083092E5           LDR      R3,[R2, #+8]
   \   00000008   003081E5           STR      R3,[R1, #+0]
   \   0000000C   083092E5           LDR      R3,[R2, #+8]
   \   00000010   0DC0D3E5           LDRB     R12,[R3, #+13]
   \   00000014   00005CE3           CMP      R12,#+0
   \   00000018   04108305           STREQ    R1,[R3, #+4]
   \   0000001C   043091E5           LDR      R3,[R1, #+4]
   \   00000020   043082E5           STR      R3,[R2, #+4]
   \   00000024   043090E5           LDR      R3,[R0, #+4]
   \   00000028   030051E1           CMP      R1,R3
   \   0000002C   04208005           STREQ    R2,[R0, #+4]
   \   00000030   0400000A           BEQ      ??_Rrotate_1
   \   00000034   040091E5           LDR      R0,[R1, #+4]
   \   00000038   083090E5           LDR      R3,[R0, #+8]
   \   0000003C   030051E1           CMP      R1,R3
   \   00000040   08208005           STREQ    R2,[R0, #+8]
   \   00000044   00208015           STRNE    R2,[R0, #+0]
   \                     ??_Rrotate_1:
   \   00000048   081082E5           STR      R1,[R2, #+8]
   \   0000004C   042081E5           STR      R2,[R1, #+4]
   \   00000050   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void _Tree_algobase<allocator<void>>::_Lrotate(_Tree_algobase<allocator<void>>::_Genptr)
   \                     ??_Lrotate:
   \   00000000   082091E5           LDR      R2,[R1, #+8]
   \   00000004   003092E5           LDR      R3,[R2, #+0]
   \   00000008   083081E5           STR      R3,[R1, #+8]
   \   0000000C   003092E5           LDR      R3,[R2, #+0]
   \   00000010   0DC0D3E5           LDRB     R12,[R3, #+13]
   \   00000014   00005CE3           CMP      R12,#+0
   \   00000018   04108305           STREQ    R1,[R3, #+4]
   \   0000001C   043091E5           LDR      R3,[R1, #+4]
   \   00000020   043082E5           STR      R3,[R2, #+4]
   \   00000024   043090E5           LDR      R3,[R0, #+4]
   \   00000028   030051E1           CMP      R1,R3
   \   0000002C   04208005           STREQ    R2,[R0, #+4]
   \   00000030   0400000A           BEQ      ??_Lrotate_1
   \   00000034   040091E5           LDR      R0,[R1, #+4]
   \   00000038   003090E5           LDR      R3,[R0, #+0]
   \   0000003C   030051E1           CMP      R1,R3
   \   00000040   00208005           STREQ    R2,[R0, #+0]
   \   00000044   08208015           STRNE    R2,[R0, #+8]
   \                     ??_Lrotate_1:
   \   00000048   001082E5           STR      R1,[R2, #+0]
   \   0000004C   042081E5           STR      R2,[R1, #+4]
   \   00000050   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs _Tree_algobase<allocator<void>>::_Genptr _Tree_algobase<allocator<void>>::_Erase(_Tree_algobase<allocator<void>>::_Genptr)
   \                     ??_Erase:
   \   00000000   F0472DE9           PUSH     {R4-R10,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0160A0E1           MOV      R6,R1
   \   0000000C   0680A0E1           MOV      R8,R6
   \   00000010   0600A0E1           MOV      R0,R6
   \   00000014   ........           _BLF     ??_IncP,??_IncP??rA
   \   00000018   007098E5           LDR      R7,[R8, #+0]
   \   0000001C   0D10D7E5           LDRB     R1,[R7, #+13]
   \   00000020   000051E3           CMP      R1,#+0
   \   00000024   0400001A           BNE      ??_Erase_2
   \   00000028   081098E5           LDR      R1,[R8, #+8]
   \   0000002C   0D10D1E5           LDRB     R1,[R1, #+13]
   \   00000030   000051E3           CMP      R1,#+0
   \   00000034   0100001A           BNE      ??_Erase_3
   \   00000038   0080A0E1           MOV      R8,R0
   \                     ??_Erase_2:
   \   0000003C   087098E5           LDR      R7,[R8, #+8]
   \                     ??_Erase_3:
   \   00000040   060058E1           CMP      R8,R6
   \   00000044   2B00001A           BNE      ??_Erase_4
   \   00000048   0D00D7E5           LDRB     R0,[R7, #+13]
   \   0000004C   045096E5           LDR      R5,[R6, #+4]
   \   00000050   000050E3           CMP      R0,#+0
   \   00000054   04508705           STREQ    R5,[R7, #+4]
   \   00000058   040094E5           LDR      R0,[R4, #+4]
   \   0000005C   060050E1           CMP      R0,R6
   \   00000060   04708405           STREQ    R7,[R4, #+4]
   \   00000064   0300000A           BEQ      ??_Erase_5
   \   00000068   000095E5           LDR      R0,[R5, #+0]
   \   0000006C   060050E1           CMP      R0,R6
   \   00000070   00708505           STREQ    R7,[R5, #+0]
   \   00000074   08708515           STRNE    R7,[R5, #+8]
   \                     ??_Erase_5:
   \   00000078   000094E5           LDR      R0,[R4, #+0]
   \   0000007C   060050E1           CMP      R0,R6
   \   00000080   0B00001A           BNE      ??_Erase_6
   \   00000084   0D00D7E5           LDRB     R0,[R7, #+13]
   \   00000088   000050E3           CMP      R0,#+0
   \   0000008C   0500A011           MOVNE    R0,R5
   \   00000090   0600001A           BNE      ??_Erase_7
   \   00000094   0700A0E1           MOV      R0,R7
   \   00000098   000000EA           B        ??_Erase_8
   \                     ??_Erase_9:
   \   0000009C   0100A0E1           MOV      R0,R1
   \                     ??_Erase_8:
   \   000000A0   001090E5           LDR      R1,[R0, #+0]
   \   000000A4   0D20D1E5           LDRB     R2,[R1, #+13]
   \   000000A8   000052E3           CMP      R2,#+0
   \   000000AC   FAFFFF0A           BEQ      ??_Erase_9
   \                     ??_Erase_7:
   \   000000B0   000084E5           STR      R0,[R4, #+0]
   \                     ??_Erase_6:
   \   000000B4   080094E5           LDR      R0,[R4, #+8]
   \   000000B8   060050E1           CMP      R0,R6
   \   000000BC   2F00001A           BNE      ??_Erase_10
   \   000000C0   0D10D7E5           LDRB     R1,[R7, #+13]
   \   000000C4   080084E2           ADD      R0,R4,#+8
   \   000000C8   000051E3           CMP      R1,#+0
   \   000000CC   0510A011           MOVNE    R1,R5
   \   000000D0   0600001A           BNE      ??_Erase_11
   \   000000D4   0710A0E1           MOV      R1,R7
   \   000000D8   000000EA           B        ??_Erase_12
   \                     ??_Erase_13:
   \   000000DC   0210A0E1           MOV      R1,R2
   \                     ??_Erase_12:
   \   000000E0   082091E5           LDR      R2,[R1, #+8]
   \   000000E4   0D30D2E5           LDRB     R3,[R2, #+13]
   \   000000E8   000053E3           CMP      R3,#+0
   \   000000EC   FAFFFF0A           BEQ      ??_Erase_13
   \                     ??_Erase_11:
   \   000000F0   001080E5           STR      R1,[R0, #+0]
   \   000000F4   210000EA           B        ??_Erase_10
   \                     ??_Erase_4:
   \   000000F8   000096E5           LDR      R0,[R6, #+0]
   \   000000FC   048080E5           STR      R8,[R0, #+4]
   \   00000100   000096E5           LDR      R0,[R6, #+0]
   \   00000104   000088E5           STR      R0,[R8, #+0]
   \   00000108   080096E5           LDR      R0,[R6, #+8]
   \   0000010C   000058E1           CMP      R8,R0
   \   00000110   0850A001           MOVEQ    R5,R8
   \   00000114   0800000A           BEQ      ??_Erase_14
   \   00000118   0D00D7E5           LDRB     R0,[R7, #+13]
   \   0000011C   045098E5           LDR      R5,[R8, #+4]
   \   00000120   000050E3           CMP      R0,#+0
   \   00000124   04508705           STREQ    R5,[R7, #+4]
   \   00000128   007085E5           STR      R7,[R5, #+0]
   \   0000012C   080096E5           LDR      R0,[R6, #+8]
   \   00000130   080088E5           STR      R0,[R8, #+8]
   \   00000134   080096E5           LDR      R0,[R6, #+8]
   \   00000138   048080E5           STR      R8,[R0, #+4]
   \                     ??_Erase_14:
   \   0000013C   040094E5           LDR      R0,[R4, #+4]
   \   00000140   060050E1           CMP      R0,R6
   \   00000144   04808405           STREQ    R8,[R4, #+4]
   \   00000148   0400000A           BEQ      ??_Erase_15
   \   0000014C   040096E5           LDR      R0,[R6, #+4]
   \   00000150   001090E5           LDR      R1,[R0, #+0]
   \   00000154   060051E1           CMP      R1,R6
   \   00000158   00808005           STREQ    R8,[R0, #+0]
   \   0000015C   08808015           STRNE    R8,[R0, #+8]
   \                     ??_Erase_15:
   \   00000160   040096E5           LDR      R0,[R6, #+4]
   \   00000164   0C1088E2           ADD      R1,R8,#+12
   \   00000168   040088E5           STR      R0,[R8, #+4]
   \   0000016C   0020D1E5           LDRB     R2,[R1, #+0]
   \   00000170   0C0086E2           ADD      R0,R6,#+12
   \   00000174   0030D0E5           LDRB     R3,[R0, #+0]
   \   00000178   0030C1E5           STRB     R3,[R1, #+0]
   \   0000017C   0020C0E5           STRB     R2,[R0, #+0]
   \                     ??_Erase_10:
   \   00000180   0C00D6E5           LDRB     R0,[R6, #+12]
   \   00000184   010050E3           CMP      R0,#+1
   \   00000188   5E00001A           BNE      ??_Erase_16
   \   0000018C   0090A0E3           MOV      R9,#+0
   \   00000190   01A0A0E3           MOV      R10,#+1
   \   00000194   060000EA           B        ??_Erase_17
   \                     ??_Erase_18:
   \   00000198   080098E5           LDR      R0,[R8, #+8]
   \   0000019C   0C00D0E5           LDRB     R0,[R0, #+12]
   \   000001A0   010050E3           CMP      R0,#+1
   \   000001A4   1C00001A           BNE      ??_Erase_19
   \                     ??_Erase_20:
   \   000001A8   0C90C8E5           STRB     R9,[R8, #+12]
   \                     ??_Erase_21:
   \   000001AC   0570A0E1           MOV      R7,R5
   \   000001B0   045097E5           LDR      R5,[R7, #+4]
   \                     ??_Erase_17:
   \   000001B4   040094E5           LDR      R0,[R4, #+4]
   \   000001B8   000057E1           CMP      R7,R0
   \   000001BC   5000000A           BEQ      ??_Erase_22
   \   000001C0   0C00D7E5           LDRB     R0,[R7, #+12]
   \   000001C4   010050E3           CMP      R0,#+1
   \   000001C8   4D00001A           BNE      ??_Erase_22
   \   000001CC   008095E5           LDR      R8,[R5, #+0]
   \   000001D0   080057E1           CMP      R7,R8
   \   000001D4   2400001A           BNE      ??_Erase_23
   \   000001D8   088095E5           LDR      R8,[R5, #+8]
   \   000001DC   0C00D8E5           LDRB     R0,[R8, #+12]
   \   000001E0   000050E3           CMP      R0,#+0
   \   000001E4   0500001A           BNE      ??_Erase_24
   \   000001E8   0CA0C8E5           STRB     R10,[R8, #+12]
   \   000001EC   0C90C5E5           STRB     R9,[R5, #+12]
   \   000001F0   0510A0E1           MOV      R1,R5
   \   000001F4   0400A0E1           MOV      R0,R4
   \   000001F8   ........           _BLF     ??_Lrotate,??_Lrotate??rA
   \   000001FC   088095E5           LDR      R8,[R5, #+8]
   \                     ??_Erase_24:
   \   00000200   0D00D8E5           LDRB     R0,[R8, #+13]
   \   00000204   000050E3           CMP      R0,#+0
   \   00000208   E7FFFF1A           BNE      ??_Erase_21
   \   0000020C   000098E5           LDR      R0,[R8, #+0]
   \   00000210   0C00D0E5           LDRB     R0,[R0, #+12]
   \   00000214   010050E3           CMP      R0,#+1
   \   00000218   DEFFFF0A           BEQ      ??_Erase_18
   \                     ??_Erase_19:
   \   0000021C   080098E5           LDR      R0,[R8, #+8]
   \   00000220   0C00D0E5           LDRB     R0,[R0, #+12]
   \   00000224   010050E3           CMP      R0,#+1
   \   00000228   0600001A           BNE      ??_Erase_25
   \   0000022C   000098E5           LDR      R0,[R8, #+0]
   \   00000230   0810A0E1           MOV      R1,R8
   \   00000234   0CA0C0E5           STRB     R10,[R0, #+12]
   \   00000238   0C90C8E5           STRB     R9,[R8, #+12]
   \   0000023C   0400A0E1           MOV      R0,R4
   \   00000240   ........           _BLF     ??_Rrotate,??_Rrotate??rA
   \   00000244   088095E5           LDR      R8,[R5, #+8]
   \                     ??_Erase_25:
   \   00000248   0C00D5E5           LDRB     R0,[R5, #+12]
   \   0000024C   0510A0E1           MOV      R1,R5
   \   00000250   0C00C8E5           STRB     R0,[R8, #+12]
   \   00000254   0CA0C5E5           STRB     R10,[R5, #+12]
   \   00000258   080098E5           LDR      R0,[R8, #+8]
   \   0000025C   0CA0C0E5           STRB     R10,[R0, #+12]
   \   00000260   0400A0E1           MOV      R0,R4
   \   00000264   ........           _BLF     ??_Lrotate,??_Lrotate??rA
   \   00000268   250000EA           B        ??_Erase_22
   \                     ??_Erase_23:
   \   0000026C   0C00D8E5           LDRB     R0,[R8, #+12]
   \   00000270   000050E3           CMP      R0,#+0
   \   00000274   0500001A           BNE      ??_Erase_26
   \   00000278   0CA0C8E5           STRB     R10,[R8, #+12]
   \   0000027C   0C90C5E5           STRB     R9,[R5, #+12]
   \   00000280   0510A0E1           MOV      R1,R5
   \   00000284   0400A0E1           MOV      R0,R4
   \   00000288   ........           _BLF     ??_Rrotate,??_Rrotate??rA
   \   0000028C   008095E5           LDR      R8,[R5, #+0]
   \                     ??_Erase_26:
   \   00000290   0D00D8E5           LDRB     R0,[R8, #+13]
   \   00000294   000050E3           CMP      R0,#+0
   \   00000298   C3FFFF1A           BNE      ??_Erase_21
   \   0000029C   080098E5           LDR      R0,[R8, #+8]
   \   000002A0   0C00D0E5           LDRB     R0,[R0, #+12]
   \   000002A4   010050E3           CMP      R0,#+1
   \   000002A8   00009805           LDREQ    R0,[R8, #+0]
   \   000002AC   0C00D005           LDRBEQ   R0,[R0, #+12]
   \   000002B0   01005003           CMPEQ    R0,#+1
   \   000002B4   BBFFFF0A           BEQ      ??_Erase_20
   \   000002B8   000098E5           LDR      R0,[R8, #+0]
   \   000002BC   0C00D0E5           LDRB     R0,[R0, #+12]
   \   000002C0   010050E3           CMP      R0,#+1
   \   000002C4   0600001A           BNE      ??_Erase_27
   \   000002C8   080098E5           LDR      R0,[R8, #+8]
   \   000002CC   0810A0E1           MOV      R1,R8
   \   000002D0   0CA0C0E5           STRB     R10,[R0, #+12]
   \   000002D4   0C90C8E5           STRB     R9,[R8, #+12]
   \   000002D8   0400A0E1           MOV      R0,R4
   \   000002DC   ........           _BLF     ??_Lrotate,??_Lrotate??rA
   \   000002E0   008095E5           LDR      R8,[R5, #+0]
   \                     ??_Erase_27:
   \   000002E4   0C00D5E5           LDRB     R0,[R5, #+12]
   \   000002E8   0510A0E1           MOV      R1,R5
   \   000002EC   0C00C8E5           STRB     R0,[R8, #+12]
   \   000002F0   0CA0C5E5           STRB     R10,[R5, #+12]
   \   000002F4   000098E5           LDR      R0,[R8, #+0]
   \   000002F8   0CA0C0E5           STRB     R10,[R0, #+12]
   \   000002FC   0400A0E1           MOV      R0,R4
   \   00000300   ........           _BLF     ??_Rrotate,??_Rrotate??rA
   \                     ??_Erase_22:
   \   00000304   0CA0C7E5           STRB     R10,[R7, #+12]
   \                     ??_Erase_16:
   \   00000308   100094E5           LDR      R0,[R4, #+16]
   \   0000030C   000050E3           CMP      R0,#+0
   \   00000310   01004012           SUBNE    R0,R0,#+1
   \   00000314   10008415           STRNE    R0,[R4, #+16]
   \   00000318   0600A0E1           MOV      R0,R6
   \   0000031C   F047BDE8           POP      {R4-R10,LR}
   \   00000320   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void _Tree_algobase<allocator<void>>::_Insert(bool, _Tree_algobase<allocator<void>>::_Genptr, _Tree_algobase<allocator<void>>::_Genptr)
   \                     ??_Insert:
   \   00000000   F0402DE9           PUSH     {R4-R7,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   100094E5           LDR      R0,[R4, #+16]
   \   0000000C   0350A0E1           MOV      R5,R3
   \   00000010   010080E2           ADD      R0,R0,#+1
   \   00000014   100084E5           STR      R0,[R4, #+16]
   \   00000018   040052E1           CMP      R2,R4
   \   0000001C   0300001A           BNE      ??_Insert_3
   \   00000020   045084E5           STR      R5,[R4, #+4]
   \   00000024   005084E5           STR      R5,[R4, #+0]
   \                     ??_Insert_4:
   \   00000028   085084E5           STR      R5,[R4, #+8]
   \   0000002C   130000EA           B        ??_Insert_5
   \                     ??_Insert_3:
   \   00000030   000051E3           CMP      R1,#+0
   \   00000034   0500000A           BEQ      ??_Insert_6
   \   00000038   005082E5           STR      R5,[R2, #+0]
   \   0000003C   000094E5           LDR      R0,[R4, #+0]
   \   00000040   000052E1           CMP      R2,R0
   \   00000044   0D00001A           BNE      ??_Insert_5
   \   00000048   005084E5           STR      R5,[R4, #+0]
   \   0000004C   0B0000EA           B        ??_Insert_5
   \                     ??_Insert_6:
   \   00000050   085082E5           STR      R5,[R2, #+8]
   \   00000054   080094E5           LDR      R0,[R4, #+8]
   \   00000058   000052E1           CMP      R2,R0
   \   0000005C   0700001A           BNE      ??_Insert_5
   \   00000060   F0FFFFEA           B        ??_Insert_4
   \                     ??_Insert_7:
   \   00000064   0C70C0E5           STRB     R7,[R0, #+12]
   \   00000068   0C70C2E5           STRB     R7,[R2, #+12]
   \   0000006C   040095E5           LDR      R0,[R5, #+4]
   \   00000070   040090E5           LDR      R0,[R0, #+4]
   \   00000074   0C60C0E5           STRB     R6,[R0, #+12]
   \   00000078   040095E5           LDR      R0,[R5, #+4]
   \   0000007C   045090E5           LDR      R5,[R0, #+4]
   \                     ??_Insert_5:
   \   00000080   0170A0E3           MOV      R7,#+1
   \   00000084   040095E5           LDR      R0,[R5, #+4]
   \   00000088   0C10D0E5           LDRB     R1,[R0, #+12]
   \   0000008C   000051E3           CMP      R1,#+0
   \   00000090   2F00001A           BNE      ??_Insert_8
   \   00000094   041090E5           LDR      R1,[R0, #+4]
   \   00000098   0060A0E3           MOV      R6,#+0
   \   0000009C   001091E5           LDR      R1,[R1, #+0]
   \   000000A0   010050E1           CMP      R0,R1
   \   000000A4   041090E5           LDR      R1,[R0, #+4]
   \   000000A8   1400001A           BNE      ??_Insert_9
   \   000000AC   082091E5           LDR      R2,[R1, #+8]
   \   000000B0   0C10D2E5           LDRB     R1,[R2, #+12]
   \   000000B4   000051E3           CMP      R1,#+0
   \   000000B8   E9FFFF0A           BEQ      ??_Insert_7
   \   000000BC   081090E5           LDR      R1,[R0, #+8]
   \   000000C0   010055E1           CMP      R5,R1
   \   000000C4   0300001A           BNE      ??_Insert_10
   \   000000C8   0050A0E1           MOV      R5,R0
   \   000000CC   0510A0E1           MOV      R1,R5
   \   000000D0   0400A0E1           MOV      R0,R4
   \   000000D4   ........           _BLF     ??_Lrotate,??_Lrotate??rA
   \                     ??_Insert_10:
   \   000000D8   040095E5           LDR      R0,[R5, #+4]
   \   000000DC   0C70C0E5           STRB     R7,[R0, #+12]
   \   000000E0   040095E5           LDR      R0,[R5, #+4]
   \   000000E4   040090E5           LDR      R0,[R0, #+4]
   \   000000E8   0C60C0E5           STRB     R6,[R0, #+12]
   \   000000EC   040095E5           LDR      R0,[R5, #+4]
   \   000000F0   041090E5           LDR      R1,[R0, #+4]
   \   000000F4   0400A0E1           MOV      R0,R4
   \   000000F8   ........           _BLF     ??_Rrotate,??_Rrotate??rA
   \   000000FC   DFFFFFEA           B        ??_Insert_5
   \                     ??_Insert_9:
   \   00000100   002091E5           LDR      R2,[R1, #+0]
   \   00000104   0C10D2E5           LDRB     R1,[R2, #+12]
   \   00000108   000051E3           CMP      R1,#+0
   \   0000010C   D4FFFF0A           BEQ      ??_Insert_7
   \   00000110   001090E5           LDR      R1,[R0, #+0]
   \   00000114   010055E1           CMP      R5,R1
   \   00000118   0300001A           BNE      ??_Insert_11
   \   0000011C   0050A0E1           MOV      R5,R0
   \   00000120   0510A0E1           MOV      R1,R5
   \   00000124   0400A0E1           MOV      R0,R4
   \   00000128   ........           _BLF     ??_Rrotate,??_Rrotate??rA
   \                     ??_Insert_11:
   \   0000012C   040095E5           LDR      R0,[R5, #+4]
   \   00000130   0C70C0E5           STRB     R7,[R0, #+12]
   \   00000134   040095E5           LDR      R0,[R5, #+4]
   \   00000138   040090E5           LDR      R0,[R0, #+4]
   \   0000013C   0C60C0E5           STRB     R6,[R0, #+12]
   \   00000140   040095E5           LDR      R0,[R5, #+4]
   \   00000144   041090E5           LDR      R1,[R0, #+4]
   \   00000148   0400A0E1           MOV      R0,R4
   \   0000014C   ........           _BLF     ??_Lrotate,??_Lrotate??rA
   \   00000150   CAFFFFEA           B        ??_Insert_5
   \                     ??_Insert_8:
   \   00000154   040094E5           LDR      R0,[R4, #+4]
   \   00000158   0C70C0E5           STRB     R7,[R0, #+12]
   \   0000015C   F040BDE8           POP      {R4-R7,LR}
   \   00000160   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs _Tree<_Tset_traits<PRogramObject *, less<PRogramObject *>, allocator<PRogramObject *>, false>>::_Pairib _Tree<_Tset_traits<PRogramObject *, less<PRogramObject *>, allocator<PRogramObject *>, false>>::insert(PRogramObject *)
   \                     ??insert:
   \   00000000   F34C2DE9           PUSH     {R0,R1,R4-R7,R10,R11,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
   \   0000000C   040095E5           LDR      R0,[R5, #+4]
   \   00000010   0260A0E1           MOV      R6,R2
   \   00000014   05B0A0E1           MOV      R11,R5
   \   00000018   0170A0E3           MOV      R7,#+1
   \                     ??insert_2:
   \   0000001C   0D10D0E5           LDRB     R1,[R0, #+13]
   \   00000020   000051E3           CMP      R1,#+0
   \   00000024   0700001A           BNE      ??insert_3
   \   00000028   101090E5           LDR      R1,[R0, #+16]
   \   0000002C   00B0A0E1           MOV      R11,R0
   \   00000030   010056E1           CMP      R6,R1
   \   00000034   00009035           LDRCC    R0,[R0, #+0]
   \   00000038   0170A033           MOVCC    R7,#+1
   \   0000003C   08009025           LDRCS    R0,[R0, #+8]
   \   00000040   0070A023           MOVCS    R7,#+0
   \   00000044   F4FFFFEA           B        ??insert_2
   \                     ??insert_3:
   \   00000048   0B00A0E1           MOV      R0,R11
   \   0000004C   01A0A0E3           MOV      R10,#+1
   \   00000050   000057E3           CMP      R7,#+0
   \   00000054   0B00000A           BEQ      ??insert_4
   \   00000058   001095E5           LDR      R1,[R5, #+0]
   \   0000005C   010050E1           CMP      R0,R1
   \   00000060   0700001A           BNE      ??insert_5
   \   00000064   0630A0E1           MOV      R3,R6
   \   00000068   0B20A0E1           MOV      R2,R11
   \   0000006C   0110A0E3           MOV      R1,#+1
   \                     ??insert_6:
   \   00000070   0500A0E1           MOV      R0,R5
   \   00000074   ........           _BLF     ??_Insert_1,??_Insert??rA
   \   00000078   00008DE5           STR      R0,[SP, #+0]
   \   0000007C   04A0CDE5           STRB     R10,[SP, #+4]
   \   00000080   0A0000EA           B        ??insert_7
   \                     ??insert_5:
   \   00000084   ........           _BLF     ??_DecP,??_DecP??rA
   \                     ??insert_4:
   \   00000088   101090E5           LDR      R1,[R0, #+16]
   \   0000008C   060051E1           CMP      R1,R6
   \   00000090   0300002A           BCS      ??insert_8
   \   00000094   0630A0E1           MOV      R3,R6
   \   00000098   0B20A0E1           MOV      R2,R11
   \   0000009C   0710A0E1           MOV      R1,R7
   \   000000A0   F2FFFFEA           B        ??insert_6
   \                     ??insert_8:
   \   000000A4   00008DE5           STR      R0,[SP, #+0]
   \   000000A8   0010A0E3           MOV      R1,#+0
   \   000000AC   0410CDE5           STRB     R1,[SP, #+4]
   \                     ??insert_7:
   \   000000B0   0D00A0E1           MOV      R0,SP
   \   000000B4   030090E8           LDM      R0,{R0,R1}
   \   000000B8   030084E8           STM      R4,{R0,R1}
   \   000000BC   0400A0E1           MOV      R0,R4
   \   000000C0   F64CBDE8           POP      {R1,R2,R4-R7,R10,R11,LR}
   \   000000C4   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::_Pairib _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::insert(PRogramObjectBase *)
   \                     ??insert_1:
   \   00000000   F34C2DE9           PUSH     {R0,R1,R4-R7,R10,R11,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
   \   0000000C   040095E5           LDR      R0,[R5, #+4]
   \   00000010   0260A0E1           MOV      R6,R2
   \   00000014   05B0A0E1           MOV      R11,R5
   \   00000018   0170A0E3           MOV      R7,#+1
   \                     ??insert_9:
   \   0000001C   0D10D0E5           LDRB     R1,[R0, #+13]
   \   00000020   000051E3           CMP      R1,#+0
   \   00000024   0700001A           BNE      ??insert_10
   \   00000028   101090E5           LDR      R1,[R0, #+16]
   \   0000002C   00B0A0E1           MOV      R11,R0
   \   00000030   010056E1           CMP      R6,R1
   \   00000034   00009035           LDRCC    R0,[R0, #+0]
   \   00000038   0170A033           MOVCC    R7,#+1
   \   0000003C   08009025           LDRCS    R0,[R0, #+8]
   \   00000040   0070A023           MOVCS    R7,#+0
   \   00000044   F4FFFFEA           B        ??insert_9
   \                     ??insert_10:
   \   00000048   0B00A0E1           MOV      R0,R11
   \   0000004C   01A0A0E3           MOV      R10,#+1
   \   00000050   000057E3           CMP      R7,#+0
   \   00000054   0B00000A           BEQ      ??insert_11
   \   00000058   001095E5           LDR      R1,[R5, #+0]
   \   0000005C   010050E1           CMP      R0,R1
   \   00000060   0700001A           BNE      ??insert_12
   \   00000064   0630A0E1           MOV      R3,R6
   \   00000068   0B20A0E1           MOV      R2,R11
   \   0000006C   0110A0E3           MOV      R1,#+1
   \                     ??insert_13:
   \   00000070   0500A0E1           MOV      R0,R5
   \   00000074   ........           _BLF     ??_Insert_2,??_Insert??rA_1
   \   00000078   00008DE5           STR      R0,[SP, #+0]
   \   0000007C   04A0CDE5           STRB     R10,[SP, #+4]
   \   00000080   0A0000EA           B        ??insert_14
   \                     ??insert_12:
   \   00000084   ........           _BLF     ??_DecP,??_DecP??rA
   \                     ??insert_11:
   \   00000088   101090E5           LDR      R1,[R0, #+16]
   \   0000008C   060051E1           CMP      R1,R6
   \   00000090   0300002A           BCS      ??insert_15
   \   00000094   0630A0E1           MOV      R3,R6
   \   00000098   0B20A0E1           MOV      R2,R11
   \   0000009C   0710A0E1           MOV      R1,R7
   \   000000A0   F2FFFFEA           B        ??insert_13
   \                     ??insert_15:
   \   000000A4   00008DE5           STR      R0,[SP, #+0]
   \   000000A8   0010A0E3           MOV      R1,#+0
   \   000000AC   0410CDE5           STRB     R1,[SP, #+4]
   \                     ??insert_14:
   \   000000B0   0D00A0E1           MOV      R0,SP
   \   000000B4   030090E8           LDM      R0,{R0,R1}
   \   000000B8   030084E8           STM      R4,{R0,R1}
   \   000000BC   0400A0E1           MOV      R0,R4
   \   000000C0   F64CBDE8           POP      {R1,R2,R4-R7,R10,R11,LR}
   \   000000C4   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::iterator _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::erase(_Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::iterator, _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::iterator)
   \                     ??erase:
   \   00000000   F0402DE9           PUSH     {R4-R7,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   000094E5           LDR      R0,[R4, #+0]
   \   0000000C   0150A0E1           MOV      R5,R1
   \   00000010   0260A0E1           MOV      R6,R2
   \   00000014   000055E1           CMP      R5,R0
   \   00000018   04005601           CMPEQ    R6,R4
   \   0000001C   0D00001A           BNE      ??erase_2
   \   00000020   0400A0E1           MOV      R0,R4
   \   00000024   ........           _BLF     ??clear,??clear??rA
   \   00000028   000094E5           LDR      R0,[R4, #+0]
   \   0000002C   0C0000EA           B        ??erase_3
   \                     ??erase_4:
   \   00000030   0570A0E1           MOV      R7,R5
   \   00000034   0500A0E1           MOV      R0,R5
   \   00000038   ........           _BLF     ??_IncP,??_IncP??rA
   \   0000003C   0050A0E1           MOV      R5,R0
   \   00000040   0700A0E1           MOV      R0,R7
   \   00000044   ........           _BLF     ??_IncP,??_IncP??rA
   \   00000048   0710A0E1           MOV      R1,R7
   \   0000004C   0400A0E1           MOV      R0,R4
   \   00000050   ........           _BLF     ??_Erase,??_Erase??rA
   \   00000054   ........           _BLF     `??operator delete`,`??operator delete??rA`
   \                     ??erase_2:
   \   00000058   060055E1           CMP      R5,R6
   \   0000005C   F3FFFF1A           BNE      ??erase_4
   \   00000060   0500A0E1           MOV      R0,R5
   \                     ??erase_3:
   \   00000064   F040BDE8           POP      {R4-R7,LR}
   \   00000068   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs unsigned int _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::erase(PRogramObjectBase *)
   \                     ??erase_1:
   \   00000000   73402DE9           PUSH     {R0,R1,R4-R6,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0120A0E1           MOV      R2,R1
   \   0000000C   0410A0E1           MOV      R1,R4
   \   00000010   0D00A0E1           MOV      R0,SP
   \   00000014   ........           _BLF     ??equal_range,??equal_range??rA
   \   00000018   04509DE5           LDR      R5,[SP, #+4]
   \   0000001C   00009DE5           LDR      R0,[SP, #+0]
   \   00000020   0060A0E3           MOV      R6,#+0
   \   00000024   010000EA           B        ??erase_5
   \                     ??erase_6:
   \   00000028   016086E2           ADD      R6,R6,#+1
   \   0000002C   ........           _BLF     ??_IncP,??_IncP??rA
   \                     ??erase_5:
   \   00000030   050050E1           CMP      R0,R5
   \   00000034   FBFFFF1A           BNE      ??erase_6
   \   00000038   04209DE5           LDR      R2,[SP, #+4]
   \   0000003C   00109DE5           LDR      R1,[SP, #+0]
   \   00000040   0400A0E1           MOV      R0,R4
   \   00000044   ........           _BLF     ??erase,??erase??rA
   \   00000048   0600A0E1           MOV      R0,R6
   \   0000004C   7640BDE8           POP      {R1,R2,R4-R6,LR}
   \   00000050   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::clear()
   \                     ??clear:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   041094E5           LDR      R1,[R4, #+4]
   \   0000000C   ........           _BLF     ??_Erase_1,??_Erase??rA_1
   \   00000010   0400A0E1           MOV      R0,R4
   \   00000014   ........           _BLF     ??_Clear,??_Clear??rA
   \   00000018   1040BDE8           POP      {R4,LR}
   \   0000001C   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::_Pairii _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::equal_range(PRogramObjectBase *)
   \                     ??equal_range:
   \   00000000   F3402DE9           PUSH     {R0,R1,R4-R7,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
   \   0000000C   0260A0E1           MOV      R6,R2
   \   00000010   0610A0E1           MOV      R1,R6
   \   00000014   0500A0E1           MOV      R0,R5
   \   00000018   ........           _BLF     ??_Ubound,??_Ubound??rA
   \   0000001C   0070A0E1           MOV      R7,R0
   \   00000020   0610A0E1           MOV      R1,R6
   \   00000024   0500A0E1           MOV      R0,R5
   \   00000028   ........           _BLF     ??_Lbound,??_Lbound??rA
   \   0000002C   00008DE5           STR      R0,[SP, #+0]
   \   00000030   04708DE5           STR      R7,[SP, #+4]
   \   00000034   0D00A0E1           MOV      R0,SP
   \   00000038   030090E8           LDM      R0,{R0,R1}
   \   0000003C   030084E8           STM      R4,{R0,R1}
   \   00000040   0400A0E1           MOV      R0,R4
   \   00000044   F640BDE8           POP      {R1,R2,R4-R7,LR}
   \   00000048   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::_Erase(_Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::_Nodeptr)
   \                     ??_Erase_1:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
   \   0000000C   0560A0E1           MOV      R6,R5
   \   00000010   060000EA           B        ??_Erase_28
   \                     ??_Erase_29:
   \   00000014   081096E5           LDR      R1,[R6, #+8]
   \   00000018   0400A0E1           MOV      R0,R4
   \   0000001C   F7FFFFEB           BL       ??_Erase_1
   \   00000020   006096E5           LDR      R6,[R6, #+0]
   \   00000024   0500A0E1           MOV      R0,R5
   \   00000028   ........           _BLF     `??operator delete`,`??operator delete??rA`
   \   0000002C   0650A0E1           MOV      R5,R6
   \                     ??_Erase_28:
   \   00000030   0D00D6E5           LDRB     R0,[R6, #+13]
   \   00000034   000050E3           CMP      R0,#+0
   \   00000038   F5FFFF0A           BEQ      ??_Erase_29
   \   0000003C   7040BDE8           POP      {R4-R6,LR}
   \   00000040   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs _Tree<_Tset_traits<PRogramObject *, less<PRogramObject *>, allocator<PRogramObject *>, false>>::iterator _Tree<_Tset_traits<PRogramObject *, less<PRogramObject *>, allocator<PRogramObject *>, false>>::_Insert(bool, _Tree<_Tset_traits<PRogramObject *, less<PRogramObject *>, allocator<PRogramObject *>, false>>::_Nodeptr, PRogramObject *)
   \                     ??_Insert_1:
   \   00000000   F0412DE9           PUSH     {R4-R8,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
   \   0000000C   0260A0E1           MOV      R6,R2
   \   00000010   0370A0E1           MOV      R7,R3
   \   00000014   1400A0E3           MOV      R0,#+20
   \   00000018   ........           _BLF     `??operator new`,`??operator new??rA`
   \   0000001C   0080B0E1           MOVS     R8,R0
   \   00000020   0600000A           BEQ      ??_Insert_12
   \   00000024   004088E5           STR      R4,[R8, #+0]
   \   00000028   046088E5           STR      R6,[R8, #+4]
   \   0000002C   084088E5           STR      R4,[R8, #+8]
   \   00000030   0000A0E3           MOV      R0,#+0
   \   00000034   0C00C8E5           STRB     R0,[R8, #+12]
   \   00000038   0D00C8E5           STRB     R0,[R8, #+13]
   \   0000003C   107088E5           STR      R7,[R8, #+16]
   \                     ??_Insert_12:
   \   00000040   0830A0E1           MOV      R3,R8
   \   00000044   0620A0E1           MOV      R2,R6
   \   00000048   0510A0E1           MOV      R1,R5
   \   0000004C   0400A0E1           MOV      R0,R4
   \   00000050   ........           _BLF     ??_Insert,??_Insert??rA_2
   \   00000054   0800A0E1           MOV      R0,R8
   \   00000058   F041BDE8           POP      {R4-R8,LR}
   \   0000005C   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::iterator _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::_Insert(bool, _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::_Nodeptr, PRogramObjectBase *)
   \                     ??_Insert_2:
   \   00000000   F0412DE9           PUSH     {R4-R8,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
   \   0000000C   0260A0E1           MOV      R6,R2
   \   00000010   0370A0E1           MOV      R7,R3
   \   00000014   1400A0E3           MOV      R0,#+20
   \   00000018   ........           _BLF     `??operator new`,`??operator new??rA`
   \   0000001C   0080B0E1           MOVS     R8,R0
   \   00000020   0600000A           BEQ      ??_Insert_13
   \   00000024   004088E5           STR      R4,[R8, #+0]
   \   00000028   046088E5           STR      R6,[R8, #+4]
   \   0000002C   084088E5           STR      R4,[R8, #+8]
   \   00000030   0000A0E3           MOV      R0,#+0
   \   00000034   0C00C8E5           STRB     R0,[R8, #+12]
   \   00000038   0D00C8E5           STRB     R0,[R8, #+13]
   \   0000003C   107088E5           STR      R7,[R8, #+16]
   \                     ??_Insert_13:
   \   00000040   0830A0E1           MOV      R3,R8
   \   00000044   0620A0E1           MOV      R2,R6
   \   00000048   0510A0E1           MOV      R1,R5
   \   0000004C   0400A0E1           MOV      R0,R4
   \   00000050   ........           _BLF     ??_Insert,??_Insert??rA_2
   \   00000054   0800A0E1           MOV      R0,R8
   \   00000058   F041BDE8           POP      {R4-R8,LR}
   \   0000005C   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::_Nodeptr _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::_Lbound(PRogramObjectBase *) const
   \                     ??_Lbound:
   \   00000000   042090E5           LDR      R2,[R0, #+4]
   \                     ??_Lbound_1:
   \   00000004   0D30D2E5           LDRB     R3,[R2, #+13]
   \   00000008   000053E3           CMP      R3,#+0
   \   0000000C   1EFF2F11           BXNE     LR
   \   00000010   103092E5           LDR      R3,[R2, #+16]
   \   00000014   010053E1           CMP      R3,R1
   \   00000018   08209235           LDRCC    R2,[R2, #+8]
   \   0000001C   0200A021           MOVCS    R0,R2
   \   00000020   00209225           LDRCS    R2,[R2, #+0]
   \   00000024   F6FFFFEA           B        ??_Lbound_1

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::_Nodeptr _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::_Ubound(PRogramObjectBase *) const
   \                     ??_Ubound:
   \   00000000   042090E5           LDR      R2,[R0, #+4]
   \                     ??_Ubound_1:
   \   00000004   0D30D2E5           LDRB     R3,[R2, #+13]
   \   00000008   000053E3           CMP      R3,#+0
   \   0000000C   1EFF2F11           BXNE     LR
   \   00000010   103092E5           LDR      R3,[R2, #+16]
   \   00000014   030051E1           CMP      R1,R3
   \   00000018   08209225           LDRCS    R2,[R2, #+8]
   \   0000001C   0200A031           MOVCC    R0,R2
   \   00000020   00209235           LDRCC    R2,[R2, #+0]
   \   00000024   F6FFFFEA           B        ??_Ubound_1

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs set<PRogramObjectBase *>::~set()
   \                     `?~set`:
   \   00000000   00402DE9           PUSH     {LR}
   \   00000004   ........           _BLF     ??clear,??clear??rA
   \   00000008   0040BDE8           POP      {LR}
   \   0000000C   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void operator+(string const &, string const &)
   \                     `??operator+`:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   1CD04DE2           SUB      SP,SP,#+28
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   0250A0E1           MOV      R5,R2
   \   00000010   0D00A0E1           MOV      R0,SP
   \   00000014   ........           _BLF     ??string,??string??rA
   \   00000018   34109FE5           LDR      R1,`??operator+_2`  ;; ??npos
   \   0000001C   0020A0E3           MOV      R2,#+0
   \   00000020   003091E5           LDR      R3,[R1, #+0]
   \   00000024   0510A0E1           MOV      R1,R5
   \   00000028   ........           _BLF     ??append,??append??rA
   \   0000002C   0010A0E1           MOV      R1,R0
   \   00000030   0400A0E1           MOV      R0,R4
   \   00000034   ........           _BLF     ??string,??string??rA
   \   00000038   0020A0E3           MOV      R2,#+0
   \   0000003C   0110A0E3           MOV      R1,#+1
   \   00000040   0D00A0E1           MOV      R0,SP
   \   00000044   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000048   1CD08DE2           ADD      SP,SP,#+28
   \   0000004C   3040BDE8           POP      {R4,R5,LR}
   \   00000050   1EFF2FE1           BX       LR               ;; return
   \                     `??operator+_2`:
   \   00000054   ........           DC32     ??npos

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void operator+(string const &, char const *)
   \                     `??operator+_1`:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   1CD04DE2           SUB      SP,SP,#+28
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   0250A0E1           MOV      R5,R2
   \   00000010   0D00A0E1           MOV      R0,SP
   \   00000014   ........           _BLF     ??string,??string??rA
   \   00000018   0060A0E1           MOV      R6,R0
   \   0000001C   0500A0E1           MOV      R0,R5
   \   00000020   ........           _BLF     strlen,??strlen??rA
   \   00000024   0020A0E1           MOV      R2,R0
   \   00000028   0510A0E1           MOV      R1,R5
   \   0000002C   0600A0E1           MOV      R0,R6
   \   00000030   ........           _BLF     ??append_1,??append??rA_1
   \   00000034   0010A0E1           MOV      R1,R0
   \   00000038   0400A0E1           MOV      R0,R4
   \   0000003C   ........           _BLF     ??string,??string??rA
   \   00000040   0020A0E3           MOV      R2,#+0
   \   00000044   0110A0E3           MOV      R1,#+1
   \   00000048   0D00A0E1           MOV      R0,SP
   \   0000004C   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000050   1CD08DE2           ADD      SP,SP,#+28
   \   00000054   7040BDE8           POP      {R4-R6,LR}
   \   00000058   1EFF2FE1           BX       LR               ;; return
      2          #pragma hdrstop
      3          #ifdef BORLAND
      4          	#pragma package(smart_init)
      5          #endif
      6          
      7          #include "TSNVersion.h"
      8          //---------------------------------------------------------------------------
      9          

   \                                 In segment DATA_I, align 4, align-sorted
     10          ValueList IOUnitZBAna::IOUnitZBAnaValueList[] =  {
   \                     ??IOUnitZBAnaValueList:
   \   00000000                      DS8 156
   \   0000009C                      REQUIRE `?<Initializer for IOUnitZBAnaValueList>`
     11          	{L_WORD304          ,L_WORD237,SVT_BLANK},                              //  {"Unused"       ,"",SVT_BLANK},
     12          	{L_WORD379          ,L_WORD237,SVT_IO_COM_CHANNEL},                     //  {"Com Channel"  ,"",SVT_IO_COM_CHANNEL},
     13          	{L_WORD24           ,L_WORD237,SVT_IO_PROG_VERSION},                    //  {"ProgVersion"  ,"",SVT_IO_PROG_VERSION},
     14          	{L_WORD380          ,L_WORD237,SVT_IO_COM_VERSION},                     //  {"Com Version"  ,"",SVT_IO_COM_VERSION},
     15          	{L_WORD381          ,L_WORD237,SVT_IO_STORE_VERSION},                   //  {"Store Ver."   ,"",SVT_IO_STORE_VERSION},
     16          	{L_WORD382          ,L_WORD237,SVT_IO_RXBUF_SIZE},                      //  {"Rx Buf Size"  ,"",SVT_IO_RXBUF_SIZE},
     17          	{L_WORD383          ,L_WORD237,SVT_IO_TXBUF_SIZE},                      //  {"Tx Buf Size"  ,"",SVT_IO_TXBUF_SIZE},
     18          	{L_WORD384          ,L_WORD237,SVT_IO_RESET_STATUS},                    //  {"Reset Status" ,"",SVT_IO_RESET_STATUS},
     19          	{L_WORD385          ,L_WORD237,SVT_IO_TOTAL_RESTARTS},                  //  {"Total Restart","",SVT_IO_TOTAL_RESTARTS},
     20          	{L_WORD386          ,L_WORD237,SVT_IO_FAIL_CNT_CHK},                    //  {"Fail count"   ,"",SVT_IO_FAIL_CNT_CHK},
     21          	{L_WORD387          ,L_WORD237,SVT_IO_FAIL_CNT_TOT},                    //  {"Tot. fail cnt","",SVT_IO_FAIL_CNT_TOT},
     22          	{L_WORD388          ,L_WORD237,SVT_IO_P_TYPE_RUNNING},                  //  {"Program"      ,"",SVT_IO_P_TYPE_RUNNING},
     23          	{L_WORD389          ,L_WORD237,SVT_IO_CARD_VOLTAGE},                    //  {"Pwr 24V"      ,"",SVT_IO_CARD_VOLTAGE},
     24          
     25          };
     26          

   \                                 In segment DATA_Z, align 4, align-sorted
     27          set<PRogramObjectBase*>IOUnitZBAna::ObjectSet;
   \                     ??ObjectSet:
   \   00000000                      DS8 24

   \                                 In segment CODE, align 4, keep-with-next
     28          IOUnitZBAna::IOUnitZBAna(PROIOComponent *IOCompPtr, PRogramObject *ElementPtr):IOUnit(IOCompPtr->TCUPortNo)
   \                     ??IOUnitZBAna:
   \   00000000   F0432DE9           PUSH     {R4-R9,LR}
     29          {
   \   00000004   ........           LDR      R7,??DataTable4  ;; ??__vtbl
     30              ObjectSet.insert(this);
   \   00000008   ........           LDR      R8,??DataTable5  ;; ??ObjectSet
   \   0000000C   78D04DE2           SUB      SP,SP,#+120
   \   00000010   0150A0E1           MOV      R5,R1
   \   00000014   F81095E5           LDR      R1,[R5, #+248]
   \   00000018   0040A0E1           MOV      R4,R0
   \   0000001C   0260A0E1           MOV      R6,R2
   \   00000020   ........           _BLF     ??IOUnit,??IOUnit??rA
   \   00000024   A47084E5           STR      R7,[R4, #+164]
   \   00000028   0420A0E1           MOV      R2,R4
   \   0000002C   0810A0E1           MOV      R1,R8
   \   00000030   0D00A0E1           MOV      R0,SP
   \   00000034   ........           _BLF     ??insert_1,??insert??rA
     31              Type        = C_IO_AN_ZBANA;
   \   00000038   1700A0E3           MOV      R0,#+23
   \   0000003C   800E80E3           ORR      R0,R0,#0x800
   \   00000040   A00084E5           STR      R0,[R4, #+160]
     32              IDNumber    = (C_IO_AN_ZBANA << 16 )+ObjectSet.size();
   \   00000044   100098E5           LDR      R0,[R8, #+16]
   \   00000048   8016A0E3           MOV      R1,#+134217728
   \   0000004C   5C1981E3           ORR      R1,R1,#0x170000
   \   00000050   000081E0           ADD      R0,R1,R0
   \   00000054   9C0084E5           STR      R0,[R4, #+156]
     33              ReceiveCnt  =0;
   \   00000058   0080A0E3           MOV      R8,#+0
   \   0000005C   F08184E5           STR      R8,[R4, #+496]
     34              for ( int i=0; i < MAX_AN_ZBANA_CHANNELS; i++ ) {
   \   00000060   0000A0E3           MOV      R0,#+0
   \   00000064   0020A0E1           MOV      R2,R0
     35                  Filters[i]     = 0;
   \                     ??IOUnitZBAna_1:
   \   00000068   041080E0           ADD      R1,R0,R4
   \   0000006C   A881C1E5           STRB     R8,[R1, #+424]
     36                  Status[i]      = 0;
   \   00000070   B481C1E5           STRB     R8,[R1, #+436]
     37                  IOComponent[i] = NULL;
   \   00000074   001184E0           ADD      R1,R4,R0, LSL #+2
   \   00000078   F48181E5           STR      R8,[R1, #+500]
     38                  mAValues[i]    = 0.0;
   \   0000007C   C02181E5           STR      R2,[R1, #+448]
     39              }
   \   00000080   010080E2           ADD      R0,R0,#+1
   \   00000084   0C0050E3           CMP      R0,#+12
   \   00000088   F6FFFFBA           BLT      ??IOUnitZBAna_1
     40              TCUAddress  = IOCompPtr->TCUAddress;
   \   0000008C   F40095E5           LDR      R0,[R5, #+244]
   \   00000090   940184E5           STR      R0,[R4, #+404]
     41              TCUPortNo   = IOCompPtr->TCUPortNo;
   \   00000094   F80095E5           LDR      R0,[R5, #+248]
   \   00000098   980184E5           STR      R0,[R4, #+408]
     42              IOType      = IOCompPtr->IOType;
   \   0000009C   FC0095E5           LDR      R0,[R5, #+252]
   \   000000A0   9C0184E5           STR      R0,[R4, #+412]
     43              IOAddress   = IOCompPtr->IOAddress;
   \   000000A4   001195E5           LDR      R1,[R5, #+256]
   \   000000A8   680FA0E3           MOV      R0,#+416
   \   000000AC   041080E7           STR      R1,[R0, +R4]
     44              Name = AnsiString("ZBANA:")+AnsiString(IOAddress);
   \   000000B0   5C008DE2           ADD      R0,SP,#+92
   \   000000B4   ........           _BLF     ??AnsiString,??AnsiString??rA
   \   000000B8   0090A0E1           MOV      R9,R0
   \   000000BC   941087E2           ADD      R1,R7,#+148
   \   000000C0   40008DE2           ADD      R0,SP,#+64
   \   000000C4   ........           _BLF     ??AnsiString_1,??AnsiString??rA_1
   \   000000C8   0920A0E1           MOV      R2,R9
   \   000000CC   0010A0E1           MOV      R1,R0
   \   000000D0   08008DE2           ADD      R0,SP,#+8
   \   000000D4   ........           _BLF     `??operator+`,`??operator+??rA`
   \   000000D8   08108DE2           ADD      R1,SP,#+8
   \   000000DC   24008DE2           ADD      R0,SP,#+36
   \   000000E0   ........           _BLF     ??AnsiString_2,??AnsiString??rA_2
   \   000000E4   0010A0E1           MOV      R1,R0
   \   000000E8   ........           LDR      R0,??DataTable9  ;; ??npos
   \   000000EC   0020A0E3           MOV      R2,#+0
   \   000000F0   003090E5           LDR      R3,[R0, #+0]
   \   000000F4   440084E2           ADD      R0,R4,#+68
   \   000000F8   ........           _BLF     ??assign,??assign??rA
   \   000000FC   0820A0E1           MOV      R2,R8
   \   00000100   0110A0E3           MOV      R1,#+1
   \   00000104   24008DE2           ADD      R0,SP,#+36
   \   00000108   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   0000010C   0820A0E1           MOV      R2,R8
   \   00000110   0110A0E3           MOV      R1,#+1
   \   00000114   08008DE2           ADD      R0,SP,#+8
   \   00000118   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   0000011C   0820A0E1           MOV      R2,R8
   \   00000120   0110A0E3           MOV      R1,#+1
   \   00000124   5C008DE2           ADD      R0,SP,#+92
   \   00000128   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   0000012C   0820A0E1           MOV      R2,R8
   \   00000130   0110A0E3           MOV      R1,#+1
   \   00000134   40008DE2           ADD      R0,SP,#+64
   \   00000138   ........           _BLF     ??_Tidy,??_Tidy??rA
     45              Add(IOCompPtr,ElementPtr);
   \   0000013C   A43094E5           LDR      R3,[R4, #+164]
   \   00000140   0620A0E1           MOV      R2,R6
   \   00000144   803093E5           LDR      R3,[R3, #+128]
   \   00000148   0510A0E1           MOV      R1,R5
   \   0000014C   0400A0E1           MOV      R0,R4
   \   00000150   0FE0A0E1           MOV      LR,PC
   \   00000154   13FF2FE1           BX       R3
     46              GlobalPRO_IOList.insert(this);
   \   00000158   1C109FE5           LDR      R1,??IOUnitZBAna_2  ;; ??GlobalPRO_IOList
   \   0000015C   0420A0E1           MOV      R2,R4
   \   00000160   0D00A0E1           MOV      R0,SP
   \   00000164   ........           _BLF     ??insert,??insert??rA_1
     47              ReqStatusTime = 0;
   \   00000168   788184E5           STR      R8,[R4, #+376]
     48          }
   \   0000016C   0400A0E1           MOV      R0,R4
   \   00000170   78D08DE2           ADD      SP,SP,#+120
   \   00000174   F043BDE8           POP      {R4-R9,LR}
   \   00000178   1EFF2FE1           BX       LR               ;; return
   \                     ??IOUnitZBAna_2:
   \   0000017C   ........           DC32     ??GlobalPRO_IOList
     49          

   \                                 In segment CODE, align 4, keep-with-next
     50          IOUnitZBAna::~IOUnitZBAna(void)
     51          {
   \                     `?~IOUnitZBAna`:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
   \   0000000C   000054E3           CMP      R4,#+0
   \   00000010   1400000A           BEQ      `?~IOUnitZBAna_1`
   \   00000014   ........           LDR      R0,??DataTable4  ;; ??__vtbl
   \   00000018   A40084E5           STR      R0,[R4, #+164]
     52              for ( int i=0; i < MAX_AN_ZBANA_CHANNELS; i++ ) {
   \   0000001C   0000A0E3           MOV      R0,#+0
     53                  if ( IOComponent[i] ) {
   \                     `?~IOUnitZBAna_2`:
   \   00000020   001184E0           ADD      R1,R4,R0, LSL #+2
   \   00000024   F42191E5           LDR      R2,[R1, #+500]
     54                      //done elsewhere     delete IOComponent[i];
     55                      IOComponent[i] = NULL;
     56                  }
     57              }
   \   00000028   010080E2           ADD      R0,R0,#+1
   \   0000002C   000052E3           CMP      R2,#+0
   \   00000030   0020A013           MOVNE    R2,#+0
   \   00000034   F4218115           STRNE    R2,[R1, #+500]
   \   00000038   0C0050E3           CMP      R0,#+12
   \   0000003C   F7FFFFBA           BLT      `?~IOUnitZBAna_2`
     58              ObjectSet.erase(this);
   \   00000040   ........           LDR      R0,??DataTable5  ;; ??ObjectSet
   \   00000044   0410A0E1           MOV      R1,R4
   \   00000048   ........           _BLF     ??erase_1,??erase??rA_1
     59          }
   \   0000004C   0010A0E3           MOV      R1,#+0
   \   00000050   0400A0E1           MOV      R0,R4
   \   00000054   ........           _BLF     `?~IOUnit`,`?~IOUnit??rA`
   \   00000058   010015E3           TST      R5,#0x1
   \   0000005C   0100000A           BEQ      `?~IOUnitZBAna_1`
   \   00000060   0400A0E1           MOV      R0,R4
   \   00000064   ........           _BLF     `??operator delete`,`??operator delete??rA`
   \                     `?~IOUnitZBAna_1`:
   \   00000068                      REQUIRE ?Subroutine22
   \   00000068                      ;; // Fall through to label ?Subroutine22

   \                                 In segment CODE, align 4, keep-with-next
   \                     ?Subroutine22:
   \   00000000   3040BDE8           POP      {R4,R5,LR}
   \   00000004   1EFF2FE1           BX       LR               ;; return
     60          //---------------------------------------------------------------------------
     61          

   \                                 In segment CODE, align 4, keep-with-next
     62          bool IOUnitZBAna::Add(PROIOComponent *IOCompPtr, PRogramObject *ElementPtr)
     63          {
   \                     ??Add:
   \   00000000   F0472DE9           PUSH     {R4-R10,LR}
   \   00000004   4ADE4DE2           SUB      SP,SP,#+1184
     64          
     65              int tmpIOChannel=IOCompPtr->IOChannel;
   \   00000008   A8669FE5           LDR      R6,??Add_1       ;; `?<Constant "TCU ">`
   \   0000000C   0190A0E1           MOV      R9,R1
   \   00000010   04A199E5           LDR      R10,[R9, #+260]
   \   00000014   0070A0E1           MOV      R7,R0
   \   00000018   0240A0E1           MOV      R4,R2
   \   0000001C   5C8F87E2           ADD      R8,R7,#+368
   \   00000020   DA5F8FE2           ADR      R5,??Add_2       ;; ".\n"
   \   00000024   00005AE3           CMP      R10,#+0
   \   00000028   D900004A           BMI      ??Add_3
   \   0000002C   0C005AE3           CMP      R10,#+12
   \   00000030   D70000AA           BGE      ??Add_3
     66              if ( tmpIOChannel >= 0 && tmpIOChannel < MAX_AN_ZBANA_CHANNELS ) {
     67                  if ( IOComponent[tmpIOChannel] ) {
   \   00000034   0A0187E0           ADD      R0,R7,R10, LSL #+2
   \   00000038   F41190E5           LDR      R1,[R0, #+500]
   \   0000003C   000051E3           CMP      R1,#+0
   \   00000040   BB00000A           BEQ      ??Add_4
     68                      AnsiString Message =(AnsiString)"TCU "+(AnsiString)IOCompPtr->TCUAddress;
   \   00000044   F41099E5           LDR      R1,[R9, #+244]
   \   00000048   B10F8DE2           ADD      R0,SP,#+708
   \   0000004C   ........           _BLF     ??AnsiString,??AnsiString??rA
   \   00000050   0070A0E1           MOV      R7,R0
   \   00000054   0610A0E1           MOV      R1,R6
   \   00000058   AA0F8DE2           ADD      R0,SP,#+680
   \   0000005C   ........           _BLF     ??AnsiString_1,??AnsiString??rA_1
   \   00000060   0720A0E1           MOV      R2,R7
   \   00000064   0010A0E1           MOV      R1,R0
   \   00000068   40008DE2           ADD      R0,SP,#+64
   \   0000006C   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000070   40108DE2           ADD      R1,SP,#+64
   \   00000074   0D00A0E1           MOV      R0,SP
   \   00000078   ........           _BLF     ??AnsiString_2,??AnsiString??rA_2
   \   0000007C   0020A0E3           MOV      R2,#+0
   \   00000080   0110A0E3           MOV      R1,#+1
   \   00000084   40008DE2           ADD      R0,SP,#+64
   \   00000088   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   0000008C   0020A0E3           MOV      R2,#+0
   \   00000090   0110A0E3           MOV      R1,#+1
   \   00000094   B10F8DE2           ADD      R0,SP,#+708
   \   00000098   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   0000009C   0020A0E3           MOV      R2,#+0
   \   000000A0   0110A0E3           MOV      R1,#+1
   \   000000A4   AA0F8DE2           ADD      R0,SP,#+680
   \   000000A8   ........           _BLF     ??_Tidy,??_Tidy??rA
     69                      Message +=(AnsiString)" com-port "+(AnsiString)IOCompPtr->TCUPortNo+".\n";
   \   000000AC   F81099E5           LDR      R1,[R9, #+248]
   \   000000B0   BF0F8DE2           ADD      R0,SP,#+764
   \   000000B4   ........           _BLF     ??AnsiString,??AnsiString??rA
   \   000000B8   0070A0E1           MOV      R7,R0
   \   000000BC   081086E2           ADD      R1,R6,#+8
   \   000000C0   B80F8DE2           ADD      R0,SP,#+736
   \   000000C4   ........           _BLF     ??AnsiString_1,??AnsiString??rA_1
   \   000000C8   0010A0E1           MOV      R1,R0
   \   000000CC   0720A0E1           MOV      R2,R7
   \   000000D0   78008DE2           ADD      R0,SP,#+120
   \   000000D4   ........           _BLF     `??operator+`,`??operator+??rA`
   \   000000D8   0520A0E1           MOV      R2,R5
   \   000000DC   78108DE2           ADD      R1,SP,#+120
   \   000000E0   5C008DE2           ADD      R0,SP,#+92
   \   000000E4   ........           _BLF     `??operator+_1`,`??operator+??rA_1`
   \   000000E8   ........           LDR      R0,??DataTable9  ;; ??npos
   \   000000EC   0020A0E3           MOV      R2,#+0
   \   000000F0   007090E5           LDR      R7,[R0, #+0]
   \   000000F4   5C108DE2           ADD      R1,SP,#+92
   \   000000F8   0730A0E1           MOV      R3,R7
   \   000000FC   0D00A0E1           MOV      R0,SP
   \   00000100   ........           _BLF     ??append,??append??rA
   \   00000104   0020A0E3           MOV      R2,#+0
   \   00000108   0110A0E3           MOV      R1,#+1
   \   0000010C   5C008DE2           ADD      R0,SP,#+92
   \   00000110   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000114   0020A0E3           MOV      R2,#+0
   \   00000118   0110A0E3           MOV      R1,#+1
   \   0000011C   78008DE2           ADD      R0,SP,#+120
   \   00000120   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000124   0020A0E3           MOV      R2,#+0
   \   00000128   0110A0E3           MOV      R1,#+1
   \   0000012C   BF0F8DE2           ADD      R0,SP,#+764
   \   00000130   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000134   0020A0E3           MOV      R2,#+0
   \   00000138   0110A0E3           MOV      R1,#+1
   \   0000013C   B80F8DE2           ADD      R0,SP,#+736
   \   00000140   ........           _BLF     ??_Tidy,??_Tidy??rA
     70                      Message +=(AnsiString)"Channel "+(AnsiString)(tmpIOChannel+1);
   \   00000144   01108AE2           ADD      R1,R10,#+1
   \   00000148   CD0F8DE2           ADD      R0,SP,#+820
   \   0000014C   ........           _BLF     ??AnsiString,??AnsiString??rA
   \   00000150   0090A0E1           MOV      R9,R0
   \   00000154   141086E2           ADD      R1,R6,#+20
   \   00000158   C60F8DE2           ADD      R0,SP,#+792
   \   0000015C   ........           _BLF     ??AnsiString_1,??AnsiString??rA_1
   \   00000160   0920A0E1           MOV      R2,R9
   \   00000164   0010A0E1           MOV      R1,R0
   \   00000168   94008DE2           ADD      R0,SP,#+148
   \   0000016C   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000170   0730A0E1           MOV      R3,R7
   \   00000174   0020A0E3           MOV      R2,#+0
   \   00000178   94108DE2           ADD      R1,SP,#+148
   \   0000017C   0D00A0E1           MOV      R0,SP
   \   00000180   ........           _BLF     ??append,??append??rA
   \   00000184   0020A0E3           MOV      R2,#+0
   \   00000188   0110A0E3           MOV      R1,#+1
   \   0000018C   94008DE2           ADD      R0,SP,#+148
   \   00000190   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000194   0020A0E3           MOV      R2,#+0
   \   00000198   0110A0E3           MOV      R1,#+1
   \   0000019C   CD0F8DE2           ADD      R0,SP,#+820
   \   000001A0   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000001A4   0020A0E3           MOV      R2,#+0
   \   000001A8   0110A0E3           MOV      R1,#+1
   \   000001AC   C60F8DE2           ADD      R0,SP,#+792
   \   000001B0   ........           _BLF     ??_Tidy,??_Tidy??rA
     71                      Message +=(AnsiString)" on IO "+KeyWord(IOType)+" addr."+(AnsiString)IOAddress;
   \   000001B4   301098E5           LDR      R1,[R8, #+48]
   \   000001B8   DB0F8DE2           ADD      R0,SP,#+876
   \   000001BC   ........           _BLF     ??AnsiString,??AnsiString??rA
   \   000001C0   2C1098E5           LDR      R1,[R8, #+44]
   \   000001C4   0090A0E1           MOV      R9,R0
   \   000001C8   410F8DE2           ADD      R0,SP,#+260
   \   000001CC   ........           _BLF     ??KeyWord,??KeyWord??rA
   \   000001D0   201086E2           ADD      R1,R6,#+32
   \   000001D4   D40F8DE2           ADD      R0,SP,#+848
   \   000001D8   ........           _BLF     ??AnsiString_1,??AnsiString??rA_1
   \   000001DC   412F8DE2           ADD      R2,SP,#+260
   \   000001E0   0010A0E1           MOV      R1,R0
   \   000001E4   E8008DE2           ADD      R0,SP,#+232
   \   000001E8   ........           _BLF     `??operator+`,`??operator+??rA`
   \   000001EC   282086E2           ADD      R2,R6,#+40
   \   000001F0   E8108DE2           ADD      R1,SP,#+232
   \   000001F4   CC008DE2           ADD      R0,SP,#+204
   \   000001F8   ........           _BLF     `??operator+_1`,`??operator+??rA_1`
   \   000001FC   0920A0E1           MOV      R2,R9
   \   00000200   CC108DE2           ADD      R1,SP,#+204
   \   00000204   B0008DE2           ADD      R0,SP,#+176
   \   00000208   ........           _BLF     `??operator+`,`??operator+??rA`
   \   0000020C   0730A0E1           MOV      R3,R7
   \   00000210   0020A0E3           MOV      R2,#+0
   \   00000214   B0108DE2           ADD      R1,SP,#+176
   \   00000218   0D00A0E1           MOV      R0,SP
   \   0000021C   ........           _BLF     ??append,??append??rA
   \   00000220   0020A0E3           MOV      R2,#+0
   \   00000224   0110A0E3           MOV      R1,#+1
   \   00000228   B0008DE2           ADD      R0,SP,#+176
   \   0000022C   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000230   0020A0E3           MOV      R2,#+0
   \   00000234   0110A0E3           MOV      R1,#+1
   \   00000238   DB0F8DE2           ADD      R0,SP,#+876
   \   0000023C   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000240   0020A0E3           MOV      R2,#+0
   \   00000244   0110A0E3           MOV      R1,#+1
   \   00000248   CC008DE2           ADD      R0,SP,#+204
   \   0000024C   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000250   0020A0E3           MOV      R2,#+0
   \   00000254   0110A0E3           MOV      R1,#+1
   \   00000258   E8008DE2           ADD      R0,SP,#+232
   \   0000025C   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000260   0020A0E3           MOV      R2,#+0
   \   00000264   0110A0E3           MOV      R1,#+1
   \   00000268   410F8DE2           ADD      R0,SP,#+260
   \   0000026C   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000270   0020A0E3           MOV      R2,#+0
   \   00000274   0110A0E3           MOV      R1,#+1
   \   00000278   D40F8DE2           ADD      R0,SP,#+848
   \   0000027C   ........           _BLF     ??_Tidy,??_Tidy??rA
     72                      Message +=(AnsiString)"\nChannel allredy used.\n Try to set sensor for ";
   \   00000280   301086E2           ADD      R1,R6,#+48
   \   00000284   E20F8DE2           ADD      R0,SP,#+904
   \   00000288   ........           _BLF     ??AnsiString_1,??AnsiString??rA_1
   \   0000028C   0730A0E1           MOV      R3,R7
   \   00000290   0020A0E3           MOV      R2,#+0
   \   00000294   0010A0E1           MOV      R1,R0
   \   00000298   0D00A0E1           MOV      R0,SP
   \   0000029C   ........           _BLF     ??append,??append??rA
   \   000002A0   0020A0E3           MOV      R2,#+0
   \   000002A4   0110A0E3           MOV      R1,#+1
   \   000002A8   E20F8DE2           ADD      R0,SP,#+904
   \   000002AC   ........           _BLF     ??_Tidy,??_Tidy??rA
     73                      Message +=(AnsiString)ElementPtr->Name+".\n";
   \   000002B0   441084E2           ADD      R1,R4,#+68
   \   000002B4   4F0F8DE2           ADD      R0,SP,#+316
   \   000002B8   ........           _BLF     ??string,??string??rA
   \   000002BC   0520A0E1           MOV      R2,R5
   \   000002C0   4F1F8DE2           ADD      R1,SP,#+316
   \   000002C4   480F8DE2           ADD      R0,SP,#+288
   \   000002C8   ........           _BLF     `??operator+_1`,`??operator+??rA_1`
   \   000002CC   0730A0E1           MOV      R3,R7
   \   000002D0   0020A0E3           MOV      R2,#+0
   \   000002D4   481F8DE2           ADD      R1,SP,#+288
   \   000002D8   0D00A0E1           MOV      R0,SP
   \   000002DC   ........           _BLF     ??append,??append??rA
   \   000002E0   0020A0E3           MOV      R2,#+0
   \   000002E4   0110A0E3           MOV      R1,#+1
   \   000002E8   480F8DE2           ADD      R0,SP,#+288
   \   000002EC   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000002F0   0020A0E3           MOV      R2,#+0
   \   000002F4   0110A0E3           MOV      R1,#+1
   \   000002F8   4F0F8DE2           ADD      R0,SP,#+316
   \   000002FC   ........           _BLF     ??_Tidy,??_Tidy??rA
     74                      HardwareSetupWarning(Message);
   \   00000300   0D10A0E1           MOV      R1,SP
   \   00000304   560F8DE2           ADD      R0,SP,#+344
   \   00000308   ........           _BLF     ??string,??string??rA
   \   0000030C   560F8DE2           ADD      R0,SP,#+344
   \   00000310   ........           _BLF     ??HardwareSetupWarning,??HardwareSetupWarning??rA
   \   00000314   0020A0E3           MOV      R2,#+0
   \   00000318   0110A0E3           MOV      R1,#+1
   \   0000031C   560F8DE2           ADD      R0,SP,#+344
   \   00000320   ........           _BLF     ??_Tidy,??_Tidy??rA
     75                      return(false);
   \   00000324   0020A0E3           MOV      R2,#+0
   \   00000328   0110A0E3           MOV      R1,#+1
   \   0000032C   0D00A0E1           MOV      R0,SP
   \   00000330   DB0000EA           B        ??Add_5
     76                  } else {
     77                      IOComponent[tmpIOChannel] = IOCompPtr;
   \                     ??Add_4:
   \   00000334   F49180E5           STR      R9,[R0, #+500]
     78                      PowerStatus |= 1 << tmpIOChannel;
   \   00000338   B000D8E1           LDRH     R0,[R8, #+0]
   \   0000033C   0110A0E3           MOV      R1,#+1
   \   00000340   111AA0E1           LSL      R1,R1,R10
   \   00000344   000081E1           ORR      R0,R1,R0
   \   00000348   B000C8E1           STRH     R0,[R8, #+0]
     79          
     80                      pair<set<PRogramObject*>::iterator,bool> Ret;
     81                      Ret = IOUniquePROSet.insert(ElementPtr);
   \   0000034C   5F1F87E2           ADD      R1,R7,#+380
   \   00000350   38008DE2           ADD      R0,SP,#+56
   \   00000354   ........           _BLF     ??insert,??insert??rA_1
     82          
     83                      if ( Ret.second ) {
   \   00000358   3C00DDE5           LDRB     R0,[SP, #+60]
   \   0000035C   000050E3           CMP      R0,#+0
   \   00000360   0200000A           BEQ      ??Add_6
     84                          AddAlarms(ElementPtr->CompleteAlarmInfoList);
   \   00000364   FC1084E2           ADD      R1,R4,#+252
   \   00000368   0700A0E1           MOV      R0,R7
   \   0000036C   ........           _BLF     ??AddAlarms,??AddAlarms??rA
     85                      }
     86                      //((AnalogInput*)IOCompPtr)->SetPROPtr(ElementPtr);
     87                      ElementPtr->MergeChildUserRights(this);
   \                     ??Add_6:
   \   00000370   0710A0E1           MOV      R1,R7
   \   00000374   0400A0E1           MOV      R0,R4
   \   00000378   ........           _BLF     ??MergeChildUserRights,??MergeChildUserRights??rA
     88                      IOCompPtr->AddIOMdulePtr((ANPRO10Object*)this);
   \   0000037C   0710A0E1           MOV      R1,R7
   \   00000380   0900A0E1           MOV      R0,R9
   \   00000384   ........           _BLF     ??AddIOMdulePtr,??AddIOMdulePtr??rA
     89                  }
     90                  return(true);
   \   00000388   0100A0E3           MOV      R0,#+1
   \   0000038C   C60000EA           B        ??Add_7
   \                     ??Add_2:
   \   00000390   2E0A0000           DC8      ".\n",+0
     91              }
     92              AnsiString Message =(AnsiString)"TCU "+(AnsiString)IOCompPtr->TCUAddress;
   \                     ??Add_3:
   \   00000394   F41099E5           LDR      R1,[R9, #+244]
   \   00000398   F00F8DE2           ADD      R0,SP,#+960
   \   0000039C   ........           _BLF     ??AnsiString,??AnsiString??rA
   \   000003A0   0070A0E1           MOV      R7,R0
   \   000003A4   0610A0E1           MOV      R1,R6
   \   000003A8   E90F8DE2           ADD      R0,SP,#+932
   \   000003AC   ........           _BLF     ??AnsiString_1,??AnsiString??rA_1
   \   000003B0   0720A0E1           MOV      R2,R7
   \   000003B4   0010A0E1           MOV      R1,R0
   \   000003B8   5D0F8DE2           ADD      R0,SP,#+372
   \   000003BC   ........           _BLF     `??operator+`,`??operator+??rA`
   \   000003C0   5D1F8DE2           ADD      R1,SP,#+372
   \   000003C4   1C008DE2           ADD      R0,SP,#+28
   \   000003C8   ........           _BLF     ??AnsiString_2,??AnsiString??rA_2
   \   000003CC   0020A0E3           MOV      R2,#+0
   \   000003D0   0110A0E3           MOV      R1,#+1
   \   000003D4   5D0F8DE2           ADD      R0,SP,#+372
   \   000003D8   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000003DC   0020A0E3           MOV      R2,#+0
   \   000003E0   0110A0E3           MOV      R1,#+1
   \   000003E4   F00F8DE2           ADD      R0,SP,#+960
   \   000003E8   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000003EC   0020A0E3           MOV      R2,#+0
   \   000003F0   0110A0E3           MOV      R1,#+1
   \   000003F4   E90F8DE2           ADD      R0,SP,#+932
   \   000003F8   ........           _BLF     ??_Tidy,??_Tidy??rA
     93              Message +=(AnsiString)" com-port "+(AnsiString)IOCompPtr->TCUPortNo+".\n";
   \   000003FC   F81099E5           LDR      R1,[R9, #+248]
   \   00000400   FE0F8DE2           ADD      R0,SP,#+1016
   \   00000404   ........           _BLF     ??AnsiString,??AnsiString??rA
   \   00000408   0070A0E1           MOV      R7,R0
   \   0000040C   081086E2           ADD      R1,R6,#+8
   \   00000410   F70F8DE2           ADD      R0,SP,#+988
   \   00000414   ........           _BLF     ??AnsiString_1,??AnsiString??rA_1
   \   00000418   0720A0E1           MOV      R2,R7
   \   0000041C   0010A0E1           MOV      R1,R0
   \   00000420   6B0F8DE2           ADD      R0,SP,#+428
   \   00000424   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000428   0520A0E1           MOV      R2,R5
   \   0000042C   6B1F8DE2           ADD      R1,SP,#+428
   \   00000430   640F8DE2           ADD      R0,SP,#+400
   \   00000434   ........           _BLF     `??operator+_1`,`??operator+??rA_1`
   \   00000438   ........           LDR      R0,??DataTable9  ;; ??npos
   \   0000043C   0020A0E3           MOV      R2,#+0
   \   00000440   007090E5           LDR      R7,[R0, #+0]
   \   00000444   641F8DE2           ADD      R1,SP,#+400
   \   00000448   0730A0E1           MOV      R3,R7
   \   0000044C   1C008DE2           ADD      R0,SP,#+28
   \   00000450   ........           _BLF     ??append,??append??rA
   \   00000454   0020A0E3           MOV      R2,#+0
   \   00000458   0110A0E3           MOV      R1,#+1
   \   0000045C   640F8DE2           ADD      R0,SP,#+400
   \   00000460   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000464   0020A0E3           MOV      R2,#+0
   \   00000468   0110A0E3           MOV      R1,#+1
   \   0000046C   6B0F8DE2           ADD      R0,SP,#+428
   \   00000470   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000474   0020A0E3           MOV      R2,#+0
   \   00000478   0110A0E3           MOV      R1,#+1
   \   0000047C   FE0F8DE2           ADD      R0,SP,#+1016
   \   00000480   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000484   0020A0E3           MOV      R2,#+0
   \   00000488   0110A0E3           MOV      R1,#+1
   \   0000048C   F70F8DE2           ADD      R0,SP,#+988
   \   00000490   ........           _BLF     ??_Tidy,??_Tidy??rA
     94              Message +=(AnsiString)"Channel "+(AnsiString)(IOCompPtr->IOChannel+1);
   \   00000494   040199E5           LDR      R0,[R9, #+260]
   \   00000498   011080E2           ADD      R1,R0,#+1
   \   0000049C   430E8DE2           ADD      R0,SP,#+1072
   \   000004A0   ........           _BLF     ??AnsiString,??AnsiString??rA
   \   000004A4   0090A0E1           MOV      R9,R0
   \   000004A8   141086E2           ADD      R1,R6,#+20
   \   000004AC   14008DE2           ADD      R0,SP,#+20
   \   000004B0   400E80E2           ADD      R0,R0,#+1024
   \   000004B4   ........           _BLF     ??AnsiString_1,??AnsiString??rA_1
   \   000004B8   0920A0E1           MOV      R2,R9
   \   000004BC   0010A0E1           MOV      R1,R0
   \   000004C0   720F8DE2           ADD      R0,SP,#+456
   \   000004C4   ........           _BLF     `??operator+`,`??operator+??rA`
   \   000004C8   0730A0E1           MOV      R3,R7
   \   000004CC   0020A0E3           MOV      R2,#+0
   \   000004D0   721F8DE2           ADD      R1,SP,#+456
   \   000004D4   1C008DE2           ADD      R0,SP,#+28
   \   000004D8   ........           _BLF     ??append,??append??rA
   \   000004DC   0020A0E3           MOV      R2,#+0
   \   000004E0   0110A0E3           MOV      R1,#+1
   \   000004E4   720F8DE2           ADD      R0,SP,#+456
   \   000004E8   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000004EC   0020A0E3           MOV      R2,#+0
   \   000004F0   0110A0E3           MOV      R1,#+1
   \   000004F4   430E8DE2           ADD      R0,SP,#+1072
   \   000004F8   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000004FC   0020A0E3           MOV      R2,#+0
   \   00000500   0110A0E3           MOV      R1,#+1
   \   00000504   14008DE2           ADD      R0,SP,#+20
   \   00000508   400E80E2           ADD      R0,R0,#+1024
   \   0000050C   ........           _BLF     ??_Tidy,??_Tidy??rA
     95              Message +=(AnsiString)" on IO "+KeyWord(IOType)+" addr."+(AnsiString)IOAddress;
   \   00000510   301098E5           LDR      R1,[R8, #+48]
   \   00000514   68008DE2           ADD      R0,SP,#+104
   \   00000518   400E80E2           ADD      R0,R0,#+1024
   \   0000051C   ........           _BLF     ??AnsiString,??AnsiString??rA
   \   00000520   2C1098E5           LDR      R1,[R8, #+44]
   \   00000524   0090A0E1           MOV      R9,R0
   \   00000528   8E0F8DE2           ADD      R0,SP,#+568
   \   0000052C   ........           _BLF     ??KeyWord,??KeyWord??rA
   \   00000530   201086E2           ADD      R1,R6,#+32
   \   00000534   4C008DE2           ADD      R0,SP,#+76
   \   00000538   400E80E2           ADD      R0,R0,#+1024
   \   0000053C   ........           _BLF     ??AnsiString_1,??AnsiString??rA_1
   \   00000540   8E2F8DE2           ADD      R2,SP,#+568
   \   00000544   0010A0E1           MOV      R1,R0
   \   00000548   870F8DE2           ADD      R0,SP,#+540
   \   0000054C   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000550   282086E2           ADD      R2,R6,#+40
   \   00000554   871F8DE2           ADD      R1,SP,#+540
   \   00000558   800F8DE2           ADD      R0,SP,#+512
   \   0000055C   ........           _BLF     `??operator+_1`,`??operator+??rA_1`
   \   00000560   0920A0E1           MOV      R2,R9
   \   00000564   801F8DE2           ADD      R1,SP,#+512
   \   00000568   790F8DE2           ADD      R0,SP,#+484
   \   0000056C   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000570   0730A0E1           MOV      R3,R7
   \   00000574   0020A0E3           MOV      R2,#+0
   \   00000578   791F8DE2           ADD      R1,SP,#+484
   \   0000057C   1C008DE2           ADD      R0,SP,#+28
   \   00000580   ........           _BLF     ??append,??append??rA
   \   00000584   0020A0E3           MOV      R2,#+0
   \   00000588   0110A0E3           MOV      R1,#+1
   \   0000058C   790F8DE2           ADD      R0,SP,#+484
   \   00000590   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000594   0020A0E3           MOV      R2,#+0
   \   00000598   0110A0E3           MOV      R1,#+1
   \   0000059C   68008DE2           ADD      R0,SP,#+104
   \   000005A0   400E80E2           ADD      R0,R0,#+1024
   \   000005A4   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000005A8   0020A0E3           MOV      R2,#+0
   \   000005AC   0110A0E3           MOV      R1,#+1
   \   000005B0   800F8DE2           ADD      R0,SP,#+512
   \   000005B4   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000005B8   0020A0E3           MOV      R2,#+0
   \   000005BC   0110A0E3           MOV      R1,#+1
   \   000005C0   870F8DE2           ADD      R0,SP,#+540
   \   000005C4   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000005C8   0020A0E3           MOV      R2,#+0
   \   000005CC   0110A0E3           MOV      R1,#+1
   \   000005D0   8E0F8DE2           ADD      R0,SP,#+568
   \   000005D4   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000005D8   0020A0E3           MOV      R2,#+0
   \   000005DC   0110A0E3           MOV      R1,#+1
   \   000005E0   4C008DE2           ADD      R0,SP,#+76
   \   000005E4   400E80E2           ADD      R0,R0,#+1024
   \   000005E8   ........           _BLF     ??_Tidy,??_Tidy??rA
     96              Message +=(AnsiString)".\n Not legal ZBANA Channel.\nTry to set sensor for ";
   \   000005EC   601086E2           ADD      R1,R6,#+96
   \   000005F0   84008DE2           ADD      R0,SP,#+132
   \   000005F4   400E80E2           ADD      R0,R0,#+1024
   \   000005F8   ........           _BLF     ??AnsiString_1,??AnsiString??rA_1
   \   000005FC   0730A0E1           MOV      R3,R7
   \   00000600   0020A0E3           MOV      R2,#+0
   \   00000604   0010A0E1           MOV      R1,R0
   \   00000608   1C008DE2           ADD      R0,SP,#+28
   \   0000060C   ........           _BLF     ??append,??append??rA
   \   00000610   0020A0E3           MOV      R2,#+0
   \   00000614   0110A0E3           MOV      R1,#+1
   \   00000618   84008DE2           ADD      R0,SP,#+132
   \   0000061C   400E80E2           ADD      R0,R0,#+1024
   \   00000620   ........           _BLF     ??_Tidy,??_Tidy??rA
     97              Message +=(AnsiString)ElementPtr->Name+".\n";
   \   00000624   441084E2           ADD      R1,R4,#+68
   \   00000628   9C0F8DE2           ADD      R0,SP,#+624
   \   0000062C   ........           _BLF     ??string,??string??rA
   \   00000630   0520A0E1           MOV      R2,R5
   \   00000634   9C1F8DE2           ADD      R1,SP,#+624
   \   00000638   950F8DE2           ADD      R0,SP,#+596
   \   0000063C   ........           _BLF     `??operator+_1`,`??operator+??rA_1`
   \   00000640   0730A0E1           MOV      R3,R7
   \   00000644   0020A0E3           MOV      R2,#+0
   \   00000648   951F8DE2           ADD      R1,SP,#+596
   \   0000064C   1C008DE2           ADD      R0,SP,#+28
   \   00000650   ........           _BLF     ??append,??append??rA
   \   00000654   0020A0E3           MOV      R2,#+0
   \   00000658   0110A0E3           MOV      R1,#+1
   \   0000065C   950F8DE2           ADD      R0,SP,#+596
   \   00000660   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000664   0020A0E3           MOV      R2,#+0
   \   00000668   0110A0E3           MOV      R1,#+1
   \   0000066C   9C0F8DE2           ADD      R0,SP,#+624
   \   00000670   ........           _BLF     ??_Tidy,??_Tidy??rA
     98              HardwareSetupWarning(Message);
   \   00000674   1C108DE2           ADD      R1,SP,#+28
   \   00000678   A30F8DE2           ADD      R0,SP,#+652
   \   0000067C   ........           _BLF     ??string,??string??rA
   \   00000680   A30F8DE2           ADD      R0,SP,#+652
   \   00000684   ........           _BLF     ??HardwareSetupWarning,??HardwareSetupWarning??rA
   \   00000688   0020A0E3           MOV      R2,#+0
   \   0000068C   0110A0E3           MOV      R1,#+1
   \   00000690   A30F8DE2           ADD      R0,SP,#+652
   \   00000694   ........           _BLF     ??_Tidy,??_Tidy??rA
     99              return(false);
   \   00000698   0020A0E3           MOV      R2,#+0
   \   0000069C   0110A0E3           MOV      R1,#+1
   \   000006A0   1C008DE2           ADD      R0,SP,#+28
   \                     ??Add_5:
   \   000006A4   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000006A8   0000A0E3           MOV      R0,#+0
   \                     ??Add_7:
   \   000006AC   4ADE8DE2           ADD      SP,SP,#+1184
   \   000006B0   F047BDE8           POP      {R4-R10,LR}
   \   000006B4   1EFF2FE1           BX       LR               ;; return
   \                     ??Add_1:
   \   000006B8   ........           DC32     `?<Constant "TCU ">`
    100          }
    101          //---------------------------------------------------------------------------
    102          
    103          #ifndef ANCONF
    104          ///////////////////////////////////////////////////////////////
    105          //
    106          // Routines for the librarian
    107          //
    108          ///////////////////////////////////////////////////////////////
    109          

   \                                 In segment CODE, align 4, keep-with-next
    110          int  IOUnitZBAna::GetValue(int ValueId, int Index, float &MyRetValue, int &DecPnt, int &Unit)
    111          {
   \                     ??GetValue:
   \   00000000   F0402DE9           PUSH     {R4-R7,LR}
   \   00000004   14509DE5           LDR      R5,[SP, #+20]
   \   00000008   18609DE5           LDR      R6,[SP, #+24]
   \   0000000C   0340A0E1           MOV      R4,R3
    112              int ErrorStatus = GETVAL_NO_ERR;
   \   00000010   0070A0E3           MOV      R7,#+0
    113              switch ( ValueId ) {
   \   00000014   023180E0           ADD      R3,R0,R2, LSL #+2
   \   00000018   B4E0A0E3           MOV      LR,#+180
   \   0000001C   40EE8EE3           ORR      LR,LR,#0x400
   \   00000020   0E0051E1           CMP      R1,LR
   \   00000024   01E08E13           ORRNE    LR,LR,#0x1
   \   00000028   0E005111           CMPNE    R1,LR
   \   0000002C   0C00000A           BEQ      ??GetValue_2
   \   00000030   01E08EE2           ADD      LR,LR,#+1
   \   00000034   0E0051E1           CMP      R1,LR
   \   00000038   2300000A           BEQ      ??GetValue_3
   \   0000003C   02E08EE2           ADD      LR,LR,#+2
   \   00000040   0E0051E1           CMP      R1,LR
   \   00000044   0600000A           BEQ      ??GetValue_2
   \   00000048   37E08EE2           ADD      LR,LR,#+55
   \   0000004C   0E0051E1           CMP      R1,LR
   \   00000050   1100000A           BEQ      ??GetValue_4
   \   00000054   02E08EE2           ADD      LR,LR,#+2
   \   00000058   0E0051E1           CMP      R1,LR
   \   0000005C   2100001A           BNE      ??GetValue_5
    114              case SVT_IO_CH_VALUE    :
    115                  ValueId = SVT_AI_CALC_VAL;
   \   00000060   39104EE2           SUB      R1,LR,#+57
    116              case SVT_AI_GAIN        :
    117              case SVT_AI_OFFSET      :
    118              case SVT_AI_CALC_VAL    :
    119                  {
    120                      PROIOComponent *CompPtr = IOComponent[Index];
   \                     ??GetValue_2:
   \   00000064   F47193E5           LDR      R7,[R3, #+500]
    121                      if ( CompPtr ) {
   \   00000068   000057E3           CMP      R7,#+0
   \   0000006C   0800000A           BEQ      ??GetValue_6
    122                          ErrorStatus = CompPtr->GetValue(ValueId,Index, MyRetValue,  DecPnt,Unit);
   \   00000070   40002DE9           PUSH     {R6}
   \   00000074   20002DE9           PUSH     {R5}
   \   00000078   0430A0E1           MOV      R3,R4
   \   0000007C   A44097E5           LDR      R4,[R7, #+164]
   \   00000080   0700A0E1           MOV      R0,R7
   \   00000084   244094E5           LDR      R4,[R4, #+36]
   \   00000088   0FE0A0E1           MOV      LR,PC
   \   0000008C   14FF2FE1           BX       R4
   \   00000090   180000EA           B        ??GetValue_7
    123                      } else {
    124                          ErrorStatus = GETVAL_NO_DISPLAY;
   \                     ??GetValue_6:
   \   00000094   0370A0E3           MOV      R7,#+3
   \   00000098   180000EA           B        ??GetValue_8
    125                      }
    126                  }
    127                  break;
    128              case SVT_IO_CH_RAW_VAL:
    129                  MyRetValue = mAValues[Index]/1000.0;
   \                     ??GetValue_4:
   \   0000009C   C00193E5           LDR      R0,[R3, #+448]
   \   000000A0   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   000000A4   ........           LDR      R3,??DataTable10  ;; 0x408f4000
   \   000000A8   0020A0E3           MOV      R2,#+0
   \   000000AC   ........           _BLF     __dDiv,??__dDiv??rA
   \   000000B0   ........           _BLF     __doubleToFloat,??__doubleToFloat??rA
   \   000000B4   000084E5           STR      R0,[R4, #+0]
    130                  DecPnt     = 3;
   \   000000B8   0300A0E3           MOV      R0,#+3
   \   000000BC   000085E5           STR      R0,[R5, #+0]
    131                  Unit       = CURRENT_UNIT;
   \   000000C0   1100A0E3           MOV      R0,#+17
   \                     ??GetValue_9:
   \   000000C4   000086E5           STR      R0,[R6, #+0]
   \   000000C8   0C0000EA           B        ??GetValue_8
    132                  break;
    133              case SVT_IO_CH_STATUS :
    134                  MyRetValue = Status[Index];
   \                     ??GetValue_3:
   \   000000CC   000082E0           ADD      R0,R2,R0
   \   000000D0   B401D0E5           LDRB     R0,[R0, #+436]
   \   000000D4   ........           _BLF     __ulongToFloat,??__ulongToFloat??rA
   \   000000D8   000084E5           STR      R0,[R4, #+0]
    135                  DecPnt     = 0;
   \   000000DC   0000A0E3           MOV      R0,#+0
   \   000000E0   000085E5           STR      R0,[R5, #+0]
    136                  Unit       = NO_UNIT;
   \   000000E4   F6FFFFEA           B        ??GetValue_9
    137                  break;
    138                  //case SVT_IO_CH_CAL_VAL :
    139                  //  MyRetValue = CalValues[Index];
    140                  //  DecPnt     = 0;
    141                  //  Unit       = NO_UNIT;
    142                  //  break;
    143                  //case SVT_IO_CH_RAW_VAL :
    144                  //  MyRetValue = CalValues[Index];
    145                  //  DecPnt     = 0;
    146                  //  Unit       = NO_UNIT;
    147                  //  break;
    148              default:
    149                  ErrorStatus = IOUnit::GetValue(ValueId,Index, MyRetValue,  DecPnt,Unit);
   \                     ??GetValue_5:
   \   000000E8   40002DE9           PUSH     {R6}
   \   000000EC   20002DE9           PUSH     {R5}
   \   000000F0   0430A0E1           MOV      R3,R4
   \   000000F4   ........           _BLF     ??GetValue_1,??GetValue??rA
   \                     ??GetValue_7:
   \   000000F8   0070A0E1           MOV      R7,R0
   \   000000FC   08D08DE2           ADD      SP,SP,#+8
    150                  break;
    151              }
    152              return(ErrorStatus);
   \                     ??GetValue_8:
   \   00000100   0700A0E1           MOV      R0,R7
   \   00000104   F040BDE8           POP      {R4-R7,LR}
   \   00000108   1EFF2FE1           BX       LR               ;; return
    153          }
    154          

   \                                 In segment CODE, align 4, keep-with-next
    155          int IOUnitZBAna::GetStringValue(int ValueId, int Index, AnsiString &MyString)
    156          {
   \                     ??GetStringValue:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   1CD04DE2           SUB      SP,SP,#+28
   \   00000008   00C0A0E1           MOV      R12,R0
   \   0000000C   0350A0E1           MOV      R5,R3
    157              int Status = GETVAL_NO_ERR;
   \   00000010   0040A0E3           MOV      R4,#+0
    158              switch ( ValueId ) {
   \   00000014   02318CE0           ADD      R3,R12,R2, LSL #+2
   \   00000018   420F8FE2           ADR      R0,??GetStringValue_2  ;; ""
   \   0000001C   B260A0E3           MOV      R6,#+178
   \   00000020   406E86E3           ORR      R6,R6,#0x400
   \   00000024   060051E1           CMP      R1,R6
   \   00000028   0A00000A           BEQ      ??GetStringValue_3
   \   0000002C   3A6086E2           ADD      R6,R6,#+58
   \   00000030   060051E1           CMP      R1,R6
   \   00000034   0600000A           BEQ      ??GetStringValue_4
   \   00000038   016086E3           ORR      R6,R6,#0x1
   \   0000003C   060051E1           CMP      R1,R6
   \   00000040   1D00000A           BEQ      ??GetStringValue_5
   \   00000044   016086E2           ADD      R6,R6,#+1
   \   00000048   060051E1           CMP      R1,R6
   \   0000004C   2300000A           BEQ      ??GetStringValue_6
   \   00000050   2E0000EA           B        ??GetStringValue_7
    159              case SVT_IO_CH_NAME         :
    160                  ValueId = SVT_AI_PRONAME;
   \                     ??GetStringValue_4:
   \   00000054   311046E2           SUB      R1,R6,#+49
    161              case SVT_AI_ENABLE_TEXT     :
    162                  {
    163                      PROIOComponent *IOCPtr = IOComponent[Index];
   \                     ??GetStringValue_3:
   \   00000058   F4C193E5           LDR      R12,[R3, #+500]
    164                      if ( IOCPtr ) {
   \   0000005C   00005CE3           CMP      R12,#+0
   \   00000060   0700000A           BEQ      ??GetStringValue_8
    165                          Status = IOCPtr->GetStringValue(ValueId,0,MyString);
   \   00000064   A4409CE5           LDR      R4,[R12, #+164]
   \   00000068   0530A0E1           MOV      R3,R5
   \   0000006C   284094E5           LDR      R4,[R4, #+40]
   \   00000070   0020A0E3           MOV      R2,#+0
   \                     ??GetStringValue_9:
   \   00000074   0C00A0E1           MOV      R0,R12
   \   00000078   0FE0A0E1           MOV      LR,PC
   \   0000007C   14FF2FE1           BX       R4
   \   00000080   250000EA           B        ??GetStringValue_10
    166                      } else {
    167                          MyString = "";
   \                     ??GetStringValue_8:
   \   00000084   0010A0E1           MOV      R1,R0
   \   00000088   0D00A0E1           MOV      R0,SP
   \   0000008C   ........           _BLF     ??AnsiString_1,??AnsiString??rA_1
   \   00000090   ........           LDR      R1,??DataTable9  ;; ??npos
   \   00000094   0020A0E3           MOV      R2,#+0
   \   00000098   003091E5           LDR      R3,[R1, #+0]
   \   0000009C   0010A0E1           MOV      R1,R0
   \   000000A0   0500A0E1           MOV      R0,R5
   \   000000A4   ........           _BLF     ??assign,??assign??rA
   \   000000A8   0420A0E1           MOV      R2,R4
   \   000000AC   0110A0E3           MOV      R1,#+1
   \   000000B0   0D00A0E1           MOV      R0,SP
   \   000000B4   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000000B8   180000EA           B        ??GetStringValue_11
    168                      }
    169                  }
    170                  break;
    171              case SVT_IO_CH_LOCATION         :
    172                  {
    173                      PROIOComponent *IOCPtr = IOComponent[Index];
   \                     ??GetStringValue_5:
   \   000000BC   F4C193E5           LDR      R12,[R3, #+500]
    174                      if ( IOCPtr ) {
   \   000000C0   00005CE3           CMP      R12,#+0
   \   000000C4   EEFFFF0A           BEQ      ??GetStringValue_8
    175                          Status = IOCPtr->GetStringValue(SVT_AI_LOCATION,0,MyString);
   \   000000C8   A4409CE5           LDR      R4,[R12, #+164]
   \   000000CC   0530A0E1           MOV      R3,R5
   \   000000D0   284094E5           LDR      R4,[R4, #+40]
   \   000000D4   0020A0E3           MOV      R2,#+0
   \   000000D8   341046E2           SUB      R1,R6,#+52
   \   000000DC   E4FFFFEA           B        ??GetStringValue_9
    176                      } else {
    177                          MyString = "";
    178                      }
    179                  }
    180                  break;
    181              case SVT_IO_CH_TYPE_TEXT    :
    182                  {
    183                      PROIOComponent *IOCPtr = IOComponent[Index];
   \                     ??GetStringValue_6:
   \   000000E0   F4C193E5           LDR      R12,[R3, #+500]
    184                      if ( IOCPtr ) {
   \   000000E4   00005CE3           CMP      R12,#+0
   \   000000E8   E5FFFF0A           BEQ      ??GetStringValue_8
    185                          Status = IOCPtr->GetStringValue(SVT_AI_TYPE_TEXT,0,MyString);
   \   000000EC   A4409CE5           LDR      R4,[R12, #+164]
   \   000000F0   0530A0E1           MOV      R3,R5
   \   000000F4   284094E5           LDR      R4,[R4, #+40]
   \   000000F8   0020A0E3           MOV      R2,#+0
   \   000000FC   3D1046E2           SUB      R1,R6,#+61
   \   00000100   0C00A0E1           MOV      R0,R12
   \   00000104   0FE0A0E1           MOV      LR,PC
   \   00000108   14FF2FE1           BX       R4
   \   0000010C   020000EA           B        ??GetStringValue_10
    186                      } else {
    187                          MyString = "";
    188                      }
    189                  }
    190                  break;
    191              default:
    192                  Status = IOUnit::GetStringValue(ValueId,Index, MyString);
   \                     ??GetStringValue_7:
   \   00000110   0530A0E1           MOV      R3,R5
   \   00000114   0C00A0E1           MOV      R0,R12
   \   00000118   ........           _BLF     ??GetStringValue_1,??GetStringValue??rA
   \                     ??GetStringValue_10:
   \   0000011C   0040A0E1           MOV      R4,R0
    193                  break;
    194              }
    195              return(Status);
   \                     ??GetStringValue_11:
   \   00000120   0400A0E1           MOV      R0,R4
   \   00000124   ........           B        ?Subroutine20
   \                     ??GetStringValue_2:
   \   00000128   00000000           DC8      "",+0,+0,+0
    196          }

   \                                 In segment CODE, align 4, keep-with-next
   \                     ?Subroutine20:
   \   00000000   1CD08DE2           ADD      SP,SP,#+28
   \   00000004   7040BDE8           POP      {R4-R6,LR}
   \   00000008   1EFF2FE1           BX       LR               ;; return
    197          

   \                                 In segment CODE, align 4, keep-with-next
    198          int IOUnitZBAna::PutValue( int ValueId, int Index, AnsiString NewValue,bool Local, int *UnitId)
    199          {
   \                     ??PutValue:
   \   00000000   F0412DE9           PUSH     {R4-R8,LR}
   \   00000004   1CD04DE2           SUB      SP,SP,#+28
   \   00000008   3470DDE5           LDRB     R7,[SP, #+52]
   \   0000000C   38809DE5           LDR      R8,[SP, #+56]
   \   00000010   0040A0E1           MOV      R4,R0
   \   00000014   0150A0E1           MOV      R5,R1
   \   00000018   0260A0E1           MOV      R6,R2
   \   0000001C   0310A0E1           MOV      R1,R3
    200              return(IOUnit::PutValue( ValueId, Index, NewValue, Local,UnitId));
   \   00000020   0D00A0E1           MOV      R0,SP
   \   00000024   ........           _BLF     ??string,??string??rA
   \   00000028   00012DE9           PUSH     {R8}
   \   0000002C   80002DE9           PUSH     {R7}
   \   00000030   08308DE2           ADD      R3,SP,#+8
   \   00000034   0620A0E1           MOV      R2,R6
   \   00000038   0510A0E1           MOV      R1,R5
   \   0000003C   0400A0E1           MOV      R0,R4
   \   00000040   ........           _BLF     ??PutValue_1,??PutValue??rA
   \   00000044   0040A0E1           MOV      R4,R0
   \   00000048   0020A0E3           MOV      R2,#+0
   \   0000004C   0110A0E3           MOV      R1,#+1
   \   00000050   08008DE2           ADD      R0,SP,#+8
   \   00000054   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000058   0400A0E1           MOV      R0,R4
   \   0000005C   24D08DE2           ADD      SP,SP,#+36
   \   00000060   ........           B        ?Subroutine23
    201          }

   \                                 In segment CODE, align 4, keep-with-next
   \                     ?Subroutine23:
   \   00000000   F041BDE8           POP      {R4-R8,LR}
   \   00000004   1EFF2FE1           BX       LR               ;; return
    202          

   \                                 In segment CODE, align 4, keep-with-next
    203          int IOUnitZBAna::PutFloatValue( int ValueId, float NewValue)
    204          {
   \                     ??PutFloatValue:
   \   00000000   00402DE9           PUSH     {LR}
    205              return(IOUnit::PutFloatValue(ValueId,NewValue));
   \   00000004   ........           _BLF     ??PutFloatValue_1,??PutFloatValue??rA
   \   00000008   0040BDE8           POP      {LR}
   \   0000000C   1EFF2FE1           BX       LR               ;; return
    206          }
    207          

   \                                 In segment CODE, align 4, keep-with-next
    208          ValueList *IOUnitZBAna::GetValueInfoTable(int &Entries, int Index)
    209          {
    210              Entries = NELEMENTS(IOUnitZBAnaValueList);
   \                     ??GetValueInfoTable:
   \   00000000   0D00A0E3           MOV      R0,#+13
   \   00000004   000081E5           STR      R0,[R1, #+0]
    211              return(IOUnitZBAnaValueList);
   \   00000008   00009FE5           LDR      R0,??GetValueInfoTable_1  ;; ??IOUnitZBAnaValueList
   \   0000000C   1EFF2FE1           BX       LR               ;; return
   \                     ??GetValueInfoTable_1:
   \   00000010   ........           DC32     ??IOUnitZBAnaValueList
    212          }
    213          
    214          //////////////////////////////////////////////////
    215          //
    216          // Packets for IOUnitZBAna
    217          //
    218          //////////////////////////////////////////////////
    219          #pragma pack(push,1)
    220          
    221          struct mASgCnvMeasuredDataStruct {
    222          	U8 Status;
    223          	float mAmp;
    224          };
    225          
    226          #pragma pack(pop)
    227          
    228          ///////////////////////////////////////////////////////////////
    229          //
    230          // Routines for communication
    231          //
    232          ///////////////////////////////////////////////////////////////

   \                                 In segment CODE, align 4, keep-with-next
    233          void IOUnitZBAna::SetHWFailure(bool Failure)
    234          {
   \                     ??SetHWFailure:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   0040A0E1           MOV      R4,R0
    235              if ( Failure ) {
   \   00000008   000051E3           CMP      R1,#+0
   \   0000000C   0F00000A           BEQ      ??SetHWFailure_1
    236                  for ( int i=0; i < MAX_AN_ZBANA_CHANNELS; i++ ) {
   \   00000010   0050A0E3           MOV      R5,#+0
    237                      PROIOComponent *CompPtr = IOComponent[i];
   \                     ??SetHWFailure_2:
   \   00000014   050184E0           ADD      R0,R4,R5, LSL #+2
   \   00000018   F42190E5           LDR      R2,[R0, #+500]
    238                      if ( CompPtr ) {
   \   0000001C   000052E3           CMP      R2,#+0
   \   00000020   0700000A           BEQ      ??SetHWFailure_3
    239                          CompPtr->HWFailure = true;
   \   00000024   0100A0E3           MOV      R0,#+1
   \   00000028   0C01C2E5           STRB     R0,[R2, #+268]
    240                          CompPtr->SendData();
   \   0000002C   0200A0E1           MOV      R0,R2
   \   00000030   A42092E5           LDR      R2,[R2, #+164]
   \   00000034   6510A0E3           MOV      R1,#+101
   \   00000038   402092E5           LDR      R2,[R2, #+64]
   \   0000003C   0FE0A0E1           MOV      LR,PC
   \   00000040   12FF2FE1           BX       R2
    241                      }
    242                  }
   \                     ??SetHWFailure_3:
   \   00000044   015085E2           ADD      R5,R5,#+1
   \   00000048   0C0055E3           CMP      R5,#+12
   \   0000004C   F0FFFFBA           BLT      ??SetHWFailure_2
    243              }
    244          }
   \                     ??SetHWFailure_1:
   \   00000050   ........           B        ?Subroutine22
    245          
    246              #ifdef S2TXU

   \                                 In segment CODE, align 4, keep-with-next
    247          bool IOUnitZBAna::ANPRO10_IO_UnpackPacket(U8 *Buf)
    248          {
   \                     ??ANPRO10_IO_UnpackPacket:
   \   00000000   FF4F2DE9           PUSH     {R0-R11,LR}
   \   00000004   0080A0E1           MOV      R8,R0
    249              ReceiveCnt++;
   \   00000008   A45088E2           ADD      R5,R8,#+164
   \   0000000C   4C0195E5           LDR      R0,[R5, #+332]
   \   00000010   0140A0E1           MOV      R4,R1
   \   00000014   010080E2           ADD      R0,R0,#+1
   \   00000018   4C0185E5           STR      R0,[R5, #+332]
    250              ANPRO10_PacketHeading *pPH = (ANPRO10_PacketHeading*)Buf;
    251              bool MyPacket= (pPH->txadr == this->IOAddress);
   \   0000001C   0300D4E5           LDRB     R0,[R4, #+3]
   \   00000020   FC1095E5           LDR      R1,[R5, #+252]
   \   00000024   010050E1           CMP      R0,R1
   \   00000028   2A00001A           BNE      ??ANPRO10_IO_UnpackPacket_1
   \   0000002C   0190A0E3           MOV      R9,#+1
   \   00000030   0190CDE5           STRB     R9,[SP, #+1]
    252              if ( MyPacket ) {
    253                  SetTimeStamp();
   \   00000034   0800A0E1           MOV      R0,R8
   \   00000038   ........           _BLF     ??SetTimeStamp,??SetTimeStamp??rA
    254                  Buf += sizeof(ANPRO10_PacketHeading);
    255                  U8 *EndPtr =  &Buf[pPH->nob];
   \   0000003C   0510D4E5           LDRB     R1,[R4, #+5]
   \   00000040   0420D4E5           LDRB     R2,[R4, #+4]
   \   00000044   074084E2           ADD      R4,R4,#+7
   \   00000048   011482E1           ORR      R1,R2,R1, LSL #+8
   \   0000004C   041081E0           ADD      R1,R1,R4
   \   00000050   08108DE5           STR      R1,[SP, #+8]
    256                  ANPRO10_CommandHeading *pCH;
    257                  bool MoreCommands = true;
    258                  bool RecalcTanks  = false;
   \   00000054   0010A0E3           MOV      R1,#+0
   \   00000058   0010CDE5           STRB     R1,[SP, #+0]
    259                  do {
    260                      pCH = (ANPRO10_CommandHeading*)Buf;
   \                     ??ANPRO10_IO_UnpackPacket_2:
   \   0000005C   04408DE5           STR      R4,[SP, #+4]
    261                      Buf += sizeof(ANPRO10_CommandHeading);  // ??
    262                      switch ( pCH->CommandNo ) {
   \   00000060   04009DE5           LDR      R0,[SP, #+4]
   \   00000064   04109DE5           LDR      R1,[SP, #+4]
   \   00000068   0100D0E5           LDRB     R0,[R0, #+1]
   \   0000006C   0010D1E5           LDRB     R1,[R1, #+0]
   \   00000070   044084E2           ADD      R4,R4,#+4
   \   00000074   000491E1           ORRS     R0,R1,R0, LSL #+8
   \   00000078   01005013           CMPNE    R0,#+1
   \   0000007C   A400000A           BEQ      ??ANPRO10_IO_UnpackPacket_3
   \   00000080   FA1F89E3           ORR      R1,R9,#0x3E8
   \   00000084   010050E1           CMP      R0,R1
   \   00000088   1800000A           BEQ      ??ANPRO10_IO_UnpackPacket_4
   \   0000008C   5A1081E2           ADD      R1,R1,#+90
   \   00000090   010050E1           CMP      R0,R1
   \   00000094   3B00000A           BEQ      ??ANPRO10_IO_UnpackPacket_5
   \   00000098   781081E2           ADD      R1,R1,#+120
   \   0000009C   010050E1           CMP      R0,R1
   \   000000A0   8B00000A           BEQ      ??ANPRO10_IO_UnpackPacket_6
   \   000000A4   1E1081E2           ADD      R1,R1,#+30
   \   000000A8   010050E1           CMP      R0,R1
   \   000000AC   4700000A           BEQ      ??ANPRO10_IO_UnpackPacket_7
   \   000000B0   9F10A0E3           MOV      R1,#+159
   \   000000B4   701E81E3           ORR      R1,R1,#0x700
   \   000000B8   010050E1           CMP      R0,R1
   \   000000BC   0800000A           BEQ      ??ANPRO10_IO_UnpackPacket_8
   \   000000C0   0A1081E2           ADD      R1,R1,#+10
   \   000000C4   010050E1           CMP      R0,R1
   \   000000C8   8800001A           BNE      ??ANPRO10_IO_UnpackPacket_9
    263                      case CMD_TXU_COMPRESSED_PACKET:
    264                          //Decompress(Size,Buf,Port);
    265                          break;
    266                      case CMD_REP_FLASH_PROG:
    267                          ProgrammingStatus = *Buf;
   \   000000CC   0000D4E5           LDRB     R0,[R4, #+0]
   \   000000D0   CF00C5E5           STRB     R0,[R5, #+207]
   \   000000D4   850000EA           B        ??ANPRO10_IO_UnpackPacket_9
   \                     ??ANPRO10_IO_UnpackPacket_1:
   \   000000D8   0010A0E3           MOV      R1,#+0
   \   000000DC   0110CDE5           STRB     R1,[SP, #+1]
   \   000000E0   900000EA           B        ??ANPRO10_IO_UnpackPacket_10
    268                          break;
    269                      case  CMD_REP_FLASH_ERASE:
    270                          FlashEraseStatus = *Buf;
   \                     ??ANPRO10_IO_UnpackPacket_8:
   \   000000E4   0000D4E5           LDRB     R0,[R4, #+0]
   \   000000E8   CE00C5E5           STRB     R0,[R5, #+206]
   \   000000EC   7F0000EA           B        ??ANPRO10_IO_UnpackPacket_9
    271                          break;
    272                      case CMD_REP_STATUS:
    273                          {
    274                              ANPRO10_COMMAND_1001 *CardInfo = (ANPRO10_COMMAND_1001*)Buf;
    275                              CardChannel       = CardInfo->CardChannel;
   \                     ??ANPRO10_IO_UnpackPacket_4:
   \   000000F0   0000D4E5           LDRB     R0,[R4, #+0]
   \   000000F4   B400C5E5           STRB     R0,[R5, #+180]
    276                              CardId            = CardInfo->CardId;
   \   000000F8   0100D4E5           LDRB     R0,[R4, #+1]
   \   000000FC   B500C5E5           STRB     R0,[R5, #+181]
    277                              CardAddress       = CardInfo->CardAddress;
   \   00000100   0200D4E5           LDRB     R0,[R4, #+2]
   \   00000104   B600C5E5           STRB     R0,[R5, #+182]
    278                              UnitProgVersion   = CardInfo->UnitProgVersion;
   \   00000108   0300D4E5           LDRB     R0,[R4, #+3]
   \   0000010C   B700C5E5           STRB     R0,[R5, #+183]
    279                              ComVersion        = CardInfo->ComVersion;
   \   00000110   0400D4E5           LDRB     R0,[R4, #+4]
   \   00000114   B800C5E5           STRB     R0,[R5, #+184]
    280                              StoreVersion      = CardInfo->StoreVersion;
   \   00000118   0500D4E5           LDRB     R0,[R4, #+5]
   \   0000011C   B900C5E5           STRB     R0,[R5, #+185]
    281                              RxBufSize         = CardInfo->RxBufSize;
   \   00000120   0700D4E5           LDRB     R0,[R4, #+7]
   \   00000124   0610D4E5           LDRB     R1,[R4, #+6]
   \   00000128   000481E1           ORR      R0,R1,R0, LSL #+8
   \   0000012C   BA0BC5E1           STRH     R0,[R5, #+186]
    282                              TxBufSize         = CardInfo->TxBufSize;
   \   00000130   0900D4E5           LDRB     R0,[R4, #+9]
   \   00000134   0810D4E5           LDRB     R1,[R4, #+8]
   \   00000138   000481E1           ORR      R0,R1,R0, LSL #+8
   \   0000013C   BC0BC5E1           STRH     R0,[R5, #+188]
    283                              if ( CardInfo->ResetStatus ) {
   \   00000140   0A00D4E5           LDRB     R0,[R4, #+10]
   \   00000144   000050E3           CMP      R0,#+0
   \   00000148   0500000A           BEQ      ??ANPRO10_IO_UnpackPacket_11
    284                                  Restart         = true;
   \   0000014C   0191C5E5           STRB     R9,[R5, #+257]
    285                                  ResetStatus     = CardInfo->ResetStatus;
   \   00000150   0A00D4E5           LDRB     R0,[R4, #+10]
   \   00000154   0001C5E5           STRB     R0,[R5, #+256]
    286                                  TotalUnitRestart++;
   \   00000158   F00DD5E1           LDRSH    R0,[R5, #+208]
   \   0000015C   010080E2           ADD      R0,R0,#+1
   \   00000160   B00DC5E1           STRH     R0,[R5, #+208]
    287                              }
    288                              ProgamTypeRunning = CardInfo->ProgamTypeRunning;
   \                     ??ANPRO10_IO_UnpackPacket_11:
   \   00000164   0B00D4E5           LDRB     R0,[R4, #+11]
    289                          }
    290                          SendData(CMD_GENERIC_STATIC_DATA);
   \   00000168   6610A0E3           MOV      R1,#+102
   \   0000016C   BE00C5E5           STRB     R0,[R5, #+190]
   \   00000170   002095E5           LDR      R2,[R5, #+0]
   \   00000174   0800A0E1           MOV      R0,R8
   \   00000178   402092E5           LDR      R2,[R2, #+64]
   \   0000017C   0FE0A0E1           MOV      LR,PC
   \   00000180   12FF2FE1           BX       R2
   \   00000184   590000EA           B        ??ANPRO10_IO_UnpackPacket_9
    291                          break;
    292                      case CMD_REP_INT_DATA:
    293                          {
    294                              ANPRO10_COMMAND_1091 *CardInfo = (ANPRO10_COMMAND_1091*)Buf;
    295                              CardVoltage  = CardInfo->InternalAD[0]/1024.0*2.56*16.0;
   \                     ??ANPRO10_IO_UnpackPacket_5:
   \   00000188   0100D4E5           LDRB     R0,[R4, #+1]
   \   0000018C   0010D4E5           LDRB     R1,[R4, #+0]
   \   00000190   000481E1           ORR      R0,R1,R0, LSL #+8
   \   00000194   ........           _BLF     __ulongToDouble,??__ulongToDouble??rA
   \   00000198   0020A0E3           MOV      R2,#+0
   \   0000019C   4034A0E3           MOV      R3,#+1073741824
   \   000001A0   903883E3           ORR      R3,R3,#0x900000
   \   000001A4   ........           _BLF     __dDiv,??__dDiv??rA
   \   000001A8   88219FE5           LDR      R2,??ANPRO10_IO_UnpackPacket_12  ;; 0x47ae147b
   \   000001AC   88319FE5           LDR      R3,??ANPRO10_IO_UnpackPacket_12+0x4  ;; 0x40047ae1
   \   000001B0   ........           _BLF     __dMul,??__dMul??rA
   \   000001B4   0020A0E3           MOV      R2,#+0
   \   000001B8   4034A0E3           MOV      R3,#+1073741824
   \   000001BC   C03983E3           ORR      R3,R3,#0x300000
   \   000001C0   ........           _BLF     __dMul,??__dMul??rA
   \   000001C4   ........           _BLF     __doubleToFloat,??__doubleToFloat??rA
   \   000001C8   C00085E5           STR      R0,[R5, #+192]
   \   000001CC   470000EA           B        ??ANPRO10_IO_UnpackPacket_9
    296                          }
    297                          break;
    298                      case CMD_REP_ANA_MDATA:
    299                          {
    300                              U8 TmpStatus    = Buf[0] >> 4;
   \                     ??ANPRO10_IO_UnpackPacket_7:
   \   000001D0   0000D4E5           LDRB     R0,[R4, #+0]
   \   000001D4   2002B0E1           LSRS     R0,R0,#+4
    301                              if ( TmpStatus ) {
    302                                  ResetStatus = TmpStatus;
   \   000001D8   0001C515           STRBNE   R0,[R5, #+256]
    303                                  Restart     = true;
   \   000001DC   4200001A           BNE      ??ANPRO10_IO_UnpackPacket_13
    304                              } else {
    305                                  RecalcTanks = true;
   \   000001E0   0090CDE5           STRB     R9,[SP, #+0]
    306                                  mASgCnvMeasuredDataStruct *MsrdData = (mASgCnvMeasuredDataStruct*)&Buf[1];
   \   000001E4   01A084E2           ADD      R10,R4,#+1
    307                                  for ( int i=0; i < MAX_AN_ZBANA_CHANNELS; i++ ) {
   \   000001E8   0060A0E3           MOV      R6,#+0
    308                                      Status[i]   = MsrdData[i].Status;
   \                     ??ANPRO10_IO_UnpackPacket_14:
   \   000001EC   060186E0           ADD      R0,R6,R6, LSL #+2
   \   000001F0   0A0080E0           ADD      R0,R0,R10
   \   000001F4   0020D0E5           LDRB     R2,[R0, #+0]
   \   000001F8   081086E0           ADD      R1,R6,R8
   \   000001FC   B421C1E5           STRB     R2,[R1, #+436]
    309                                      mAValues[i] = MsrdData[i].mAmp;
   \   00000200   0010A0E3           MOV      R1,#+0
   \   00000204   0C208DE2           ADD      R2,SP,#+12
   \                     ??ANPRO10_IO_UnpackPacket_15:
   \   00000208   013080E2           ADD      R3,R0,#+1
   \   0000020C   0330D1E7           LDRB     R3,[R1, +R3]
   \   00000210   0230C1E7           STRB     R3,[R1, +R2]
   \   00000214   011081E2           ADD      R1,R1,#+1
   \   00000218   040051E3           CMP      R1,#+4
   \   0000021C   F9FFFFBA           BLT      ??ANPRO10_IO_UnpackPacket_15
   \   00000220   0C009DE5           LDR      R0,[SP, #+12]
   \   00000224   06B188E0           ADD      R11,R8,R6, LSL #+2
   \   00000228   C0018BE5           STR      R0,[R11, #+448]
    310                                      PROIOComponent *CompPtr = IOComponent[i];
   \   0000022C   F4719BE5           LDR      R7,[R11, #+500]
    311                                      if ( CompPtr ) {
   \   00000230   000057E3           CMP      R7,#+0
   \   00000234   2200000A           BEQ      ??ANPRO10_IO_UnpackPacket_16
    312                                          CompPtr->SetStatus((U8*)Status[i]);
   \   00000238   A42097E5           LDR      R2,[R7, #+164]
   \   0000023C   080086E0           ADD      R0,R6,R8
   \   00000240   B411D0E5           LDRB     R1,[R0, #+436]
   \   00000244   642092E5           LDR      R2,[R2, #+100]
   \   00000248   0700A0E1           MOV      R0,R7
   \   0000024C   0FE0A0E1           MOV      LR,PC
   \   00000250   12FF2FE1           BX       R2
    313                                          CompPtr->NewValue(mAValues[i]/1000.0); // Convert to Ampere
   \   00000254   C0019BE5           LDR      R0,[R11, #+448]
   \   00000258   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   0000025C   ........           LDR      R3,??DataTable10  ;; 0x408f4000
   \   00000260   0020A0E3           MOV      R2,#+0
   \   00000264   ........           _BLF     __dDiv,??__dDiv??rA
   \   00000268   ........           _BLF     __doubleToFloat,??__doubleToFloat??rA
   \   0000026C   A42097E5           LDR      R2,[R7, #+164]
   \   00000270   0010A0E1           MOV      R1,R0
   \   00000274   682092E5           LDR      R2,[R2, #+104]
   \   00000278   0700A0E1           MOV      R0,R7
   \   0000027C   0FE0A0E1           MOV      LR,PC
   \   00000280   12FF2FE1           BX       R2
    314                                          CompPtr->Calculate();
   \   00000284   A41097E5           LDR      R1,[R7, #+164]
   \   00000288   0700A0E1           MOV      R0,R7
   \   0000028C   601091E5           LDR      R1,[R1, #+96]
   \   00000290   0FE0A0E1           MOV      LR,PC
   \   00000294   11FF2FE1           BX       R1
    315                                          CompPtr->ActiveAlarms = CheckAlarms(CompPtr->AlarmSet,&CompPtr->MyHWFailure);
   \   00000298   430F89E3           ORR      R0,R9,#0x10C
   \   0000029C   071080E0           ADD      R1,R0,R7
   \   000002A0   C00087E2           ADD      R0,R7,#+192
   \   000002A4   ........           _BLF     ??CheckAlarms,??CheckAlarms??rA
   \   000002A8   380087E5           STR      R0,[R7, #+56]
    316                                          CompPtr->SendData();
   \   000002AC   A42097E5           LDR      R2,[R7, #+164]
   \   000002B0   6510A0E3           MOV      R1,#+101
   \   000002B4   402092E5           LDR      R2,[R2, #+64]
   \   000002B8   0700A0E1           MOV      R0,R7
   \   000002BC   0FE0A0E1           MOV      LR,PC
   \   000002C0   12FF2FE1           BX       R2
    317                                      }
    318                                  }
   \                     ??ANPRO10_IO_UnpackPacket_16:
   \   000002C4   016086E2           ADD      R6,R6,#+1
   \   000002C8   0C0056E3           CMP      R6,#+12
   \   000002CC   070000AA           BGE      ??ANPRO10_IO_UnpackPacket_9
   \   000002D0   C5FFFFEA           B        ??ANPRO10_IO_UnpackPacket_14
    319                              }
    320                          }
    321                          break;
    322                      case CMD_REP_ANA_FILTER:
    323                          break;
    324                      case CMD_REP_ANA_SETUP:
    325                          {
    326                              U16 tmpPowerStatus = ( Buf[1] << 8 ) | Buf[0];
    327                              if ( tmpPowerStatus != PowerStatus ) {
   \                     ??ANPRO10_IO_UnpackPacket_6:
   \   000002D4   0100D4E5           LDRB     R0,[R4, #+1]
   \   000002D8   0010D4E5           LDRB     R1,[R4, #+0]
   \   000002DC   000481E1           ORR      R0,R1,R0, LSL #+8
   \   000002E0   BC1CD5E1           LDRH     R1,[R5, #+204]
   \   000002E4   010050E1           CMP      R0,R1
   \   000002E8   0000000A           BEQ      ??ANPRO10_IO_UnpackPacket_9
    328                                  Restart = true;
   \                     ??ANPRO10_IO_UnpackPacket_13:
   \   000002EC   0191C5E5           STRB     R9,[R5, #+257]
    329                              }
    330                          }
    331                          break;
    332                      case ECMD_NMDWOACK:
    333                      case ECMD_NMDRQACK:
    334                          MoreCommands=false;
    335                          break;
    336                      default:
    337                          break;
    338          
    339                      }
    340                      if ( MoreCommands ) {
    341                          Buf += pCH->ndb;
   \                     ??ANPRO10_IO_UnpackPacket_9:
   \   000002F0   04009DE5           LDR      R0,[SP, #+4]
   \   000002F4   04109DE5           LDR      R1,[SP, #+4]
   \   000002F8   0300D0E5           LDRB     R0,[R0, #+3]
   \   000002FC   0210D1E5           LDRB     R1,[R1, #+2]
   \   00000300   000481E1           ORR      R0,R1,R0, LSL #+8
   \   00000304   044080E0           ADD      R4,R0,R4
   \   00000308   08009DE5           LDR      R0,[SP, #+8]
   \   0000030C   000054E1           CMP      R4,R0
   \   00000310   51FFFF3A           BCC      ??ANPRO10_IO_UnpackPacket_2
    342                      }
    343                  } while ( MoreCommands && ( Buf < EndPtr ) );
    344                  if ( RecalcTanks ) {
   \                     ??ANPRO10_IO_UnpackPacket_3:
   \   00000314   0000DDE5           LDRB     R0,[SP, #+0]
   \   00000318   000050E3           CMP      R0,#+0
   \   0000031C   0100000A           BEQ      ??ANPRO10_IO_UnpackPacket_10
    345                      RecalcTanks = false;
    346                      SetDataTime(IOUniquePROSet);
   \   00000320   5F0F88E2           ADD      R0,R8,#+380
   \   00000324   ........           _BLF     ??SetDataTime,??SetDataTime??rA
    347                  }
    348              }
    349              return(MyPacket);
   \                     ??ANPRO10_IO_UnpackPacket_10:
   \   00000328   0100DDE5           LDRB     R0,[SP, #+1]
   \   0000032C   10D08DE2           ADD      SP,SP,#+16
   \   00000330   F04FBDE8           POP      {R4-R11,LR}
   \   00000334   1EFF2FE1           BX       LR               ;; return
   \                     ??ANPRO10_IO_UnpackPacket_12:
   \   00000338   7B14AE47           DC32     0x47ae147b
   \   0000033C   E17A0440           DC32     0x40047ae1
    350          }
    351          

   \                                 In segment CODE, align 4, keep-with-next
    352          void IOUnitZBAna::SendToIO(U16 Command, void* Data, U16 Size, bool RequestAck)
    353          {
   \                     ??SendToIO:
   \   00000000   04402DE9           PUSH     {R2,LR}
   \   00000004   0CD04DE2           SUB      SP,SP,#+12
   \   00000008   1420DDE5           LDRB     R2,[SP, #+20]
    354              NetPacket Packet;
    355              Packet.Command    = Command;
   \   0000000C   B010CDE1           STRH     R1,[SP, #+0]
    356              Packet.RxAddress  = IOAddress;
   \   00000010   A0C190E5           LDR      R12,[R0, #+416]
    357              Packet.RxTypeId   = DEVICE_ZBANA;
    358              Packet.RequestAck = RequestAck;
   \   00000014   0620CDE5           STRB     R2,[SP, #+6]
   \   00000018   05C0CDE5           STRB     R12,[SP, #+5]
   \   0000001C   11C0A0E3           MOV      R12,#+17
   \   00000020   04C0CDE5           STRB     R12,[SP, #+4]
    359              Packet.Size       = Size;
   \   00000024   B230CDE1           STRH     R3,[SP, #+2]
    360              Packet.Data       = Data;
   \   00000028   0010A0E3           MOV      R1,#+0
   \   0000002C   07208DE2           ADD      R2,SP,#+7
   \                     ??SendToIO_1:
   \   00000030   0C308DE2           ADD      R3,SP,#+12
   \   00000034   0330D1E7           LDRB     R3,[R1, +R3]
   \   00000038   0230C1E7           STRB     R3,[R1, +R2]
   \   0000003C   011081E2           ADD      R1,R1,#+1
   \   00000040   040051E3           CMP      R1,#+4
   \   00000044   F9FFFFBA           BLT      ??SendToIO_1
    361              SendPacket(Packet);
   \   00000048   0D10A0E1           MOV      R1,SP
   \   0000004C   ........           _BLF     ??SendPacket,??SendPacket??rA
    362          }
   \   00000050   0F40BDE8           POP      {R0-R3,LR}
   \   00000054   1EFF2FE1           BX       LR               ;; return
    363          
    364          

   \                                 In segment CODE, align 4, keep-with-next
    365          void IOUnitZBAna::PowerOn(void)
    366          {
   \                     ??PowerOn:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0040A0E1           MOV      R4,R0
    367                  #ifdef S2TXU
    368              SendToIO(CMD_SND_ANA_SETUP,&PowerStatus,sizeof(PowerStatus),false);
   \   00000008   0000A0E3           MOV      R0,#+0
   \   0000000C   01002DE9           PUSH     {R0}
   \   00000010   A4C094E5           LDR      R12,[R4, #+164]
   \   00000014   0230A0E3           MOV      R3,#+2
   \   00000018   8CC09CE5           LDR      R12,[R12, #+140]
   \   0000001C   5C2F84E2           ADD      R2,R4,#+368
   \   00000020   4B1EA0E3           MOV      R1,#+1200
   \   00000024   0400A0E1           MOV      R0,R4
   \   00000028   0FE0A0E1           MOV      LR,PC
   \   0000002C   1CFF2FE1           BX       R12
    369              PowerOnTime = RunningTime+POWER_ON_ZBANA_START_DELAY;
   \   00000030   ........           LDR      R0,??DataTable12  ;; RunningTime
   \   00000034   000090E5           LDR      R0,[R0, #+0]
   \   00000038   050080E2           ADD      R0,R0,#+5
   \   0000003C   6C0184E5           STR      R0,[R4, #+364]
    370                  #endif
    371          }
   \   00000040                      REQUIRE ?Subroutine21
   \   00000040                      ;; // Fall through to label ?Subroutine21

   \                                 In segment CODE, align 4, keep-with-next
   \                     ?Subroutine21:
   \   00000000   1140BDE8           POP      {R0,R4,LR}
   \   00000004   1EFF2FE1           BX       LR               ;; return
    372          

   \                                 In segment CODE, align 4, keep-with-next
    373          void IOUnitZBAna::RequestSetup(void)
    374          {
   \                     ??RequestSetup:
   \   00000000   00402DE9           PUSH     {LR}
   \   00000004   00C0A0E1           MOV      R12,R0
    375                  #ifdef S2TXU
    376              SendToIO(CMD_REQ_ANA_SETUP,NULL,0,false);
   \   00000008   0000A0E3           MOV      R0,#+0
   \   0000000C   01002DE9           PUSH     {R0}
   \   00000010   0020A0E1           MOV      R2,R0
   \   00000014   0C00A0E1           MOV      R0,R12
   \   00000018   A4C09CE5           LDR      R12,[R12, #+164]
   \   0000001C   0030A0E3           MOV      R3,#+0
   \   00000020   8CC09CE5           LDR      R12,[R12, #+140]
   \   00000024   BA10A0E3           MOV      R1,#+186
   \   00000028   401E81E3           ORR      R1,R1,#0x400
   \   0000002C   0FE0A0E1           MOV      LR,PC
   \   00000030   1CFF2FE1           BX       R12
    377                  #endif
    378          }
   \   00000034   0140BDE8           POP      {R0,LR}
   \   00000038   1EFF2FE1           BX       LR               ;; return
    379          
    380          
    381          

   \                                 In segment CODE, align 4, keep-with-next
    382          void IOUnitZBAna::HandleIO(int Delay)
    383          {
   \                     ??HandleIO:
   \   00000000   F0412DE9           PUSH     {R4-R8,LR}
   \   00000004   0040A0E1           MOV      R4,R0
    384              time_t MyCurentTime = RunningTime;
   \   00000008   ........           LDR      R0,??DataTable12  ;; RunningTime
    385              if ( Restart ) {
   \   0000000C   A570A0E3           MOV      R7,#+165
   \   00000010   008090E5           LDR      R8,[R0, #+0]
   \   00000014   407F87E3           ORR      R7,R7,#0x100
   \   00000018   0400D7E7           LDRB     R0,[R7, +R4]
   \   0000001C   0150A0E1           MOV      R5,R1
   \   00000020   000050E3           CMP      R0,#+0
   \   00000024   1500000A           BEQ      ??HandleIO_1
    386                  Request(CMD_REQ_STATUS);
   \   00000028   FA1FA0E3           MOV      R1,#+1000
   \   0000002C   0400A0E1           MOV      R0,R4
   \   00000030   ........           _BLF     ??Request,??Request??rA
    387                  if ( ANPRO10_IO_Receive() ) {
   \   00000034   1E10A0E3           MOV      R1,#+30
   \   00000038   0400A0E1           MOV      R0,R4
   \   0000003C   ........           _BLF     ??ANPRO10_IO_Receive,??ANPRO10_IO_Receive??rA
   \   00000040   000050E3           CMP      R0,#+0
   \   00000044   4400000A           BEQ      ??HandleIO_2
    388                      SetFilters();
   \   00000048   0400A0E1           MOV      R0,R4
   \   0000004C   ........           BL       ??SetFilters
    389                      TSN_Delay(Delay);
   \   00000050   0500A0E1           MOV      R0,R5
   \   00000054   ........           _BLF     OS_Delay,??OS_Delay??rA
    390                      PowerOn();
   \   00000058   A41094E5           LDR      R1,[R4, #+164]
   \   0000005C   0400A0E1           MOV      R0,R4
   \   00000060   841091E5           LDR      R1,[R1, #+132]
   \   00000064   0FE0A0E1           MOV      LR,PC
   \   00000068   11FF2FE1           BX       R1
    391                      TSN_Delay(Delay);
   \   0000006C   0500A0E1           MOV      R0,R5
   \   00000070   ........           _BLF     OS_Delay,??OS_Delay??rA
    392                      Restart = false;
   \   00000074   0000A0E3           MOV      R0,#+0
   \   00000078   0400C7E7           STRB     R0,[R7, +R4]
   \   0000007C   360000EA           B        ??HandleIO_2
    393                  }
    394              } else if ( MyCurentTime > (PowerOnTime) ) {
   \                     ??HandleIO_1:
   \   00000080   6C0194E5           LDR      R0,[R4, #+364]
   \   00000084   080050E1           CMP      R0,R8
   \   00000088   330000AA           BGE      ??HandleIO_2
    395                  Request(CMD_REQ_ANA_DATA);
   \   0000008C   D810A0E3           MOV      R1,#+216
   \   00000090   401E81E3           ORR      R1,R1,#0x400
   \   00000094   0400A0E1           MOV      R0,R4
   \   00000098   ........           _BLF     ??Request,??Request??rA
    396                  ANPRO10_IO_Receive();
   \   0000009C   1E10A0E3           MOV      R1,#+30
   \   000000A0   0400A0E1           MOV      R0,R4
   \   000000A4   ........           _BLF     ??ANPRO10_IO_Receive,??ANPRO10_IO_Receive??rA
    397                  TSN_Delay(Delay);
   \   000000A8   0500A0E1           MOV      R0,R5
   \   000000AC   ........           _BLF     OS_Delay,??OS_Delay??rA
    398                  if ( MyCurentTime > ReqStatusTime ) {
   \   000000B0   5E0FA0E3           MOV      R0,#+376
   \   000000B4   041090E7           LDR      R1,[R0, +R4]
   \   000000B8   080051E1           CMP      R1,R8
   \   000000BC   260000AA           BGE      ??HandleIO_2
    399                      ReqStatusTime = MyCurentTime+IO_STATUS_REQ_DELAY;
   \   000000C0   0F1088E2           ADD      R1,R8,#+15
   \   000000C4   041080E7           STR      R1,[R0, +R4]
    400                      Request(CMD_REQ_INT_DATA);
   \   000000C8   4210A0E3           MOV      R1,#+66
   \   000000CC   401E81E3           ORR      R1,R1,#0x400
   \   000000D0   0400A0E1           MOV      R0,R4
   \   000000D4   ........           _BLF     ??Request,??Request??rA
    401                      ANPRO10_IO_Receive();
   \   000000D8   1E10A0E3           MOV      R1,#+30
   \   000000DC   0400A0E1           MOV      R0,R4
   \   000000E0   ........           _BLF     ??ANPRO10_IO_Receive,??ANPRO10_IO_Receive??rA
    402                      TSN_Delay(Delay);
   \   000000E4   0500A0E1           MOV      R0,R5
   \   000000E8   ........           _BLF     OS_Delay,??OS_Delay??rA
    403                      Request(CMD_REQ_STATUS);
   \   000000EC   FA1FA0E3           MOV      R1,#+1000
   \   000000F0   0400A0E1           MOV      R0,R4
   \   000000F4   ........           _BLF     ??Request,??Request??rA
    404                      ANPRO10_IO_Receive();
   \   000000F8   1E10A0E3           MOV      R1,#+30
   \   000000FC   0400A0E1           MOV      R0,R4
   \   00000100   ........           _BLF     ??ANPRO10_IO_Receive,??ANPRO10_IO_Receive??rA
    405                      TSN_Delay(Delay);
   \   00000104   0500A0E1           MOV      R0,R5
   \   00000108   ........           _BLF     OS_Delay,??OS_Delay??rA
    406                      RequestSetup();
   \   0000010C   0400A0E1           MOV      R0,R4
   \   00000110   ........           BL       ??RequestSetup
    407                      ANPRO10_IO_Receive();
   \   00000114   1E10A0E3           MOV      R1,#+30
   \   00000118   0400A0E1           MOV      R0,R4
   \   0000011C   ........           _BLF     ??ANPRO10_IO_Receive,??ANPRO10_IO_Receive??rA
    408                      if ( ( !ActiveAlarms )
    409                           &&  (     (  ( UnitProgVersion != VERSION_ANZB_PROG ) && ( UnitProgVersion < 100 ))
    410                                     || ( ComVersion  != VERSION_ANZB_COMP )
    411                                     || ( StoreVersion!= VERSION_ANZB_EEPROM) ) ) {
   \   00000120   380094E5           LDR      R0,[R4, #+56]
   \   00000124   000050E3           CMP      R0,#+0
   \   00000128   0B00001A           BNE      ??HandleIO_2
   \   0000012C   5B01D4E5           LDRB     R0,[R4, #+347]
   \   00000130   280050E3           CMP      R0,#+40
   \   00000134   0100000A           BEQ      ??HandleIO_3
   \   00000138   640050E3           CMP      R0,#+100
   \   0000013C   0400003A           BCC      ??HandleIO_4
   \                     ??HandleIO_3:
   \   00000140   5C01D4E5           LDRB     R0,[R4, #+348]
   \   00000144   010050E3           CMP      R0,#+1
   \   00000148   5D01D405           LDRBEQ   R0,[R4, #+349]
   \   0000014C   02005003           CMPEQ    R0,#+2
   \   00000150   0100000A           BEQ      ??HandleIO_2
    412                          UpdateProgram();
   \                     ??HandleIO_4:
   \   00000154   0400A0E1           MOV      R0,R4
   \   00000158   ........           _BLF     ??UpdateProgram,??UpdateProgram??rA
    413                      }
    414                  }
    415              }
    416              ActiveAlarms = CheckAlarms(AlarmSet);
   \                     ??HandleIO_2:
   \   0000015C   0010A0E3           MOV      R1,#+0
   \   00000160   E40084E2           ADD      R0,R4,#+228
   \   00000164   ........           _BLF     ??CheckAlarms,??CheckAlarms??rA
   \   00000168   380084E5           STR      R0,[R4, #+56]
    417              SetHWFailure(bool(ActiveAlarms));
   \   0000016C   380094E5           LDR      R0,[R4, #+56]
   \   00000170   000050E3           CMP      R0,#+0
   \   00000174   0110A013           MOVNE    R1,#+1
   \   00000178   0010A003           MOVEQ    R1,#+0
   \   0000017C   0400A0E1           MOV      R0,R4
   \   00000180   ........           BL       ??SetHWFailure
    418              SendData();
   \   00000184   A42094E5           LDR      R2,[R4, #+164]
   \   00000188   6510A0E3           MOV      R1,#+101
   \   0000018C   402092E5           LDR      R2,[R2, #+64]
   \   00000190   0400A0E1           MOV      R0,R4
   \   00000194   0FE0A0E1           MOV      LR,PC
   \   00000198   12FF2FE1           BX       R2
    419              TSN_Delay(Delay);
   \   0000019C   0500A0E1           MOV      R0,R5
   \   000001A0   ........           _BLF     OS_Delay,??OS_Delay??rA
    420          }
   \   000001A4                      REQUIRE ?Subroutine23
   \   000001A4                      ;; // Fall through to label ?Subroutine23
    421          
    422          

   \                                 In segment CODE, align 4, keep-with-next
    423          void IOUnitZBAna::SetFilters(void)
    424          {
   \                     ??SetFilters:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   1CD04DE2           SUB      SP,SP,#+28
   \   00000008   0040A0E1           MOV      R4,R0
    425              U8 Filters[MAX_AN_ZBANA_CHANNELS];
    426          
    427              for ( int i=0; i < MAX_AN_ZBANA_CHANNELS; i++ ) {
   \   0000000C   0050A0E3           MOV      R5,#+0
    428                  if ( IOComponent[i] ) {
   \                     ??SetFilters_1:
   \   00000010   051184E0           ADD      R1,R4,R5, LSL #+2
   \   00000014   10008DE2           ADD      R0,SP,#+16
   \   00000018   006085E0           ADD      R6,R5,R0
   \   0000001C   F40191E5           LDR      R0,[R1, #+500]
   \   00000020   000050E3           CMP      R0,#+0
   \   00000024   0400000A           BEQ      ??SetFilters_2
    429                      Filters[i] = IOComponent[i]->GetFilter();
   \   00000028   A41090E5           LDR      R1,[R0, #+164]
   \   0000002C   5C1091E5           LDR      R1,[R1, #+92]
   \   00000030   0FE0A0E1           MOV      LR,PC
   \   00000034   11FF2FE1           BX       R1
   \   00000038   000000EA           B        ??SetFilters_3
    430                  } else {
    431                      Filters[i] = FILTER_DEFAULT;
   \                     ??SetFilters_2:
   \   0000003C   0100A0E3           MOV      R0,#+1
   \                     ??SetFilters_3:
   \   00000040   0000C6E5           STRB     R0,[R6, #+0]
    432                  }
    433              }
   \   00000044   015085E2           ADD      R5,R5,#+1
   \   00000048   0C0055E3           CMP      R5,#+12
   \   0000004C   EFFFFFBA           BLT      ??SetFilters_1
    434              NetPacket Packet;
    435              Packet.Command    = CMD_SND_ANA_FILTER;
   \   00000050   C410A0E3           MOV      R1,#+196
   \   00000054   401E81E3           ORR      R1,R1,#0x400
   \   00000058   B010CDE1           STRH     R1,[SP, #+0]
    436              Packet.RxAddress  = IOAddress;
   \   0000005C   A01194E5           LDR      R1,[R4, #+416]
    437              Packet.RxTypeId   = DEVICE_ZBANA;
    438              Packet.RequestAck = 0;
    439              Packet.Size       = sizeof(Filters);
    440              Packet.Data       = (U8*)Filters;
   \   00000060   0000A0E3           MOV      R0,#+0
   \   00000064   0510CDE5           STRB     R1,[SP, #+5]
   \   00000068   1110A0E3           MOV      R1,#+17
   \   0000006C   0410CDE5           STRB     R1,[SP, #+4]
   \   00000070   0010A0E3           MOV      R1,#+0
   \   00000074   0610CDE5           STRB     R1,[SP, #+6]
   \   00000078   0C10A0E3           MOV      R1,#+12
   \   0000007C   B210CDE1           STRH     R1,[SP, #+2]
   \   00000080   10108DE2           ADD      R1,SP,#+16
   \   00000084   0C108DE5           STR      R1,[SP, #+12]
   \   00000088   07108DE2           ADD      R1,SP,#+7
   \                     ??SetFilters_4:
   \   0000008C   0C208DE2           ADD      R2,SP,#+12
   \   00000090   0220D0E7           LDRB     R2,[R0, +R2]
   \   00000094   0120C0E7           STRB     R2,[R0, +R1]
   \   00000098   010080E2           ADD      R0,R0,#+1
   \   0000009C   040050E3           CMP      R0,#+4
   \   000000A0   F9FFFFBA           BLT      ??SetFilters_4
    441              SendPacket(Packet);
   \   000000A4   0D10A0E1           MOV      R1,SP
   \   000000A8   0400A0E1           MOV      R0,R4
   \   000000AC   ........           _BLF     ??SendPacket,??SendPacket??rA
    442          }
   \   000000B0                      REQUIRE ?Subroutine20
   \   000000B0                      ;; // Fall through to label ?Subroutine20
    443          
    444              #endif

   \                                 In segment CODE, align 4, keep-with-next
    445          int IOUnitZBAna::ReceiveData(U8* data)
    446          {
   \                     ??ReceiveData:
   \   00000000   13002DE9           PUSH     {R0,R1,R4}
   \   00000004   0130D1E5           LDRB     R3,[R1, #+1]
   \   00000008   00C0D1E5           LDRB     R12,[R1, #+0]
   \   0000000C   542F80E2           ADD      R2,R0,#+336
   \   00000010   03348CE1           ORR      R3,R12,R3, LSL #+8
   \   00000014   653053E2           SUBS     R3,R3,#+101
   \   00000018   0200000A           BEQ      ??ReceiveData_1
   \   0000001C   013053E2           SUBS     R3,R3,#+1
   \   00000020   2A00000A           BEQ      ??ReceiveData_2
   \   00000024   500000EA           B        ??ReceiveData_3
    447              int ErrorStatus = E_OK;
    448              ANPRO10_CommandHeading *pCH = (ANPRO10_CommandHeading*)data;
    449              switch ( pCH->CommandNo ) {
    450              case CMD_GENERIC_REALTIME_DATA:
    451                  {
    452                      ANPRO10_COMMAND_2601  *pData = (ANPRO10_COMMAND_2601*) data;
    453                      PowerStatus   = pData->PowerStatus;
   \                     ??ReceiveData_1:
   \   00000028   1130D1E5           LDRB     R3,[R1, #+17]
   \   0000002C   10C0D1E5           LDRB     R12,[R1, #+16]
   \   00000030   03348CE1           ORR      R3,R12,R3, LSL #+8
   \   00000034   B032C2E1           STRH     R3,[R2, #+32]
    454                      FailCnt      = pData->FailCnt;
   \   00000038   0F30D1E5           LDRB     R3,[R1, #+15]
   \   0000003C   0EC0D1E5           LDRB     R12,[R1, #+14]
   \   00000040   03348CE1           ORR      R3,R12,R3, LSL #+8
   \   00000044   0DC0D1E5           LDRB     R12,[R1, #+13]
   \   00000048   03348CE1           ORR      R3,R12,R3, LSL #+8
   \   0000004C   0CC0D1E5           LDRB     R12,[R1, #+12]
   \   00000050   03348CE1           ORR      R3,R12,R3, LSL #+8
   \   00000054   043082E5           STR      R3,[R2, #+4]
    455                      FailCntTotal = pData->FailCntTotal;
   \   00000058   0B30D1E5           LDRB     R3,[R1, #+11]
   \   0000005C   0AC0D1E5           LDRB     R12,[R1, #+10]
   \   00000060   03348CE1           ORR      R3,R12,R3, LSL #+8
   \   00000064   09C0D1E5           LDRB     R12,[R1, #+9]
   \   00000068   03348CE1           ORR      R3,R12,R3, LSL #+8
   \   0000006C   08C0D1E5           LDRB     R12,[R1, #+8]
   \   00000070   03348CE1           ORR      R3,R12,R3, LSL #+8
   \   00000074   003082E5           STR      R3,[R2, #+0]
    456                      for ( int i=0; i < MAX_AN_ZBANA_CHANNELS; i++ ) {
   \   00000078   0020A0E3           MOV      R2,#+0
   \   0000007C   0DC0A0E1           MOV      R12,SP
    457                          mAValues[i] = pData->mAValues[i];
   \                     ??ReceiveData_4:
   \   00000080   0030A0E3           MOV      R3,#+0
   \                     ??ReceiveData_5:
   \   00000084   024181E0           ADD      R4,R1,R2, LSL #+2
   \   00000088   2A4084E2           ADD      R4,R4,#+42
   \   0000008C   0440D3E7           LDRB     R4,[R3, +R4]
   \   00000090   0C40C3E7           STRB     R4,[R3, +R12]
   \   00000094   013083E2           ADD      R3,R3,#+1
   \   00000098   040053E3           CMP      R3,#+4
   \   0000009C   F8FFFFBA           BLT      ??ReceiveData_5
   \   000000A0   00409DE5           LDR      R4,[SP, #+0]
   \   000000A4   023180E0           ADD      R3,R0,R2, LSL #+2
   \   000000A8   C04183E5           STR      R4,[R3, #+448]
    458                          Status[i]  = pData->Status[i];
   \   000000AC   014082E0           ADD      R4,R2,R1
   \   000000B0   1E40D4E5           LDRB     R4,[R4, #+30]
   \   000000B4   003082E0           ADD      R3,R2,R0
    459                      }
   \   000000B8   012082E2           ADD      R2,R2,#+1
   \   000000BC   B441C3E5           STRB     R4,[R3, #+436]
   \   000000C0   0C0052E3           CMP      R2,#+12
   \   000000C4   EDFFFFBA           BLT      ??ReceiveData_4
    460                      ErrorStatus =  E_OK;
   \                     ??ReceiveData_6:
   \   000000C8   0000A0E3           MOV      R0,#+0
   \   000000CC   270000EA           B        ??ReceiveData_7
    461                  }
    462                  break;
    463              case CMD_GENERIC_STATIC_DATA :
    464                  {
    465                      ANPRO10_COMMAND_2602  *pData = (ANPRO10_COMMAND_2602*) data;
    466                      CardChannel      = pData->CardChannel;
   \                     ??ReceiveData_2:
   \   000000D0   0800D1E5           LDRB     R0,[R1, #+8]
   \   000000D4   0800C2E5           STRB     R0,[R2, #+8]
    467                      CardId           = pData->CardId;
   \   000000D8   0900D1E5           LDRB     R0,[R1, #+9]
   \   000000DC   0900C2E5           STRB     R0,[R2, #+9]
    468                      CardAddress      = pData->CardAddress;
   \   000000E0   0A00D1E5           LDRB     R0,[R1, #+10]
   \   000000E4   0A00C2E5           STRB     R0,[R2, #+10]
    469                      UnitProgVersion  = pData->UnitProgVersion;
   \   000000E8   0B00D1E5           LDRB     R0,[R1, #+11]
   \   000000EC   0B00C2E5           STRB     R0,[R2, #+11]
    470                      ComVersion       = pData->ComVersion;
   \   000000F0   0C00D1E5           LDRB     R0,[R1, #+12]
   \   000000F4   0C00C2E5           STRB     R0,[R2, #+12]
    471                      StoreVersion     = pData->StoreVersion;
   \   000000F8   0D00D1E5           LDRB     R0,[R1, #+13]
   \   000000FC   0D00C2E5           STRB     R0,[R2, #+13]
    472                      RxBufSize        = pData->RxBufSize;
   \   00000100   0F00D1E5           LDRB     R0,[R1, #+15]
   \   00000104   0E30D1E5           LDRB     R3,[R1, #+14]
   \   00000108   000483E1           ORR      R0,R3,R0, LSL #+8
   \   0000010C   BE00C2E1           STRH     R0,[R2, #+14]
    473                      TxBufSize        = pData->TxBufSize;
   \   00000110   1100D1E5           LDRB     R0,[R1, #+17]
   \   00000114   1030D1E5           LDRB     R3,[R1, #+16]
   \   00000118   000483E1           ORR      R0,R3,R0, LSL #+8
   \   0000011C   B001C2E1           STRH     R0,[R2, #+16]
    474                      ResetStatus      = pData->ResetStatus;
   \   00000120   1200D1E5           LDRB     R0,[R1, #+18]
   \   00000124   5400C2E5           STRB     R0,[R2, #+84]
    475                      ProgamTypeRunning= pData->ProgamTypeRunning;
   \   00000128   1300D1E5           LDRB     R0,[R1, #+19]
   \   0000012C   1200C2E5           STRB     R0,[R2, #+18]
    476                      TotalUnitRestart = pData->TotalUnitRestart;
   \   00000130   1500D1E5           LDRB     R0,[R1, #+21]
   \   00000134   1430D1E5           LDRB     R3,[R1, #+20]
   \   00000138   000483E1           ORR      R0,R3,R0, LSL #+8
   \   0000013C   B402C2E1           STRH     R0,[R2, #+36]
    477                      CardVoltage      = pData->CardVoltage;
   \   00000140   0000A0E3           MOV      R0,#+0
   \   00000144   04308DE2           ADD      R3,SP,#+4
   \                     ??ReceiveData_8:
   \   00000148   164081E2           ADD      R4,R1,#+22
   \   0000014C   0440D0E7           LDRB     R4,[R0, +R4]
   \   00000150   0340C0E7           STRB     R4,[R0, +R3]
   \   00000154   010080E2           ADD      R0,R0,#+1
   \   00000158   040050E3           CMP      R0,#+4
   \   0000015C   F9FFFFBA           BLT      ??ReceiveData_8
   \   00000160   04009DE5           LDR      R0,[SP, #+4]
   \   00000164   140082E5           STR      R0,[R2, #+20]
   \   00000168   D6FFFFEA           B        ??ReceiveData_6
    478                      ErrorStatus =  E_OK;
    479                  }
    480                  break;
    481              default:
    482                  ErrorStatus = E_UNKNOWN_COMMAND;
   \                     ??ReceiveData_3:
   \   0000016C   0100A0E3           MOV      R0,#+1
    483                  break;
    484              }
    485              return(ErrorStatus);
   \                     ??ReceiveData_7:
   \   00000170   1600BDE8           POP      {R1,R2,R4}
   \   00000174   1EFF2FE1           BX       LR               ;; return
    486          }
    487          

   \                                 In segment CODE, align 4, keep-with-next
    488          int IOUnitZBAna::SendData(U16 cmd)
    489          {
   \                     ??SendData:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   80D04DE2           SUB      SP,SP,#+128
    490              int ErrorStatus = E_OK;
    491              switch ( cmd ) {
   \   00000008   9C2080E2           ADD      R2,R0,#+156
   \   0000000C   0E30A0E3           MOV      R3,#+14
   \   00000010   FFC0A0E3           MOV      R12,#+255
   \   00000014   0040A0E3           MOV      R4,#+0
   \   00000018   651051E2           SUBS     R1,R1,#+101
   \   0000001C   0200000A           BEQ      ??SendData_1
   \   00000020   011051E2           SUBS     R1,R1,#+1
   \   00000024   3700000A           BEQ      ??SendData_2
   \   00000028   620000EA           B        ??SendData_3
    492              case CMD_GENERIC_REALTIME_DATA:
    493                  {
    494                      QueueANPRO10_COMMAND_2601 Cmd;
    495                      Cmd.TxInfo.Port        = NULL;
   \                     ??SendData_1:
   \   0000002C   20408DE5           STR      R4,[SP, #+32]
    496                      Cmd.TxInfo.rxAddr      = DEVICE_BROADCAST_ADDR;
   \   00000030   24C0CDE5           STRB     R12,[SP, #+36]
    497                      Cmd.TxInfo.rxId        = DEVICE_BROADCAST_TXU;
   \   00000034   2530CDE5           STRB     R3,[SP, #+37]
    498          
    499                      Cmd.Data.ObjectId      = IDNumber;
   \   00000038   001092E5           LDR      R1,[R2, #+0]
    500                      Cmd.Data.ndb           = sizeof(Cmd)-sizeof(QueueANPRO10_CommandHeading);
   \   0000003C   5630A0E3           MOV      R3,#+86
   \   00000040   2A10CDE5           STRB     R1,[SP, #+42]
   \   00000044   2114A0E1           LSR      R1,R1,#+8
   \   00000048   2B10CDE5           STRB     R1,[SP, #+43]
   \   0000004C   2114A0E1           LSR      R1,R1,#+8
   \   00000050   2C10CDE5           STRB     R1,[SP, #+44]
   \   00000054   2114A0E1           LSR      R1,R1,#+8
   \   00000058   2D10CDE5           STRB     R1,[SP, #+45]
   \   0000005C   B832CDE1           STRH     R3,[SP, #+40]
    501                      Cmd.Data.CommandNo     = CMD_GENERIC_REALTIME_DATA;
   \   00000060   6530A0E3           MOV      R3,#+101
   \   00000064   B632CDE1           STRH     R3,[SP, #+38]
    502                      Cmd.Data.PowerStatus   = PowerStatus;
   \   00000068   B43DD2E1           LDRH     R3,[R2, #+212]
   \   0000006C   B633CDE1           STRH     R3,[SP, #+54]
    503                      Cmd.Data.FailCnt      = FailCnt;
   \   00000070   B81092E5           LDR      R1,[R2, #+184]
   \   00000074   3210CDE5           STRB     R1,[SP, #+50]
   \   00000078   2114A0E1           LSR      R1,R1,#+8
   \   0000007C   3310CDE5           STRB     R1,[SP, #+51]
   \   00000080   2114A0E1           LSR      R1,R1,#+8
   \   00000084   3410CDE5           STRB     R1,[SP, #+52]
   \   00000088   2114A0E1           LSR      R1,R1,#+8
   \   0000008C   3510CDE5           STRB     R1,[SP, #+53]
    504                      Cmd.Data.FailCntTotal = FailCntTotal;
   \   00000090   B41092E5           LDR      R1,[R2, #+180]
   \   00000094   2E10CDE5           STRB     R1,[SP, #+46]
   \   00000098   2114A0E1           LSR      R1,R1,#+8
   \   0000009C   2F10CDE5           STRB     R1,[SP, #+47]
   \   000000A0   2114A0E1           LSR      R1,R1,#+8
   \   000000A4   3010CDE5           STRB     R1,[SP, #+48]
   \   000000A8   2114A0E1           LSR      R1,R1,#+8
   \   000000AC   3110CDE5           STRB     R1,[SP, #+49]
    505                      for ( int i=0; i < MAX_AN_ZBANA_CHANNELS; i++ ) {
   \   000000B0   0010A0E3           MOV      R1,#+0
    506                          Cmd.Data.mAValues[i] = mAValues[i];
   \                     ??SendData_4:
   \   000000B4   013180E0           ADD      R3,R0,R1, LSL #+2
   \   000000B8   C03193E5           LDR      R3,[R3, #+448]
   \   000000BC   20208DE2           ADD      R2,SP,#+32
   \   000000C0   012182E0           ADD      R2,R2,R1, LSL #+2
   \   000000C4   303082E5           STR      R3,[R2, #+48]
    507                          Cmd.Data.Status[i]   = Status[i];
   \   000000C8   003081E0           ADD      R3,R1,R0
   \   000000CC   B431D3E5           LDRB     R3,[R3, #+436]
   \   000000D0   20208DE2           ADD      R2,SP,#+32
   \   000000D4   022081E0           ADD      R2,R1,R2
   \   000000D8   2430C2E5           STRB     R3,[R2, #+36]
    508                      }
   \   000000DC   011081E2           ADD      R1,R1,#+1
   \   000000E0   0C0051E3           CMP      R1,#+12
   \   000000E4   F2FFFFBA           BLT      ??SendData_4
    509                      bool sent = ANPRO10SendNormal(&Cmd);
    510                      if ( !sent )
   \   000000E8   20008DE2           ADD      R0,SP,#+32
   \   000000EC   ........           _BLF     ??ANPRO10SendNormal,??ANPRO10SendNormal??rA
   \   000000F0   000050E3           CMP      R0,#+0
   \   000000F4   0100001A           BNE      ??SendData_5
    511                          ErrorStatus =  E_QUEUE_FULL;
   \                     ??SendData_6:
   \   000000F8   0300A0E3           MOV      R0,#+3
   \   000000FC   2E0000EA           B        ??SendData_7
    512                      else
    513                          ErrorStatus =  E_OK;
   \                     ??SendData_5:
   \   00000100   0000A0E3           MOV      R0,#+0
   \   00000104   2C0000EA           B        ??SendData_7
    514                  }
    515                  break;
    516              case CMD_GENERIC_STATIC_DATA:
    517                  {
    518                      QueueANPRO10_COMMAND_2602 Cmd;
    519                      Cmd.TxInfo.Port           = NULL;
   \                     ??SendData_2:
   \   00000108   00408DE5           STR      R4,[SP, #+0]
    520                      Cmd.TxInfo.rxAddr         = DEVICE_BROADCAST_ADDR;
   \   0000010C   04C0CDE5           STRB     R12,[SP, #+4]
    521                      Cmd.TxInfo.rxId           = DEVICE_BROADCAST_TXU;
   \   00000110   0530CDE5           STRB     R3,[SP, #+5]
    522                      Cmd.Data.ObjectId         = IDNumber;
   \   00000114   000092E5           LDR      R0,[R2, #+0]
    523                      Cmd.Data.ndb              = sizeof(Cmd)-sizeof(QueueANPRO10_CommandHeading);
   \   00000118   1610A0E3           MOV      R1,#+22
   \   0000011C   0A00CDE5           STRB     R0,[SP, #+10]
   \   00000120   2004A0E1           LSR      R0,R0,#+8
   \   00000124   0B00CDE5           STRB     R0,[SP, #+11]
   \   00000128   2004A0E1           LSR      R0,R0,#+8
   \   0000012C   0C00CDE5           STRB     R0,[SP, #+12]
   \   00000130   2004A0E1           LSR      R0,R0,#+8
   \   00000134   0D00CDE5           STRB     R0,[SP, #+13]
   \   00000138   B810CDE1           STRH     R1,[SP, #+8]
    524                      Cmd.Data.CommandNo        = CMD_GENERIC_STATIC_DATA;
   \   0000013C   6610A0E3           MOV      R1,#+102
   \   00000140   B610CDE1           STRH     R1,[SP, #+6]
    525                      Cmd.Data.CardChannel      = CardChannel;
   \   00000144   BC10D2E5           LDRB     R1,[R2, #+188]
    526                      Cmd.Data.CardId           = CardId;
    527                      Cmd.Data.CardAddress      = CardAddress;
    528                      Cmd.Data.UnitProgVersion  = UnitProgVersion;
    529                      Cmd.Data.ComVersion       = ComVersion;
    530                      Cmd.Data.StoreVersion     = StoreVersion;
    531                      Cmd.Data.RxBufSize        = RxBufSize;
    532                      Cmd.Data.TxBufSize        = TxBufSize;
    533                      Cmd.Data.ResetStatus      = ResetStatus;
    534                      Cmd.Data.ProgamTypeRunning= ProgamTypeRunning;
    535                      Cmd.Data.TotalUnitRestart =  TotalUnitRestart;
    536                      Cmd.Data.CardVoltage      = CardVoltage;
    537                      bool sent = ANPRO10SendNormal(&Cmd);
    538                      if ( !sent )
   \   00000148   0D00A0E1           MOV      R0,SP
   \   0000014C   0E10CDE5           STRB     R1,[SP, #+14]
   \   00000150   BD10D2E5           LDRB     R1,[R2, #+189]
   \   00000154   0F10CDE5           STRB     R1,[SP, #+15]
   \   00000158   BE10D2E5           LDRB     R1,[R2, #+190]
   \   0000015C   1010CDE5           STRB     R1,[SP, #+16]
   \   00000160   BF10D2E5           LDRB     R1,[R2, #+191]
   \   00000164   1110CDE5           STRB     R1,[SP, #+17]
   \   00000168   C010D2E5           LDRB     R1,[R2, #+192]
   \   0000016C   1210CDE5           STRB     R1,[SP, #+18]
   \   00000170   C110D2E5           LDRB     R1,[R2, #+193]
   \   00000174   1310CDE5           STRB     R1,[SP, #+19]
   \   00000178   B21CD2E1           LDRH     R1,[R2, #+194]
   \   0000017C   B411CDE1           STRH     R1,[SP, #+20]
   \   00000180   B41CD2E1           LDRH     R1,[R2, #+196]
   \   00000184   B611CDE1           STRH     R1,[SP, #+22]
   \   00000188   0811D2E5           LDRB     R1,[R2, #+264]
   \   0000018C   1810CDE5           STRB     R1,[SP, #+24]
   \   00000190   C610D2E5           LDRB     R1,[R2, #+198]
   \   00000194   1910CDE5           STRB     R1,[SP, #+25]
   \   00000198   B81DD2E1           LDRH     R1,[R2, #+216]
   \   0000019C   BA11CDE1           STRH     R1,[SP, #+26]
   \   000001A0   C81092E5           LDR      R1,[R2, #+200]
   \   000001A4   1C108DE5           STR      R1,[SP, #+28]
   \   000001A8   ........           _BLF     ??ANPRO10SendNormal,??ANPRO10SendNormal??rA
   \   000001AC   000050E3           CMP      R0,#+0
   \   000001B0   D2FFFF1A           BNE      ??SendData_5
    539                          ErrorStatus =  E_QUEUE_FULL;
   \   000001B4   CFFFFFEA           B        ??SendData_6
    540                      else
    541                          ErrorStatus =  E_OK;
    542                  }
    543                  break;
    544              default:
    545                  ErrorStatus =  E_UNKNOWN_COMMAND;
   \                     ??SendData_3:
   \   000001B8   0100A0E3           MOV      R0,#+1
    546                  break;
    547              }
    548              return(ErrorStatus);
   \                     ??SendData_7:
   \   000001BC   80D08DE2           ADD      SP,SP,#+128
   \   000001C0   1040BDE8           POP      {R4,LR}
   \   000001C4   1EFF2FE1           BX       LR               ;; return
    549          }
    550          #endif
    551          //-----------------------------------------------------------------------------

   \                                 In segment CODE, align 4, keep-with-next
    552          int IOUnitZBAna::GetRequestNumber(void)
    553          {
    554              return 1;
   \                     ??GetRequestNumber:
   \   00000000   0100A0E3           MOV      R0,#+1
   \   00000004   1EFF2FE1           BX       LR               ;; return
    555          }

   \                                 In segment DATA_ID, align 4, align-sorted
   \                     `?<Initializer for IOUnitZBAnaValueList>`:
   \   00000000   30010000ED00       DC32 304, 237, 1000, 379, 237, 4501, 24, 237, 4502, 380, 237, 4503, 381
   \              0000E8030000
   \              7B010000ED00
   \              000095110000
   \              18000000ED00
   \              000096110000
   \              7C010000ED00
   \              000097110000
   \              7D010000    
   \   00000034   ED0000009811       DC32 237, 4504, 382, 237, 4505, 383, 237, 4506, 384, 237, 4507, 385
   \              00007E010000
   \              ED0000009911
   \              00007F010000
   \              ED0000009A11
   \              000080010000
   \              ED0000009B11
   \              000081010000
   \   00000064   ED0000009F11       DC32 237, 4511, 386, 237, 4655, 387, 237, 4656, 388, 237, 4508, 389
   \              000082010000
   \              ED0000002F12
   \              000083010000
   \              ED0000003012
   \              000084010000
   \              ED0000009C11
   \              000085010000
   \   00000094   ED0000009D11       DC32 237, 4509
   \              0000        

   \                                 In segment DIFUNCT, align 4, keep-with-next, root
   \   00000000                      REQUIRE ?call_ctors
   \   00000000   ........           DC32    ??__sti__routine

   \                                 In segment DATA_C, align 4, align-sorted
   \   __vtbl_entry const __data IOUnitZBAna::__vtbl[37]
   \                     ??__vtbl:
   \   00000000   ............       DC32 `?~IOUnitZBAna`, ??WriteConfigToFile, ??LoadConfigFromFile
   \              ............
   \   0000000C   ............       DC32 ??MakeConfigString, ??LoadConfigString, ??RestoreSettings
   \              ............
   \   00000018   ............       DC32 ??GetName, ??FindPROStatus, ??GetFloatValue, ??GetValue
   \              ............
   \              ........    
   \   00000028   ............       DC32 ??GetStringValue, ??GetBitValue, ??PutValue, ??PutFloatValue
   \              ............
   \              ........    
   \   00000038   ............       DC32 ??PutBitValue, ??ReceiveData, ??SendData, ??StartTimer
   \              ............
   \              ........    
   \   00000048   ............       DC32 ??InputTimeout, ??GetValueInfoTable, ??GetServiceValueInfoTable
   \              ............
   \   00000054   ............       DC32 ??SetModifiedFlag, ??IsAvailableNewData, ??SortAnalogInputs
   \              ............
   \   00000060   ............       DC32 ??SaveSettings, ??Calculate, ??CreateAlarms, ??WriteXML
   \              ............
   \              ........    
   \   00000070   ............       DC32 ??LCWriteXML, ??RefreshData, ??IsStaticValue
   \              ............
   \   0000007C   ............       DC32 ??ANPRO10_IO_UnpackPacket, ??Add, ??PowerOn, ??HandleIO
   \              ............
   \              ........    
   \   0000008C   ............       DC32 ??SendToIO, ??GetRequestNumber
   \              ....        
   \   00000094   5A42414E413A       DC8 "ZBANA:"
   \              00          
   \   0000009B   00                 DC8 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "TCU ">`:
   \   00000000   5443552000         DC8 "TCU "
   \   00000005   000000             DC8 0, 0, 0
   \   00000008   20636F6D2D70       DC8 " com-port "
   \              6F72742000  
   \   00000013   00                 DC8 0
   \   00000014   4368616E6E65       DC8 "Channel "
   \              6C2000      
   \   0000001D   000000             DC8 0, 0, 0
   \   00000020   206F6E20494F       DC8 " on IO "
   \              2000        
   \   00000028   20616464722E       DC8 " addr."
   \              00          
   \   0000002F   00                 DC8 0
   \   00000030   0A4368616E6E       DC8 "\012Channel allredy used.\012 Try to set sensor for "
   \              656C20616C6C
   \              726564792075
   \              7365642E0A20
   \              54727920746F
   \              207365742073
   \              656E736F7220
   \              666F722000  
   \   0000005F   00                 DC8 0
   \   00000060   2E0A204E6F74       DC8 2EH, 0AH, 20H, 4EH, 6FH, 74H, 20H, 6CH
   \              206C        
   \   00000068   6567616C205A       DC8 65H, 67H, 61H, 6CH, 20H, 5AH, 42H, 41H
   \              4241        
   \   00000070   4E4120436861       DC8 4EH, 41H, 20H, 43H, 68H, 61H, 6EH, 6EH
   \              6E6E        
   \   00000078   656C2E0A5472       DC8 65H, 6CH, 2EH, 0AH, 54H, 72H, 79H, 20H
   \              7920        
   \   00000080   746F20736574       DC8 74H, 6FH, 20H, 73H, 65H, 74H, 20H, 73H
   \              2073        
   \   00000088   656E736F7220       DC8 65H, 6EH, 73H, 6FH, 72H, 20H, 66H, 6FH
   \              666F        
   \   00000090   722000             DC8 72H, 20H, 0
   \   00000093   00                 DC8 0

   \                                 In segment DATA_C, align 1, align-sorted
   \   00000000   2E0A00             DC8 ".\012"

   \                                 In segment DATA_C, align 1, align-sorted
   \   00000000   00                 DC8 ""

   \                                 In segment CODE, align 4, keep-with-next
   \   static __??Code32?? __intrinsic __code __interwork __atpcs void __sti__routine()
   \                     ??__sti__routine:
   \   00000000   11402DE9           PUSH     {R0,R4,LR}
   \   00000004   ........           LDR      R4,??DataTable5  ;; ??ObjectSet
   \   00000008   0110A0E3           MOV      R1,#+1
   \   0000000C   0D00A0E1           MOV      R0,SP
   \   00000010   ........           _BLF     __data_memzero,??__data_memzero??rA
   \   00000014   0400A0E1           MOV      R0,R4
   \   00000018   ........           _BLF     ??_Clear,??_Clear??rA
   \   0000001C   0000DDE5           LDRB     R0,[SP, #+0]
   \   00000020   1400C4E5           STRB     R0,[R4, #+20]
   \   00000024   04009FE5           LDR      R0,??__sti__routine_1  ;; ?_0
   \   00000028   ........           _BLF     __record_needed_destruction,??__record_needed_destruction??rA
   \   0000002C   ........           B        ?Subroutine21
   \                     ??__sti__routine_1:
   \   00000030   ........           DC32     ?_0

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs IOUnitZBAna &IOUnitZBAna::new IOUnitZBAna(PROIOComponent *, PRogramObject *)
   \                     `??new IOUnitZBAna`:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
   \   0000000C   890FA0E3           MOV      R0,#+548
   \   00000010   ........           _BLF     `??operator new`,`??operator new??rA`
   \   00000014   000050E3           CMP      R0,#+0
   \   00000018   0200000A           BEQ      `??new IOUnitZBAna_1`
   \   0000001C   0520A0E1           MOV      R2,R5
   \   00000020   0410A0E1           MOV      R1,R4
   \   00000024   ........           BL       ??IOUnitZBAna
   \                     `??new IOUnitZBAna_1`:
   \   00000028   ........           B        ?Subroutine22

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable4:
   \   00000000   ........           DC32     ??__vtbl

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable5:
   \   00000000   ........           DC32     ??ObjectSet

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable9:
   \   00000000   ........           DC32     ??npos

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable10:
   \   00000000   00408F40           DC32     0x408f4000

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable12:
   \   00000000   ........           DC32     RunningTime
    556          
    557          

   Maximum stack usage in bytes:

     Function                       CSTACK
     --------                       ------
     IOUnitZBAna::ANPRO10_IO_UnpackPacket(unsigned char *)
                                       52
     IOUnitZBAna::Add(PROIOComponent *, PRogramObject *)
                                     1216
     IOUnitZBAna::GetRequestNumber()
                                        0
     IOUnitZBAna::GetStringValue(int, int, AnsiString &)
                                       44
     IOUnitZBAna::GetValue(int, int, float &, int &, int &)
                                       28
     IOUnitZBAna::GetValueInfoTable(int &, int)
                                        0
     IOUnitZBAna::HandleIO(int)        24
     IOUnitZBAna::IOUnitZBAna(PROIOComponent *, PRogramObject *)
                                      148
     IOUnitZBAna::PowerOn()            12
     IOUnitZBAna::PutFloatValue(int, float)
                                        4
     IOUnitZBAna::PutValue(int, int, AnsiString, bool, int *)
                                       60
     IOUnitZBAna::ReceiveData(unsigned char *)
                                       12
     IOUnitZBAna::RequestSetup()        8
     IOUnitZBAna::SendData(unsigned short)
                                      136
     IOUnitZBAna::SendToIO(unsigned short, void *, unsigned short, bool)
                                       20
     IOUnitZBAna::SetFilters()         44
     IOUnitZBAna::SetHWFailure(bool)
                                       12
     IOUnitZBAna::new IOUnitZBAna(PROIOComponent *, PRogramObject *)
                                       12
     IOUnitZBAna::~IOUnitZBAna()       12
     _Tree<_Tset_traits<PRogramObject *, less<PRogramObject *>, allocator<PRogramObject *>, false>>::_Insert(bool, _Tree<_Tset_traits<PRogramObject *, less<PRogramObject *>, allocator<PRogramObject *>, false>>::_Nodeptr, PRogramObject *)
                                       24
     _Tree<_Tset_traits<PRogramObject *, less<PRogramObject *>, allocator<PRogramObject *>, false>>::insert(PRogramObject *)
                                       44
     _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::_Erase(_Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::_Nodeptr)
                                       16
     _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::_Insert(bool, _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::_Nodeptr, PRogramObjectBase *)
                                       24
     _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::_Lbound(PRogramObjectBase *) const
                                        0
     _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::_Ubound(PRogramObjectBase *) const
                                        0
     _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::clear()
                                        8
     _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::equal_range(PRogramObjectBase *)
                                       28
     _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::erase(PRogramObjectBase *)
                                       24
     _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::erase(_Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::iterator, _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::iterator)
                                       20
     _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::insert(PRogramObjectBase *)
                                       44
     _Tree_algobase<allocator<void>>::_Clear()
                                        0
     _Tree_algobase<allocator<void>>::_DecP(_Tree_algobase<allocator<void>>::_Genptr)
                                        0
     _Tree_algobase<allocator<void>>::_Erase(_Tree_algobase<allocator<void>>::_Genptr)
                                       32
     _Tree_algobase<allocator<void>>::_IncP(_Tree_algobase<allocator<void>>::_Genptr)
                                        0
     _Tree_algobase<allocator<void>>::_Insert(bool, _Tree_algobase<allocator<void>>::_Genptr, _Tree_algobase<allocator<void>>::_Genptr)
                                       20
     _Tree_algobase<allocator<void>>::_Lrotate(_Tree_algobase<allocator<void>>::_Genptr)
                                        0
     _Tree_algobase<allocator<void>>::_Rrotate(_Tree_algobase<allocator<void>>::_Genptr)
                                        0
     __sti__routine()                  12
     operator+(string const &, char const *)
                                       44
     operator+(string const &, string const &)
                                       40
     set<PRogramObjectBase *>::~set()
                                        4
     string::string(string const &)    12


   Segment part sizes:

     Function/Label                 Bytes
     --------------                 -----
     string::string(string const &)   64
     _Tree_algobase<allocator<void>>::_DecP(_Tree_algobase<allocator<void>>::_Genptr)
                                     100
     _Tree_algobase<allocator<void>>::_IncP(_Tree_algobase<allocator<void>>::_Genptr)
                                      92
     _Tree_algobase<allocator<void>>::_Clear()
                                      36
     _Tree_algobase<allocator<void>>::_Rrotate(_Tree_algobase<allocator<void>>::_Genptr)
                                      84
     _Tree_algobase<allocator<void>>::_Lrotate(_Tree_algobase<allocator<void>>::_Genptr)
                                      84
     _Tree_algobase<allocator<void>>::_Erase(_Tree_algobase<allocator<void>>::_Genptr)
                                     804
     _Tree_algobase<allocator<void>>::_Insert(bool, _Tree_algobase<allocator<void>>::_Genptr, _Tree_algobase<allocator<void>>::_Genptr)
                                     356
     _Tree<_Tset_traits<PRogramObject *, less<PRogramObject *>, allocator<PRogramObject *>, false>>::insert(PRogramObject *)
                                     200
     _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::insert(PRogramObjectBase *)
                                     200
     _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::erase(_Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::iterator, _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::iterator)
                                     108
     _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::erase(PRogramObjectBase *)
                                      84
     _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::clear()
                                      32
     _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::equal_range(PRogramObjectBase *)
                                      76
     _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::_Erase(_Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::_Nodeptr)
                                      68
     _Tree<_Tset_traits<PRogramObject *, less<PRogramObject *>, allocator<PRogramObject *>, false>>::_Insert(bool, _Tree<_Tset_traits<PRogramObject *, less<PRogramObject *>, allocator<PRogramObject *>, false>>::_Nodeptr, PRogramObject *)
                                      96
     _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::_Insert(bool, _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::_Nodeptr, PRogramObjectBase *)
                                      96
     _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::_Lbound(PRogramObjectBase *) const
                                      40
     _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::_Ubound(PRogramObjectBase *) const
                                      40
     set<PRogramObjectBase *>::~set()
                                      16
     operator+(string const &, string const &)
                                      88
     operator+(string const &, char const *)
                                      92
     IOUnitZBAna::IOUnitZBAnaValueList
                                     156
     IOUnitZBAna::ObjectSet           24
     IOUnitZBAna::IOUnitZBAna(PROIOComponent *, PRogramObject *)
                                     384
     IOUnitZBAna::~IOUnitZBAna()     104
     ?Subroutine22                     8
     IOUnitZBAna::Add(PROIOComponent *, PRogramObject *)
                                    1724
     IOUnitZBAna::GetValue(int, int, float &, int &, int &)
                                     268
     IOUnitZBAna::GetStringValue(int, int, AnsiString &)
                                     300
     ?Subroutine20                    12
     IOUnitZBAna::PutValue(int, int, AnsiString, bool, int *)
                                     100
     ?Subroutine23                     8
     IOUnitZBAna::PutFloatValue(int, float)
                                      16
     IOUnitZBAna::GetValueInfoTable(int &, int)
                                      20
     IOUnitZBAna::SetHWFailure(bool)
                                      84
     IOUnitZBAna::ANPRO10_IO_UnpackPacket(unsigned char *)
                                     832
     IOUnitZBAna::SendToIO(unsigned short, void *, unsigned short, bool)
                                      88
     IOUnitZBAna::PowerOn()           64
     ?Subroutine21                     8
     IOUnitZBAna::RequestSetup()      60
     IOUnitZBAna::HandleIO(int)      420
     IOUnitZBAna::SetFilters()       176
     IOUnitZBAna::ReceiveData(unsigned char *)
                                     376
     IOUnitZBAna::SendData(unsigned short)
                                     456
     IOUnitZBAna::GetRequestNumber()
                                       8
     ?<Initializer for IOUnitZBAnaValueList>
                                     156
     IOUnitZBAna::__vtbl             156
     ?<Constant "TCU ">              148
     ?<Constant ".\n">                 3
     ?<Constant "">                    1
     __sti__routine()                 52
     IOUnitZBAna::new IOUnitZBAna(PROIOComponent *, PRogramObject *)
                                      44
     ??DataTable4                      4
     ??DataTable5                      4
     ??DataTable9                      4
     ??DataTable10                     4
     ??DataTable12                     4
      Others                         832

 
 9 276 bytes in segment CODE
   320 bytes in segment DATA_C
   156 bytes in segment DATA_I
   156 bytes in segment DATA_ID
    28 bytes in segment DATA_Z
     4 bytes in segment DIFUNCT
    24 bytes in segment INITTAB
 
 5 636 bytes of CODE  memory (+ 3 668 bytes shared)
   476 bytes of CONST memory
   184 bytes of DATA  memory

Errors: none
Warnings: none
