##############################################################################
#                                                                            #
# IAR ARM ANSI C/C++ Compiler V4.42A/W32               14/Sep/2022  15:13:47 #
# Copyright 1999-2005 IAR Systems. All rights reserved.                      #
#                                                                            #
#    Cpu mode        =  interwork                                            #
#    Endian          =  little                                               #
#    Stack alignment =  4                                                    #
#    Source file     =  D:\S2Prog\Shared\Src\IOUnit.cpp                      #
#    Command line    =  D:\S2Prog\Shared\Src\IOUnit.cpp --fpu None -D        #
#                       OS_LIBMODE_SP -D CPU_S3C2410 -D OS_RAMVECT=0 -D      #
#                       OS_UART=-1 -D S2TXU -D USE_LZO=1 -D __ARM_LIBRARY__  #
#                       -D WATCHDOG=1 -D NETWORK=1 -lCN                      #
#                       D:\S2Prog\TXU\Debug\List\ -o                         #
#                       D:\S2Prog\TXU\Debug\Obj\ -z9 --debug --cpu_mode arm  #
#                       --endian little --cpu ARM920T --stack_align 4        #
#                       --interwork -e --enable_multibytes --eec++           #
#                       --dlib_config "C:\Program Files (x86)\IAR            #
#                       Systems\Embedded Workbench                           #
#                       4.0\arm\LIB\dl4tpainl8n.h" -I                        #
#                       D:\S2Prog\TXU\GUI\CORE\ -I D:\S2Prog\TXU\GUI\WM\ -I  #
#                       D:\S2Prog\TXU\GUI\WIDGET\ -I D:\S2Prog\TXU\CONFIG\   #
#                       -I D:\S2Prog\TXU\INC\ -I D:\S2Prog\TXU\..\SHARED\INC #
#                       \ -I D:\S2Prog\TXU\..\SHARED\SRC\ -I                 #
#                       D:\S2Prog\TXU\..\SHARED\LZO\minilzo.210\ -I          #
#                       D:\S2Prog\TXU\lwip-1.4.1\src\include\ -I             #
#                       D:\S2Prog\TXU\lwip-1.4.1\src\include\ipv4\ -I        #
#                       D:\S2Prog\TXU\lwip-1.4.1\src\ -I                     #
#                       D:\S2Prog\TXU\..\SHARED\Database\ -I                 #
#                       D:\S2Prog\TXU\src\ -I "C:\Program Files (x86)\IAR    #
#                       Systems\Embedded Workbench 4.0\arm\INC\"             #
#                       --inline_threshold=2                                 #
#    List file       =  D:\S2Prog\TXU\Debug\List\IOUnit.lst                  #
#    Object file     =  D:\S2Prog\TXU\Debug\Obj\IOUnit.r79                   #
#                                                                            #
#                                                                            #
##############################################################################

D:\S2Prog\Shared\Src\IOUnit.cpp
      1          #include "TSNIncludes.h"

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs string::string(string const &)
   \                     ??string:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
   \   0000000C   0020A0E3           MOV      R2,#+0
   \   00000010   0010A0E3           MOV      R1,#+0
   \   00000014   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000018   1C009FE5           LDR      R0,??string_1    ;; ??npos
   \   0000001C   0020A0E3           MOV      R2,#+0
   \   00000020   003090E5           LDR      R3,[R0, #+0]
   \   00000024   0510A0E1           MOV      R1,R5
   \   00000028   0400A0E1           MOV      R0,R4
   \   0000002C   ........           _BLF     ??assign,??assign??rA
   \   00000030   0400A0E1           MOV      R0,R4
   \   00000034   3040BDE8           POP      {R4,R5,LR}
   \   00000038   1EFF2FE1           BX       LR               ;; return
   \                     ??string_1:
   \   0000003C   ........           DC32     ??npos

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs _Tree_algobase<allocator<void>>::_Genptr _Tree_algobase<allocator<void>>::_DecP(_Tree_algobase<allocator<void>>::_Genptr)
   \                     ??_DecP:
   \   00000000   0D10D0E5           LDRB     R1,[R0, #+13]
   \   00000004   000051E3           CMP      R1,#+0
   \   00000008   08009015           LDRNE    R0,[R0, #+8]
   \   0000000C   1EFF2F11           BXNE     LR
   \   00000010   001090E5           LDR      R1,[R0, #+0]
   \   00000014   0D20D1E5           LDRB     R2,[R1, #+13]
   \   00000018   000052E3           CMP      R2,#+0
   \   0000001C   0700001A           BNE      ??_DecP_1
   \   00000020   000000EA           B        ??_DecP_2
   \                     ??_DecP_3:
   \   00000024   0010A0E1           MOV      R1,R0
   \                     ??_DecP_2:
   \   00000028   080091E5           LDR      R0,[R1, #+8]
   \   0000002C   0D20D0E5           LDRB     R2,[R0, #+13]
   \   00000030   000052E3           CMP      R2,#+0
   \   00000034   FAFFFF0A           BEQ      ??_DecP_3
   \   00000038   0100A0E1           MOV      R0,R1
   \   0000003C   1EFF2FE1           BX       LR
   \                     ??_DecP_1:
   \   00000040   041090E5           LDR      R1,[R0, #+4]
   \   00000044   0D20D1E5           LDRB     R2,[R1, #+13]
   \   00000048   000052E3           CMP      R2,#+0
   \   0000004C   1EFF2F11           BXNE     LR
   \   00000050   002091E5           LDR      R2,[R1, #+0]
   \   00000054   020050E1           CMP      R0,R2
   \   00000058   0100A0E1           MOV      R0,R1
   \   0000005C   F7FFFF0A           BEQ      ??_DecP_1
   \   00000060   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs _Tree_algobase<allocator<void>>::_Genptr _Tree_algobase<allocator<void>>::_IncP(_Tree_algobase<allocator<void>>::_Genptr)
   \                     ??_IncP:
   \   00000000   0D10D0E5           LDRB     R1,[R0, #+13]
   \   00000004   000051E3           CMP      R1,#+0
   \   00000008   1EFF2F11           BXNE     LR
   \   0000000C   081090E5           LDR      R1,[R0, #+8]
   \   00000010   0D20D1E5           LDRB     R2,[R1, #+13]
   \   00000014   000052E3           CMP      R2,#+0
   \   00000018   0700001A           BNE      ??_IncP_1
   \   0000001C   000000EA           B        ??_IncP_2
   \                     ??_IncP_3:
   \   00000020   0010A0E1           MOV      R1,R0
   \                     ??_IncP_2:
   \   00000024   000091E5           LDR      R0,[R1, #+0]
   \   00000028   0D20D0E5           LDRB     R2,[R0, #+13]
   \   0000002C   000052E3           CMP      R2,#+0
   \   00000030   FAFFFF0A           BEQ      ??_IncP_3
   \   00000034   060000EA           B        ??_IncP_4
   \                     ??_IncP_5:
   \   00000038   0100A0E1           MOV      R0,R1
   \                     ??_IncP_1:
   \   0000003C   041090E5           LDR      R1,[R0, #+4]
   \   00000040   0D20D1E5           LDRB     R2,[R1, #+13]
   \   00000044   000052E3           CMP      R2,#+0
   \   00000048   08209105           LDREQ    R2,[R1, #+8]
   \   0000004C   02005001           CMPEQ    R0,R2
   \   00000050   F8FFFF0A           BEQ      ??_IncP_5
   \                     ??_IncP_4:
   \   00000054   0100A0E1           MOV      R0,R1
   \   00000058   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void _Tree_algobase<allocator<void>>::_Clear()
   \                     ??_Clear:
   \   00000000   040080E5           STR      R0,[R0, #+4]
   \   00000004   000080E5           STR      R0,[R0, #+0]
   \   00000008   080080E5           STR      R0,[R0, #+8]
   \   0000000C   0110A0E3           MOV      R1,#+1
   \   00000010   0D10C0E5           STRB     R1,[R0, #+13]
   \   00000014   0C10C0E5           STRB     R1,[R0, #+12]
   \   00000018   0010A0E3           MOV      R1,#+0
   \   0000001C   101080E5           STR      R1,[R0, #+16]
   \   00000020   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void _Tree_algobase<allocator<void>>::_Rrotate(_Tree_algobase<allocator<void>>::_Genptr)
   \                     ??_Rrotate:
   \   00000000   002091E5           LDR      R2,[R1, #+0]
   \   00000004   083092E5           LDR      R3,[R2, #+8]
   \   00000008   003081E5           STR      R3,[R1, #+0]
   \   0000000C   083092E5           LDR      R3,[R2, #+8]
   \   00000010   0DC0D3E5           LDRB     R12,[R3, #+13]
   \   00000014   00005CE3           CMP      R12,#+0
   \   00000018   04108305           STREQ    R1,[R3, #+4]
   \   0000001C   043091E5           LDR      R3,[R1, #+4]
   \   00000020   043082E5           STR      R3,[R2, #+4]
   \   00000024   043090E5           LDR      R3,[R0, #+4]
   \   00000028   030051E1           CMP      R1,R3
   \   0000002C   04208005           STREQ    R2,[R0, #+4]
   \   00000030   0400000A           BEQ      ??_Rrotate_1
   \   00000034   040091E5           LDR      R0,[R1, #+4]
   \   00000038   083090E5           LDR      R3,[R0, #+8]
   \   0000003C   030051E1           CMP      R1,R3
   \   00000040   08208005           STREQ    R2,[R0, #+8]
   \   00000044   00208015           STRNE    R2,[R0, #+0]
   \                     ??_Rrotate_1:
   \   00000048   081082E5           STR      R1,[R2, #+8]
   \   0000004C   042081E5           STR      R2,[R1, #+4]
   \   00000050   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void _Tree_algobase<allocator<void>>::_Lrotate(_Tree_algobase<allocator<void>>::_Genptr)
   \                     ??_Lrotate:
   \   00000000   082091E5           LDR      R2,[R1, #+8]
   \   00000004   003092E5           LDR      R3,[R2, #+0]
   \   00000008   083081E5           STR      R3,[R1, #+8]
   \   0000000C   003092E5           LDR      R3,[R2, #+0]
   \   00000010   0DC0D3E5           LDRB     R12,[R3, #+13]
   \   00000014   00005CE3           CMP      R12,#+0
   \   00000018   04108305           STREQ    R1,[R3, #+4]
   \   0000001C   043091E5           LDR      R3,[R1, #+4]
   \   00000020   043082E5           STR      R3,[R2, #+4]
   \   00000024   043090E5           LDR      R3,[R0, #+4]
   \   00000028   030051E1           CMP      R1,R3
   \   0000002C   04208005           STREQ    R2,[R0, #+4]
   \   00000030   0400000A           BEQ      ??_Lrotate_1
   \   00000034   040091E5           LDR      R0,[R1, #+4]
   \   00000038   003090E5           LDR      R3,[R0, #+0]
   \   0000003C   030051E1           CMP      R1,R3
   \   00000040   00208005           STREQ    R2,[R0, #+0]
   \   00000044   08208015           STRNE    R2,[R0, #+8]
   \                     ??_Lrotate_1:
   \   00000048   001082E5           STR      R1,[R2, #+0]
   \   0000004C   042081E5           STR      R2,[R1, #+4]
   \   00000050   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs _Tree_algobase<allocator<void>>::_Genptr _Tree_algobase<allocator<void>>::_Erase(_Tree_algobase<allocator<void>>::_Genptr)
   \                     ??_Erase:
   \   00000000   F0472DE9           PUSH     {R4-R10,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0160A0E1           MOV      R6,R1
   \   0000000C   0680A0E1           MOV      R8,R6
   \   00000010   0600A0E1           MOV      R0,R6
   \   00000014   ........           _BLF     ??_IncP,??_IncP??rA
   \   00000018   007098E5           LDR      R7,[R8, #+0]
   \   0000001C   0D10D7E5           LDRB     R1,[R7, #+13]
   \   00000020   000051E3           CMP      R1,#+0
   \   00000024   0400001A           BNE      ??_Erase_2
   \   00000028   081098E5           LDR      R1,[R8, #+8]
   \   0000002C   0D10D1E5           LDRB     R1,[R1, #+13]
   \   00000030   000051E3           CMP      R1,#+0
   \   00000034   0100001A           BNE      ??_Erase_3
   \   00000038   0080A0E1           MOV      R8,R0
   \                     ??_Erase_2:
   \   0000003C   087098E5           LDR      R7,[R8, #+8]
   \                     ??_Erase_3:
   \   00000040   060058E1           CMP      R8,R6
   \   00000044   2B00001A           BNE      ??_Erase_4
   \   00000048   0D00D7E5           LDRB     R0,[R7, #+13]
   \   0000004C   045096E5           LDR      R5,[R6, #+4]
   \   00000050   000050E3           CMP      R0,#+0
   \   00000054   04508705           STREQ    R5,[R7, #+4]
   \   00000058   040094E5           LDR      R0,[R4, #+4]
   \   0000005C   060050E1           CMP      R0,R6
   \   00000060   04708405           STREQ    R7,[R4, #+4]
   \   00000064   0300000A           BEQ      ??_Erase_5
   \   00000068   000095E5           LDR      R0,[R5, #+0]
   \   0000006C   060050E1           CMP      R0,R6
   \   00000070   00708505           STREQ    R7,[R5, #+0]
   \   00000074   08708515           STRNE    R7,[R5, #+8]
   \                     ??_Erase_5:
   \   00000078   000094E5           LDR      R0,[R4, #+0]
   \   0000007C   060050E1           CMP      R0,R6
   \   00000080   0B00001A           BNE      ??_Erase_6
   \   00000084   0D00D7E5           LDRB     R0,[R7, #+13]
   \   00000088   000050E3           CMP      R0,#+0
   \   0000008C   0500A011           MOVNE    R0,R5
   \   00000090   0600001A           BNE      ??_Erase_7
   \   00000094   0700A0E1           MOV      R0,R7
   \   00000098   000000EA           B        ??_Erase_8
   \                     ??_Erase_9:
   \   0000009C   0100A0E1           MOV      R0,R1
   \                     ??_Erase_8:
   \   000000A0   001090E5           LDR      R1,[R0, #+0]
   \   000000A4   0D20D1E5           LDRB     R2,[R1, #+13]
   \   000000A8   000052E3           CMP      R2,#+0
   \   000000AC   FAFFFF0A           BEQ      ??_Erase_9
   \                     ??_Erase_7:
   \   000000B0   000084E5           STR      R0,[R4, #+0]
   \                     ??_Erase_6:
   \   000000B4   080094E5           LDR      R0,[R4, #+8]
   \   000000B8   060050E1           CMP      R0,R6
   \   000000BC   2F00001A           BNE      ??_Erase_10
   \   000000C0   0D10D7E5           LDRB     R1,[R7, #+13]
   \   000000C4   080084E2           ADD      R0,R4,#+8
   \   000000C8   000051E3           CMP      R1,#+0
   \   000000CC   0510A011           MOVNE    R1,R5
   \   000000D0   0600001A           BNE      ??_Erase_11
   \   000000D4   0710A0E1           MOV      R1,R7
   \   000000D8   000000EA           B        ??_Erase_12
   \                     ??_Erase_13:
   \   000000DC   0210A0E1           MOV      R1,R2
   \                     ??_Erase_12:
   \   000000E0   082091E5           LDR      R2,[R1, #+8]
   \   000000E4   0D30D2E5           LDRB     R3,[R2, #+13]
   \   000000E8   000053E3           CMP      R3,#+0
   \   000000EC   FAFFFF0A           BEQ      ??_Erase_13
   \                     ??_Erase_11:
   \   000000F0   001080E5           STR      R1,[R0, #+0]
   \   000000F4   210000EA           B        ??_Erase_10
   \                     ??_Erase_4:
   \   000000F8   000096E5           LDR      R0,[R6, #+0]
   \   000000FC   048080E5           STR      R8,[R0, #+4]
   \   00000100   000096E5           LDR      R0,[R6, #+0]
   \   00000104   000088E5           STR      R0,[R8, #+0]
   \   00000108   080096E5           LDR      R0,[R6, #+8]
   \   0000010C   000058E1           CMP      R8,R0
   \   00000110   0850A001           MOVEQ    R5,R8
   \   00000114   0800000A           BEQ      ??_Erase_14
   \   00000118   0D00D7E5           LDRB     R0,[R7, #+13]
   \   0000011C   045098E5           LDR      R5,[R8, #+4]
   \   00000120   000050E3           CMP      R0,#+0
   \   00000124   04508705           STREQ    R5,[R7, #+4]
   \   00000128   007085E5           STR      R7,[R5, #+0]
   \   0000012C   080096E5           LDR      R0,[R6, #+8]
   \   00000130   080088E5           STR      R0,[R8, #+8]
   \   00000134   080096E5           LDR      R0,[R6, #+8]
   \   00000138   048080E5           STR      R8,[R0, #+4]
   \                     ??_Erase_14:
   \   0000013C   040094E5           LDR      R0,[R4, #+4]
   \   00000140   060050E1           CMP      R0,R6
   \   00000144   04808405           STREQ    R8,[R4, #+4]
   \   00000148   0400000A           BEQ      ??_Erase_15
   \   0000014C   040096E5           LDR      R0,[R6, #+4]
   \   00000150   001090E5           LDR      R1,[R0, #+0]
   \   00000154   060051E1           CMP      R1,R6
   \   00000158   00808005           STREQ    R8,[R0, #+0]
   \   0000015C   08808015           STRNE    R8,[R0, #+8]
   \                     ??_Erase_15:
   \   00000160   040096E5           LDR      R0,[R6, #+4]
   \   00000164   0C1088E2           ADD      R1,R8,#+12
   \   00000168   040088E5           STR      R0,[R8, #+4]
   \   0000016C   0020D1E5           LDRB     R2,[R1, #+0]
   \   00000170   0C0086E2           ADD      R0,R6,#+12
   \   00000174   0030D0E5           LDRB     R3,[R0, #+0]
   \   00000178   0030C1E5           STRB     R3,[R1, #+0]
   \   0000017C   0020C0E5           STRB     R2,[R0, #+0]
   \                     ??_Erase_10:
   \   00000180   0C00D6E5           LDRB     R0,[R6, #+12]
   \   00000184   010050E3           CMP      R0,#+1
   \   00000188   5E00001A           BNE      ??_Erase_16
   \   0000018C   0090A0E3           MOV      R9,#+0
   \   00000190   01A0A0E3           MOV      R10,#+1
   \   00000194   060000EA           B        ??_Erase_17
   \                     ??_Erase_18:
   \   00000198   080098E5           LDR      R0,[R8, #+8]
   \   0000019C   0C00D0E5           LDRB     R0,[R0, #+12]
   \   000001A0   010050E3           CMP      R0,#+1
   \   000001A4   1C00001A           BNE      ??_Erase_19
   \                     ??_Erase_20:
   \   000001A8   0C90C8E5           STRB     R9,[R8, #+12]
   \                     ??_Erase_21:
   \   000001AC   0570A0E1           MOV      R7,R5
   \   000001B0   045097E5           LDR      R5,[R7, #+4]
   \                     ??_Erase_17:
   \   000001B4   040094E5           LDR      R0,[R4, #+4]
   \   000001B8   000057E1           CMP      R7,R0
   \   000001BC   5000000A           BEQ      ??_Erase_22
   \   000001C0   0C00D7E5           LDRB     R0,[R7, #+12]
   \   000001C4   010050E3           CMP      R0,#+1
   \   000001C8   4D00001A           BNE      ??_Erase_22
   \   000001CC   008095E5           LDR      R8,[R5, #+0]
   \   000001D0   080057E1           CMP      R7,R8
   \   000001D4   2400001A           BNE      ??_Erase_23
   \   000001D8   088095E5           LDR      R8,[R5, #+8]
   \   000001DC   0C00D8E5           LDRB     R0,[R8, #+12]
   \   000001E0   000050E3           CMP      R0,#+0
   \   000001E4   0500001A           BNE      ??_Erase_24
   \   000001E8   0CA0C8E5           STRB     R10,[R8, #+12]
   \   000001EC   0C90C5E5           STRB     R9,[R5, #+12]
   \   000001F0   0510A0E1           MOV      R1,R5
   \   000001F4   0400A0E1           MOV      R0,R4
   \   000001F8   ........           _BLF     ??_Lrotate,??_Lrotate??rA
   \   000001FC   088095E5           LDR      R8,[R5, #+8]
   \                     ??_Erase_24:
   \   00000200   0D00D8E5           LDRB     R0,[R8, #+13]
   \   00000204   000050E3           CMP      R0,#+0
   \   00000208   E7FFFF1A           BNE      ??_Erase_21
   \   0000020C   000098E5           LDR      R0,[R8, #+0]
   \   00000210   0C00D0E5           LDRB     R0,[R0, #+12]
   \   00000214   010050E3           CMP      R0,#+1
   \   00000218   DEFFFF0A           BEQ      ??_Erase_18
   \                     ??_Erase_19:
   \   0000021C   080098E5           LDR      R0,[R8, #+8]
   \   00000220   0C00D0E5           LDRB     R0,[R0, #+12]
   \   00000224   010050E3           CMP      R0,#+1
   \   00000228   0600001A           BNE      ??_Erase_25
   \   0000022C   000098E5           LDR      R0,[R8, #+0]
   \   00000230   0810A0E1           MOV      R1,R8
   \   00000234   0CA0C0E5           STRB     R10,[R0, #+12]
   \   00000238   0C90C8E5           STRB     R9,[R8, #+12]
   \   0000023C   0400A0E1           MOV      R0,R4
   \   00000240   ........           _BLF     ??_Rrotate,??_Rrotate??rA
   \   00000244   088095E5           LDR      R8,[R5, #+8]
   \                     ??_Erase_25:
   \   00000248   0C00D5E5           LDRB     R0,[R5, #+12]
   \   0000024C   0510A0E1           MOV      R1,R5
   \   00000250   0C00C8E5           STRB     R0,[R8, #+12]
   \   00000254   0CA0C5E5           STRB     R10,[R5, #+12]
   \   00000258   080098E5           LDR      R0,[R8, #+8]
   \   0000025C   0CA0C0E5           STRB     R10,[R0, #+12]
   \   00000260   0400A0E1           MOV      R0,R4
   \   00000264   ........           _BLF     ??_Lrotate,??_Lrotate??rA
   \   00000268   250000EA           B        ??_Erase_22
   \                     ??_Erase_23:
   \   0000026C   0C00D8E5           LDRB     R0,[R8, #+12]
   \   00000270   000050E3           CMP      R0,#+0
   \   00000274   0500001A           BNE      ??_Erase_26
   \   00000278   0CA0C8E5           STRB     R10,[R8, #+12]
   \   0000027C   0C90C5E5           STRB     R9,[R5, #+12]
   \   00000280   0510A0E1           MOV      R1,R5
   \   00000284   0400A0E1           MOV      R0,R4
   \   00000288   ........           _BLF     ??_Rrotate,??_Rrotate??rA
   \   0000028C   008095E5           LDR      R8,[R5, #+0]
   \                     ??_Erase_26:
   \   00000290   0D00D8E5           LDRB     R0,[R8, #+13]
   \   00000294   000050E3           CMP      R0,#+0
   \   00000298   C3FFFF1A           BNE      ??_Erase_21
   \   0000029C   080098E5           LDR      R0,[R8, #+8]
   \   000002A0   0C00D0E5           LDRB     R0,[R0, #+12]
   \   000002A4   010050E3           CMP      R0,#+1
   \   000002A8   00009805           LDREQ    R0,[R8, #+0]
   \   000002AC   0C00D005           LDRBEQ   R0,[R0, #+12]
   \   000002B0   01005003           CMPEQ    R0,#+1
   \   000002B4   BBFFFF0A           BEQ      ??_Erase_20
   \   000002B8   000098E5           LDR      R0,[R8, #+0]
   \   000002BC   0C00D0E5           LDRB     R0,[R0, #+12]
   \   000002C0   010050E3           CMP      R0,#+1
   \   000002C4   0600001A           BNE      ??_Erase_27
   \   000002C8   080098E5           LDR      R0,[R8, #+8]
   \   000002CC   0810A0E1           MOV      R1,R8
   \   000002D0   0CA0C0E5           STRB     R10,[R0, #+12]
   \   000002D4   0C90C8E5           STRB     R9,[R8, #+12]
   \   000002D8   0400A0E1           MOV      R0,R4
   \   000002DC   ........           _BLF     ??_Lrotate,??_Lrotate??rA
   \   000002E0   008095E5           LDR      R8,[R5, #+0]
   \                     ??_Erase_27:
   \   000002E4   0C00D5E5           LDRB     R0,[R5, #+12]
   \   000002E8   0510A0E1           MOV      R1,R5
   \   000002EC   0C00C8E5           STRB     R0,[R8, #+12]
   \   000002F0   0CA0C5E5           STRB     R10,[R5, #+12]
   \   000002F4   000098E5           LDR      R0,[R8, #+0]
   \   000002F8   0CA0C0E5           STRB     R10,[R0, #+12]
   \   000002FC   0400A0E1           MOV      R0,R4
   \   00000300   ........           _BLF     ??_Rrotate,??_Rrotate??rA
   \                     ??_Erase_22:
   \   00000304   0CA0C7E5           STRB     R10,[R7, #+12]
   \                     ??_Erase_16:
   \   00000308   100094E5           LDR      R0,[R4, #+16]
   \   0000030C   000050E3           CMP      R0,#+0
   \   00000310   01004012           SUBNE    R0,R0,#+1
   \   00000314   10008415           STRNE    R0,[R4, #+16]
   \   00000318   0600A0E1           MOV      R0,R6
   \   0000031C   F047BDE8           POP      {R4-R10,LR}
   \   00000320   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void _Tree_algobase<allocator<void>>::_Insert(bool, _Tree_algobase<allocator<void>>::_Genptr, _Tree_algobase<allocator<void>>::_Genptr)
   \                     ??_Insert:
   \   00000000   F0402DE9           PUSH     {R4-R7,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   100094E5           LDR      R0,[R4, #+16]
   \   0000000C   0350A0E1           MOV      R5,R3
   \   00000010   010080E2           ADD      R0,R0,#+1
   \   00000014   100084E5           STR      R0,[R4, #+16]
   \   00000018   040052E1           CMP      R2,R4
   \   0000001C   0300001A           BNE      ??_Insert_3
   \   00000020   045084E5           STR      R5,[R4, #+4]
   \   00000024   005084E5           STR      R5,[R4, #+0]
   \                     ??_Insert_4:
   \   00000028   085084E5           STR      R5,[R4, #+8]
   \   0000002C   130000EA           B        ??_Insert_5
   \                     ??_Insert_3:
   \   00000030   000051E3           CMP      R1,#+0
   \   00000034   0500000A           BEQ      ??_Insert_6
   \   00000038   005082E5           STR      R5,[R2, #+0]
   \   0000003C   000094E5           LDR      R0,[R4, #+0]
   \   00000040   000052E1           CMP      R2,R0
   \   00000044   0D00001A           BNE      ??_Insert_5
   \   00000048   005084E5           STR      R5,[R4, #+0]
   \   0000004C   0B0000EA           B        ??_Insert_5
   \                     ??_Insert_6:
   \   00000050   085082E5           STR      R5,[R2, #+8]
   \   00000054   080094E5           LDR      R0,[R4, #+8]
   \   00000058   000052E1           CMP      R2,R0
   \   0000005C   0700001A           BNE      ??_Insert_5
   \   00000060   F0FFFFEA           B        ??_Insert_4
   \                     ??_Insert_7:
   \   00000064   0C70C0E5           STRB     R7,[R0, #+12]
   \   00000068   0C70C2E5           STRB     R7,[R2, #+12]
   \   0000006C   040095E5           LDR      R0,[R5, #+4]
   \   00000070   040090E5           LDR      R0,[R0, #+4]
   \   00000074   0C60C0E5           STRB     R6,[R0, #+12]
   \   00000078   040095E5           LDR      R0,[R5, #+4]
   \   0000007C   045090E5           LDR      R5,[R0, #+4]
   \                     ??_Insert_5:
   \   00000080   0170A0E3           MOV      R7,#+1
   \   00000084   040095E5           LDR      R0,[R5, #+4]
   \   00000088   0C10D0E5           LDRB     R1,[R0, #+12]
   \   0000008C   000051E3           CMP      R1,#+0
   \   00000090   2F00001A           BNE      ??_Insert_8
   \   00000094   041090E5           LDR      R1,[R0, #+4]
   \   00000098   0060A0E3           MOV      R6,#+0
   \   0000009C   001091E5           LDR      R1,[R1, #+0]
   \   000000A0   010050E1           CMP      R0,R1
   \   000000A4   041090E5           LDR      R1,[R0, #+4]
   \   000000A8   1400001A           BNE      ??_Insert_9
   \   000000AC   082091E5           LDR      R2,[R1, #+8]
   \   000000B0   0C10D2E5           LDRB     R1,[R2, #+12]
   \   000000B4   000051E3           CMP      R1,#+0
   \   000000B8   E9FFFF0A           BEQ      ??_Insert_7
   \   000000BC   081090E5           LDR      R1,[R0, #+8]
   \   000000C0   010055E1           CMP      R5,R1
   \   000000C4   0300001A           BNE      ??_Insert_10
   \   000000C8   0050A0E1           MOV      R5,R0
   \   000000CC   0510A0E1           MOV      R1,R5
   \   000000D0   0400A0E1           MOV      R0,R4
   \   000000D4   ........           _BLF     ??_Lrotate,??_Lrotate??rA
   \                     ??_Insert_10:
   \   000000D8   040095E5           LDR      R0,[R5, #+4]
   \   000000DC   0C70C0E5           STRB     R7,[R0, #+12]
   \   000000E0   040095E5           LDR      R0,[R5, #+4]
   \   000000E4   040090E5           LDR      R0,[R0, #+4]
   \   000000E8   0C60C0E5           STRB     R6,[R0, #+12]
   \   000000EC   040095E5           LDR      R0,[R5, #+4]
   \   000000F0   041090E5           LDR      R1,[R0, #+4]
   \   000000F4   0400A0E1           MOV      R0,R4
   \   000000F8   ........           _BLF     ??_Rrotate,??_Rrotate??rA
   \   000000FC   DFFFFFEA           B        ??_Insert_5
   \                     ??_Insert_9:
   \   00000100   002091E5           LDR      R2,[R1, #+0]
   \   00000104   0C10D2E5           LDRB     R1,[R2, #+12]
   \   00000108   000051E3           CMP      R1,#+0
   \   0000010C   D4FFFF0A           BEQ      ??_Insert_7
   \   00000110   001090E5           LDR      R1,[R0, #+0]
   \   00000114   010055E1           CMP      R5,R1
   \   00000118   0300001A           BNE      ??_Insert_11
   \   0000011C   0050A0E1           MOV      R5,R0
   \   00000120   0510A0E1           MOV      R1,R5
   \   00000124   0400A0E1           MOV      R0,R4
   \   00000128   ........           _BLF     ??_Rrotate,??_Rrotate??rA
   \                     ??_Insert_11:
   \   0000012C   040095E5           LDR      R0,[R5, #+4]
   \   00000130   0C70C0E5           STRB     R7,[R0, #+12]
   \   00000134   040095E5           LDR      R0,[R5, #+4]
   \   00000138   040090E5           LDR      R0,[R0, #+4]
   \   0000013C   0C60C0E5           STRB     R6,[R0, #+12]
   \   00000140   040095E5           LDR      R0,[R5, #+4]
   \   00000144   041090E5           LDR      R1,[R0, #+4]
   \   00000148   0400A0E1           MOV      R0,R4
   \   0000014C   ........           _BLF     ??_Lrotate,??_Lrotate??rA
   \   00000150   CAFFFFEA           B        ??_Insert_5
   \                     ??_Insert_8:
   \   00000154   040094E5           LDR      R0,[R4, #+4]
   \   00000158   0C70C0E5           STRB     R7,[R0, #+12]
   \   0000015C   F040BDE8           POP      {R4-R7,LR}
   \   00000160   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs _Tree<_Tset_traits<AlarmBasic *, less<AlarmBasic *>, allocator<AlarmBasic *>, false>>::_Pairib _Tree<_Tset_traits<AlarmBasic *, less<AlarmBasic *>, allocator<AlarmBasic *>, false>>::insert(AlarmBasic *)
   \                     ??insert:
   \   00000000   F34C2DE9           PUSH     {R0,R1,R4-R7,R10,R11,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
   \   0000000C   040095E5           LDR      R0,[R5, #+4]
   \   00000010   0260A0E1           MOV      R6,R2
   \   00000014   05B0A0E1           MOV      R11,R5
   \   00000018   0170A0E3           MOV      R7,#+1
   \                     ??insert_2:
   \   0000001C   0D10D0E5           LDRB     R1,[R0, #+13]
   \   00000020   000051E3           CMP      R1,#+0
   \   00000024   0700001A           BNE      ??insert_3
   \   00000028   101090E5           LDR      R1,[R0, #+16]
   \   0000002C   00B0A0E1           MOV      R11,R0
   \   00000030   010056E1           CMP      R6,R1
   \   00000034   00009035           LDRCC    R0,[R0, #+0]
   \   00000038   0170A033           MOVCC    R7,#+1
   \   0000003C   08009025           LDRCS    R0,[R0, #+8]
   \   00000040   0070A023           MOVCS    R7,#+0
   \   00000044   F4FFFFEA           B        ??insert_2
   \                     ??insert_3:
   \   00000048   0B00A0E1           MOV      R0,R11
   \   0000004C   01A0A0E3           MOV      R10,#+1
   \   00000050   000057E3           CMP      R7,#+0
   \   00000054   0B00000A           BEQ      ??insert_4
   \   00000058   001095E5           LDR      R1,[R5, #+0]
   \   0000005C   010050E1           CMP      R0,R1
   \   00000060   0700001A           BNE      ??insert_5
   \   00000064   0630A0E1           MOV      R3,R6
   \   00000068   0B20A0E1           MOV      R2,R11
   \   0000006C   0110A0E3           MOV      R1,#+1
   \                     ??insert_6:
   \   00000070   0500A0E1           MOV      R0,R5
   \   00000074   ........           _BLF     ??_Insert_1,??_Insert??rA
   \   00000078   00008DE5           STR      R0,[SP, #+0]
   \   0000007C   04A0CDE5           STRB     R10,[SP, #+4]
   \   00000080   0A0000EA           B        ??insert_7
   \                     ??insert_5:
   \   00000084   ........           _BLF     ??_DecP,??_DecP??rA
   \                     ??insert_4:
   \   00000088   101090E5           LDR      R1,[R0, #+16]
   \   0000008C   060051E1           CMP      R1,R6
   \   00000090   0300002A           BCS      ??insert_8
   \   00000094   0630A0E1           MOV      R3,R6
   \   00000098   0B20A0E1           MOV      R2,R11
   \   0000009C   0710A0E1           MOV      R1,R7
   \   000000A0   F2FFFFEA           B        ??insert_6
   \                     ??insert_8:
   \   000000A4   00008DE5           STR      R0,[SP, #+0]
   \   000000A8   0010A0E3           MOV      R1,#+0
   \   000000AC   0410CDE5           STRB     R1,[SP, #+4]
   \                     ??insert_7:
   \   000000B0   0D00A0E1           MOV      R0,SP
   \   000000B4   030090E8           LDM      R0,{R0,R1}
   \   000000B8   030084E8           STM      R4,{R0,R1}
   \   000000BC   0400A0E1           MOV      R0,R4
   \   000000C0   F64CBDE8           POP      {R1,R2,R4-R7,R10,R11,LR}
   \   000000C4   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs _Tree<_Tset_traits<PRogramObject *, less<PRogramObject *>, allocator<PRogramObject *>, false>>::_Pairib _Tree<_Tset_traits<PRogramObject *, less<PRogramObject *>, allocator<PRogramObject *>, false>>::insert(PRogramObject *)
   \                     ??insert_1:
   \   00000000   F34C2DE9           PUSH     {R0,R1,R4-R7,R10,R11,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
   \   0000000C   040095E5           LDR      R0,[R5, #+4]
   \   00000010   0260A0E1           MOV      R6,R2
   \   00000014   05B0A0E1           MOV      R11,R5
   \   00000018   0170A0E3           MOV      R7,#+1
   \                     ??insert_9:
   \   0000001C   0D10D0E5           LDRB     R1,[R0, #+13]
   \   00000020   000051E3           CMP      R1,#+0
   \   00000024   0700001A           BNE      ??insert_10
   \   00000028   101090E5           LDR      R1,[R0, #+16]
   \   0000002C   00B0A0E1           MOV      R11,R0
   \   00000030   010056E1           CMP      R6,R1
   \   00000034   00009035           LDRCC    R0,[R0, #+0]
   \   00000038   0170A033           MOVCC    R7,#+1
   \   0000003C   08009025           LDRCS    R0,[R0, #+8]
   \   00000040   0070A023           MOVCS    R7,#+0
   \   00000044   F4FFFFEA           B        ??insert_9
   \                     ??insert_10:
   \   00000048   0B00A0E1           MOV      R0,R11
   \   0000004C   01A0A0E3           MOV      R10,#+1
   \   00000050   000057E3           CMP      R7,#+0
   \   00000054   0B00000A           BEQ      ??insert_11
   \   00000058   001095E5           LDR      R1,[R5, #+0]
   \   0000005C   010050E1           CMP      R0,R1
   \   00000060   0700001A           BNE      ??insert_12
   \   00000064   0630A0E1           MOV      R3,R6
   \   00000068   0B20A0E1           MOV      R2,R11
   \   0000006C   0110A0E3           MOV      R1,#+1
   \                     ??insert_13:
   \   00000070   0500A0E1           MOV      R0,R5
   \   00000074   ........           _BLF     ??_Insert_2,??_Insert??rA_1
   \   00000078   00008DE5           STR      R0,[SP, #+0]
   \   0000007C   04A0CDE5           STRB     R10,[SP, #+4]
   \   00000080   0A0000EA           B        ??insert_14
   \                     ??insert_12:
   \   00000084   ........           _BLF     ??_DecP,??_DecP??rA
   \                     ??insert_11:
   \   00000088   101090E5           LDR      R1,[R0, #+16]
   \   0000008C   060051E1           CMP      R1,R6
   \   00000090   0300002A           BCS      ??insert_15
   \   00000094   0630A0E1           MOV      R3,R6
   \   00000098   0B20A0E1           MOV      R2,R11
   \   0000009C   0710A0E1           MOV      R1,R7
   \   000000A0   F2FFFFEA           B        ??insert_13
   \                     ??insert_15:
   \   000000A4   00008DE5           STR      R0,[SP, #+0]
   \   000000A8   0010A0E3           MOV      R1,#+0
   \   000000AC   0410CDE5           STRB     R1,[SP, #+4]
   \                     ??insert_14:
   \   000000B0   0D00A0E1           MOV      R0,SP
   \   000000B4   030090E8           LDM      R0,{R0,R1}
   \   000000B8   030084E8           STM      R4,{R0,R1}
   \   000000BC   0400A0E1           MOV      R0,R4
   \   000000C0   F64CBDE8           POP      {R1,R2,R4-R7,R10,R11,LR}
   \   000000C4   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs _Tree<_Tset_traits<PRogramObject *, less<PRogramObject *>, allocator<PRogramObject *>, false>>::iterator _Tree<_Tset_traits<PRogramObject *, less<PRogramObject *>, allocator<PRogramObject *>, false>>::erase(_Tree<_Tset_traits<PRogramObject *, less<PRogramObject *>, allocator<PRogramObject *>, false>>::iterator, _Tree<_Tset_traits<PRogramObject *, less<PRogramObject *>, allocator<PRogramObject *>, false>>::iterator)
   \                     ??erase:
   \   00000000   F0402DE9           PUSH     {R4-R7,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   000094E5           LDR      R0,[R4, #+0]
   \   0000000C   0150A0E1           MOV      R5,R1
   \   00000010   0260A0E1           MOV      R6,R2
   \   00000014   000055E1           CMP      R5,R0
   \   00000018   04005601           CMPEQ    R6,R4
   \   0000001C   0D00001A           BNE      ??erase_2
   \   00000020   0400A0E1           MOV      R0,R4
   \   00000024   ........           _BLF     ??clear,??clear??rA
   \   00000028   000094E5           LDR      R0,[R4, #+0]
   \   0000002C   0C0000EA           B        ??erase_3
   \                     ??erase_4:
   \   00000030   0570A0E1           MOV      R7,R5
   \   00000034   0500A0E1           MOV      R0,R5
   \   00000038   ........           _BLF     ??_IncP,??_IncP??rA
   \   0000003C   0050A0E1           MOV      R5,R0
   \   00000040   0700A0E1           MOV      R0,R7
   \   00000044   ........           _BLF     ??_IncP,??_IncP??rA
   \   00000048   0710A0E1           MOV      R1,R7
   \   0000004C   0400A0E1           MOV      R0,R4
   \   00000050   ........           _BLF     ??_Erase,??_Erase??rA
   \   00000054   ........           _BLF     `??operator delete`,`??operator delete??rA`
   \                     ??erase_2:
   \   00000058   060055E1           CMP      R5,R6
   \   0000005C   F3FFFF1A           BNE      ??erase_4
   \   00000060   0500A0E1           MOV      R0,R5
   \                     ??erase_3:
   \   00000064   F040BDE8           POP      {R4-R7,LR}
   \   00000068   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs unsigned int _Tree<_Tset_traits<PRogramObject *, less<PRogramObject *>, allocator<PRogramObject *>, false>>::erase(PRogramObject *)
   \                     ??erase_1:
   \   00000000   73402DE9           PUSH     {R0,R1,R4-R6,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0120A0E1           MOV      R2,R1
   \   0000000C   0410A0E1           MOV      R1,R4
   \   00000010   0D00A0E1           MOV      R0,SP
   \   00000014   ........           _BLF     ??equal_range,??equal_range??rA
   \   00000018   04509DE5           LDR      R5,[SP, #+4]
   \   0000001C   00009DE5           LDR      R0,[SP, #+0]
   \   00000020   0060A0E3           MOV      R6,#+0
   \   00000024   010000EA           B        ??erase_5
   \                     ??erase_6:
   \   00000028   016086E2           ADD      R6,R6,#+1
   \   0000002C   ........           _BLF     ??_IncP,??_IncP??rA
   \                     ??erase_5:
   \   00000030   050050E1           CMP      R0,R5
   \   00000034   FBFFFF1A           BNE      ??erase_6
   \   00000038   04209DE5           LDR      R2,[SP, #+4]
   \   0000003C   00109DE5           LDR      R1,[SP, #+0]
   \   00000040   0400A0E1           MOV      R0,R4
   \   00000044   ........           _BLF     ??erase,??erase??rA
   \   00000048   0600A0E1           MOV      R0,R6
   \   0000004C   7640BDE8           POP      {R1,R2,R4-R6,LR}
   \   00000050   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void _Tree<_Tset_traits<PRogramObject *, less<PRogramObject *>, allocator<PRogramObject *>, false>>::clear()
   \                     ??clear:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   041094E5           LDR      R1,[R4, #+4]
   \   0000000C   ........           _BLF     ??_Erase_1,??_Erase??rA_1
   \   00000010   0400A0E1           MOV      R0,R4
   \   00000014   ........           _BLF     ??_Clear,??_Clear??rA
   \   00000018   1040BDE8           POP      {R4,LR}
   \   0000001C   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs _Tree<_Tset_traits<PRogramObject *, less<PRogramObject *>, allocator<PRogramObject *>, false>>::_Pairii _Tree<_Tset_traits<PRogramObject *, less<PRogramObject *>, allocator<PRogramObject *>, false>>::equal_range(PRogramObject *)
   \                     ??equal_range:
   \   00000000   F3402DE9           PUSH     {R0,R1,R4-R7,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
   \   0000000C   0260A0E1           MOV      R6,R2
   \   00000010   0610A0E1           MOV      R1,R6
   \   00000014   0500A0E1           MOV      R0,R5
   \   00000018   ........           _BLF     ??_Ubound,??_Ubound??rA
   \   0000001C   0070A0E1           MOV      R7,R0
   \   00000020   0610A0E1           MOV      R1,R6
   \   00000024   0500A0E1           MOV      R0,R5
   \   00000028   ........           _BLF     ??_Lbound,??_Lbound??rA
   \   0000002C   00008DE5           STR      R0,[SP, #+0]
   \   00000030   04708DE5           STR      R7,[SP, #+4]
   \   00000034   0D00A0E1           MOV      R0,SP
   \   00000038   030090E8           LDM      R0,{R0,R1}
   \   0000003C   030084E8           STM      R4,{R0,R1}
   \   00000040   0400A0E1           MOV      R0,R4
   \   00000044   F640BDE8           POP      {R1,R2,R4-R7,LR}
   \   00000048   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void _Tree<_Tset_traits<PRogramObject *, less<PRogramObject *>, allocator<PRogramObject *>, false>>::_Erase(_Tree<_Tset_traits<PRogramObject *, less<PRogramObject *>, allocator<PRogramObject *>, false>>::_Nodeptr)
   \                     ??_Erase_1:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
   \   0000000C   0560A0E1           MOV      R6,R5
   \   00000010   060000EA           B        ??_Erase_28
   \                     ??_Erase_29:
   \   00000014   081096E5           LDR      R1,[R6, #+8]
   \   00000018   0400A0E1           MOV      R0,R4
   \   0000001C   F7FFFFEB           BL       ??_Erase_1
   \   00000020   006096E5           LDR      R6,[R6, #+0]
   \   00000024   0500A0E1           MOV      R0,R5
   \   00000028   ........           _BLF     `??operator delete`,`??operator delete??rA`
   \   0000002C   0650A0E1           MOV      R5,R6
   \                     ??_Erase_28:
   \   00000030   0D00D6E5           LDRB     R0,[R6, #+13]
   \   00000034   000050E3           CMP      R0,#+0
   \   00000038   F5FFFF0A           BEQ      ??_Erase_29
   \   0000003C   7040BDE8           POP      {R4-R6,LR}
   \   00000040   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs _Tree<_Tset_traits<AlarmBasic *, less<AlarmBasic *>, allocator<AlarmBasic *>, false>>::iterator _Tree<_Tset_traits<AlarmBasic *, less<AlarmBasic *>, allocator<AlarmBasic *>, false>>::_Insert(bool, _Tree<_Tset_traits<AlarmBasic *, less<AlarmBasic *>, allocator<AlarmBasic *>, false>>::_Nodeptr, AlarmBasic *)
   \                     ??_Insert_1:
   \   00000000   F0412DE9           PUSH     {R4-R8,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
   \   0000000C   0260A0E1           MOV      R6,R2
   \   00000010   0370A0E1           MOV      R7,R3
   \   00000014   1400A0E3           MOV      R0,#+20
   \   00000018   ........           _BLF     `??operator new`,`??operator new??rA`
   \   0000001C   0080B0E1           MOVS     R8,R0
   \   00000020   0600000A           BEQ      ??_Insert_12
   \   00000024   004088E5           STR      R4,[R8, #+0]
   \   00000028   046088E5           STR      R6,[R8, #+4]
   \   0000002C   084088E5           STR      R4,[R8, #+8]
   \   00000030   0000A0E3           MOV      R0,#+0
   \   00000034   0C00C8E5           STRB     R0,[R8, #+12]
   \   00000038   0D00C8E5           STRB     R0,[R8, #+13]
   \   0000003C   107088E5           STR      R7,[R8, #+16]
   \                     ??_Insert_12:
   \   00000040   0830A0E1           MOV      R3,R8
   \   00000044   0620A0E1           MOV      R2,R6
   \   00000048   0510A0E1           MOV      R1,R5
   \   0000004C   0400A0E1           MOV      R0,R4
   \   00000050   ........           _BLF     ??_Insert,??_Insert??rA_2
   \   00000054   0800A0E1           MOV      R0,R8
   \   00000058   F041BDE8           POP      {R4-R8,LR}
   \   0000005C   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs _Tree<_Tset_traits<PRogramObject *, less<PRogramObject *>, allocator<PRogramObject *>, false>>::iterator _Tree<_Tset_traits<PRogramObject *, less<PRogramObject *>, allocator<PRogramObject *>, false>>::_Insert(bool, _Tree<_Tset_traits<PRogramObject *, less<PRogramObject *>, allocator<PRogramObject *>, false>>::_Nodeptr, PRogramObject *)
   \                     ??_Insert_2:
   \   00000000   F0412DE9           PUSH     {R4-R8,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
   \   0000000C   0260A0E1           MOV      R6,R2
   \   00000010   0370A0E1           MOV      R7,R3
   \   00000014   1400A0E3           MOV      R0,#+20
   \   00000018   ........           _BLF     `??operator new`,`??operator new??rA`
   \   0000001C   0080B0E1           MOVS     R8,R0
   \   00000020   0600000A           BEQ      ??_Insert_13
   \   00000024   004088E5           STR      R4,[R8, #+0]
   \   00000028   046088E5           STR      R6,[R8, #+4]
   \   0000002C   084088E5           STR      R4,[R8, #+8]
   \   00000030   0000A0E3           MOV      R0,#+0
   \   00000034   0C00C8E5           STRB     R0,[R8, #+12]
   \   00000038   0D00C8E5           STRB     R0,[R8, #+13]
   \   0000003C   107088E5           STR      R7,[R8, #+16]
   \                     ??_Insert_13:
   \   00000040   0830A0E1           MOV      R3,R8
   \   00000044   0620A0E1           MOV      R2,R6
   \   00000048   0510A0E1           MOV      R1,R5
   \   0000004C   0400A0E1           MOV      R0,R4
   \   00000050   ........           _BLF     ??_Insert,??_Insert??rA_2
   \   00000054   0800A0E1           MOV      R0,R8
   \   00000058   F041BDE8           POP      {R4-R8,LR}
   \   0000005C   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs _Tree<_Tset_traits<PRogramObject *, less<PRogramObject *>, allocator<PRogramObject *>, false>>::_Nodeptr _Tree<_Tset_traits<PRogramObject *, less<PRogramObject *>, allocator<PRogramObject *>, false>>::_Lbound(PRogramObject *) const
   \                     ??_Lbound:
   \   00000000   042090E5           LDR      R2,[R0, #+4]
   \                     ??_Lbound_1:
   \   00000004   0D30D2E5           LDRB     R3,[R2, #+13]
   \   00000008   000053E3           CMP      R3,#+0
   \   0000000C   1EFF2F11           BXNE     LR
   \   00000010   103092E5           LDR      R3,[R2, #+16]
   \   00000014   010053E1           CMP      R3,R1
   \   00000018   08209235           LDRCC    R2,[R2, #+8]
   \   0000001C   0200A021           MOVCS    R0,R2
   \   00000020   00209225           LDRCS    R2,[R2, #+0]
   \   00000024   F6FFFFEA           B        ??_Lbound_1

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs _Tree<_Tset_traits<PRogramObject *, less<PRogramObject *>, allocator<PRogramObject *>, false>>::_Nodeptr _Tree<_Tset_traits<PRogramObject *, less<PRogramObject *>, allocator<PRogramObject *>, false>>::_Ubound(PRogramObject *) const
   \                     ??_Ubound:
   \   00000000   042090E5           LDR      R2,[R0, #+4]
   \                     ??_Ubound_1:
   \   00000004   0D30D2E5           LDRB     R3,[R2, #+13]
   \   00000008   000053E3           CMP      R3,#+0
   \   0000000C   1EFF2F11           BXNE     LR
   \   00000010   103092E5           LDR      R3,[R2, #+16]
   \   00000014   030051E1           CMP      R1,R3
   \   00000018   08209225           LDRCS    R2,[R2, #+8]
   \   0000001C   0200A031           MOVCC    R0,R2
   \   00000020   00209235           LDRCC    R2,[R2, #+0]
   \   00000024   F6FFFFEA           B        ??_Ubound_1

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs set<PRogramObject *>::~set()
   \                     `?~set`:
   \   00000000   00402DE9           PUSH     {LR}
   \   00000004   ........           _BLF     ??clear,??clear??rA
   \   00000008   0040BDE8           POP      {LR}
   \   0000000C   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs set<PRogramObject *>::set()
   \                     ??set:
   \   00000000   11402DE9           PUSH     {R0,R4,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0110A0E3           MOV      R1,#+1
   \   0000000C   0D00A0E1           MOV      R0,SP
   \   00000010   ........           _BLF     __data_memzero,??__data_memzero??rA
   \   00000014   0400A0E1           MOV      R0,R4
   \   00000018   ........           _BLF     ??_Clear,??_Clear??rA
   \   0000001C   0000DDE5           LDRB     R0,[SP, #+0]
   \   00000020   1400C4E5           STRB     R0,[R4, #+20]
   \   00000024   0400A0E1           MOV      R0,R4
   \   00000028   1240BDE8           POP      {R1,R4,LR}
   \   0000002C   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void operator+(string const &, string const &)
   \                     `??operator+`:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   1CD04DE2           SUB      SP,SP,#+28
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   0250A0E1           MOV      R5,R2
   \   00000010   0D00A0E1           MOV      R0,SP
   \   00000014   ........           _BLF     ??string,??string??rA
   \   00000018   34109FE5           LDR      R1,`??operator+_2`  ;; ??npos
   \   0000001C   0020A0E3           MOV      R2,#+0
   \   00000020   003091E5           LDR      R3,[R1, #+0]
   \   00000024   0510A0E1           MOV      R1,R5
   \   00000028   ........           _BLF     ??append,??append??rA
   \   0000002C   0010A0E1           MOV      R1,R0
   \   00000030   0400A0E1           MOV      R0,R4
   \   00000034   ........           _BLF     ??string,??string??rA
   \   00000038   0020A0E3           MOV      R2,#+0
   \   0000003C   0110A0E3           MOV      R1,#+1
   \   00000040   0D00A0E1           MOV      R0,SP
   \   00000044   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000048   1CD08DE2           ADD      SP,SP,#+28
   \   0000004C   3040BDE8           POP      {R4,R5,LR}
   \   00000050   1EFF2FE1           BX       LR               ;; return
   \                     `??operator+_2`:
   \   00000054   ........           DC32     ??npos

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void operator+(string const &, char const *)
   \                     `??operator+_1`:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   1CD04DE2           SUB      SP,SP,#+28
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   0250A0E1           MOV      R5,R2
   \   00000010   0D00A0E1           MOV      R0,SP
   \   00000014   ........           _BLF     ??string,??string??rA
   \   00000018   0060A0E1           MOV      R6,R0
   \   0000001C   0500A0E1           MOV      R0,R5
   \   00000020   ........           _BLF     strlen,??strlen??rA
   \   00000024   0020A0E1           MOV      R2,R0
   \   00000028   0510A0E1           MOV      R1,R5
   \   0000002C   0600A0E1           MOV      R0,R6
   \   00000030   ........           _BLF     ??append_1,??append??rA_1
   \   00000034   0010A0E1           MOV      R1,R0
   \   00000038   0400A0E1           MOV      R0,R4
   \   0000003C   ........           _BLF     ??string,??string??rA
   \   00000040   0020A0E3           MOV      R2,#+0
   \   00000044   0110A0E3           MOV      R1,#+1
   \   00000048   0D00A0E1           MOV      R0,SP
   \   0000004C   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000050   1CD08DE2           ADD      SP,SP,#+28
   \   00000054   7040BDE8           POP      {R4-R6,LR}
   \   00000058   1EFF2FE1           BX       LR               ;; return
      2          //---------------------------------------------------------------------------
      3          #ifdef BORLAND
      4          	#pragma hdrstop
      5          	#ifdef BORLAND
      6          		#pragma package(smart_init)
      7              #endif
      8          
      9          #endif
     10          
     11          //---------------------------------------------------------------------------

   \                                 In segment CODE, align 4, keep-with-next
   \   static __??Code32?? __intrinsic __code __interwork __atpcs void __sti__routine()
   \                     ??__sti__routine:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
     12          set<PRogramObject*>IOUnit::GlobalHW_UnitSet;
   \   00000004   ........           LDR      R4,??DataTable4  ;; ??GlobalHW_UnitSet
   \   00000008   20509FE5           LDR      R5,??__sti__routine_1  ;; ?_0
   \   0000000C   0400A0E1           MOV      R0,R4
   \   00000010   ........           _BLF     ??set,??set??rA
   \   00000014   0500A0E1           MOV      R0,R5
   \   00000018   ........           _BLF     __record_needed_destruction,??__record_needed_destruction??rA
     13          set<PRogramObject*>IOUnit::GlobalPRO_IOList;
   \   0000001C   180084E2           ADD      R0,R4,#+24
   \   00000020   ........           _BLF     ??set,??set??rA
   \   00000024   0C0085E2           ADD      R0,R5,#+12
   \   00000028   ........           _BLF     __record_needed_destruction,??__record_needed_destruction??rA
   \   0000002C   ........           B        ?Subroutine20
   \                     ??__sti__routine_1:
   \   00000030   ........           DC32     ?_0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     ?_0:
   \   00000000   ............       DC32 ?_1, ??GlobalHW_UnitSet, `?~set`
   \              ............
   \   0000000C   ............       DC32 ?_3, ??GlobalPRO_IOList, `?~set`
   \              ............

   \                                 In segment DATA_Z, align 4, align-sorted
   \                     ??GlobalHW_UnitSet:
   \   00000000                      DS8 24
   \                     ??GlobalPRO_IOList:
   \   00000018                      DS8 24
     14          

   \                                 In segment CODE, align 4, keep-with-next
     15          IOUnit::IOUnit(int PortNo):ANPRO10Object(TSNUart::Channels[PortNo])
   \                     ??IOUnit:
   \   00000000   3F402DE9           PUSH     {R0-R5,LR}
   \   00000004   0040A0E1           MOV      R4,R0
     16          {
   \   00000008   ........           LDR      R0,??Subroutine20_0  ;; ??Channels
   \   0000000C   A45084E2           ADD      R5,R4,#+164
   \   00000010   011190E7           LDR      R1,[R0, +R1, LSL #+2]
   \   00000014   0400A0E1           MOV      R0,R4
   \   00000018   ........           _BLF     ??ANPRO10Object,??ANPRO10Object??rA
   \   0000001C   ........           LDR      R0,??DataTable3  ;; ??__vtbl
   \   00000020   000085E5           STR      R0,[R5, #+0]
   \   00000024   5F0F84E2           ADD      R0,R4,#+380
   \   00000028   ........           _BLF     ??set,??set??rA
     17          	GlobalHW_UnitSet.insert(this);
   \   0000002C   ........           LDR      R1,??DataTable4  ;; ??GlobalHW_UnitSet
   \   00000030   0420A0E1           MOV      R2,R4
   \   00000034   0D00A0E1           MOV      R0,SP
   \   00000038   ........           _BLF     ??insert_1,??insert??rA
     18          	SequenceNumber    = 0;
   \   0000003C   0000A0E3           MOV      R0,#+0
   \   00000040   C500C5E5           STRB     R0,[R5, #+197]
     19          	Restart           = true;
   \   00000044   0110A0E3           MOV      R1,#+1
   \   00000048   0111C5E5           STRB     R1,[R5, #+257]
     20          	ReqStatusTime     = 0;
   \   0000004C   D40085E5           STR      R0,[R5, #+212]
     21          	PowerOnTime       = 0;
   \   00000050   C80085E5           STR      R0,[R5, #+200]
     22          	PowerStatus       = 0;
   \   00000054   BC0CC5E1           STRH     R0,[R5, #+204]
     23          
     24          	CardChannel       = 0;
   \   00000058   B400C5E5           STRB     R0,[R5, #+180]
     25          	CardId            = 0;
   \   0000005C   B500C5E5           STRB     R0,[R5, #+181]
     26          	CardAddress       = 0;
   \   00000060   B600C5E5           STRB     R0,[R5, #+182]
     27          	UnitProgVersion   = 0;
   \   00000064   B700C5E5           STRB     R0,[R5, #+183]
     28          	ComVersion        = 0;
   \   00000068   B800C5E5           STRB     R0,[R5, #+184]
     29          	StoreVersion      = 0;
   \   0000006C   B900C5E5           STRB     R0,[R5, #+185]
     30          	RxBufSize         = 0;
   \   00000070   BA0BC5E1           STRH     R0,[R5, #+186]
     31          	TxBufSize         = 0;
   \   00000074   BC0BC5E1           STRH     R0,[R5, #+188]
     32          	ResetStatus       = 0;
   \   00000078   0001C5E5           STRB     R0,[R5, #+256]
     33          	ProgamTypeRunning = 0xff;
   \   0000007C   FF00A0E3           MOV      R0,#+255
   \   00000080   BE00C5E5           STRB     R0,[R5, #+190]
     34          	CardVoltage       = 0.0;
   \   00000084   0010A0E3           MOV      R1,#+0
   \   00000088   C01085E5           STR      R1,[R5, #+192]
     35          	TotalUnitRestart  = -1;
   \   0000008C   0110E0E1           MVN      R1,R1
   \   00000090   B01DC5E1           STRH     R1,[R5, #+208]
     36          	FlashEraseStatus  = 0xff;
   \   00000094   CE00C5E5           STRB     R0,[R5, #+206]
     37          	ProgrammingStatus = 0xff;
   \   00000098   CF00C5E5           STRB     R0,[R5, #+207]
     38          
     39          #ifndef ANCONF
     40          	AlarmIOComFailure  *tmpPtr = new AlarmIOComFailure( this, 10);
   \   0000009C   4014A0E3           MOV      R1,#+1073741824
   \   000000A0   481781E3           ORR      R1,R1,#0x1200000
   \   000000A4   0400A0E1           MOV      R0,R4
   \   000000A8   ........           _BLF     `??new AlarmIOComFailure`,`??new AlarmIOComFailure??rA`
     41          	AlarmSet.insert(tmpPtr);
   \   000000AC   0020A0E1           MOV      R2,R0
   \   000000B0   E41084E2           ADD      R1,R4,#+228
   \   000000B4   08008DE2           ADD      R0,SP,#+8
   \   000000B8   ........           _BLF     ??insert,??insert??rA_1
     42          	AddAlarms(CompleteAlarmInfoList);
   \   000000BC   FC1084E2           ADD      R1,R4,#+252
   \   000000C0   0400A0E1           MOV      R0,R4
   \   000000C4   ........           _BLF     ??AddAlarms,??AddAlarms??rA
     43          #endif
     44          }
   \   000000C8   0400A0E1           MOV      R0,R4
   \   000000CC   10D08DE2           ADD      SP,SP,#+16
   \   000000D0                      REQUIRE ?Subroutine20
   \   000000D0                      ;; // Fall through to label ?Subroutine20

   \                                 In segment CODE, align 4, keep-with-next
   \                     ?Subroutine20:
   \   00000000   3040BDE8           POP      {R4,R5,LR}
   \   00000004   1EFF2FE1           BX       LR               ;; return
   \                     ??Subroutine20_0:
   \   00000008   ........           DC32     ??Channels
     45          

   \                                 In segment CODE, align 4, keep-with-next
     46          IOUnit::~IOUnit(void)
     47          {
   \                     `?~IOUnit`:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
   \   0000000C   000054E3           CMP      R4,#+0
   \   00000010   0D00000A           BEQ      `?~IOUnit_1`
   \   00000014   ........           LDR      R0,??DataTable3  ;; ??__vtbl
     48          	GlobalHW_UnitSet.erase(this);
   \   00000018   0410A0E1           MOV      R1,R4
   \   0000001C   A40084E5           STR      R0,[R4, #+164]
   \   00000020   ........           LDR      R0,??DataTable4  ;; ??GlobalHW_UnitSet
   \   00000024   ........           _BLF     ??erase_1,??erase??rA_1
     49          }
   \   00000028   5F0F84E2           ADD      R0,R4,#+380
   \   0000002C   ........           _BLF     ??clear,??clear??rA
   \   00000030   0010A0E3           MOV      R1,#+0
   \   00000034   0400A0E1           MOV      R0,R4
   \   00000038   ........           _BLF     `?~ANPRO10Object`,`?~ANPRO10Object??rA`
   \   0000003C   010015E3           TST      R5,#0x1
   \   00000040   0100000A           BEQ      `?~IOUnit_1`
   \   00000044   0400A0E1           MOV      R0,R4
   \   00000048   ........           _BLF     `??operator delete`,`??operator delete??rA`
   \                     `?~IOUnit_1`:
   \   0000004C   ........           B        ?Subroutine20
     50          //---------------------------------------------------------------------------
     51          
     52          ///////////////////////////////////////////////////////////////
     53          //
     54          // Routines for the Configuration
     55          //
     56          ///////////////////////////////////////////////////////////////
     57          

   \                                 In segment CODE, align 4, keep-with-next
     58          AnsiString IOUnit::MakeConfigString(int ExtraTabs)
     59          {
   \                     ??MakeConfigString:
   \   00000000   00402DE9           PUSH     {LR}
   \   00000004   0100A0E1           MOV      R0,R1
     60          	return("");//PRogramObjectBase::MakeConfigString(ConfigString);
   \   00000008   011F8FE2           ADR      R1,??MakeConfigString_1  ;; ""
   \   0000000C   ........           _BLF     ??AnsiString,??AnsiString??rA
   \   00000010   ........           B        ?Subroutine22
   \                     ??MakeConfigString_1:
   \   00000014   00000000           DC8      "",+0,+0,+0
     61          }

   \                                 In segment CODE, align 4, keep-with-next
   \                     ?Subroutine22:
   \   00000000   0040BDE8           POP      {LR}
   \   00000004   1EFF2FE1           BX       LR               ;; return
     62          //---------------------------------------------------------------------------
     63          

   \                                 In segment CODE, align 4, keep-with-next
     64          bool IOUnit::LoadConfigString(TSNConfigString &ConfigString)
     65          {
     66          	return(true);//PRogramObjectBase::LoadConfigString(ConfigString);
   \                     ??LoadConfigString:
   \   00000000   ........           B        ?Subroutine23
     67          }

   \                                 In segment CODE, align 4, keep-with-next
   \                     ?Subroutine23:
   \   00000000   0100A0E3           MOV      R0,#+1
   \   00000004   1EFF2FE1           BX       LR               ;; return
     68          //---------------------------------------------------------------------------
     69          

   \                                 In segment CODE, align 4, keep-with-next
     70          bool IOUnit::Add(PROIOComponent *IOCompPtr, PRogramObject *ElementPtr)
     71          {
   \                     ??Add:
   \   00000000   F0412DE9           PUSH     {R4-R8,LR}
     72          	AnsiString Message =(AnsiString)"TCU "+(AnsiString)IOCompPtr->TCUAddress;
   \   00000004   94429FE5           LDR      R4,??Add_1+0x4   ;; `?<Constant "TCU ">`
   \   00000008   77DF4DE2           SUB      SP,SP,#+476
   \   0000000C   0150A0E1           MOV      R5,R1
   \   00000010   F41095E5           LDR      R1,[R5, #+244]
   \   00000014   0270A0E1           MOV      R7,R2
   \   00000018   460F8DE2           ADD      R0,SP,#+280
   \   0000001C   ........           _BLF     ??AnsiString_1,??AnsiString??rA_1
   \   00000020   0060A0E1           MOV      R6,R0
   \   00000024   0410A0E1           MOV      R1,R4
   \   00000028   FC008DE2           ADD      R0,SP,#+252
   \   0000002C   ........           _BLF     ??AnsiString,??AnsiString??rA
   \   00000030   0620A0E1           MOV      R2,R6
   \   00000034   0010A0E1           MOV      R1,R0
   \   00000038   1C008DE2           ADD      R0,SP,#+28
   \   0000003C   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000040   1C108DE2           ADD      R1,SP,#+28
   \   00000044   0D00A0E1           MOV      R0,SP
   \   00000048   ........           _BLF     ??AnsiString_2,??AnsiString??rA_2
   \   0000004C   0020A0E3           MOV      R2,#+0
   \   00000050   0110A0E3           MOV      R1,#+1
   \   00000054   1C008DE2           ADD      R0,SP,#+28
   \   00000058   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   0000005C   0020A0E3           MOV      R2,#+0
   \   00000060   0110A0E3           MOV      R1,#+1
   \   00000064   460F8DE2           ADD      R0,SP,#+280
   \   00000068   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   0000006C   0020A0E3           MOV      R2,#+0
   \   00000070   0110A0E3           MOV      R1,#+1
   \   00000074   FC008DE2           ADD      R0,SP,#+252
   \   00000078   ........           _BLF     ??_Tidy,??_Tidy??rA
     73          	Message +=(AnsiString)" com-port "+(AnsiString)IOCompPtr->TCUPortNo+".\n";
   \   0000007C   F81095E5           LDR      R1,[R5, #+248]
   \   00000080   540F8DE2           ADD      R0,SP,#+336
   \   00000084   ........           _BLF     ??AnsiString_1,??AnsiString??rA_1
   \   00000088   0060A0E1           MOV      R6,R0
   \   0000008C   081084E2           ADD      R1,R4,#+8
   \   00000090   4D0F8DE2           ADD      R0,SP,#+308
   \   00000094   ........           _BLF     ??AnsiString,??AnsiString??rA
   \   00000098   0010A0E1           MOV      R1,R0
   \   0000009C   0620A0E1           MOV      R2,R6
   \   000000A0   54008DE2           ADD      R0,SP,#+84
   \   000000A4   ........           _BLF     `??operator+`,`??operator+??rA`
   \   000000A8   7B8F8FE2           ADR      R8,??Add_1       ;; ".\n"
   \   000000AC   0820A0E1           MOV      R2,R8
   \   000000B0   54108DE2           ADD      R1,SP,#+84
   \   000000B4   38008DE2           ADD      R0,SP,#+56
   \   000000B8   ........           _BLF     `??operator+_1`,`??operator+??rA_1`
   \   000000BC   ........           LDR      R0,??DataTable8  ;; ??npos
   \   000000C0   0020A0E3           MOV      R2,#+0
   \   000000C4   006090E5           LDR      R6,[R0, #+0]
   \   000000C8   38108DE2           ADD      R1,SP,#+56
   \   000000CC   0630A0E1           MOV      R3,R6
   \   000000D0   0D00A0E1           MOV      R0,SP
   \   000000D4   ........           _BLF     ??append,??append??rA
   \   000000D8   0020A0E3           MOV      R2,#+0
   \   000000DC   0110A0E3           MOV      R1,#+1
   \   000000E0   38008DE2           ADD      R0,SP,#+56
   \   000000E4   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000000E8   0020A0E3           MOV      R2,#+0
   \   000000EC   0110A0E3           MOV      R1,#+1
   \   000000F0   54008DE2           ADD      R0,SP,#+84
   \   000000F4   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000000F8   0020A0E3           MOV      R2,#+0
   \   000000FC   0110A0E3           MOV      R1,#+1
   \   00000100   540F8DE2           ADD      R0,SP,#+336
   \   00000104   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000108   0020A0E3           MOV      R2,#+0
   \   0000010C   0110A0E3           MOV      R1,#+1
   \   00000110   4D0F8DE2           ADD      R0,SP,#+308
   \   00000114   ........           _BLF     ??_Tidy,??_Tidy??rA
     74          	Message +=(AnsiString)"Something wrong in configuration of ";
   \   00000118   141084E2           ADD      R1,R4,#+20
   \   0000011C   5B0F8DE2           ADD      R0,SP,#+364
   \   00000120   ........           _BLF     ??AnsiString,??AnsiString??rA
   \   00000124   0630A0E1           MOV      R3,R6
   \   00000128   0020A0E3           MOV      R2,#+0
   \   0000012C   0010A0E1           MOV      R1,R0
   \   00000130   0D00A0E1           MOV      R0,SP
   \   00000134   ........           _BLF     ??append,??append??rA
   \   00000138   0020A0E3           MOV      R2,#+0
   \   0000013C   0110A0E3           MOV      R1,#+1
   \   00000140   5B0F8DE2           ADD      R0,SP,#+364
   \   00000144   ........           _BLF     ??_Tidy,??_Tidy??rA
     75          	Message +=(AnsiString)ElementPtr->Name+".\n";
   \   00000148   441087E2           ADD      R1,R7,#+68
   \   0000014C   8C008DE2           ADD      R0,SP,#+140
   \   00000150   ........           _BLF     ??string,??string??rA
   \   00000154   0820A0E1           MOV      R2,R8
   \   00000158   8C108DE2           ADD      R1,SP,#+140
   \   0000015C   70008DE2           ADD      R0,SP,#+112
   \   00000160   ........           _BLF     `??operator+_1`,`??operator+??rA_1`
   \   00000164   0630A0E1           MOV      R3,R6
   \   00000168   0020A0E3           MOV      R2,#+0
   \   0000016C   70108DE2           ADD      R1,SP,#+112
   \   00000170   0D00A0E1           MOV      R0,SP
   \   00000174   ........           _BLF     ??append,??append??rA
   \   00000178   0020A0E3           MOV      R2,#+0
   \   0000017C   0110A0E3           MOV      R1,#+1
   \   00000180   70008DE2           ADD      R0,SP,#+112
   \   00000184   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000188   0020A0E3           MOV      R2,#+0
   \   0000018C   0110A0E3           MOV      R1,#+1
   \   00000190   8C008DE2           ADD      R0,SP,#+140
   \   00000194   ........           _BLF     ??_Tidy,??_Tidy??rA
     76          	Message +=(AnsiString)"Try to create IO root object\n on com-port: ";
   \   00000198   3C1084E2           ADD      R1,R4,#+60
   \   0000019C   620F8DE2           ADD      R0,SP,#+392
   \   000001A0   ........           _BLF     ??AnsiString,??AnsiString??rA
   \   000001A4   0630A0E1           MOV      R3,R6
   \   000001A8   0020A0E3           MOV      R2,#+0
   \   000001AC   0010A0E1           MOV      R1,R0
   \   000001B0   0D00A0E1           MOV      R0,SP
   \   000001B4   ........           _BLF     ??append,??append??rA
   \   000001B8   0020A0E3           MOV      R2,#+0
   \   000001BC   0110A0E3           MOV      R1,#+1
   \   000001C0   620F8DE2           ADD      R0,SP,#+392
   \   000001C4   ........           _BLF     ??_Tidy,??_Tidy??rA
     77          	Message +=(AnsiString)IOCompPtr->TCUPortNo+" with addr."+(AnsiString)IOCompPtr->IOAddress;
   \   000001C8   001195E5           LDR      R1,[R5, #+256]
   \   000001CC   700F8DE2           ADD      R0,SP,#+448
   \   000001D0   ........           _BLF     ??AnsiString_1,??AnsiString??rA_1
   \   000001D4   F81095E5           LDR      R1,[R5, #+248]
   \   000001D8   0070A0E1           MOV      R7,R0
   \   000001DC   690F8DE2           ADD      R0,SP,#+420
   \   000001E0   ........           _BLF     ??AnsiString_1,??AnsiString??rA_1
   \   000001E4   682084E2           ADD      R2,R4,#+104
   \   000001E8   0010A0E1           MOV      R1,R0
   \   000001EC   C4008DE2           ADD      R0,SP,#+196
   \   000001F0   ........           _BLF     `??operator+_1`,`??operator+??rA_1`
   \   000001F4   0720A0E1           MOV      R2,R7
   \   000001F8   C4108DE2           ADD      R1,SP,#+196
   \   000001FC   A8008DE2           ADD      R0,SP,#+168
   \   00000200   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000204   0630A0E1           MOV      R3,R6
   \   00000208   0020A0E3           MOV      R2,#+0
   \   0000020C   A8108DE2           ADD      R1,SP,#+168
   \   00000210   0D00A0E1           MOV      R0,SP
   \   00000214   ........           _BLF     ??append,??append??rA
   \   00000218   0020A0E3           MOV      R2,#+0
   \   0000021C   0110A0E3           MOV      R1,#+1
   \   00000220   A8008DE2           ADD      R0,SP,#+168
   \   00000224   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000228   0020A0E3           MOV      R2,#+0
   \   0000022C   0110A0E3           MOV      R1,#+1
   \   00000230   700F8DE2           ADD      R0,SP,#+448
   \   00000234   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000238   0020A0E3           MOV      R2,#+0
   \   0000023C   0110A0E3           MOV      R1,#+1
   \   00000240   C4008DE2           ADD      R0,SP,#+196
   \   00000244   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000248   0020A0E3           MOV      R2,#+0
   \   0000024C   0110A0E3           MOV      R1,#+1
   \   00000250   690F8DE2           ADD      R0,SP,#+420
   \   00000254   ........           _BLF     ??_Tidy,??_Tidy??rA
     78          	HardwareSetupWarning(Message);
   \   00000258   0D10A0E1           MOV      R1,SP
   \   0000025C   E0008DE2           ADD      R0,SP,#+224
   \   00000260   ........           _BLF     ??string,??string??rA
   \   00000264   E0008DE2           ADD      R0,SP,#+224
   \   00000268   ........           _BLF     ??HardwareSetupWarning,??HardwareSetupWarning??rA
   \   0000026C   0020A0E3           MOV      R2,#+0
   \   00000270   0110A0E3           MOV      R1,#+1
   \   00000274   E0008DE2           ADD      R0,SP,#+224
   \   00000278   ........           _BLF     ??_Tidy,??_Tidy??rA
     79          	return(false);
   \   0000027C   0020A0E3           MOV      R2,#+0
   \   00000280   0110A0E3           MOV      R1,#+1
   \   00000284   0D00A0E1           MOV      R0,SP
   \   00000288   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   0000028C   77DF8DE2           ADD      SP,SP,#+476
   \   00000290   F041BDE8           POP      {R4-R8,LR}
   \   00000294   0000A0E3           MOV      R0,#+0
   \   00000298   1EFF2FE1           BX       LR               ;; return
   \                     ??Add_1:
   \   0000029C   2E0A0000           DC8      ".\n",+0
   \   000002A0   ........           DC32     `?<Constant "TCU ">`
     80          }
     81          //---------------------------------------------------------------------------
     82          
     83          #ifndef ANCONF
     84          ///////////////////////////////////////////////////////////////
     85          //
     86          // Routines for the librarian
     87          //
     88          ///////////////////////////////////////////////////////////////
     89          

   \                                 In segment CODE, align 4, keep-with-next
     90          int  IOUnit::GetValue(int ValueId, int Index, float &MyRetValue, int &DecPnt, int &Unit)
     91          {
   \                     ??GetValue:
   \   00000000   F0412DE9           PUSH     {R4-R8,LR}
   \   00000004   18509DE5           LDR      R5,[SP, #+24]
   \   00000008   1C609DE5           LDR      R6,[SP, #+28]
   \   0000000C   0340A0E1           MOV      R4,R3
     92          	int Status = GETVAL_NO_ERR;
   \   00000010   0070A0E3           MOV      R7,#+0
     93          	switch ( ValueId ) {
   \   00000014   563F80E2           ADD      R3,R0,#+344
   \   00000018   0080A0E3           MOV      R8,#+0
   \   0000001C   95C041E2           SUB      R12,R1,#+149
   \   00000020   44CD4CE2           SUB      R12,R12,#+4352
   \   00000024   0A005CE3           CMP      R12,#+10
   \   00000028   2800008A           BHI      ??GetValue_3
   \   0000002C   01EF8FE2           ADR      LR,??GetValue_1
   \   00000030   0CE0DEE7           LDRB     LR,[LR, R12]
   \   00000034   0EF18FE0           ADD      PC,PC,LR, LSL #+2
   \                     ??GetValue_1:
   \   00000038   02090C0F           DC8      +2,+9,+12,+15
   \   0000003C   11131625           DC8      +17,+19,+22,+37
   \   00000040   1E251C00           DC8      +30,+37,+28,+0
     94          	case SVT_IO_COM_CHANNEL   :
     95          		MyRetValue = CardChannel+1;
   \                     ??GetValue_4:
   \   00000044   0000D3E5           LDRB     R0,[R3, #+0]
   \   00000048   010080E2           ADD      R0,R0,#+1
   \                     ??GetValue_5:
   \   0000004C   ........           _BLF     __longToFloat,??__longToFloat??rA
   \                     ??GetValue_6:
   \   00000050   000084E5           STR      R0,[R4, #+0]
     96          		DecPnt     = 0;
   \   00000054   008085E5           STR      R8,[R5, #+0]
     97          		Unit       = NO_UNIT;
   \   00000058   008086E5           STR      R8,[R6, #+0]
   \   0000005C   210000EA           B        ??GetValue_7
     98          		break;
     99          	case SVT_IO_PROG_VERSION   :
    100          		MyRetValue = UnitProgVersion;
   \                     ??GetValue_8:
   \   00000060   0300D3E5           LDRB     R0,[R3, #+3]
   \                     ??GetValue_9:
   \   00000064   ........           _BLF     __ulongToFloat,??__ulongToFloat??rA
   \   00000068   F8FFFFEA           B        ??GetValue_6
    101          		DecPnt     = 0;
    102          		Unit       = NO_UNIT;
    103          		break;
    104          	case SVT_IO_COM_VERSION   :
    105          		MyRetValue = ComVersion;
   \                     ??GetValue_10:
   \   0000006C   0400D3E5           LDRB     R0,[R3, #+4]
   \                     ??GetValue_11:
   \   00000070   ........           _BLF     __ulongToFloat,??__ulongToFloat??rA
   \   00000074   F5FFFFEA           B        ??GetValue_6
    106          		DecPnt     = 0;
    107          		Unit       = NO_UNIT;
    108          		break;
    109          	case SVT_IO_STORE_VERSION  :
    110          		MyRetValue = StoreVersion;
   \                     ??GetValue_12:
   \   00000078   0500D3E5           LDRB     R0,[R3, #+5]
   \   0000007C   F8FFFFEA           B        ??GetValue_9
    111          		DecPnt     = 0;
    112          		Unit       = NO_UNIT;
    113          		break;
    114          	case SVT_IO_RXBUF_SIZE     :
    115          		MyRetValue = RxBufSize;
   \                     ??GetValue_13:
   \   00000080   B600D3E1           LDRH     R0,[R3, #+6]
   \   00000084   F9FFFFEA           B        ??GetValue_11
    116          		DecPnt     = 0;
    117          		Unit       = NO_UNIT;
    118          		break;
    119          	case SVT_IO_TXBUF_SIZE     :
    120          		MyRetValue = TxBufSize;
   \                     ??GetValue_14:
   \   00000088   B800D3E1           LDRH     R0,[R3, #+8]
   \   0000008C   ........           _BLF     __ulongToFloat,??__ulongToFloat??rA
   \   00000090   EEFFFFEA           B        ??GetValue_6
    121          		DecPnt     = 0;
    122          		Unit       = NO_UNIT;
    123          		break;
    124          	case SVT_IO_RESET_STATUS   :
    125          		MyRetValue = ResetStatus;
   \                     ??GetValue_15:
   \   00000094   4C00D3E5           LDRB     R0,[R3, #+76]
   \   00000098   ........           _BLF     __ulongToFloat,??__ulongToFloat??rA
   \   0000009C   000084E5           STR      R0,[R4, #+0]
    126          		DecPnt     = 0;
   \   000000A0   008085E5           STR      R8,[R5, #+0]
    127          		Unit       = NO_UNIT;
   \   000000A4   008086E5           STR      R8,[R6, #+0]
   \   000000A8   0E0000EA           B        ??GetValue_7
    128          		break;
    129          	case SVT_IO_TOTAL_RESTARTS:
    130          		MyRetValue = TotalUnitRestart;
   \                     ??GetValue_16:
   \   000000AC   FC01D3E1           LDRSH    R0,[R3, #+28]
   \   000000B0   E5FFFFEA           B        ??GetValue_5
    131          		DecPnt     = 0;
    132          		Unit       = NO_UNIT;
    133          		break;
    134          	case SVT_IO_CARD_VOLTAGE:
    135          		MyRetValue = CardVoltage;
   \                     ??GetValue_17:
   \   000000B4   0C0093E5           LDR      R0,[R3, #+12]
   \   000000B8   000084E5           STR      R0,[R4, #+0]
    136          		DecPnt     = 2;
   \   000000BC   0200A0E3           MOV      R0,#+2
   \   000000C0   000085E5           STR      R0,[R5, #+0]
    137          		Unit       = VOLTAGE_UNIT;
   \   000000C4   1200A0E3           MOV      R0,#+18
   \   000000C8   000086E5           STR      R0,[R6, #+0]
   \   000000CC   050000EA           B        ??GetValue_7
    138          		break;
    139          	default:
    140          		Status = ANPRO10Object::GetValue(ValueId, Index, MyRetValue,  DecPnt,Unit);
   \                     ??GetValue_3:
   \   000000D0   40002DE9           PUSH     {R6}
   \   000000D4   20002DE9           PUSH     {R5}
   \   000000D8   0430A0E1           MOV      R3,R4
   \   000000DC   ........           _BLF     ??GetValue_2,??GetValue??rA
   \   000000E0   0070A0E1           MOV      R7,R0
   \   000000E4   08D08DE2           ADD      SP,SP,#+8
    141          		break;
    142          	}
    143          	return(Status);
   \                     ??GetValue_7:
   \   000000E8   0700A0E1           MOV      R0,R7
   \   000000EC   ........           B        ?Subroutine24
    144          }

   \                                 In segment CODE, align 4, keep-with-next
   \                     ?Subroutine24:
   \   00000000   F041BDE8           POP      {R4-R8,LR}
   \   00000004   1EFF2FE1           BX       LR               ;; return
    145          

   \                                 In segment CODE, align 4, keep-with-next
    146          int IOUnit::GetStringValue(int ValueId, int Index, AnsiString &MyString)
    147          {
   \                     ??GetStringValue:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   54D04DE2           SUB      SP,SP,#+84
   \   00000008   0340A0E1           MOV      R4,R3
    148          	int Status = GETVAL_NO_ERR;
   \   0000000C   0050A0E3           MOV      R5,#+0
    149          	switch ( ValueId ) {
   \   00000010   9CC0A0E3           MOV      R12,#+156
   \   00000014   44CD8CE3           ORR      R12,R12,#0x1100
   \   00000018   0C0051E1           CMP      R1,R12
   \   0000001C   2F00001A           BNE      ??GetStringValue_2
    150          	case SVT_IO_P_TYPE_RUNNING:
    151          		switch ( ProgamTypeRunning ) {
   \   00000020   6201D0E5           LDRB     R0,[R0, #+354]
   \   00000024   000050E3           CMP      R0,#+0
   \   00000028   0200000A           BEQ      ??GetStringValue_3
   \   0000002C   010050E2           SUBS     R0,R0,#+1
   \   00000030   0F00000A           BEQ      ??GetStringValue_4
   \   00000034   1B0000EA           B        ??GetStringValue_5
    152          		case 0:
    153          			MyString = FindDictionaryWord(L_WORD483); // BootLoader
   \                     ??GetStringValue_3:
   \   00000038   E310A0E3           MOV      R1,#+227
   \   0000003C   401F81E3           ORR      R1,R1,#0x100
   \   00000040   0D00A0E1           MOV      R0,SP
   \   00000044   ........           _BLF     ??FindDictionaryWord,??FindDictionaryWord??rA
   \   00000048   ........           LDR      R0,??DataTable8  ;; ??npos
   \   0000004C   0020A0E3           MOV      R2,#+0
   \   00000050   003090E5           LDR      R3,[R0, #+0]
   \   00000054   0D10A0E1           MOV      R1,SP
   \   00000058   0400A0E1           MOV      R0,R4
   \   0000005C   ........           _BLF     ??assign,??assign??rA
   \   00000060   0520A0E1           MOV      R2,R5
   \   00000064   0110A0E3           MOV      R1,#+1
   \   00000068   0D00A0E1           MOV      R0,SP
   \                     ??GetStringValue_6:
   \   0000006C   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000070   1C0000EA           B        ??GetStringValue_7
    154          			break;
    155          		case 1:
    156          			MyString = FindDictionaryWord(L_WORD484); // Application
   \                     ??GetStringValue_4:
   \   00000074   791FA0E3           MOV      R1,#+484
   \   00000078   1C008DE2           ADD      R0,SP,#+28
   \   0000007C   ........           _BLF     ??FindDictionaryWord,??FindDictionaryWord??rA
   \   00000080   ........           LDR      R0,??DataTable8  ;; ??npos
   \   00000084   0020A0E3           MOV      R2,#+0
   \   00000088   003090E5           LDR      R3,[R0, #+0]
   \   0000008C   1C108DE2           ADD      R1,SP,#+28
   \   00000090   0400A0E1           MOV      R0,R4
   \   00000094   ........           _BLF     ??assign,??assign??rA
   \   00000098   0520A0E1           MOV      R2,R5
   \   0000009C   0110A0E3           MOV      R1,#+1
   \   000000A0   1C008DE2           ADD      R0,SP,#+28
   \   000000A4   F0FFFFEA           B        ??GetStringValue_6
    157          			break;
    158          		default:
    159          			MyString = FindDictionaryWord(L_WORD485); // Unknown
   \                     ??GetStringValue_5:
   \   000000A8   E510A0E3           MOV      R1,#+229
   \   000000AC   401F81E3           ORR      R1,R1,#0x100
   \   000000B0   38008DE2           ADD      R0,SP,#+56
   \   000000B4   ........           _BLF     ??FindDictionaryWord,??FindDictionaryWord??rA
   \   000000B8   ........           LDR      R0,??DataTable8  ;; ??npos
   \   000000BC   0020A0E3           MOV      R2,#+0
   \   000000C0   003090E5           LDR      R3,[R0, #+0]
   \   000000C4   38108DE2           ADD      R1,SP,#+56
   \   000000C8   0400A0E1           MOV      R0,R4
   \   000000CC   ........           _BLF     ??assign,??assign??rA
   \   000000D0   0520A0E1           MOV      R2,R5
   \   000000D4   0110A0E3           MOV      R1,#+1
   \   000000D8   38008DE2           ADD      R0,SP,#+56
   \   000000DC   E2FFFFEA           B        ??GetStringValue_6
    160          			break;
    161          		}
    162          		break;
    163          	default:
    164          		Status = ANPRO10Object::GetStringValue(ValueId,Index, MyString);
   \                     ??GetStringValue_2:
   \   000000E0   ........           _BLF     ??GetStringValue_1,??GetStringValue??rA
   \   000000E4   0050A0E1           MOV      R5,R0
    165          		break;
    166          	}
    167          	return(Status);
   \                     ??GetStringValue_7:
   \   000000E8   0500A0E1           MOV      R0,R5
   \   000000EC   54D08DE2           ADD      SP,SP,#+84
   \   000000F0   ........           B        ?Subroutine20
    168          }
    169          

   \                                 In segment CODE, align 4, keep-with-next
    170          int IOUnit::PutValue( int ValueId, int Index, AnsiString NewValue,bool Local, int *UnitId)
    171          {
   \                     ??PutValue:
   \   00000000   F0412DE9           PUSH     {R4-R8,LR}
   \   00000004   1CD04DE2           SUB      SP,SP,#+28
   \   00000008   3470DDE5           LDRB     R7,[SP, #+52]
   \   0000000C   38809DE5           LDR      R8,[SP, #+56]
   \   00000010   0040A0E1           MOV      R4,R0
   \   00000014   0150A0E1           MOV      R5,R1
   \   00000018   0260A0E1           MOV      R6,R2
   \   0000001C   0310A0E1           MOV      R1,R3
    172          	return(ANPRO10Object::PutValue( ValueId, Index, NewValue, Local, UnitId));
   \   00000020   0D00A0E1           MOV      R0,SP
   \   00000024   ........           _BLF     ??string,??string??rA
   \   00000028   00012DE9           PUSH     {R8}
   \   0000002C   80002DE9           PUSH     {R7}
   \   00000030   08308DE2           ADD      R3,SP,#+8
   \   00000034   0620A0E1           MOV      R2,R6
   \   00000038   0510A0E1           MOV      R1,R5
   \   0000003C   0400A0E1           MOV      R0,R4
   \   00000040   ........           _BLF     ??PutValue_1,??PutValue??rA
   \   00000044   0040A0E1           MOV      R4,R0
   \   00000048   0020A0E3           MOV      R2,#+0
   \   0000004C   0110A0E3           MOV      R1,#+1
   \   00000050   08008DE2           ADD      R0,SP,#+8
   \   00000054   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000058   0400A0E1           MOV      R0,R4
   \   0000005C   24D08DE2           ADD      SP,SP,#+36
   \   00000060                      REQUIRE ?Subroutine24
   \   00000060                      ;; // Fall through to label ?Subroutine24
    173          }
    174          

   \                                 In segment CODE, align 4, keep-with-next
    175          int IOUnit::PutFloatValue( int ValueId, float NewValue)
    176          {
   \                     ??PutFloatValue:
   \   00000000   00402DE9           PUSH     {LR}
    177          	return(ANPRO10Object::PutFloatValue(ValueId,NewValue));
   \   00000004   ........           _BLF     ??PutFloatValue_1,??PutFloatValue??rA
   \   00000008                      REQUIRE ?Subroutine22
   \   00000008                      ;; // Fall through to label ?Subroutine22
    178          }
    179          
    180          
    181          

   \                                 In segment CODE, align 4, keep-with-next
    182          void IOUnit::HandleIO(int Delay){
    183          }
   \                     ??HandleIO:
   \   00000000   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
    184          void IOUnit::PowerOn(void)
    185          {
   \                     ??PowerOn:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0040A0E1           MOV      R4,R0
    186          	PowerOnTime = time(NULL);
   \   00000008   0000A0E3           MOV      R0,#+0
   \   0000000C   ........           _BLF     time,??time??rA
   \   00000010   6C0184E5           STR      R0,[R4, #+364]
    187          }
   \   00000014                      REQUIRE ?Subroutine21
   \   00000014                      ;; // Fall through to label ?Subroutine21

   \                                 In segment CODE, align 4, keep-with-next
   \                     ?Subroutine21:
   \   00000000   1040BDE8           POP      {R4,LR}
   \   00000004   1EFF2FE1           BX       LR               ;; return
    188          
    189          

   \                                 In segment CODE, align 4, keep-with-next
    190          void IOUnit::SendToIO(U16 Command, void* Data, U16 Size, bool RequestAck)
    191          {
    192          }
   \                     ??SendToIO:
   \   00000000   1EFF2FE1           BX       LR               ;; return
    193          

   \                                 In segment CODE, align 4, keep-with-next
    194          void IOUnit::Request(U16 Command)
    195          {
   \                     ??Request:
   \   00000000   00402DE9           PUSH     {LR}
   \   00000004   00C0A0E1           MOV      R12,R0
    196          	SendToIO(Command, NULL, 0, true);
   \   00000008   0100A0E3           MOV      R0,#+1
   \   0000000C   01002DE9           PUSH     {R0}
   \   00000010   0C00A0E1           MOV      R0,R12
   \   00000014   A4C09CE5           LDR      R12,[R12, #+164]
   \   00000018   0030A0E3           MOV      R3,#+0
   \   0000001C   8CC09CE5           LDR      R12,[R12, #+140]
   \   00000020   0020A0E3           MOV      R2,#+0
   \   00000024   0FE0A0E1           MOV      LR,PC
   \   00000028   1CFF2FE1           BX       R12
    197          }
   \   0000002C   0140BDE8           POP      {R0,LR}
   \   00000030   1EFF2FE1           BX       LR               ;; return
    198          

   \                                 In segment CODE, align 4, keep-with-next
    199          bool IOUnit::ProgramFlash(U16 Address, U16 Size)
    200          {
   \                     ??ProgramFlash:
   \   00000000   F0402DE9           PUSH     {R4-R7,LR}
   \   00000004   0040A0E1           MOV      R4,R0
    201          	bool ProgOK=true;
    202          	#ifdef S2TXU
    203          	IOFlashData FData;
    204          	FData.Address = Address>>1;
    205          	FData.Size    = Size;
    206          	memcpy(FData.FlashData,&ProgramDataANZB485[Address],Size);
   \   00000008   B0009FE5           LDR      R0,??ProgramFlash_1  ;; ProgramDataANZB485
   \   0000000C   41DF4DE2           SUB      SP,SP,#+260
   \   00000010   0250A0E1           MOV      R5,R2
   \   00000014   0160A0E3           MOV      R6,#+1
   \   00000018   A120A0E1           LSR      R2,R1,#+1
   \   0000001C   B020CDE1           STRH     R2,[SP, #+0]
   \   00000020   B250CDE1           STRH     R5,[SP, #+2]
   \   00000024   0520A0E1           MOV      R2,R5
   \   00000028   001081E0           ADD      R1,R1,R0
   \   0000002C   04008DE2           ADD      R0,SP,#+4
   \   00000030   ........           _BLF     memcpy,??memcpy??rA
    207          	for ( int RetryCnt=0; ProgOK && RetryCnt < 3; RetryCnt++ ) {
   \   00000034   0070A0E3           MOV      R7,#+0
    208          		ProgrammingStatus = 0xff;	// Just to be sure
   \                     ??ProgramFlash_2:
   \   00000038   FF00A0E3           MOV      R0,#+255
   \   0000003C   7301C4E5           STRB     R0,[R4, #+371]
    209          		SendToIO(CMD_FLASH_PROG, &FData, sizeof(FData)+Size-ANPRO10_IO_PDATA_SIZE, false);
   \   00000040   0000A0E3           MOV      R0,#+0
   \   00000044   01002DE9           PUSH     {R0}
   \   00000048   A4C094E5           LDR      R12,[R4, #+164]
   \   0000004C   043085E2           ADD      R3,R5,#+4
   \   00000050   8CC09CE5           LDR      R12,[R12, #+140]
   \   00000054   0338A0E1           MOV      R3,R3, LSL #+16
   \   00000058   2338A0E1           MOV      R3,R3, LSR #+16
   \   0000005C   04208DE2           ADD      R2,SP,#+4
   \   00000060   A810A0E3           MOV      R1,#+168
   \   00000064   701E81E3           ORR      R1,R1,#0x700
   \   00000068   0400A0E1           MOV      R0,R4
   \   0000006C   0FE0A0E1           MOV      LR,PC
   \   00000070   1CFF2FE1           BX       R12
    210          		ANPRO10_IO_Receive(2000);
   \   00000074   7D1EA0E3           MOV      R1,#+2000
   \   00000078   0400A0E1           MOV      R0,R4
   \   0000007C   ........           _BLF     ??ANPRO10_IO_Receive,??ANPRO10_IO_Receive??rA
    211          		switch ( ProgrammingStatus ) {
   \   00000080   7301D4E5           LDRB     R0,[R4, #+371]
   \   00000084   04D08DE2           ADD      SP,SP,#+4
    212          		case 0x0:
    213          			break;
    214          		case 0x1:
    215          		case 0x2:
    216          			ProgOK = false;
    217          			break;
    218          		case 0xff: // No answer
    219          			break;
    220          		}
    221          	}
   \   00000088   017087E2           ADD      R7,R7,#+1
   \   0000008C   012040E2           SUB      R2,R0,#+1
   \   00000090   010052E3           CMP      R2,#+1
   \   00000094   0060A093           MOVLS    R6,#+0
   \   00000098   000056E3           CMP      R6,#+0
   \   0000009C   0300000A           BEQ      ??ProgramFlash_3
   \   000000A0   030057E3           CMP      R7,#+3
   \   000000A4   E3FFFFBA           BLT      ??ProgramFlash_2
   \   000000A8   FF0050E3           CMP      R0,#+255
    222          	if ( ProgOK && ProgrammingStatus == 0xff ) {
    223          		ProgOK = false;
   \   000000AC   0060A003           MOVEQ    R6,#+0
    224          	}
    225          	#endif
    226          	return(ProgOK);
   \                     ??ProgramFlash_3:
   \   000000B0   0600A0E1           MOV      R0,R6
   \   000000B4   41DF8DE2           ADD      SP,SP,#+260
   \   000000B8   F040BDE8           POP      {R4-R7,LR}
   \   000000BC   1EFF2FE1           BX       LR               ;; return
   \                     ??ProgramFlash_1:
   \   000000C0   ........           DC32     ProgramDataANZB485
    227          }
    228          

   \                                 In segment CODE, align 4, keep-with-next
    229          bool IOUnit::EraseFlash(void)
    230          {
   \                     ??EraseFlash:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   0040A0E1           MOV      R4,R0
    231          	bool EraseOK = false;
   \   00000008   0050A0E3           MOV      R5,#+0
    232          	#ifdef S2TXU
    233          	for ( int RetryCnt=0; !EraseOK && RetryCnt < 3; RetryCnt++ ) {
   \   0000000C   0060A0E3           MOV      R6,#+0
    234          		FlashEraseStatus = 0xff; // Just to be sure
   \                     ??EraseFlash_1:
   \   00000010   FF00A0E3           MOV      R0,#+255
   \   00000014   7201C4E5           STRB     R0,[R4, #+370]
    235          		Request(CMD_FLASH_ERASE);
   \   00000018   9E10A0E3           MOV      R1,#+158
   \   0000001C   701E81E3           ORR      R1,R1,#0x700
   \   00000020   0400A0E1           MOV      R0,R4
   \   00000024   ........           BL       ??Request
    236          		ANPRO10_IO_Receive(5000);
   \   00000028   8810A0E3           MOV      R1,#+136
   \   0000002C   4C1D81E3           ORR      R1,R1,#0x1300
   \   00000030   0400A0E1           MOV      R0,R4
   \   00000034   ........           _BLF     ??ANPRO10_IO_Receive,??ANPRO10_IO_Receive??rA
    237          		if ( FlashEraseStatus==0 ) {
   \   00000038   7201D4E5           LDRB     R0,[R4, #+370]
    238          			EraseOK = true;
    239          		}
    240          	}
   \   0000003C   016086E2           ADD      R6,R6,#+1
   \   00000040   000050E3           CMP      R0,#+0
   \   00000044   0150A003           MOVEQ    R5,#+1
   \   00000048   000055E3           CMP      R5,#+0
   \   0000004C   0100001A           BNE      ??EraseFlash_2
   \   00000050   030056E3           CMP      R6,#+3
   \   00000054   EDFFFFBA           BLT      ??EraseFlash_1
    241          	#endif
    242          	return(EraseOK);
   \                     ??EraseFlash_2:
   \   00000058   0500A0E1           MOV      R0,R5
   \   0000005C   7040BDE8           POP      {R4-R6,LR}
   \   00000060   1EFF2FE1           BX       LR               ;; return
    243          }
    244          

   \                                 In segment CODE, align 4, keep-with-next
    245          bool IOUnit::UpdateProgram(void)
    246          {
   \                     ??UpdateProgram:
   \   00000000   F0432DE9           PUSH     {R4-R9,LR}
   \   00000004   0050A0E1           MOV      R5,R0
    247          	bool ProgOK=true;
    248          	#ifdef S2TXU
    249          	if ( ProgamTypeRunning != 0 ) {
   \   00000008   6201D5E5           LDRB     R0,[R5, #+354]
   \   0000000C   000050E3           CMP      R0,#+0
   \   00000010   0A00000A           BEQ      ??UpdateProgram_1
    250          		Request(CMD_GOTO_BOOTLOADER);
   \   00000014   FF1FA0E3           MOV      R1,#+1020
   \   00000018   0500A0E1           MOV      R0,R5
   \   0000001C   ........           BL       ??Request
    251          		TSN_Delay(1000); // Wait for bootloader to be ready
   \   00000020   FA0FA0E3           MOV      R0,#+1000
   \   00000024   ........           _BLF     OS_Delay,??OS_Delay??rA
    252          		Request(CMD_REQ_STATUS);
   \   00000028   FA1FA0E3           MOV      R1,#+1000
   \   0000002C   0500A0E1           MOV      R0,R5
   \   00000030   ........           BL       ??Request
    253          		ANPRO10_IO_Receive();
   \   00000034   1E10A0E3           MOV      R1,#+30
   \   00000038   0500A0E1           MOV      R0,R5
   \   0000003C   ........           _BLF     ??ANPRO10_IO_Receive,??ANPRO10_IO_Receive??rA
    254          	}
    255          	if ( ProgamTypeRunning == 0 ) {	// Are the bootloader active
   \                     ??UpdateProgram_1:
   \   00000040   6201D5E5           LDRB     R0,[R5, #+354]
   \   00000044   000050E3           CMP      R0,#+0
   \   00000048   2D00001A           BNE      ??UpdateProgram_2
    256          		if ( EraseFlash() ) {
   \   0000004C   0500A0E1           MOV      R0,R5
   \   00000050   ........           BL       ??EraseFlash
   \   00000054   000050E3           CMP      R0,#+0
   \   00000058   2900000A           BEQ      ??UpdateProgram_2
    257          			int NumberOfFullPackets = ProgramDataANZB485Size/ANPRO10_IO_PDATA_SIZE;
   \   0000005C   B0009FE5           LDR      R0,??UpdateProgram_3  ;; ProgramDataANZB485Size
    258          			U16 RemainingSize       = ProgramDataANZB485Size % ANPRO10_IO_PDATA_SIZE;
    259          			int Cnt;
    260          			for ( Cnt=0; ProgOK && Cnt < NumberOfFullPackets; Cnt++ ) {
   \   00000060   0080A0E3           MOV      R8,#+0
   \   00000064   000090E5           LDR      R0,[R0, #+0]
   \   00000068   C013A0E1           ASR      R1,R0,#+7
   \   0000006C   211C80E0           ADD      R1,R0,R1, LSR #+24
   \   00000070   4114A0E1           ASR      R1,R1,#+8
   \   00000074   0140A0E1           MOV      R4,R1
   \   00000078   0164A0E1           LSL      R6,R1,#+8
   \   0000007C   067040E0           SUB      R7,R0,R6
   \   00000080   0778A0E1           MOV      R7,R7, LSL #+16
   \   00000084   2778A0E1           MOV      R7,R7, LSR #+16
   \   00000088   020000EA           B        ??UpdateProgram_4
   \                     ??UpdateProgram_5:
   \   0000008C   018088E2           ADD      R8,R8,#+1
   \   00000090   000059E3           CMP      R9,#+0
   \   00000094   1B00000A           BEQ      ??UpdateProgram_6
   \                     ??UpdateProgram_4:
   \   00000098   040058E1           CMP      R8,R4
   \   0000009C   090000AA           BGE      ??UpdateProgram_7
    261          				ProgOK = ProgramFlash(Cnt*ANPRO10_IO_PDATA_SIZE,ANPRO10_IO_PDATA_SIZE);
   \   000000A0   402FA0E3           MOV      R2,#+256
   \   000000A4   0814A0E1           LSL      R1,R8,#+8
   \   000000A8   0118A0E1           MOV      R1,R1, LSL #+16
   \   000000AC   2118A0E1           MOV      R1,R1, LSR #+16
   \   000000B0   0500A0E1           MOV      R0,R5
   \   000000B4   ........           BL       ??ProgramFlash
   \   000000B8   000050E3           CMP      R0,#+0
   \   000000BC   0090A003           MOVEQ    R9,#+0
   \   000000C0   0190A013           MOVNE    R9,#+1
   \   000000C4   F0FFFFEA           B        ??UpdateProgram_5
    262          			}
    263          			if ( ProgOK ) {
    264          				ProgOK = ProgramFlash(NumberOfFullPackets*ANPRO10_IO_PDATA_SIZE,RemainingSize);
   \                     ??UpdateProgram_7:
   \   000000C8   0720A0E1           MOV      R2,R7
   \   000000CC   0618A0E1           MOV      R1,R6, LSL #+16
   \   000000D0   2118A0E1           MOV      R1,R1, LSR #+16
   \   000000D4   0500A0E1           MOV      R0,R5
   \   000000D8   ........           BL       ??ProgramFlash
   \   000000DC   000050E3           CMP      R0,#+0
   \   000000E0   0190A013           MOVNE    R9,#+1
   \   000000E4   0090A003           MOVEQ    R9,#+0
    265          			}
    266          			if ( ProgOK ) {
   \   000000E8   000059E3           CMP      R9,#+0
   \   000000EC   0500000A           BEQ      ??UpdateProgram_6
    267          				Request(CMD_EXIT_BOOTLOADER);
   \   000000F0   C610A0E3           MOV      R1,#+198
   \   000000F4   701E81E3           ORR      R1,R1,#0x700
   \   000000F8   0500A0E1           MOV      R0,R5
   \   000000FC   ........           BL       ??Request
   \   00000100   000000EA           B        ??UpdateProgram_6
    268          			}
    269          		} else {
    270          			ProgOK = false;
   \                     ??UpdateProgram_2:
   \   00000104   0090A0E3           MOV      R9,#+0
    271          		}
    272          	} else {
    273          		ProgOK = false;
    274          	}
    275          	#endif
    276          	return ProgOK;
   \                     ??UpdateProgram_6:
   \   00000108   0900A0E1           MOV      R0,R9
   \   0000010C   F043BDE8           POP      {R4-R9,LR}
   \   00000110   1EFF2FE1           BX       LR               ;; return
   \                     ??UpdateProgram_3:
   \   00000114   ........           DC32     ProgramDataANZB485Size
    277          }
    278          
    279          
    280          #endif
    281          //-----------------------------------------------------------------------------

   \                                 In segment CODE, align 4, keep-with-next
    282          int IOUnit::GetRequestNumber(void)
    283          {
    284          	return 1;
   \                     ??GetRequestNumber:
   \   00000000                      REQUIRE ?Subroutine23
   \   00000000                      ;; // Fall through to label ?Subroutine23
    285          }
    286          

   \                                 In segment CODE, align 4, keep-with-next
    287          void IOUnit::DeleteAll(void)
    288          {
   \                     ??DeleteAll:
   \   00000000   10402DE9           PUSH     {R4,LR}
    289          	int Cnt = 0;
    290          	unsigned Size = GlobalHW_UnitSet.size();
   \   00000004   38409FE5           LDR      R4,??DeleteAll_1  ;; ??GlobalHW_UnitSet
   \   00000008   090000EA           B        ??DeleteAll_2
    291          	while( !GlobalHW_UnitSet.empty() ) {
    292          		set<PRogramObject*>::iterator pBIt = GlobalHW_UnitSet.begin();
   \                     ??DeleteAll_3:
   \   0000000C   000094E5           LDR      R0,[R4, #+0]
    293          		PRogramObject *Ptr = *pBIt;
    294          		delete (*pBIt);
   \   00000010   102090E5           LDR      R2,[R0, #+16]
   \   00000014   000052E3           CMP      R2,#+0
   \   00000018   FBFFFF0A           BEQ      ??DeleteAll_3
   \   0000001C   0200A0E1           MOV      R0,R2
   \   00000020   A42092E5           LDR      R2,[R2, #+164]
   \   00000024   0310A0E3           MOV      R1,#+3
   \   00000028   002092E5           LDR      R2,[R2, #+0]
   \   0000002C   0FE0A0E1           MOV      LR,PC
   \   00000030   12FF2FE1           BX       R2
    295          		Cnt++;
    296          	}
   \                     ??DeleteAll_2:
   \   00000034   100094E5           LDR      R0,[R4, #+16]
   \   00000038   000050E3           CMP      R0,#+0
   \   0000003C   F2FFFF1A           BNE      ??DeleteAll_3
    297          
    298          }
   \   00000040   ........           B        ?Subroutine21
   \                     ??DeleteAll_1:
   \   00000044   ........           DC32     ??GlobalHW_UnitSet

   \                                 In segment DIFUNCT, align 4, keep-with-next, root
   \   00000000                      REQUIRE ?call_ctors
   \   00000000   ........           DC32    ??__sti__routine

   \                                 In segment DATA_C, align 1, align-sorted
   \   00000000   00                 DC8 ""

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "TCU ">`:
   \   00000000   5443552000         DC8 "TCU "
   \   00000005   000000             DC8 0, 0, 0
   \   00000008   20636F6D2D70       DC8 " com-port "
   \              6F72742000  
   \   00000013   00                 DC8 0
   \   00000014   536F6D657468       DC8 "Something wrong in configuration of "
   \              696E67207772
   \              6F6E6720696E
   \              20636F6E6669
   \              677572617469
   \              6F6E206F6620
   \              00          
   \   00000039   000000             DC8 0, 0, 0
   \   0000003C   54727920746F       DC8 "Try to create IO root object\012 on com-port: "
   \              206372656174
   \              6520494F2072
   \              6F6F74206F62
   \              6A6563740A20
   \              6F6E20636F6D
   \              2D706F72743A
   \              2000        
   \   00000068   207769746820       DC8 " with addr."
   \              616464722E00

   \                                 In segment DATA_C, align 1, align-sorted
   \   00000000   2E0A00             DC8 ".\012"

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs IOUnit &IOUnit::new IOUnit(int)
   \                     `??new IOUnit`:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   6A0FA0E3           MOV      R0,#+424
   \   0000000C   ........           _BLF     `??operator new`,`??operator new??rA`
   \   00000010   000050E3           CMP      R0,#+0
   \   00000014   0100000A           BEQ      `??new IOUnit_1`
   \   00000018   0410A0E1           MOV      R1,R4
   \   0000001C   ........           BL       ??IOUnit
   \                     `??new IOUnit_1`:
   \   00000020   ........           B        ?Subroutine21

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable3:
   \   00000000   ........           DC32     ??__vtbl

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable4:
   \   00000000   ........           DC32     ??GlobalHW_UnitSet

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable8:
   \   00000000   ........           DC32     ??npos

   Maximum stack usage in bytes:

     Function                       CSTACK
     --------                       ------
     IOUnit::Add(PROIOComponent *, PRogramObject *)
                                      500
     IOUnit::DeleteAll()                8
     IOUnit::EraseFlash()              16
     IOUnit::GetRequestNumber()         0
     IOUnit::GetStringValue(int, int, AnsiString &)
                                       96
     IOUnit::GetValue(int, int, float &, int &, int &)
                                       32
     IOUnit::HandleIO(int)              0
     IOUnit::IOUnit(int)               28
     IOUnit::LoadConfigString(TSNConfigString &)
                                        0
     IOUnit::MakeConfigString(int)      4
     IOUnit::PowerOn()                  8
     IOUnit::ProgramFlash(unsigned short, unsigned short)
                                      284
     IOUnit::PutFloatValue(int, float)
                                        4
     IOUnit::PutValue(int, int, AnsiString, bool, int *)
                                       60
     IOUnit::Request(unsigned short)
                                        8
     IOUnit::SendToIO(unsigned short, void *, unsigned short, bool)
                                        0
     IOUnit::UpdateProgram()           28
     IOUnit::new IOUnit(int)            8
     IOUnit::~IOUnit()                 12
     _Tree<_Tset_traits<AlarmBasic *, less<AlarmBasic *>, allocator<AlarmBasic *>, false>>::_Insert(bool, _Tree<_Tset_traits<AlarmBasic *, less<AlarmBasic *>, allocator<AlarmBasic *>, false>>::_Nodeptr, AlarmBasic *)
                                       24
     _Tree<_Tset_traits<AlarmBasic *, less<AlarmBasic *>, allocator<AlarmBasic *>, false>>::insert(AlarmBasic *)
                                       44
     _Tree<_Tset_traits<PRogramObject *, less<PRogramObject *>, allocator<PRogramObject *>, false>>::_Erase(_Tree<_Tset_traits<PRogramObject *, less<PRogramObject *>, allocator<PRogramObject *>, false>>::_Nodeptr)
                                       16
     _Tree<_Tset_traits<PRogramObject *, less<PRogramObject *>, allocator<PRogramObject *>, false>>::_Insert(bool, _Tree<_Tset_traits<PRogramObject *, less<PRogramObject *>, allocator<PRogramObject *>, false>>::_Nodeptr, PRogramObject *)
                                       24
     _Tree<_Tset_traits<PRogramObject *, less<PRogramObject *>, allocator<PRogramObject *>, false>>::_Lbound(PRogramObject *) const
                                        0
     _Tree<_Tset_traits<PRogramObject *, less<PRogramObject *>, allocator<PRogramObject *>, false>>::_Ubound(PRogramObject *) const
                                        0
     _Tree<_Tset_traits<PRogramObject *, less<PRogramObject *>, allocator<PRogramObject *>, false>>::clear()
                                        8
     _Tree<_Tset_traits<PRogramObject *, less<PRogramObject *>, allocator<PRogramObject *>, false>>::equal_range(PRogramObject *)
                                       28
     _Tree<_Tset_traits<PRogramObject *, less<PRogramObject *>, allocator<PRogramObject *>, false>>::erase(PRogramObject *)
                                       24
     _Tree<_Tset_traits<PRogramObject *, less<PRogramObject *>, allocator<PRogramObject *>, false>>::erase(_Tree<_Tset_traits<PRogramObject *, less<PRogramObject *>, allocator<PRogramObject *>, false>>::iterator, _Tree<_Tset_traits<PRogramObject *, less<PRogramObject *>, allocator<PRogramObject *>, false>>::iterator)
                                       20
     _Tree<_Tset_traits<PRogramObject *, less<PRogramObject *>, allocator<PRogramObject *>, false>>::insert(PRogramObject *)
                                       44
     _Tree_algobase<allocator<void>>::_Clear()
                                        0
     _Tree_algobase<allocator<void>>::_DecP(_Tree_algobase<allocator<void>>::_Genptr)
                                        0
     _Tree_algobase<allocator<void>>::_Erase(_Tree_algobase<allocator<void>>::_Genptr)
                                       32
     _Tree_algobase<allocator<void>>::_IncP(_Tree_algobase<allocator<void>>::_Genptr)
                                        0
     _Tree_algobase<allocator<void>>::_Insert(bool, _Tree_algobase<allocator<void>>::_Genptr, _Tree_algobase<allocator<void>>::_Genptr)
                                       20
     _Tree_algobase<allocator<void>>::_Lrotate(_Tree_algobase<allocator<void>>::_Genptr)
                                        0
     _Tree_algobase<allocator<void>>::_Rrotate(_Tree_algobase<allocator<void>>::_Genptr)
                                        0
     __sti__routine()                  12
     operator+(string const &, char const *)
                                       44
     operator+(string const &, string const &)
                                       40
     set<PRogramObject *>::set()       12
     set<PRogramObject *>::~set()       4
     string::string(string const &)    12


   Segment part sizes:

     Function/Label                 Bytes
     --------------                 -----
     string::string(string const &)   64
     _Tree_algobase<allocator<void>>::_DecP(_Tree_algobase<allocator<void>>::_Genptr)
                                     100
     _Tree_algobase<allocator<void>>::_IncP(_Tree_algobase<allocator<void>>::_Genptr)
                                      92
     _Tree_algobase<allocator<void>>::_Clear()
                                      36
     _Tree_algobase<allocator<void>>::_Rrotate(_Tree_algobase<allocator<void>>::_Genptr)
                                      84
     _Tree_algobase<allocator<void>>::_Lrotate(_Tree_algobase<allocator<void>>::_Genptr)
                                      84
     _Tree_algobase<allocator<void>>::_Erase(_Tree_algobase<allocator<void>>::_Genptr)
                                     804
     _Tree_algobase<allocator<void>>::_Insert(bool, _Tree_algobase<allocator<void>>::_Genptr, _Tree_algobase<allocator<void>>::_Genptr)
                                     356
     _Tree<_Tset_traits<AlarmBasic *, less<AlarmBasic *>, allocator<AlarmBasic *>, false>>::insert(AlarmBasic *)
                                     200
     _Tree<_Tset_traits<PRogramObject *, less<PRogramObject *>, allocator<PRogramObject *>, false>>::insert(PRogramObject *)
                                     200
     _Tree<_Tset_traits<PRogramObject *, less<PRogramObject *>, allocator<PRogramObject *>, false>>::erase(_Tree<_Tset_traits<PRogramObject *, less<PRogramObject *>, allocator<PRogramObject *>, false>>::iterator, _Tree<_Tset_traits<PRogramObject *, less<PRogramObject *>, allocator<PRogramObject *>, false>>::iterator)
                                     108
     _Tree<_Tset_traits<PRogramObject *, less<PRogramObject *>, allocator<PRogramObject *>, false>>::erase(PRogramObject *)
                                      84
     _Tree<_Tset_traits<PRogramObject *, less<PRogramObject *>, allocator<PRogramObject *>, false>>::clear()
                                      32
     _Tree<_Tset_traits<PRogramObject *, less<PRogramObject *>, allocator<PRogramObject *>, false>>::equal_range(PRogramObject *)
                                      76
     _Tree<_Tset_traits<PRogramObject *, less<PRogramObject *>, allocator<PRogramObject *>, false>>::_Erase(_Tree<_Tset_traits<PRogramObject *, less<PRogramObject *>, allocator<PRogramObject *>, false>>::_Nodeptr)
                                      68
     _Tree<_Tset_traits<AlarmBasic *, less<AlarmBasic *>, allocator<AlarmBasic *>, false>>::_Insert(bool, _Tree<_Tset_traits<AlarmBasic *, less<AlarmBasic *>, allocator<AlarmBasic *>, false>>::_Nodeptr, AlarmBasic *)
                                      96
     _Tree<_Tset_traits<PRogramObject *, less<PRogramObject *>, allocator<PRogramObject *>, false>>::_Insert(bool, _Tree<_Tset_traits<PRogramObject *, less<PRogramObject *>, allocator<PRogramObject *>, false>>::_Nodeptr, PRogramObject *)
                                      96
     _Tree<_Tset_traits<PRogramObject *, less<PRogramObject *>, allocator<PRogramObject *>, false>>::_Lbound(PRogramObject *) const
                                      40
     _Tree<_Tset_traits<PRogramObject *, less<PRogramObject *>, allocator<PRogramObject *>, false>>::_Ubound(PRogramObject *) const
                                      40
     set<PRogramObject *>::~set()     16
     set<PRogramObject *>::set()      48
     operator+(string const &, string const &)
                                      88
     operator+(string const &, char const *)
                                      92
     __sti__routine()                 52
     ?_0                              24
     IOUnit::GlobalHW_UnitSet         48
     IOUnit::IOUnit(int)             208
     ?Subroutine20                    12
     IOUnit::~IOUnit()                80
     IOUnit::MakeConfigString(int)    24
     ?Subroutine22                     8
     IOUnit::LoadConfigString(TSNConfigString &)
                                       4
     ?Subroutine23                     8
     IOUnit::Add(PROIOComponent *, PRogramObject *)
                                     676
     IOUnit::GetValue(int, int, float &, int &, int &)
                                     240
     ?Subroutine24                     8
     IOUnit::GetStringValue(int, int, AnsiString &)
                                     244
     IOUnit::PutValue(int, int, AnsiString, bool, int *)
                                      96
     IOUnit::PutFloatValue(int, float)
                                       8
     IOUnit::HandleIO(int)             4
     IOUnit::PowerOn()                20
     ?Subroutine21                     8
     IOUnit::SendToIO(unsigned short, void *, unsigned short, bool)
                                       4
     IOUnit::Request(unsigned short)
                                      52
     IOUnit::ProgramFlash(unsigned short, unsigned short)
                                     196
     IOUnit::EraseFlash()            100
     IOUnit::UpdateProgram()         280
     IOUnit::GetRequestNumber()        0
     IOUnit::DeleteAll()              72
     ?<Constant "">                    1
     ?<Constant "TCU ">              116
     ?<Constant ".\n">                 3
     IOUnit::new IOUnit(int)          36
     ??DataTable3                      4
     ??DataTable4                      4
     ??DataTable8                      4
      Others                         852

 
 6 036 bytes in segment CODE
   292 bytes in segment DATA_C
    56 bytes in segment DATA_Z
     4 bytes in segment DIFUNCT
    12 bytes in segment INITTAB
 
 2 456 bytes of CODE  memory (+ 3 596 bytes shared)
   292 bytes of CONST memory
    56 bytes of DATA  memory

Errors: none
Warnings: none
