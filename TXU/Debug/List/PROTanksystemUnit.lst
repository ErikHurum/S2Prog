##############################################################################
#                                                                            #
# IAR ARM ANSI C/C++ Compiler V4.42A/W32               14/Sep/2022  15:16:51 #
# Copyright 1999-2005 IAR Systems. All rights reserved.                      #
#                                                                            #
#    Cpu mode        =  interwork                                            #
#    Endian          =  little                                               #
#    Stack alignment =  4                                                    #
#    Source file     =  D:\S2Prog\Shared\Src\PROTanksystemUnit.cpp           #
#    Command line    =  D:\S2Prog\Shared\Src\PROTanksystemUnit.cpp --fpu     #
#                       None -D OS_LIBMODE_SP -D CPU_S3C2410 -D              #
#                       OS_RAMVECT=0 -D OS_UART=-1 -D S2TXU -D USE_LZO=1 -D  #
#                       __ARM_LIBRARY__ -D WATCHDOG=1 -D NETWORK=1 -lCN      #
#                       D:\S2Prog\TXU\Debug\List\ -o                         #
#                       D:\S2Prog\TXU\Debug\Obj\ -z9 --debug --cpu_mode arm  #
#                       --endian little --cpu ARM920T --stack_align 4        #
#                       --interwork -e --enable_multibytes --eec++           #
#                       --dlib_config "C:\Program Files (x86)\IAR            #
#                       Systems\Embedded Workbench                           #
#                       4.0\arm\LIB\dl4tpainl8n.h" -I                        #
#                       D:\S2Prog\TXU\GUI\CORE\ -I D:\S2Prog\TXU\GUI\WM\ -I  #
#                       D:\S2Prog\TXU\GUI\WIDGET\ -I D:\S2Prog\TXU\CONFIG\   #
#                       -I D:\S2Prog\TXU\INC\ -I D:\S2Prog\TXU\..\SHARED\INC #
#                       \ -I D:\S2Prog\TXU\..\SHARED\SRC\ -I                 #
#                       D:\S2Prog\TXU\..\SHARED\LZO\minilzo.210\ -I          #
#                       D:\S2Prog\TXU\lwip-1.4.1\src\include\ -I             #
#                       D:\S2Prog\TXU\lwip-1.4.1\src\include\ipv4\ -I        #
#                       D:\S2Prog\TXU\lwip-1.4.1\src\ -I                     #
#                       D:\S2Prog\TXU\..\SHARED\Database\ -I                 #
#                       D:\S2Prog\TXU\src\ -I "C:\Program Files (x86)\IAR    #
#                       Systems\Embedded Workbench 4.0\arm\INC\"             #
#                       --inline_threshold=2                                 #
#    List file       =  D:\S2Prog\TXU\Debug\List\PROTanksystemUnit.lst       #
#    Object file     =  D:\S2Prog\TXU\Debug\Obj\PROTanksystemUnit.r79        #
#                                                                            #
#                                                                            #
##############################################################################

D:\S2Prog\Shared\Src\PROTanksystemUnit.cpp
      1          //---------------------------------------------------------------------------
      2          #include "TSNIncludes.h"

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs string::string(string const &)
   \                     ??string:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
   \   0000000C   0020A0E3           MOV      R2,#+0
   \   00000010   0010A0E3           MOV      R1,#+0
   \   00000014   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000018   1C009FE5           LDR      R0,??string_1    ;; ??npos
   \   0000001C   0020A0E3           MOV      R2,#+0
   \   00000020   003090E5           LDR      R3,[R0, #+0]
   \   00000024   0510A0E1           MOV      R1,R5
   \   00000028   0400A0E1           MOV      R0,R4
   \   0000002C   ........           _BLF     ??assign,??assign??rA
   \   00000030   0400A0E1           MOV      R0,R4
   \   00000034   3040BDE8           POP      {R4,R5,LR}
   \   00000038   1EFF2FE1           BX       LR               ;; return
   \                     ??string_1:
   \   0000003C   ........           DC32     ??npos

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs char const *string::c_str() const
   \                     ??c_str:
   \   00000000   181090E5           LDR      R1,[R0, #+24]
   \   00000004   100051E3           CMP      R1,#+16
   \   00000008   04009025           LDRCS    R0,[R0, #+4]
   \   0000000C   1EFF2F21           BXCS     LR
   \   00000010   040080E2           ADD      R0,R0,#+4
   \   00000014   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs _Tree_algobase<allocator<void>>::_Genptr _Tree_algobase<allocator<void>>::_DecP(_Tree_algobase<allocator<void>>::_Genptr)
   \                     ??_DecP:
   \   00000000   0D10D0E5           LDRB     R1,[R0, #+13]
   \   00000004   000051E3           CMP      R1,#+0
   \   00000008   08009015           LDRNE    R0,[R0, #+8]
   \   0000000C   1EFF2F11           BXNE     LR
   \   00000010   001090E5           LDR      R1,[R0, #+0]
   \   00000014   0D20D1E5           LDRB     R2,[R1, #+13]
   \   00000018   000052E3           CMP      R2,#+0
   \   0000001C   0700001A           BNE      ??_DecP_1
   \   00000020   000000EA           B        ??_DecP_2
   \                     ??_DecP_3:
   \   00000024   0010A0E1           MOV      R1,R0
   \                     ??_DecP_2:
   \   00000028   080091E5           LDR      R0,[R1, #+8]
   \   0000002C   0D20D0E5           LDRB     R2,[R0, #+13]
   \   00000030   000052E3           CMP      R2,#+0
   \   00000034   FAFFFF0A           BEQ      ??_DecP_3
   \   00000038   0100A0E1           MOV      R0,R1
   \   0000003C   1EFF2FE1           BX       LR
   \                     ??_DecP_1:
   \   00000040   041090E5           LDR      R1,[R0, #+4]
   \   00000044   0D20D1E5           LDRB     R2,[R1, #+13]
   \   00000048   000052E3           CMP      R2,#+0
   \   0000004C   1EFF2F11           BXNE     LR
   \   00000050   002091E5           LDR      R2,[R1, #+0]
   \   00000054   020050E1           CMP      R0,R2
   \   00000058   0100A0E1           MOV      R0,R1
   \   0000005C   F7FFFF0A           BEQ      ??_DecP_1
   \   00000060   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs _Tree_algobase<allocator<void>>::_Genptr _Tree_algobase<allocator<void>>::_IncP(_Tree_algobase<allocator<void>>::_Genptr)
   \                     ??_IncP:
   \   00000000   0D10D0E5           LDRB     R1,[R0, #+13]
   \   00000004   000051E3           CMP      R1,#+0
   \   00000008   1EFF2F11           BXNE     LR
   \   0000000C   081090E5           LDR      R1,[R0, #+8]
   \   00000010   0D20D1E5           LDRB     R2,[R1, #+13]
   \   00000014   000052E3           CMP      R2,#+0
   \   00000018   0700001A           BNE      ??_IncP_1
   \   0000001C   000000EA           B        ??_IncP_2
   \                     ??_IncP_3:
   \   00000020   0010A0E1           MOV      R1,R0
   \                     ??_IncP_2:
   \   00000024   000091E5           LDR      R0,[R1, #+0]
   \   00000028   0D20D0E5           LDRB     R2,[R0, #+13]
   \   0000002C   000052E3           CMP      R2,#+0
   \   00000030   FAFFFF0A           BEQ      ??_IncP_3
   \   00000034   060000EA           B        ??_IncP_4
   \                     ??_IncP_5:
   \   00000038   0100A0E1           MOV      R0,R1
   \                     ??_IncP_1:
   \   0000003C   041090E5           LDR      R1,[R0, #+4]
   \   00000040   0D20D1E5           LDRB     R2,[R1, #+13]
   \   00000044   000052E3           CMP      R2,#+0
   \   00000048   08209105           LDREQ    R2,[R1, #+8]
   \   0000004C   02005001           CMPEQ    R0,R2
   \   00000050   F8FFFF0A           BEQ      ??_IncP_5
   \                     ??_IncP_4:
   \   00000054   0100A0E1           MOV      R0,R1
   \   00000058   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void _Tree_algobase<allocator<void>>::_Clear()
   \                     ??_Clear:
   \   00000000   040080E5           STR      R0,[R0, #+4]
   \   00000004   000080E5           STR      R0,[R0, #+0]
   \   00000008   080080E5           STR      R0,[R0, #+8]
   \   0000000C   0110A0E3           MOV      R1,#+1
   \   00000010   0D10C0E5           STRB     R1,[R0, #+13]
   \   00000014   0C10C0E5           STRB     R1,[R0, #+12]
   \   00000018   0010A0E3           MOV      R1,#+0
   \   0000001C   101080E5           STR      R1,[R0, #+16]
   \   00000020   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void _Tree_algobase<allocator<void>>::_Rrotate(_Tree_algobase<allocator<void>>::_Genptr)
   \                     ??_Rrotate:
   \   00000000   002091E5           LDR      R2,[R1, #+0]
   \   00000004   083092E5           LDR      R3,[R2, #+8]
   \   00000008   003081E5           STR      R3,[R1, #+0]
   \   0000000C   083092E5           LDR      R3,[R2, #+8]
   \   00000010   0DC0D3E5           LDRB     R12,[R3, #+13]
   \   00000014   00005CE3           CMP      R12,#+0
   \   00000018   04108305           STREQ    R1,[R3, #+4]
   \   0000001C   043091E5           LDR      R3,[R1, #+4]
   \   00000020   043082E5           STR      R3,[R2, #+4]
   \   00000024   043090E5           LDR      R3,[R0, #+4]
   \   00000028   030051E1           CMP      R1,R3
   \   0000002C   04208005           STREQ    R2,[R0, #+4]
   \   00000030   0400000A           BEQ      ??_Rrotate_1
   \   00000034   040091E5           LDR      R0,[R1, #+4]
   \   00000038   083090E5           LDR      R3,[R0, #+8]
   \   0000003C   030051E1           CMP      R1,R3
   \   00000040   08208005           STREQ    R2,[R0, #+8]
   \   00000044   00208015           STRNE    R2,[R0, #+0]
   \                     ??_Rrotate_1:
   \   00000048   081082E5           STR      R1,[R2, #+8]
   \   0000004C   042081E5           STR      R2,[R1, #+4]
   \   00000050   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void _Tree_algobase<allocator<void>>::_Lrotate(_Tree_algobase<allocator<void>>::_Genptr)
   \                     ??_Lrotate:
   \   00000000   082091E5           LDR      R2,[R1, #+8]
   \   00000004   003092E5           LDR      R3,[R2, #+0]
   \   00000008   083081E5           STR      R3,[R1, #+8]
   \   0000000C   003092E5           LDR      R3,[R2, #+0]
   \   00000010   0DC0D3E5           LDRB     R12,[R3, #+13]
   \   00000014   00005CE3           CMP      R12,#+0
   \   00000018   04108305           STREQ    R1,[R3, #+4]
   \   0000001C   043091E5           LDR      R3,[R1, #+4]
   \   00000020   043082E5           STR      R3,[R2, #+4]
   \   00000024   043090E5           LDR      R3,[R0, #+4]
   \   00000028   030051E1           CMP      R1,R3
   \   0000002C   04208005           STREQ    R2,[R0, #+4]
   \   00000030   0400000A           BEQ      ??_Lrotate_1
   \   00000034   040091E5           LDR      R0,[R1, #+4]
   \   00000038   003090E5           LDR      R3,[R0, #+0]
   \   0000003C   030051E1           CMP      R1,R3
   \   00000040   00208005           STREQ    R2,[R0, #+0]
   \   00000044   08208015           STRNE    R2,[R0, #+8]
   \                     ??_Lrotate_1:
   \   00000048   001082E5           STR      R1,[R2, #+0]
   \   0000004C   042081E5           STR      R2,[R1, #+4]
   \   00000050   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs _Tree_algobase<allocator<void>>::_Genptr _Tree_algobase<allocator<void>>::_Erase(_Tree_algobase<allocator<void>>::_Genptr)
   \                     ??_Erase:
   \   00000000   F0472DE9           PUSH     {R4-R10,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0160A0E1           MOV      R6,R1
   \   0000000C   0680A0E1           MOV      R8,R6
   \   00000010   0600A0E1           MOV      R0,R6
   \   00000014   ........           _BLF     ??_IncP,??_IncP??rA
   \   00000018   007098E5           LDR      R7,[R8, #+0]
   \   0000001C   0D10D7E5           LDRB     R1,[R7, #+13]
   \   00000020   000051E3           CMP      R1,#+0
   \   00000024   0400001A           BNE      ??_Erase_3
   \   00000028   081098E5           LDR      R1,[R8, #+8]
   \   0000002C   0D10D1E5           LDRB     R1,[R1, #+13]
   \   00000030   000051E3           CMP      R1,#+0
   \   00000034   0100001A           BNE      ??_Erase_4
   \   00000038   0080A0E1           MOV      R8,R0
   \                     ??_Erase_3:
   \   0000003C   087098E5           LDR      R7,[R8, #+8]
   \                     ??_Erase_4:
   \   00000040   060058E1           CMP      R8,R6
   \   00000044   2B00001A           BNE      ??_Erase_5
   \   00000048   0D00D7E5           LDRB     R0,[R7, #+13]
   \   0000004C   045096E5           LDR      R5,[R6, #+4]
   \   00000050   000050E3           CMP      R0,#+0
   \   00000054   04508705           STREQ    R5,[R7, #+4]
   \   00000058   040094E5           LDR      R0,[R4, #+4]
   \   0000005C   060050E1           CMP      R0,R6
   \   00000060   04708405           STREQ    R7,[R4, #+4]
   \   00000064   0300000A           BEQ      ??_Erase_6
   \   00000068   000095E5           LDR      R0,[R5, #+0]
   \   0000006C   060050E1           CMP      R0,R6
   \   00000070   00708505           STREQ    R7,[R5, #+0]
   \   00000074   08708515           STRNE    R7,[R5, #+8]
   \                     ??_Erase_6:
   \   00000078   000094E5           LDR      R0,[R4, #+0]
   \   0000007C   060050E1           CMP      R0,R6
   \   00000080   0B00001A           BNE      ??_Erase_7
   \   00000084   0D00D7E5           LDRB     R0,[R7, #+13]
   \   00000088   000050E3           CMP      R0,#+0
   \   0000008C   0500A011           MOVNE    R0,R5
   \   00000090   0600001A           BNE      ??_Erase_8
   \   00000094   0700A0E1           MOV      R0,R7
   \   00000098   000000EA           B        ??_Erase_9
   \                     ??_Erase_10:
   \   0000009C   0100A0E1           MOV      R0,R1
   \                     ??_Erase_9:
   \   000000A0   001090E5           LDR      R1,[R0, #+0]
   \   000000A4   0D20D1E5           LDRB     R2,[R1, #+13]
   \   000000A8   000052E3           CMP      R2,#+0
   \   000000AC   FAFFFF0A           BEQ      ??_Erase_10
   \                     ??_Erase_8:
   \   000000B0   000084E5           STR      R0,[R4, #+0]
   \                     ??_Erase_7:
   \   000000B4   080094E5           LDR      R0,[R4, #+8]
   \   000000B8   060050E1           CMP      R0,R6
   \   000000BC   2F00001A           BNE      ??_Erase_11
   \   000000C0   0D10D7E5           LDRB     R1,[R7, #+13]
   \   000000C4   080084E2           ADD      R0,R4,#+8
   \   000000C8   000051E3           CMP      R1,#+0
   \   000000CC   0510A011           MOVNE    R1,R5
   \   000000D0   0600001A           BNE      ??_Erase_12
   \   000000D4   0710A0E1           MOV      R1,R7
   \   000000D8   000000EA           B        ??_Erase_13
   \                     ??_Erase_14:
   \   000000DC   0210A0E1           MOV      R1,R2
   \                     ??_Erase_13:
   \   000000E0   082091E5           LDR      R2,[R1, #+8]
   \   000000E4   0D30D2E5           LDRB     R3,[R2, #+13]
   \   000000E8   000053E3           CMP      R3,#+0
   \   000000EC   FAFFFF0A           BEQ      ??_Erase_14
   \                     ??_Erase_12:
   \   000000F0   001080E5           STR      R1,[R0, #+0]
   \   000000F4   210000EA           B        ??_Erase_11
   \                     ??_Erase_5:
   \   000000F8   000096E5           LDR      R0,[R6, #+0]
   \   000000FC   048080E5           STR      R8,[R0, #+4]
   \   00000100   000096E5           LDR      R0,[R6, #+0]
   \   00000104   000088E5           STR      R0,[R8, #+0]
   \   00000108   080096E5           LDR      R0,[R6, #+8]
   \   0000010C   000058E1           CMP      R8,R0
   \   00000110   0850A001           MOVEQ    R5,R8
   \   00000114   0800000A           BEQ      ??_Erase_15
   \   00000118   0D00D7E5           LDRB     R0,[R7, #+13]
   \   0000011C   045098E5           LDR      R5,[R8, #+4]
   \   00000120   000050E3           CMP      R0,#+0
   \   00000124   04508705           STREQ    R5,[R7, #+4]
   \   00000128   007085E5           STR      R7,[R5, #+0]
   \   0000012C   080096E5           LDR      R0,[R6, #+8]
   \   00000130   080088E5           STR      R0,[R8, #+8]
   \   00000134   080096E5           LDR      R0,[R6, #+8]
   \   00000138   048080E5           STR      R8,[R0, #+4]
   \                     ??_Erase_15:
   \   0000013C   040094E5           LDR      R0,[R4, #+4]
   \   00000140   060050E1           CMP      R0,R6
   \   00000144   04808405           STREQ    R8,[R4, #+4]
   \   00000148   0400000A           BEQ      ??_Erase_16
   \   0000014C   040096E5           LDR      R0,[R6, #+4]
   \   00000150   001090E5           LDR      R1,[R0, #+0]
   \   00000154   060051E1           CMP      R1,R6
   \   00000158   00808005           STREQ    R8,[R0, #+0]
   \   0000015C   08808015           STRNE    R8,[R0, #+8]
   \                     ??_Erase_16:
   \   00000160   040096E5           LDR      R0,[R6, #+4]
   \   00000164   0C1088E2           ADD      R1,R8,#+12
   \   00000168   040088E5           STR      R0,[R8, #+4]
   \   0000016C   0020D1E5           LDRB     R2,[R1, #+0]
   \   00000170   0C0086E2           ADD      R0,R6,#+12
   \   00000174   0030D0E5           LDRB     R3,[R0, #+0]
   \   00000178   0030C1E5           STRB     R3,[R1, #+0]
   \   0000017C   0020C0E5           STRB     R2,[R0, #+0]
   \                     ??_Erase_11:
   \   00000180   0C00D6E5           LDRB     R0,[R6, #+12]
   \   00000184   010050E3           CMP      R0,#+1
   \   00000188   5E00001A           BNE      ??_Erase_17
   \   0000018C   0090A0E3           MOV      R9,#+0
   \   00000190   01A0A0E3           MOV      R10,#+1
   \   00000194   060000EA           B        ??_Erase_18
   \                     ??_Erase_19:
   \   00000198   080098E5           LDR      R0,[R8, #+8]
   \   0000019C   0C00D0E5           LDRB     R0,[R0, #+12]
   \   000001A0   010050E3           CMP      R0,#+1
   \   000001A4   1C00001A           BNE      ??_Erase_20
   \                     ??_Erase_21:
   \   000001A8   0C90C8E5           STRB     R9,[R8, #+12]
   \                     ??_Erase_22:
   \   000001AC   0570A0E1           MOV      R7,R5
   \   000001B0   045097E5           LDR      R5,[R7, #+4]
   \                     ??_Erase_18:
   \   000001B4   040094E5           LDR      R0,[R4, #+4]
   \   000001B8   000057E1           CMP      R7,R0
   \   000001BC   5000000A           BEQ      ??_Erase_23
   \   000001C0   0C00D7E5           LDRB     R0,[R7, #+12]
   \   000001C4   010050E3           CMP      R0,#+1
   \   000001C8   4D00001A           BNE      ??_Erase_23
   \   000001CC   008095E5           LDR      R8,[R5, #+0]
   \   000001D0   080057E1           CMP      R7,R8
   \   000001D4   2400001A           BNE      ??_Erase_24
   \   000001D8   088095E5           LDR      R8,[R5, #+8]
   \   000001DC   0C00D8E5           LDRB     R0,[R8, #+12]
   \   000001E0   000050E3           CMP      R0,#+0
   \   000001E4   0500001A           BNE      ??_Erase_25
   \   000001E8   0CA0C8E5           STRB     R10,[R8, #+12]
   \   000001EC   0C90C5E5           STRB     R9,[R5, #+12]
   \   000001F0   0510A0E1           MOV      R1,R5
   \   000001F4   0400A0E1           MOV      R0,R4
   \   000001F8   ........           _BLF     ??_Lrotate,??_Lrotate??rA
   \   000001FC   088095E5           LDR      R8,[R5, #+8]
   \                     ??_Erase_25:
   \   00000200   0D00D8E5           LDRB     R0,[R8, #+13]
   \   00000204   000050E3           CMP      R0,#+0
   \   00000208   E7FFFF1A           BNE      ??_Erase_22
   \   0000020C   000098E5           LDR      R0,[R8, #+0]
   \   00000210   0C00D0E5           LDRB     R0,[R0, #+12]
   \   00000214   010050E3           CMP      R0,#+1
   \   00000218   DEFFFF0A           BEQ      ??_Erase_19
   \                     ??_Erase_20:
   \   0000021C   080098E5           LDR      R0,[R8, #+8]
   \   00000220   0C00D0E5           LDRB     R0,[R0, #+12]
   \   00000224   010050E3           CMP      R0,#+1
   \   00000228   0600001A           BNE      ??_Erase_26
   \   0000022C   000098E5           LDR      R0,[R8, #+0]
   \   00000230   0810A0E1           MOV      R1,R8
   \   00000234   0CA0C0E5           STRB     R10,[R0, #+12]
   \   00000238   0C90C8E5           STRB     R9,[R8, #+12]
   \   0000023C   0400A0E1           MOV      R0,R4
   \   00000240   ........           _BLF     ??_Rrotate,??_Rrotate??rA
   \   00000244   088095E5           LDR      R8,[R5, #+8]
   \                     ??_Erase_26:
   \   00000248   0C00D5E5           LDRB     R0,[R5, #+12]
   \   0000024C   0510A0E1           MOV      R1,R5
   \   00000250   0C00C8E5           STRB     R0,[R8, #+12]
   \   00000254   0CA0C5E5           STRB     R10,[R5, #+12]
   \   00000258   080098E5           LDR      R0,[R8, #+8]
   \   0000025C   0CA0C0E5           STRB     R10,[R0, #+12]
   \   00000260   0400A0E1           MOV      R0,R4
   \   00000264   ........           _BLF     ??_Lrotate,??_Lrotate??rA
   \   00000268   250000EA           B        ??_Erase_23
   \                     ??_Erase_24:
   \   0000026C   0C00D8E5           LDRB     R0,[R8, #+12]
   \   00000270   000050E3           CMP      R0,#+0
   \   00000274   0500001A           BNE      ??_Erase_27
   \   00000278   0CA0C8E5           STRB     R10,[R8, #+12]
   \   0000027C   0C90C5E5           STRB     R9,[R5, #+12]
   \   00000280   0510A0E1           MOV      R1,R5
   \   00000284   0400A0E1           MOV      R0,R4
   \   00000288   ........           _BLF     ??_Rrotate,??_Rrotate??rA
   \   0000028C   008095E5           LDR      R8,[R5, #+0]
   \                     ??_Erase_27:
   \   00000290   0D00D8E5           LDRB     R0,[R8, #+13]
   \   00000294   000050E3           CMP      R0,#+0
   \   00000298   C3FFFF1A           BNE      ??_Erase_22
   \   0000029C   080098E5           LDR      R0,[R8, #+8]
   \   000002A0   0C00D0E5           LDRB     R0,[R0, #+12]
   \   000002A4   010050E3           CMP      R0,#+1
   \   000002A8   00009805           LDREQ    R0,[R8, #+0]
   \   000002AC   0C00D005           LDRBEQ   R0,[R0, #+12]
   \   000002B0   01005003           CMPEQ    R0,#+1
   \   000002B4   BBFFFF0A           BEQ      ??_Erase_21
   \   000002B8   000098E5           LDR      R0,[R8, #+0]
   \   000002BC   0C00D0E5           LDRB     R0,[R0, #+12]
   \   000002C0   010050E3           CMP      R0,#+1
   \   000002C4   0600001A           BNE      ??_Erase_28
   \   000002C8   080098E5           LDR      R0,[R8, #+8]
   \   000002CC   0810A0E1           MOV      R1,R8
   \   000002D0   0CA0C0E5           STRB     R10,[R0, #+12]
   \   000002D4   0C90C8E5           STRB     R9,[R8, #+12]
   \   000002D8   0400A0E1           MOV      R0,R4
   \   000002DC   ........           _BLF     ??_Lrotate,??_Lrotate??rA
   \   000002E0   008095E5           LDR      R8,[R5, #+0]
   \                     ??_Erase_28:
   \   000002E4   0C00D5E5           LDRB     R0,[R5, #+12]
   \   000002E8   0510A0E1           MOV      R1,R5
   \   000002EC   0C00C8E5           STRB     R0,[R8, #+12]
   \   000002F0   0CA0C5E5           STRB     R10,[R5, #+12]
   \   000002F4   000098E5           LDR      R0,[R8, #+0]
   \   000002F8   0CA0C0E5           STRB     R10,[R0, #+12]
   \   000002FC   0400A0E1           MOV      R0,R4
   \   00000300   ........           _BLF     ??_Rrotate,??_Rrotate??rA
   \                     ??_Erase_23:
   \   00000304   0CA0C7E5           STRB     R10,[R7, #+12]
   \                     ??_Erase_17:
   \   00000308   100094E5           LDR      R0,[R4, #+16]
   \   0000030C   000050E3           CMP      R0,#+0
   \   00000310   01004012           SUBNE    R0,R0,#+1
   \   00000314   10008415           STRNE    R0,[R4, #+16]
   \   00000318   0600A0E1           MOV      R0,R6
   \   0000031C   F047BDE8           POP      {R4-R10,LR}
   \   00000320   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void _Tree_algobase<allocator<void>>::_Insert(bool, _Tree_algobase<allocator<void>>::_Genptr, _Tree_algobase<allocator<void>>::_Genptr)
   \                     ??_Insert:
   \   00000000   F0402DE9           PUSH     {R4-R7,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   100094E5           LDR      R0,[R4, #+16]
   \   0000000C   0350A0E1           MOV      R5,R3
   \   00000010   010080E2           ADD      R0,R0,#+1
   \   00000014   100084E5           STR      R0,[R4, #+16]
   \   00000018   040052E1           CMP      R2,R4
   \   0000001C   0300001A           BNE      ??_Insert_4
   \   00000020   045084E5           STR      R5,[R4, #+4]
   \   00000024   005084E5           STR      R5,[R4, #+0]
   \                     ??_Insert_5:
   \   00000028   085084E5           STR      R5,[R4, #+8]
   \   0000002C   130000EA           B        ??_Insert_6
   \                     ??_Insert_4:
   \   00000030   000051E3           CMP      R1,#+0
   \   00000034   0500000A           BEQ      ??_Insert_7
   \   00000038   005082E5           STR      R5,[R2, #+0]
   \   0000003C   000094E5           LDR      R0,[R4, #+0]
   \   00000040   000052E1           CMP      R2,R0
   \   00000044   0D00001A           BNE      ??_Insert_6
   \   00000048   005084E5           STR      R5,[R4, #+0]
   \   0000004C   0B0000EA           B        ??_Insert_6
   \                     ??_Insert_7:
   \   00000050   085082E5           STR      R5,[R2, #+8]
   \   00000054   080094E5           LDR      R0,[R4, #+8]
   \   00000058   000052E1           CMP      R2,R0
   \   0000005C   0700001A           BNE      ??_Insert_6
   \   00000060   F0FFFFEA           B        ??_Insert_5
   \                     ??_Insert_8:
   \   00000064   0C70C0E5           STRB     R7,[R0, #+12]
   \   00000068   0C70C2E5           STRB     R7,[R2, #+12]
   \   0000006C   040095E5           LDR      R0,[R5, #+4]
   \   00000070   040090E5           LDR      R0,[R0, #+4]
   \   00000074   0C60C0E5           STRB     R6,[R0, #+12]
   \   00000078   040095E5           LDR      R0,[R5, #+4]
   \   0000007C   045090E5           LDR      R5,[R0, #+4]
   \                     ??_Insert_6:
   \   00000080   0170A0E3           MOV      R7,#+1
   \   00000084   040095E5           LDR      R0,[R5, #+4]
   \   00000088   0C10D0E5           LDRB     R1,[R0, #+12]
   \   0000008C   000051E3           CMP      R1,#+0
   \   00000090   2F00001A           BNE      ??_Insert_9
   \   00000094   041090E5           LDR      R1,[R0, #+4]
   \   00000098   0060A0E3           MOV      R6,#+0
   \   0000009C   001091E5           LDR      R1,[R1, #+0]
   \   000000A0   010050E1           CMP      R0,R1
   \   000000A4   041090E5           LDR      R1,[R0, #+4]
   \   000000A8   1400001A           BNE      ??_Insert_10
   \   000000AC   082091E5           LDR      R2,[R1, #+8]
   \   000000B0   0C10D2E5           LDRB     R1,[R2, #+12]
   \   000000B4   000051E3           CMP      R1,#+0
   \   000000B8   E9FFFF0A           BEQ      ??_Insert_8
   \   000000BC   081090E5           LDR      R1,[R0, #+8]
   \   000000C0   010055E1           CMP      R5,R1
   \   000000C4   0300001A           BNE      ??_Insert_11
   \   000000C8   0050A0E1           MOV      R5,R0
   \   000000CC   0510A0E1           MOV      R1,R5
   \   000000D0   0400A0E1           MOV      R0,R4
   \   000000D4   ........           _BLF     ??_Lrotate,??_Lrotate??rA
   \                     ??_Insert_11:
   \   000000D8   040095E5           LDR      R0,[R5, #+4]
   \   000000DC   0C70C0E5           STRB     R7,[R0, #+12]
   \   000000E0   040095E5           LDR      R0,[R5, #+4]
   \   000000E4   040090E5           LDR      R0,[R0, #+4]
   \   000000E8   0C60C0E5           STRB     R6,[R0, #+12]
   \   000000EC   040095E5           LDR      R0,[R5, #+4]
   \   000000F0   041090E5           LDR      R1,[R0, #+4]
   \   000000F4   0400A0E1           MOV      R0,R4
   \   000000F8   ........           _BLF     ??_Rrotate,??_Rrotate??rA
   \   000000FC   DFFFFFEA           B        ??_Insert_6
   \                     ??_Insert_10:
   \   00000100   002091E5           LDR      R2,[R1, #+0]
   \   00000104   0C10D2E5           LDRB     R1,[R2, #+12]
   \   00000108   000051E3           CMP      R1,#+0
   \   0000010C   D4FFFF0A           BEQ      ??_Insert_8
   \   00000110   001090E5           LDR      R1,[R0, #+0]
   \   00000114   010055E1           CMP      R5,R1
   \   00000118   0300001A           BNE      ??_Insert_12
   \   0000011C   0050A0E1           MOV      R5,R0
   \   00000120   0510A0E1           MOV      R1,R5
   \   00000124   0400A0E1           MOV      R0,R4
   \   00000128   ........           _BLF     ??_Rrotate,??_Rrotate??rA
   \                     ??_Insert_12:
   \   0000012C   040095E5           LDR      R0,[R5, #+4]
   \   00000130   0C70C0E5           STRB     R7,[R0, #+12]
   \   00000134   040095E5           LDR      R0,[R5, #+4]
   \   00000138   040090E5           LDR      R0,[R0, #+4]
   \   0000013C   0C60C0E5           STRB     R6,[R0, #+12]
   \   00000140   040095E5           LDR      R0,[R5, #+4]
   \   00000144   041090E5           LDR      R1,[R0, #+4]
   \   00000148   0400A0E1           MOV      R0,R4
   \   0000014C   ........           _BLF     ??_Lrotate,??_Lrotate??rA
   \   00000150   CAFFFFEA           B        ??_Insert_6
   \                     ??_Insert_9:
   \   00000154   040094E5           LDR      R0,[R4, #+4]
   \   00000158   0C70C0E5           STRB     R7,[R0, #+12]
   \   0000015C   F040BDE8           POP      {R4-R7,LR}
   \   00000160   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs _Tree<_Tset_traits<PRogramObject *, less<PRogramObject *>, allocator<PRogramObject *>, false>>::_Pairib _Tree<_Tset_traits<PRogramObject *, less<PRogramObject *>, allocator<PRogramObject *>, false>>::insert(PRogramObject *)
   \                     ??insert:
   \   00000000   F34C2DE9           PUSH     {R0,R1,R4-R7,R10,R11,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
   \   0000000C   040095E5           LDR      R0,[R5, #+4]
   \   00000010   0260A0E1           MOV      R6,R2
   \   00000014   05B0A0E1           MOV      R11,R5
   \   00000018   0170A0E3           MOV      R7,#+1
   \                     ??insert_2:
   \   0000001C   0D10D0E5           LDRB     R1,[R0, #+13]
   \   00000020   000051E3           CMP      R1,#+0
   \   00000024   0700001A           BNE      ??insert_3
   \   00000028   101090E5           LDR      R1,[R0, #+16]
   \   0000002C   00B0A0E1           MOV      R11,R0
   \   00000030   010056E1           CMP      R6,R1
   \   00000034   00009035           LDRCC    R0,[R0, #+0]
   \   00000038   0170A033           MOVCC    R7,#+1
   \   0000003C   08009025           LDRCS    R0,[R0, #+8]
   \   00000040   0070A023           MOVCS    R7,#+0
   \   00000044   F4FFFFEA           B        ??insert_2
   \                     ??insert_3:
   \   00000048   0B00A0E1           MOV      R0,R11
   \   0000004C   01A0A0E3           MOV      R10,#+1
   \   00000050   000057E3           CMP      R7,#+0
   \   00000054   0B00000A           BEQ      ??insert_4
   \   00000058   001095E5           LDR      R1,[R5, #+0]
   \   0000005C   010050E1           CMP      R0,R1
   \   00000060   0700001A           BNE      ??insert_5
   \   00000064   0630A0E1           MOV      R3,R6
   \   00000068   0B20A0E1           MOV      R2,R11
   \   0000006C   0110A0E3           MOV      R1,#+1
   \                     ??insert_6:
   \   00000070   0500A0E1           MOV      R0,R5
   \   00000074   ........           _BLF     ??_Insert_1,??_Insert??rA
   \   00000078   00008DE5           STR      R0,[SP, #+0]
   \   0000007C   04A0CDE5           STRB     R10,[SP, #+4]
   \   00000080   0A0000EA           B        ??insert_7
   \                     ??insert_5:
   \   00000084   ........           _BLF     ??_DecP,??_DecP??rA
   \                     ??insert_4:
   \   00000088   101090E5           LDR      R1,[R0, #+16]
   \   0000008C   060051E1           CMP      R1,R6
   \   00000090   0300002A           BCS      ??insert_8
   \   00000094   0630A0E1           MOV      R3,R6
   \   00000098   0B20A0E1           MOV      R2,R11
   \   0000009C   0710A0E1           MOV      R1,R7
   \   000000A0   F2FFFFEA           B        ??insert_6
   \                     ??insert_8:
   \   000000A4   00008DE5           STR      R0,[SP, #+0]
   \   000000A8   0010A0E3           MOV      R1,#+0
   \   000000AC   0410CDE5           STRB     R1,[SP, #+4]
   \                     ??insert_7:
   \   000000B0   0D00A0E1           MOV      R0,SP
   \   000000B4   030090E8           LDM      R0,{R0,R1}
   \   000000B8   030084E8           STM      R4,{R0,R1}
   \   000000BC   0400A0E1           MOV      R0,R4
   \   000000C0   F64CBDE8           POP      {R1,R2,R4-R7,R10,R11,LR}
   \   000000C4   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::_Pairib _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::insert(PRogramObjectBase *)
   \                     ??insert_1:
   \   00000000   F34C2DE9           PUSH     {R0,R1,R4-R7,R10,R11,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
   \   0000000C   040095E5           LDR      R0,[R5, #+4]
   \   00000010   0260A0E1           MOV      R6,R2
   \   00000014   05B0A0E1           MOV      R11,R5
   \   00000018   0170A0E3           MOV      R7,#+1
   \                     ??insert_9:
   \   0000001C   0D10D0E5           LDRB     R1,[R0, #+13]
   \   00000020   000051E3           CMP      R1,#+0
   \   00000024   0700001A           BNE      ??insert_10
   \   00000028   101090E5           LDR      R1,[R0, #+16]
   \   0000002C   00B0A0E1           MOV      R11,R0
   \   00000030   010056E1           CMP      R6,R1
   \   00000034   00009035           LDRCC    R0,[R0, #+0]
   \   00000038   0170A033           MOVCC    R7,#+1
   \   0000003C   08009025           LDRCS    R0,[R0, #+8]
   \   00000040   0070A023           MOVCS    R7,#+0
   \   00000044   F4FFFFEA           B        ??insert_9
   \                     ??insert_10:
   \   00000048   0B00A0E1           MOV      R0,R11
   \   0000004C   01A0A0E3           MOV      R10,#+1
   \   00000050   000057E3           CMP      R7,#+0
   \   00000054   0B00000A           BEQ      ??insert_11
   \   00000058   001095E5           LDR      R1,[R5, #+0]
   \   0000005C   010050E1           CMP      R0,R1
   \   00000060   0700001A           BNE      ??insert_12
   \   00000064   0630A0E1           MOV      R3,R6
   \   00000068   0B20A0E1           MOV      R2,R11
   \   0000006C   0110A0E3           MOV      R1,#+1
   \                     ??insert_13:
   \   00000070   0500A0E1           MOV      R0,R5
   \   00000074   ........           _BLF     ??_Insert_2,??_Insert??rA_1
   \   00000078   00008DE5           STR      R0,[SP, #+0]
   \   0000007C   04A0CDE5           STRB     R10,[SP, #+4]
   \   00000080   0A0000EA           B        ??insert_14
   \                     ??insert_12:
   \   00000084   ........           _BLF     ??_DecP,??_DecP??rA
   \                     ??insert_11:
   \   00000088   101090E5           LDR      R1,[R0, #+16]
   \   0000008C   060051E1           CMP      R1,R6
   \   00000090   0300002A           BCS      ??insert_15
   \   00000094   0630A0E1           MOV      R3,R6
   \   00000098   0B20A0E1           MOV      R2,R11
   \   0000009C   0710A0E1           MOV      R1,R7
   \   000000A0   F2FFFFEA           B        ??insert_13
   \                     ??insert_15:
   \   000000A4   00008DE5           STR      R0,[SP, #+0]
   \   000000A8   0010A0E3           MOV      R1,#+0
   \   000000AC   0410CDE5           STRB     R1,[SP, #+4]
   \                     ??insert_14:
   \   000000B0   0D00A0E1           MOV      R0,SP
   \   000000B4   030090E8           LDM      R0,{R0,R1}
   \   000000B8   030084E8           STM      R4,{R0,R1}
   \   000000BC   0400A0E1           MOV      R0,R4
   \   000000C0   F64CBDE8           POP      {R1,R2,R4-R7,R10,R11,LR}
   \   000000C4   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs _Tree<_Tset_traits<PRogramObject *, less<PRogramObject *>, allocator<PRogramObject *>, false>>::iterator _Tree<_Tset_traits<PRogramObject *, less<PRogramObject *>, allocator<PRogramObject *>, false>>::erase(_Tree<_Tset_traits<PRogramObject *, less<PRogramObject *>, allocator<PRogramObject *>, false>>::iterator, _Tree<_Tset_traits<PRogramObject *, less<PRogramObject *>, allocator<PRogramObject *>, false>>::iterator)
   \                     ??erase:
   \   00000000   F0402DE9           PUSH     {R4-R7,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   000094E5           LDR      R0,[R4, #+0]
   \   0000000C   0150A0E1           MOV      R5,R1
   \   00000010   0260A0E1           MOV      R6,R2
   \   00000014   000055E1           CMP      R5,R0
   \   00000018   04005601           CMPEQ    R6,R4
   \   0000001C   1000001A           BNE      ??erase_4
   \   00000020   041094E5           LDR      R1,[R4, #+4]
   \   00000024   0400A0E1           MOV      R0,R4
   \   00000028   ........           _BLF     ??_Erase_1,??_Erase??rA
   \   0000002C   0400A0E1           MOV      R0,R4
   \   00000030   ........           _BLF     ??_Clear,??_Clear??rA
   \   00000034   000094E5           LDR      R0,[R4, #+0]
   \   00000038   0C0000EA           B        ??erase_5
   \                     ??erase_6:
   \   0000003C   0570A0E1           MOV      R7,R5
   \   00000040   0500A0E1           MOV      R0,R5
   \   00000044   ........           _BLF     ??_IncP,??_IncP??rA
   \   00000048   0050A0E1           MOV      R5,R0
   \   0000004C   0700A0E1           MOV      R0,R7
   \   00000050   ........           _BLF     ??_IncP,??_IncP??rA
   \   00000054   0710A0E1           MOV      R1,R7
   \   00000058   0400A0E1           MOV      R0,R4
   \   0000005C   ........           _BLF     ??_Erase,??_Erase??rA_1
   \   00000060   ........           _BLF     `??operator delete`,`??operator delete??rA`
   \                     ??erase_4:
   \   00000064   060055E1           CMP      R5,R6
   \   00000068   F3FFFF1A           BNE      ??erase_6
   \   0000006C   0500A0E1           MOV      R0,R5
   \                     ??erase_5:
   \   00000070   F040BDE8           POP      {R4-R7,LR}
   \   00000074   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::iterator _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::erase(_Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::iterator, _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::iterator)
   \                     ??erase_1:
   \   00000000   F0402DE9           PUSH     {R4-R7,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   000094E5           LDR      R0,[R4, #+0]
   \   0000000C   0150A0E1           MOV      R5,R1
   \   00000010   0260A0E1           MOV      R6,R2
   \   00000014   000055E1           CMP      R5,R0
   \   00000018   04005601           CMPEQ    R6,R4
   \   0000001C   0D00001A           BNE      ??erase_7
   \   00000020   0400A0E1           MOV      R0,R4
   \   00000024   ........           _BLF     ??clear,??clear??rA
   \   00000028   000094E5           LDR      R0,[R4, #+0]
   \   0000002C   0C0000EA           B        ??erase_8
   \                     ??erase_9:
   \   00000030   0570A0E1           MOV      R7,R5
   \   00000034   0500A0E1           MOV      R0,R5
   \   00000038   ........           _BLF     ??_IncP,??_IncP??rA
   \   0000003C   0050A0E1           MOV      R5,R0
   \   00000040   0700A0E1           MOV      R0,R7
   \   00000044   ........           _BLF     ??_IncP,??_IncP??rA
   \   00000048   0710A0E1           MOV      R1,R7
   \   0000004C   0400A0E1           MOV      R0,R4
   \   00000050   ........           _BLF     ??_Erase,??_Erase??rA_1
   \   00000054   ........           _BLF     `??operator delete`,`??operator delete??rA`
   \                     ??erase_7:
   \   00000058   060055E1           CMP      R5,R6
   \   0000005C   F3FFFF1A           BNE      ??erase_9
   \   00000060   0500A0E1           MOV      R0,R5
   \                     ??erase_8:
   \   00000064   F040BDE8           POP      {R4-R7,LR}
   \   00000068   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs unsigned int _Tree<_Tset_traits<PRogramObject *, less<PRogramObject *>, allocator<PRogramObject *>, false>>::erase(PRogramObject *)
   \                     ??erase_2:
   \   00000000   73402DE9           PUSH     {R0,R1,R4-R6,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0120A0E1           MOV      R2,R1
   \   0000000C   0410A0E1           MOV      R1,R4
   \   00000010   0D00A0E1           MOV      R0,SP
   \   00000014   ........           _BLF     ??equal_range,??equal_range??rA
   \   00000018   04509DE5           LDR      R5,[SP, #+4]
   \   0000001C   00009DE5           LDR      R0,[SP, #+0]
   \   00000020   0060A0E3           MOV      R6,#+0
   \   00000024   010000EA           B        ??erase_10
   \                     ??erase_11:
   \   00000028   016086E2           ADD      R6,R6,#+1
   \   0000002C   ........           _BLF     ??_IncP,??_IncP??rA
   \                     ??erase_10:
   \   00000030   050050E1           CMP      R0,R5
   \   00000034   FBFFFF1A           BNE      ??erase_11
   \   00000038   04209DE5           LDR      R2,[SP, #+4]
   \   0000003C   00109DE5           LDR      R1,[SP, #+0]
   \   00000040   0400A0E1           MOV      R0,R4
   \   00000044   ........           _BLF     ??erase,??erase??rA
   \   00000048   0600A0E1           MOV      R0,R6
   \   0000004C   7640BDE8           POP      {R1,R2,R4-R6,LR}
   \   00000050   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs unsigned int _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::erase(PRogramObjectBase *)
   \                     ??erase_3:
   \   00000000   73402DE9           PUSH     {R0,R1,R4-R6,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0120A0E1           MOV      R2,R1
   \   0000000C   0410A0E1           MOV      R1,R4
   \   00000010   0D00A0E1           MOV      R0,SP
   \   00000014   ........           _BLF     ??equal_range_1,??equal_range??rA_1
   \   00000018   04509DE5           LDR      R5,[SP, #+4]
   \   0000001C   00009DE5           LDR      R0,[SP, #+0]
   \   00000020   0060A0E3           MOV      R6,#+0
   \   00000024   010000EA           B        ??erase_12
   \                     ??erase_13:
   \   00000028   016086E2           ADD      R6,R6,#+1
   \   0000002C   ........           _BLF     ??_IncP,??_IncP??rA
   \                     ??erase_12:
   \   00000030   050050E1           CMP      R0,R5
   \   00000034   FBFFFF1A           BNE      ??erase_13
   \   00000038   04209DE5           LDR      R2,[SP, #+4]
   \   0000003C   00109DE5           LDR      R1,[SP, #+0]
   \   00000040   0400A0E1           MOV      R0,R4
   \   00000044   ........           _BLF     ??erase_1,??erase??rA_1
   \   00000048   0600A0E1           MOV      R0,R6
   \   0000004C   7640BDE8           POP      {R1,R2,R4-R6,LR}
   \   00000050   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::clear()
   \                     ??clear:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   041094E5           LDR      R1,[R4, #+4]
   \   0000000C   ........           _BLF     ??_Erase_2,??_Erase??rA_2
   \   00000010   0400A0E1           MOV      R0,R4
   \   00000014   ........           _BLF     ??_Clear,??_Clear??rA
   \   00000018   1040BDE8           POP      {R4,LR}
   \   0000001C   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs _Tree<_Tset_traits<PRogramObject *, less<PRogramObject *>, allocator<PRogramObject *>, false>>::_Pairii _Tree<_Tset_traits<PRogramObject *, less<PRogramObject *>, allocator<PRogramObject *>, false>>::equal_range(PRogramObject *)
   \                     ??equal_range:
   \   00000000   F3402DE9           PUSH     {R0,R1,R4-R7,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
   \   0000000C   0260A0E1           MOV      R6,R2
   \   00000010   0610A0E1           MOV      R1,R6
   \   00000014   0500A0E1           MOV      R0,R5
   \   00000018   ........           _BLF     ??_Ubound,??_Ubound??rA
   \   0000001C   0070A0E1           MOV      R7,R0
   \   00000020   0610A0E1           MOV      R1,R6
   \   00000024   0500A0E1           MOV      R0,R5
   \   00000028   ........           _BLF     ??_Lbound_1,??_Lbound??rA
   \   0000002C   00008DE5           STR      R0,[SP, #+0]
   \   00000030   04708DE5           STR      R7,[SP, #+4]
   \   00000034   0D00A0E1           MOV      R0,SP
   \   00000038   030090E8           LDM      R0,{R0,R1}
   \   0000003C   030084E8           STM      R4,{R0,R1}
   \   00000040   0400A0E1           MOV      R0,R4
   \   00000044   F640BDE8           POP      {R1,R2,R4-R7,LR}
   \   00000048   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::_Pairii _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::equal_range(PRogramObjectBase *)
   \                     ??equal_range_1:
   \   00000000   F3402DE9           PUSH     {R0,R1,R4-R7,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
   \   0000000C   0260A0E1           MOV      R6,R2
   \   00000010   0610A0E1           MOV      R1,R6
   \   00000014   0500A0E1           MOV      R0,R5
   \   00000018   ........           _BLF     ??_Ubound_1,??_Ubound??rA_1
   \   0000001C   0070A0E1           MOV      R7,R0
   \   00000020   0610A0E1           MOV      R1,R6
   \   00000024   0500A0E1           MOV      R0,R5
   \   00000028   ........           _BLF     ??_Lbound,??_Lbound??rA_1
   \   0000002C   00008DE5           STR      R0,[SP, #+0]
   \   00000030   04708DE5           STR      R7,[SP, #+4]
   \   00000034   0D00A0E1           MOV      R0,SP
   \   00000038   030090E8           LDM      R0,{R0,R1}
   \   0000003C   030084E8           STM      R4,{R0,R1}
   \   00000040   0400A0E1           MOV      R0,R4
   \   00000044   F640BDE8           POP      {R1,R2,R4-R7,LR}
   \   00000048   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void _Tree<_Tset_traits<PRogramObject *, less<PRogramObject *>, allocator<PRogramObject *>, false>>::_Erase(_Tree<_Tset_traits<PRogramObject *, less<PRogramObject *>, allocator<PRogramObject *>, false>>::_Nodeptr)
   \                     ??_Erase_1:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
   \   0000000C   0560A0E1           MOV      R6,R5
   \   00000010   060000EA           B        ??_Erase_29
   \                     ??_Erase_30:
   \   00000014   081096E5           LDR      R1,[R6, #+8]
   \   00000018   0400A0E1           MOV      R0,R4
   \   0000001C   F7FFFFEB           BL       ??_Erase_1
   \   00000020   006096E5           LDR      R6,[R6, #+0]
   \   00000024   0500A0E1           MOV      R0,R5
   \   00000028   ........           _BLF     `??operator delete`,`??operator delete??rA`
   \   0000002C   0650A0E1           MOV      R5,R6
   \                     ??_Erase_29:
   \   00000030   0D00D6E5           LDRB     R0,[R6, #+13]
   \   00000034   000050E3           CMP      R0,#+0
   \   00000038   F5FFFF0A           BEQ      ??_Erase_30
   \   0000003C   7040BDE8           POP      {R4-R6,LR}
   \   00000040   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::_Erase(_Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::_Nodeptr)
   \                     ??_Erase_2:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
   \   0000000C   0560A0E1           MOV      R6,R5
   \   00000010   060000EA           B        ??_Erase_31
   \                     ??_Erase_32:
   \   00000014   081096E5           LDR      R1,[R6, #+8]
   \   00000018   0400A0E1           MOV      R0,R4
   \   0000001C   F7FFFFEB           BL       ??_Erase_2
   \   00000020   006096E5           LDR      R6,[R6, #+0]
   \   00000024   0500A0E1           MOV      R0,R5
   \   00000028   ........           _BLF     `??operator delete`,`??operator delete??rA`
   \   0000002C   0650A0E1           MOV      R5,R6
   \                     ??_Erase_31:
   \   00000030   0D00D6E5           LDRB     R0,[R6, #+13]
   \   00000034   000050E3           CMP      R0,#+0
   \   00000038   F5FFFF0A           BEQ      ??_Erase_32
   \   0000003C   7040BDE8           POP      {R4-R6,LR}
   \   00000040   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs _Tree<_Tset_traits<PRogramObject *, less<PRogramObject *>, allocator<PRogramObject *>, false>>::iterator _Tree<_Tset_traits<PRogramObject *, less<PRogramObject *>, allocator<PRogramObject *>, false>>::_Insert(bool, _Tree<_Tset_traits<PRogramObject *, less<PRogramObject *>, allocator<PRogramObject *>, false>>::_Nodeptr, PRogramObject *)
   \                     ??_Insert_1:
   \   00000000   F0412DE9           PUSH     {R4-R8,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
   \   0000000C   0260A0E1           MOV      R6,R2
   \   00000010   0370A0E1           MOV      R7,R3
   \   00000014   1400A0E3           MOV      R0,#+20
   \   00000018   ........           _BLF     `??operator new`,`??operator new??rA`
   \   0000001C   0080B0E1           MOVS     R8,R0
   \   00000020   0600000A           BEQ      ??_Insert_13
   \   00000024   004088E5           STR      R4,[R8, #+0]
   \   00000028   046088E5           STR      R6,[R8, #+4]
   \   0000002C   084088E5           STR      R4,[R8, #+8]
   \   00000030   0000A0E3           MOV      R0,#+0
   \   00000034   0C00C8E5           STRB     R0,[R8, #+12]
   \   00000038   0D00C8E5           STRB     R0,[R8, #+13]
   \   0000003C   107088E5           STR      R7,[R8, #+16]
   \                     ??_Insert_13:
   \   00000040   0830A0E1           MOV      R3,R8
   \   00000044   0620A0E1           MOV      R2,R6
   \   00000048   0510A0E1           MOV      R1,R5
   \   0000004C   0400A0E1           MOV      R0,R4
   \   00000050   ........           _BLF     ??_Insert,??_Insert??rA_2
   \   00000054   0800A0E1           MOV      R0,R8
   \   00000058   F041BDE8           POP      {R4-R8,LR}
   \   0000005C   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::iterator _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::_Insert(bool, _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::_Nodeptr, PRogramObjectBase *)
   \                     ??_Insert_2:
   \   00000000   F0412DE9           PUSH     {R4-R8,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
   \   0000000C   0260A0E1           MOV      R6,R2
   \   00000010   0370A0E1           MOV      R7,R3
   \   00000014   1400A0E3           MOV      R0,#+20
   \   00000018   ........           _BLF     `??operator new`,`??operator new??rA`
   \   0000001C   0080B0E1           MOVS     R8,R0
   \   00000020   0600000A           BEQ      ??_Insert_14
   \   00000024   004088E5           STR      R4,[R8, #+0]
   \   00000028   046088E5           STR      R6,[R8, #+4]
   \   0000002C   084088E5           STR      R4,[R8, #+8]
   \   00000030   0000A0E3           MOV      R0,#+0
   \   00000034   0C00C8E5           STRB     R0,[R8, #+12]
   \   00000038   0D00C8E5           STRB     R0,[R8, #+13]
   \   0000003C   107088E5           STR      R7,[R8, #+16]
   \                     ??_Insert_14:
   \   00000040   0830A0E1           MOV      R3,R8
   \   00000044   0620A0E1           MOV      R2,R6
   \   00000048   0510A0E1           MOV      R1,R5
   \   0000004C   0400A0E1           MOV      R0,R4
   \   00000050   ........           _BLF     ??_Insert,??_Insert??rA_2
   \   00000054   0800A0E1           MOV      R0,R8
   \   00000058   F041BDE8           POP      {R4-R8,LR}
   \   0000005C   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::_Nodeptr _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::_Lbound(PRogramObjectBase *) const
   \                     ??_Lbound:
   \   00000000   042090E5           LDR      R2,[R0, #+4]
   \                     ??_Lbound_2:
   \   00000004   0D30D2E5           LDRB     R3,[R2, #+13]
   \   00000008   000053E3           CMP      R3,#+0
   \   0000000C   1EFF2F11           BXNE     LR
   \   00000010   103092E5           LDR      R3,[R2, #+16]
   \   00000014   010053E1           CMP      R3,R1
   \   00000018   08209235           LDRCC    R2,[R2, #+8]
   \   0000001C   0200A021           MOVCS    R0,R2
   \   00000020   00209225           LDRCS    R2,[R2, #+0]
   \   00000024   F6FFFFEA           B        ??_Lbound_2

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs _Tree<_Tset_traits<PRogramObject *, less<PRogramObject *>, allocator<PRogramObject *>, false>>::_Nodeptr _Tree<_Tset_traits<PRogramObject *, less<PRogramObject *>, allocator<PRogramObject *>, false>>::_Lbound(PRogramObject *) const
   \                     ??_Lbound_1:
   \   00000000   042090E5           LDR      R2,[R0, #+4]
   \                     ??_Lbound_3:
   \   00000004   0D30D2E5           LDRB     R3,[R2, #+13]
   \   00000008   000053E3           CMP      R3,#+0
   \   0000000C   1EFF2F11           BXNE     LR
   \   00000010   103092E5           LDR      R3,[R2, #+16]
   \   00000014   010053E1           CMP      R3,R1
   \   00000018   08209235           LDRCC    R2,[R2, #+8]
   \   0000001C   0200A021           MOVCS    R0,R2
   \   00000020   00209225           LDRCS    R2,[R2, #+0]
   \   00000024   F6FFFFEA           B        ??_Lbound_3

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs _Tree<_Tset_traits<PRogramObject *, less<PRogramObject *>, allocator<PRogramObject *>, false>>::_Nodeptr _Tree<_Tset_traits<PRogramObject *, less<PRogramObject *>, allocator<PRogramObject *>, false>>::_Ubound(PRogramObject *) const
   \                     ??_Ubound:
   \   00000000   042090E5           LDR      R2,[R0, #+4]
   \                     ??_Ubound_2:
   \   00000004   0D30D2E5           LDRB     R3,[R2, #+13]
   \   00000008   000053E3           CMP      R3,#+0
   \   0000000C   1EFF2F11           BXNE     LR
   \   00000010   103092E5           LDR      R3,[R2, #+16]
   \   00000014   030051E1           CMP      R1,R3
   \   00000018   08209225           LDRCS    R2,[R2, #+8]
   \   0000001C   0200A031           MOVCC    R0,R2
   \   00000020   00209235           LDRCC    R2,[R2, #+0]
   \   00000024   F6FFFFEA           B        ??_Ubound_2

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::_Nodeptr _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::_Ubound(PRogramObjectBase *) const
   \                     ??_Ubound_1:
   \   00000000   042090E5           LDR      R2,[R0, #+4]
   \                     ??_Ubound_3:
   \   00000004   0D30D2E5           LDRB     R3,[R2, #+13]
   \   00000008   000053E3           CMP      R3,#+0
   \   0000000C   1EFF2F11           BXNE     LR
   \   00000010   103092E5           LDR      R3,[R2, #+16]
   \   00000014   030051E1           CMP      R1,R3
   \   00000018   08209225           LDRCS    R2,[R2, #+8]
   \   0000001C   0200A031           MOVCC    R0,R2
   \   00000020   00209235           LDRCC    R2,[R2, #+0]
   \   00000024   F6FFFFEA           B        ??_Ubound_3

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs set<PRogramObjectBase *>::~set()
   \                     `?~set`:
   \   00000000   00402DE9           PUSH     {LR}
   \   00000004   ........           _BLF     ??clear,??clear??rA
   \   00000008   0040BDE8           POP      {LR}
   \   0000000C   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs set<PRogramObjectBase *>::set()
   \                     ??set:
   \   00000000   11402DE9           PUSH     {R0,R4,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0110A0E3           MOV      R1,#+1
   \   0000000C   0D00A0E1           MOV      R0,SP
   \   00000010   ........           _BLF     __data_memzero,??__data_memzero??rA
   \   00000014   0400A0E1           MOV      R0,R4
   \   00000018   ........           _BLF     ??_Clear,??_Clear??rA
   \   0000001C   0000DDE5           LDRB     R0,[SP, #+0]
   \   00000020   1400C4E5           STRB     R0,[R4, #+20]
   \   00000024   0400A0E1           MOV      R0,R4
   \   00000028   1240BDE8           POP      {R1,R4,LR}
   \   0000002C   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void _Vector_value<allocator<void>>::_Zero()
   \                     ??_Zero:
   \   00000000   0010A0E3           MOV      R1,#+0
   \   00000004   001080E5           STR      R1,[R0, #+0]
   \   00000008   041080E5           STR      R1,[R0, #+4]
   \   0000000C   081080E5           STR      R1,[R0, #+8]
   \   00000010   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void _Vector_impl<vector<DeviceData>, allocator<vector<DeviceData>>>::_EraseAll()
   \                     ??_EraseAll:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   045094E5           LDR      R5,[R4, #+4]
   \   0000000C   006094E5           LDR      R6,[R4, #+0]
   \   00000010   040000EA           B        ??_EraseAll_2
   \                     ??_EraseAll_3:
   \   00000014   0600A0E1           MOV      R0,R6
   \   00000018   ........           _BLF     ??_Tidy0,??_Tidy0??rA
   \   0000001C   0600A0E1           MOV      R0,R6
   \   00000020   ........           _BLF     ??_Zero,??_Zero??rA
   \   00000024   0C6086E2           ADD      R6,R6,#+12
   \                     ??_EraseAll_2:
   \   00000028   050056E1           CMP      R6,R5
   \   0000002C   F8FFFF1A           BNE      ??_EraseAll_3
   \   00000030   000094E5           LDR      R0,[R4, #+0]
   \   00000034   040084E5           STR      R0,[R4, #+4]
   \   00000038   7040BDE8           POP      {R4-R6,LR}
   \   0000003C   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void _Vector_impl<NetworkedDevice, allocator<NetworkedDevice>>::_EraseAll()
   \                     ??_EraseAll_1:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   045094E5           LDR      R5,[R4, #+4]
   \   0000000C   006094E5           LDR      R6,[R4, #+0]
   \   00000010   040000EA           B        ??_EraseAll_4
   \                     ??_EraseAll_5:
   \   00000014   0020A0E3           MOV      R2,#+0
   \   00000018   0110A0E3           MOV      R1,#+1
   \   0000001C   080086E2           ADD      R0,R6,#+8
   \   00000020   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000024   246086E2           ADD      R6,R6,#+36
   \                     ??_EraseAll_4:
   \   00000028   050056E1           CMP      R6,R5
   \   0000002C   F8FFFF1A           BNE      ??_EraseAll_5
   \   00000030   000094E5           LDR      R0,[R4, #+0]
   \   00000034   040084E5           STR      R0,[R4, #+4]
   \   00000038   7040BDE8           POP      {R4-R6,LR}
   \   0000003C   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void _Vector_impl<DeviceData, allocator<DeviceData>>::_Tidy0()
   \                     ??_Tidy0:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   001094E5           LDR      R1,[R4, #+0]
   \   0000000C   000051E3           CMP      R1,#+0
   \   00000010   0400000A           BEQ      ??_Tidy0_3
   \   00000014   042094E5           LDR      R2,[R4, #+4]
   \   00000018   ........           _BLF     ??_Destroy,??_Destroy??rA
   \   0000001C   000094E5           LDR      R0,[R4, #+0]
   \   00000020   040084E5           STR      R0,[R4, #+4]
   \   00000024   ........           _BLF     `??operator delete`,`??operator delete??rA`
   \                     ??_Tidy0_3:
   \   00000028   1040BDE8           POP      {R4,LR}
   \   0000002C   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void _Vector_impl<NetworkedDevice, allocator<NetworkedDevice>>::_Tidy0()
   \                     ??_Tidy0_1:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   000094E5           LDR      R0,[R4, #+0]
   \   0000000C   000050E3           CMP      R0,#+0
   \   00000010   0300000A           BEQ      ??_Tidy0_4
   \   00000014   0400A0E1           MOV      R0,R4
   \   00000018   ........           _BLF     ??_EraseAll_1,??_EraseAll??rA
   \   0000001C   000094E5           LDR      R0,[R4, #+0]
   \   00000020   ........           _BLF     `??operator delete`,`??operator delete??rA`
   \                     ??_Tidy0_4:
   \   00000024   1040BDE8           POP      {R4,LR}
   \   00000028   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void _Vector_impl<vector<DeviceData>, allocator<vector<DeviceData>>>::_Tidy0()
   \                     ??_Tidy0_2:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   000094E5           LDR      R0,[R4, #+0]
   \   0000000C   000050E3           CMP      R0,#+0
   \   00000010   0300000A           BEQ      ??_Tidy0_5
   \   00000014   0400A0E1           MOV      R0,R4
   \   00000018   ........           _BLF     ??_EraseAll,??_EraseAll??rA_1
   \   0000001C   000094E5           LDR      R0,[R4, #+0]
   \   00000020   ........           _BLF     `??operator delete`,`??operator delete??rA`
   \                     ??_Tidy0_5:
   \   00000024   1040BDE8           POP      {R4,LR}
   \   00000028   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void _Vector_impl<DeviceData, allocator<DeviceData>>::_Destroy(DeviceData *, DeviceData *)
   \                     ??_Destroy:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   0140A0E1           MOV      R4,R1
   \   00000008   0250A0E1           MOV      R5,R2
   \   0000000C   040000EA           B        ??_Destroy_1
   \                     ??_Destroy_2:
   \   00000010   0020A0E3           MOV      R2,#+0
   \   00000014   0110A0E3           MOV      R1,#+1
   \   00000018   080084E2           ADD      R0,R4,#+8
   \   0000001C   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000020   244084E2           ADD      R4,R4,#+36
   \                     ??_Destroy_1:
   \   00000024   050054E1           CMP      R4,R5
   \   00000028   F8FFFF1A           BNE      ??_Destroy_2
   \   0000002C   3040BDE8           POP      {R4,R5,LR}
   \   00000030   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void _Vector_impl<DeviceData, allocator<DeviceData>>::_Assign(_Vector_impl<DeviceData, allocator<DeviceData>> const &)
   \                     ??_Assign:
   \   00000000   F1432DE9           PUSH     {R0,R4-R9,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
   \   0000000C   050054E1           CMP      R4,R5
   \   00000010   5700000A           BEQ      ??_Assign_1
   \   00000014   048095E5           LDR      R8,[R5, #+4]
   \   00000018   006095E5           LDR      R6,[R5, #+0]
   \   0000001C   2410A0E3           MOV      R1,#+36
   \   00000020   060048E0           SUB      R0,R8,R6
   \   00000024   ........           _BLF     ??divu32_a,??rA??divu32_a
   \   00000028   0130B0E1           MOVS     R3,R1
   \   0000002C   0400001A           BNE      ??_Assign_2
   \   00000030   0400A0E1           MOV      R0,R4
   \   00000034   ........           _BLF     ??_Tidy0,??_Tidy0??rA
   \   00000038   0400A0E1           MOV      R0,R4
   \   0000003C   ........           _BLF     ??_Zero,??_Zero??rA
   \   00000040   4B0000EA           B        ??_Assign_1
   \                     ??_Assign_2:
   \   00000044   007094E5           LDR      R7,[R4, #+0]
   \   00000048   042094E5           LDR      R2,[R4, #+4]
   \   0000004C   2410A0E3           MOV      R1,#+36
   \   00000050   070042E0           SUB      R0,R2,R7
   \   00000054   ........           _BLF     ??divu32_a,??rA??divu32_a
   \   00000058   0190A0E1           MOV      R9,R1
   \   0000005C   030059E1           CMP      R9,R3
   \   00000060   1500003A           BCC      ??_Assign_3
   \   00000064   040000EA           B        ??_Assign_4
   \                     ??_Assign_5:
   \   00000068   0610A0E1           MOV      R1,R6
   \   0000006C   0700A0E1           MOV      R0,R7
   \   00000070   ........           _BLF     `??operator=`,`??operator=??rA`
   \   00000074   247087E2           ADD      R7,R7,#+36
   \   00000078   246086E2           ADD      R6,R6,#+36
   \                     ??_Assign_4:
   \   0000007C   080056E1           CMP      R6,R8
   \   00000080   F8FFFF1A           BNE      ??_Assign_5
   \   00000084   042094E5           LDR      R2,[R4, #+4]
   \   00000088   0710A0E1           MOV      R1,R7
   \   0000008C   0400A0E1           MOV      R0,R4
   \   00000090   ........           _BLF     ??_Destroy,??_Destroy??rA
   \   00000094   040095E5           LDR      R0,[R5, #+4]
   \   00000098   001095E5           LDR      R1,[R5, #+0]
   \   0000009C   002094E5           LDR      R2,[R4, #+0]
   \   000000A0   010040E0           SUB      R0,R0,R1
   \   000000A4   2410A0E3           MOV      R1,#+36
   \   000000A8   ........           _BLF     ??divu32_a,??rA??divu32_a
   \   000000AC   2400A0E3           MOV      R0,#+36
   \   000000B0   902121E0           MLA      R1,R0,R1,R2
   \   000000B4   041084E5           STR      R1,[R4, #+4]
   \   000000B8   2D0000EA           B        ??_Assign_1
   \                     ??_Assign_3:
   \   000000BC   080094E5           LDR      R0,[R4, #+8]
   \   000000C0   2410A0E3           MOV      R1,#+36
   \   000000C4   070040E0           SUB      R0,R0,R7
   \   000000C8   ........           _BLF     ??divu32_a,??rA??divu32_a
   \   000000CC   030051E1           CMP      R1,R3
   \   000000D0   0D00003A           BCC      ??_Assign_6
   \   000000D4   2400A0E3           MOV      R0,#+36
   \   000000D8   906928E0           MLA      R8,R0,R9,R6
   \   000000DC   040000EA           B        ??_Assign_7
   \                     ??_Assign_8:
   \   000000E0   0610A0E1           MOV      R1,R6
   \   000000E4   0700A0E1           MOV      R0,R7
   \   000000E8   ........           _BLF     `??operator=`,`??operator=??rA`
   \   000000EC   247087E2           ADD      R7,R7,#+36
   \   000000F0   246086E2           ADD      R6,R6,#+36
   \                     ??_Assign_7:
   \   000000F4   080056E1           CMP      R6,R8
   \   000000F8   F8FFFF1A           BNE      ??_Assign_8
   \   000000FC   043094E5           LDR      R3,[R4, #+4]
   \   00000100   042095E5           LDR      R2,[R5, #+4]
   \   00000104   0810A0E1           MOV      R1,R8
   \   00000108   160000EA           B        ??_Assign_9
   \                     ??_Assign_6:
   \   0000010C   000057E3           CMP      R7,#+0
   \   00000110   0400000A           BEQ      ??_Assign_10
   \   00000114   0710A0E1           MOV      R1,R7
   \   00000118   0400A0E1           MOV      R0,R4
   \   0000011C   ........           _BLF     ??_Destroy,??_Destroy??rA
   \   00000120   000094E5           LDR      R0,[R4, #+0]
   \   00000124   ........           _BLF     `??operator delete`,`??operator delete??rA`
   \                     ??_Assign_10:
   \   00000128   040095E5           LDR      R0,[R5, #+4]
   \   0000012C   001095E5           LDR      R1,[R5, #+0]
   \   00000130   016040E0           SUB      R6,R0,R1
   \   00000134   0400A0E1           MOV      R0,R4
   \   00000138   ........           _BLF     ??_Zero,??_Zero??rA
   \   0000013C   000056E3           CMP      R6,#+0
   \   00000140   0B00000A           BEQ      ??_Assign_1
   \   00000144   0600A0E1           MOV      R0,R6
   \   00000148   ........           _BLF     `??operator new`,`??operator new??rA`
   \   0000014C   000084E5           STR      R0,[R4, #+0]
   \   00000150   0030A0E1           MOV      R3,R0
   \   00000154   043084E5           STR      R3,[R4, #+4]
   \   00000158   030086E0           ADD      R0,R6,R3
   \   0000015C   080084E5           STR      R0,[R4, #+8]
   \   00000160   042095E5           LDR      R2,[R5, #+4]
   \   00000164   001095E5           LDR      R1,[R5, #+0]
   \                     ??_Assign_9:
   \   00000168   0400A0E1           MOV      R0,R4
   \   0000016C   ........           _BLF     ??_Ucopy_2,??_Ucopy??rA
   \   00000170   040084E5           STR      R0,[R4, #+4]
   \                     ??_Assign_1:
   \   00000174   F143BDE8           POP      {R0,R4-R9,LR}
   \   00000178   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs AnalogInput ** _Vector_impl<AnalogInput *, allocator<AnalogInput *>>::_Insert(AnalogInput **, AnalogInput * const &)
   \                     ??_Insert_3:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   005092E5           LDR      R5,[R2, #+0]
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   000094E5           LDR      R0,[R4, #+0]
   \   00000010   0120A0E3           MOV      R2,#+1
   \   00000014   000050E3           CMP      R0,#+0
   \   00000018   0060A003           MOVEQ    R6,#+0
   \   0000001C   00604110           SUBNE    R6,R1,R0
   \   00000020   0400A0E1           MOV      R0,R4
   \   00000024   ........           _BLF     ??_Make_room_3,??_Make_room??rA
   \   00000028   0110A0E3           MOV      R1,#+1
   \                     ??_Insert_15:
   \   0000002C   ........           STR      R5,[R0], #+4
   \   00000030   011051E2           SUBS     R1,R1,#+1
   \   00000034   FCFFFF1A           BNE      ??_Insert_15
   \   00000038   000094E5           LDR      R0,[R4, #+0]
   \   0000003C   000086E0           ADD      R0,R6,R0
   \   00000040   7040BDE8           POP      {R4-R6,LR}
   \   00000044   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void _Vector_impl<NetworkedDevice, allocator<NetworkedDevice>>::_Insert_n(NetworkedDevice *, unsigned int, NetworkedDevice const &)
   \                     ??_Insert_n:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   24D04DE2           SUB      SP,SP,#+36
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   0150A0E1           MOV      R5,R1
   \   00000010   0260A0E1           MOV      R6,R2
   \   00000014   0310A0E1           MOV      R1,R3
   \   00000018   0D00A0E1           MOV      R0,SP
   \   0000001C   ........           _BLF     ??NetworkedDevice,??NetworkedDevice??rA
   \   00000020   0620A0E1           MOV      R2,R6
   \   00000024   0510A0E1           MOV      R1,R5
   \   00000028   0400A0E1           MOV      R0,R4
   \   0000002C   ........           _BLF     ??_Make_room_2,??_Make_room??rA_1
   \   00000030   0040A0E1           MOV      R4,R0
   \   00000034   060000EA           B        ??_Insert_n_2
   \                     ??_Insert_n_3:
   \   00000038   000054E3           CMP      R4,#+0
   \   0000003C   0200000A           BEQ      ??_Insert_n_4
   \   00000040   0D10A0E1           MOV      R1,SP
   \   00000044   0400A0E1           MOV      R0,R4
   \   00000048   ........           _BLF     ??NetworkedDevice,??NetworkedDevice??rA
   \                     ??_Insert_n_4:
   \   0000004C   016046E2           SUB      R6,R6,#+1
   \   00000050   244084E2           ADD      R4,R4,#+36
   \                     ??_Insert_n_2:
   \   00000054   000056E3           CMP      R6,#+0
   \   00000058   F6FFFF1A           BNE      ??_Insert_n_3
   \   0000005C   0020A0E3           MOV      R2,#+0
   \   00000060   0110A0E3           MOV      R1,#+1
   \   00000064   08008DE2           ADD      R0,SP,#+8
   \   00000068   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   0000006C   24D08DE2           ADD      SP,SP,#+36
   \   00000070   7040BDE8           POP      {R4-R6,LR}
   \   00000074   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void _Vector_impl<DeviceData, allocator<DeviceData>>::_Insert_n(DeviceData *, unsigned int, DeviceData const &)
   \                     ??_Insert_n_1:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   24D04DE2           SUB      SP,SP,#+36
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   0150A0E1           MOV      R5,R1
   \   00000010   0260A0E1           MOV      R6,R2
   \   00000014   0310A0E1           MOV      R1,R3
   \   00000018   0D00A0E1           MOV      R0,SP
   \   0000001C   ........           _BLF     ??DeviceData,??DeviceData??rA
   \   00000020   0620A0E1           MOV      R2,R6
   \   00000024   0510A0E1           MOV      R1,R5
   \   00000028   0400A0E1           MOV      R0,R4
   \   0000002C   ........           _BLF     ??_Make_room_1,??_Make_room??rA_2
   \   00000030   0040A0E1           MOV      R4,R0
   \   00000034   060000EA           B        ??_Insert_n_5
   \                     ??_Insert_n_6:
   \   00000038   000054E3           CMP      R4,#+0
   \   0000003C   0200000A           BEQ      ??_Insert_n_7
   \   00000040   0D10A0E1           MOV      R1,SP
   \   00000044   0400A0E1           MOV      R0,R4
   \   00000048   ........           _BLF     ??DeviceData,??DeviceData??rA
   \                     ??_Insert_n_7:
   \   0000004C   016046E2           SUB      R6,R6,#+1
   \   00000050   244084E2           ADD      R4,R4,#+36
   \                     ??_Insert_n_5:
   \   00000054   000056E3           CMP      R6,#+0
   \   00000058   F6FFFF1A           BNE      ??_Insert_n_6
   \   0000005C   0020A0E3           MOV      R2,#+0
   \   00000060   0110A0E3           MOV      R1,#+1
   \   00000064   08008DE2           ADD      R0,SP,#+8
   \   00000068   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   0000006C   24D08DE2           ADD      SP,SP,#+36
   \   00000070   7040BDE8           POP      {R4-R6,LR}
   \   00000074   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs vector<DeviceData> * _Vector_impl<vector<DeviceData>, allocator<vector<DeviceData>>>::_Make_room(vector<DeviceData> *, unsigned int)
   \                     ??_Make_room:
   \   00000000   F1472DE9           PUSH     {R0,R4-R10,LR}
   \   00000004   0060A0E1           MOV      R6,R0
   \   00000008   004096E5           LDR      R4,[R6, #+0]
   \   0000000C   080096E5           LDR      R0,[R6, #+8]
   \   00000010   0230A0E1           MOV      R3,R2
   \   00000014   042096E5           LDR      R2,[R6, #+4]
   \   00000018   0150A0E1           MOV      R5,R1
   \   0000001C   040040E0           SUB      R0,R0,R4
   \   00000020   0C10A0E3           MOV      R1,#+12
   \   00000024   ........           _BLF     ??divu32_a,??rA??divu32_a
   \   00000028   0180A0E1           MOV      R8,R1
   \   0000002C   040042E0           SUB      R0,R2,R4
   \   00000030   0C10A0E3           MOV      R1,#+12
   \   00000034   ........           _BLF     ??divu32_a,??rA??divu32_a
   \   00000038   000053E3           CMP      R3,#+0
   \   0000003C   5E00000A           BEQ      ??_Make_room_4
   \   00000040   80019FE5           LDR      R0,??_Make_room_5  ;; 0x15555555
   \   00000044   014040E0           SUB      R4,R0,R1
   \   00000048   030054E1           CMP      R4,R3
   \   0000004C   5A00003A           BCC      ??_Make_room_4
   \   00000050   0C40A0E3           MOV      R4,#+12
   \   00000054   940307E0           MUL      R7,R4,R3
   \   00000058   014083E0           ADD      R4,R3,R1
   \   0000005C   040058E1           CMP      R8,R4
   \   00000060   1F00002A           BCS      ??_Make_room_6
   \   00000064   A810A0E1           LSR      R1,R8,#+1
   \   00000068   010040E0           SUB      R0,R0,R1
   \   0000006C   080050E1           CMP      R0,R8
   \   00000070   0080A033           MOVCC    R8,#+0
   \   00000074   08808120           ADDCS    R8,R1,R8
   \   00000078   040058E1           CMP      R8,R4
   \   0000007C   0480A031           MOVCC    R8,R4
   \   00000080   0C10A0E3           MOV      R1,#+12
   \   00000084   910800E0           MUL      R0,R1,R8
   \   00000088   ........           _BLF     `??operator new`,`??operator new??rA`
   \   0000008C   001096E5           LDR      R1,[R6, #+0]
   \   00000090   0090A0E1           MOV      R9,R0
   \   00000094   0930A0E1           MOV      R3,R9
   \   00000098   0520A0E1           MOV      R2,R5
   \   0000009C   0600A0E1           MOV      R0,R6
   \   000000A0   ........           _BLF     ??_Ucopy_1,??_Ucopy??rA_1
   \   000000A4   042096E5           LDR      R2,[R6, #+4]
   \   000000A8   00A0A0E1           MOV      R10,R0
   \   000000AC   0A3087E0           ADD      R3,R7,R10
   \   000000B0   0510A0E1           MOV      R1,R5
   \   000000B4   0600A0E1           MOV      R0,R6
   \   000000B8   ........           _BLF     ??_Ucopy_1,??_Ucopy??rA_1
   \   000000BC   0600A0E1           MOV      R0,R6
   \   000000C0   ........           _BLF     ??_Tidy0_2,??_Tidy0??rA_1
   \   000000C4   0C00A0E3           MOV      R0,#+12
   \   000000C8   909821E0           MLA      R1,R0,R8,R9
   \   000000CC   081086E5           STR      R1,[R6, #+8]
   \   000000D0   909421E0           MLA      R1,R0,R4,R9
   \   000000D4   041086E5           STR      R1,[R6, #+4]
   \   000000D8   009086E5           STR      R9,[R6, #+0]
   \   000000DC   0A50A0E1           MOV      R5,R10
   \   000000E0   350000EA           B        ??_Make_room_4
   \                     ??_Make_room_6:
   \   000000E4   058087E0           ADD      R8,R7,R5
   \   000000E8   0200A0E1           MOV      R0,R2
   \   000000EC   0C10A0E3           MOV      R1,#+12
   \   000000F0   ........           _BLF     ??divu32_a,??rA??divu32_a
   \   000000F4   0140A0E1           MOV      R4,R1
   \   000000F8   0500A0E1           MOV      R0,R5
   \   000000FC   0C10A0E3           MOV      R1,#+12
   \   00000100   ........           _BLF     ??divu32_a,??rA??divu32_a
   \   00000104   010044E0           SUB      R0,R4,R1
   \   00000108   030050E1           CMP      R0,R3
   \   0000010C   1100002A           BCS      ??_Make_room_7
   \   00000110   0830A0E1           MOV      R3,R8
   \   00000114   0510A0E1           MOV      R1,R5
   \   00000118   0600A0E1           MOV      R0,R6
   \   0000011C   ........           _BLF     ??_Ucopy_1,??_Ucopy??rA_1
   \   00000120   044096E5           LDR      R4,[R6, #+4]
   \   00000124   0580A0E1           MOV      R8,R5
   \   00000128   040000EA           B        ??_Make_room_8
   \                     ??_Make_room_9:
   \   0000012C   0800A0E1           MOV      R0,R8
   \   00000130   ........           _BLF     ??_Tidy0,??_Tidy0??rA
   \   00000134   0800A0E1           MOV      R0,R8
   \   00000138   ........           _BLF     ??_Zero,??_Zero??rA
   \   0000013C   0C8088E2           ADD      R8,R8,#+12
   \                     ??_Make_room_8:
   \   00000140   040058E1           CMP      R8,R4
   \   00000144   F8FFFF1A           BNE      ??_Make_room_9
   \   00000148   040096E5           LDR      R0,[R6, #+4]
   \   0000014C   000087E0           ADD      R0,R7,R0
   \   00000150   040086E5           STR      R0,[R6, #+4]
   \   00000154   180000EA           B        ??_Make_room_4
   \                     ??_Make_room_7:
   \   00000158   0240A0E1           MOV      R4,R2
   \   0000015C   000067E2           RSB      R0,R7,#+0
   \   00000160   047080E0           ADD      R7,R0,R4
   \   00000164   0230A0E1           MOV      R3,R2
   \   00000168   0710A0E1           MOV      R1,R7
   \   0000016C   0600A0E1           MOV      R0,R6
   \   00000170   ........           _BLF     ??_Ucopy_1,??_Ucopy??rA_1
   \   00000174   040086E5           STR      R0,[R6, #+4]
   \   00000178   040000EA           B        ??_Make_room_10
   \                     ??_Make_room_11:
   \   0000017C   0C7047E2           SUB      R7,R7,#+12
   \   00000180   0710A0E1           MOV      R1,R7
   \   00000184   0C4044E2           SUB      R4,R4,#+12
   \   00000188   0400A0E1           MOV      R0,R4
   \   0000018C   ........           _BLF     ??_Assign,??_Assign??rA
   \                     ??_Make_room_10:
   \   00000190   070055E1           CMP      R5,R7
   \   00000194   F8FFFF1A           BNE      ??_Make_room_11
   \   00000198   0540A0E1           MOV      R4,R5
   \   0000019C   040000EA           B        ??_Make_room_12
   \                     ??_Make_room_13:
   \   000001A0   0400A0E1           MOV      R0,R4
   \   000001A4   ........           _BLF     ??_Tidy0,??_Tidy0??rA
   \   000001A8   0400A0E1           MOV      R0,R4
   \   000001AC   ........           _BLF     ??_Zero,??_Zero??rA
   \   000001B0   0C4084E2           ADD      R4,R4,#+12
   \                     ??_Make_room_12:
   \   000001B4   080054E1           CMP      R4,R8
   \   000001B8   F8FFFF1A           BNE      ??_Make_room_13
   \                     ??_Make_room_4:
   \   000001BC   0500A0E1           MOV      R0,R5
   \   000001C0   F247BDE8           POP      {R1,R4-R10,LR}
   \   000001C4   1EFF2FE1           BX       LR               ;; return
   \                     ??_Make_room_5:
   \   000001C8   55555515           DC32     0x15555555

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs DeviceData * _Vector_impl<DeviceData, allocator<DeviceData>>::_Make_room(DeviceData *, unsigned int)
   \                     ??_Make_room_1:
   \   00000000   F1472DE9           PUSH     {R0,R4-R10,LR}
   \   00000004   0050A0E1           MOV      R5,R0
   \   00000008   004095E5           LDR      R4,[R5, #+0]
   \   0000000C   080095E5           LDR      R0,[R5, #+8]
   \   00000010   0230A0E1           MOV      R3,R2
   \   00000014   042095E5           LDR      R2,[R5, #+4]
   \   00000018   0160A0E1           MOV      R6,R1
   \   0000001C   040040E0           SUB      R0,R0,R4
   \   00000020   2410A0E3           MOV      R1,#+36
   \   00000024   ........           _BLF     ??divu32_a,??rA??divu32_a
   \   00000028   0180A0E1           MOV      R8,R1
   \   0000002C   040042E0           SUB      R0,R2,R4
   \   00000030   2410A0E3           MOV      R1,#+36
   \   00000034   ........           _BLF     ??divu32_a,??rA??divu32_a
   \   00000038   000053E3           CMP      R3,#+0
   \   0000003C   5300000A           BEQ      ??_Make_room_14
   \   00000040   54019FE5           LDR      R0,??_Make_room_15  ;; 0x71c71c7
   \   00000044   014040E0           SUB      R4,R0,R1
   \   00000048   030054E1           CMP      R4,R3
   \   0000004C   4F00003A           BCC      ??_Make_room_14
   \   00000050   2440A0E3           MOV      R4,#+36
   \   00000054   940307E0           MUL      R7,R4,R3
   \   00000058   014083E0           ADD      R4,R3,R1
   \   0000005C   040058E1           CMP      R8,R4
   \   00000060   1F00002A           BCS      ??_Make_room_16
   \   00000064   A810A0E1           LSR      R1,R8,#+1
   \   00000068   010040E0           SUB      R0,R0,R1
   \   0000006C   080050E1           CMP      R0,R8
   \   00000070   0080A033           MOVCC    R8,#+0
   \   00000074   08808120           ADDCS    R8,R1,R8
   \   00000078   040058E1           CMP      R8,R4
   \   0000007C   0480A031           MOVCC    R8,R4
   \   00000080   2410A0E3           MOV      R1,#+36
   \   00000084   910800E0           MUL      R0,R1,R8
   \   00000088   ........           _BLF     `??operator new`,`??operator new??rA`
   \   0000008C   001095E5           LDR      R1,[R5, #+0]
   \   00000090   0090A0E1           MOV      R9,R0
   \   00000094   0930A0E1           MOV      R3,R9
   \   00000098   0620A0E1           MOV      R2,R6
   \   0000009C   0500A0E1           MOV      R0,R5
   \   000000A0   ........           _BLF     ??_Ucopy_2,??_Ucopy??rA
   \   000000A4   042095E5           LDR      R2,[R5, #+4]
   \   000000A8   00A0A0E1           MOV      R10,R0
   \   000000AC   0A3087E0           ADD      R3,R7,R10
   \   000000B0   0610A0E1           MOV      R1,R6
   \   000000B4   0500A0E1           MOV      R0,R5
   \   000000B8   ........           _BLF     ??_Ucopy_2,??_Ucopy??rA
   \   000000BC   0500A0E1           MOV      R0,R5
   \   000000C0   ........           _BLF     ??_Tidy0,??_Tidy0??rA
   \   000000C4   2400A0E3           MOV      R0,#+36
   \   000000C8   909821E0           MLA      R1,R0,R8,R9
   \   000000CC   081085E5           STR      R1,[R5, #+8]
   \   000000D0   909421E0           MLA      R1,R0,R4,R9
   \   000000D4   041085E5           STR      R1,[R5, #+4]
   \   000000D8   009085E5           STR      R9,[R5, #+0]
   \   000000DC   0A60A0E1           MOV      R6,R10
   \   000000E0   2A0000EA           B        ??_Make_room_14
   \                     ??_Make_room_16:
   \   000000E4   068087E0           ADD      R8,R7,R6
   \   000000E8   0200A0E1           MOV      R0,R2
   \   000000EC   2410A0E3           MOV      R1,#+36
   \   000000F0   ........           _BLF     ??divu32_a,??rA??divu32_a
   \   000000F4   0140A0E1           MOV      R4,R1
   \   000000F8   0600A0E1           MOV      R0,R6
   \   000000FC   2410A0E3           MOV      R1,#+36
   \   00000100   ........           _BLF     ??divu32_a,??rA??divu32_a
   \   00000104   010044E0           SUB      R0,R4,R1
   \   00000108   030050E1           CMP      R0,R3
   \   0000010C   0B00002A           BCS      ??_Make_room_17
   \   00000110   0830A0E1           MOV      R3,R8
   \   00000114   0610A0E1           MOV      R1,R6
   \   00000118   0500A0E1           MOV      R0,R5
   \   0000011C   ........           _BLF     ??_Ucopy_2,??_Ucopy??rA
   \   00000120   042095E5           LDR      R2,[R5, #+4]
   \   00000124   0610A0E1           MOV      R1,R6
   \   00000128   0500A0E1           MOV      R0,R5
   \   0000012C   ........           _BLF     ??_Destroy,??_Destroy??rA
   \   00000130   040095E5           LDR      R0,[R5, #+4]
   \   00000134   000087E0           ADD      R0,R7,R0
   \   00000138   040085E5           STR      R0,[R5, #+4]
   \   0000013C   130000EA           B        ??_Make_room_14
   \                     ??_Make_room_17:
   \   00000140   0240A0E1           MOV      R4,R2
   \   00000144   000067E2           RSB      R0,R7,#+0
   \   00000148   047080E0           ADD      R7,R0,R4
   \   0000014C   0230A0E1           MOV      R3,R2
   \   00000150   0710A0E1           MOV      R1,R7
   \   00000154   0500A0E1           MOV      R0,R5
   \   00000158   ........           _BLF     ??_Ucopy_2,??_Ucopy??rA
   \   0000015C   040085E5           STR      R0,[R5, #+4]
   \   00000160   040000EA           B        ??_Make_room_18
   \                     ??_Make_room_19:
   \   00000164   247047E2           SUB      R7,R7,#+36
   \   00000168   0710A0E1           MOV      R1,R7
   \   0000016C   244044E2           SUB      R4,R4,#+36
   \   00000170   0400A0E1           MOV      R0,R4
   \   00000174   ........           _BLF     `??operator=`,`??operator=??rA`
   \                     ??_Make_room_18:
   \   00000178   070056E1           CMP      R6,R7
   \   0000017C   F8FFFF1A           BNE      ??_Make_room_19
   \   00000180   0820A0E1           MOV      R2,R8
   \   00000184   0610A0E1           MOV      R1,R6
   \   00000188   0500A0E1           MOV      R0,R5
   \   0000018C   ........           _BLF     ??_Destroy,??_Destroy??rA
   \                     ??_Make_room_14:
   \   00000190   0600A0E1           MOV      R0,R6
   \   00000194   F247BDE8           POP      {R1,R4-R10,LR}
   \   00000198   1EFF2FE1           BX       LR               ;; return
   \                     ??_Make_room_15:
   \   0000019C   C7711C07           DC32     0x71c71c7

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs NetworkedDevice * _Vector_impl<NetworkedDevice, allocator<NetworkedDevice>>::_Make_room(NetworkedDevice *, unsigned int)
   \                     ??_Make_room_2:
   \   00000000   F1472DE9           PUSH     {R0,R4-R10,LR}
   \   00000004   0060A0E1           MOV      R6,R0
   \   00000008   004096E5           LDR      R4,[R6, #+0]
   \   0000000C   080096E5           LDR      R0,[R6, #+8]
   \   00000010   0230A0E1           MOV      R3,R2
   \   00000014   042096E5           LDR      R2,[R6, #+4]
   \   00000018   0150A0E1           MOV      R5,R1
   \   0000001C   040040E0           SUB      R0,R0,R4
   \   00000020   2410A0E3           MOV      R1,#+36
   \   00000024   ........           _BLF     ??divu32_a,??rA??divu32_a
   \   00000028   0180A0E1           MOV      R8,R1
   \   0000002C   040042E0           SUB      R0,R2,R4
   \   00000030   2410A0E3           MOV      R1,#+36
   \   00000034   ........           _BLF     ??divu32_a,??rA??divu32_a
   \   00000038   000053E3           CMP      R3,#+0
   \   0000003C   5E00000A           BEQ      ??_Make_room_20
   \   00000040   80019FE5           LDR      R0,??_Make_room_21  ;; 0x71c71c7
   \   00000044   014040E0           SUB      R4,R0,R1
   \   00000048   030054E1           CMP      R4,R3
   \   0000004C   5A00003A           BCC      ??_Make_room_20
   \   00000050   2440A0E3           MOV      R4,#+36
   \   00000054   940307E0           MUL      R7,R4,R3
   \   00000058   014083E0           ADD      R4,R3,R1
   \   0000005C   040058E1           CMP      R8,R4
   \   00000060   1F00002A           BCS      ??_Make_room_22
   \   00000064   A810A0E1           LSR      R1,R8,#+1
   \   00000068   010040E0           SUB      R0,R0,R1
   \   0000006C   080050E1           CMP      R0,R8
   \   00000070   0080A033           MOVCC    R8,#+0
   \   00000074   08808120           ADDCS    R8,R1,R8
   \   00000078   040058E1           CMP      R8,R4
   \   0000007C   0480A031           MOVCC    R8,R4
   \   00000080   2410A0E3           MOV      R1,#+36
   \   00000084   910800E0           MUL      R0,R1,R8
   \   00000088   ........           _BLF     `??operator new`,`??operator new??rA`
   \   0000008C   001096E5           LDR      R1,[R6, #+0]
   \   00000090   0090A0E1           MOV      R9,R0
   \   00000094   0930A0E1           MOV      R3,R9
   \   00000098   0520A0E1           MOV      R2,R5
   \   0000009C   0600A0E1           MOV      R0,R6
   \   000000A0   ........           _BLF     ??_Ucopy,??_Ucopy??rA_2
   \   000000A4   042096E5           LDR      R2,[R6, #+4]
   \   000000A8   00A0A0E1           MOV      R10,R0
   \   000000AC   0A3087E0           ADD      R3,R7,R10
   \   000000B0   0510A0E1           MOV      R1,R5
   \   000000B4   0600A0E1           MOV      R0,R6
   \   000000B8   ........           _BLF     ??_Ucopy,??_Ucopy??rA_2
   \   000000BC   0600A0E1           MOV      R0,R6
   \   000000C0   ........           _BLF     ??_Tidy0_1,??_Tidy0??rA_2
   \   000000C4   2400A0E3           MOV      R0,#+36
   \   000000C8   909821E0           MLA      R1,R0,R8,R9
   \   000000CC   081086E5           STR      R1,[R6, #+8]
   \   000000D0   909421E0           MLA      R1,R0,R4,R9
   \   000000D4   041086E5           STR      R1,[R6, #+4]
   \   000000D8   009086E5           STR      R9,[R6, #+0]
   \   000000DC   0A50A0E1           MOV      R5,R10
   \   000000E0   350000EA           B        ??_Make_room_20
   \                     ??_Make_room_22:
   \   000000E4   058087E0           ADD      R8,R7,R5
   \   000000E8   0200A0E1           MOV      R0,R2
   \   000000EC   2410A0E3           MOV      R1,#+36
   \   000000F0   ........           _BLF     ??divu32_a,??rA??divu32_a
   \   000000F4   0140A0E1           MOV      R4,R1
   \   000000F8   0500A0E1           MOV      R0,R5
   \   000000FC   2410A0E3           MOV      R1,#+36
   \   00000100   ........           _BLF     ??divu32_a,??rA??divu32_a
   \   00000104   010044E0           SUB      R0,R4,R1
   \   00000108   030050E1           CMP      R0,R3
   \   0000010C   1100002A           BCS      ??_Make_room_23
   \   00000110   0830A0E1           MOV      R3,R8
   \   00000114   0510A0E1           MOV      R1,R5
   \   00000118   0600A0E1           MOV      R0,R6
   \   0000011C   ........           _BLF     ??_Ucopy,??_Ucopy??rA_2
   \   00000120   044096E5           LDR      R4,[R6, #+4]
   \   00000124   0580A0E1           MOV      R8,R5
   \   00000128   040000EA           B        ??_Make_room_24
   \                     ??_Make_room_25:
   \   0000012C   0020A0E3           MOV      R2,#+0
   \   00000130   0110A0E3           MOV      R1,#+1
   \   00000134   080088E2           ADD      R0,R8,#+8
   \   00000138   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   0000013C   248088E2           ADD      R8,R8,#+36
   \                     ??_Make_room_24:
   \   00000140   040058E1           CMP      R8,R4
   \   00000144   F8FFFF1A           BNE      ??_Make_room_25
   \   00000148   040096E5           LDR      R0,[R6, #+4]
   \   0000014C   000087E0           ADD      R0,R7,R0
   \   00000150   040086E5           STR      R0,[R6, #+4]
   \   00000154   180000EA           B        ??_Make_room_20
   \                     ??_Make_room_23:
   \   00000158   0240A0E1           MOV      R4,R2
   \   0000015C   000067E2           RSB      R0,R7,#+0
   \   00000160   047080E0           ADD      R7,R0,R4
   \   00000164   0230A0E1           MOV      R3,R2
   \   00000168   0710A0E1           MOV      R1,R7
   \   0000016C   0600A0E1           MOV      R0,R6
   \   00000170   ........           _BLF     ??_Ucopy,??_Ucopy??rA_2
   \   00000174   040086E5           STR      R0,[R6, #+4]
   \   00000178   040000EA           B        ??_Make_room_26
   \                     ??_Make_room_27:
   \   0000017C   247047E2           SUB      R7,R7,#+36
   \   00000180   0710A0E1           MOV      R1,R7
   \   00000184   244044E2           SUB      R4,R4,#+36
   \   00000188   0400A0E1           MOV      R0,R4
   \   0000018C   ........           _BLF     `??operator=_1`,`??operator=??rA_1`
   \                     ??_Make_room_26:
   \   00000190   070055E1           CMP      R5,R7
   \   00000194   F8FFFF1A           BNE      ??_Make_room_27
   \   00000198   0540A0E1           MOV      R4,R5
   \   0000019C   040000EA           B        ??_Make_room_28
   \                     ??_Make_room_29:
   \   000001A0   0020A0E3           MOV      R2,#+0
   \   000001A4   0110A0E3           MOV      R1,#+1
   \   000001A8   080084E2           ADD      R0,R4,#+8
   \   000001AC   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000001B0   244084E2           ADD      R4,R4,#+36
   \                     ??_Make_room_28:
   \   000001B4   080054E1           CMP      R4,R8
   \   000001B8   F8FFFF1A           BNE      ??_Make_room_29
   \                     ??_Make_room_20:
   \   000001BC   0500A0E1           MOV      R0,R5
   \   000001C0   F247BDE8           POP      {R1,R4-R10,LR}
   \   000001C4   1EFF2FE1           BX       LR               ;; return
   \                     ??_Make_room_21:
   \   000001C8   C7711C07           DC32     0x71c71c7

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs AnalogInput ** _Vector_impl<AnalogInput *, allocator<AnalogInput *>>::_Make_room(AnalogInput **, unsigned int)
   \                     ??_Make_room_3:
   \   00000000   F0472DE9           PUSH     {R4-R10,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   000094E5           LDR      R0,[R4, #+0]
   \   0000000C   0150A0E1           MOV      R5,R1
   \   00000010   081094E5           LDR      R1,[R4, #+8]
   \   00000014   0260A0E1           MOV      R6,R2
   \   00000018   001041E0           SUB      R1,R1,R0
   \   0000001C   2171A0E1           LSR      R7,R1,#+2
   \   00000020   041094E5           LDR      R1,[R4, #+4]
   \   00000024   000056E3           CMP      R6,#+0
   \   00000028   000041E0           SUB      R0,R1,R0
   \   0000002C   2001A0E1           LSR      R0,R0,#+2
   \   00000030   2C00000A           BEQ      ??_Make_room_30
   \   00000034   C024E0E3           MVN      R2,#-1073741824
   \   00000038   002042E0           SUB      R2,R2,R0
   \   0000003C   060052E1           CMP      R2,R6
   \   00000040   2800003A           BCC      ??_Make_room_30
   \   00000044   008086E0           ADD      R8,R6,R0
   \   00000048   080057E1           CMP      R7,R8
   \   0000004C   1F00002A           BCS      ??_Make_room_31
   \   00000050   A700A0E1           LSR      R0,R7,#+1
   \   00000054   C014E0E3           MVN      R1,#-1073741824
   \   00000058   001041E0           SUB      R1,R1,R0
   \   0000005C   070051E1           CMP      R1,R7
   \   00000060   0070A033           MOVCC    R7,#+0
   \   00000064   07708020           ADDCS    R7,R0,R7
   \   00000068   080057E1           CMP      R7,R8
   \   0000006C   0870A031           MOVCC    R7,R8
   \   00000070   0701A0E1           LSL      R0,R7,#+2
   \   00000074   ........           _BLF     `??operator new`,`??operator new??rA`
   \   00000078   0090A0E1           MOV      R9,R0
   \   0000007C   000094E5           LDR      R0,[R4, #+0]
   \   00000080   0920A0E1           MOV      R2,R9
   \   00000084   0510A0E1           MOV      R1,R5
   \   00000088   ........           _BLF     _Copy_a4,??_Copy_a4??rA
   \   0000008C   041094E5           LDR      R1,[R4, #+4]
   \   00000090   00A0A0E1           MOV      R10,R0
   \   00000094   06218AE0           ADD      R2,R10,R6, LSL #+2
   \   00000098   0500A0E1           MOV      R0,R5
   \   0000009C   ........           _BLF     _Copy_a4,??_Copy_a4??rA
   \   000000A0   000094E5           LDR      R0,[R4, #+0]
   \   000000A4   000050E3           CMP      R0,#+0
   \   000000A8   0100000A           BEQ      ??_Make_room_32
   \   000000AC   040084E5           STR      R0,[R4, #+4]
   \   000000B0   ........           _BLF     `??operator delete`,`??operator delete??rA`
   \                     ??_Make_room_32:
   \   000000B4   070189E0           ADD      R0,R9,R7, LSL #+2
   \   000000B8   080084E5           STR      R0,[R4, #+8]
   \   000000BC   080189E0           ADD      R0,R9,R8, LSL #+2
   \   000000C0   040084E5           STR      R0,[R4, #+4]
   \   000000C4   009084E5           STR      R9,[R4, #+0]
   \   000000C8   0A50A0E1           MOV      R5,R10
   \   000000CC   050000EA           B        ??_Make_room_30
   \                     ??_Make_room_31:
   \   000000D0   062181E0           ADD      R2,R1,R6, LSL #+2
   \   000000D4   0500A0E1           MOV      R0,R5
   \   000000D8   ........           _BLF     _Copy_backward_a4,??_Copy_backward_a4??rA
   \   000000DC   040094E5           LDR      R0,[R4, #+4]
   \   000000E0   060180E0           ADD      R0,R0,R6, LSL #+2
   \   000000E4   040084E5           STR      R0,[R4, #+4]
   \                     ??_Make_room_30:
   \   000000E8   0500A0E1           MOV      R0,R5
   \   000000EC   F047BDE8           POP      {R4-R10,LR}
   \   000000F0   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs vector<DeviceData> * _Vector_impl<vector<DeviceData>, allocator<vector<DeviceData>>>::_Insert0(vector<DeviceData> *, vector<DeviceData> const &)
   \                     ??_Insert0:
   \   00000000   F7402DE9           PUSH     {R0-R2,R4-R7,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   000094E5           LDR      R0,[R4, #+0]
   \   0000000C   0150A0E1           MOV      R5,R1
   \   00000010   0260A0E1           MOV      R6,R2
   \   00000014   000050E3           CMP      R0,#+0
   \   00000018   0070A003           MOVEQ    R7,#+0
   \   0000001C   00704510           SUBNE    R7,R5,R0
   \   00000020   0D00A0E1           MOV      R0,SP
   \   00000024   ........           _BLF     ??_Zero,??_Zero??rA
   \   00000028   0610A0E1           MOV      R1,R6
   \   0000002C   0D00A0E1           MOV      R0,SP
   \   00000030   ........           _BLF     ??_Assign,??_Assign??rA
   \   00000034   0120A0E3           MOV      R2,#+1
   \   00000038   0510A0E1           MOV      R1,R5
   \   0000003C   0400A0E1           MOV      R0,R4
   \   00000040   ........           _BLF     ??_Make_room,??_Make_room??rA_3
   \   00000044   0D30A0E1           MOV      R3,SP
   \   00000048   0120A0E3           MOV      R2,#+1
   \   0000004C   0010A0E1           MOV      R1,R0
   \   00000050   0400A0E1           MOV      R0,R4
   \   00000054   ........           _BLF     ??_Ufill,??_Ufill??rA
   \   00000058   0D00A0E1           MOV      R0,SP
   \   0000005C   ........           _BLF     ??_Tidy0,??_Tidy0??rA
   \   00000060   0D00A0E1           MOV      R0,SP
   \   00000064   ........           _BLF     ??_Zero,??_Zero??rA
   \   00000068   000094E5           LDR      R0,[R4, #+0]
   \   0000006C   000087E0           ADD      R0,R7,R0
   \   00000070   FE40BDE8           POP      {R1-R7,LR}
   \   00000074   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void _Vector_impl<AnalogInput *, allocator<AnalogInput *>>::_Push_back0(AnalogInput *)
   \                     ??_Push_back0:
   \   00000000   02402DE9           PUSH     {R1,LR}
   \   00000004   041090E5           LDR      R1,[R0, #+4]
   \   00000008   082090E5           LDR      R2,[R0, #+8]
   \   0000000C   020051E1           CMP      R1,R2
   \   00000010   0800002A           BCS      ??_Push_back0_4
   \   00000014   00209DE5           LDR      R2,[SP, #+0]
   \   00000018   0130A0E3           MOV      R3,#+1
   \   0000001C   01C0A0E1           MOV      R12,R1
   \                     ??_Push_back0_5:
   \   00000020   ........           STR      R2,[R12], #+4
   \   00000024   013053E2           SUBS     R3,R3,#+1
   \   00000028   FCFFFF1A           BNE      ??_Push_back0_5
   \   0000002C   041081E2           ADD      R1,R1,#+4
   \   00000030   041080E5           STR      R1,[R0, #+4]
   \   00000034   010000EA           B        ??_Push_back0_6
   \                     ??_Push_back0_4:
   \   00000038   0D20A0E1           MOV      R2,SP
   \   0000003C   ........           _BLF     ??_Insert_3,??_Insert??rA_3
   \                     ??_Push_back0_6:
   \   00000040   0140BDE8           POP      {R0,LR}
   \   00000044   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void _Vector_impl<DeviceData, allocator<DeviceData>>::_Push_back0(DeviceData const &)
   \                     ??_Push_back0_1:
   \   00000000   F0412DE9           PUSH     {R4-R8,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   046094E5           LDR      R6,[R4, #+4]
   \   0000000C   080094E5           LDR      R0,[R4, #+8]
   \   00000010   0150A0E1           MOV      R5,R1
   \   00000014   000056E1           CMP      R6,R0
   \   00000018   0D00002A           BCS      ??_Push_back0_7
   \   0000001C   0170A0E3           MOV      R7,#+1
   \   00000020   0680A0E1           MOV      R8,R6
   \                     ??_Push_back0_8:
   \   00000024   000058E3           CMP      R8,#+0
   \   00000028   0200000A           BEQ      ??_Push_back0_9
   \   0000002C   0510A0E1           MOV      R1,R5
   \   00000030   0800A0E1           MOV      R0,R8
   \   00000034   ........           _BLF     ??DeviceData,??DeviceData??rA
   \                     ??_Push_back0_9:
   \   00000038   017047E2           SUB      R7,R7,#+1
   \   0000003C   248088E2           ADD      R8,R8,#+36
   \   00000040   000057E3           CMP      R7,#+0
   \   00000044   F6FFFF1A           BNE      ??_Push_back0_8
   \   00000048   240086E2           ADD      R0,R6,#+36
   \   0000004C   040084E5           STR      R0,[R4, #+4]
   \   00000050   040000EA           B        ??_Push_back0_10
   \                     ??_Push_back0_7:
   \   00000054   0530A0E1           MOV      R3,R5
   \   00000058   0120A0E3           MOV      R2,#+1
   \   0000005C   0610A0E1           MOV      R1,R6
   \   00000060   0400A0E1           MOV      R0,R4
   \   00000064   ........           _BLF     ??_Insert_n_1,??_Insert_n??rA
   \                     ??_Push_back0_10:
   \   00000068   F041BDE8           POP      {R4-R8,LR}
   \   0000006C   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void _Vector_impl<vector<DeviceData>, allocator<vector<DeviceData>>>::_Push_back0(vector<DeviceData> const &)
   \                     ??_Push_back0_2:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   040094E5           LDR      R0,[R4, #+4]
   \   0000000C   082094E5           LDR      R2,[R4, #+8]
   \   00000010   020050E1           CMP      R0,R2
   \   00000014   0600002A           BCS      ??_Push_back0_11
   \   00000018   0130A0E1           MOV      R3,R1
   \   0000001C   0120A0E3           MOV      R2,#+1
   \   00000020   0010A0E1           MOV      R1,R0
   \   00000024   0400A0E1           MOV      R0,R4
   \   00000028   ........           _BLF     ??_Ufill,??_Ufill??rA
   \   0000002C   040084E5           STR      R0,[R4, #+4]
   \   00000030   030000EA           B        ??_Push_back0_12
   \                     ??_Push_back0_11:
   \   00000034   0120A0E1           MOV      R2,R1
   \   00000038   0010A0E1           MOV      R1,R0
   \   0000003C   0400A0E1           MOV      R0,R4
   \   00000040   ........           _BLF     ??_Insert0,??_Insert0??rA
   \                     ??_Push_back0_12:
   \   00000044   1040BDE8           POP      {R4,LR}
   \   00000048   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void _Vector_impl<NetworkedDevice, allocator<NetworkedDevice>>::_Push_back0(NetworkedDevice const &)
   \                     ??_Push_back0_3:
   \   00000000   F0412DE9           PUSH     {R4-R8,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   046094E5           LDR      R6,[R4, #+4]
   \   0000000C   080094E5           LDR      R0,[R4, #+8]
   \   00000010   0150A0E1           MOV      R5,R1
   \   00000014   000056E1           CMP      R6,R0
   \   00000018   0D00002A           BCS      ??_Push_back0_13
   \   0000001C   0170A0E3           MOV      R7,#+1
   \   00000020   0680A0E1           MOV      R8,R6
   \                     ??_Push_back0_14:
   \   00000024   000058E3           CMP      R8,#+0
   \   00000028   0200000A           BEQ      ??_Push_back0_15
   \   0000002C   0510A0E1           MOV      R1,R5
   \   00000030   0800A0E1           MOV      R0,R8
   \   00000034   ........           _BLF     ??NetworkedDevice,??NetworkedDevice??rA
   \                     ??_Push_back0_15:
   \   00000038   017047E2           SUB      R7,R7,#+1
   \   0000003C   248088E2           ADD      R8,R8,#+36
   \   00000040   000057E3           CMP      R7,#+0
   \   00000044   F6FFFF1A           BNE      ??_Push_back0_14
   \   00000048   240086E2           ADD      R0,R6,#+36
   \   0000004C   040084E5           STR      R0,[R4, #+4]
   \   00000050   040000EA           B        ??_Push_back0_16
   \                     ??_Push_back0_13:
   \   00000054   0530A0E1           MOV      R3,R5
   \   00000058   0120A0E3           MOV      R2,#+1
   \   0000005C   0610A0E1           MOV      R1,R6
   \   00000060   0400A0E1           MOV      R0,R4
   \   00000064   ........           _BLF     ??_Insert_n,??_Insert_n??rA_1
   \                     ??_Push_back0_16:
   \   00000068   F041BDE8           POP      {R4-R8,LR}
   \   0000006C   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void * _Vector_impl<vector<DeviceData>, allocator<vector<DeviceData>>>::_Ufill(vector<DeviceData> *, unsigned int, vector<DeviceData> const &)
   \                     ??_Ufill:
   \   00000000   F0412DE9           PUSH     {R4-R8,LR}
   \   00000004   0140A0E1           MOV      R4,R1
   \   00000008   0250A0E1           MOV      R5,R2
   \   0000000C   0360A0E1           MOV      R6,R3
   \   00000010   0570A0E1           MOV      R7,R5
   \   00000014   0480A0E1           MOV      R8,R4
   \   00000018   080000EA           B        ??_Ufill_1
   \                     ??_Ufill_2:
   \   0000001C   000058E3           CMP      R8,#+0
   \   00000020   0400000A           BEQ      ??_Ufill_3
   \   00000024   0800A0E1           MOV      R0,R8
   \   00000028   ........           _BLF     ??_Zero,??_Zero??rA
   \   0000002C   0610A0E1           MOV      R1,R6
   \   00000030   0800A0E1           MOV      R0,R8
   \   00000034   ........           _BLF     ??_Assign,??_Assign??rA
   \                     ??_Ufill_3:
   \   00000038   017047E2           SUB      R7,R7,#+1
   \   0000003C   0C8088E2           ADD      R8,R8,#+12
   \                     ??_Ufill_1:
   \   00000040   000057E3           CMP      R7,#+0
   \   00000044   F4FFFF1A           BNE      ??_Ufill_2
   \   00000048   0C10A0E3           MOV      R1,#+12
   \   0000004C   914520E0           MLA      R0,R1,R5,R4
   \   00000050   F041BDE8           POP      {R4-R8,LR}
   \   00000054   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs NetworkedDevice * _Vector_impl<NetworkedDevice, allocator<NetworkedDevice>>::_Ucopy(NetworkedDevice const *, NetworkedDevice const *, NetworkedDevice *)
   \                     ??_Ucopy:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   0140A0E1           MOV      R4,R1
   \   00000008   0250A0E1           MOV      R5,R2
   \   0000000C   0360A0E1           MOV      R6,R3
   \   00000010   060000EA           B        ??_Ucopy_3
   \                     ??_Ucopy_4:
   \   00000014   000056E3           CMP      R6,#+0
   \   00000018   0200000A           BEQ      ??_Ucopy_5
   \   0000001C   0410A0E1           MOV      R1,R4
   \   00000020   0600A0E1           MOV      R0,R6
   \   00000024   ........           _BLF     ??NetworkedDevice,??NetworkedDevice??rA
   \                     ??_Ucopy_5:
   \   00000028   246086E2           ADD      R6,R6,#+36
   \   0000002C   244084E2           ADD      R4,R4,#+36
   \                     ??_Ucopy_3:
   \   00000030   050054E1           CMP      R4,R5
   \   00000034   F6FFFF1A           BNE      ??_Ucopy_4
   \   00000038   0600A0E1           MOV      R0,R6
   \   0000003C   7040BDE8           POP      {R4-R6,LR}
   \   00000040   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs vector<DeviceData> * _Vector_impl<vector<DeviceData>, allocator<vector<DeviceData>>>::_Ucopy(vector<DeviceData> const *, vector<DeviceData> const *, vector<DeviceData> *)
   \                     ??_Ucopy_1:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   0140A0E1           MOV      R4,R1
   \   00000008   0250A0E1           MOV      R5,R2
   \   0000000C   0360A0E1           MOV      R6,R3
   \   00000010   080000EA           B        ??_Ucopy_6
   \                     ??_Ucopy_7:
   \   00000014   000056E3           CMP      R6,#+0
   \   00000018   0400000A           BEQ      ??_Ucopy_8
   \   0000001C   0600A0E1           MOV      R0,R6
   \   00000020   ........           _BLF     ??_Zero,??_Zero??rA
   \   00000024   0410A0E1           MOV      R1,R4
   \   00000028   0600A0E1           MOV      R0,R6
   \   0000002C   ........           _BLF     ??_Assign,??_Assign??rA
   \                     ??_Ucopy_8:
   \   00000030   0C6086E2           ADD      R6,R6,#+12
   \   00000034   0C4084E2           ADD      R4,R4,#+12
   \                     ??_Ucopy_6:
   \   00000038   050054E1           CMP      R4,R5
   \   0000003C   F4FFFF1A           BNE      ??_Ucopy_7
   \   00000040   0600A0E1           MOV      R0,R6
   \   00000044   7040BDE8           POP      {R4-R6,LR}
   \   00000048   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs DeviceData * _Vector_impl<DeviceData, allocator<DeviceData>>::_Ucopy(DeviceData const *, DeviceData const *, DeviceData *)
   \                     ??_Ucopy_2:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   0140A0E1           MOV      R4,R1
   \   00000008   0250A0E1           MOV      R5,R2
   \   0000000C   0360A0E1           MOV      R6,R3
   \   00000010   060000EA           B        ??_Ucopy_9
   \                     ??_Ucopy_10:
   \   00000014   000056E3           CMP      R6,#+0
   \   00000018   0200000A           BEQ      ??_Ucopy_11
   \   0000001C   0410A0E1           MOV      R1,R4
   \   00000020   0600A0E1           MOV      R0,R6
   \   00000024   ........           _BLF     ??DeviceData,??DeviceData??rA
   \                     ??_Ucopy_11:
   \   00000028   246086E2           ADD      R6,R6,#+36
   \   0000002C   244084E2           ADD      R4,R4,#+36
   \                     ??_Ucopy_9:
   \   00000030   050054E1           CMP      R4,R5
   \   00000034   F6FFFF1A           BNE      ??_Ucopy_10
   \   00000038   0600A0E1           MOV      R0,R6
   \   0000003C   7040BDE8           POP      {R4-R6,LR}
   \   00000040   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs vector<PRogramObjectBase *>::~vector()
   \                     `?~vector_1`:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   000094E5           LDR      R0,[R4, #+0]
   \   0000000C   000050E3           CMP      R0,#+0
   \   00000010   0100000A           BEQ      `?~vector_2`
   \   00000014   040084E5           STR      R0,[R4, #+4]
   \   00000018   ........           _BLF     `??operator delete`,`??operator delete??rA`
   \                     `?~vector_2`:
   \   0000001C   0400A0E1           MOV      R0,R4
   \   00000020   ........           _BLF     ??_Zero,??_Zero??rA
   \   00000024   1040BDE8           POP      {R4,LR}
   \   00000028   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs vector<NetworkedDevice>::~vector()
   \                     `?~vector`:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   ........           _BLF     ??_Tidy0_1,??_Tidy0??rA_2
   \   0000000C   0400A0E1           MOV      R0,R4
   \   00000010   ........           _BLF     ??_Zero,??_Zero??rA
   \   00000014   1040BDE8           POP      {R4,LR}
   \   00000018   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void operator+(string const &, string const &)
   \                     `??operator+`:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   1CD04DE2           SUB      SP,SP,#+28
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   0250A0E1           MOV      R5,R2
   \   00000010   0D00A0E1           MOV      R0,SP
   \   00000014   ........           _BLF     ??string,??string??rA
   \   00000018   34109FE5           LDR      R1,`??operator+_3`  ;; ??npos
   \   0000001C   0020A0E3           MOV      R2,#+0
   \   00000020   003091E5           LDR      R3,[R1, #+0]
   \   00000024   0510A0E1           MOV      R1,R5
   \   00000028   ........           _BLF     ??append,??append??rA
   \   0000002C   0010A0E1           MOV      R1,R0
   \   00000030   0400A0E1           MOV      R0,R4
   \   00000034   ........           _BLF     ??string,??string??rA
   \   00000038   0020A0E3           MOV      R2,#+0
   \   0000003C   0110A0E3           MOV      R1,#+1
   \   00000040   0D00A0E1           MOV      R0,SP
   \   00000044   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000048   1CD08DE2           ADD      SP,SP,#+28
   \   0000004C   3040BDE8           POP      {R4,R5,LR}
   \   00000050   1EFF2FE1           BX       LR               ;; return
   \                     `??operator+_3`:
   \   00000054   ........           DC32     ??npos

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void operator+(char const *, string const &)
   \                     `??operator+_1`:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   1CD04DE2           SUB      SP,SP,#+28
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   0150A0E1           MOV      R5,R1
   \   00000010   0260A0E1           MOV      R6,R2
   \   00000014   0020A0E3           MOV      R2,#+0
   \   00000018   0010A0E3           MOV      R1,#+0
   \   0000001C   0D00A0E1           MOV      R0,SP
   \   00000020   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000024   0500A0E1           MOV      R0,R5
   \   00000028   ........           _BLF     strlen,??strlen??rA
   \   0000002C   0020A0E1           MOV      R2,R0
   \   00000030   0510A0E1           MOV      R1,R5
   \   00000034   0D00A0E1           MOV      R0,SP
   \   00000038   ........           _BLF     ??assign_1,??assign??rA_1
   \   0000003C   38009FE5           LDR      R0,`??operator+_4`  ;; ??npos
   \   00000040   0020A0E3           MOV      R2,#+0
   \   00000044   003090E5           LDR      R3,[R0, #+0]
   \   00000048   0610A0E1           MOV      R1,R6
   \   0000004C   0D00A0E1           MOV      R0,SP
   \   00000050   ........           _BLF     ??append,??append??rA
   \   00000054   0010A0E1           MOV      R1,R0
   \   00000058   0400A0E1           MOV      R0,R4
   \   0000005C   ........           _BLF     ??string,??string??rA
   \   00000060   0020A0E3           MOV      R2,#+0
   \   00000064   0110A0E3           MOV      R1,#+1
   \   00000068   0D00A0E1           MOV      R0,SP
   \   0000006C   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000070   1CD08DE2           ADD      SP,SP,#+28
   \   00000074   7040BDE8           POP      {R4-R6,LR}
   \   00000078   1EFF2FE1           BX       LR               ;; return
   \                     `??operator+_4`:
   \   0000007C   ........           DC32     ??npos

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void operator+(string const &, char const *)
   \                     `??operator+_2`:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   1CD04DE2           SUB      SP,SP,#+28
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   0250A0E1           MOV      R5,R2
   \   00000010   0D00A0E1           MOV      R0,SP
   \   00000014   ........           _BLF     ??string,??string??rA
   \   00000018   0060A0E1           MOV      R6,R0
   \   0000001C   0500A0E1           MOV      R0,R5
   \   00000020   ........           _BLF     strlen,??strlen??rA
   \   00000024   0020A0E1           MOV      R2,R0
   \   00000028   0510A0E1           MOV      R1,R5
   \   0000002C   0600A0E1           MOV      R0,R6
   \   00000030   ........           _BLF     ??append_1,??append??rA_1
   \   00000034   0010A0E1           MOV      R1,R0
   \   00000038   0400A0E1           MOV      R0,R4
   \   0000003C   ........           _BLF     ??string,??string??rA
   \   00000040   0020A0E3           MOV      R2,#+0
   \   00000044   0110A0E3           MOV      R1,#+1
   \   00000048   0D00A0E1           MOV      R0,SP
   \   0000004C   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000050   1CD08DE2           ADD      SP,SP,#+28
   \   00000054   7040BDE8           POP      {R4-R6,LR}
   \   00000058   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs AnsiString::~AnsiString()
   \                     `?~AnsiString`:
   \   00000000   00402DE9           PUSH     {LR}
   \   00000004   0020A0E3           MOV      R2,#+0
   \   00000008   0110A0E3           MOV      R1,#+1
   \   0000000C   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000010   0040BDE8           POP      {LR}
   \   00000014   1EFF2FE1           BX       LR               ;; return

   \                                 In segment DATA_AN, at 0x31fff000
   \   ProgramVersionInfo __data BootVersion
   \                     BootVersion:
   \   00000000                      DS8 4

   \                                 In segment DATA_AN, at 0x31fff010
   \   unsigned int volatile __data LastOSError
   \                     LastOSError:
   \   00000000                      DS8 4

   \                                 In segment DATA_AN, at 0x31fff018
   \   unsigned int volatile __data FlashErrorStatus
   \                     FlashErrorStatus:
   \   00000000                      DS8 4

   \                                 In segment DATA_AN, at 0x31fff01c
   \   char __data LastOSErrorTask[32]
   \                     LastOSErrorTask:
   \   00000000                      DS8 32

   \                                 In segment DATA_AN, at 0x31fff048
   \   unsigned int volatile __data LastErrAddress
   \                     LastErrAddress:
   \   00000000                      DS8 4

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs DeviceData &DeviceData::operator=(DeviceData const &)
   \                     `??operator=`:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   000091E5           LDR      R0,[R1, #+0]
   \   0000000C   0020A0E3           MOV      R2,#+0
   \   00000010   000084E5           STR      R0,[R4, #+0]
   \   00000014   040091E5           LDR      R0,[R1, #+4]
   \   00000018   081081E2           ADD      R1,R1,#+8
   \   0000001C   040084E5           STR      R0,[R4, #+4]
   \   00000020   14009FE5           LDR      R0,`??operator=_2`  ;; ??npos
   \   00000024   003090E5           LDR      R3,[R0, #+0]
   \   00000028   080084E2           ADD      R0,R4,#+8
   \   0000002C   ........           _BLF     ??assign,??assign??rA
   \   00000030   0400A0E1           MOV      R0,R4
   \   00000034   1040BDE8           POP      {R4,LR}
   \   00000038   1EFF2FE1           BX       LR               ;; return
   \                     `??operator=_2`:
   \   0000003C   ........           DC32     ??npos

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs DeviceData::DeviceData(DeviceData const &)
   \                     ??DeviceData:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   000091E5           LDR      R0,[R1, #+0]
   \   0000000C   000084E5           STR      R0,[R4, #+0]
   \   00000010   040091E5           LDR      R0,[R1, #+4]
   \   00000014   081081E2           ADD      R1,R1,#+8
   \   00000018   040084E5           STR      R0,[R4, #+4]
   \   0000001C   080084E2           ADD      R0,R4,#+8
   \   00000020   ........           _BLF     ??string,??string??rA
   \   00000024   0400A0E1           MOV      R0,R4
   \   00000028   1040BDE8           POP      {R4,LR}
   \   0000002C   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs NetworkedDevice::NetworkedDevice(NetworkedDevice const &)
   \                     ??NetworkedDevice:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   000091E5           LDR      R0,[R1, #+0]
   \   0000000C   000084E5           STR      R0,[R4, #+0]
   \   00000010   040091E5           LDR      R0,[R1, #+4]
   \   00000014   081081E2           ADD      R1,R1,#+8
   \   00000018   040084E5           STR      R0,[R4, #+4]
   \   0000001C   080084E2           ADD      R0,R4,#+8
   \   00000020   ........           _BLF     ??string,??string??rA
   \   00000024   0400A0E1           MOV      R0,R4
   \   00000028   1040BDE8           POP      {R4,LR}
   \   0000002C   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs NetworkedDevice &NetworkedDevice::operator=(NetworkedDevice const &)
   \                     `??operator=_1`:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   000091E5           LDR      R0,[R1, #+0]
   \   0000000C   0020A0E3           MOV      R2,#+0
   \   00000010   000084E5           STR      R0,[R4, #+0]
   \   00000014   040091E5           LDR      R0,[R1, #+4]
   \   00000018   081081E2           ADD      R1,R1,#+8
   \   0000001C   040084E5           STR      R0,[R4, #+4]
   \   00000020   14009FE5           LDR      R0,`??operator=_3`  ;; ??npos
   \   00000024   003090E5           LDR      R3,[R0, #+0]
   \   00000028   080084E2           ADD      R0,R4,#+8
   \   0000002C   ........           _BLF     ??assign,??assign??rA
   \   00000030   0400A0E1           MOV      R0,R4
   \   00000034   1040BDE8           POP      {R4,LR}
   \   00000038   1EFF2FE1           BX       LR               ;; return
   \                     `??operator=_3`:
   \   0000003C   ........           DC32     ??npos
      3          #pragma hdrstop
      4          #ifdef BORLAND
      5              #pragma package(smart_init)
      6          #endif
      7          
      8          extern double TotalRawLoad;
      9          extern double AvgPerformance;
     10          extern double MaxPerformance;
     11          #ifdef WIN32
     12              #include "WinUart.h"
     13          #else
     14              #include "SC2410Uart.h"
     15              #include "ST16554Uart.h"
     16          #endif
     17          //---------------------------------------------------------------------------
     18          
     19          

   \                                 In segment DATA_I, align 4, align-sorted
     20          ValueList PROTanksystemUnit::TCU_R1UnitValueList[] =  {
   \                     ??TCU_R1UnitValueList:
   \   00000000                      DS8 336
   \   00000150                      REQUIRE `?<Initializer for TCU_R1UnitValueList>`
     21              { L_WORD304, L_WORD237, SVT_BLANK },                          //   {"Unused"       ,"",SVT_BLANK},
     22              { L_WORD368, L_WORD237, SVT_AIN1 },                            //   {"Atm sensor"   ,"",SVT_AIN1},
     23              { L_WORD369, L_WORD237, SVT_AIN2 },                            //   {"Pwr 24V(1)"   ,"",SVT_AIN2},
     24              { L_WORD370, L_WORD237, SVT_AIN3 },                            //   {"Pwr 24V(2)"   ,"",SVT_AIN3},
     25              { L_WORD371, L_WORD237, SVT_AIN4 },                            //   {"Pwr 3.3V"     ,"",SVT_AIN4},
     26              { L_WORD372, L_WORD237, SVT_AIN5 },                            //   {"Pwr 1.8V"     ,"",SVT_AIN5},
     27              { L_WORD763, L_WORD237, SVT_ERROR_ADDRESS },                   //   {"Fail Address" ,"",SVT_LAST_OS_ERROR},
     28              { L_WORD373, L_WORD237, SVT_LAST_OS_ERROR },                   //   {"OS Status"    ,"",SVT_LAST_OS_ERROR},
     29              { L_WORD374, L_WORD237, SVT_FLASH_ERROR_STATUS },              //   {"Flash Status" ,"",SVT_FLASH_ERROR_STATUS},
     30              { L_WORD375, L_WORD237, SVT_LAST_OS_ERROR_TASK },              //   {"Task Name"    ,"",SVT_LAST_OS_ERROR_TASK},
     31              { L_WORD376, L_WORD237, SVT_RUNNING_HOURS },                   //   {"Running hours","",SVT_RUNNING_HOURS},
     32              { L_WORD1007, L_WORD237, SVT_CPU_LOAD_RAW },                    //   {"CPU Load Raw" ,"", SVT_CPU_LOAD_RAW),
     33              { L_WORD1008, L_WORD237, SVT_CPU_LOAD_AVG },                    //   {"CPU Load Avg" ,"", SVT_CPU_LOAD_AVG),
     34              { L_WORD1009, L_WORD237, SVT_CPU_LOAD_MAX },                    //   {"CPU Load Max" ,"", SVT_CPU_LOAD_Max),
     35              { L_WORD670, L_WORD237, SVT_RXERR_ID },                        //   {"ComErr Id"  ",""},
     36              { L_WORD671, L_WORD237, SVT_RXERR_CMD },                       //   {"ComErr Cmd" ",""},
     37              { L_WORD672, L_WORD237, SVT_RXERR_MSG },                       //   {"ComErr Msg" ",""},
     38              { L_WORD673, L_WORD237, SVT_RXERR_CNT },                       //   {"ComErr Cnt" ",""},
     39              { L_WORD674, L_WORD237, SVT_RXERR_TIME },                      //   {"ComErr Time"",""},
     40              { L_WORD846, L_WORD237, SVT_IO_SYSTEM_DELAY },                 //   {"IO sys Delay"",""},
     41              { L_WORD905, L_WORD237, SVT_ROLLING_PERIOD },                 //   {"Rol periode",""},
     42              { L_WORD906, L_WORD237, SVT_ROLLING_FREQUENCY },              //   {"Rol Frequency",""},
     43              { L_WORD907, L_WORD237, SVT_LIST_BUF_MAX_P },                 //   {"Max list P",""},
     44              { L_WORD908, L_WORD237, SVT_LIST_BUF_MAX_S },                 //   {"Max list S",""},
     45              { L_WORD24, L_WORD237, SVT_UNIT_PROGRAM_VERSION },           //   {"Program version",""},
     46              { L_WORD483, L_WORD237, SVT_UNIT_BOOTLOADER_VERSION },        //   {"Bootloader",""},
     47              { L_WORD25, L_WORD237, SVT_DATA_VERSION },                   //   {"Data version",""},
     48              { L_WORD1090, L_WORD237, SVT_TASK_NUMBER },                   //   {"Task number",""},
     49              //{ L_WORD1088, L_WORD237, SVT_TASK_NAME },                   //   {"Task name",""},
     50              //{ L_WORD1089, L_WORD237, SVT_TASK_STACK_USED },                   //   {"Task stack",""},
     51          };
     52          
     53          ValueList PROTanksystemUnit::TCU_R2UnitValueList[] =  {
   \                     ??TCU_R2UnitValueList:
   \   00000150                      DS8 348
   \   000002AC                      REQUIRE `?<Initializer for TCU_R2UnitValueList>`
     54              { L_WORD304, L_WORD237, SVT_BLANK },                          //   {"Unused"       ,"",SVT_BLANK},
     55              { L_WORD368, L_WORD237, SVT_AIN1 },                           //   {"Atm sensor"   ,"",SVT_AIN1},
     56              { L_WORD369, L_WORD237, SVT_AIN2 },                           //   {"Pwr 24V(1)"   ,"",SVT_AIN2},
     57              { L_WORD370, L_WORD237, SVT_AIN3 },                           //   {"Pwr 24V(2)"   ,"",SVT_AIN3},
     58              { L_WORD371, L_WORD237, SVT_AIN4 },                           //   {"Pwr 3.3V"     ,"",SVT_AIN4},
     59              { L_WORD372, L_WORD237, SVT_AIN5 },                           //   {"Pwr 1.8V"     ,"",SVT_AIN5},
     60              { L_WORD377, L_WORD237, SVT_AIN6 },                           //   {"Pwr 5.0V"     ,"",SVT_AIN6},
     61              { L_WORD763, L_WORD237, SVT_ERROR_ADDRESS },                  //   {"Fail Address" ,"",SVT_LAST_OS_ERROR},
     62              { L_WORD373, L_WORD237, SVT_LAST_OS_ERROR },                  //   {"OS Status"    ,"",SVT_LAST_OS_ERROR},
     63              { L_WORD374, L_WORD237, SVT_FLASH_ERROR_STATUS },             //   {"Flash Status" ,"",SVT_FLASH_ERROR_STATUS},
     64              { L_WORD375, L_WORD237, SVT_LAST_OS_ERROR_TASK },             //   {"Task Name"    ,"",SVT_LAST_OS_ERROR_TASK},
     65              { L_WORD376, L_WORD237, SVT_RUNNING_HOURS },                  //   {"Running hours","",SVT_RUNNING_HOURS},
     66              { L_WORD670, L_WORD237, SVT_RXERR_ID },                       //   {"ComErr Id  ",""},
     67              { L_WORD671, L_WORD237, SVT_RXERR_CMD },                      //   {"ComErr Cmd ",""},
     68              { L_WORD672, L_WORD237, SVT_RXERR_MSG },                      //   {"ComErr Msg ",""},
     69              { L_WORD673, L_WORD237, SVT_RXERR_CNT },                      //   {"ComErr Cnt ",""},
     70              { L_WORD674, L_WORD237, SVT_RXERR_TIME },                     //   {"ComErr Time",""},
     71              { L_WORD846, L_WORD237, SVT_IO_SYSTEM_DELAY },                //   {"IO sys Delay",""},
     72              { L_WORD1007, L_WORD237, SVT_CPU_LOAD_RAW },                  //   {"CPU Load Raw" ,"", SVT_CPU_LOAD_RAW),
     73              { L_WORD1008, L_WORD237, SVT_CPU_LOAD_AVG },                  //   {"CPU Load Avg" ,"", SVT_CPU_LOAD_AVG),
     74              { L_WORD1009, L_WORD237, SVT_CPU_LOAD_MAX },                  //   {"CPU Load Max" ,"", SVT_CPU_LOAD_Max),
     75              { L_WORD905, L_WORD237, SVT_ROLLING_PERIOD },                 //   {"Rol periode",""},
     76              { L_WORD906, L_WORD237, SVT_ROLLING_FREQUENCY },              //   {"Rol Frequency",""},
     77              { L_WORD907, L_WORD237, SVT_LIST_BUF_MAX_P },                 //   {"Max list P",""},
     78              { L_WORD908, L_WORD237, SVT_LIST_BUF_MAX_S },                 //   {"Max list S",""},
     79              { L_WORD24, L_WORD237, SVT_UNIT_PROGRAM_VERSION },           //   {"Program version",""},
     80              { L_WORD483, L_WORD237, SVT_UNIT_BOOTLOADER_VERSION },        //   {"Bootloader",""},
     81              { L_WORD25, L_WORD237, SVT_DATA_VERSION },                   //   {"Data version",""},
     82              { L_WORD1090, L_WORD237, SVT_TASK_NUMBER },                   //   {"Task number",""},
     83              //{ L_WORD1088, L_WORD237, SVT_TASK_NAME },                   //   {"Task name",""},
     84              //{ L_WORD1089, L_WORD237, SVT_TASK_STACK_USED },                   //   {"Task stack",""},
     85          };
     86          
     87          ValueList PROTanksystemUnit::TDUUnitValueList[] =  {
   \                     ??TDUUnitValueList:
   \   000002AC                      DS8 264
   \   000003B4                      REQUIRE `?<Initializer for TDUUnitValueList>`
     88              { L_WORD304, L_WORD237, SVT_BLANK },                            //   {"Unused"       ,"",SVT_BLANK},
     89              { L_WORD389, L_WORD237, SVT_AIN2 },                             //   {"Power 24V"    ,"",SVT_AIN2},
     90              { L_WORD378, L_WORD237, SVT_AIN3 },                             //   {"Power 12V"    ,"",SVT_AIN3},
     91              { L_WORD371, L_WORD237, SVT_AIN4 },                             //   {"Power 3.3V"   ,"",SVT_AIN4},
     92              { L_WORD372, L_WORD237, SVT_AIN5 },                             //   {"Power 1.8V"   ,"",SVT_AIN5},
     93                                                                              //
     94              { L_WORD763, L_WORD237, SVT_ERROR_ADDRESS },                    //   {"Fail Address"    ,"",SVT_LAST_OS_ERROR},
     95              { L_WORD373, L_WORD237, SVT_LAST_OS_ERROR },                    //   {"OS Status"    ,"",SVT_LAST_OS_ERROR},
     96              { L_WORD374, L_WORD237, SVT_FLASH_ERROR_STATUS },               //   {"Flash Status" ,"",SVT_FLASH_ERROR_STATUS},
     97              { L_WORD375, L_WORD237, SVT_LAST_OS_ERROR_TASK },               //   {"Task Name"    ,"",SVT_LAST_OS_ERROR_TASK},
     98              { L_WORD376, L_WORD237, SVT_RUNNING_HOURS },                    //   {"Running hours","",SVT_RUNNING_HOURS},
     99              { L_WORD1007, L_WORD237, SVT_CPU_LOAD_RAW },                    //   {"CPU Load Raw" ,"", SVT_CPU_LOAD_RAW),
    100              { L_WORD1008, L_WORD237, SVT_CPU_LOAD_AVG },                    //   {"CPU Load Avg" ,"", SVT_CPU_LOAD_AVG),
    101              { L_WORD1009, L_WORD237, SVT_CPU_LOAD_MAX },                    //   {"CPU Load Max" ,"", SVT_CPU_LOAD_Max),
    102              { L_WORD670, L_WORD237, SVT_RXERR_ID },                         //   {"ComErr Id"  ",""},
    103              { L_WORD671, L_WORD237, SVT_RXERR_CMD },                        //   {"ComErr Cmd" ",""},
    104              { L_WORD672, L_WORD237, SVT_RXERR_MSG },                        //   {"ComErr Msg" ",""},
    105              { L_WORD673, L_WORD237, SVT_RXERR_CNT },                        //   {"ComErr Cnt" ",""},
    106              { L_WORD674, L_WORD237, SVT_RXERR_TIME },                       //   {"ComErr Time"",""},
    107              { L_WORD24, L_WORD237, SVT_UNIT_PROGRAM_VERSION },             //   {"Program version",""},
    108              { L_WORD483, L_WORD237, SVT_UNIT_BOOTLOADER_VERSION },          //   {"Bootloader",""},
    109              { L_WORD25, L_WORD237, SVT_DATA_VERSION },                     //   {"Data version",""},
    110              { L_WORD1090, L_WORD237, SVT_TASK_NUMBER },                   //   {"Task number",""},
    111              //{ L_WORD1088, L_WORD237, SVT_TASK_NAME },                   //   {"Task name",""},
    112              //{ L_WORD1089, L_WORD237, SVT_TASK_STACK_USED },                   //   {"Task stack",""},
    113              //{ L_WORD1089, L_WORD237, SVT_TASK_STACK_USED },                   //   {"Task stack",""},
    114          };
    115          

   \                                 In segment DATA_Z, align 4, align-sorted
    116          unsigned PROTanksystemUnit::MySettingsId      = 0;
   \                     ??MySettingsId:
   \   00000000                      DS8 4
    117          
    118          PROTanksystemUnit *PROTanksystemUnit::MySelf = NULL;
    119          PROTanksystemUnit *PROTanksystemUnit::MyTCUPtr = NULL;

   \                                 In segment CODE, align 4, keep-with-next
   \   static __??Code32?? __intrinsic __code __interwork __atpcs void __sti__routine()
   \                     ??__sti__routine:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
    120          set<PRogramObjectBase *>PROTanksystemUnit::TanksystemUnitSet;
   \   00000004   ........           LDR      R4,??DataTable39  ;; ??TanksystemUnitSet
   \   00000008   ........           LDR      R5,??Subroutine46_0  ;; ?_0
   \   0000000C   0400A0E1           MOV      R0,R4
   \   00000010   ........           _BLF     ??set,??set??rA
   \   00000014   0500A0E1           MOV      R0,R5
   \   00000018   ........           _BLF     __record_needed_destruction,??__record_needed_destruction??rA
    121          set<PRogramObjectBase *>PROTanksystemUnit::TanksystemTCUSet;
   \   0000001C   180084E2           ADD      R0,R4,#+24
   \   00000020   ........           _BLF     ??set,??set??rA
   \   00000024   0C0085E2           ADD      R0,R5,#+12
   \   00000028   ........           _BLF     __record_needed_destruction,??__record_needed_destruction??rA
    122          vector<NetworkedDevice> PROTanksystemUnit::_net_devices;
   \   0000002C   380084E2           ADD      R0,R4,#+56
   \   00000030   ........           _BLF     ??_Zero,??_Zero??rA
   \   00000034   180085E2           ADD      R0,R5,#+24
   \   00000038   ........           _BLF     __record_needed_destruction,??__record_needed_destruction??rA
   \   0000003C                      REQUIRE ?Subroutine46
   \   0000003C                      ;; // Fall through to label ?Subroutine46

   \                                 In segment DATA_C, align 4, align-sorted
   \                     ?_0:
   \   00000000   ............       DC32 ?_1, ??TanksystemUnitSet, `?~set`
   \              ............
   \   0000000C   ............       DC32 ?_3, ??TanksystemTCUSet, `?~set`
   \              ............
   \   00000018   ............       DC32 ?_5, ??_net_devices, `?~vector`
   \              ............

   \                                 In segment DATA_Z, align 4, align-sorted
   \                     ??TanksystemUnitSet:
   \   00000000                      DS8 24
   \                     ??TanksystemTCUSet:
   \   00000018                      DS8 24
   \                     ??MySelf:
   \   00000030                      DS8 4
   \                     ??MyTCUPtr:
   \   00000034                      DS8 4
   \                     ??_net_devices:
   \   00000038                      DS8 12
    123          
    124          #ifdef S2TXU

   \                                 In segment DATA_Z, align 4, align-sorted
    125          OS_STACKPTR int PROTanksystemUnit::TaskStack[2048];
   \                     ??TaskStack:
   \   00000000                      DS8 8192

   \                                 In segment DATA_Z, align 4, align-sorted
    126          OS_TASK PROTanksystemUnit::TaskHandle;           /* Task control blocks */
    127          int PROTanksystemUnit::SysInfoReqestComPortNum  = 0;
   \                     ??SysInfoReqestComPortNum:
   \   00000000                      DS8 4
    128          int PROTanksystemUnit::SysInfoRequestAddress    = 0;
   \                     ??SysInfoRequestAddress:
   \   00000004                      DS8 4
    129          int PROTanksystemUnit::SysInfoRequestId         = 0;
   \                     ??SysInfoRequestId:
   \   00000008                      DS8 4
   \                     ??TaskHandle:
   \   0000000C                      DS8 64
    130          
    131          
    132          #endif
    133          

   \                                 In segment CODE, align 4, keep-with-next
    134          PROTanksystemUnit::PROTanksystemUnit(int PortNo, int addr, int DevId, PROTanksystemUnit *TCUPtr) : PRogramObject( false),
   \                     ??PROTanksystemUnit:
   \   00000000   F04F2DE9           PUSH     {R4-R11,LR}
   \   00000004   24609DE5           LDR      R6,[SP, #+36]
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   01A0A0E1           MOV      R10,R1
   \   00000010   02B0A0E1           MOV      R11,R2
   \   00000014   0350A0E1           MOV      R5,R3
    135              CreatedFromUart(true), MyPortNumberonTCU(PortNo), Address(addr), UnitID(DevId) {
   \   00000018   0010A0E3           MOV      R1,#+0
   \   0000001C   ........           _BLF     ??PRogramObject,??PRogramObject??rA
   \   00000020   ........           LDR      R0,??DataTable38  ;; ??__vtbl
   \   00000024   0180A0E3           MOV      R8,#+1
   \   00000028   A40084E5           STR      R0,[R4, #+164]
   \   0000002C   5E00A0E3           MOV      R0,#+94
   \   00000030   400F80E3           ORR      R0,R0,#0x100
   \   00000034   047080E0           ADD      R7,R0,R4
   \   00000038   1280C7E5           STRB     R8,[R7, #+18]
   \   0000003C   860F84E2           ADD      R0,R4,#+536
   \   00000040   ........           _BLF     ??AnsiString,??AnsiString??rA
   \   00000044   939F84E2           ADD      R9,R4,#+588
   \   00000048   00A089E5           STR      R10,[R9, #+0]
   \   0000004C   940F84E2           ADD      R0,R4,#+592
   \   00000050   ........           _BLF     ??AnsiString,??AnsiString??rA
   \   00000054   ........           LDR      R3,??DataTable27  ;; ??set
   \   00000058   1820A0E3           MOV      R2,#+24
   \   0000005C   0710A0E3           MOV      R1,#+7
   \   00000060   9F0F84E2           ADD      R0,R4,#+636
   \   00000064   ........           _BLF     __data_vec_construct,??__data_vec_construct??rA
   \   00000068   D85089E5           STR      R5,[R9, #+216]
   \   0000006C   E0B089E5           STR      R11,[R9, #+224]
   \   00000070   D70F84E2           ADD      R0,R4,#+860
   \   00000074   ........           _BLF     ??_Zero,??_Zero??rA
   \   00000078   E70F84E2           ADD      R0,R4,#+924
   \   0000007C   ........           _BLF     ??_Zero,??_Zero??rA
   \   00000080   EA0F84E2           ADD      R0,R4,#+936
   \   00000084   ........           _BLF     ??_Zero,??_Zero??rA
   \   00000088   ED0F84E2           ADD      R0,R4,#+948
   \   0000008C   ........           _BLF     ??_Zero,??_Zero??rA
   \   00000090   F00F84E2           ADD      R0,R4,#+960
   \   00000094   ........           _BLF     ??_Zero,??_Zero??rA
   \   00000098   F30F84E2           ADD      R0,R4,#+972
   \   0000009C   ........           _BLF     ??_Zero,??_Zero??rA
   \   000000A0   F60F84E2           ADD      R0,R4,#+984
   \   000000A4   ........           _BLF     ??_Zero,??_Zero??rA
   \   000000A8   F90F84E2           ADD      R0,R4,#+996
   \   000000AC   ........           _BLF     ??_Zero,??_Zero??rA
   \   000000B0   FC0F84E2           ADD      R0,R4,#+1008
   \   000000B4   ........           _BLF     ??_Zero,??_Zero??rA
   \   000000B8   FF0F84E2           ADD      R0,R4,#+1020
   \   000000BC   ........           _BLF     ??_Zero,??_Zero??rA
   \   000000C0   0800A0E3           MOV      R0,#+8
   \   000000C4   400E80E3           ORR      R0,R0,#0x400
   \   000000C8   040080E0           ADD      R0,R0,R4
   \   000000CC   ........           _BLF     ??_Zero,??_Zero??rA
   \   000000D0   1400A0E3           MOV      R0,#+20
   \   000000D4   400E80E3           ORR      R0,R0,#0x400
   \   000000D8   040080E0           ADD      R0,R0,R4
   \   000000DC   ........           _BLF     ??_Zero,??_Zero??rA
   \   000000E0   420E84E2           ADD      R0,R4,#+1056
   \   000000E4   ........           _BLF     ??_Zero,??_Zero??rA
   \   000000E8   2C00A0E3           MOV      R0,#+44
   \   000000EC   400E80E3           ORR      R0,R0,#0x400
   \   000000F0   040080E0           ADD      R0,R0,R4
   \   000000F4   ........           _BLF     ??_Zero,??_Zero??rA
   \   000000F8   3800A0E3           MOV      R0,#+56
   \   000000FC   400E80E3           ORR      R0,R0,#0x400
   \   00000100   040080E0           ADD      R0,R0,R4
   \   00000104   ........           _BLF     ??_Zero,??_Zero??rA
   \   00000108   ........           LDR      R3,??DataTable28  ;; ??AnsiString
   \   0000010C   1C20A0E3           MOV      R2,#+28
   \   00000110   2810A0E3           MOV      R1,#+40
   \   00000114   440E82E3           ORR      R0,R2,#0x440
   \   00000118   040080E0           ADD      R0,R0,R4
   \   0000011C   ........           _BLF     __data_vec_construct,??__data_vec_construct??rA
    136              Initiate();
   \   00000120   0400A0E1           MOV      R0,R4
   \   00000124   ........           BL       ??Initiate
    137              MyTCUPtr   = TCUPtr;
   \   00000128   ........           LDR      R0,??DataTable25  ;; ??TanksystemUnitSet
   \   0000012C   346080E5           STR      R6,[R0, #+52]
    138              TCUAddress = MyTCUPtr->Address;
   \   00000130   2C1396E5           LDR      R1,[R6, #+812]
   \   00000134   E41089E5           STR      R1,[R9, #+228]
    139          
    140          
    141              if (CurrentDeviceId == UnitID && CurrentDeviceAddress == Address) {
   \   00000138   ........           LDR      R1,??DataTable32  ;; CurrentDeviceId
   \   0000013C   D82099E5           LDR      R2,[R9, #+216]
   \   00000140   F010D1E1           LDRSH    R1,[R1, #+0]
   \   00000144   020051E1           CMP      R1,R2
   \   00000148   ........           LDREQ    R1,??DataTable18  ;; CurrentDeviceAddress
   \   0000014C   E0209905           LDREQ    R2,[R9, #+224]
   \   00000150   F010D101           LDRSHEQ  R1,[R1, #+0]
   \   00000154   02005101           CMPEQ    R1,R2
   \   00000158   2500001A           BNE      ??PROTanksystemUnit_3
    142                  if (!MySelf) MySelf = this;
   \   0000015C   301090E5           LDR      R1,[R0, #+48]
   \   00000160   000051E3           CMP      R1,#+0
   \   00000164   30408005           STREQ    R4,[R0, #+48]
    143                  HWDeviceId  = GlobalDeviceHWId;
   \   00000168   ........           LDR      R0,??DataTable19  ;; GlobalDeviceHWId
   \   0000016C   F000D0E1           LDRSH    R0,[R0, #+0]
   \   00000170   DC00C9E5           STRB     R0,[R9, #+220]
    144                  if (TSNConfigInfo::ConfigInfoPtr) ActualDataVersion = TSNConfigInfo::ConfigInfoPtr->PrevConfigDataRevision;
   \   00000174   ........           LDR      R0,??DataTable29  ;; ??ConfigInfoPtr
   \   00000178   000090E5           LDR      R0,[R0, #+0]
   \   0000017C   000050E3           CMP      R0,#+0
   \   00000180   3C019015           LDRNE    R0,[R0, #+316]
   \   00000184   B000C711           STRHNE   R0,[R7, #+0]
    145                  if (PROProjectInfo::PROProjectInfoPtr) strncpy(ActualSystemID, PROProjectInfo::PROProjectInfoPtr->ProjectName.c_str(), ANPRO10_ID_LENGTH);
   \   00000188   ........           LDR      R0,??DataTable30  ;; ??PROProjectInfoPtr
   \   0000018C   000090E5           LDR      R0,[R0, #+0]
   \   00000190   000050E3           CMP      R0,#+0
   \   00000194   0700000A           BEQ      ??PROTanksystemUnit_4
   \   00000198   ........           LDR      R0,??DataTable31  ;; ??ProjectName
   \   0000019C   ........           _BLF     ??c_str,??c_str??rA
   \   000001A0   1420A0E3           MOV      R2,#+20
   \   000001A4   0010A0E1           MOV      R1,R0
   \   000001A8   4A00A0E3           MOV      R0,#+74
   \   000001AC   400F80E3           ORR      R0,R0,#0x100
   \   000001B0   040080E0           ADD      R0,R0,R4
   \   000001B4   ........           _BLF     strncpy,??strncpy??rA
    146          
    147          #if defined(S2TXU) | defined(ANTDUSIM)
    148                  ActualProgramVersion = MyProgramVersion;
   \                     ??PROTanksystemUnit_4:
   \   000001B8   ........           LDR      R1,??DataTable23  ;; MyProgramVersion
   \   000001BC   580F84E2           ADD      R0,R4,#+352
   \   000001C0   0430A0E3           MOV      R3,#+4
   \                     ??PROTanksystemUnit_5:
   \   000001C4   013053E2           SUBS     R3,R3,#+1
   \   000001C8   0320D1E7           LDRB     R2,[R1, R3]
   \   000001CC   0320C0E7           STRB     R2,[R0, R3]
   \   000001D0   FBFFFF1A           BNE      ??PROTanksystemUnit_5
    149                  ActualBootVersion    = BootVersion;
   \   000001D4   ........           LDR      R1,??DataTable24  ;; 0x31fff000
   \   000001D8   590F84E2           ADD      R0,R4,#+356
   \   000001DC   0430A0E3           MOV      R3,#+4
   \                     ??PROTanksystemUnit_6:
   \   000001E0   013053E2           SUBS     R3,R3,#+1
   \   000001E4   0320D1E7           LDRB     R2,[R1, R3]
   \   000001E8   0320C0E7           STRB     R2,[R0, R3]
   \   000001EC   FBFFFF1A           BNE      ??PROTanksystemUnit_6
   \   000001F0   180000EA           B        ??PROTanksystemUnit_7
    150          #else
    151                  ActualProgramVersion = MyProgramVersion;
    152                  ActualBootVersion.ProdNo          = 0;
    153                  ActualBootVersion.PacketFormat    = 0;
    154                  ActualBootVersion.NewFunctions    = 0;
    155                  ActualBootVersion.Build           = 0;
    156          #endif
    157              } else {
    158                  switch (DevId) {
   \                     ??PROTanksystemUnit_3:
   \   000001F4   205055E2           SUBS     R5,R5,#+32
   \   000001F8   0E00000A           BEQ      ??PROTanksystemUnit_8
   \   000001FC   015055E2           SUBS     R5,R5,#+1
   \   00000200   0A00000A           BEQ      ??PROTanksystemUnit_9
   \   00000204   015055E2           SUBS     R5,R5,#+1
   \   00000208   0A00000A           BEQ      ??PROTanksystemUnit_8
   \   0000020C   0E5055E2           SUBS     R5,R5,#+14
   \   00000210   0C00000A           BEQ      ??PROTanksystemUnit_10
   \   00000214   015055E2           SUBS     R5,R5,#+1
   \   00000218   0800000A           BEQ      ??PROTanksystemUnit_11
   \   0000021C   015055E2           SUBS     R5,R5,#+1
   \   00000220   0800000A           BEQ      ??PROTanksystemUnit_10
   \   00000224   0E5055E2           SUBS     R5,R5,#+14
   \   00000228   0800000A           BEQ      ??PROTanksystemUnit_12
   \   0000022C   090000EA           B        ??PROTanksystemUnit_7
    159                  case DEVICE_TCU_R1:
    160                      HWDeviceId = TCU_R1;
   \                     ??PROTanksystemUnit_9:
   \   00000230   0000A0E3           MOV      R0,#+0
   \   00000234   060000EA           B        ??PROTanksystemUnit_13
    161                      break;
    162                  case DEVICE_TCU   :
    163                  case DEVICE_TCU_R2:
    164                      HWDeviceId = TCU_R2;
   \                     ??PROTanksystemUnit_8:
   \   00000238   DC80C9E5           STRB     R8,[R9, #+220]
   \   0000023C   050000EA           B        ??PROTanksystemUnit_7
    165                      break;
    166                  case DEVICE_TDU_R1:
    167                      HWDeviceId = TDU_R1;
   \                     ??PROTanksystemUnit_11:
   \   00000240   0200A0E3           MOV      R0,#+2
   \   00000244   020000EA           B        ??PROTanksystemUnit_13
    168                      break;
    169                  case DEVICE_TDU   :
    170                  case DEVICE_TDU_R2:
    171                      HWDeviceId = TDU_R2;
   \                     ??PROTanksystemUnit_10:
   \   00000248   0300A0E3           MOV      R0,#+3
   \   0000024C   000000EA           B        ??PROTanksystemUnit_13
    172                      break;
    173                  case DEVICE_PCSW  :
    174                      HWDeviceId = TXU_IS_PC;
   \                     ??PROTanksystemUnit_12:
   \   00000250   0400A0E3           MOV      R0,#+4
   \                     ??PROTanksystemUnit_13:
   \   00000254   DC00C9E5           STRB     R0,[R9, #+220]
    175          			break;
    176                  }
    177              }
    178          #ifdef S2TXU
    179              CtrlBuzzerPtr = new CtrlBuzzer();
   \                     ??PROTanksystemUnit_7:
   \   00000258   4F0FA0E3           MOV      R0,#+316
   \   0000025C   ........           _BLF     `??operator new`,`??operator new??rA`
   \   00000260   0050B0E1           MOVS     R5,R0
   \   00000264   0000000A           BEQ      ??PROTanksystemUnit_14
   \   00000268   ........           _BLF     ??CtrlBuzzer,??CtrlBuzzer??rA
   \                     ??PROTanksystemUnit_14:
   \   0000026C   385189E5           STR      R5,[R9, #+312]
    180          #endif
    181              SetId();
   \   00000270   0400A0E1           MOV      R0,R4
   \   00000274   ........           BL       ??SetId
    182          }
   \   00000278   0400A0E1           MOV      R0,R4
   \   0000027C   ........           B        ?Subroutine49

   \                                 In segment CODE, align 4, keep-with-next
   \                     ?Subroutine49:
   \   00000000   F04FBDE8           POP      {R4-R11,LR}
   \   00000004   1EFF2FE1           BX       LR               ;; return
   \                     ??Subroutine49_0:
   \   00000008   ........           DC32     `?<Constant {(0.0F), (20.0F), (20.0F), (3.29999`
   \   0000000C   10F0FF31           DC32     0x31fff010
    183          

   \                                 In segment CODE, align 4, keep-with-next
    184          PROTanksystemUnit::PROTanksystemUnit(int addr, int DevId) :PRogramObject( false),
   \                     ??PROTanksystemUnit_1:
   \   00000000   F0432DE9           PUSH     {R4-R9,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0190A0E1           MOV      R9,R1
   \   0000000C   0250A0E1           MOV      R5,R2
    185              CreatedFromUart(false), MyPortNumberonTCU(-1), Address(addr), UnitID(DevId) {
   \   00000010   0010A0E3           MOV      R1,#+0
   \   00000014   ........           _BLF     ??PRogramObject,??PRogramObject??rA
   \   00000018   ........           LDR      R0,??DataTable38  ;; ??__vtbl
   \   0000001C   0070A0E3           MOV      R7,#+0
   \   00000020   A40084E5           STR      R0,[R4, #+164]
   \   00000024   5E00A0E3           MOV      R0,#+94
   \   00000028   400F80E3           ORR      R0,R0,#0x100
   \   0000002C   046080E0           ADD      R6,R0,R4
   \   00000030   0000A0E3           MOV      R0,#+0
   \   00000034   1200C6E5           STRB     R0,[R6, #+18]
   \   00000038   860F84E2           ADD      R0,R4,#+536
   \   0000003C   ........           _BLF     ??AnsiString,??AnsiString??rA
   \   00000040   938F84E2           ADD      R8,R4,#+588
   \   00000044   0700E0E1           MVN      R0,R7
   \   00000048   000088E5           STR      R0,[R8, #+0]
   \   0000004C   940F84E2           ADD      R0,R4,#+592
   \   00000050   ........           _BLF     ??AnsiString,??AnsiString??rA
   \   00000054   ........           LDR      R3,??DataTable27  ;; ??set
   \   00000058   1820A0E3           MOV      R2,#+24
   \   0000005C   0710A0E3           MOV      R1,#+7
   \   00000060   9F0F84E2           ADD      R0,R4,#+636
   \   00000064   ........           _BLF     __data_vec_construct,??__data_vec_construct??rA
   \   00000068   D85088E5           STR      R5,[R8, #+216]
   \   0000006C   E09088E5           STR      R9,[R8, #+224]
    186              Initiate();
    187          
    188          	MyTCUPtr   = FindTCU(0);
   \   00000070   ........           LDR      R9,??DataTable25  ;; ??TanksystemUnitSet
   \   00000074   D70F84E2           ADD      R0,R4,#+860
   \   00000078   ........           _BLF     ??_Zero,??_Zero??rA
   \   0000007C   E70F84E2           ADD      R0,R4,#+924
   \   00000080   ........           _BLF     ??_Zero,??_Zero??rA
   \   00000084   EA0F84E2           ADD      R0,R4,#+936
   \   00000088   ........           _BLF     ??_Zero,??_Zero??rA
   \   0000008C   ED0F84E2           ADD      R0,R4,#+948
   \   00000090   ........           _BLF     ??_Zero,??_Zero??rA
   \   00000094   F00F84E2           ADD      R0,R4,#+960
   \   00000098   ........           _BLF     ??_Zero,??_Zero??rA
   \   0000009C   F30F84E2           ADD      R0,R4,#+972
   \   000000A0   ........           _BLF     ??_Zero,??_Zero??rA
   \   000000A4   F60F84E2           ADD      R0,R4,#+984
   \   000000A8   ........           _BLF     ??_Zero,??_Zero??rA
   \   000000AC   F90F84E2           ADD      R0,R4,#+996
   \   000000B0   ........           _BLF     ??_Zero,??_Zero??rA
   \   000000B4   FC0F84E2           ADD      R0,R4,#+1008
   \   000000B8   ........           _BLF     ??_Zero,??_Zero??rA
   \   000000BC   FF0F84E2           ADD      R0,R4,#+1020
   \   000000C0   ........           _BLF     ??_Zero,??_Zero??rA
   \   000000C4   0800A0E3           MOV      R0,#+8
   \   000000C8   400E80E3           ORR      R0,R0,#0x400
   \   000000CC   040080E0           ADD      R0,R0,R4
   \   000000D0   ........           _BLF     ??_Zero,??_Zero??rA
   \   000000D4   1400A0E3           MOV      R0,#+20
   \   000000D8   400E80E3           ORR      R0,R0,#0x400
   \   000000DC   040080E0           ADD      R0,R0,R4
   \   000000E0   ........           _BLF     ??_Zero,??_Zero??rA
   \   000000E4   420E84E2           ADD      R0,R4,#+1056
   \   000000E8   ........           _BLF     ??_Zero,??_Zero??rA
   \   000000EC   2C00A0E3           MOV      R0,#+44
   \   000000F0   400E80E3           ORR      R0,R0,#0x400
   \   000000F4   040080E0           ADD      R0,R0,R4
   \   000000F8   ........           _BLF     ??_Zero,??_Zero??rA
   \   000000FC   3800A0E3           MOV      R0,#+56
   \   00000100   400E80E3           ORR      R0,R0,#0x400
   \   00000104   040080E0           ADD      R0,R0,R4
   \   00000108   ........           _BLF     ??_Zero,??_Zero??rA
   \   0000010C   ........           LDR      R3,??DataTable28  ;; ??AnsiString
   \   00000110   1C20A0E3           MOV      R2,#+28
   \   00000114   2810A0E3           MOV      R1,#+40
   \   00000118   440E82E3           ORR      R0,R2,#0x440
   \   0000011C   040080E0           ADD      R0,R0,R4
   \   00000120   ........           _BLF     __data_vec_construct,??__data_vec_construct??rA
   \   00000124   0400A0E1           MOV      R0,R4
   \   00000128   ........           BL       ??Initiate
   \   0000012C   0700A0E1           MOV      R0,R7
   \   00000130   ........           BL       ??FindTCU
   \   00000134   340089E5           STR      R0,[R9, #+52]
    189          	if (MyTCUPtr) {
   \   00000138   000050E3           CMP      R0,#+0
    190          		TCUAddress = MyTCUPtr->Address;
   \   0000013C   2C039015           LDRNE    R0,[R0, #+812]
    191          	} else{
    192          		TCUAddress = 0;
   \   00000140   E40088E5           STR      R0,[R8, #+228]
    193          	}
    194          
    195          	if (CurrentDeviceId == UnitID && CurrentDeviceAddress == Address) {
   \   00000144   ........           LDR      R0,??DataTable32  ;; CurrentDeviceId
   \   00000148   D81098E5           LDR      R1,[R8, #+216]
   \   0000014C   F000D0E1           LDRSH    R0,[R0, #+0]
   \   00000150   010050E1           CMP      R0,R1
   \   00000154   ........           LDREQ    R0,??DataTable18  ;; CurrentDeviceAddress
   \   00000158   E0109805           LDREQ    R1,[R8, #+224]
   \   0000015C   F000D001           LDRSHEQ  R0,[R0, #+0]
   \   00000160   01005001           CMPEQ    R0,R1
   \   00000164   2500001A           BNE      ??PROTanksystemUnit_15
    196                  if (!MySelf) MySelf = this;
   \   00000168   300099E5           LDR      R0,[R9, #+48]
   \   0000016C   000050E3           CMP      R0,#+0
    197                  HWDeviceId  = GlobalDeviceHWId;
   \   00000170   ........           LDR      R0,??DataTable19  ;; GlobalDeviceHWId
   \   00000174   30408905           STREQ    R4,[R9, #+48]
   \   00000178   F000D0E1           LDRSH    R0,[R0, #+0]
   \   0000017C   DC00C8E5           STRB     R0,[R8, #+220]
    198                  if (TSNConfigInfo::ConfigInfoPtr) ActualDataVersion = TSNConfigInfo::ConfigInfoPtr->PrevConfigDataRevision;
   \   00000180   ........           LDR      R0,??DataTable29  ;; ??ConfigInfoPtr
   \   00000184   000090E5           LDR      R0,[R0, #+0]
   \   00000188   000050E3           CMP      R0,#+0
   \   0000018C   3C019015           LDRNE    R0,[R0, #+316]
   \   00000190   B000C611           STRHNE   R0,[R6, #+0]
    199                  if (PROProjectInfo::PROProjectInfoPtr) strncpy(ActualSystemID, PROProjectInfo::PROProjectInfoPtr->ProjectName.c_str(), ANPRO10_ID_LENGTH);
   \   00000194   ........           LDR      R0,??DataTable30  ;; ??PROProjectInfoPtr
   \   00000198   000090E5           LDR      R0,[R0, #+0]
   \   0000019C   000050E3           CMP      R0,#+0
   \   000001A0   0700000A           BEQ      ??PROTanksystemUnit_16
   \   000001A4   ........           LDR      R0,??DataTable31  ;; ??ProjectName
   \   000001A8   ........           _BLF     ??c_str,??c_str??rA
   \   000001AC   1420A0E3           MOV      R2,#+20
   \   000001B0   0010A0E1           MOV      R1,R0
   \   000001B4   4A00A0E3           MOV      R0,#+74
   \   000001B8   400F80E3           ORR      R0,R0,#0x100
   \   000001BC   040080E0           ADD      R0,R0,R4
   \   000001C0   ........           _BLF     strncpy,??strncpy??rA
    200          #if defined(S2TXU) | defined(ANTDUSIM)
    201                  ActualProgramVersion = MyProgramVersion;
   \                     ??PROTanksystemUnit_16:
   \   000001C4   ........           LDR      R1,??DataTable23  ;; MyProgramVersion
   \   000001C8   580F84E2           ADD      R0,R4,#+352
   \   000001CC   0430A0E3           MOV      R3,#+4
   \                     ??PROTanksystemUnit_17:
   \   000001D0   013053E2           SUBS     R3,R3,#+1
   \   000001D4   0320D1E7           LDRB     R2,[R1, R3]
   \   000001D8   0320C0E7           STRB     R2,[R0, R3]
   \   000001DC   FBFFFF1A           BNE      ??PROTanksystemUnit_17
    202                  ActualBootVersion    = BootVersion;
   \   000001E0   ........           LDR      R1,??DataTable24  ;; 0x31fff000
   \   000001E4   590F84E2           ADD      R0,R4,#+356
   \   000001E8   0430A0E3           MOV      R3,#+4
   \                     ??PROTanksystemUnit_18:
   \   000001EC   013053E2           SUBS     R3,R3,#+1
   \   000001F0   0320D1E7           LDRB     R2,[R1, R3]
   \   000001F4   0320C0E7           STRB     R2,[R0, R3]
   \   000001F8   FBFFFF1A           BNE      ??PROTanksystemUnit_18
   \   000001FC   180000EA           B        ??PROTanksystemUnit_19
    203          #else
    204                  ActualProgramVersion.ProdNo       = 0;
    205                  ActualProgramVersion.PacketFormat = 0;
    206                  ActualProgramVersion.NewFunctions = 0;
    207                  ActualProgramVersion.Build        = 0;
    208                  ActualBootVersion.ProdNo          = 0;
    209                  ActualBootVersion.PacketFormat    = 0;
    210                  ActualBootVersion.NewFunctions    = 0;
    211                  ActualBootVersion.Build           = 0;
    212          #endif
    213              } else {
    214                  switch (DevId) {
   \                     ??PROTanksystemUnit_15:
   \   00000200   205055E2           SUBS     R5,R5,#+32
   \   00000204   0E00000A           BEQ      ??PROTanksystemUnit_20
   \   00000208   015055E2           SUBS     R5,R5,#+1
   \   0000020C   0A00000A           BEQ      ??PROTanksystemUnit_21
   \   00000210   015055E2           SUBS     R5,R5,#+1
   \   00000214   0A00000A           BEQ      ??PROTanksystemUnit_20
   \   00000218   0E5055E2           SUBS     R5,R5,#+14
   \   0000021C   0C00000A           BEQ      ??PROTanksystemUnit_22
   \   00000220   015055E2           SUBS     R5,R5,#+1
   \   00000224   0800000A           BEQ      ??PROTanksystemUnit_23
   \   00000228   015055E2           SUBS     R5,R5,#+1
   \   0000022C   0800000A           BEQ      ??PROTanksystemUnit_22
   \   00000230   0E5055E2           SUBS     R5,R5,#+14
   \   00000234   0800000A           BEQ      ??PROTanksystemUnit_24
   \   00000238   090000EA           B        ??PROTanksystemUnit_19
    215                  case DEVICE_TCU_R1:
    216                      HWDeviceId = TCU_R1;
   \                     ??PROTanksystemUnit_21:
   \   0000023C   DC70C8E5           STRB     R7,[R8, #+220]
   \   00000240   070000EA           B        ??PROTanksystemUnit_19
    217                      break;
    218                  case DEVICE_TCU   :
    219                  case DEVICE_TCU_R2:
    220                      HWDeviceId = TCU_R2;
   \                     ??PROTanksystemUnit_20:
   \   00000244   0100A0E3           MOV      R0,#+1
   \   00000248   040000EA           B        ??PROTanksystemUnit_25
    221                      break;
    222                  case DEVICE_TDU_R1:
    223                      HWDeviceId = TDU_R1;
   \                     ??PROTanksystemUnit_23:
   \   0000024C   0200A0E3           MOV      R0,#+2
   \   00000250   020000EA           B        ??PROTanksystemUnit_25
    224                      break;
    225                  case DEVICE_TDU   :
    226                  case DEVICE_TDU_R2:
    227                      HWDeviceId = TDU_R2;
   \                     ??PROTanksystemUnit_22:
   \   00000254   0300A0E3           MOV      R0,#+3
   \   00000258   000000EA           B        ??PROTanksystemUnit_25
    228                      break;
    229                  case DEVICE_PCSW  :
    230                      HWDeviceId = TXU_IS_PC;
   \                     ??PROTanksystemUnit_24:
   \   0000025C   0400A0E3           MOV      R0,#+4
   \                     ??PROTanksystemUnit_25:
   \   00000260   DC00C8E5           STRB     R0,[R8, #+220]
    231                      break;
    232                  }
    233              }
    234          
    235          #ifdef S2TXU
    236              CtrlBuzzerPtr = new CtrlBuzzer();
   \                     ??PROTanksystemUnit_19:
   \   00000264   4F0FA0E3           MOV      R0,#+316
   \   00000268   ........           _BLF     `??operator new`,`??operator new??rA`
   \   0000026C   0050B0E1           MOVS     R5,R0
   \   00000270   0100000A           BEQ      ??PROTanksystemUnit_26
   \   00000274   ........           _BLF     ??CtrlBuzzer,??CtrlBuzzer??rA
   \   00000278   0570A0E1           MOV      R7,R5
   \                     ??PROTanksystemUnit_26:
   \   0000027C   387188E5           STR      R7,[R8, #+312]
    237          #endif
    238              SetIdNet();
   \   00000280   0400A0E1           MOV      R0,R4
   \   00000284   ........           BL       ??SetIdNet
    239          }
   \   00000288   0400A0E1           MOV      R0,R4
   \   0000028C   ........           B        ?Subroutine50

   \                                 In segment CODE, align 4, keep-with-next
   \                     ?Subroutine50:
   \   00000000   F043BDE8           POP      {R4-R9,LR}
   \   00000004   1EFF2FE1           BX       LR               ;; return
    240          
    241          //------------------------------------------------------------------------
    242          //
    243          // This constructor is only for creating TCU type of object.
    244          //
    245          

   \                                 In segment CODE, align 4, keep-with-next
    246          PROTanksystemUnit::PROTanksystemUnit(void) : CreatedFromUart(false), MyPortNumberonTCU(-1), Address(0) {
   \                     ??PROTanksystemUnit_2:
   \   00000000   F3402DE9           PUSH     {R0,R1,R4-R7,LR}
   \   00000004   0040A0E1           MOV      R4,R0
    247          
    248              TanksystemTCUSet.insert(this);
   \   00000008   ........           LDR      R7,??DataTable25  ;; ??TanksystemUnitSet
   \   0000000C   0110A0E3           MOV      R1,#+1
   \   00000010   ........           _BLF     ??PRogramObject,??PRogramObject??rA
   \   00000014   ........           LDR      R0,??DataTable38  ;; ??__vtbl
   \   00000018   A45084E2           ADD      R5,R4,#+164
   \   0000001C   000085E5           STR      R0,[R5, #+0]
   \   00000020   0060A0E3           MOV      R6,#+0
   \   00000024   0000A0E3           MOV      R0,#+0
   \   00000028   CC00C5E5           STRB     R0,[R5, #+204]
   \   0000002C   860F84E2           ADD      R0,R4,#+536
   \   00000030   ........           _BLF     ??AnsiString,??AnsiString??rA
   \   00000034   0600E0E1           MVN      R0,R6
   \   00000038   A80185E5           STR      R0,[R5, #+424]
   \   0000003C   940F84E2           ADD      R0,R4,#+592
   \   00000040   ........           _BLF     ??AnsiString,??AnsiString??rA
   \   00000044   ........           LDR      R3,??DataTable27  ;; ??set
   \   00000048   1820A0E3           MOV      R2,#+24
   \   0000004C   0710A0E3           MOV      R1,#+7
   \   00000050   9F0F84E2           ADD      R0,R4,#+636
   \   00000054   ........           _BLF     __data_vec_construct,??__data_vec_construct??rA
   \   00000058   886285E5           STR      R6,[R5, #+648]
   \   0000005C   D70F84E2           ADD      R0,R4,#+860
   \   00000060   ........           _BLF     ??_Zero,??_Zero??rA
   \   00000064   E70F84E2           ADD      R0,R4,#+924
   \   00000068   ........           _BLF     ??_Zero,??_Zero??rA
   \   0000006C   EA0F84E2           ADD      R0,R4,#+936
   \   00000070   ........           _BLF     ??_Zero,??_Zero??rA
   \   00000074   ED0F84E2           ADD      R0,R4,#+948
   \   00000078   ........           _BLF     ??_Zero,??_Zero??rA
   \   0000007C   F00F84E2           ADD      R0,R4,#+960
   \   00000080   ........           _BLF     ??_Zero,??_Zero??rA
   \   00000084   F30F84E2           ADD      R0,R4,#+972
   \   00000088   ........           _BLF     ??_Zero,??_Zero??rA
   \   0000008C   F60F84E2           ADD      R0,R4,#+984
   \   00000090   ........           _BLF     ??_Zero,??_Zero??rA
   \   00000094   F90F84E2           ADD      R0,R4,#+996
   \   00000098   ........           _BLF     ??_Zero,??_Zero??rA
   \   0000009C   FC0F84E2           ADD      R0,R4,#+1008
   \   000000A0   ........           _BLF     ??_Zero,??_Zero??rA
   \   000000A4   FF0F84E2           ADD      R0,R4,#+1020
   \   000000A8   ........           _BLF     ??_Zero,??_Zero??rA
   \   000000AC   0800A0E3           MOV      R0,#+8
   \   000000B0   400E80E3           ORR      R0,R0,#0x400
   \   000000B4   040080E0           ADD      R0,R0,R4
   \   000000B8   ........           _BLF     ??_Zero,??_Zero??rA
   \   000000BC   1400A0E3           MOV      R0,#+20
   \   000000C0   400E80E3           ORR      R0,R0,#0x400
   \   000000C4   040080E0           ADD      R0,R0,R4
   \   000000C8   ........           _BLF     ??_Zero,??_Zero??rA
   \   000000CC   420E84E2           ADD      R0,R4,#+1056
   \   000000D0   ........           _BLF     ??_Zero,??_Zero??rA
   \   000000D4   2C00A0E3           MOV      R0,#+44
   \   000000D8   400E80E3           ORR      R0,R0,#0x400
   \   000000DC   040080E0           ADD      R0,R0,R4
   \   000000E0   ........           _BLF     ??_Zero,??_Zero??rA
   \   000000E4   3800A0E3           MOV      R0,#+56
   \   000000E8   400E80E3           ORR      R0,R0,#0x400
   \   000000EC   040080E0           ADD      R0,R0,R4
   \   000000F0   ........           _BLF     ??_Zero,??_Zero??rA
   \   000000F4   ........           LDR      R3,??DataTable28  ;; ??AnsiString
   \   000000F8   1C20A0E3           MOV      R2,#+28
   \   000000FC   2810A0E3           MOV      R1,#+40
   \   00000100   440E82E3           ORR      R0,R2,#0x440
   \   00000104   040080E0           ADD      R0,R0,R4
   \   00000108   ........           _BLF     __data_vec_construct,??__data_vec_construct??rA
   \   0000010C   0420A0E1           MOV      R2,R4
   \   00000110   181087E2           ADD      R1,R7,#+24
   \   00000114   0D00A0E1           MOV      R0,SP
   \   00000118   ........           _BLF     ??insert_1,??insert??rA
    249              MyTCUPtr    = NULL;
   \   0000011C   346087E5           STR      R6,[R7, #+52]
    250              NoADFilter  =  false;
   \   00000120   0600A0E1           MOV      R0,R6
   \   00000124   D400C5E5           STRB     R0,[R5, #+212]
    251          #ifdef ANTDUSIM
    252              UnitID      = DEVICE_TDU_SIMULATOR; // We set to TCU. Will possibly be modified by other info
    253          #else
    254              UnitID      = DEVICE_TCU;   // We set to TCU. Will possibly be modified by other info
   \   00000128   2000A0E3           MOV      R0,#+32
   \   0000012C   800285E5           STR      R0,[R5, #+640]
    255          #endif
    256              TCUAddress  = Address;
   \   00000130   880295E5           LDR      R0,[R5, #+648]
   \   00000134   8C0285E5           STR      R0,[R5, #+652]
    257              Initiate();
   \   00000138   0400A0E1           MOV      R0,R4
   \   0000013C   ........           BL       ??Initiate
    258              if (TSNConfigInfo::ConfigInfoPtr) ActualDataVersion = TSNConfigInfo::ConfigInfoPtr->PrevConfigDataRevision;
   \   00000140   ........           LDR      R0,??DataTable29  ;; ??ConfigInfoPtr
   \   00000144   000090E5           LDR      R0,[R0, #+0]
   \   00000148   000050E3           CMP      R0,#+0
   \   0000014C   3C019015           LDRNE    R0,[R0, #+316]
   \   00000150   BA0BC511           STRHNE   R0,[R5, #+186]
    259              if (PROProjectInfo::PROProjectInfoPtr) strncpy(ActualSystemID, PROProjectInfo::PROProjectInfoPtr->ProjectName.c_str(), ANPRO10_ID_LENGTH);
   \   00000154   ........           LDR      R0,??DataTable30  ;; ??PROProjectInfoPtr
   \   00000158   000090E5           LDR      R0,[R0, #+0]
   \   0000015C   000050E3           CMP      R0,#+0
   \   00000160   0700000A           BEQ      ??PROTanksystemUnit_27
   \   00000164   ........           LDR      R0,??DataTable31  ;; ??ProjectName
   \   00000168   ........           _BLF     ??c_str,??c_str??rA
   \   0000016C   1420A0E3           MOV      R2,#+20
   \   00000170   0010A0E1           MOV      R1,R0
   \   00000174   4A00A0E3           MOV      R0,#+74
   \   00000178   400F80E3           ORR      R0,R0,#0x100
   \   0000017C   040080E0           ADD      R0,R0,R4
   \   00000180   ........           _BLF     strncpy,??strncpy??rA
    260              ActualProgramVersion.ProdNo       = 0;
   \                     ??PROTanksystemUnit_27:
   \   00000184   BC60C5E5           STRB     R6,[R5, #+188]
    261              ActualProgramVersion.PacketFormat = 0;
   \   00000188   BD60C5E5           STRB     R6,[R5, #+189]
    262              ActualProgramVersion.NewFunctions = 0;
   \   0000018C   BE60C5E5           STRB     R6,[R5, #+190]
    263              ActualProgramVersion.Build        = 0;
   \   00000190   BF60C5E5           STRB     R6,[R5, #+191]
    264              ActualBootVersion.ProdNo          = 0;
   \   00000194   C060C5E5           STRB     R6,[R5, #+192]
    265              ActualBootVersion.PacketFormat    = 0;
   \   00000198   C160C5E5           STRB     R6,[R5, #+193]
    266              ActualBootVersion.NewFunctions    = 0;
   \   0000019C   C260C5E5           STRB     R6,[R5, #+194]
    267              ActualBootVersion.Build           = 0;
   \   000001A0   C360C5E5           STRB     R6,[R5, #+195]
    268          
    269          #ifdef S2TXU
    270              CtrlBuzzerPtr = new CtrlBuzzer();
   \   000001A4   4F0FA0E3           MOV      R0,#+316
   \   000001A8   ........           _BLF     `??operator new`,`??operator new??rA`
   \   000001AC   0070B0E1           MOVS     R7,R0
   \   000001B0   0100000A           BEQ      ??PROTanksystemUnit_28
   \   000001B4   ........           _BLF     ??CtrlBuzzer,??CtrlBuzzer??rA
   \   000001B8   000000EA           B        ??PROTanksystemUnit_29
   \                     ??PROTanksystemUnit_28:
   \   000001BC   0070A0E3           MOV      R7,#+0
   \                     ??PROTanksystemUnit_29:
   \   000001C0   E07285E5           STR      R7,[R5, #+736]
    271          #endif
    272              CtrlLightPtr  = new CtrlLight();
   \   000001C4   4F0FA0E3           MOV      R0,#+316
   \   000001C8   ........           _BLF     `??operator new`,`??operator new??rA`
   \   000001CC   0070B0E1           MOVS     R7,R0
   \   000001D0   0100000A           BEQ      ??PROTanksystemUnit_30
   \   000001D4   ........           _BLF     ??CtrlLight,??CtrlLight??rA
   \   000001D8   000000EA           B        ??PROTanksystemUnit_31
   \                     ??PROTanksystemUnit_30:
   \   000001DC   0070A0E3           MOV      R7,#+0
    273          #ifdef ANTDUSIM
    274              HWDeviceId  = DEVICE_TDU_SIMULATOR;
    275          #else
    276              switch (CurrentDeviceId) {
   \                     ??PROTanksystemUnit_31:
   \   000001E0   ........           LDR      R0,??DataTable32  ;; CurrentDeviceId
   \   000001E4   E47285E5           STR      R7,[R5, #+740]
   \   000001E8   F000D0E1           LDRSH    R0,[R0, #+0]
   \   000001EC   210050E3           CMP      R0,#+33
    277              case DEVICE_TCU_R1:
    278                  HWDeviceId = TCU_R1;
    279                  break;
    280              case DEVICE_TCU   :
    281              case DEVICE_TCU_R2:
    282                  HWDeviceId = TCU_R2;
   \   000001F0   0160A013           MOVNE    R6,#+1
   \   000001F4   8462C5E5           STRB     R6,[R5, #+644]
    283                  break;
    284              default:
    285                  // Should not get here!!!
    286                  // Should consider to give a warning EHSMark
    287                  HWDeviceId = TCU_R2;
    288                  break;
    289          
    290                  /*
    291              case DEVICE_TDU_R1:
    292                  HWDeviceId = TDU_R1;
    293                  break;
    294              case DEVICE_TDU   :
    295              case DEVICE_TDU_R2:
    296                  HWDeviceId = TDU_R2;
    297                  break;
    298              case DEVICE_PCSW  :
    299                  HWDeviceId = TXU_IS_PC;
    300                  break;
    301                  */
    302              }
    303          #endif
    304          }
   \   000001F8   0400A0E1           MOV      R0,R4
   \   000001FC   F640BDE8           POP      {R1,R2,R4-R7,LR}
   \   00000200   1EFF2FE1           BX       LR               ;; return
    305          

   \                                 In segment CODE, align 4, keep-with-next
    306          void PROTanksystemUnit::Initiate(void) {
   \                     ??Initiate:
   \   00000000   F04F2DE9           PUSH     {R4-R11,LR}
    307              TanksystemUnitSet.insert(this);
   \   00000004   ........           LDR      R7,??DataTable39  ;; ??TanksystemUnitSet
   \   00000008   58D04DE2           SUB      SP,SP,#+88
   \   0000000C   0040A0E1           MOV      R4,R0
   \   00000010   0420A0E1           MOV      R2,R4
   \   00000014   0710A0E1           MOV      R1,R7
   \   00000018   0C008DE2           ADD      R0,SP,#+12
   \   0000001C   ........           _BLF     ??insert_1,??insert??rA
    308              IDNumber = (C_PRO_TANKSYS_UNIT << 16) + TanksystemUnitSet.size();
   \   00000020   100097E5           LDR      R0,[R7, #+16]
   \   00000024   9C5084E2           ADD      R5,R4,#+156
   \   00000028   4016A0E3           MOV      R1,#+67108864
   \   0000002C   7E1881E3           ORR      R1,R1,#0x7E0000
   \   00000030   000081E0           ADD      R0,R1,R0
   \   00000034   000085E5           STR      R0,[R5, #+0]
    309              Type = C_PRO_TANKSYS_UNIT;
   \   00000038   2108A0E1           MOV      R0,R1, LSR #+16
    310              IOUnit::GlobalHW_UnitSet.insert(this);
   \   0000003C   ........           LDR      R1,??DataTable41  ;; ??GlobalHW_UnitSet
   \   00000040   040085E5           STR      R0,[R5, #+4]
   \   00000044   0420A0E1           MOV      R2,R4
   \   00000048   14008DE2           ADD      R0,SP,#+20
   \   0000004C   ........           _BLF     ??insert,??insert??rA_1
    311              MyTCUPtr            = NULL;
   \   00000050   0060A0E3           MOV      R6,#+0
   \   00000054   346087E5           STR      R6,[R7, #+52]
    312              Internal24VSns      = NULL;
   \   00000058   D06185E5           STR      R6,[R5, #+464]
    313              External24VSns      = NULL;
   \   0000005C   D46185E5           STR      R6,[R5, #+468]
    314              CtrlBuzzerPtr       = NULL;
   \   00000060   E86285E5           STR      R6,[R5, #+744]
    315              CtrlLightPtr        = NULL;
   \   00000064   EC6285E5           STR      R6,[R5, #+748]
    316              CtrlAlarmRelayPtr1  = NULL;
   \   00000068   F06285E5           STR      R6,[R5, #+752]
    317              CtrlAlarmRelayPtr2  = NULL;
   \   0000006C   F46285E5           STR      R6,[R5, #+756]
    318              CtrlHornPtr         = NULL;
   \   00000070   F86285E5           STR      R6,[R5, #+760]
    319              CtrlLampPtr         = NULL;
   \   00000074   FC6285E5           STR      R6,[R5, #+764]
    320              AtmRefSensor        = NULL;
   \   00000078   D86085E5           STR      R6,[R5, #+216]
    321              VoltageSetPoint     = TCU_TARGET_VOLTAGE;
   \   0000007C   4004A0E3           MOV      R0,#+1073741824
   \   00000080   700780E3           ORR      R0,R0,#0x1C00000
   \   00000084   B80285E5           STR      R0,[R5, #+696]
    322              AC_OK_Sns           = NULL;
   \   00000088   D86185E5           STR      R6,[R5, #+472]
    323              FuseSns             = NULL;
   \   0000008C   DC6185E5           STR      R6,[R5, #+476]
    324              TXUComFailureAlarm  = NULL;
   \   00000090   A06185E5           STR      R6,[R5, #+416]
    325          
    326              PowerSource        = C_TU_POWER_1; // Always set, even for TDU
   \   00000094   1300A0E3           MOV      R0,#+19
   \   00000098   800D80E3           ORR      R0,R0,#0x2000
   \   0000009C   B40285E5           STR      R0,[R5, #+692]
    327          
    328              for (int i = 0; i < MAX_COM_PORTS; i++) {
   \   000000A0   0000A0E3           MOV      R0,#+0
   \   000000A4   6A20A0E3           MOV      R2,#+106
    329                  Channels[i] = NULL;
   \                     ??Initiate_1:
   \   000000A8   001184E0           ADD      R1,R4,R0, LSL #+2
   \   000000AC   686381E5           STR      R6,[R1, #+872]
    330                  PortKey[i] = C_NONE;
   \   000000B0   342381E5           STR      R2,[R1, #+820]
    331              }
   \   000000B4   010080E2           ADD      R0,R0,#+1
   \   000000B8   070050E3           CMP      R0,#+7
   \   000000BC   F9FFFFBA           BLT      ??Initiate_1
    332              for (int i = 0; i < MAX_TCU_AD_CHANNELS; i++) {
   \   000000C0   0000A0E3           MOV      R0,#+0
    333                  float InitADResults[MAX_TCU_AD_CHANNELS] = { 0.0, 20.0, 20.0, 3.3, 1.8, 0.0, 5.0, 0.0 };
   \                     ??Initiate_2:
   \   000000C4   ........           LDR      R2,??Subroutine49_0  ;; `?<Constant {(0.0F), (20.0F), (20.0F), (3.29999`
   \   000000C8   1C108DE2           ADD      R1,SP,#+28
   \   000000CC   885F92E8           LDM      R2,{R3,R7-R12,LR}
    334                  ADResults[i] = InitADResults[i];
   \   000000D0   1C208DE2           ADD      R2,SP,#+28
   \   000000D4   885F81E8           STM      R1,{R3,R7-R12,LR}
   \   000000D8   002192E7           LDR      R2,[R2, +R0, LSL #+2]
   \   000000DC   001184E0           ADD      R1,R4,R0, LSL #+2
   \   000000E0   7C2181E5           STR      R2,[R1, #+380]
    335              }
   \   000000E4   010080E2           ADD      R0,R0,#+1
   \   000000E8   080050E3           CMP      R0,#+8
   \   000000EC   F4FFFFBA           BLT      ??Initiate_2
    336              for (int i = 0; i < MAX_COM_PORTS; i++) {
   \   000000F0   0000A0E3           MOV      R0,#+0
   \   000000F4   0070A0E1           MOV      R7,R0
    337                  RxLoad[i] = 0.0;
   \                     ??Initiate_3:
   \   000000F8   001184E0           ADD      R1,R4,R0, LSL #+2
   \   000000FC   9C7181E5           STR      R7,[R1, #+412]
    338                  TxLoad[i] = 0.0;
   \   00000100   B87181E5           STR      R7,[R1, #+440]
    339                  TxCnt[i] = 0;
   \   00000104   D46181E5           STR      R6,[R1, #+468]
    340                  RxCnt[i] = 0;
   \   00000108   F06181E5           STR      R6,[R1, #+496]
    341          
    342              }
   \   0000010C   010080E2           ADD      R0,R0,#+1
   \   00000110   070050E3           CMP      R0,#+7
   \   00000114   F7FFFFBA           BLT      ??Initiate_3
    343          #if defined(S2TXU) || defined(ANBOOTLOADER)
    344              LastOSErr             = LastOSError;
   \   00000118   ........           LDR      R0,??Subroutine49_0+0x4  ;; 0x31fff010
   \   0000011C   001090E5           LDR      R1,[R0, #+0]
   \   00000120   7011C5E5           STRB     R1,[R5, #+368]
    345              LastErrAddr           = LastErrAddress;
   \   00000124   381090E5           LDR      R1,[R0, #+56]
   \   00000128   741185E5           STR      R1,[R5, #+372]
    346              FlashErrStatus        = FlashErrorStatus;
   \   0000012C   081090E5           LDR      R1,[R0, #+8]
   \   00000130   7811C5E5           STRB     R1,[R5, #+376]
    347              RunningHours          = 0.0;
   \   00000134   987185E5           STR      R7,[R5, #+408]
    348              LastOSErrTask         = LastOSErrorTask;
   \   00000138   0C1080E2           ADD      R1,R0,#+12
   \   0000013C   3C008DE2           ADD      R0,SP,#+60
   \   00000140   ........           _BLF     ??AnsiString_1,??AnsiString??rA_1
   \   00000144   ........           LDR      R1,??DataTable55  ;; ??npos
   \   00000148   0020A0E3           MOV      R2,#+0
   \   0000014C   003091E5           LDR      R3,[R1, #+0]
   \   00000150   0010A0E1           MOV      R1,R0
   \   00000154   860F84E2           ADD      R0,R4,#+536
   \   00000158   ........           _BLF     ??assign,??assign??rA
   \   0000015C   0620A0E1           MOV      R2,R6
   \   00000160   0110A0E3           MOV      R1,#+1
   \   00000164   3C008DE2           ADD      R0,SP,#+60
   \   00000168   ........           _BLF     ??_Tidy,??_Tidy??rA
    349          #else
    350              LastOSErr             = 0;
    351              LastErrAddr           = 0;
    352              FlashErrStatus        = 0;
    353              RunningHours          = 0.0;
    354              LastOSErrTask    = "Unknown";
    355          #endif
    356              RxErrId          = 0;
   \   0000016C   A86385E5           STR      R6,[R5, #+936]
    357              RxErrCmd         = 0;
   \   00000170   AC6385E5           STR      R6,[R5, #+940]
    358              RxErrMsg         = 0;
   \   00000174   B06385E5           STR      R6,[R5, #+944]
    359              RxErrCnt         = 0;
   \   00000178   B46385E5           STR      R6,[R5, #+948]
    360              RxErrTime        = time(NULL);
   \   0000017C   0600A0E1           MOV      R0,R6
   \   00000180   ........           _BLF     time,??time??rA
   \   00000184   B80385E5           STR      R0,[R5, #+952]
    361          
    362              SysInfoRxFailCnt = 0;
   \   00000188   BC6385E5           STR      R6,[R5, #+956]
    363              IOLoadDelay      = 0;
   \   0000018C   9C6185E5           STR      R6,[R5, #+412]
    364              RawLoad          = 0.0;
   \   00000190   A47185E5           STR      R7,[R5, #+420]
    365              AvgLoad          = 0.0;
   \   00000194   A87185E5           STR      R7,[R5, #+424]
    366              MaxLoad          = 0.0;
   \   00000198   AC7185E5           STR      R7,[R5, #+428]
    367              ActualDataVersion = 0;
   \   0000019C   B26CC5E1           STRH     R6,[R5, #+194]
    368          #if defined(S2TXU) | defined(ANTDUSIM)
    369          #else
    370              {
    371                  struct TransArray{
    372                      WORD LanguageID, CharacterSet;
    373                  };
    374                  DWORD VerInfo, VerSize;
    375                  HANDLE MemHandle;
    376                  LPVOID MemPtr, BufferPtr;
    377                  UINT BufferLength;
    378                  TransArray *Array;
    379                  char QueryBlock[40];
    380          
    381                  // Get the product name and version from the
    382                  // applications version information.
    383                  AnsiString Path(Application->ExeName);
    384                  VerSize = GetFileVersionInfoSize(Path.c_str(), &VerInfo);
    385                  if (VerSize > 0) {
    386                      MemHandle = GlobalAlloc(GMEM_MOVEABLE, VerSize);
    387                      MemPtr = GlobalLock(MemHandle);
    388                      GetFileVersionInfo(Path.c_str(), VerInfo, VerSize, MemPtr);
    389                      VerQueryValue(MemPtr, "\\VarFileInfo\\Translation", &BufferPtr,
    390                                    &BufferLength);
    391                      Array = (TransArray *)BufferPtr;
    392                      // Get the product FileVersion.
    393                      wsprintf(QueryBlock, "\\StringFileInfo\\%04x%04x\\FileVersion",
    394                               Array[0].LanguageID, Array[0].CharacterSet);
    395                      VerQueryValue(MemPtr, QueryBlock, &BufferPtr, &BufferLength);
    396                      // Set the version caption.
    397                      ProgramVersion = (char *)BufferPtr;
    398                  }
    399          
    400              }
    401          
    402          #endif
    403              for (unsigned i = 0; i < MAX_COM_PORTS; i++) {
    404                  vector<DeviceData>tmpDeviceData;
   \                     ??Initiate_4:
   \   000001A0   0D00A0E1           MOV      R0,SP
   \   000001A4   ........           _BLF     ??_Zero,??_Zero??rA
    405                  DeviceDataVector.push_back(tmpDeviceData);
   \   000001A8   0D10A0E1           MOV      R1,SP
   \   000001AC   D70F84E2           ADD      R0,R4,#+860
   \   000001B0   ........           _BLF     ??_Push_back0_2,??_Push_back0??rA
    406              }
   \   000001B4   0D00A0E1           MOV      R0,SP
   \   000001B8   ........           _BLF     ??_Tidy0,??_Tidy0??rA
   \   000001BC   0D00A0E1           MOV      R0,SP
   \   000001C0   ........           _BLF     ??_Zero,??_Zero??rA
   \   000001C4   017087E2           ADD      R7,R7,#+1
   \   000001C8   070057E3           CMP      R7,#+7
   \   000001CC   F3FFFF3A           BCC      ??Initiate_4
    407              for (int i = 0; i < MAX_ANPRO10_NUMBER_OF_TASKS; i++) {
   \   000001D0   0000A0E3           MOV      R0,#+0
    408                  StackUsed[i] = 0;
   \                     ??Initiate_5:
   \   000001D4   001184E0           ADD      R1,R4,R0, LSL #+2
   \   000001D8   BC6881E5           STR      R6,[R1, #+2236]
    409                  RawPerformance[i] = 0;
   \   000001DC   5C6981E5           STR      R6,[R1, #+2396]
    410              }
   \   000001E0   010080E2           ADD      R0,R0,#+1
   \   000001E4   280050E3           CMP      R0,#+40
   \   000001E8   F9FFFFBA           BLT      ??Initiate_5
    411              NumberOfTasks = 0;
   \   000001EC   006A85E5           STR      R6,[R5, #+2560]
    412          }
   \   000001F0   58D08DE2           ADD      SP,SP,#+88
   \   000001F4                      REQUIRE ?Subroutine49
   \   000001F4                      ;; // Fall through to label ?Subroutine49
    413          

   \                                 In segment CODE, align 4, keep-with-next
    414          void PROTanksystemUnit::InitTDUWinUarts(void) {
   \                     ??InitTDUWinUarts:
   \   00000000   F0432DE9           PUSH     {R4-R9,LR}
    415          #ifndef WIN32
    416              int tmpPrinterUart = -1;
    417              switch ( OS_UART ) { // port is reserved for debugging
    418                  case -1:
    419                  new SC2410Uart(0,DEFAULT_BOOT_BAUDRATE  ,8,1,'N',32*1024,C_UART_DEVICE_TCU,C_UART_HWPRO_232,C_UART_SWPRO_ANPRO10,Master);
   \   00000004   ........           LDR      R9,??DataTable36  ;; Master
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   0000A0E3           MOV      R0,#+0
   \   00000010   01002DE9           PUSH     {R0}
   \   00000014   01002DE9           PUSH     {R0}
   \   00000018   01002DE9           PUSH     {R0}
   \   0000001C   01002DE9           PUSH     {R0}
   \   00000020   0000D9E5           LDRB     R0,[R9, #+0]
   \   00000024   405BA0E3           MOV      R5,#+65536
   \   00000028   C25C85E3           ORR      R5,R5,#0xC200
   \   0000002C   6360A0E3           MOV      R6,#+99
   \   00000030   7C6D86E3           ORR      R6,R6,#0x1F00
   \   00000034   187046E2           SUB      R7,R6,#+24
   \   00000038   0C8046E2           SUB      R8,R6,#+12
   \   0000003C   01002DE9           PUSH     {R0}
   \   00000040   0800A0E1           MOV      R0,R8
   \   00000044   01002DE9           PUSH     {R0}
   \   00000048   0700A0E1           MOV      R0,R7
   \   0000004C   01002DE9           PUSH     {R0}
   \   00000050   0600A0E1           MOV      R0,R6
   \   00000054   01002DE9           PUSH     {R0}
   \   00000058   800CA0E3           MOV      R0,#+32768
   \   0000005C   01002DE9           PUSH     {R0}
   \   00000060   4E00A0E3           MOV      R0,#+78
   \   00000064   01002DE9           PUSH     {R0}
   \   00000068   0130A0E3           MOV      R3,#+1
   \   0000006C   0820A0E3           MOV      R2,#+8
   \   00000070   0510A0E1           MOV      R1,R5
   \   00000074   0000A0E3           MOV      R0,#+0
   \   00000078   ........           _BLF     `??new SC2410Uart`,`??new SC2410Uart??rA`
   \   0000007C   28D08DE2           ADD      SP,SP,#+40
    420                  new SC2410Uart(1,PRINTER_BAUDRATE   ,8,1,'N',32*1024,C_UART_DEVICE_PRINTER,C_UART_HWPRO_232,C_UART_SWPRO_PRINTER,Master);
   \   00000080   0000A0E3           MOV      R0,#+0
   \   00000084   01002DE9           PUSH     {R0}
   \   00000088   01002DE9           PUSH     {R0}
   \   0000008C   01002DE9           PUSH     {R0}
   \   00000090   01002DE9           PUSH     {R0}
   \   00000094   0000D9E5           LDRB     R0,[R9, #+0]
   \   00000098   0130A0E3           MOV      R3,#+1
   \   0000009C   0820A0E3           MOV      R2,#+8
   \   000000A0   01002DE9           PUSH     {R0}
   \   000000A4   0A0046E2           SUB      R0,R6,#+10
   \   000000A8   01002DE9           PUSH     {R0}
   \   000000AC   80002DE9           PUSH     {R7}
   \   000000B0   1A0080E2           ADD      R0,R0,#+26
   \   000000B4   01002DE9           PUSH     {R0}
   \   000000B8   800CA0E3           MOV      R0,#+32768
   \   000000BC   01002DE9           PUSH     {R0}
   \   000000C0   4E00A0E3           MOV      R0,#+78
   \   000000C4   01002DE9           PUSH     {R0}
   \   000000C8   4B1CA0E3           MOV      R1,#+19200
   \   000000CC   0100A0E3           MOV      R0,#+1
   \   000000D0   ........           _BLF     `??new SC2410Uart`,`??new SC2410Uart??rA`
   \   000000D4   28D08DE2           ADD      SP,SP,#+40
    421                  new SC2410Uart(2,DEFAULT_BOOT_BAUDRATE  ,8,1,'N',32*1024,C_UART_DEVICE_TCU,C_UART_HWPRO_485,C_UART_SWPRO_ANPRO10,Master);
   \   000000D8   0000A0E3           MOV      R0,#+0
   \   000000DC   01002DE9           PUSH     {R0}
   \   000000E0   01002DE9           PUSH     {R0}
   \   000000E4   01002DE9           PUSH     {R0}
   \   000000E8   01002DE9           PUSH     {R0}
   \   000000EC   0000D9E5           LDRB     R0,[R9, #+0]
   \   000000F0   0130A0E3           MOV      R3,#+1
   \   000000F4   0820A0E3           MOV      R2,#+8
   \   000000F8   01002DE9           PUSH     {R0}
   \   000000FC   00012DE9           PUSH     {R8}
   \   00000100   170046E2           SUB      R0,R6,#+23
   \   00000104   01002DE9           PUSH     {R0}
   \   00000108   40002DE9           PUSH     {R6}
   \   0000010C   800CA0E3           MOV      R0,#+32768
   \   00000110   01002DE9           PUSH     {R0}
   \   00000114   4E00A0E3           MOV      R0,#+78
   \   00000118   01002DE9           PUSH     {R0}
   \   0000011C   0510A0E1           MOV      R1,R5
   \   00000120   0200A0E3           MOV      R0,#+2
   \   00000124   ........           _BLF     `??new SC2410Uart`,`??new SC2410Uart??rA`
   \   00000128   28D08DE2           ADD      SP,SP,#+40
    422                  tmpPrinterUart = 1;
    423                  break;
    424                  case 0:
    425                  new SC2410Uart(1,PRINTER_BAUDRATE   ,8,1,'N',32*1024,C_UART_DEVICE_PRINTER,C_UART_HWPRO_232,C_UART_SWPRO_PRINTER,Master);
    426                  new SC2410Uart(2,DEFAULT_BOOT_BAUDRATE  ,8,1,'N',32*1024,C_UART_DEVICE_TCU,C_UART_HWPRO_485,C_UART_SWPRO_ANPRO10,Master);
    427                  tmpPrinterUart = 1;
    428                  break;
    429                  case 1:
    430                  new SC2410Uart(0,DEFAULT_BOOT_BAUDRATE  ,8,1,'N',32*1024,C_UART_DEVICE_TCU,C_UART_HWPRO_232,C_UART_SWPRO_ANPRO10,Master);
    431                  new SC2410Uart(2,DEFAULT_BOOT_BAUDRATE  ,8,1,'N',32*1024,C_UART_DEVICE_TCU,C_UART_HWPRO_485,C_UART_SWPRO_ANPRO10,Master);
    432                  break;
    433              }
    434              if ( tmpPrinterUart != -1 ) {
    435                  PROPrinter *PPtr = new PROPrinter(tmpPrinterUart,this->UnitID,this->Address);
   \   0000012C   2C2394E5           LDR      R2,[R4, #+812]
   \   00000130   241394E5           LDR      R1,[R4, #+804]
   \   00000134   0100A0E3           MOV      R0,#+1
   \   00000138   ........           _BLF     `??new PROPrinter`,`??new PROPrinter??rA`
    436              }
    437          #endif
    438              for (int Count = 0; Count < MAX_COM_PORTS; Count++) {
   \   0000013C   0000A0E3           MOV      R0,#+0
    439                  Channels[Count] = TSNUart::Channels[Count];
   \                     ??InitTDUWinUarts_1:
   \   00000140   ........           LDR      R2,??DataTable40  ;; ??Channels
   \   00000144   001184E0           ADD      R1,R4,R0, LSL #+2
   \   00000148   002192E7           LDR      R2,[R2, +R0, LSL #+2]
    440              }
   \   0000014C   010080E2           ADD      R0,R0,#+1
   \   00000150   682381E5           STR      R2,[R1, #+872]
   \   00000154   070050E3           CMP      R0,#+7
   \   00000158   F8FFFFBA           BLT      ??InitTDUWinUarts_1
    441          
    442          
    443          }
   \   0000015C                      REQUIRE ?Subroutine50
   \   0000015C                      ;; // Fall through to label ?Subroutine50
    444          

   \                                 In segment CODE, align 4, keep-with-next
    445          PROTanksystemUnit::~PROTanksystemUnit(void) {
   \                     `?~PROTanksystemUnit`:
   \   00000000   F04F2DE9           PUSH     {R4-R11,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
   \   0000000C   000054E3           CMP      R4,#+0
   \   00000010   BF00000A           BEQ      `?~PROTanksystemUnit_1`
   \   00000014   ........           LDR      R0,??DataTable38  ;; ??__vtbl
   \   00000018   A40084E5           STR      R0,[R4, #+164]
    446              if (TXUComFailureAlarm) delete TXUComFailureAlarm;
   \   0000001C   3C0294E5           LDR      R0,[R4, #+572]
   \   00000020   000050E3           CMP      R0,#+0
   \   00000024   0400000A           BEQ      `?~PROTanksystemUnit_2`
   \   00000028   A42090E5           LDR      R2,[R0, #+164]
   \   0000002C   0310A0E3           MOV      R1,#+3
   \   00000030   002092E5           LDR      R2,[R2, #+0]
   \   00000034   0FE0A0E1           MOV      LR,PC
   \   00000038   12FF2FE1           BX       R2
    447              TanksystemUnitSet.erase(this);
   \                     `?~PROTanksystemUnit_2`:
   \   0000003C   ........           LDR      R6,??DataTable39  ;; ??TanksystemUnitSet
   \   00000040   0410A0E1           MOV      R1,R4
   \   00000044   0600A0E1           MOV      R0,R6
   \   00000048   ........           _BLF     ??erase_3,??erase??rA_2
    448              if (!CreatedFromUart) {
   \   0000004C   7001D4E5           LDRB     R0,[R4, #+368]
   \   00000050   000050E3           CMP      R0,#+0
   \   00000054   0200001A           BNE      `?~PROTanksystemUnit_3`
    449                  TanksystemTCUSet.erase(this);
   \   00000058   0410A0E1           MOV      R1,R4
   \   0000005C   180086E2           ADD      R0,R6,#+24
   \   00000060   ........           _BLF     ??erase_3,??erase??rA_2
    450              }
    451              for (int i = 0; i < MAX_COM_PORTS; i++) {
   \                     `?~PROTanksystemUnit_3`:
   \   00000064   0060A0E3           MOV      R6,#+0
   \   00000068   0080A0E3           MOV      R8,#+0
   \   0000006C   9FAFA0E3           MOV      R10,#+636
    452                  if (Channels[i]) {
   \                     `?~PROTanksystemUnit_4`:
   \   00000070   067184E0           ADD      R7,R4,R6, LSL #+2
   \   00000074   680397E5           LDR      R0,[R7, #+872]
   \   00000078   000050E3           CMP      R0,#+0
   \   0000007C   0600000A           BEQ      `?~PROTanksystemUnit_5`
    453                      delete Channels[i];
   \   00000080   ........           _BLF     `??delete ~TSNUart`,`??delete ~TSNUart??rA`
    454                      if (Channels[i] == TSNUart::Channels[i]) {
   \   00000084   ........           LDR      R0,??DataTable40  ;; ??Channels
   \   00000088   681397E5           LDR      R1,[R7, #+872]
   \   0000008C   062190E7           LDR      R2,[R0, +R6, LSL #+2]
   \   00000090   020051E1           CMP      R1,R2
    455                          TSNUart::Channels[i] = NULL;
   \   00000094   06818007           STREQ    R8,[R0, +R6, LSL #+2]
    456                      }
    457                      Channels[i] = NULL;
   \   00000098   688387E5           STR      R8,[R7, #+872]
    458                  }
    459                  PortKey[i] = C_NONE;
   \                     `?~PROTanksystemUnit_5`:
   \   0000009C   6A00A0E3           MOV      R0,#+106
   \   000000A0   340387E5           STR      R0,[R7, #+820]
    460                  set<PRogramObjectBase *>::iterator pBIt;
    461                  for (pBIt = UnitPortList[i].begin(); pBIt != UnitPortList[i].end(); pBIt++) {
   \   000000A4   1800A0E3           MOV      R0,#+24
   \   000000A8   904629E0           MLA      R9,R0,R6,R4
   \   000000AC   09B09AE7           LDR      R11,[R10, +R9]
   \   000000B0   120000EA           B        `?~PROTanksystemUnit_6`
    462                      PRogramObjectBase *IOElement = (*pBIt);
    463                      //can not delete all PRO
    464                      switch (PortKey[i]) {
   \                     `?~PROTanksystemUnit_7`:
   \   000000B4   340397E5           LDR      R0,[R7, #+820]
   \   000000B8   10209BE5           LDR      R2,[R11, #+16]
   \   000000BC   B810A0E3           MOV      R1,#+184
   \   000000C0   7C1D81E3           ORR      R1,R1,#0x1F00
   \   000000C4   010050E1           CMP      R0,R1
   \   000000C8   21108112           ADDNE    R1,R1,#+33
   \   000000CC   01005011           CMPNE    R0,R1
   \   000000D0   0700001A           BNE      `?~PROTanksystemUnit_8`
    465                      case C_TCU_COM_232_TDU:
    466                      case C_TCU_COM_485_TDU:
    467                          // TDUs are all created by the TCU object and thus can be deleted
    468                          delete IOElement;
   \   000000D4   000052E3           CMP      R2,#+0
   \   000000D8   0500000A           BEQ      `?~PROTanksystemUnit_8`
   \   000000DC   0200A0E1           MOV      R0,R2
   \   000000E0   A42092E5           LDR      R2,[R2, #+164]
   \   000000E4   0310A0E3           MOV      R1,#+3
   \   000000E8   002092E5           LDR      R2,[R2, #+0]
   \   000000EC   0FE0A0E1           MOV      LR,PC
   \   000000F0   12FF2FE1           BX       R2
    469                          IOElement = NULL;
    470                      case C_TCU_COM_232_PC:
    471                      case C_TCU_COM_485_ZB:
    472                          //delete IOElement;
    473                          //IOElement = NULL;
    474                          break;
    475                      case C_TCU_COM_232_PROT3:
    476                      case C_TCU_COM_485_PROT3: //Deleted elsewhere??? EHSMark
    477                      case C_TCU_COM_485_TPC:
    478                          //IOElement = NULL;
    479                          break;
    480                      }
    481                  }
   \                     `?~PROTanksystemUnit_8`:
   \   000000F4   0B00A0E1           MOV      R0,R11
   \   000000F8   ........           _BLF     ??_IncP,??_IncP??rA
   \   000000FC   00B0A0E1           MOV      R11,R0
   \                     `?~PROTanksystemUnit_6`:
   \   00000100   09008AE0           ADD      R0,R10,R9
   \   00000104   00005BE1           CMP      R11,R0
   \   00000108   E9FFFF1A           BNE      `?~PROTanksystemUnit_7`
    482                  UnitPortList[i].clear();
   \   0000010C   ........           _BLF     ??clear,??clear??rA
    483              }
   \   00000110   016086E2           ADD      R6,R6,#+1
   \   00000114   070056E3           CMP      R6,#+7
   \   00000118   D4FFFFBA           BLT      `?~PROTanksystemUnit_4`
    484              if (CtrlBuzzerPtr) {
   \   0000011C   840394E5           LDR      R0,[R4, #+900]
   \   00000120   000050E3           CMP      R0,#+0
   \   00000124   0600000A           BEQ      `?~PROTanksystemUnit_9`
    485                  delete CtrlBuzzerPtr;
   \   00000128   0400000A           BEQ      `?~PROTanksystemUnit_10`
   \   0000012C   A42090E5           LDR      R2,[R0, #+164]
   \   00000130   0310A0E3           MOV      R1,#+3
   \   00000134   002092E5           LDR      R2,[R2, #+0]
   \   00000138   0FE0A0E1           MOV      LR,PC
   \   0000013C   12FF2FE1           BX       R2
    486                  CtrlBuzzerPtr = NULL;
   \                     `?~PROTanksystemUnit_10`:
   \   00000140   848384E5           STR      R8,[R4, #+900]
    487              }
    488              if (CtrlLightPtr) {
   \                     `?~PROTanksystemUnit_9`:
   \   00000144   880394E5           LDR      R0,[R4, #+904]
   \   00000148   000050E3           CMP      R0,#+0
   \   0000014C   0600000A           BEQ      `?~PROTanksystemUnit_11`
    489                  delete CtrlLightPtr;
   \   00000150   0400000A           BEQ      `?~PROTanksystemUnit_12`
   \   00000154   A42090E5           LDR      R2,[R0, #+164]
   \   00000158   0310A0E3           MOV      R1,#+3
   \   0000015C   002092E5           LDR      R2,[R2, #+0]
   \   00000160   0FE0A0E1           MOV      LR,PC
   \   00000164   12FF2FE1           BX       R2
    490                  CtrlLightPtr = NULL;
   \                     `?~PROTanksystemUnit_12`:
   \   00000168   888384E5           STR      R8,[R4, #+904]
    491              }
    492              if (CtrlAlarmRelayPtr1) {
   \                     `?~PROTanksystemUnit_11`:
   \   0000016C   8C0394E5           LDR      R0,[R4, #+908]
   \   00000170   000050E3           CMP      R0,#+0
   \   00000174   0600000A           BEQ      `?~PROTanksystemUnit_13`
    493                  delete CtrlAlarmRelayPtr1;
   \   00000178   0400000A           BEQ      `?~PROTanksystemUnit_14`
   \   0000017C   A42090E5           LDR      R2,[R0, #+164]
   \   00000180   0310A0E3           MOV      R1,#+3
   \   00000184   002092E5           LDR      R2,[R2, #+0]
   \   00000188   0FE0A0E1           MOV      LR,PC
   \   0000018C   12FF2FE1           BX       R2
    494                  CtrlAlarmRelayPtr1 = NULL;
   \                     `?~PROTanksystemUnit_14`:
   \   00000190   8C8384E5           STR      R8,[R4, #+908]
    495              }
    496              if (CtrlAlarmRelayPtr2) {
   \                     `?~PROTanksystemUnit_13`:
   \   00000194   900394E5           LDR      R0,[R4, #+912]
   \   00000198   000050E3           CMP      R0,#+0
   \   0000019C   0600000A           BEQ      `?~PROTanksystemUnit_15`
    497                  delete CtrlAlarmRelayPtr2;
   \   000001A0   0400000A           BEQ      `?~PROTanksystemUnit_16`
   \   000001A4   A42090E5           LDR      R2,[R0, #+164]
   \   000001A8   0310A0E3           MOV      R1,#+3
   \   000001AC   002092E5           LDR      R2,[R2, #+0]
   \   000001B0   0FE0A0E1           MOV      LR,PC
   \   000001B4   12FF2FE1           BX       R2
    498                  CtrlAlarmRelayPtr2 = NULL;
   \                     `?~PROTanksystemUnit_16`:
   \   000001B8   908384E5           STR      R8,[R4, #+912]
    499              }
    500              if (CtrlHornPtr) {
   \                     `?~PROTanksystemUnit_15`:
   \   000001BC   940394E5           LDR      R0,[R4, #+916]
   \   000001C0   000050E3           CMP      R0,#+0
   \   000001C4   0600000A           BEQ      `?~PROTanksystemUnit_17`
    501                  delete CtrlHornPtr;
   \   000001C8   0400000A           BEQ      `?~PROTanksystemUnit_18`
   \   000001CC   A42090E5           LDR      R2,[R0, #+164]
   \   000001D0   0310A0E3           MOV      R1,#+3
   \   000001D4   002092E5           LDR      R2,[R2, #+0]
   \   000001D8   0FE0A0E1           MOV      LR,PC
   \   000001DC   12FF2FE1           BX       R2
    502                  CtrlHornPtr = NULL;
   \                     `?~PROTanksystemUnit_18`:
   \   000001E0   948384E5           STR      R8,[R4, #+916]
    503              }
    504              if (CtrlLampPtr) {
   \                     `?~PROTanksystemUnit_17`:
   \   000001E4   980394E5           LDR      R0,[R4, #+920]
   \   000001E8   000050E3           CMP      R0,#+0
   \   000001EC   0600000A           BEQ      `?~PROTanksystemUnit_19`
    505                  delete CtrlLampPtr;
   \   000001F0   0400000A           BEQ      `?~PROTanksystemUnit_20`
   \   000001F4   A42090E5           LDR      R2,[R0, #+164]
   \   000001F8   0310A0E3           MOV      R1,#+3
   \   000001FC   002092E5           LDR      R2,[R2, #+0]
   \   00000200   0FE0A0E1           MOV      LR,PC
   \   00000204   12FF2FE1           BX       R2
    506                  CtrlLampPtr = NULL;
   \                     `?~PROTanksystemUnit_20`:
   \   00000208   988384E5           STR      R8,[R4, #+920]
    507              }
    508              IOUnit::GlobalHW_UnitSet.erase(this);
   \                     `?~PROTanksystemUnit_19`:
   \   0000020C   ........           LDR      R0,??DataTable41  ;; ??GlobalHW_UnitSet
   \   00000210   0410A0E1           MOV      R1,R4
   \   00000214   ........           _BLF     ??erase_2,??erase??rA_3
    509          }
   \   00000218   F8309FE5           LDR      R3,`?~PROTanksystemUnit_21`  ;; `?~AnsiString`
   \   0000021C   1C20A0E3           MOV      R2,#+28
   \   00000220   2810A0E3           MOV      R1,#+40
   \   00000224   440E82E3           ORR      R0,R2,#0x440
   \   00000228   040080E0           ADD      R0,R0,R4
   \   0000022C   ........           _BLF     __data_vec_destroy,??__data_vec_destroy??rA
   \   00000230   6F0F8AE2           ADD      R0,R10,#+444
   \   00000234   040080E0           ADD      R0,R0,R4
   \   00000238   ........           _BLF     `?~vector_1`,`?~vector??rA`
   \   0000023C   6C0F8AE2           ADD      R0,R10,#+432
   \   00000240   040080E0           ADD      R0,R0,R4
   \   00000244   ........           _BLF     `?~vector_1`,`?~vector??rA`
   \   00000248   420E84E2           ADD      R0,R4,#+1056
   \   0000024C   ........           _BLF     `?~vector_1`,`?~vector??rA`
   \   00000250   660F8AE2           ADD      R0,R10,#+408
   \   00000254   040080E0           ADD      R0,R0,R4
   \   00000258   ........           _BLF     `?~vector_1`,`?~vector??rA`
   \   0000025C   630F8AE2           ADD      R0,R10,#+396
   \   00000260   040080E0           ADD      R0,R0,R4
   \   00000264   ........           _BLF     `?~vector_1`,`?~vector??rA`
   \   00000268   FF0F84E2           ADD      R0,R4,#+1020
   \   0000026C   ........           _BLF     `?~vector_1`,`?~vector??rA`
   \   00000270   FC0F84E2           ADD      R0,R4,#+1008
   \   00000274   ........           _BLF     `?~vector_1`,`?~vector??rA`
   \   00000278   F90F84E2           ADD      R0,R4,#+996
   \   0000027C   ........           _BLF     `?~vector_1`,`?~vector??rA`
   \   00000280   F60F84E2           ADD      R0,R4,#+984
   \   00000284   ........           _BLF     `?~vector_1`,`?~vector??rA`
   \   00000288   F30F84E2           ADD      R0,R4,#+972
   \   0000028C   ........           _BLF     `?~vector_1`,`?~vector??rA`
   \   00000290   F00F84E2           ADD      R0,R4,#+960
   \   00000294   ........           _BLF     `?~vector_1`,`?~vector??rA`
   \   00000298   ED0F84E2           ADD      R0,R4,#+948
   \   0000029C   ........           _BLF     `?~vector_1`,`?~vector??rA`
   \   000002A0   EA0F84E2           ADD      R0,R4,#+936
   \   000002A4   ........           _BLF     `?~vector_1`,`?~vector??rA`
   \   000002A8   E70F84E2           ADD      R0,R4,#+924
   \   000002AC   ........           _BLF     `?~vector_1`,`?~vector??rA`
   \   000002B0   D76F84E2           ADD      R6,R4,#+860
   \   000002B4   0600A0E1           MOV      R0,R6
   \   000002B8   ........           _BLF     ??_Tidy0_2,??_Tidy0??rA_1
   \   000002BC   0600A0E1           MOV      R0,R6
   \   000002C0   ........           _BLF     ??_Zero,??_Zero??rA
   \   000002C4   50309FE5           LDR      R3,`?~PROTanksystemUnit_21`+0x4  ;; `?~set`
   \   000002C8   1820A0E3           MOV      R2,#+24
   \   000002CC   0710A0E3           MOV      R1,#+7
   \   000002D0   04008AE0           ADD      R0,R10,R4
   \   000002D4   ........           _BLF     __data_vec_destroy,??__data_vec_destroy??rA
   \   000002D8   0020A0E3           MOV      R2,#+0
   \   000002DC   0110A0E3           MOV      R1,#+1
   \   000002E0   940F84E2           ADD      R0,R4,#+592
   \   000002E4   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000002E8   0820A0E1           MOV      R2,R8
   \   000002EC   0110A0E3           MOV      R1,#+1
   \   000002F0   860F84E2           ADD      R0,R4,#+536
   \   000002F4   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000002F8   0810A0E1           MOV      R1,R8
   \   000002FC   0400A0E1           MOV      R0,R4
   \   00000300   ........           _BLF     `?~PRogramObject`,`?~PRogramObject??rA`
   \   00000304   010015E3           TST      R5,#0x1
   \   00000308   0100000A           BEQ      `?~PROTanksystemUnit_1`
   \   0000030C   0400A0E1           MOV      R0,R4
   \   00000310   ........           _BLF     `??operator delete`,`??operator delete??rA`
   \                     `?~PROTanksystemUnit_1`:
   \   00000314   ........           B        ?Subroutine49
   \                     `?~PROTanksystemUnit_21`:
   \   00000318   ........           DC32     `?~AnsiString`
   \   0000031C   ........           DC32     `?~set`
    510          
    511          //---------------------------------------------------------------------------
    512          

   \                                 In segment CODE, align 4, keep-with-next
    513          void PROTanksystemUnit::AddAtmReferenceSensor(AIPressSensor *AtmRefSns) {
    514              AtmRefSensor = AtmRefSns;
   \                     ??AddAtmReferenceSensor:
   \   00000000   741180E5           STR      R1,[R0, #+372]
    515          }
   \   00000004   1EFF2FE1           BX       LR               ;; return
    516          
    517          //---------------------------------------------------------------------------
    518          

   \                                 In segment CODE, align 4, keep-with-next
    519          void PROTanksystemUnit::SetKeyFromUart(void) {
   \                     ??SetKeyFromUart:
   \   00000000   10002DE9           PUSH     {R4}
    520              for (int uart = 0; uart < MAX_COM_PORTS; uart++) {
   \   00000004   0010A0E3           MOV      R1,#+0
    521                  if (Channels[uart]) {
   \                     ??SetKeyFromUart_8:
   \   00000008   012180E0           ADD      R2,R0,R1, LSL #+2
   \   0000000C   683392E5           LDR      R3,[R2, #+872]
   \   00000010   000053E3           CMP      R3,#+0
   \   00000014   5700000A           BEQ      ??SetKeyFromUart_9
    522                      TSNUart *UartPtr = Channels[uart];
   \   00000018   03C0A0E1           MOV      R12,R3
    523                      switch (UartPtr->HWProtocol) {
   \   0000001C   A0309CE5           LDR      R3,[R12, #+160]
   \   00000020   4B3043E2           SUB      R3,R3,#+75
   \   00000024   7C3D43E2           SUB      R3,R3,#+7936
   \   00000028   010053E3           CMP      R3,#+1
   \   0000002C   5100008A           BHI      ??SetKeyFromUart_9
   \   00000030   014F8FE2           ADR      R4,??SetKeyFromUart_1
   \   00000034   0340D4E7           LDRB     R4,[R4, R3]
   \   00000038   04F18FE0           ADD      PC,PC,R4, LSL #+2
   \                     ??SetKeyFromUart_1:
   \   0000003C   00500000           DC8      +0,+80,+0,+0
    524                      case C_UART_HWPRO_232:
    525                          switch (UartPtr->SWProtocol) {
   \                     ??SetKeyFromUart_10:
   \   00000040   A4409CE5           LDR      R4,[R12, #+164]
   \   00000044   A8309CE5           LDR      R3,[R12, #+168]
   \   00000048   564044E2           SUB      R4,R4,#+86
   \   0000004C   7C4D44E2           SUB      R4,R4,#+7936
   \   00000050   040054E3           CMP      R4,#+4
   \   00000054   4700008A           BHI      ??SetKeyFromUart_9
   \   00000058   01CF8FE2           ADR      R12,??SetKeyFromUart_2
   \   0000005C   04C0DCE7           LDRB     R12,[R12, R4]
   \   00000060   0CF18FE0           ADD      PC,PC,R12, LSL #+2
   \                     ??SetKeyFromUart_2:
   \   00000064   22132807           DC8      +34,+19,+40,+7
   \   00000068   01000000           DC8      +1,+0,+0,+0
    526                          case C_UART_SWPRO_SAAB:
    527                              switch (UartPtr->Device) {
   \                     ??SetKeyFromUart_11:
   \   0000006C   7440A0E3           MOV      R4,#+116
   \   00000070   7C4D84E3           ORR      R4,R4,#0x1F00
   \   00000074   040053E1           CMP      R3,R4
   \   00000078   7900001A           BNE      ??SetKeyFromUart_12
    528                              case C_UART_DEVICE_SAAB:
    529                                  PortKey[uart] = C_TCU_COM_232_SAAB;
   \   0000007C   543084E2           ADD      R3,R4,#+84
   \   00000080   760000EA           B        ??SetKeyFromUart_13
    530                                  break;
    531                              }
    532                              break;
    533                          case C_UART_SWPRO_PRINTER:
    534                              switch (UartPtr->Device) {
   \                     ??SetKeyFromUart_14:
   \   00000084   6240A0E3           MOV      R4,#+98
   \   00000088   7C4D84E3           ORR      R4,R4,#0x1F00
   \   0000008C   040053E1           CMP      R3,R4
   \   00000090   0300000A           BEQ      ??SetKeyFromUart_15
   \   00000094   114084E3           ORR      R4,R4,#0x11
   \   00000098   040053E1           CMP      R3,R4
   \   0000009C   0200000A           BEQ      ??SetKeyFromUart_16
   \   000000A0   6F0000EA           B        ??SetKeyFromUart_12
    535                              case C_UART_DEVICE_PC:
    536                                  PortKey[uart] = C_TCU_COM_232_PC;
   \                     ??SetKeyFromUart_15:
   \   000000A4   B930A0E3           MOV      R3,#+185
   \   000000A8   6B0000EA           B        ??SetKeyFromUart_17
    537                                  break;
    538                              case C_UART_DEVICE_PRINTER:
    539                                  PortKey[uart] = C_TCU_COM_232_PRINTER;
   \                     ??SetKeyFromUart_16:
   \   000000AC   4A3084E2           ADD      R3,R4,#+74
   \   000000B0   6A0000EA           B        ??SetKeyFromUart_13
    540                                  break;
    541                              }
    542                              break;
    543                          case C_UART_SWPRO_ANPRO10:
    544                              switch (UartPtr->Device) {
   \                     ??SetKeyFromUart_18:
   \   000000B4   613043E2           SUB      R3,R3,#+97
   \   000000B8   7C3D43E2           SUB      R3,R3,#+7936
   \   000000BC   040053E3           CMP      R3,#+4
   \   000000C0   6700008A           BHI      ??SetKeyFromUart_12
   \   000000C4   014F8FE2           ADR      R4,??SetKeyFromUart_3
   \   000000C8   D34094E1           LDRSB    R4,[R4, R3]
   \   000000CC   04F18FE0           ADD      PC,PC,R4, LSL #+2
   \                     ??SetKeyFromUart_3:
   \   000000D0   01F40364           DC8      +1,+244,+3,+100
   \   000000D4   05000000           DC8      +5,+0,+0,+0
    545                              case C_UART_DEVICE_TDU:
    546                                  PortKey[uart] = C_TCU_COM_232_TDU;
   \                     ??SetKeyFromUart_19:
   \   000000D8   B830A0E3           MOV      R3,#+184
   \   000000DC   5E0000EA           B        ??SetKeyFromUart_17
    547                                  break;
    548                              case C_UART_DEVICE_PC:
    549                                  PortKey[uart] = C_TCU_COM_232_PC;
    550                                  break;
    551                              case C_UART_DEVICE_TCU:
    552                                  PortKey[uart] = C_TCU_COM_232_TCU;
   \                     ??SetKeyFromUart_20:
   \   000000E0   BA30A0E3           MOV      R3,#+186
   \   000000E4   5C0000EA           B        ??SetKeyFromUart_17
    553                                  break;
    554                              case C_UART_DEVICE_ANPRO10:
    555                                  PortKey[uart] = C_TCU_COM_232_PROT10;
   \                     ??SetKeyFromUart_21:
   \   000000E8   BC30A0E3           MOV      R3,#+188
   \   000000EC   5A0000EA           B        ??SetKeyFromUart_17
    556                                  break;
    557                              }
    558                              break;
    559                          case C_UART_SWPRO_ANPRO3:
    560                              switch (UartPtr->Device) {
   \                     ??SetKeyFromUart_22:
   \   000000F0   6440A0E3           MOV      R4,#+100
   \   000000F4   7C4D84E3           ORR      R4,R4,#0x1F00
   \   000000F8   040053E1           CMP      R3,R4
   \   000000FC   5800001A           BNE      ??SetKeyFromUart_12
    561                              case C_UART_DEVICE_ANPRO3:
    562                                  PortKey[uart] = C_TCU_COM_232_PROT3;
   \   00000100   573084E2           ADD      R3,R4,#+87
   \   00000104   550000EA           B        ??SetKeyFromUart_13
    563                                  break;
    564                              }
    565                              break;
    566                          case C_UART_SWPRO_MODBUS:
    567                              switch (UartPtr->Device) {
   \                     ??SetKeyFromUart_23:
   \   00000108   683043E2           SUB      R3,R3,#+104
   \   0000010C   7C3D43E2           SUB      R3,R3,#+7936
   \   00000110   090053E3           CMP      R3,#+9
   \   00000114   5200008A           BHI      ??SetKeyFromUart_12
   \   00000118   014F8FE2           ADR      R4,??SetKeyFromUart_4
   \   0000011C   0340D4E7           LDRB     R4,[R4, R3]
   \   00000120   04F18FE0           ADD      PC,PC,R4, LSL #+2
   \                     ??SetKeyFromUart_4:
   \   00000124   10124F0E           DC8      +16,+18,+79,+14
   \   00000128   0A0C0608           DC8      +10,+12,+6,+8
   \   0000012C   02040000           DC8      +2,+4,+0,+0
    568                              case C_UART_DEVICE_MODICON_MASTER_TCP   :
    569                                  PortKey[uart] = C_TCU_COM_232_MODICON_MASTER_TCP;
   \                     ??SetKeyFromUart_24:
   \   00000130   C530A0E3           MOV      R3,#+197
   \   00000134   480000EA           B        ??SetKeyFromUart_17
    570                                  break;
    571                              case C_UART_DEVICE_MODICON_SLAVE_TCP    :
    572                                  PortKey[uart] = C_TCU_COM_232_MODICON_SLAVE_TCP;
   \                     ??SetKeyFromUart_25:
   \   00000138   C730A0E3           MOV      R3,#+199
   \   0000013C   460000EA           B        ??SetKeyFromUart_17
    573                                  break;
    574                              case C_UART_DEVICE_MODICON_MASTER       :
    575                                  PortKey[uart] = C_TCU_COM_232_MODICON_MASTER;
   \                     ??SetKeyFromUart_26:
   \   00000140   C430A0E3           MOV      R3,#+196
   \   00000144   440000EA           B        ??SetKeyFromUart_17
    576                                  break;
    577                              case C_UART_DEVICE_MODICON_SLAVE        :
    578                                  PortKey[uart] = C_TCU_COM_232_MODICON_SLAVE;
   \                     ??SetKeyFromUart_27:
   \   00000148   C630A0E3           MOV      R3,#+198
   \   0000014C   420000EA           B        ??SetKeyFromUart_17
    579                                  break;
    580                              case C_UART_DEVICE_MODBUS_SLAVE_INV:
    581                                  PortKey[uart] = C_TCU_COM_232_MODBUS_SLAVE_INV;
   \                     ??SetKeyFromUart_28:
   \   00000150   C330A0E3           MOV      R3,#+195
   \   00000154   400000EA           B        ??SetKeyFromUart_17
    582                                  break;
    583                              case C_UART_DEVICE_MODBUS_SLAVE_TCP:
    584                                  PortKey[uart] = C_TCU_COM_232_MODBUS_SLAVE_TCP;
   \                     ??SetKeyFromUart_29:
   \   00000158   C230A0E3           MOV      R3,#+194
   \   0000015C   3E0000EA           B        ??SetKeyFromUart_17
    585                                  break;
    586                              case C_UART_DEVICE_MODBUS_SLAVE:
    587                                  PortKey[uart] = C_TCU_COM_232_MODBUS_SLAVE;
   \                     ??SetKeyFromUart_30:
   \   00000160   C130A0E3           MOV      R3,#+193
   \   00000164   3C0000EA           B        ??SetKeyFromUart_17
    588                                  break;
    589                              case C_UART_DEVICE_MODBUS_MASTER:
    590                                  PortKey[uart] = C_TCU_COM_232_MODBUS_MASTER;
   \                     ??SetKeyFromUart_31:
   \   00000168   BE30A0E3           MOV      R3,#+190
   \   0000016C   3A0000EA           B        ??SetKeyFromUart_17
    591                                  break;
    592                              case C_UART_DEVICE_MODBUS_MASTER_INV:
    593                                  PortKey[uart] = C_TCU_COM_232_MODBUS_MASTER_INV;
   \                     ??SetKeyFromUart_32:
   \   00000170   BF30A0E3           MOV      R3,#+191
   \   00000174   380000EA           B        ??SetKeyFromUart_17
    594                                  break;
    595                              default:
    596                                  break;
    597                              }
    598                              break;
    599                          default:
    600                              PortKey[uart] = C_NONE;
   \                     ??SetKeyFromUart_9:
   \   00000178   6A30A0E3           MOV      R3,#+106
   \   0000017C   370000EA           B        ??SetKeyFromUart_13
    601                              break;
    602                          }
    603                          break;
    604                      case C_UART_HWPRO_485      :
    605                          switch (UartPtr->SWProtocol) {
   \                     ??SetKeyFromUart_33:
   \   00000180   A4409CE5           LDR      R4,[R12, #+164]
   \   00000184   A8309CE5           LDR      R3,[R12, #+168]
   \   00000188   554044E2           SUB      R4,R4,#+85
   \   0000018C   7C4D44E2           SUB      R4,R4,#+7936
   \   00000190   030054E3           CMP      R4,#+3
   \   00000194   F7FFFF8A           BHI      ??SetKeyFromUart_9
   \   00000198   01CF8FE2           ADR      R12,??SetKeyFromUart_5
   \   0000019C   D4C09CE1           LDRSB    R12,[R12, R4]
   \   000001A0   0CF18FE0           ADD      PC,PC,R12, LSL #+2
   \                     ??SetKeyFromUart_5:
   \   000001A4   1913001B           DC8      +25,+19,+0,+27
    606                          case C_UART_SWPRO_ANPRO10:
    607                              switch (UartPtr->Device) {
   \                     ??SetKeyFromUart_34:
   \   000001A8   613043E2           SUB      R3,R3,#+97
   \   000001AC   7C3D43E2           SUB      R3,R3,#+7936
   \   000001B0   060053E3           CMP      R3,#+6
   \   000001B4   2A00008A           BHI      ??SetKeyFromUart_12
   \   000001B8   014F8FE2           ADR      R4,??SetKeyFromUart_6
   \   000001BC   0340D4E7           LDRB     R4,[R4, R3]
   \   000001C0   04F18FE0           ADD      PC,PC,R4, LSL #+2
   \                     ??SetKeyFromUart_6:
   \   000001C4   03270127           DC8      +3,+39,+1,+39
   \   000001C8   05070900           DC8      +5,+7,+9,+0
    608                              case C_UART_DEVICE_TCU:
    609                                  PortKey[uart] = C_TCU_COM_485_TCU;
   \                     ??SetKeyFromUart_35:
   \   000001CC   C930A0E3           MOV      R3,#+201
   \   000001D0   210000EA           B        ??SetKeyFromUart_17
    610                                  break;
    611                              case C_UART_DEVICE_TDU:
    612                                  PortKey[uart] = C_TCU_COM_485_TDU;
   \                     ??SetKeyFromUart_36:
   \   000001D4   D930A0E3           MOV      R3,#+217
   \   000001D8   1F0000EA           B        ??SetKeyFromUart_17
    613                                  break;
    614                              case C_UART_DEVICE_ANPRO10:
    615                                  PortKey[uart] = C_TCU_COM_485_PROT10;
   \                     ??SetKeyFromUart_37:
   \   000001DC   CB30A0E3           MOV      R3,#+203
   \   000001E0   1D0000EA           B        ??SetKeyFromUart_17
    616                                  break;
    617                              case C_UART_DEVICE_ZB:
    618                                  PortKey[uart] = C_TCU_COM_485_ZB;
   \                     ??SetKeyFromUart_38:
   \   000001E4   CC30A0E3           MOV      R3,#+204
   \   000001E8   1B0000EA           B        ??SetKeyFromUart_17
    619                                  break;
    620                              case C_UART_DEVICE_ZB_RED:
    621                                  PortKey[uart] = C_TCU_COM_485_ZB_RED;
   \                     ??SetKeyFromUart_39:
   \   000001EC   CD30A0E3           MOV      R3,#+205
   \   000001F0   190000EA           B        ??SetKeyFromUart_17
    622                                  break;
    623                              }
    624                              break;
    625                          case C_UART_SWPRO_ANPRO3:
    626                              switch (UartPtr->Device) {
   \                     ??SetKeyFromUart_40:
   \   000001F4   6440A0E3           MOV      R4,#+100
   \                     ??SetKeyFromUart_41:
   \   000001F8   7C4D84E3           ORR      R4,R4,#0x1F00
   \   000001FC   040053E1           CMP      R3,R4
   \   00000200   1700001A           BNE      ??SetKeyFromUart_12
    627                              case C_UART_DEVICE_ANPRO3:
    628                                  PortKey[uart] = C_TCU_COM_485_PROT3;
   \   00000204   663084E2           ADD      R3,R4,#+102
   \   00000208   140000EA           B        ??SetKeyFromUart_13
    629                                  break;
    630                              }
    631                              break;
    632                          case C_UART_SWPRO_ANPRO1:
    633                              switch (UartPtr->Device) {
   \                     ??SetKeyFromUart_42:
   \   0000020C   7240A0E3           MOV      R4,#+114
   \   00000210   F8FFFFEA           B        ??SetKeyFromUart_41
    634                              case C_UART_DEVICE_TPC:
    635                                  PortKey[uart] = C_TCU_COM_485_TPC;
    636                                  break;
    637                              }
    638                              break;
    639                          case C_UART_SWPRO_MODBUS:
    640                              switch (UartPtr->Device) {
   \                     ??SetKeyFromUart_43:
   \   00000214   683043E2           SUB      R3,R3,#+104
   \   00000218   7C3D43E2           SUB      R3,R3,#+7936
   \   0000021C   050053E3           CMP      R3,#+5
   \   00000220   0F00008A           BHI      ??SetKeyFromUart_12
   \   00000224   014F8FE2           ADR      R4,??SetKeyFromUart_7
   \   00000228   0340D4E7           LDRB     R4,[R4, R3]
   \   0000022C   04F18FE0           ADD      PC,PC,R4, LSL #+2
   \                     ??SetKeyFromUart_7:
   \   00000230   07090C05           DC8      +7,+9,+12,+5
   \   00000234   01030000           DC8      +1,+3,+0,+0
    641                              case C_UART_DEVICE_MODBUS_SLAVE_INV:
    642                                  PortKey[uart] = C_TCU_COM_485_MODBUS_SLAVE_INV;
   \                     ??SetKeyFromUart_44:
   \   00000238   D330A0E3           MOV      R3,#+211
   \   0000023C   060000EA           B        ??SetKeyFromUart_17
    643                                  break;
    644                              case C_UART_DEVICE_MODBUS_SLAVE_TCP:
    645                                  PortKey[uart] = C_TCU_COM_485_MODBUS_SLAVE_TCP;
   \                     ??SetKeyFromUart_45:
   \   00000240   D230A0E3           MOV      R3,#+210
   \   00000244   040000EA           B        ??SetKeyFromUart_17
    646                                  break;
    647                              case C_UART_DEVICE_MODBUS_SLAVE:
    648                                  PortKey[uart] = C_TCU_COM_485_MODBUS_SLAVE;
   \                     ??SetKeyFromUart_46:
   \   00000248   D130A0E3           MOV      R3,#+209
   \   0000024C   020000EA           B        ??SetKeyFromUart_17
    649                                  break;
    650                              case C_UART_DEVICE_MODBUS_MASTER:
    651                                  PortKey[uart] = C_TCU_COM_485_MODBUS_MASTER;
   \                     ??SetKeyFromUart_47:
   \   00000250   CE30A0E3           MOV      R3,#+206
   \   00000254   000000EA           B        ??SetKeyFromUart_17
    652                                  break;
    653                              case C_UART_DEVICE_MODBUS_MASTER_INV:
    654                                  PortKey[uart] = C_TCU_COM_485_MODBUS_MASTER_INV;
   \                     ??SetKeyFromUart_48:
   \   00000258   CF30A0E3           MOV      R3,#+207
   \                     ??SetKeyFromUart_17:
   \   0000025C   7C3D83E3           ORR      R3,R3,#0x1F00
   \                     ??SetKeyFromUart_13:
   \   00000260   343382E5           STR      R3,[R2, #+820]
    655                                  break;
    656                              default:
    657                                  break;
    658                              }
    659                              break;
    660                          default:
    661                              PortKey[uart] = C_NONE;
    662                              break;
    663                          }
    664                          break;
    665                      default:
    666                          PortKey[uart] = C_NONE;
    667                          break;
    668                      }
    669                  } else {
    670                      PortKey[uart] = C_NONE;
    671                  }
    672              }
   \                     ??SetKeyFromUart_12:
   \   00000264   011081E2           ADD      R1,R1,#+1
   \   00000268   070051E3           CMP      R1,#+7
   \   0000026C   65FFFFBA           BLT      ??SetKeyFromUart_8
    673          }
   \   00000270   1000BDE8           POP      {R4}
   \   00000274   1EFF2FE1           BX       LR               ;; return
    674          //---------------------------------------------------------------------------

   \                                 In segment CODE, align 4, keep-with-next
    675          void PROTanksystemUnit::SetProList(void) {
    676          }
   \                     ??SetProList:
   \   00000000   1EFF2FE1           BX       LR               ;; return
    677          //---------------------------------------------------------------------------

   \                                 In segment CODE, align 4, keep-with-next
   \                     ?Subroutine46:
   \   00000000   3040BDE8           POP      {R4,R5,LR}
   \   00000004   1EFF2FE1           BX       LR               ;; return
   \                     ??Subroutine46_0:
   \   00000008   ........           DC32     ?_0

   \                                 In segment CODE, align 4, keep-with-next
    678          void PROTanksystemUnit::SetId(void) {
   \                     ??SetId:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   85DF4DE2           SUB      SP,SP,#+532
    679              // Any unit except myself is actually unknown and must be set elsewhere
    680              AnsiString ComPortName;
    681              if (MyPortNumberonTCU >= 0) {
   \   00000008   ........           LDR      R5,??DataTable51  ;; `?<Constant "TCU ">`
   \   0000000C   0040A0E1           MOV      R4,R0
   \   00000010   1C008DE2           ADD      R0,SP,#+28
   \   00000014   ........           _BLF     ??AnsiString,??AnsiString??rA
   \   00000018   4C1294E5           LDR      R1,[R4, #+588]
   \   0000001C   000051E3           CMP      R1,#+0
   \   00000020   1A00004A           BMI      ??SetId_1
    682                  ComPortName = " on Com" + (AnsiString)MyPortNumberonTCU;
   \   00000024   54008DE2           ADD      R0,SP,#+84
   \   00000028   ........           _BLF     ??AnsiString_2,??AnsiString??rA_2
   \   0000002C   0020A0E1           MOV      R2,R0
   \   00000030   201085E2           ADD      R1,R5,#+32
   \   00000034   0D00A0E1           MOV      R0,SP
   \   00000038   ........           _BLF     `??operator+_1`,`??operator+??rA`
   \   0000003C   0D10A0E1           MOV      R1,SP
   \   00000040   38008DE2           ADD      R0,SP,#+56
   \   00000044   ........           _BLF     ??AnsiString_3,??AnsiString??rA_3
   \   00000048   ........           LDR      R1,??DataTable55  ;; ??npos
   \   0000004C   0020A0E3           MOV      R2,#+0
   \   00000050   003091E5           LDR      R3,[R1, #+0]
   \   00000054   0010A0E1           MOV      R1,R0
   \   00000058   1C008DE2           ADD      R0,SP,#+28
   \   0000005C   ........           _BLF     ??assign,??assign??rA
   \   00000060   0020A0E3           MOV      R2,#+0
   \   00000064   0110A0E3           MOV      R1,#+1
   \   00000068   38008DE2           ADD      R0,SP,#+56
   \   0000006C   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000070   0020A0E3           MOV      R2,#+0
   \   00000074   0110A0E3           MOV      R1,#+1
   \   00000078   0D00A0E1           MOV      R0,SP
   \   0000007C   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000080   0020A0E3           MOV      R2,#+0
   \   00000084   0110A0E3           MOV      R1,#+1
   \   00000088   54008DE2           ADD      R0,SP,#+84
   \   0000008C   0B0000EA           B        ??SetId_2
    683              } else {
    684                  ComPortName = " on Net";
   \                     ??SetId_1:
   \   00000090   081085E2           ADD      R1,R5,#+8
   \   00000094   0D00A0E1           MOV      R0,SP
   \   00000098   ........           _BLF     ??AnsiString_1,??AnsiString??rA_1
   \   0000009C   ........           LDR      R1,??DataTable55  ;; ??npos
   \   000000A0   0020A0E3           MOV      R2,#+0
   \   000000A4   003091E5           LDR      R3,[R1, #+0]
   \   000000A8   0010A0E1           MOV      R1,R0
   \   000000AC   1C008DE2           ADD      R0,SP,#+28
   \   000000B0   ........           _BLF     ??assign,??assign??rA
   \   000000B4   0020A0E3           MOV      R2,#+0
   \   000000B8   0110A0E3           MOV      R1,#+1
   \   000000BC   0D00A0E1           MOV      R0,SP
   \                     ??SetId_2:
   \   000000C0   ........           _BLF     ??_Tidy,??_Tidy??rA
    685              }
    686              switch (UnitID) {
   \   000000C4   240394E5           LDR      R0,[R4, #+804]
   \   000000C8   2C1394E5           LDR      R1,[R4, #+812]
   \   000000CC   200040E2           SUB      R0,R0,#+32
   \   000000D0   020050E3           CMP      R0,#+2
   \   000000D4   0500009A           BLS      ??SetId_3
   \   000000D8   100040E2           SUB      R0,R0,#+16
   \   000000DC   020050E3           CMP      R0,#+2
   \   000000E0   2900009A           BLS      ??SetId_4
   \   000000E4   100050E2           SUBS     R0,R0,#+16
   \   000000E8   4A00000A           BEQ      ??SetId_5
   \   000000EC   6C0000EA           B        ??SetId_6
    687              case DEVICE_TCU   :
    688              case DEVICE_TCU_R1:
    689              case DEVICE_TCU_R2:
    690                  Name = "TCU:" + (AnsiString)Address;
   \                     ??SetId_3:
   \   000000F0   A8008DE2           ADD      R0,SP,#+168
   \   000000F4   ........           _BLF     ??AnsiString_2,??AnsiString??rA_2
   \   000000F8   0020A0E1           MOV      R2,R0
   \   000000FC   101085E2           ADD      R1,R5,#+16
   \   00000100   8C008DE2           ADD      R0,SP,#+140
   \   00000104   ........           _BLF     `??operator+_1`,`??operator+??rA`
   \   00000108   8C108DE2           ADD      R1,SP,#+140
   \   0000010C   70008DE2           ADD      R0,SP,#+112
   \   00000110   ........           _BLF     ??AnsiString_3,??AnsiString??rA_3
   \   00000114   ........           LDR      R1,??DataTable55  ;; ??npos
   \   00000118   0020A0E3           MOV      R2,#+0
   \   0000011C   005091E5           LDR      R5,[R1, #+0]
   \   00000120   0010A0E1           MOV      R1,R0
   \   00000124   0530A0E1           MOV      R3,R5
   \   00000128   440084E2           ADD      R0,R4,#+68
   \   0000012C   ........           _BLF     ??assign,??assign??rA
   \   00000130   0020A0E3           MOV      R2,#+0
   \   00000134   0110A0E3           MOV      R1,#+1
   \   00000138   70008DE2           ADD      R0,SP,#+112
   \   0000013C   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000140   0020A0E3           MOV      R2,#+0
   \   00000144   0110A0E3           MOV      R1,#+1
   \   00000148   8C008DE2           ADD      R0,SP,#+140
   \   0000014C   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000150   0020A0E3           MOV      R2,#+0
   \   00000154   0110A0E3           MOV      R1,#+1
   \   00000158   A8008DE2           ADD      R0,SP,#+168
   \   0000015C   ........           _BLF     ??_Tidy,??_Tidy??rA
    691                  if (Address) {
   \   00000160   2C0394E5           LDR      R0,[R4, #+812]
   \   00000164   000050E3           CMP      R0,#+0
   \   00000168   0400000A           BEQ      ??SetId_7
    692                      Name += ComPortName;
   \   0000016C   0530A0E1           MOV      R3,R5
   \   00000170   0020A0E3           MOV      R2,#+0
   \   00000174   1C108DE2           ADD      R1,SP,#+28
   \   00000178   440084E2           ADD      R0,R4,#+68
   \   0000017C   ........           _BLF     ??append,??append??rA
    693                  }
    694                  // Address is unique. We can only have 15 units in a system
    695                  // We default to -1 for com port for any TCU.
    696                  IDNumber = CreateId(TCUAddress, -1, Address);
   \                     ??SetId_7:
   \   00000180   2C2394E5           LDR      R2,[R4, #+812]
   \   00000184   0010E0E3           MVN      R1,#+0
   \   00000188   6A0000EA           B        ??SetId_8
    697                  break;
    698              case DEVICE_TDU   :
    699              case DEVICE_TDU_R1:
    700              case DEVICE_TDU_R2:
    701                  Name = "TDU:" + (AnsiString)Address + ComPortName;
   \                     ??SetId_4:
   \   0000018C   460F8DE2           ADD      R0,SP,#+280
   \   00000190   ........           _BLF     ??AnsiString_2,??AnsiString??rA_2
   \   00000194   0020A0E1           MOV      R2,R0
   \   00000198   181085E2           ADD      R1,R5,#+24
   \   0000019C   FC008DE2           ADD      R0,SP,#+252
   \   000001A0   ........           _BLF     `??operator+_1`,`??operator+??rA`
   \   000001A4   1C208DE2           ADD      R2,SP,#+28
   \   000001A8   FC108DE2           ADD      R1,SP,#+252
   \   000001AC   E0008DE2           ADD      R0,SP,#+224
   \   000001B0   ........           _BLF     `??operator+`,`??operator+??rA_1`
   \   000001B4   E0108DE2           ADD      R1,SP,#+224
   \   000001B8   C4008DE2           ADD      R0,SP,#+196
   \   000001BC   ........           _BLF     ??AnsiString_3,??AnsiString??rA_3
   \   000001C0   ........           LDR      R1,??DataTable55  ;; ??npos
   \   000001C4   0020A0E3           MOV      R2,#+0
   \   000001C8   003091E5           LDR      R3,[R1, #+0]
   \   000001CC   0010A0E1           MOV      R1,R0
   \   000001D0   440084E2           ADD      R0,R4,#+68
   \   000001D4   ........           _BLF     ??assign,??assign??rA
   \   000001D8   0020A0E3           MOV      R2,#+0
   \   000001DC   0110A0E3           MOV      R1,#+1
   \   000001E0   C4008DE2           ADD      R0,SP,#+196
   \   000001E4   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000001E8   0020A0E3           MOV      R2,#+0
   \   000001EC   0110A0E3           MOV      R1,#+1
   \   000001F0   E0008DE2           ADD      R0,SP,#+224
   \   000001F4   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000001F8   0020A0E3           MOV      R2,#+0
   \   000001FC   0110A0E3           MOV      R1,#+1
   \   00000200   FC008DE2           ADD      R0,SP,#+252
   \   00000204   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000208   0020A0E3           MOV      R2,#+0
   \   0000020C   0110A0E3           MOV      R1,#+1
   \   00000210   460F8DE2           ADD      R0,SP,#+280
   \   00000214   440000EA           B        ??SetId_9
    702                  IDNumber = CreateId(TCUAddress, MyPortNumberonTCU, Address);
    703                  break;
    704              case DEVICE_PCSW  :
    705                  Name = "PC:" + (AnsiString)Address + ComPortName;
   \                     ??SetId_5:
   \   00000218   620F8DE2           ADD      R0,SP,#+392
   \   0000021C   ........           _BLF     ??AnsiString_2,??AnsiString??rA_2
   \   00000220   0020A0E1           MOV      R2,R0
   \   00000224   ........           ADR      R1,??DataTable42  ;; "PC:"
   \   00000228   5B0F8DE2           ADD      R0,SP,#+364
   \   0000022C   ........           _BLF     `??operator+_1`,`??operator+??rA`
   \   00000230   1C208DE2           ADD      R2,SP,#+28
   \   00000234   5B1F8DE2           ADD      R1,SP,#+364
   \   00000238   540F8DE2           ADD      R0,SP,#+336
   \   0000023C   ........           _BLF     `??operator+`,`??operator+??rA_1`
   \   00000240   541F8DE2           ADD      R1,SP,#+336
   \   00000244   4D0F8DE2           ADD      R0,SP,#+308
   \   00000248   ........           _BLF     ??AnsiString_3,??AnsiString??rA_3
   \   0000024C   ........           LDR      R1,??DataTable55  ;; ??npos
   \   00000250   0020A0E3           MOV      R2,#+0
   \   00000254   003091E5           LDR      R3,[R1, #+0]
   \   00000258   0010A0E1           MOV      R1,R0
   \   0000025C   440084E2           ADD      R0,R4,#+68
   \   00000260   ........           _BLF     ??assign,??assign??rA
   \   00000264   0020A0E3           MOV      R2,#+0
   \   00000268   0110A0E3           MOV      R1,#+1
   \   0000026C   4D0F8DE2           ADD      R0,SP,#+308
   \   00000270   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000274   0020A0E3           MOV      R2,#+0
   \   00000278   0110A0E3           MOV      R1,#+1
   \   0000027C   540F8DE2           ADD      R0,SP,#+336
   \   00000280   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000284   0020A0E3           MOV      R2,#+0
   \   00000288   0110A0E3           MOV      R1,#+1
   \   0000028C   5B0F8DE2           ADD      R0,SP,#+364
   \   00000290   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000294   0020A0E3           MOV      R2,#+0
   \   00000298   0110A0E3           MOV      R1,#+1
   \   0000029C   620F8DE2           ADD      R0,SP,#+392
   \   000002A0   210000EA           B        ??SetId_9
    706                  IDNumber = CreateId(TCUAddress, MyPortNumberonTCU, Address);
    707                  break;
    708              default :
    709                  Name = "TCU:" + (AnsiString)Address + ComPortName;
   \                     ??SetId_6:
   \   000002A4   7E0F8DE2           ADD      R0,SP,#+504
   \   000002A8   ........           _BLF     ??AnsiString_2,??AnsiString??rA_2
   \   000002AC   0020A0E1           MOV      R2,R0
   \   000002B0   101085E2           ADD      R1,R5,#+16
   \   000002B4   770F8DE2           ADD      R0,SP,#+476
   \   000002B8   ........           _BLF     `??operator+_1`,`??operator+??rA`
   \   000002BC   1C208DE2           ADD      R2,SP,#+28
   \   000002C0   771F8DE2           ADD      R1,SP,#+476
   \   000002C4   700F8DE2           ADD      R0,SP,#+448
   \   000002C8   ........           _BLF     `??operator+`,`??operator+??rA_1`
   \   000002CC   701F8DE2           ADD      R1,SP,#+448
   \   000002D0   690F8DE2           ADD      R0,SP,#+420
   \   000002D4   ........           _BLF     ??AnsiString_3,??AnsiString??rA_3
   \   000002D8   ........           LDR      R1,??DataTable55  ;; ??npos
   \   000002DC   0020A0E3           MOV      R2,#+0
   \   000002E0   003091E5           LDR      R3,[R1, #+0]
   \   000002E4   0010A0E1           MOV      R1,R0
   \   000002E8   440084E2           ADD      R0,R4,#+68
   \   000002EC   ........           _BLF     ??assign,??assign??rA
   \   000002F0   0020A0E3           MOV      R2,#+0
   \   000002F4   0110A0E3           MOV      R1,#+1
   \   000002F8   690F8DE2           ADD      R0,SP,#+420
   \   000002FC   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000300   0020A0E3           MOV      R2,#+0
   \   00000304   0110A0E3           MOV      R1,#+1
   \   00000308   700F8DE2           ADD      R0,SP,#+448
   \   0000030C   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000310   0020A0E3           MOV      R2,#+0
   \   00000314   0110A0E3           MOV      R1,#+1
   \   00000318   770F8DE2           ADD      R0,SP,#+476
   \   0000031C   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000320   0020A0E3           MOV      R2,#+0
   \   00000324   0110A0E3           MOV      R1,#+1
   \   00000328   7E0F8DE2           ADD      R0,SP,#+504
   \                     ??SetId_9:
   \   0000032C   ........           _BLF     ??_Tidy,??_Tidy??rA
    710                  IDNumber = CreateId(TCUAddress, MyPortNumberonTCU, Address);
   \   00000330   2C2394E5           LDR      R2,[R4, #+812]
   \   00000334   4C1294E5           LDR      R1,[R4, #+588]
   \                     ??SetId_8:
   \   00000338   300394E5           LDR      R0,[R4, #+816]
   \   0000033C   ........           BL       ??CreateId
   \   00000340   9C0084E5           STR      R0,[R4, #+156]
    711                  break;
    712              }
    713          }
   \   00000344   0020A0E3           MOV      R2,#+0
   \   00000348   0110A0E3           MOV      R1,#+1
   \   0000034C   1C008DE2           ADD      R0,SP,#+28
   \   00000350   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000354   85DF8DE2           ADD      SP,SP,#+532
   \   00000358   ........           B        ?Subroutine46
    714          

   \                                 In segment CODE, align 4, keep-with-next
    715          void PROTanksystemUnit::SetIdNet(void) {
   \                     ??SetIdNet:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
    716              // Any unit except myself is actually unknown and must be set elsewhere
    717              AnsiString ComPortName = " on Net";
   \   00000004   ........           LDR      R5,??DataTable51  ;; `?<Constant "TCU ">`
   \   00000008   70DF4DE2           SUB      SP,SP,#+448
   \   0000000C   0040A0E1           MOV      R4,R0
   \   00000010   081085E2           ADD      R1,R5,#+8
   \   00000014   0D00A0E1           MOV      R0,SP
   \   00000018   ........           _BLF     ??AnsiString_1,??AnsiString??rA_1
    718              switch (UnitID) {
   \   0000001C   240394E5           LDR      R0,[R4, #+804]
   \   00000020   200040E2           SUB      R0,R0,#+32
   \   00000024   020050E3           CMP      R0,#+2
   \   00000028   0500009A           BLS      ??SetIdNet_1
   \   0000002C   100040E2           SUB      R0,R0,#+16
   \   00000030   020050E3           CMP      R0,#+2
   \   00000034   2A00009A           BLS      ??SetIdNet_2
   \   00000038   100050E2           SUBS     R0,R0,#+16
   \   0000003C   5000000A           BEQ      ??SetIdNet_3
   \   00000040   770000EA           B        ??SetIdNet_4
    719              case DEVICE_TCU   :
    720              case DEVICE_TCU_R1:
    721              case DEVICE_TCU_R2:
    722                  Name = "TCU:" + (AnsiString)Address;
   \                     ??SetIdNet_1:
   \   00000044   2C1394E5           LDR      R1,[R4, #+812]
   \   00000048   54008DE2           ADD      R0,SP,#+84
   \   0000004C   ........           _BLF     ??AnsiString_2,??AnsiString??rA_2
   \   00000050   0020A0E1           MOV      R2,R0
   \   00000054   101085E2           ADD      R1,R5,#+16
   \   00000058   38008DE2           ADD      R0,SP,#+56
   \   0000005C   ........           _BLF     `??operator+_1`,`??operator+??rA`
   \   00000060   38108DE2           ADD      R1,SP,#+56
   \   00000064   1C008DE2           ADD      R0,SP,#+28
   \   00000068   ........           _BLF     ??AnsiString_3,??AnsiString??rA_3
   \   0000006C   0010A0E1           MOV      R1,R0
   \   00000070   ........           LDR      R0,??DataTable55  ;; ??npos
   \   00000074   0020A0E3           MOV      R2,#+0
   \   00000078   005090E5           LDR      R5,[R0, #+0]
   \   0000007C   440084E2           ADD      R0,R4,#+68
   \   00000080   0530A0E1           MOV      R3,R5
   \   00000084   ........           _BLF     ??assign,??assign??rA
   \   00000088   0020A0E3           MOV      R2,#+0
   \   0000008C   0110A0E3           MOV      R1,#+1
   \   00000090   1C008DE2           ADD      R0,SP,#+28
   \   00000094   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000098   0020A0E3           MOV      R2,#+0
   \   0000009C   0110A0E3           MOV      R1,#+1
   \   000000A0   38008DE2           ADD      R0,SP,#+56
   \   000000A4   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000000A8   0020A0E3           MOV      R2,#+0
   \   000000AC   0110A0E3           MOV      R1,#+1
   \   000000B0   54008DE2           ADD      R0,SP,#+84
   \   000000B4   ........           _BLF     ??_Tidy,??_Tidy??rA
    723                  if (Address) {
   \   000000B8   2C0394E5           LDR      R0,[R4, #+812]
   \   000000BC   000050E3           CMP      R0,#+0
   \   000000C0   0400000A           BEQ      ??SetIdNet_5
    724                      Name += ComPortName;
   \   000000C4   0530A0E1           MOV      R3,R5
   \   000000C8   0020A0E3           MOV      R2,#+0
   \   000000CC   0D10A0E1           MOV      R1,SP
   \   000000D0   440084E2           ADD      R0,R4,#+68
   \   000000D4   ........           _BLF     ??append,??append??rA
    725                  }
    726                  // Address is unique. We can only have 15 units in a system
    727                  // We default to -1 for com port for any TCU.
    728                  IDNumber = CreateId(TCUAddress, -1, Address);
   \                     ??SetIdNet_5:
   \   000000D8   2C2394E5           LDR      R2,[R4, #+812]
   \   000000DC   0010E0E3           MVN      R1,#+0
   \   000000E0   760000EA           B        ??SetIdNet_6
    729                  break;
    730              case DEVICE_TDU   :
    731              case DEVICE_TDU_R1:
    732              case DEVICE_TDU_R2:
    733                  Name = "TDU:" + (AnsiString)Address + ComPortName;
   \                     ??SetIdNet_2:
   \   000000E4   2C1394E5           LDR      R1,[R4, #+812]
   \   000000E8   C4008DE2           ADD      R0,SP,#+196
   \   000000EC   ........           _BLF     ??AnsiString_2,??AnsiString??rA_2
   \   000000F0   0020A0E1           MOV      R2,R0
   \   000000F4   181085E2           ADD      R1,R5,#+24
   \   000000F8   A8008DE2           ADD      R0,SP,#+168
   \   000000FC   ........           _BLF     `??operator+_1`,`??operator+??rA`
   \   00000100   0D20A0E1           MOV      R2,SP
   \   00000104   A8108DE2           ADD      R1,SP,#+168
   \   00000108   8C008DE2           ADD      R0,SP,#+140
   \   0000010C   ........           _BLF     `??operator+`,`??operator+??rA_1`
   \   00000110   8C108DE2           ADD      R1,SP,#+140
   \   00000114   70008DE2           ADD      R0,SP,#+112
   \   00000118   ........           _BLF     ??AnsiString_3,??AnsiString??rA_3
   \   0000011C   ........           LDR      R1,??DataTable55  ;; ??npos
   \   00000120   0020A0E3           MOV      R2,#+0
   \   00000124   003091E5           LDR      R3,[R1, #+0]
   \   00000128   0010A0E1           MOV      R1,R0
   \   0000012C   440084E2           ADD      R0,R4,#+68
   \   00000130   ........           _BLF     ??assign,??assign??rA
   \   00000134   0020A0E3           MOV      R2,#+0
   \   00000138   0110A0E3           MOV      R1,#+1
   \   0000013C   70008DE2           ADD      R0,SP,#+112
   \   00000140   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000144   0020A0E3           MOV      R2,#+0
   \   00000148   0110A0E3           MOV      R1,#+1
   \   0000014C   8C008DE2           ADD      R0,SP,#+140
   \   00000150   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000154   0020A0E3           MOV      R2,#+0
   \   00000158   0110A0E3           MOV      R1,#+1
   \   0000015C   A8008DE2           ADD      R0,SP,#+168
   \   00000160   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000164   0020A0E3           MOV      R2,#+0
   \   00000168   0110A0E3           MOV      R1,#+1
   \   0000016C   C4008DE2           ADD      R0,SP,#+196
   \   00000170   ........           _BLF     ??_Tidy,??_Tidy??rA
    734                  IDNumber = CreateId(TCUAddress, MyPortNumberonTCU, 0x20 + Address);
   \   00000174   2C0394E5           LDR      R0,[R4, #+812]
   \   00000178   4C1294E5           LDR      R1,[R4, #+588]
   \   0000017C   202080E2           ADD      R2,R0,#+32
   \   00000180   4E0000EA           B        ??SetIdNet_6
    735                  break;
    736              case DEVICE_PCSW  :
    737                  Name = "PC:" + (AnsiString)Address + ComPortName;
   \                     ??SetIdNet_3:
   \   00000184   2C1394E5           LDR      R1,[R4, #+812]
   \   00000188   4D0F8DE2           ADD      R0,SP,#+308
   \   0000018C   ........           _BLF     ??AnsiString_2,??AnsiString??rA_2
   \   00000190   0020A0E1           MOV      R2,R0
   \   00000194   ........           ADR      R1,??DataTable50  ;; "PC:"
   \   00000198   460F8DE2           ADD      R0,SP,#+280
   \   0000019C   ........           _BLF     `??operator+_1`,`??operator+??rA`
   \   000001A0   0D20A0E1           MOV      R2,SP
   \   000001A4   461F8DE2           ADD      R1,SP,#+280
   \   000001A8   FC008DE2           ADD      R0,SP,#+252
   \   000001AC   ........           _BLF     `??operator+`,`??operator+??rA_1`
   \   000001B0   FC108DE2           ADD      R1,SP,#+252
   \   000001B4   E0008DE2           ADD      R0,SP,#+224
   \   000001B8   ........           _BLF     ??AnsiString_3,??AnsiString??rA_3
   \   000001BC   ........           LDR      R1,??DataTable55  ;; ??npos
   \   000001C0   0020A0E3           MOV      R2,#+0
   \   000001C4   003091E5           LDR      R3,[R1, #+0]
   \   000001C8   0010A0E1           MOV      R1,R0
   \   000001CC   440084E2           ADD      R0,R4,#+68
   \   000001D0   ........           _BLF     ??assign,??assign??rA
   \   000001D4   0020A0E3           MOV      R2,#+0
   \   000001D8   0110A0E3           MOV      R1,#+1
   \   000001DC   E0008DE2           ADD      R0,SP,#+224
   \   000001E0   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000001E4   0020A0E3           MOV      R2,#+0
   \   000001E8   0110A0E3           MOV      R1,#+1
   \   000001EC   FC008DE2           ADD      R0,SP,#+252
   \   000001F0   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000001F4   0020A0E3           MOV      R2,#+0
   \   000001F8   0110A0E3           MOV      R1,#+1
   \   000001FC   460F8DE2           ADD      R0,SP,#+280
   \   00000200   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000204   0020A0E3           MOV      R2,#+0
   \   00000208   0110A0E3           MOV      R1,#+1
   \   0000020C   4D0F8DE2           ADD      R0,SP,#+308
   \   00000210   ........           _BLF     ??_Tidy,??_Tidy??rA
    738                  IDNumber = CreateId(TCUAddress, MyPortNumberonTCU, 0x30 + Address);
   \   00000214   2C0394E5           LDR      R0,[R4, #+812]
   \   00000218   4C1294E5           LDR      R1,[R4, #+588]
   \   0000021C   302080E2           ADD      R2,R0,#+48
   \   00000220   260000EA           B        ??SetIdNet_6
    739                  break;
    740              default :
    741                  Name = "TCU:" + (AnsiString)Address + ComPortName;
   \                     ??SetIdNet_4:
   \   00000224   2C1394E5           LDR      R1,[R4, #+812]
   \   00000228   690F8DE2           ADD      R0,SP,#+420
   \   0000022C   ........           _BLF     ??AnsiString_2,??AnsiString??rA_2
   \   00000230   0020A0E1           MOV      R2,R0
   \   00000234   101085E2           ADD      R1,R5,#+16
   \   00000238   620F8DE2           ADD      R0,SP,#+392
   \   0000023C   ........           _BLF     `??operator+_1`,`??operator+??rA`
   \   00000240   0D20A0E1           MOV      R2,SP
   \   00000244   621F8DE2           ADD      R1,SP,#+392
   \   00000248   5B0F8DE2           ADD      R0,SP,#+364
   \   0000024C   ........           _BLF     `??operator+`,`??operator+??rA_1`
   \   00000250   5B1F8DE2           ADD      R1,SP,#+364
   \   00000254   540F8DE2           ADD      R0,SP,#+336
   \   00000258   ........           _BLF     ??AnsiString_3,??AnsiString??rA_3
   \   0000025C   ........           LDR      R1,??DataTable55  ;; ??npos
   \   00000260   0020A0E3           MOV      R2,#+0
   \   00000264   003091E5           LDR      R3,[R1, #+0]
   \   00000268   0010A0E1           MOV      R1,R0
   \   0000026C   440084E2           ADD      R0,R4,#+68
   \   00000270   ........           _BLF     ??assign,??assign??rA
   \   00000274   0020A0E3           MOV      R2,#+0
   \   00000278   0110A0E3           MOV      R1,#+1
   \   0000027C   540F8DE2           ADD      R0,SP,#+336
   \   00000280   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000284   0020A0E3           MOV      R2,#+0
   \   00000288   0110A0E3           MOV      R1,#+1
   \   0000028C   5B0F8DE2           ADD      R0,SP,#+364
   \   00000290   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000294   0020A0E3           MOV      R2,#+0
   \   00000298   0110A0E3           MOV      R1,#+1
   \   0000029C   620F8DE2           ADD      R0,SP,#+392
   \   000002A0   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000002A4   0020A0E3           MOV      R2,#+0
   \   000002A8   0110A0E3           MOV      R1,#+1
   \   000002AC   690F8DE2           ADD      R0,SP,#+420
   \   000002B0   ........           _BLF     ??_Tidy,??_Tidy??rA
    742                  IDNumber = CreateId(TCUAddress, MyPortNumberonTCU, 0x40 + Address);
   \   000002B4   2C0394E5           LDR      R0,[R4, #+812]
   \   000002B8   4C1294E5           LDR      R1,[R4, #+588]
   \   000002BC   402080E2           ADD      R2,R0,#+64
   \                     ??SetIdNet_6:
   \   000002C0   300394E5           LDR      R0,[R4, #+816]
   \   000002C4   ........           BL       ??CreateId
   \   000002C8   9C0084E5           STR      R0,[R4, #+156]
    743                  break;
    744              }
    745          }
   \   000002CC   0020A0E3           MOV      R2,#+0
   \   000002D0   0110A0E3           MOV      R1,#+1
   \   000002D4   0D00A0E1           MOV      R0,SP
   \   000002D8   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000002DC   70DF8DE2           ADD      SP,SP,#+448
   \   000002E0   ........           B        ?Subroutine46
    746          //---------------------------------------------------------------------------

   \                                 In segment CODE, align 4, keep-with-next
    747          unsigned PROTanksystemUnit::CreateId(int TCUAddr, int PortNo, int Addr) {
    748              return ((C_PRO_TANKSYS_UNIT << 16) + ((TCUAddr & 0xF) << 12) + ((PortNo & 0xF) << 8) + (Addr & 0xFF));
   \                     ??CreateId:
   \   00000000   0F0000E2           AND      R0,R0,#0xF
   \   00000004   0F1001E2           AND      R1,R1,#0xF
   \   00000008   0114A0E1           LSL      R1,R1,#+8
   \   0000000C   000681E0           ADD      R0,R1,R0, LSL #+12
   \   00000010   FF1002E2           AND      R1,R2,#0xFF
   \   00000014   000081E0           ADD      R0,R1,R0
   \   00000018   4016A0E3           MOV      R1,#+67108864
   \   0000001C   7E1881E3           ORR      R1,R1,#0x7E0000
   \   00000020   000081E0           ADD      R0,R1,R0
   \   00000024   1EFF2FE1           BX       LR               ;; return
    749          }
    750          
    751          //---------------------------------------------------------------------------

   \                                 In segment CODE, align 4, keep-with-next
    752          bool PROTanksystemUnit::SetUart(int uart, int key, int Baudrate, int DataBit, int StopBit, char Parity) {
   \                     ??SetUart:
   \   00000000   F44F2DE9           PUSH     {R2,R4-R11,LR}
   \   00000004   28609DE5           LDR      R6,[SP, #+40]
   \   00000008   2C709DE5           LDR      R7,[SP, #+44]
   \   0000000C   3080DDE5           LDRB     R8,[SP, #+48]
   \   00000010   0140A0E1           MOV      R4,R1
   \   00000014   0350A0E1           MOV      R5,R3
    753              bool Error = true;
   \   00000018   0110A0E3           MOV      R1,#+1
    754              if (uart >= 0 && uart < MAX_COM_PORTS) {
   \   0000001C   000054E3           CMP      R4,#+0
   \   00000020   6700004A           BMI      ??SetUart_1
   \   00000024   070054E3           CMP      R4,#+7
   \   00000028   650000AA           BGE      ??SetUart_1
    755                  if (Channels[uart]) {
   \   0000002C   049180E0           ADD      R9,R0,R4, LSL #+2
   \   00000030   680399E5           LDR      R0,[R9, #+872]
   \   00000034   000050E3           CMP      R0,#+0
   \   00000038   0000000A           BEQ      ??SetUart_2
    756                      delete Channels[uart];
   \   0000003C   ........           _BLF     `??delete ~TSNUart`,`??delete ~TSNUart??rA`
    757                  }
    758                  TSNUart *UartPtr = new TSNUart();
   \                     ??SetUart_2:
   \   00000040   E000A0E3           MOV      R0,#+224
   \   00000044   ........           _BLF     `??operator new`,`??operator new??rA`
   \   00000048   00B0B0E1           MOVS     R11,R0
   \   0000004C   0200000A           BEQ      ??SetUart_3
   \   00000050   ........           _BLF     ??TSNUart,??TSNUart??rA
   \   00000054   0B00A0E1           MOV      R0,R11
   \   00000058   000000EA           B        ??SetUart_4
   \                     ??SetUart_3:
   \   0000005C   0000A0E3           MOV      R0,#+0
    759                  UartPtr->PortNumber = uart;
   \                     ??SetUart_4:
   \   00000060   804080E5           STR      R4,[R0, #+128]
    760                  UartPtr->BaudRate = Baudrate;
   \   00000064   AC5080E5           STR      R5,[R0, #+172]
    761                  UartPtr->Parity = Parity;
   \   00000068   C080C0E5           STRB     R8,[R0, #+192]
    762                  UartPtr->StopBits = StopBit;
   \   0000006C   B47080E5           STR      R7,[R0, #+180]
    763                  UartPtr->WordLength = DataBit;
   \   00000070   B06080E5           STR      R6,[R0, #+176]
    764          //      UartPtr->UartType = 1;
    765                  switch (key) {
   \   00000074   00C09DE5           LDR      R12,[SP, #+0]
   \   00000078   4B10A0E3           MOV      R1,#+75
   \   0000007C   7C1D81E3           ORR      R1,R1,#0x1F00
   \   00000080   962CA0E3           MOV      R2,#+38400
   \   00000084   0C3081E2           ADD      R3,R1,#+12
   \   00000088   1D4081E2           ADD      R4,R1,#+29
   \   0000008C   235081E2           ADD      R5,R1,#+35
   \   00000090   246081E3           ORR      R6,R1,#0x24
   \   00000094   0D7081E2           ADD      R7,R1,#+13
   \   00000098   968DA0E3           MOV      R8,#+9600
   \   0000009C   01B081E2           ADD      R11,R1,#+1
   \   000000A0   6A005CE3           CMP      R12,#+106
   \   000000A4   4000000A           BEQ      ??SetUart_5
   \   000000A8   6DE081E2           ADD      LR,R1,#+109
   \   000000AC   0E005CE1           CMP      R12,LR
   \   000000B0   4B00000A           BEQ      ??SetUart_6
   \   000000B4   6EE081E2           ADD      LR,R1,#+110
   \   000000B8   0E005CE1           CMP      R12,LR
   \   000000BC   4C00000A           BEQ      ??SetUart_7
   \   000000C0   6FE081E2           ADD      LR,R1,#+111
   \   000000C4   0E005CE1           CMP      R12,LR
   \   000000C8   4D00000A           BEQ      ??SetUart_8
   \   000000CC   70E081E2           ADD      LR,R1,#+112
   \   000000D0   0E005CE1           CMP      R12,LR
   \   000000D4   4E00000A           BEQ      ??SetUart_9
   \   000000D8   71E081E2           ADD      LR,R1,#+113
   \   000000DC   0E005CE1           CMP      R12,LR
   \   000000E0   5000000A           BEQ      ??SetUart_10
   \   000000E4   72E081E2           ADD      LR,R1,#+114
   \   000000E8   0E005CE1           CMP      R12,LR
   \   000000EC   3600000A           BEQ      ??SetUart_11
   \   000000F0   73E081E2           ADD      LR,R1,#+115
   \   000000F4   0E005CE1           CMP      R12,LR
   \   000000F8   74E08112           ADDNE    LR,R1,#+116
   \   000000FC   0E005C11           CMPNE    R12,LR
   \   00000100   76E08112           ADDNE    LR,R1,#+118
   \   00000104   0E005C11           CMPNE    R12,LR
   \   00000108   4900000A           BEQ      ??SetUart_12
   \   0000010C   78E081E2           ADD      LR,R1,#+120
   \   00000110   0E005CE1           CMP      R12,LR
   \   00000114   4B00000A           BEQ      ??SetUart_13
   \   00000118   79E081E2           ADD      LR,R1,#+121
   \   0000011C   0E005CE1           CMP      R12,LR
   \   00000120   4D00000A           BEQ      ??SetUart_14
   \   00000124   7BE081E2           ADD      LR,R1,#+123
   \   00000128   0E005CE1           CMP      R12,LR
   \   0000012C   4E00000A           BEQ      ??SetUart_15
   \   00000130   7EE081E2           ADD      LR,R1,#+126
   \   00000134   0E005CE1           CMP      R12,LR
   \   00000138   4F00000A           BEQ      ??SetUart_16
   \   0000013C   7FE081E2           ADD      LR,R1,#+127
   \   00000140   0E005CE1           CMP      R12,LR
   \   00000144   4E00000A           BEQ      ??SetUart_17
   \   00000148   80E081E3           ORR      LR,R1,#0x80
   \   0000014C   0E005CE1           CMP      R12,LR
   \   00000150   4D00000A           BEQ      ??SetUart_18
   \   00000154   81E081E2           ADD      LR,R1,#+129
   \   00000158   0E005CE1           CMP      R12,LR
   \   0000015C   4D00000A           BEQ      ??SetUart_19
   \   00000160   82E081E2           ADD      LR,R1,#+130
   \   00000164   0E005CE1           CMP      R12,LR
   \   00000168   5000000A           BEQ      ??SetUart_20
   \   0000016C   83E081E2           ADD      LR,R1,#+131
   \   00000170   0E005CE1           CMP      R12,LR
   \   00000174   5100000A           BEQ      ??SetUart_21
   \   00000178   84E081E3           ORR      LR,R1,#0x84
   \   0000017C   0E005CE1           CMP      R12,LR
   \   00000180   5000000A           BEQ      ??SetUart_22
   \   00000184   89E081E2           ADD      LR,R1,#+137
   \   00000188   0E005CE1           CMP      R12,LR
   \   0000018C   5200000A           BEQ      ??SetUart_23
   \   00000190   8BE081E2           ADD      LR,R1,#+139
   \   00000194   0E005CE1           CMP      R12,LR
   \   00000198   5300000A           BEQ      ??SetUart_24
   \   0000019C   8DE081E2           ADD      LR,R1,#+141
   \   000001A0   0E005CE1           CMP      R12,LR
   \   000001A4   5400000A           BEQ      ??SetUart_25
   \   000001A8   000000EA           B        ??SetUart_26
    766                  case C_NONE      :
    767                      delete UartPtr;
   \                     ??SetUart_5:
   \   000001AC   ........           _BLF     `??delete ~TSNUart`,`??delete ~TSNUart??rA`
    768                      UartPtr = NULL;
    769                      break;
    770                  case C_TCU_COM_232_PRINTER:
    771                      UartPtr->HWProtocol = C_UART_HWPRO_232;
    772                      UartPtr->SWProtocol = C_UART_SWPRO_PRINTER;
    773                      UartPtr->Device     = C_UART_DEVICE_PRINTER;
    774                      break;
    775                  case C_TCU_COM_232_TDU   :
    776                      UartPtr->HWProtocol = C_UART_HWPRO_232;
    777                      UartPtr->SWProtocol = C_UART_SWPRO_ANPRO10;
    778                      UartPtr->Device     = C_UART_DEVICE_TDU;
    779                      break;
    780                  case C_TCU_COM_232_PC    :
    781                      UartPtr->HWProtocol = C_UART_HWPRO_232;
    782                      UartPtr->SWProtocol = C_UART_SWPRO_ANPRO10;
    783                      UartPtr->Device     = C_UART_DEVICE_PC;
    784                      break;
    785                  case C_TCU_COM_232_TCU   :
    786                      UartPtr->HWProtocol = C_UART_HWPRO_232;
    787                      UartPtr->SWProtocol = C_UART_SWPRO_ANPRO10;
    788                      UartPtr->Device     = C_UART_DEVICE_TCU;
    789                      break;
    790                  case C_TCU_COM_232_PROT3 :
    791                      UartPtr->HWProtocol = C_UART_HWPRO_232;
    792                      UartPtr->SWProtocol = C_UART_SWPRO_ANPRO3;
    793                      UartPtr->Device     = C_UART_DEVICE_ANPRO3;
    794                      break;
    795                  case C_TCU_COM_232_PROT10:
    796                      UartPtr->HWProtocol = C_UART_HWPRO_232;
    797                      UartPtr->SWProtocol = C_UART_SWPRO_ANPRO10;
    798                      UartPtr->Device     = C_UART_DEVICE_ANPRO10;
    799                      break;
    800                  case C_TCU_COM_232_MODBUS_MASTER  :
    801                      UartPtr->HWProtocol = C_UART_HWPRO_232;
    802                      UartPtr->SWProtocol = C_UART_SWPRO_MODBUS;
    803                      UartPtr->Device     = C_UART_DEVICE_MODBUS_MASTER;
    804                      UartPtr->BaudRate   = 9600;
    805                      break;
    806                  case C_TCU_COM_232_MODBUS_SLAVE  :
    807                      UartPtr->HWProtocol = C_UART_HWPRO_232;
    808                      UartPtr->SWProtocol = C_UART_SWPRO_MODBUS;
    809                      UartPtr->Device     = C_UART_DEVICE_MODBUS_SLAVE;
    810                      UartPtr->BaudRate   = 9600;
    811                  case C_TCU_COM_232_MODBUS_MASTER_INV  :
    812                      UartPtr->HWProtocol = C_UART_HWPRO_232;
    813                      UartPtr->SWProtocol = C_UART_SWPRO_MODBUS;
    814                      UartPtr->Device     = C_UART_DEVICE_MODBUS_MASTER;
    815                      UartPtr->BaudRate   = 9600;
    816                      break;
    817                  case C_TCU_COM_232_MODBUS_SLAVE_INV  :
    818                      UartPtr->HWProtocol = C_UART_HWPRO_232;
    819                      UartPtr->SWProtocol = C_UART_SWPRO_MODBUS;
    820                      UartPtr->Device     = C_UART_DEVICE_MODBUS_SLAVE;
    821                      UartPtr->BaudRate   = 9600;
    822                      break;
    823                  case C_TCU_COM_232_MODICON_MASTER  :
    824                      UartPtr->HWProtocol = C_UART_HWPRO_232;
    825                      UartPtr->SWProtocol = C_UART_SWPRO_MODBUS;
    826                      UartPtr->Device     = C_UART_DEVICE_MODICON_MASTER;
    827                      UartPtr->BaudRate   = 9600;
    828                      break;
    829                  case C_TCU_COM_232_MODICON_SLAVE  :
    830                      UartPtr->HWProtocol = C_UART_HWPRO_232;
    831                      UartPtr->SWProtocol = C_UART_SWPRO_MODBUS;
    832                      UartPtr->Device     = C_UART_DEVICE_MODICON_SLAVE;
    833                      UartPtr->BaudRate   = 9600;
    834                      break;
    835                  case C_TCU_COM_485_TCU   :
    836                      UartPtr->HWProtocol = C_UART_HWPRO_485;
    837                      UartPtr->SWProtocol = C_UART_SWPRO_ANPRO10;
    838                      UartPtr->Device     = C_UART_DEVICE_TCU;
    839                      break;
    840                  case C_TCU_COM_485_PROT3 :
    841                      UartPtr->HWProtocol = C_UART_HWPRO_485;
    842                      UartPtr->SWProtocol = C_UART_SWPRO_ANPRO3;
    843                      UartPtr->Device     = C_UART_DEVICE_ANPRO3;
    844                      break;
    845                  case C_TCU_COM_485_PROT10:
    846                      UartPtr->HWProtocol = C_UART_HWPRO_485;
    847                      UartPtr->SWProtocol = C_UART_SWPRO_ANPRO10;
    848                      UartPtr->Device     = C_UART_DEVICE_ANPRO10;
    849                      break;
    850                  case C_TCU_COM_485_ZB    :
    851                      UartPtr->HWProtocol = C_UART_HWPRO_485;
    852                      UartPtr->SWProtocol = C_UART_SWPRO_ANPRO10;
    853                      UartPtr->Device     = C_UART_DEVICE_ZB;
    854                      UartPtr->BaudRate   = 38400;
    855                      break;
    856                  case C_TCU_COM_485_ZB_RED:
    857                      UartPtr->HWProtocol = C_UART_HWPRO_485;
    858                      UartPtr->SWProtocol = C_UART_SWPRO_ANPRO10;
    859                      UartPtr->Device   = C_UART_DEVICE_ZB_RED;
    860                      UartPtr->BaudRate   = 38400;
    861                      break;
    862                  case C_TCU_COM_485_MODBUS_MASTER  :
    863                      UartPtr->HWProtocol = C_UART_HWPRO_485;
    864                      UartPtr->SWProtocol = C_UART_SWPRO_MODBUS;
    865                      UartPtr->Device     = C_UART_DEVICE_MODBUS_MASTER;
    866                      UartPtr->BaudRate   = 9600;
    867                      break;
    868                  case C_TCU_COM_485_MODBUS_MASTER_INV  :
    869                      UartPtr->HWProtocol = C_UART_HWPRO_485;
    870                      UartPtr->SWProtocol = C_UART_SWPRO_MODBUS;
    871                      UartPtr->Device     = C_UART_DEVICE_MODBUS_MASTER_INV;
    872                      UartPtr->BaudRate   = 9600;
    873                      break;
    874                  case C_TCU_COM_485_MODICON_MASTER  :
    875                      UartPtr->HWProtocol = C_UART_HWPRO_485;
    876                      UartPtr->SWProtocol = C_UART_SWPRO_MODBUS;
    877                      UartPtr->Device     = C_UART_DEVICE_MODICON_MASTER;
    878                      UartPtr->BaudRate   = 9600;
    879                      break;
    880                  case C_TCU_COM_485_MODICON_SLAVE  :
    881                      UartPtr->HWProtocol = C_UART_HWPRO_485;
    882                      UartPtr->SWProtocol = C_UART_SWPRO_MODBUS;
    883                      UartPtr->Device     = C_UART_DEVICE_MODICON_SLAVE;
    884                      UartPtr->BaudRate   = 9600;
    885                      break;
    886                  case C_TCU_COM_485_TPC   :
    887                      UartPtr->HWProtocol = C_UART_HWPRO_485;
    888                      UartPtr->SWProtocol = C_UART_SWPRO_ANPRO1;
    889                      UartPtr->Device     = C_UART_DEVICE_TPC;
    890                      UartPtr->BaudRate   = 9600;
    891                      break;
    892                  default:
    893                      UartPtr = NULL;
   \                     ??SetUart_26:
   \   000001B0   0000A0E3           MOV      R0,#+0
    894                      break;
    895                  }
    896                  Channels[uart] = UartPtr;
   \                     ??SetUart_27:
   \   000001B4   680389E5           STR      R0,[R9, #+872]
    897                  PortKey[uart] = key;
   \   000001B8   00009DE5           LDR      R0,[SP, #+0]
    898                  Error = false;
   \   000001BC   0010A0E3           MOV      R1,#+0
   \   000001C0   340389E5           STR      R0,[R9, #+820]
    899              }
    900              return (Error);
   \                     ??SetUart_1:
   \   000001C4   0100A0E1           MOV      R0,R1
   \   000001C8   ........           B        ?Subroutine51
   \                     ??SetUart_11:
   \   000001CC   A01080E5           STR      R1,[R0, #+160]
   \   000001D0   0E1081E2           ADD      R1,R1,#+14
   \   000001D4   A41080E5           STR      R1,[R0, #+164]
   \                     ??SetUart_28:
   \   000001D8   1A1081E2           ADD      R1,R1,#+26
   \                     ??SetUart_29:
   \   000001DC   A81080E5           STR      R1,[R0, #+168]
   \   000001E0   F3FFFFEA           B        ??SetUart_27
   \                     ??SetUart_6:
   \   000001E4   A01080E5           STR      R1,[R0, #+160]
   \   000001E8   A43080E5           STR      R3,[R0, #+164]
   \   000001EC   161081E2           ADD      R1,R1,#+22
   \   000001F0   F9FFFFEA           B        ??SetUart_29
   \                     ??SetUart_7:
   \   000001F4   A01080E5           STR      R1,[R0, #+160]
   \   000001F8   A43080E5           STR      R3,[R0, #+164]
   \   000001FC   171081E2           ADD      R1,R1,#+23
   \   00000200   F5FFFFEA           B        ??SetUart_29
   \                     ??SetUart_8:
   \   00000204   A01080E5           STR      R1,[R0, #+160]
   \                     ??SetUart_30:
   \   00000208   A43080E5           STR      R3,[R0, #+164]
   \   0000020C   181081E2           ADD      R1,R1,#+24
   \   00000210   F1FFFFEA           B        ??SetUart_29
   \                     ??SetUart_9:
   \   00000214   A01080E5           STR      R1,[R0, #+160]
   \                     ??SetUart_31:
   \   00000218   0B1081E2           ADD      R1,R1,#+11
   \   0000021C   A41080E5           STR      R1,[R0, #+164]
   \   00000220   0E1081E2           ADD      R1,R1,#+14
   \   00000224   ECFFFFEA           B        ??SetUart_29
   \                     ??SetUart_10:
   \   00000228   A01080E5           STR      R1,[R0, #+160]
   \   0000022C   A43080E5           STR      R3,[R0, #+164]
   \   00000230   E8FFFFEA           B        ??SetUart_28
   \                     ??SetUart_12:
   \   00000234   A01080E5           STR      R1,[R0, #+160]
   \                     ??SetUart_32:
   \   00000238   A47080E5           STR      R7,[R0, #+164]
   \   0000023C   A84080E5           STR      R4,[R0, #+168]
   \                     ??SetUart_33:
   \   00000240   AC8080E5           STR      R8,[R0, #+172]
   \   00000244   DAFFFFEA           B        ??SetUart_27
   \                     ??SetUart_13:
   \   00000248   A01080E5           STR      R1,[R0, #+160]
   \   0000024C   A47080E5           STR      R7,[R0, #+164]
   \   00000250   201081E3           ORR      R1,R1,#0x20
   \                     ??SetUart_34:
   \   00000254   A81080E5           STR      R1,[R0, #+168]
   \   00000258   F8FFFFEA           B        ??SetUart_33
   \                     ??SetUart_14:
   \   0000025C   A01080E5           STR      R1,[R0, #+160]
   \   00000260   A47080E5           STR      R7,[R0, #+164]
   \   00000264   A85080E5           STR      R5,[R0, #+168]
   \   00000268   F4FFFFEA           B        ??SetUart_33
   \                     ??SetUart_15:
   \   0000026C   A01080E5           STR      R1,[R0, #+160]
   \   00000270   A47080E5           STR      R7,[R0, #+164]
   \   00000274   A86080E5           STR      R6,[R0, #+168]
   \   00000278   F0FFFFEA           B        ??SetUart_33
   \                     ??SetUart_16:
   \   0000027C   A0B080E5           STR      R11,[R0, #+160]
   \   00000280   E0FFFFEA           B        ??SetUart_30
   \                     ??SetUart_17:
   \   00000284   A0B080E5           STR      R11,[R0, #+160]
   \   00000288   E2FFFFEA           B        ??SetUart_31
   \                     ??SetUart_18:
   \   0000028C   A0B080E5           STR      R11,[R0, #+160]
   \   00000290   A43080E5           STR      R3,[R0, #+164]
   \   00000294   CFFFFFEA           B        ??SetUart_28
   \                     ??SetUart_19:
   \   00000298   A0B080E5           STR      R11,[R0, #+160]
   \   0000029C   A43080E5           STR      R3,[R0, #+164]
   \   000002A0   1B1081E2           ADD      R1,R1,#+27
   \                     ??SetUart_35:
   \   000002A4   A81080E5           STR      R1,[R0, #+168]
   \   000002A8   AC2080E5           STR      R2,[R0, #+172]
   \   000002AC   C0FFFFEA           B        ??SetUart_27
   \                     ??SetUart_20:
   \   000002B0   A0B080E5           STR      R11,[R0, #+160]
   \   000002B4   A43080E5           STR      R3,[R0, #+164]
   \   000002B8   1C1081E2           ADD      R1,R1,#+28
   \   000002BC   F8FFFFEA           B        ??SetUart_35
   \                     ??SetUart_21:
   \   000002C0   A0B080E5           STR      R11,[R0, #+160]
   \   000002C4   DBFFFFEA           B        ??SetUart_32
   \                     ??SetUart_22:
   \   000002C8   A0B080E5           STR      R11,[R0, #+160]
   \   000002CC   A47080E5           STR      R7,[R0, #+164]
   \   000002D0   1E1081E2           ADD      R1,R1,#+30
   \   000002D4   A81080E5           STR      R1,[R0, #+168]
   \   000002D8   D8FFFFEA           B        ??SetUart_33
   \                     ??SetUart_23:
   \   000002DC   A0B080E5           STR      R11,[R0, #+160]
   \   000002E0   A47080E5           STR      R7,[R0, #+164]
   \   000002E4   A85080E5           STR      R5,[R0, #+168]
   \   000002E8   D4FFFFEA           B        ??SetUart_33
   \                     ??SetUart_24:
   \   000002EC   A0B080E5           STR      R11,[R0, #+160]
   \   000002F0   A47080E5           STR      R7,[R0, #+164]
   \   000002F4   A86080E5           STR      R6,[R0, #+168]
   \   000002F8   D0FFFFEA           B        ??SetUart_33
   \                     ??SetUart_25:
   \   000002FC   A0B080E5           STR      R11,[R0, #+160]
   \   00000300   0A1081E2           ADD      R1,R1,#+10
   \   00000304   A41080E5           STR      R1,[R0, #+164]
   \   00000308   1D1081E2           ADD      R1,R1,#+29
   \   0000030C   D0FFFFEA           B        ??SetUart_34
    901          }

   \                                 In segment CODE, align 4, keep-with-next
   \                     ?Subroutine51:
   \   00000000   F24FBDE8           POP      {R1,R4-R11,LR}
   \   00000004   1EFF2FE1           BX       LR               ;; return
    902          
    903          
    904          ///////////////////////////////////////////////////////////////
    905          //
    906          // Routines for the Configuration
    907          //
    908          ///////////////////////////////////////////////////////////////
    909          

   \                                 In segment CODE, align 4, keep-with-next
    910          void PROTanksystemUnit::WriteConfigToFile(TSNConfigString &ConfigString) {
   \                     ??WriteConfigToFile:
   \   00000000   F24F2DE9           PUSH     {R1,R4-R11,LR}
   \   00000004   E1DF4DE2           SUB      SP,SP,#+900
   \   00000008   0040A0E1           MOV      R4,R0
    911              AnsiString LocalString;
   \   0000000C   20008DE2           ADD      R0,SP,#+32
   \   00000010   ........           _BLF     ??AnsiString,??AnsiString??rA
    912              LocalString += KeyWord(C_PRO_TANKSYS_UNIT) + CrLfStr;
   \   00000014   7E10A0E3           MOV      R1,#+126
   \   00000018   401E81E3           ORR      R1,R1,#0x400
   \   0000001C   4E0F8DE2           ADD      R0,SP,#+312
   \   00000020   ........           _BLF     ??KeyWord,??KeyWord??rA
   \   00000024   A4269FE5           LDR      R2,??WriteConfigToFile_1+0x4  ;; CrLfStr
   \   00000028   4E1F8DE2           ADD      R1,SP,#+312
   \   0000002C   470F8DE2           ADD      R0,SP,#+284
   \   00000030   ........           _BLF     `??operator+`,`??operator+??rA_1`
   \   00000034   ........           LDR      R0,??DataTable56  ;; ??npos
   \   00000038   0020A0E3           MOV      R2,#+0
   \   0000003C   005090E5           LDR      R5,[R0, #+0]
   \   00000040   471F8DE2           ADD      R1,SP,#+284
   \   00000044   0530A0E1           MOV      R3,R5
   \   00000048   20008DE2           ADD      R0,SP,#+32
   \   0000004C   ........           _BLF     ??append,??append??rA
   \   00000050   0020A0E3           MOV      R2,#+0
   \   00000054   0110A0E3           MOV      R1,#+1
   \   00000058   470F8DE2           ADD      R0,SP,#+284
   \   0000005C   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000060   0020A0E3           MOV      R2,#+0
   \   00000064   0110A0E3           MOV      R1,#+1
   \   00000068   4E0F8DE2           ADD      R0,SP,#+312
   \   0000006C   ........           _BLF     ??_Tidy,??_Tidy??rA
    913              // No need
    914              //LocalString +=TabStr1+KeyWord(C_TU_ID)+(AnsiString)UnitID+CrLfStr;
    915              LocalString += TabStr1 + KeyWord(C_TU_ADDRESS) + (AnsiString)Address + CrLfStr;
   \   00000070   2C1394E5           LDR      R1,[R4, #+812]
   \   00000074   DA0F8DE2           ADD      R0,SP,#+872
   \   00000078   ........           _BLF     ??AnsiString_2,??AnsiString??rA_2
   \   0000007C   0060A0E1           MOV      R6,R0
   \   00000080   0B10A0E3           MOV      R1,#+11
   \   00000084   801D81E3           ORR      R1,R1,#0x2000
   \   00000088   6A0F8DE2           ADD      R0,SP,#+424
   \   0000008C   ........           _BLF     ??KeyWord,??KeyWord??rA
   \   00000090   3C169FE5           LDR      R1,??WriteConfigToFile_1+0x8  ;; TabStr1
   \   00000094   6A2F8DE2           ADD      R2,SP,#+424
   \   00000098   630F8DE2           ADD      R0,SP,#+396
   \   0000009C   ........           _BLF     `??operator+`,`??operator+??rA_1`
   \   000000A0   0620A0E1           MOV      R2,R6
   \   000000A4   631F8DE2           ADD      R1,SP,#+396
   \   000000A8   5C0F8DE2           ADD      R0,SP,#+368
   \   000000AC   ........           _BLF     `??operator+`,`??operator+??rA_1`
   \   000000B0   18269FE5           LDR      R2,??WriteConfigToFile_1+0x4  ;; CrLfStr
   \   000000B4   5C1F8DE2           ADD      R1,SP,#+368
   \   000000B8   550F8DE2           ADD      R0,SP,#+340
   \   000000BC   ........           _BLF     `??operator+`,`??operator+??rA_1`
   \   000000C0   0530A0E1           MOV      R3,R5
   \   000000C4   0020A0E3           MOV      R2,#+0
   \   000000C8   551F8DE2           ADD      R1,SP,#+340
   \   000000CC   20008DE2           ADD      R0,SP,#+32
   \   000000D0   ........           _BLF     ??append,??append??rA
   \   000000D4   0020A0E3           MOV      R2,#+0
   \   000000D8   0110A0E3           MOV      R1,#+1
   \   000000DC   550F8DE2           ADD      R0,SP,#+340
   \   000000E0   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000000E4   0020A0E3           MOV      R2,#+0
   \   000000E8   0110A0E3           MOV      R1,#+1
   \   000000EC   5C0F8DE2           ADD      R0,SP,#+368
   \   000000F0   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000000F4   0020A0E3           MOV      R2,#+0
   \   000000F8   0110A0E3           MOV      R1,#+1
   \   000000FC   DA0F8DE2           ADD      R0,SP,#+872
   \   00000100   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000104   0020A0E3           MOV      R2,#+0
   \   00000108   0110A0E3           MOV      R1,#+1
   \   0000010C   630F8DE2           ADD      R0,SP,#+396
   \   00000110   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000114   0020A0E3           MOV      R2,#+0
   \   00000118   0110A0E3           MOV      R1,#+1
   \   0000011C   6A0F8DE2           ADD      R0,SP,#+424
   \   00000120   ........           _BLF     ??_Tidy,??_Tidy??rA
    916              LocalString += TabStr1 + KeyWord(C_TU_POWER_VOLTAGE) + FloatToAnsiString(VoltageSetPoint,  8, 1) + CrLfStr;
   \   00000124   541394E5           LDR      R1,[R4, #+852]
   \   00000128   0130A0E3           MOV      R3,#+1
   \   0000012C   0820A0E3           MOV      R2,#+8
   \   00000130   8D0F8DE2           ADD      R0,SP,#+564
   \   00000134   ........           _BLF     ??FloatToAnsiString,??FloatToAnsiString??rA
   \   00000138   1110A0E3           MOV      R1,#+17
   \   0000013C   801D81E3           ORR      R1,R1,#0x2000
   \   00000140   860F8DE2           ADD      R0,SP,#+536
   \   00000144   ........           _BLF     ??KeyWord,??KeyWord??rA
   \   00000148   84159FE5           LDR      R1,??WriteConfigToFile_1+0x8  ;; TabStr1
   \   0000014C   862F8DE2           ADD      R2,SP,#+536
   \   00000150   7F0F8DE2           ADD      R0,SP,#+508
   \   00000154   ........           _BLF     `??operator+`,`??operator+??rA_1`
   \   00000158   8D2F8DE2           ADD      R2,SP,#+564
   \   0000015C   7F1F8DE2           ADD      R1,SP,#+508
   \   00000160   780F8DE2           ADD      R0,SP,#+480
   \   00000164   ........           _BLF     `??operator+`,`??operator+??rA_1`
   \   00000168   60259FE5           LDR      R2,??WriteConfigToFile_1+0x4  ;; CrLfStr
   \   0000016C   781F8DE2           ADD      R1,SP,#+480
   \   00000170   710F8DE2           ADD      R0,SP,#+452
   \   00000174   ........           _BLF     `??operator+`,`??operator+??rA_1`
   \   00000178   0530A0E1           MOV      R3,R5
   \   0000017C   0020A0E3           MOV      R2,#+0
   \   00000180   711F8DE2           ADD      R1,SP,#+452
   \   00000184   20008DE2           ADD      R0,SP,#+32
   \   00000188   ........           _BLF     ??append,??append??rA
   \   0000018C   0020A0E3           MOV      R2,#+0
   \   00000190   0110A0E3           MOV      R1,#+1
   \   00000194   710F8DE2           ADD      R0,SP,#+452
   \   00000198   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   0000019C   0020A0E3           MOV      R2,#+0
   \   000001A0   0110A0E3           MOV      R1,#+1
   \   000001A4   780F8DE2           ADD      R0,SP,#+480
   \   000001A8   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000001AC   0020A0E3           MOV      R2,#+0
   \   000001B0   0110A0E3           MOV      R1,#+1
   \   000001B4   8D0F8DE2           ADD      R0,SP,#+564
   \   000001B8   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000001BC   0020A0E3           MOV      R2,#+0
   \   000001C0   0110A0E3           MOV      R1,#+1
   \   000001C4   7F0F8DE2           ADD      R0,SP,#+508
   \   000001C8   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000001CC   0020A0E3           MOV      R2,#+0
   \   000001D0   0110A0E3           MOV      R1,#+1
   \   000001D4   860F8DE2           ADD      R0,SP,#+536
   \   000001D8   ........           _BLF     ??_Tidy,??_Tidy??rA
    917              LocalString += TabStr1 + KeyWord(C_TU_POWER_SOURCE) + KeyWord(PowerSource) + CrLfStr;
   \   000001DC   501394E5           LDR      R1,[R4, #+848]
   \   000001E0   B00F8DE2           ADD      R0,SP,#+704
   \   000001E4   ........           _BLF     ??KeyWord,??KeyWord??rA
   \   000001E8   1210A0E3           MOV      R1,#+18
   \   000001EC   801D81E3           ORR      R1,R1,#0x2000
   \   000001F0   A90F8DE2           ADD      R0,SP,#+676
   \   000001F4   ........           _BLF     ??KeyWord,??KeyWord??rA
   \   000001F8   D4149FE5           LDR      R1,??WriteConfigToFile_1+0x8  ;; TabStr1
   \   000001FC   A92F8DE2           ADD      R2,SP,#+676
   \   00000200   A20F8DE2           ADD      R0,SP,#+648
   \   00000204   ........           _BLF     `??operator+`,`??operator+??rA_1`
   \   00000208   B02F8DE2           ADD      R2,SP,#+704
   \   0000020C   A21F8DE2           ADD      R1,SP,#+648
   \   00000210   9B0F8DE2           ADD      R0,SP,#+620
   \   00000214   ........           _BLF     `??operator+`,`??operator+??rA_1`
   \   00000218   B0249FE5           LDR      R2,??WriteConfigToFile_1+0x4  ;; CrLfStr
   \   0000021C   9B1F8DE2           ADD      R1,SP,#+620
   \   00000220   940F8DE2           ADD      R0,SP,#+592
   \   00000224   ........           _BLF     `??operator+`,`??operator+??rA_1`
   \   00000228   0530A0E1           MOV      R3,R5
   \   0000022C   0020A0E3           MOV      R2,#+0
   \   00000230   941F8DE2           ADD      R1,SP,#+592
   \   00000234   20008DE2           ADD      R0,SP,#+32
   \   00000238   ........           _BLF     ??append,??append??rA
   \   0000023C   0020A0E3           MOV      R2,#+0
   \   00000240   0110A0E3           MOV      R1,#+1
   \   00000244   940F8DE2           ADD      R0,SP,#+592
   \   00000248   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   0000024C   0020A0E3           MOV      R2,#+0
   \   00000250   0110A0E3           MOV      R1,#+1
   \   00000254   9B0F8DE2           ADD      R0,SP,#+620
   \   00000258   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   0000025C   0020A0E3           MOV      R2,#+0
   \   00000260   0110A0E3           MOV      R1,#+1
   \   00000264   B00F8DE2           ADD      R0,SP,#+704
   \   00000268   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   0000026C   0020A0E3           MOV      R2,#+0
   \   00000270   0110A0E3           MOV      R1,#+1
   \   00000274   A20F8DE2           ADD      R0,SP,#+648
   \   00000278   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   0000027C   0020A0E3           MOV      R2,#+0
   \   00000280   0110A0E3           MOV      R1,#+1
   \   00000284   A90F8DE2           ADD      R0,SP,#+676
   \   00000288   ........           _BLF     ??_Tidy,??_Tidy??rA
    918              LocalString += CrLfStr;
   \   0000028C   3C149FE5           LDR      R1,??WriteConfigToFile_1+0x4  ;; CrLfStr
   \   00000290   0530A0E1           MOV      R3,R5
   \   00000294   0020A0E3           MOV      R2,#+0
   \   00000298   20008DE2           ADD      R0,SP,#+32
   \   0000029C   ........           _BLF     ??append,??append??rA
    919          
    920          //    LocalString += MakeConfigString(ConfigString);   //common
    921          
    922              for (int i = 0; i < MAX_COM_PORTS; i++) {
   \   000002A0   0060A0E3           MOV      R6,#+0
    923                  if (Channels[i])  LocalString += Channels[i]->MakeConfigString();
   \                     ??WriteConfigToFile_2:
   \   000002A4   060184E0           ADD      R0,R4,R6, LSL #+2
   \   000002A8   681390E5           LDR      R1,[R0, #+872]
   \   000002AC   000051E3           CMP      R1,#+0
   \   000002B0   0C00000A           BEQ      ??WriteConfigToFile_3
   \   000002B4   680390E5           LDR      R0,[R0, #+872]
   \   000002B8   0020A0E3           MOV      R2,#+0
   \   000002BC   04108DE2           ADD      R1,SP,#+4
   \   000002C0   ........           _BLF     ??MakeConfigString_1,??MakeConfigString??rA
   \   000002C4   0530A0E1           MOV      R3,R5
   \   000002C8   0020A0E3           MOV      R2,#+0
   \   000002CC   04108DE2           ADD      R1,SP,#+4
   \   000002D0   20008DE2           ADD      R0,SP,#+32
   \   000002D4   ........           _BLF     ??append,??append??rA
   \   000002D8   0020A0E3           MOV      R2,#+0
   \   000002DC   0110A0E3           MOV      R1,#+1
   \   000002E0   04008DE2           ADD      R0,SP,#+4
   \   000002E4   ........           _BLF     ??_Tidy,??_Tidy??rA
    924              }
   \                     ??WriteConfigToFile_3:
   \   000002E8   016086E2           ADD      R6,R6,#+1
   \   000002EC   070056E3           CMP      R6,#+7
   \   000002F0   EBFFFFBA           BLT      ??WriteConfigToFile_2
    925          
    926          // Control on TCU
    927              if (CtrlAlarmRelayPtr1) LocalString += CtrlAlarmRelayPtr1->MakeConfigString();
   \   000002F4   8C0394E5           LDR      R0,[R4, #+908]
   \   000002F8   000050E3           CMP      R0,#+0
   \   000002FC   0E00000A           BEQ      ??WriteConfigToFile_4
   \   00000300   A43090E5           LDR      R3,[R0, #+164]
   \   00000304   0020A0E3           MOV      R2,#+0
   \   00000308   0C3093E5           LDR      R3,[R3, #+12]
   \   0000030C   04108DE2           ADD      R1,SP,#+4
   \   00000310   0FE0A0E1           MOV      LR,PC
   \   00000314   13FF2FE1           BX       R3
   \   00000318   0530A0E1           MOV      R3,R5
   \   0000031C   0020A0E3           MOV      R2,#+0
   \   00000320   04108DE2           ADD      R1,SP,#+4
   \   00000324   20008DE2           ADD      R0,SP,#+32
   \   00000328   ........           _BLF     ??append,??append??rA
   \   0000032C   0020A0E3           MOV      R2,#+0
   \   00000330   0110A0E3           MOV      R1,#+1
   \   00000334   04008DE2           ADD      R0,SP,#+4
   \   00000338   ........           _BLF     ??_Tidy,??_Tidy??rA
    928              if (CtrlAlarmRelayPtr2) LocalString += CtrlAlarmRelayPtr2->MakeConfigString();
   \                     ??WriteConfigToFile_4:
   \   0000033C   900394E5           LDR      R0,[R4, #+912]
   \   00000340   000050E3           CMP      R0,#+0
   \   00000344   0E00000A           BEQ      ??WriteConfigToFile_5
   \   00000348   A43090E5           LDR      R3,[R0, #+164]
   \   0000034C   0020A0E3           MOV      R2,#+0
   \   00000350   0C3093E5           LDR      R3,[R3, #+12]
   \   00000354   04108DE2           ADD      R1,SP,#+4
   \   00000358   0FE0A0E1           MOV      LR,PC
   \   0000035C   13FF2FE1           BX       R3
   \   00000360   0530A0E1           MOV      R3,R5
   \   00000364   0020A0E3           MOV      R2,#+0
   \   00000368   04108DE2           ADD      R1,SP,#+4
   \   0000036C   20008DE2           ADD      R0,SP,#+32
   \   00000370   ........           _BLF     ??append,??append??rA
   \   00000374   0020A0E3           MOV      R2,#+0
   \   00000378   0110A0E3           MOV      R1,#+1
   \   0000037C   04008DE2           ADD      R0,SP,#+4
   \   00000380   ........           _BLF     ??_Tidy,??_Tidy??rA
    929              if (CtrlHornPtr) LocalString += CtrlHornPtr->MakeConfigString();
   \                     ??WriteConfigToFile_5:
   \   00000384   940394E5           LDR      R0,[R4, #+916]
   \   00000388   000050E3           CMP      R0,#+0
   \   0000038C   0E00000A           BEQ      ??WriteConfigToFile_6
   \   00000390   A43090E5           LDR      R3,[R0, #+164]
   \   00000394   0020A0E3           MOV      R2,#+0
   \   00000398   0C3093E5           LDR      R3,[R3, #+12]
   \   0000039C   04108DE2           ADD      R1,SP,#+4
   \   000003A0   0FE0A0E1           MOV      LR,PC
   \   000003A4   13FF2FE1           BX       R3
   \   000003A8   0530A0E1           MOV      R3,R5
   \   000003AC   0020A0E3           MOV      R2,#+0
   \   000003B0   04108DE2           ADD      R1,SP,#+4
   \   000003B4   20008DE2           ADD      R0,SP,#+32
   \   000003B8   ........           _BLF     ??append,??append??rA
   \   000003BC   0020A0E3           MOV      R2,#+0
   \   000003C0   0110A0E3           MOV      R1,#+1
   \   000003C4   04008DE2           ADD      R0,SP,#+4
   \   000003C8   ........           _BLF     ??_Tidy,??_Tidy??rA
    930              if (CtrlLampPtr) LocalString += CtrlLampPtr->MakeConfigString();
   \                     ??WriteConfigToFile_6:
   \   000003CC   980394E5           LDR      R0,[R4, #+920]
   \   000003D0   000050E3           CMP      R0,#+0
   \   000003D4   0E00000A           BEQ      ??WriteConfigToFile_7
   \   000003D8   A43090E5           LDR      R3,[R0, #+164]
   \   000003DC   0020A0E3           MOV      R2,#+0
   \   000003E0   0C3093E5           LDR      R3,[R3, #+12]
   \   000003E4   04108DE2           ADD      R1,SP,#+4
   \   000003E8   0FE0A0E1           MOV      LR,PC
   \   000003EC   13FF2FE1           BX       R3
   \   000003F0   0530A0E1           MOV      R3,R5
   \   000003F4   0020A0E3           MOV      R2,#+0
   \   000003F8   04108DE2           ADD      R1,SP,#+4
   \   000003FC   20008DE2           ADD      R0,SP,#+32
   \   00000400   ........           _BLF     ??append,??append??rA
   \   00000404   0020A0E3           MOV      R2,#+0
   \   00000408   0110A0E3           MOV      R1,#+1
   \   0000040C   04008DE2           ADD      R0,SP,#+4
   \   00000410   ........           _BLF     ??_Tidy,??_Tidy??rA
   \                     ??WriteConfigToFile_7:
   \   00000414   0010A0E3           MOV      R1,#+0
   \   00000418   00108DE5           STR      R1,[SP, #+0]
   \   0000041C   D76FA0E3           MOV      R6,#+860
   \   00000420   740000EA           B        ??WriteConfigToFile_8
    931              for (unsigned ComPort = 0; ComPort < DeviceDataVector.size(); ComPort++) {
    932                  for (unsigned Device = 0; Device < DeviceDataVector[ComPort].size(); Device++) {
    933                      int DevKey     = DeviceDataVector[ComPort][Device].DeviceKey;
   \                     ??WriteConfigToFile_9:
   \   00000424   2410A0E3           MOV      R1,#+36
   \   00000428   910700E0           MUL      R0,R1,R7
   \   0000042C   041096E7           LDR      R1,[R6, +R4]
    934                      int DevAddress = DeviceDataVector[ComPort][Device].Address;
    935                      AnsiString Description = DeviceDataVector[ComPort][Device].Description;
    936                      LocalString += TabStr1 + KeyWord(DevKey) + AnsiString(ComPort) + " " + AnsiString(DevAddress) + " " + Description + CrLfStr;
    937                  }
   \   00000430   017087E2           ADD      R7,R7,#+1
   \   00000434   011098E7           LDR      R1,[R8, +R1]
   \   00000438   019090E7           LDR      R9,[R0, +R1]
   \   0000043C   041096E7           LDR      R1,[R6, +R4]
   \   00000440   011098E7           LDR      R1,[R8, +R1]
   \   00000444   011080E0           ADD      R1,R0,R1
   \   00000448   04A091E5           LDR      R10,[R1, #+4]
   \   0000044C   041096E7           LDR      R1,[R6, +R4]
   \   00000450   011098E7           LDR      R1,[R8, +R1]
   \   00000454   010080E0           ADD      R0,R0,R1
   \   00000458   081080E2           ADD      R1,R0,#+8
   \   0000045C   400F8DE2           ADD      R0,SP,#+256
   \   00000460   ........           _BLF     ??string,??string??rA
   \   00000464   0A10A0E1           MOV      R1,R10
   \   00000468   D30F8DE2           ADD      R0,SP,#+844
   \   0000046C   ........           _BLF     ??AnsiString_2,??AnsiString??rA_2
   \   00000470   00109DE5           LDR      R1,[SP, #+0]
   \   00000474   00A0A0E1           MOV      R10,R0
   \   00000478   CC0F8DE2           ADD      R0,SP,#+816
   \   0000047C   ........           _BLF     ??AnsiString_4,??AnsiString??rA_4
   \   00000480   00B0A0E1           MOV      R11,R0
   \   00000484   0910A0E1           MOV      R1,R9
   \   00000488   E4008DE2           ADD      R0,SP,#+228
   \   0000048C   ........           _BLF     ??KeyWord,??KeyWord??rA
   \   00000490   3C129FE5           LDR      R1,??WriteConfigToFile_1+0x8  ;; TabStr1
   \   00000494   E4208DE2           ADD      R2,SP,#+228
   \   00000498   C8008DE2           ADD      R0,SP,#+200
   \   0000049C   ........           _BLF     `??operator+`,`??operator+??rA_1`
   \   000004A0   0B20A0E1           MOV      R2,R11
   \   000004A4   C8108DE2           ADD      R1,SP,#+200
   \   000004A8   AC008DE2           ADD      R0,SP,#+172
   \   000004AC   ........           _BLF     `??operator+`,`??operator+??rA_1`
   \   000004B0   859F8FE2           ADR      R9,??WriteConfigToFile_1  ;; " "
   \   000004B4   0920A0E1           MOV      R2,R9
   \   000004B8   AC108DE2           ADD      R1,SP,#+172
   \   000004BC   90008DE2           ADD      R0,SP,#+144
   \   000004C0   ........           _BLF     `??operator+_2`,`??operator+??rA_2`
   \   000004C4   0A20A0E1           MOV      R2,R10
   \   000004C8   90108DE2           ADD      R1,SP,#+144
   \   000004CC   74008DE2           ADD      R0,SP,#+116
   \   000004D0   ........           _BLF     `??operator+`,`??operator+??rA_1`
   \   000004D4   0920A0E1           MOV      R2,R9
   \   000004D8   74108DE2           ADD      R1,SP,#+116
   \   000004DC   58008DE2           ADD      R0,SP,#+88
   \   000004E0   ........           _BLF     `??operator+_2`,`??operator+??rA_2`
   \   000004E4   402F8DE2           ADD      R2,SP,#+256
   \   000004E8   58108DE2           ADD      R1,SP,#+88
   \   000004EC   3C008DE2           ADD      R0,SP,#+60
   \   000004F0   ........           _BLF     `??operator+`,`??operator+??rA_1`
   \   000004F4   D4219FE5           LDR      R2,??WriteConfigToFile_1+0x4  ;; CrLfStr
   \   000004F8   3C108DE2           ADD      R1,SP,#+60
   \   000004FC   04008DE2           ADD      R0,SP,#+4
   \   00000500   ........           _BLF     `??operator+`,`??operator+??rA_1`
   \   00000504   0530A0E1           MOV      R3,R5
   \   00000508   0020A0E3           MOV      R2,#+0
   \   0000050C   04108DE2           ADD      R1,SP,#+4
   \   00000510   20008DE2           ADD      R0,SP,#+32
   \   00000514   ........           _BLF     ??append,??append??rA
   \   00000518   0020A0E3           MOV      R2,#+0
   \   0000051C   0110A0E3           MOV      R1,#+1
   \   00000520   04008DE2           ADD      R0,SP,#+4
   \   00000524   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000528   0020A0E3           MOV      R2,#+0
   \   0000052C   0110A0E3           MOV      R1,#+1
   \   00000530   3C008DE2           ADD      R0,SP,#+60
   \   00000534   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000538   0020A0E3           MOV      R2,#+0
   \   0000053C   0110A0E3           MOV      R1,#+1
   \   00000540   58008DE2           ADD      R0,SP,#+88
   \   00000544   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000548   0020A0E3           MOV      R2,#+0
   \   0000054C   0110A0E3           MOV      R1,#+1
   \   00000550   74008DE2           ADD      R0,SP,#+116
   \   00000554   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000558   0020A0E3           MOV      R2,#+0
   \   0000055C   0110A0E3           MOV      R1,#+1
   \   00000560   D30F8DE2           ADD      R0,SP,#+844
   \   00000564   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000568   0020A0E3           MOV      R2,#+0
   \   0000056C   0110A0E3           MOV      R1,#+1
   \   00000570   90008DE2           ADD      R0,SP,#+144
   \   00000574   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000578   0020A0E3           MOV      R2,#+0
   \   0000057C   0110A0E3           MOV      R1,#+1
   \   00000580   AC008DE2           ADD      R0,SP,#+172
   \   00000584   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000588   0020A0E3           MOV      R2,#+0
   \   0000058C   0110A0E3           MOV      R1,#+1
   \   00000590   CC0F8DE2           ADD      R0,SP,#+816
   \   00000594   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000598   0020A0E3           MOV      R2,#+0
   \   0000059C   0110A0E3           MOV      R1,#+1
   \   000005A0   C8008DE2           ADD      R0,SP,#+200
   \   000005A4   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000005A8   0020A0E3           MOV      R2,#+0
   \   000005AC   0110A0E3           MOV      R1,#+1
   \   000005B0   E4008DE2           ADD      R0,SP,#+228
   \   000005B4   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000005B8   0020A0E3           MOV      R2,#+0
   \   000005BC   0110A0E3           MOV      R1,#+1
   \   000005C0   400F8DE2           ADD      R0,SP,#+256
   \   000005C4   ........           _BLF     ??_Tidy,??_Tidy??rA
   \                     ??WriteConfigToFile_10:
   \   000005C8   040096E7           LDR      R0,[R6, +R4]
   \   000005CC   000088E0           ADD      R0,R8,R0
   \   000005D0   041090E5           LDR      R1,[R0, #+4]
   \   000005D4   000090E5           LDR      R0,[R0, #+0]
   \   000005D8   000041E0           SUB      R0,R1,R0
   \   000005DC   2410A0E3           MOV      R1,#+36
   \   000005E0   ........           _BLF     ??divu32_a,??rA??divu32_a
   \   000005E4   010057E1           CMP      R7,R1
   \   000005E8   8DFFFF3A           BCC      ??WriteConfigToFile_9
   \   000005EC   00109DE5           LDR      R1,[SP, #+0]
   \   000005F0   011081E2           ADD      R1,R1,#+1
   \   000005F4   00108DE5           STR      R1,[SP, #+0]
   \                     ??WriteConfigToFile_8:
   \   000005F8   00209DE5           LDR      R2,[SP, #+0]
   \   000005FC   040086E0           ADD      R0,R6,R4
   \   00000600   041090E5           LDR      R1,[R0, #+4]
   \   00000604   000090E5           LDR      R0,[R0, #+0]
   \   00000608   000041E0           SUB      R0,R1,R0
   \   0000060C   0C10A0E3           MOV      R1,#+12
   \   00000610   ........           _BLF     ??divu32_a,??rA??divu32_a
   \   00000614   010052E1           CMP      R2,R1
   \   00000618   0C10A033           MOVCC    R1,#+12
   \   0000061C   91020830           MULCC    R8,R1,R2
   \   00000620   0070A033           MOVCC    R7,#+0
   \   00000624   E7FFFF3A           BCC      ??WriteConfigToFile_10
    938              }
    939              LocalString += KeyWord(C_PRO_END) + CrLfStr;
   \   00000628   FA1FA0E3           MOV      R1,#+1000
   \   0000062C   BE0F8DE2           ADD      R0,SP,#+760
   \   00000630   ........           _BLF     ??KeyWord,??KeyWord??rA
   \   00000634   94209FE5           LDR      R2,??WriteConfigToFile_1+0x4  ;; CrLfStr
   \   00000638   BE1F8DE2           ADD      R1,SP,#+760
   \   0000063C   B70F8DE2           ADD      R0,SP,#+732
   \   00000640   ........           _BLF     `??operator+`,`??operator+??rA_1`
   \   00000644   0530A0E1           MOV      R3,R5
   \   00000648   0020A0E3           MOV      R2,#+0
   \   0000064C   B71F8DE2           ADD      R1,SP,#+732
   \   00000650   20008DE2           ADD      R0,SP,#+32
   \   00000654   ........           _BLF     ??append,??append??rA
   \   00000658   0020A0E3           MOV      R2,#+0
   \   0000065C   0110A0E3           MOV      R1,#+1
   \   00000660   B70F8DE2           ADD      R0,SP,#+732
   \   00000664   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000668   0020A0E3           MOV      R2,#+0
   \   0000066C   0110A0E3           MOV      R1,#+1
   \   00000670   BE0F8DE2           ADD      R0,SP,#+760
   \   00000674   ........           _BLF     ??_Tidy,??_Tidy??rA
    940              LocalString += CrLfStr;
   \   00000678   50109FE5           LDR      R1,??WriteConfigToFile_1+0x4  ;; CrLfStr
   \   0000067C   0530A0E1           MOV      R3,R5
   \   00000680   0020A0E3           MOV      R2,#+0
   \   00000684   20008DE2           ADD      R0,SP,#+32
   \   00000688   ........           _BLF     ??append,??append??rA
    941          
    942              ConfigString.AddString(LocalString);
   \   0000068C   20108DE2           ADD      R1,SP,#+32
   \   00000690   C50F8DE2           ADD      R0,SP,#+788
   \   00000694   ........           _BLF     ??string,??string??rA
   \   00000698   84039DE5           LDR      R0,[SP, #+900]
   \   0000069C   C51F8DE2           ADD      R1,SP,#+788
   \   000006A0   ........           _BLF     ??AddString,??AddString??rA
   \   000006A4   0020A0E3           MOV      R2,#+0
   \   000006A8   0110A0E3           MOV      R1,#+1
   \   000006AC   C50F8DE2           ADD      R0,SP,#+788
   \   000006B0   ........           _BLF     ??_Tidy,??_Tidy??rA
    943          }
   \   000006B4   0020A0E3           MOV      R2,#+0
   \   000006B8   0110A0E3           MOV      R1,#+1
   \   000006BC   20008DE2           ADD      R0,SP,#+32
   \   000006C0   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000006C4   E2DF8DE2           ADD      SP,SP,#+904
   \   000006C8   ........           B        ?Subroutine49
   \                     ??WriteConfigToFile_1:
   \   000006CC   20000000           DC8      " ",+0,+0
   \   000006D0   ........           DC32     CrLfStr
   \   000006D4   ........           DC32     TabStr1
    944          //---------------------------------------------------------------------------
    945          
    946          // This is only done for TCUs. PCs and TDUs are not configured separately but inside of TCU objects

   \                                 In segment CODE, align 4, keep-with-next
    947          int PROTanksystemUnit::LoadConfigFromFile(TSNConfigString &ConfigString) {
   \                     ??LoadConfigFromFile:
   \   00000000   F04F2DE9           PUSH     {R4-R11,LR}
   \   00000004   D3DF4DE2           SUB      SP,SP,#+844
   \   00000008   0150A0E1           MOV      R5,R1
    948              SetLineNumber(ConfigString.LineCount);
   \   0000000C   1C1095E5           LDR      R1,[R5, #+28]
   \   00000010   0040A0E1           MOV      R4,R0
   \   00000014   ........           _BLF     ??SetLineNumber,??SetLineNumber??rA
   \   00000018   0160A0E3           MOV      R6,#+1
    949              bool NoError = true;
    950              int ErrorLine = 0;
   \   0000001C   0010A0E3           MOV      R1,#+0
   \   00000020   00108DE5           STR      R1,[SP, #+0]
    951              int Key;
    952              UnitID = DEVICE_TCU;
   \   00000024   2000A0E3           MOV      R0,#+32
   \   00000028   240384E5           STR      R0,[R4, #+804]
    953              do {
    954                  AnsiString InputKeyWord = ConfigString.NextWord(ErrorLine);
   \                     ??LoadConfigFromFile_3:
   \   0000002C   0030A0E3           MOV      R3,#+0
   \   00000030   0D20A0E1           MOV      R2,SP
   \   00000034   90108DE2           ADD      R1,SP,#+144
   \   00000038   0500A0E1           MOV      R0,R5
   \   0000003C   ........           _BLF     ??NextWord,??NextWord??rA
   \   00000040   00009DE5           LDR      R0,[SP, #+0]
   \   00000044   000050E3           CMP      R0,#+0
   \   00000048   2200000A           BEQ      ??LoadConfigFromFile_4
    955                  if (ErrorLine) {
    956                      if (ErrorLine != EOF) {
   \   0000004C   010070E3           CMN      R0,#+1
   \   00000050   1002000A           BEQ      ??LoadConfigFromFile_5
    957                          GiveConfigWarning((AnsiString)"TCU " + (AnsiString)Address, ErrorLine);
   \   00000054   2C1394E5           LDR      R1,[R4, #+812]
   \   00000058   18008DE2           ADD      R0,SP,#+24
   \   0000005C   ........           _BLF     ??AnsiString_2,??AnsiString??rA_2
   \   00000060   ........           LDR      R1,??DataTable60  ;; `?<Constant "TCU ">`
   \   00000064   0070A0E1           MOV      R7,R0
   \   00000068   50008DE2           ADD      R0,SP,#+80
   \   0000006C   ........           _BLF     ??AnsiString_1,??AnsiString??rA_1
   \   00000070   0720A0E1           MOV      R2,R7
   \   00000074   0010A0E1           MOV      R1,R0
   \   00000078   34008DE2           ADD      R0,SP,#+52
   \   0000007C   ........           _BLF     `??operator+`,`??operator+??rA_1`
   \   00000080   34108DE2           ADD      R1,SP,#+52
   \   00000084   E4008DE2           ADD      R0,SP,#+228
   \   00000088   ........           _BLF     ??AnsiString_3,??AnsiString??rA_3
   \   0000008C   00109DE5           LDR      R1,[SP, #+0]
   \   00000090   ........           _BLF     ??GiveConfigWarning,??GiveConfigWarning??rA
   \   00000094   0020A0E3           MOV      R2,#+0
   \   00000098   0110A0E3           MOV      R1,#+1
   \   0000009C   E4008DE2           ADD      R0,SP,#+228
   \   000000A0   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000000A4   0020A0E3           MOV      R2,#+0
   \   000000A8   0110A0E3           MOV      R1,#+1
   \   000000AC   34008DE2           ADD      R0,SP,#+52
   \   000000B0   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000000B4   0020A0E3           MOV      R2,#+0
   \   000000B8   0110A0E3           MOV      R1,#+1
   \   000000BC   18008DE2           ADD      R0,SP,#+24
   \   000000C0   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000000C4   0020A0E3           MOV      R2,#+0
   \   000000C8   0110A0E3           MOV      R1,#+1
   \   000000CC   50008DE2           ADD      R0,SP,#+80
   \                     ??LoadConfigFromFile_6:
   \   000000D0   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000000D4   EF0100EA           B        ??LoadConfigFromFile_5
    958                      }
    959                  } else {
    960                      Key = FindConfigKey(InputKeyWord);
   \                     ??LoadConfigFromFile_4:
   \   000000D8   90108DE2           ADD      R1,SP,#+144
    961                      switch (Key) {
   \   000000DC   ........           LDR      R8,??DataTable59  ;; CurrentDeviceAddress
   \   000000E0   50008DE2           ADD      R0,SP,#+80
   \   000000E4   ........           _BLF     ??string,??string??rA
   \   000000E8   50008DE2           ADD      R0,SP,#+80
   \   000000EC   ........           _BLF     ??FindConfigKey,??FindConfigKey??rA
   \   000000F0   04008DE5           STR      R0,[SP, #+4]
   \   000000F4   0020A0E3           MOV      R2,#+0
   \   000000F8   0110A0E3           MOV      R1,#+1
   \   000000FC   50008DE2           ADD      R0,SP,#+80
   \   00000100   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000104   04009DE5           LDR      R0,[SP, #+4]
   \   00000108   FA0F50E3           CMP      R0,#+1000
   \   0000010C   EA10A013           MOVNE    R1,#+234
   \   00000110   C01F8113           ORRNE    R1,R1,#0x300
   \   00000114   01005011           CMPNE    R0,R1
   \   00000118   FB0F5013           CMPNE    R0,#+1004
   \   0000011C   DD01000A           BEQ      ??LoadConfigFromFile_5
   \   00000120   A91081E2           ADD      R1,R1,#+169
   \   00000124   010050E1           CMP      R0,R1
   \   00000128   6C01000A           BEQ      ??LoadConfigFromFile_7
   \   0000012C   031081E2           ADD      R1,R1,#+3
   \   00000130   010050E1           CMP      R0,R1
   \   00000134   8601000A           BEQ      ??LoadConfigFromFile_8
   \   00000138   011081E3           ORR      R1,R1,#0x1
   \   0000013C   010050E1           CMP      R0,R1
   \   00000140   9301000A           BEQ      ??LoadConfigFromFile_9
   \   00000144   9810A0E3           MOV      R1,#+152
   \   00000148   801E81E3           ORR      R1,R1,#0x800
   \   0000014C   010050E1           CMP      R0,R1
   \   00000150   B910A013           MOVNE    R1,#+185
   \   00000154   B01E8113           ORRNE    R1,R1,#0xB00
   \   00000158   01005011           CMPNE    R0,R1
   \   0000015C   CD01000A           BEQ      ??LoadConfigFromFile_5
   \   00000160   7D0D50E3           CMP      R0,#+8000
   \   00000164   E400000A           BEQ      ??LoadConfigFromFile_10
   \   00000168   4110A0E3           MOV      R1,#+65
   \   0000016C   7C1D81E3           ORR      R1,R1,#0x1F00
   \   00000170   010050E1           CMP      R0,R1
   \   00000174   C701000A           BEQ      ??LoadConfigFromFile_5
   \   00000178   201081E3           ORR      R1,R1,#0x20
   \   0000017C   010050E1           CMP      R0,R1
   \   00000180   01108112           ADDNE    R1,R1,#+1
   \   00000184   01005011           CMPNE    R0,R1
   \   00000188   01108113           ORRNE    R1,R1,#0x1
   \   0000018C   01005011           CMPNE    R0,R1
   \   00000190   8F01000A           BEQ      ??LoadConfigFromFile_11
   \   00000194   A61081E2           ADD      R1,R1,#+166
   \   00000198   010050E1           CMP      R0,R1
   \   0000019C   3300000A           BEQ      ??LoadConfigFromFile_12
   \   000001A0   021081E3           ORR      R1,R1,#0x2
   \   000001A4   010050E1           CMP      R0,R1
   \   000001A8   3A00000A           BEQ      ??LoadConfigFromFile_13
   \   000001AC   061081E2           ADD      R1,R1,#+6
   \   000001B0   010050E1           CMP      R0,R1
   \   000001B4   AC00000A           BEQ      ??LoadConfigFromFile_14
   \   000001B8   011081E2           ADD      R1,R1,#+1
   \   000001BC   010050E1           CMP      R0,R1
   \   000001C0   6000000A           BEQ      ??LoadConfigFromFile_15
   \   000001C4   5A1081E2           ADD      R1,R1,#+90
   \   000001C8   010050E1           CMP      R0,R1
   \   000001CC   AD01000A           BEQ      ??LoadConfigFromFile_16
    962                      default:
    963                          GiveConfigWarning((AnsiString)"TCU " + (AnsiString)Address, InputKeyWord, ConfigString.LineCount);
   \   000001D0   90108DE2           ADD      R1,SP,#+144
   \   000001D4   400F8DE2           ADD      R0,SP,#+256
   \   000001D8   ........           _BLF     ??string,??string??rA
   \   000001DC   2C1394E5           LDR      R1,[R4, #+812]
   \   000001E0   5C0F8DE2           ADD      R0,SP,#+368
   \   000001E4   ........           _BLF     ??AnsiString_2,??AnsiString??rA_2
   \   000001E8   ........           LDR      R1,??DataTable60  ;; `?<Constant "TCU ">`
   \   000001EC   0070A0E1           MOV      R7,R0
   \   000001F0   550F8DE2           ADD      R0,SP,#+340
   \   000001F4   ........           _BLF     ??AnsiString_1,??AnsiString??rA_1
   \   000001F8   0010A0E1           MOV      R1,R0
   \   000001FC   0720A0E1           MOV      R2,R7
   \   00000200   4E0F8DE2           ADD      R0,SP,#+312
   \   00000204   ........           _BLF     `??operator+`,`??operator+??rA_1`
   \   00000208   4E1F8DE2           ADD      R1,SP,#+312
   \   0000020C   470F8DE2           ADD      R0,SP,#+284
   \   00000210   ........           _BLF     ??AnsiString_3,??AnsiString??rA_3
   \   00000214   1C2095E5           LDR      R2,[R5, #+28]
   \   00000218   401F8DE2           ADD      R1,SP,#+256
   \   0000021C   ........           _BLF     ??GiveConfigWarning_1,??GiveConfigWarning??rA_1
   \   00000220   0020A0E3           MOV      R2,#+0
   \   00000224   0110A0E3           MOV      R1,#+1
   \   00000228   400F8DE2           ADD      R0,SP,#+256
   \   0000022C   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000230   0020A0E3           MOV      R2,#+0
   \   00000234   0110A0E3           MOV      R1,#+1
   \   00000238   470F8DE2           ADD      R0,SP,#+284
   \   0000023C   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000240   0020A0E3           MOV      R2,#+0
   \   00000244   0110A0E3           MOV      R1,#+1
   \   00000248   4E0F8DE2           ADD      R0,SP,#+312
   \   0000024C   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000250   0020A0E3           MOV      R2,#+0
   \   00000254   0110A0E3           MOV      R1,#+1
   \   00000258   5C0F8DE2           ADD      R0,SP,#+368
   \   0000025C   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000260   0020A0E3           MOV      R2,#+0
   \   00000264   0110A0E3           MOV      R1,#+1
   \   00000268   550F8DE2           ADD      R0,SP,#+340
   \   0000026C   97FFFFEA           B        ??LoadConfigFromFile_6
    964                          break;
    965                      case C_AI_END:      // If AI type not found can continue with this
    966                      case C_AL_END:
    967                      case C_PRO_END:
    968                      case C_PRO_END_COMMON:
    969                      case C_PRO_END_PRO:
    970                          break;
    971                      case C_TU_ID:
    972                          {
    973                              //UnitID = ConfigString.ReadLong(ErrorLine);
    974                              /* int DummyUnitID = */ConfigString.ReadLong(ErrorLine);
   \                     ??LoadConfigFromFile_12:
   \   00000270   0020A0E3           MOV      R2,#+0
   \   00000274   0D10A0E1           MOV      R1,SP
   \   00000278   0500A0E1           MOV      R0,R5
   \   0000027C   ........           _BLF     ??ReadLong,??ReadLong??rA
    975                              NoError = !ErrorLine;
   \   00000280   00009DE5           LDR      R0,[SP, #+0]
   \   00000284   000050E3           CMP      R0,#+0
   \   00000288   0160A003           MOVEQ    R6,#+1
   \   0000028C   8101000A           BEQ      ??LoadConfigFromFile_5
   \                     ??LoadConfigFromFile_17:
   \   00000290   0060A0E3           MOV      R6,#+0
   \   00000294   7F0100EA           B        ??LoadConfigFromFile_5
    976                          }
    977                          break;
    978                      case C_TU_ADDRESS:
    979                          Address = ConfigString.ReadLong(ErrorLine);
   \                     ??LoadConfigFromFile_13:
   \   00000298   0020A0E3           MOV      R2,#+0
   \   0000029C   0D10A0E1           MOV      R1,SP
   \   000002A0   0500A0E1           MOV      R0,R5
   \   000002A4   ........           _BLF     ??ReadLong,??ReadLong??rA
   \   000002A8   2C0384E5           STR      R0,[R4, #+812]
    980                          NoError = !ErrorLine;
   \   000002AC   00009DE5           LDR      R0,[SP, #+0]
   \   000002B0   000050E3           CMP      R0,#+0
   \   000002B4   F5FFFF1A           BNE      ??LoadConfigFromFile_17
    981                          if (NoError) {
    982                              switch (GlobalDeviceHWId) {
   \   000002B8   ........           LDR      R0,??DataTable61  ;; GlobalDeviceHWId
   \   000002BC   0160A0E3           MOV      R6,#+1
   \   000002C0   F010D0E1           LDRSH    R1,[R0, #+0]
   \   000002C4   010051E3           CMP      R1,#+1
   \   000002C8   7201008A           BHI      ??LoadConfigFromFile_5
    983                              case TDU_R1:
    984                              case TDU_R2:
    985                              case TXU_IS_PC:
    986                              default:
    987                                  // The config file is for the TCU definition only
    988                                  // Any other device is constructed by use of object constructor for
    989                                  // the particular object, e.g. PROTanksystemUnit
    990                                  break;
    991                              case TCU_R1:
    992                              case TCU_R2:
    993                                  if (Address == CurrentDeviceAddress) {
   \   000002CC   F020D8E1           LDRSH    R2,[R8, #+0]
   \   000002D0   2C1394E5           LDR      R1,[R4, #+812]
   \   000002D4   020051E1           CMP      R1,R2
   \   000002D8   6E01001A           BNE      ??LoadConfigFromFile_5
    994                                      MySelf   = this;
   \   000002DC   ........           LDR      R7,??DataTable71  ;; ??TanksystemUnitSet
    995          #if defined(S2TXU) | defined(ANTDUSIM)
    996                                      ActualProgramVersion = MyProgramVersion;
   \   000002E0   ........           LDR      R2,??DataTable63  ;; MyProgramVersion
   \   000002E4   304087E5           STR      R4,[R7, #+48]
   \   000002E8   581F84E2           ADD      R1,R4,#+352
   \   000002EC   0490A0E3           MOV      R9,#+4
   \                     ??LoadConfigFromFile_18:
   \   000002F0   019059E2           SUBS     R9,R9,#+1
   \   000002F4   0930D2E7           LDRB     R3,[R2, R9]
   \   000002F8   0930C1E7           STRB     R3,[R1, R9]
   \   000002FC   FBFFFF1A           BNE      ??LoadConfigFromFile_18
    997                                      ActualBootVersion    = BootVersion;
   \   00000300   ........           LDR      R2,??DataTable64  ;; 0x31fff000
   \   00000304   591F84E2           ADD      R1,R4,#+356
   \   00000308   0490A0E3           MOV      R9,#+4
   \                     ??LoadConfigFromFile_19:
   \   0000030C   019059E2           SUBS     R9,R9,#+1
   \   00000310   0930D2E7           LDRB     R3,[R2, R9]
   \   00000314   0930C1E7           STRB     R3,[R1, R9]
   \   00000318   FBFFFF1A           BNE      ??LoadConfigFromFile_19
    998          #endif
    999                                      HWDeviceId  = GlobalDeviceHWId;
   \   0000031C   F000D0E1           LDRSH    R0,[R0, #+0]
   \   00000320   2803C4E5           STRB     R0,[R4, #+808]
   1000                                      if (CurrentDeviceAddress) {
   \   00000324   F000D8E1           LDRSH    R0,[R8, #+0]
   \   00000328   000050E3           CMP      R0,#+0
   \   0000032C   0300000A           BEQ      ??LoadConfigFromFile_20
   1001                                          MyTCUPtr = FindTCU(Address);
   \   00000330   2C0394E5           LDR      R0,[R4, #+812]
   \   00000334   ........           BL       ??FindTCU
   \   00000338   340087E5           STR      R0,[R7, #+52]
   \   0000033C   550100EA           B        ??LoadConfigFromFile_5
   1002                                      } else {
   1003                                          // Defaul is that the Master is 0
   1004                                          MyTCUPtr = this;
   \                     ??LoadConfigFromFile_20:
   \   00000340   344087E5           STR      R4,[R7, #+52]
   \   00000344   530100EA           B        ??LoadConfigFromFile_5
   1005                                      }
   1006                                  }
   1007                                  break;
   1008                              }
   1009                          }
   1010                          break;
   1011                      case C_TU_POWER_SOURCE:
   1012                          {
   1013                              AnsiString temp = ConfigString.NextWord(ErrorLine);
   \                     ??LoadConfigFromFile_15:
   \   00000348   0030A0E3           MOV      R3,#+0
   \   0000034C   0D20A0E1           MOV      R2,SP
   \   00000350   18108DE2           ADD      R1,SP,#+24
   \   00000354   0500A0E1           MOV      R0,R5
   \   00000358   ........           _BLF     ??NextWord,??NextWord??rA
   1014                              if (!ErrorLine) {
   \   0000035C   00009DE5           LDR      R0,[SP, #+0]
   \   00000360   000050E3           CMP      R0,#+0
   \   00000364   3800001A           BNE      ??LoadConfigFromFile_21
   1015                                  PowerSource = FindConfigKey(temp);
   \   00000368   18108DE2           ADD      R1,SP,#+24
   \   0000036C   34008DE2           ADD      R0,SP,#+52
   \   00000370   ........           _BLF     ??string,??string??rA
   \   00000374   34008DE2           ADD      R0,SP,#+52
   \   00000378   ........           _BLF     ??FindConfigKey,??FindConfigKey??rA
   \   0000037C   500384E5           STR      R0,[R4, #+848]
   \   00000380   0020A0E3           MOV      R2,#+0
   \   00000384   0110A0E3           MOV      R1,#+1
   \   00000388   34008DE2           ADD      R0,SP,#+52
   \   0000038C   ........           _BLF     ??_Tidy,??_Tidy??rA
   1016                                  switch (PowerSource) {
   \   00000390   501394E5           LDR      R1,[R4, #+848]
   \   00000394   EE60A0E3           MOV      R6,#+238
   \   00000398   806E86E3           ORR      R6,R6,#0x800
   \   0000039C   010046E2           SUB      R0,R6,#+1
   \   000003A0   667E40E2           SUB      R7,R0,#+1632
   \   000003A4   4084A0E3           MOV      R8,#+1073741824
   \   000003A8   678788E3           ORR      R8,R8,#0x19C0000
   \   000003AC   409888E3           ORR      R9,R8,#0x400000
   \   000003B0   131041E2           SUB      R1,R1,#+19
   \   000003B4   801D41E2           SUB      R1,R1,#+8192
   \   000003B8   020051E3           CMP      R1,#+2
   \   000003BC   2200008A           BHI      ??LoadConfigFromFile_21
   \   000003C0   012F8FE2           ADR      R2,??LoadConfigFromFile_1
   \   000003C4   0120D2E7           LDRB     R2,[R2, R1]
   \   000003C8   02F18FE0           ADD      PC,PC,R2, LSL #+2
   \                     ??LoadConfigFromFile_1:
   \   000003CC   00070E00           DC8      +0,+7,+14,+0
   1017                                  case C_TU_POWER_1    :
   1018                                      Internal24VSns =  new AIVoltageSensor(C_AI_LOC_POWER1, L_WORD653, TCU_AL_LO_VOLTAGE, TCU_AL_HI_VOLTAGE);
   \                     ??LoadConfigFromFile_22:
   \   000003D0   0930A0E1           MOV      R3,R9
   \   000003D4   0820A0E1           MOV      R2,R8
   \   000003D8   0710A0E1           MOV      R1,R7
   \   000003DC   ........           _BLF     `??new AIVoltageSensor`,`??new AIVoltageSensor??rA`
   \   000003E0   6C0284E5           STR      R0,[R4, #+620]
   1019                                      AnalogInList.push_back((AnalogInput *)Internal24VSns);
   \                     ??LoadConfigFromFile_23:
   \   000003E4   0010A0E1           MOV      R1,R0
   \   000003E8   150000EA           B        ??LoadConfigFromFile_24
   1020                                      break;
   1021                                  case C_TU_POWER_2    :
   1022                                      External24VSns =  new AIVoltageSensor(C_AI_LOC_POWER2, L_WORD653, TCU_AL_LO_VOLTAGE, TCU_AL_HI_VOLTAGE);
   \                     ??LoadConfigFromFile_25:
   \   000003EC   0930A0E1           MOV      R3,R9
   \   000003F0   0820A0E1           MOV      R2,R8
   \   000003F4   0710A0E1           MOV      R1,R7
   \   000003F8   0600A0E1           MOV      R0,R6
   \   000003FC   ........           _BLF     `??new AIVoltageSensor`,`??new AIVoltageSensor??rA`
   \   00000400   700284E5           STR      R0,[R4, #+624]
   1023                                      AnalogInList.push_back((AnalogInput *)External24VSns);
   \   00000404   F6FFFFEA           B        ??LoadConfigFromFile_23
   1024                                      break;
   1025                                  case C_TU_POWER_BOTH :
   1026                                      Internal24VSns =  new AIVoltageSensor(C_AI_LOC_POWER1, L_WORD653, TCU_AL_LO_VOLTAGE, TCU_AL_HI_VOLTAGE);
   \                     ??LoadConfigFromFile_26:
   \   00000408   0930A0E1           MOV      R3,R9
   \   0000040C   0820A0E1           MOV      R2,R8
   \   00000410   0710A0E1           MOV      R1,R7
   \   00000414   ........           _BLF     `??new AIVoltageSensor`,`??new AIVoltageSensor??rA`
   \   00000418   6C0284E5           STR      R0,[R4, #+620]
   1027                                      External24VSns =  new AIVoltageSensor(C_AI_LOC_POWER2, L_WORD653, TCU_AL_LO_VOLTAGE, TCU_AL_HI_VOLTAGE);
   \   0000041C   0930A0E1           MOV      R3,R9
   \   00000420   0820A0E1           MOV      R2,R8
   \   00000424   0710A0E1           MOV      R1,R7
   \   00000428   0600A0E1           MOV      R0,R6
   \   0000042C   ........           _BLF     `??new AIVoltageSensor`,`??new AIVoltageSensor??rA`
   \   00000430   700284E5           STR      R0,[R4, #+624]
   1028                                      AnalogInList.push_back((AnalogInput *)Internal24VSns);
   \   00000434   6C1294E5           LDR      R1,[R4, #+620]
   \   00000438   4B0F84E2           ADD      R0,R4,#+300
   \   0000043C   ........           _BLF     ??_Push_back0,??_Push_back0??rA_1
   1029                                      AnalogInList.push_back((AnalogInput *)External24VSns);
   \   00000440   701294E5           LDR      R1,[R4, #+624]
   \                     ??LoadConfigFromFile_24:
   \   00000444   4B0F84E2           ADD      R0,R4,#+300
   \   00000448   ........           _BLF     ??_Push_back0,??_Push_back0??rA_1
   1030                                      break;
   1031                                  }
   1032          
   1033                              }
   1034                              NoError = !ErrorLine;
   \                     ??LoadConfigFromFile_21:
   \   0000044C   00009DE5           LDR      R0,[SP, #+0]
   1035                          }
   \   00000450   0020A0E3           MOV      R2,#+0
   \   00000454   000050E3           CMP      R0,#+0
   \   00000458   0160A003           MOVEQ    R6,#+1
   \   0000045C   0060A013           MOVNE    R6,#+0
   \                     ??LoadConfigFromFile_27:
   \   00000460   0110A0E3           MOV      R1,#+1
   \   00000464   18008DE2           ADD      R0,SP,#+24
   \   00000468   18FFFFEA           B        ??LoadConfigFromFile_6
   1036                          break;
   1037                      case C_TU_POWER_VOLTAGE:
   1038                          {
   1039                              float VSetPoint = ConfigString.ReadDouble(ErrorLine);
   \                     ??LoadConfigFromFile_14:
   \   0000046C   0020A0E3           MOV      R2,#+0
   \   00000470   0D10A0E1           MOV      R1,SP
   \   00000474   0500A0E1           MOV      R0,R5
   \   00000478   ........           _BLF     ??ReadDouble,??ReadDouble??rA
   \   0000047C   ........           _BLF     __doubleToFloat,??__doubleToFloat??rA
   \   00000480   0070A0E1           MOV      R7,R0
   1040                              NoError = !ErrorLine;
   \   00000484   00009DE5           LDR      R0,[SP, #+0]
   \   00000488   000050E3           CMP      R0,#+0
   \   0000048C   7FFFFF1A           BNE      ??LoadConfigFromFile_17
   \   00000490   0160A0E3           MOV      R6,#+1
   1041                              if (NoError) {
   1042                                  if (VSetPoint < TCU_MIN_ADJUST_VOLTAGE) {
   \   00000494   0700A0E1           MOV      R0,R7
   \   00000498   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   0000049C   0080A0E1           MOV      R8,R0
   \   000004A0   0190A0E1           MOV      R9,R1
   \   000004A4   0020A0E3           MOV      R2,#+0
   \   000004A8   4034A0E3           MOV      R3,#+1073741824
   \   000004AC   D03983E3           ORR      R3,R3,#0x340000
   \   000004B0   ........           _BLF     __dLess,??__dLess??rA
   \   000004B4   000050E3           CMP      R0,#+0
   \   000004B8   0300000A           BEQ      ??LoadConfigFromFile_28
   1043                                      VoltageSetPoint = TCU_MIN_ADJUST_VOLTAGE;
   \   000004BC   4004A0E3           MOV      R0,#+1073741824
   \   000004C0   680780E3           ORR      R0,R0,#0x1A00000
   \                     ??LoadConfigFromFile_29:
   \   000004C4   540384E5           STR      R0,[R4, #+852]
   \   000004C8   F20000EA           B        ??LoadConfigFromFile_5
   1044                                  } else if (VSetPoint > TCU_MAX_ADJUST_VOLTAGE) {
   \                     ??LoadConfigFromFile_28:
   \   000004CC   0800A0E1           MOV      R0,R8
   \   000004D0   0910A0E1           MOV      R1,R9
   \   000004D4   0120A0E3           MOV      R2,#+1
   \   000004D8   4034A0E3           MOV      R3,#+1073741824
   \   000004DC   EC3983E3           ORR      R3,R3,#0x3B0000
   \   000004E0   ........           _BLF     __dGreaterEqual,??__dGreaterEqual??rA
   \   000004E4   000050E3           CMP      R0,#+0
   1045                                      VoltageSetPoint = TCU_MAX_ADJUST_VOLTAGE;
   \   000004E8   4004A013           MOVNE    R0,#+1073741824
   \   000004EC   76078013           ORRNE    R0,R0,#0x1D80000
   \   000004F0   F3FFFF1A           BNE      ??LoadConfigFromFile_29
   1046                                  } else {
   1047                                      VoltageSetPoint = VSetPoint;
   \   000004F4   547384E5           STR      R7,[R4, #+852]
   \   000004F8   E60000EA           B        ??LoadConfigFromFile_5
   1048                                  }
   1049                              }
   1050                          }
   1051                          break;
   1052                      case C_UART_END: //If fault end
   1053                          break;
   1054                      case C_UART:
   1055                          {
   1056                              TSNUart *tempPtr = new TSNUart();
   \                     ??LoadConfigFromFile_10:
   \   000004FC   E000A0E3           MOV      R0,#+224
   \   00000500   ........           _BLF     `??operator new`,`??operator new??rA`
   \   00000504   0070B0E1           MOVS     R7,R0
   \   00000508   0000000A           BEQ      ??LoadConfigFromFile_30
   \   0000050C   ........           _BLF     ??TSNUart,??TSNUart??rA
   1057                              NoError = tempPtr->LoadConfigString(ConfigString);
   \                     ??LoadConfigFromFile_30:
   \   00000510   0510A0E1           MOV      R1,R5
   \   00000514   0700A0E1           MOV      R0,R7
   \   00000518   ........           _BLF     ??LoadConfigString_1,??LoadConfigString??rA
   \   0000051C   0060B0E1           MOVS     R6,R0
   1058          
   1059                              if (NoError) {
   \   00000520   DC00000A           BEQ      ??LoadConfigFromFile_5
   1060          #ifdef WIN32
   1061                                  TSNUart *UartPtr = new WinUart();
   1062                                  UartPtr->BaudRate   = tempPtr->BaudRate;
   1063                                  UartPtr->PortNumber = tempPtr->PortNumber;
   1064                                  UartPtr->StopBits   = tempPtr->StopBits;
   1065                                  UartPtr->Parity     = tempPtr->Parity;
   1066                                  UartPtr->HWProtocol = tempPtr->HWProtocol;
   1067                                  UartPtr->SWProtocol = tempPtr->SWProtocol;
   1068                                  UartPtr->WordLength = tempPtr->WordLength;
   1069                                  UartPtr->Device     = tempPtr->Device;
   1070          
   1071                                  char tempName[256];
   1072                                  sprintf(tempName, "Com%d", tempPtr->PortNumber + 1);
   1073                                  UartPtr->PortName = AnsiString(tempName);
   1074                                  if (CurrentDeviceId == UnitID && CurrentDeviceAddress == Address) TSNUart::Channels[UartPtr->PortNumber] = UartPtr;
   1075                                  Channels[UartPtr->PortNumber] = UartPtr;
   1076          #else
   1077                                  int PortNum = tempPtr->PortNumber;
   \   00000524   800097E5           LDR      R0,[R7, #+128]
   1078                                  // Is it me?
   1079                                  int ProtocolMaster = true;
   \   00000528   ........           LDR      R11,??DataTable65  ;; CurrentDeviceId
   \   0000052C   10008DE5           STR      R0,[SP, #+16]
   \   00000530   0120A0E3           MOV      R2,#+1
   \   00000534   08208DE5           STR      R2,[SP, #+8]
   \   00000538   F0B0DBE1           LDRSH    R11,[R11, #+0]
   \   0000053C   A81097E5           LDR      R1,[R7, #+168]
   \   00000540   A42097E5           LDR      R2,[R7, #+164]
   \   00000544   543097E5           LDR      R3,[R7, #+84]
   \   00000548   58C0D7E5           LDRB     R12,[R7, #+88]
   \   0000054C   60E097E5           LDR      LR,[R7, #+96]
   \   00000550   649097E5           LDR      R9,[R7, #+100]
   \   00000554   B4B1CDE1           STRH     R11,[SP, #+20]
   \   00000558   0BA0A0E1           MOV      R10,R11
   \   0000055C   24B394E5           LDR      R11,[R4, #+804]
   \   00000560   0B005AE1           CMP      R10,R11
   \   00000564   F080D801           LDRSHEQ  R8,[R8, #+0]
   \   00000568   2CA39405           LDREQ    R10,[R4, #+812]
   \   0000056C   0A005801           CMPEQ    R8,R10
   \   00000570   4100001A           BNE      ??LoadConfigFromFile_31
   1080                                  if (CurrentDeviceId == UnitID && CurrentDeviceAddress == Address) {
   1081                                      if (PortNum != OS_UART) { // leave uart reserved for debug
   \   00000574   010070E3           CMN      R0,#+1
   \   00000578   5500000A           BEQ      ??LoadConfigFromFile_32
   1082                                          int BufSize = 1024;
   \   0000057C   408EA0E3           MOV      R8,#+1024
   1083                                          switch (tempPtr->Device) {
   \   00000580   61A041E2           SUB      R10,R1,#+97
   \   00000584   7CAD4AE2           SUB      R10,R10,#+7936
   \   00000588   04005AE3           CMP      R10,#+4
   \   0000058C   0900008A           BHI      ??LoadConfigFromFile_33
   \   00000590   01BF8FE2           ADR      R11,??LoadConfigFromFile_2
   \   00000594   0AB0DBE7           LDRB     R11,[R11, R10]
   \   00000598   0BF18FE0           ADD      PC,PC,R11, LSL #+2
   \                     ??LoadConfigFromFile_2:
   \   0000059C   01060106           DC8      +1,+6,+1,+6
   \   000005A0   01000000           DC8      +1,+0,+0,+0
   1084                                              case C_UART_DEVICE_TCU:
   1085                                              case C_UART_DEVICE_TDU:
   1086                                              case C_UART_DEVICE_ANPRO10:
   1087                                              switch (CurrentDeviceId) {
   \                     ??LoadConfigFromFile_34:
   \   000005A4   F481DDE1           LDRSH    R8,[SP, #+20]
   \   000005A8   300058E3           CMP      R8,#+48
   1088                                                  case DEVICE_TDU:
   1089                                                  ProtocolMaster = false;
   \   000005AC   00A0A003           MOVEQ    R10,#+0
   \   000005B0   08A08D05           STREQ    R10,[SP, #+8]
   1090                                                  break;
   1091                                                  case DEVICE_TCU:
   1092                                                  ProtocolMaster = true;
   1093                                                  break;
   1094                                              }
   1095                                              BufSize = MAX_ANPRO10_SIZE;
   \   000005B4   FA8DA0E3           MOV      R8,#+16000
   1096                                              break;
   1097                                              case C_UART_DEVICE_ZB:
   1098                                              case C_UART_DEVICE_ZB_RED:
   1099                                              BufSize = MAX_ANPRO10_IO_SIZE;
   1100                                              break;
   1101                                              case C_UART_DEVICE_TPC:
   1102                                              //BufSize = TPC_DISPLAY_BUF_SIZE;
   1103                                              BufSize = 1024;
   1104                                              break;
   1105                                              case C_UART_DEVICE_MODICON_MASTER_TCP   :
   1106                                              case C_UART_DEVICE_MODICON_SLAVE_TCP    :
   1107                                              case C_UART_DEVICE_MODICON_MASTER       :
   1108                                              case C_UART_DEVICE_MODICON_SLAVE        :
   1109                                              case C_UART_DEVICE_MODBUS_MASTER        :
   1110                                              case C_UART_DEVICE_MODBUS_MASTER_INV    :
   1111                                              case C_UART_DEVICE_MODBUS_MASTER_TCP    :
   1112                                              case C_UART_DEVICE_MODBUS_SLAVE         :
   1113                                              case C_UART_DEVICE_MODBUS_SLAVE_INV     :
   1114                                              case C_UART_DEVICE_MODBUS_SLAVE_TCP     :
   1115                                              break;
   1116                                          }
   1117                                          //BufSize = 64*1024;
   1118          
   1119                                          if (tempPtr->PortNumber < FIRST_ST16554_PORT) {        // TODO or
   \                     ??LoadConfigFromFile_33:
   \   000005B8   00B184E0           ADD      R11,R4,R0, LSL #+2
   \   000005BC   0CB08DE5           STR      R11,[SP, #+12]
   \   000005C0   C0A0D7E5           LDRB     R10,[R7, #+192]
   \   000005C4   08B09DE5           LDR      R11,[SP, #+8]
   \   000005C8   030050E3           CMP      R0,#+3
   \   000005CC   110000AA           BGE      ??LoadConfigFromFile_35
   1120                                              Channels[PortNum] = (TSNUart *)new SC2410Uart(tempPtr->PortNumber, tempPtr->BaudRate, tempPtr->WordLength, tempPtr->StopBits, tempPtr->Parity, BufSize, tempPtr->Device, tempPtr->HWProtocol, tempPtr->SWProtocol, ProtocolMaster, tempPtr->MaxTimeBetweenChar, tempPtr->Relaxed, tempPtr->LogTime, tempPtr->LogEntries);
   \   000005D0   00005BE3           CMP      R11,#+0
   \   000005D4   01B0A013           MOVNE    R11,#+1
   \   000005D8   00022DE9           PUSH     {R9}
   \   000005DC   00402DE9           PUSH     {LR}
   \   000005E0   00102DE9           PUSH     {R12}
   \   000005E4   08002DE9           PUSH     {R3}
   \   000005E8   00082DE9           PUSH     {R11}
   \   000005EC   04002DE9           PUSH     {R2}
   \   000005F0   A02097E5           LDR      R2,[R7, #+160]
   \   000005F4   04002DE9           PUSH     {R2}
   \   000005F8   02002DE9           PUSH     {R1}
   \   000005FC   00012DE9           PUSH     {R8}
   \   00000600   00042DE9           PUSH     {R10}
   \   00000604   B43097E5           LDR      R3,[R7, #+180]
   \   00000608   B02097E5           LDR      R2,[R7, #+176]
   \   0000060C   AC1097E5           LDR      R1,[R7, #+172]
   \   00000610   ........           _BLF     `??new SC2410Uart`,`??new SC2410Uart??rA`
   \   00000614   100000EA           B        ??LoadConfigFromFile_36
   1121                                          } else {
   1122                                              // Allways master for the other ports for IO and tPCx
   1123                                              Channels[PortNum] = (TSNUart *)new ST165540Uart(tempPtr->PortNumber, tempPtr->BaudRate, tempPtr->WordLength, tempPtr->StopBits, tempPtr->Parity, BufSize, tempPtr->Device, tempPtr->HWProtocol, tempPtr->SWProtocol, ProtocolMaster, tempPtr->MaxTimeBetweenChar, tempPtr->Relaxed, tempPtr->LogTime, tempPtr->LogEntries);
   \                     ??LoadConfigFromFile_35:
   \   00000618   00005BE3           CMP      R11,#+0
   \   0000061C   01B0A013           MOVNE    R11,#+1
   \   00000620   00022DE9           PUSH     {R9}
   \   00000624   00402DE9           PUSH     {LR}
   \   00000628   00102DE9           PUSH     {R12}
   \   0000062C   08002DE9           PUSH     {R3}
   \   00000630   00082DE9           PUSH     {R11}
   \   00000634   04002DE9           PUSH     {R2}
   \   00000638   A02097E5           LDR      R2,[R7, #+160]
   \   0000063C   04002DE9           PUSH     {R2}
   \   00000640   02002DE9           PUSH     {R1}
   \   00000644   00012DE9           PUSH     {R8}
   \   00000648   00042DE9           PUSH     {R10}
   \   0000064C   B43097E5           LDR      R3,[R7, #+180]
   \   00000650   B02097E5           LDR      R2,[R7, #+176]
   \   00000654   AC1097E5           LDR      R1,[R7, #+172]
   \   00000658   ........           _BLF     `??new ST165540Uart`,`??new ST165540Uart??rA`
   \                     ??LoadConfigFromFile_36:
   \   0000065C   28D08DE2           ADD      SP,SP,#+40
   \   00000660   0C109DE5           LDR      R1,[SP, #+12]
   \   00000664   680381E5           STR      R0,[R1, #+872]
   1124                                          }
   1125                                          // EHSMark  Must add to constructor parameters
   1126                                          Channels[PortNum]->Delay = tempPtr->Delay;
   \   00000668   0C009DE5           LDR      R0,[SP, #+12]
   \   0000066C   4C1097E5           LDR      R1,[R7, #+76]
   \   00000670   680390E5           LDR      R0,[R0, #+872]
   \   00000674   4C1080E5           STR      R1,[R0, #+76]
   \   00000678   150000EA           B        ??LoadConfigFromFile_32
   1127                                          //TSNUart::Channels[PortNum] = UartPtr;
   1128                                      } else {
   1129                                          //UartPtr = (TSNUart*)new TSNUart(tempPtr->PortNumber,tempPtr->BaudRate,tempPtr->WordLength,tempPtr->StopBits,'N',BufSize);
   1130                                      }
   1131                                  } else {
   1132                                      Channels[PortNum] = (TSNUart *)new TSNUart(tempPtr->PortNumber, tempPtr->BaudRate, tempPtr->WordLength, tempPtr->StopBits, 'N', 0, tempPtr->Device, tempPtr->HWProtocol, tempPtr->SWProtocol, true, tempPtr->MaxTimeBetweenChar, tempPtr->Relaxed, tempPtr->LogTime, tempPtr->LogEntries);
   \                     ??LoadConfigFromFile_31:
   \   0000067C   00022DE9           PUSH     {R9}
   \   00000680   00402DE9           PUSH     {LR}
   \   00000684   00102DE9           PUSH     {R12}
   \   00000688   08002DE9           PUSH     {R3}
   \   0000068C   0130A0E3           MOV      R3,#+1
   \   00000690   08002DE9           PUSH     {R3}
   \   00000694   04002DE9           PUSH     {R2}
   \   00000698   A02097E5           LDR      R2,[R7, #+160]
   \   0000069C   04002DE9           PUSH     {R2}
   \   000006A0   02002DE9           PUSH     {R1}
   \   000006A4   0010A0E3           MOV      R1,#+0
   \   000006A8   02002DE9           PUSH     {R1}
   \   000006AC   4E10A0E3           MOV      R1,#+78
   \   000006B0   02002DE9           PUSH     {R1}
   \   000006B4   B43097E5           LDR      R3,[R7, #+180]
   \   000006B8   B02097E5           LDR      R2,[R7, #+176]
   \   000006BC   AC1097E5           LDR      R1,[R7, #+172]
   \   000006C0   ........           _BLF     `??new TSNUart`,`??new TSNUart??rA`
   \   000006C4   28D08DE2           ADD      SP,SP,#+40
   \   000006C8   10109DE5           LDR      R1,[SP, #+16]
   \   000006CC   011184E0           ADD      R1,R4,R1, LSL #+2
   \   000006D0   680381E5           STR      R0,[R1, #+872]
   1133                                  }
   1134          #endif
   1135                                  delete tempPtr;
   \                     ??LoadConfigFromFile_32:
   \   000006D4   0700A0E1           MOV      R0,R7
   \   000006D8   ........           _BLF     `??delete ~TSNUart`,`??delete ~TSNUart??rA`
   \   000006DC   6D0000EA           B        ??LoadConfigFromFile_5
   1136                              }
   1137                          }
   1138                          break;
   1139                      case C_PRO_CTRL_AL_RELAY:
   1140                          {
   1141                              int RelayNo = ConfigString.ReadLong(ErrorLine);
   \                     ??LoadConfigFromFile_7:
   \   000006E0   0020A0E3           MOV      R2,#+0
   \   000006E4   0D10A0E1           MOV      R1,SP
   \   000006E8   0500A0E1           MOV      R0,R5
   \   000006EC   ........           _BLF     ??ReadLong,??ReadLong??rA
   1142                              if (RelayNo == 1) {
   \   000006F0   010050E3           CMP      R0,#+1
   \   000006F4   0C00001A           BNE      ??LoadConfigFromFile_37
   1143                                  if (!CtrlAlarmRelayPtr1) CtrlAlarmRelayPtr1 = new CtrlAlarmRelay(1);
   \   000006F8   8C0394E5           LDR      R0,[R4, #+908]
   \   000006FC   000050E3           CMP      R0,#+0
   \   00000700   0200001A           BNE      ??LoadConfigFromFile_38
   \   00000704   0100A0E3           MOV      R0,#+1
   \   00000708   ........           _BLF     `??new CtrlAlarmRelay`,`??new CtrlAlarmRelay??rA`
   \   0000070C   8C0384E5           STR      R0,[R4, #+908]
   1144                                  NoError = CtrlAlarmRelayPtr1->LoadConfigString(ConfigString);
   \                     ??LoadConfigFromFile_38:
   \   00000710   8C0394E5           LDR      R0,[R4, #+908]
   \                     ??LoadConfigFromFile_39:
   \   00000714   0510A0E1           MOV      R1,R5
   \   00000718   A42090E5           LDR      R2,[R0, #+164]
   \   0000071C   102092E5           LDR      R2,[R2, #+16]
   \   00000720   0FE0A0E1           MOV      LR,PC
   \   00000724   12FF2FE1           BX       R2
   \   00000728   590000EA           B        ??LoadConfigFromFile_40
   1145                              } else if (RelayNo == 2) {
   \                     ??LoadConfigFromFile_37:
   \   0000072C   020050E3           CMP      R0,#+2
   \   00000730   5800001A           BNE      ??LoadConfigFromFile_5
   1146                                  if (!CtrlAlarmRelayPtr2) CtrlAlarmRelayPtr2 = new CtrlAlarmRelay(2);
   \   00000734   900394E5           LDR      R0,[R4, #+912]
   \   00000738   000050E3           CMP      R0,#+0
   \   0000073C   0200001A           BNE      ??LoadConfigFromFile_41
   \   00000740   0200A0E3           MOV      R0,#+2
   \   00000744   ........           _BLF     `??new CtrlAlarmRelay`,`??new CtrlAlarmRelay??rA`
   \   00000748   900384E5           STR      R0,[R4, #+912]
   1147                                  NoError = CtrlAlarmRelayPtr2->LoadConfigString(ConfigString);
   \                     ??LoadConfigFromFile_41:
   \   0000074C   900394E5           LDR      R0,[R4, #+912]
   \   00000750   EFFFFFEA           B        ??LoadConfigFromFile_39
   1148                              }
   1149                          }
   1150                          break;
   1151                      case C_PRO_CTRL_HORN:
   1152                          {
   1153                              if (!CtrlHornPtr) CtrlHornPtr = new CtrlHorn();
   \                     ??LoadConfigFromFile_8:
   \   00000754   940394E5           LDR      R0,[R4, #+916]
   \   00000758   000050E3           CMP      R0,#+0
   \   0000075C   0500001A           BNE      ??LoadConfigFromFile_42
   \   00000760   4F0FA0E3           MOV      R0,#+316
   \   00000764   ........           _BLF     `??operator new`,`??operator new??rA`
   \   00000768   0060B0E1           MOVS     R6,R0
   \   0000076C   0000000A           BEQ      ??LoadConfigFromFile_43
   \   00000770   ........           _BLF     ??CtrlHorn,??CtrlHorn??rA
   \                     ??LoadConfigFromFile_43:
   \   00000774   946384E5           STR      R6,[R4, #+916]
   1154                              NoError = CtrlHornPtr->LoadConfigString(ConfigString);
   \                     ??LoadConfigFromFile_42:
   \   00000778   940394E5           LDR      R0,[R4, #+916]
   \   0000077C   0510A0E1           MOV      R1,R5
   \   00000780   A42090E5           LDR      R2,[R0, #+164]
   \   00000784   102092E5           LDR      R2,[R2, #+16]
   \   00000788   0FE0A0E1           MOV      LR,PC
   \   0000078C   12FF2FE1           BX       R2
   \   00000790   3F0000EA           B        ??LoadConfigFromFile_40
   1155                          }
   1156                          break;
   1157                      case C_PRO_CTRL_LAMP:
   1158                          {
   1159                              if (!CtrlLampPtr) CtrlLampPtr = new CtrlLamp();
   \                     ??LoadConfigFromFile_9:
   \   00000794   980394E5           LDR      R0,[R4, #+920]
   \   00000798   000050E3           CMP      R0,#+0
   \   0000079C   0500001A           BNE      ??LoadConfigFromFile_44
   \   000007A0   4F0FA0E3           MOV      R0,#+316
   \   000007A4   ........           _BLF     `??operator new`,`??operator new??rA`
   \   000007A8   0060B0E1           MOVS     R6,R0
   \   000007AC   0000000A           BEQ      ??LoadConfigFromFile_45
   \   000007B0   ........           _BLF     ??CtrlLamp,??CtrlLamp??rA
   \                     ??LoadConfigFromFile_45:
   \   000007B4   986384E5           STR      R6,[R4, #+920]
   1160                              NoError = CtrlLampPtr->LoadConfigString(ConfigString);
   \                     ??LoadConfigFromFile_44:
   \   000007B8   980394E5           LDR      R0,[R4, #+920]
   \   000007BC   0510A0E1           MOV      R1,R5
   \   000007C0   A42090E5           LDR      R2,[R0, #+164]
   \   000007C4   102092E5           LDR      R2,[R2, #+16]
   \   000007C8   0FE0A0E1           MOV      LR,PC
   \   000007CC   12FF2FE1           BX       R2
   \   000007D0   2F0000EA           B        ??LoadConfigFromFile_40
   1161                          }
   1162                          break;
   1163                      case C_UART_DEVICE_TDU :
   1164                      case C_UART_DEVICE_PC  :
   1165                      case C_UART_DEVICE_TCU :
   1166                          {
   1167                              int ComPort = ConfigString.ReadLong(ErrorLine);
   \                     ??LoadConfigFromFile_11:
   \   000007D4   0020A0E3           MOV      R2,#+0
   \   000007D8   0D10A0E1           MOV      R1,SP
   \   000007DC   0500A0E1           MOV      R0,R5
   \   000007E0   ........           _BLF     ??ReadLong,??ReadLong??rA
   \   000007E4   0070A0E1           MOV      R7,R0
   1168                              if (!ErrorLine) {
   \   000007E8   00009DE5           LDR      R0,[SP, #+0]
   \   000007EC   000050E3           CMP      R0,#+0
   \   000007F0   2800001A           BNE      ??LoadConfigFromFile_5
   1169                                  int tmpAddress = ConfigString.ReadLong(ErrorLine);
   \   000007F4   0020A0E3           MOV      R2,#+0
   \   000007F8   0D10A0E1           MOV      R1,SP
   \   000007FC   0500A0E1           MOV      R0,R5
   \   00000800   ........           _BLF     ??ReadLong,??ReadLong??rA
   \   00000804   0080A0E1           MOV      R8,R0
   1170                                  if (!ErrorLine) {
   \   00000808   00009DE5           LDR      R0,[SP, #+0]
   \   0000080C   000050E3           CMP      R0,#+0
   \   00000810   2000001A           BNE      ??LoadConfigFromFile_5
   1171                                      AnsiString Description = ConfigString.GetRemainingLine(ErrorLine);
   \   00000814   0D20A0E1           MOV      R2,SP
   \   00000818   18108DE2           ADD      R1,SP,#+24
   \   0000081C   0500A0E1           MOV      R0,R5
   \   00000820   ........           _BLF     ??GetRemainingLine,??GetRemainingLine??rA
   1172                                      if (!ErrorLine) {
   \   00000824   00009DE5           LDR      R0,[SP, #+0]
   \   00000828   000050E3           CMP      R0,#+0
   \   0000082C   1300001A           BNE      ??LoadConfigFromFile_46
   1173                                          DeviceData DevData;
   \   00000830   74008DE2           ADD      R0,SP,#+116
   \   00000834   ........           _BLF     ??AnsiString,??AnsiString??rA
   1174                                          DevData.DeviceKey   = Key;
   \   00000838   04109DE5           LDR      R1,[SP, #+4]
   1175                                          DevData.Address     = tmpAddress;
   1176                                          DevData.Description = Description;
   \   0000083C   ........           LDR      R0,??DataTable74  ;; ??npos
   \   00000840   6C108DE5           STR      R1,[SP, #+108]
   \   00000844   70808DE5           STR      R8,[SP, #+112]
   \   00000848   003090E5           LDR      R3,[R0, #+0]
   \   0000084C   0020A0E3           MOV      R2,#+0
   \   00000850   18108DE2           ADD      R1,SP,#+24
   \   00000854   74008DE2           ADD      R0,SP,#+116
   \   00000858   ........           _BLF     ??assign,??assign??rA
   1177                                          DeviceDataVector[ComPort].push_back(DevData);
   \   0000085C   5C0394E5           LDR      R0,[R4, #+860]
   \   00000860   6C108DE2           ADD      R1,SP,#+108
   \   00000864   0C20A0E3           MOV      R2,#+12
   \   00000868   920720E0           MLA      R0,R2,R7,R0
   \   0000086C   ........           _BLF     ??_Push_back0_1,??_Push_back0??rA_2
   1178                                      }
   \   00000870   0020A0E3           MOV      R2,#+0
   \   00000874   0110A0E3           MOV      R1,#+1
   \   00000878   74008DE2           ADD      R0,SP,#+116
   \   0000087C   ........           _BLF     ??_Tidy,??_Tidy??rA
   1179                                  }
   \                     ??LoadConfigFromFile_46:
   \   00000880   0020A0E3           MOV      R2,#+0
   \   00000884   F5FEFFEA           B        ??LoadConfigFromFile_27
   1180                              }
   1181                          }
   1182                          break;
   1183                      case C_NETWORK:
   1184                          NoError = LoadConfigNetwork(ConfigString);
   \                     ??LoadConfigFromFile_16:
   \   00000888   0510A0E1           MOV      R1,R5
   \   0000088C   0400A0E1           MOV      R0,R4
   \   00000890   ........           BL       ??LoadConfigNetwork
   \                     ??LoadConfigFromFile_40:
   \   00000894   0060A0E1           MOV      R6,R0
   1185                          break;
   1186                      } // End Switch
   1187                  }
   1188              }while (NoError && (ErrorLine != EOF) && (Key != C_PRO_END));
   \                     ??LoadConfigFromFile_5:
   \   00000898   0020A0E3           MOV      R2,#+0
   \   0000089C   0110A0E3           MOV      R1,#+1
   \   000008A0   90008DE2           ADD      R0,SP,#+144
   \   000008A4   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000008A8   000056E3           CMP      R6,#+0
   \   000008AC   00009D15           LDRNE    R0,[SP, #+0]
   \   000008B0   01007013           CMNNE    R0,#+1
   \   000008B4   04009D15           LDRNE    R0,[SP, #+4]
   \   000008B8   FA0F5013           CMPNE    R0,#+1000
   \   000008BC   DAFDFF1A           BNE      ??LoadConfigFromFile_3
   1189              // This is only for the TCU
   1190          #ifndef S2TXU
   1191              if (CurrentDeviceId == DEVICE_TDU_SIMULATOR && CurrentDeviceAddress == Address) {
   1192                  MySelf = this;
   1193          #if defined(ANTDUSIM)
   1194                  ActualProgramVersion = MyProgramVersion;
   1195                  ActualBootVersion    = BootVersion;
   1196          #endif
   1197          
   1198                  HWDeviceId  = GlobalDeviceHWId;
   1199              }
   1200          
   1201          #endif
   1202              SetId();
   \   000008C0   0400A0E1           MOV      R0,R4
   \   000008C4   ........           BL       ??SetId
   1203              // Any unit except myself is actually unknown and must be set elsewhere
   1204              AnsiString ComPortName = " on Com" + (AnsiString)MyPortNumberonTCU;
   \   000008C8   4C1294E5           LDR      R1,[R4, #+588]
   \   000008CC   CC0F8DE2           ADD      R0,SP,#+816
   \   000008D0   ........           _BLF     ??AnsiString_2,??AnsiString??rA_2
   \   000008D4   3C139FE5           LDR      R1,??LoadConfigFromFile_47  ;; `?<Constant "TCU ">` + 32
   \   000008D8   0020A0E1           MOV      R2,R0
   \   000008DC   AC008DE2           ADD      R0,SP,#+172
   \   000008E0   ........           _BLF     `??operator+_1`,`??operator+??rA`
   \   000008E4   AC108DE2           ADD      R1,SP,#+172
   \   000008E8   C8008DE2           ADD      R0,SP,#+200
   \   000008EC   ........           _BLF     ??AnsiString_3,??AnsiString??rA_3
   \   000008F0   0020A0E3           MOV      R2,#+0
   \   000008F4   0110A0E3           MOV      R1,#+1
   \   000008F8   AC008DE2           ADD      R0,SP,#+172
   \   000008FC   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000900   0020A0E3           MOV      R2,#+0
   \   00000904   0110A0E3           MOV      R1,#+1
   \   00000908   CC0F8DE2           ADD      R0,SP,#+816
   \   0000090C   ........           _BLF     ??_Tidy,??_Tidy??rA
   1205              switch (UnitID) {
   \   00000910   240394E5           LDR      R0,[R4, #+804]
   \   00000914   4054A0E3           MOV      R5,#+1073741824
   \   00000918   805885E3           ORR      R5,R5,#0x800000
   \   0000091C   200040E2           SUB      R0,R0,#+32
   \   00000920   020050E3           CMP      R0,#+2
   \   00000924   0500009A           BLS      ??LoadConfigFromFile_48
   \   00000928   100040E2           SUB      R0,R0,#+16
   \   0000092C   020050E3           CMP      R0,#+2
   \   00000930   2600009A           BLS      ??LoadConfigFromFile_49
   \   00000934   100050E2           SUBS     R0,R0,#+16
   \   00000938   4900000A           BEQ      ??LoadConfigFromFile_50
   \   0000093C   6C0000EA           B        ??LoadConfigFromFile_51
   1206              case DEVICE_TCU   :
   1207              case DEVICE_TCU_R1:
   1208              case DEVICE_TCU_R2:
   1209                  Name = "TCU:" + (AnsiString)Address;
   \                     ??LoadConfigFromFile_48:
   \   00000940   2C1394E5           LDR      R1,[R4, #+812]
   \   00000944   710F8DE2           ADD      R0,SP,#+452
   \   00000948   ........           _BLF     ??AnsiString_2,??AnsiString??rA_2
   \   0000094C   C8129FE5           LDR      R1,??LoadConfigFromFile_47+0x4  ;; `?<Constant "TCU ">` + 16
   \   00000950   0020A0E1           MOV      R2,R0
   \   00000954   6A0F8DE2           ADD      R0,SP,#+424
   \   00000958   ........           _BLF     `??operator+_1`,`??operator+??rA`
   \   0000095C   6A1F8DE2           ADD      R1,SP,#+424
   \   00000960   630F8DE2           ADD      R0,SP,#+396
   \   00000964   ........           _BLF     ??AnsiString_3,??AnsiString??rA_3
   \   00000968   ........           LDR      R1,??DataTable74  ;; ??npos
   \   0000096C   0020A0E3           MOV      R2,#+0
   \   00000970   003091E5           LDR      R3,[R1, #+0]
   \   00000974   0010A0E1           MOV      R1,R0
   \   00000978   440084E2           ADD      R0,R4,#+68
   \   0000097C   ........           _BLF     ??assign,??assign??rA
   \   00000980   0020A0E3           MOV      R2,#+0
   \   00000984   0110A0E3           MOV      R1,#+1
   \   00000988   630F8DE2           ADD      R0,SP,#+396
   \   0000098C   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000990   0020A0E3           MOV      R2,#+0
   \   00000994   0110A0E3           MOV      R1,#+1
   \   00000998   6A0F8DE2           ADD      R0,SP,#+424
   \   0000099C   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000009A0   0020A0E3           MOV      R2,#+0
   \   000009A4   0110A0E3           MOV      R1,#+1
   \   000009A8   710F8DE2           ADD      R0,SP,#+452
   \   000009AC   ........           _BLF     ??_Tidy,??_Tidy??rA
   1210                  if (Address) {
   \   000009B0   2C0394E5           LDR      R0,[R4, #+812]
   \   000009B4   000050E3           CMP      R0,#+0
   \   000009B8   7100000A           BEQ      ??LoadConfigFromFile_52
   1211                      TXUComFailureAlarm = new AlarmTXUComFailure((PRogramObjectBase *)this, 4);
   \                     ??LoadConfigFromFile_53:
   \   000009BC   0510A0E1           MOV      R1,R5
   \   000009C0   0400A0E1           MOV      R0,R4
   \   000009C4   ........           _BLF     `??new AlarmTXUComFailure`,`??new AlarmTXUComFailure??rA`
   \   000009C8   3C0284E5           STR      R0,[R4, #+572]
   \   000009CC   6C0000EA           B        ??LoadConfigFromFile_52
   1212                  }
   1213                  break;
   1214              case DEVICE_TDU   :
   1215              case DEVICE_TDU_R1:
   1216              case DEVICE_TDU_R2:
   1217                  Name = "TDU:" + (AnsiString)Address + ComPortName;
   \                     ??LoadConfigFromFile_49:
   \   000009D0   2C1394E5           LDR      R1,[R4, #+812]
   \   000009D4   8D0F8DE2           ADD      R0,SP,#+564
   \   000009D8   ........           _BLF     ??AnsiString_2,??AnsiString??rA_2
   \   000009DC   3C129FE5           LDR      R1,??LoadConfigFromFile_47+0x8  ;; `?<Constant "TCU ">` + 24
   \   000009E0   0020A0E1           MOV      R2,R0
   \   000009E4   860F8DE2           ADD      R0,SP,#+536
   \   000009E8   ........           _BLF     `??operator+_1`,`??operator+??rA`
   \   000009EC   C8208DE2           ADD      R2,SP,#+200
   \   000009F0   861F8DE2           ADD      R1,SP,#+536
   \   000009F4   7F0F8DE2           ADD      R0,SP,#+508
   \   000009F8   ........           _BLF     `??operator+`,`??operator+??rA_1`
   \   000009FC   7F1F8DE2           ADD      R1,SP,#+508
   \   00000A00   780F8DE2           ADD      R0,SP,#+480
   \   00000A04   ........           _BLF     ??AnsiString_3,??AnsiString??rA_3
   \   00000A08   ........           LDR      R1,??DataTable74  ;; ??npos
   \   00000A0C   0020A0E3           MOV      R2,#+0
   \   00000A10   003091E5           LDR      R3,[R1, #+0]
   \   00000A14   0010A0E1           MOV      R1,R0
   \   00000A18   440084E2           ADD      R0,R4,#+68
   \   00000A1C   ........           _BLF     ??assign,??assign??rA
   \   00000A20   0020A0E3           MOV      R2,#+0
   \   00000A24   0110A0E3           MOV      R1,#+1
   \   00000A28   780F8DE2           ADD      R0,SP,#+480
   \   00000A2C   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000A30   0020A0E3           MOV      R2,#+0
   \   00000A34   0110A0E3           MOV      R1,#+1
   \   00000A38   7F0F8DE2           ADD      R0,SP,#+508
   \   00000A3C   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000A40   0020A0E3           MOV      R2,#+0
   \   00000A44   0110A0E3           MOV      R1,#+1
   \   00000A48   860F8DE2           ADD      R0,SP,#+536
   \   00000A4C   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000A50   0020A0E3           MOV      R2,#+0
   \   00000A54   0110A0E3           MOV      R1,#+1
   \   00000A58   8D0F8DE2           ADD      R0,SP,#+564
   \   00000A5C   ........           _BLF     ??_Tidy,??_Tidy??rA
   1218                  TXUComFailureAlarm = new AlarmTXUComFailure((PRogramObjectBase *)this, 4);
   \   00000A60   D5FFFFEA           B        ??LoadConfigFromFile_53
   1219                  break;
   1220              case DEVICE_PCSW  :
   1221                  Name = "PC:" + (AnsiString)Address + ComPortName;
   \                     ??LoadConfigFromFile_50:
   \   00000A64   2C1394E5           LDR      R1,[R4, #+812]
   \   00000A68   A90F8DE2           ADD      R0,SP,#+676
   \   00000A6C   ........           _BLF     ??AnsiString_2,??AnsiString??rA_2
   \   00000A70   0020A0E1           MOV      R2,R0
   \   00000A74   ........           ADR      R1,??DataTable57  ;; "PC:"
   \   00000A78   A20F8DE2           ADD      R0,SP,#+648
   \   00000A7C   ........           _BLF     `??operator+_1`,`??operator+??rA`
   \   00000A80   C8208DE2           ADD      R2,SP,#+200
   \   00000A84   A21F8DE2           ADD      R1,SP,#+648
   \   00000A88   9B0F8DE2           ADD      R0,SP,#+620
   \   00000A8C   ........           _BLF     `??operator+`,`??operator+??rA_1`
   \   00000A90   9B1F8DE2           ADD      R1,SP,#+620
   \   00000A94   940F8DE2           ADD      R0,SP,#+592
   \   00000A98   ........           _BLF     ??AnsiString_3,??AnsiString??rA_3
   \   00000A9C   ........           LDR      R1,??DataTable74  ;; ??npos
   \   00000AA0   0020A0E3           MOV      R2,#+0
   \   00000AA4   003091E5           LDR      R3,[R1, #+0]
   \   00000AA8   0010A0E1           MOV      R1,R0
   \   00000AAC   440084E2           ADD      R0,R4,#+68
   \   00000AB0   ........           _BLF     ??assign,??assign??rA
   \   00000AB4   0020A0E3           MOV      R2,#+0
   \   00000AB8   0110A0E3           MOV      R1,#+1
   \   00000ABC   940F8DE2           ADD      R0,SP,#+592
   \   00000AC0   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000AC4   0020A0E3           MOV      R2,#+0
   \   00000AC8   0110A0E3           MOV      R1,#+1
   \   00000ACC   9B0F8DE2           ADD      R0,SP,#+620
   \   00000AD0   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000AD4   0020A0E3           MOV      R2,#+0
   \   00000AD8   0110A0E3           MOV      R1,#+1
   \   00000ADC   A20F8DE2           ADD      R0,SP,#+648
   \   00000AE0   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000AE4   0020A0E3           MOV      R2,#+0
   \   00000AE8   0110A0E3           MOV      R1,#+1
   \   00000AEC   A90F8DE2           ADD      R0,SP,#+676
   \   00000AF0   220000EA           B        ??LoadConfigFromFile_54
   1222                  break;
   1223              default :
   1224                  Name = "TCU:" + (AnsiString)Address + ComPortName;
   \                     ??LoadConfigFromFile_51:
   \   00000AF4   2C1394E5           LDR      R1,[R4, #+812]
   \   00000AF8   C50F8DE2           ADD      R0,SP,#+788
   \   00000AFC   ........           _BLF     ??AnsiString_2,??AnsiString??rA_2
   \   00000B00   14119FE5           LDR      R1,??LoadConfigFromFile_47+0x4  ;; `?<Constant "TCU ">` + 16
   \   00000B04   0020A0E1           MOV      R2,R0
   \   00000B08   BE0F8DE2           ADD      R0,SP,#+760
   \   00000B0C   ........           _BLF     `??operator+_1`,`??operator+??rA`
   \   00000B10   C8208DE2           ADD      R2,SP,#+200
   \   00000B14   BE1F8DE2           ADD      R1,SP,#+760
   \   00000B18   B70F8DE2           ADD      R0,SP,#+732
   \   00000B1C   ........           _BLF     `??operator+`,`??operator+??rA_1`
   \   00000B20   B71F8DE2           ADD      R1,SP,#+732
   \   00000B24   B00F8DE2           ADD      R0,SP,#+704
   \   00000B28   ........           _BLF     ??AnsiString_3,??AnsiString??rA_3
   \   00000B2C   ........           LDR      R1,??DataTable74  ;; ??npos
   \   00000B30   0020A0E3           MOV      R2,#+0
   \   00000B34   003091E5           LDR      R3,[R1, #+0]
   \   00000B38   0010A0E1           MOV      R1,R0
   \   00000B3C   440084E2           ADD      R0,R4,#+68
   \   00000B40   ........           _BLF     ??assign,??assign??rA
   \   00000B44   0020A0E3           MOV      R2,#+0
   \   00000B48   0110A0E3           MOV      R1,#+1
   \   00000B4C   B00F8DE2           ADD      R0,SP,#+704
   \   00000B50   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000B54   0020A0E3           MOV      R2,#+0
   \   00000B58   0110A0E3           MOV      R1,#+1
   \   00000B5C   B70F8DE2           ADD      R0,SP,#+732
   \   00000B60   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000B64   0020A0E3           MOV      R2,#+0
   \   00000B68   0110A0E3           MOV      R1,#+1
   \   00000B6C   BE0F8DE2           ADD      R0,SP,#+760
   \   00000B70   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000B74   0020A0E3           MOV      R2,#+0
   \   00000B78   0110A0E3           MOV      R1,#+1
   \   00000B7C   C50F8DE2           ADD      R0,SP,#+788
   \                     ??LoadConfigFromFile_54:
   \   00000B80   ........           _BLF     ??_Tidy,??_Tidy??rA
   1225                  break;
   1226              }
   1227          
   1228          
   1229          
   1230              SetKeyFromUart();
   \                     ??LoadConfigFromFile_52:
   \   00000B84   0400A0E1           MOV      R0,R4
   \   00000B88   ........           BL       ??SetKeyFromUart
   1231              if (PROProjectInfo::ProjectType == 2) {
   \   00000B8C   90009FE5           LDR      R0,??LoadConfigFromFile_47+0xC  ;; ??ProjectType
   \   00000B90   000090E5           LDR      R0,[R0, #+0]
   \   00000B94   020050E3           CMP      R0,#+2
   \   00000B98   1100001A           BNE      ??LoadConfigFromFile_55
   1232                  AC_OK_Sns   = new AI_AC_Sensor();
   \   00000B9C   5A0FA0E3           MOV      R0,#+360
   \   00000BA0   ........           _BLF     `??operator new`,`??operator new??rA`
   \   00000BA4   0050B0E1           MOVS     R5,R0
   \   00000BA8   0000000A           BEQ      ??LoadConfigFromFile_56
   \   00000BAC   ........           _BLF     ??AI_AC_Sensor,??AI_AC_Sensor??rA
   \                     ??LoadConfigFromFile_56:
   \   00000BB0   745284E5           STR      R5,[R4, #+628]
   1233                  FuseSns     = new AIFuseSensor();
   \   00000BB4   5A0FA0E3           MOV      R0,#+360
   \   00000BB8   ........           _BLF     `??operator new`,`??operator new??rA`
   \   00000BBC   0050B0E1           MOVS     R5,R0
   \   00000BC0   0000000A           BEQ      ??LoadConfigFromFile_57
   \   00000BC4   ........           _BLF     ??AIFuseSensor,??AIFuseSensor??rA
   \                     ??LoadConfigFromFile_57:
   \   00000BC8   785284E5           STR      R5,[R4, #+632]
   1234                  AnalogInList.push_back((AnalogInput *)AC_OK_Sns);
   \   00000BCC   741294E5           LDR      R1,[R4, #+628]
   \   00000BD0   4B0F84E2           ADD      R0,R4,#+300
   \   00000BD4   ........           _BLF     ??_Push_back0,??_Push_back0??rA_1
   1235                  AnalogInList.push_back((AnalogInput *)FuseSns);
   \   00000BD8   781294E5           LDR      R1,[R4, #+632]
   \   00000BDC   4B0F84E2           ADD      R0,R4,#+300
   \   00000BE0   ........           _BLF     ??_Push_back0,??_Push_back0??rA_1
   1236              }
   1237              AddAlarms(CompleteAlarmInfoList);
   \                     ??LoadConfigFromFile_55:
   \   00000BE4   FC1084E2           ADD      R1,R4,#+252
   \   00000BE8   0400A0E1           MOV      R0,R4
   \   00000BEC   ........           _BLF     ??AddAlarms,??AddAlarms??rA
   1238              AddSensorAlarms();
   \   00000BF0   0400A0E1           MOV      R0,R4
   \   00000BF4   ........           _BLF     ??AddSensorAlarms,??AddSensorAlarms??rA
   1239          
   1240              return ErrorLine;
   \   00000BF8   00409DE5           LDR      R4,[SP, #+0]
   \   00000BFC   0020A0E3           MOV      R2,#+0
   \   00000C00   0110A0E3           MOV      R1,#+1
   \   00000C04   C8008DE2           ADD      R0,SP,#+200
   \   00000C08   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000C0C   0400A0E1           MOV      R0,R4
   \   00000C10   D3DF8DE2           ADD      SP,SP,#+844
   \   00000C14   ........           B        ?Subroutine49
   \                     ??LoadConfigFromFile_47:
   \   00000C18   ........           DC32     `?<Constant "TCU ">` + 32
   \   00000C1C   ........           DC32     `?<Constant "TCU ">` + 16
   \   00000C20   ........           DC32     `?<Constant "TCU ">` + 24
   \   00000C24   ........           DC32     ??ProjectType
   1241          }
   1242          

   \                                 In segment CODE, align 4, keep-with-next
   1243          bool PROTanksystemUnit::LoadConfigNetwork(TSNConfigString &ConfigString) {
   \                     ??LoadConfigNetwork:
   \   00000000   F0472DE9           PUSH     {R4-R10,LR}
   1244              bool NoError = true;
   1245              int ErrorLine = 0;
   \   00000004   FC819FE5           LDR      R8,??LoadConfigNetwork_1  ;; `?<Constant "Network">`
   \   00000008   ........           LDR      R9,??DataTable71  ;; ??TanksystemUnitSet
   \   0000000C   B4D04DE2           SUB      SP,SP,#+180
   \   00000010   0140A0E1           MOV      R4,R1
   \   00000014   0160A0E3           MOV      R6,#+1
   \   00000018   0010A0E3           MOV      R1,#+0
   \   0000001C   00108DE5           STR      R1,[SP, #+0]
   \   00000020   0170E0E1           MVN      R7,R1
   1246              int Key;
   1247          
   1248              do {
   1249                  AnsiString InputKeyWord = ConfigString.NextWord(ErrorLine);
   \                     ??LoadConfigNetwork_2:
   \   00000024   0030A0E3           MOV      R3,#+0
   \   00000028   0D20A0E1           MOV      R2,SP
   \   0000002C   44108DE2           ADD      R1,SP,#+68
   \   00000030   0400A0E1           MOV      R0,R4
   \   00000034   ........           _BLF     ??NextWord,??NextWord??rA
   1250                  struct NetworkedDevice  entry;
   \   00000038   0C008DE2           ADD      R0,SP,#+12
   \   0000003C   ........           _BLF     ??AnsiString,??AnsiString??rA
   1251          
   1252                  if (ErrorLine) {
   \   00000040   00009DE5           LDR      R0,[SP, #+0]
   \   00000044   000050E3           CMP      R0,#+0
   \   00000048   0B00000A           BEQ      ??LoadConfigNetwork_3
   1253                      if (ErrorLine != EOF) {
   \   0000004C   070050E1           CMP      R0,R7
   \   00000050   5A00000A           BEQ      ??LoadConfigNetwork_4
   1254                          GiveConfigWarning("Network", ErrorLine);
   \   00000054   0810A0E1           MOV      R1,R8
   \   00000058   28008DE2           ADD      R0,SP,#+40
   \   0000005C   ........           _BLF     ??AnsiString_1,??AnsiString??rA_1
   \   00000060   00109DE5           LDR      R1,[SP, #+0]
   \   00000064   ........           _BLF     ??GiveConfigWarning,??GiveConfigWarning??rA
   \   00000068   0020A0E3           MOV      R2,#+0
   \   0000006C   0110A0E3           MOV      R1,#+1
   \   00000070   28008DE2           ADD      R0,SP,#+40
   \                     ??LoadConfigNetwork_5:
   \   00000074   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000078   500000EA           B        ??LoadConfigNetwork_4
   1255                      }
   1256                  } else {
   1257                      Key = FindConfigKey(InputKeyWord);
   \                     ??LoadConfigNetwork_3:
   \   0000007C   44108DE2           ADD      R1,SP,#+68
   \   00000080   28008DE2           ADD      R0,SP,#+40
   \   00000084   ........           _BLF     ??string,??string??rA
   \   00000088   28008DE2           ADD      R0,SP,#+40
   \   0000008C   ........           _BLF     ??FindConfigKey,??FindConfigKey??rA
   \   00000090   0050A0E1           MOV      R5,R0
   \   00000094   0020A0E3           MOV      R2,#+0
   \   00000098   0110A0E3           MOV      R1,#+1
   \   0000009C   28008DE2           ADD      R0,SP,#+40
   \   000000A0   ........           _BLF     ??_Tidy,??_Tidy??rA
   1258                      switch (Key) {
   \   000000A4   6110A0E3           MOV      R1,#+97
   \   000000A8   7C1D81E3           ORR      R1,R1,#0x1F00
   \   000000AC   010055E1           CMP      R5,R1
   \   000000B0   1A00000A           BEQ      ??LoadConfigNetwork_6
   \   000000B4   011081E2           ADD      R1,R1,#+1
   \   000000B8   010055E1           CMP      R5,R1
   \   000000BC   2100000A           BEQ      ??LoadConfigNetwork_7
   \   000000C0   011081E3           ORR      R1,R1,#0x1
   \   000000C4   010055E1           CMP      R5,R1
   \   000000C8   1C00000A           BEQ      ??LoadConfigNetwork_8
   \   000000CC   6D10A0E3           MOV      R1,#+109
   \   000000D0   801D81E3           ORR      R1,R1,#0x2000
   \   000000D4   010055E1           CMP      R5,R1
   \   000000D8   3800000A           BEQ      ??LoadConfigNetwork_4
   1259                      default:
   1260                          GiveConfigWarning("Network", InputKeyWord, ConfigString.LineCount);
   \   000000DC   44108DE2           ADD      R1,SP,#+68
   \   000000E0   60008DE2           ADD      R0,SP,#+96
   \   000000E4   ........           _BLF     ??string,??string??rA
   \   000000E8   0810A0E1           MOV      R1,R8
   \   000000EC   7C008DE2           ADD      R0,SP,#+124
   \   000000F0   ........           _BLF     ??AnsiString_1,??AnsiString??rA_1
   \   000000F4   1C2094E5           LDR      R2,[R4, #+28]
   \   000000F8   60108DE2           ADD      R1,SP,#+96
   \   000000FC   ........           _BLF     ??GiveConfigWarning_1,??GiveConfigWarning??rA_1
   \   00000100   0020A0E3           MOV      R2,#+0
   \   00000104   0110A0E3           MOV      R1,#+1
   \   00000108   60008DE2           ADD      R0,SP,#+96
   \   0000010C   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000110   0020A0E3           MOV      R2,#+0
   \   00000114   0110A0E3           MOV      R1,#+1
   \   00000118   7C008DE2           ADD      R0,SP,#+124
   \   0000011C   D4FFFFEA           B        ??LoadConfigNetwork_5
   1261                          break;
   1262          
   1263                      case C_UART_DEVICE_TDU:
   1264                          entry.device_id       =  DEVICE_TDU;
   \                     ??LoadConfigNetwork_6:
   \   00000120   3010A0E3           MOV      R1,#+48
   \                     ??LoadConfigNetwork_9:
   \   00000124   04108DE5           STR      R1,[SP, #+4]
   1265                          entry.device_address  =  ConfigString.ReadLong(ErrorLine);
   \   00000128   0020A0E3           MOV      R2,#+0
   \   0000012C   0D10A0E1           MOV      R1,SP
   \   00000130   0400A0E1           MOV      R0,R4
   \   00000134   ........           _BLF     ??ReadLong,??ReadLong??rA
   \   00000138   08008DE5           STR      R0,[SP, #+8]
   1266                          NoError = !ErrorLine;
   \   0000013C   160000EA           B        ??LoadConfigNetwork_10
   1267                          if (NoError) {
   1268                              PROTanksystemUnit::_net_devices.push_back(entry);
   1269                          }
   1270                          break;
   1271          
   1272                      case C_UART_DEVICE_TCU:
   1273                          entry.device_id       =  DEVICE_TCU;
   \                     ??LoadConfigNetwork_8:
   \   00000140   2010A0E3           MOV      R1,#+32
   \   00000144   F6FFFFEA           B        ??LoadConfigNetwork_9
   1274                          entry.device_address  =  ConfigString.ReadLong(ErrorLine);
   1275                          NoError = !ErrorLine;
   1276                          if (NoError) {
   1277                              PROTanksystemUnit::_net_devices.push_back(entry);
   1278                          }
   1279                          break;
   1280          
   1281                      case C_UART_DEVICE_PC:
   1282                          entry.device_id       =  DEVICE_PCSW;
   \                     ??LoadConfigNetwork_7:
   \   00000148   4010A0E3           MOV      R1,#+64
   \   0000014C   04108DE5           STR      R1,[SP, #+4]
   1283                          entry.device_address  =  ConfigString.ReadLong(ErrorLine);
   \   00000150   0020A0E3           MOV      R2,#+0
   \   00000154   0D10A0E1           MOV      R1,SP
   \   00000158   0400A0E1           MOV      R0,R4
   \   0000015C   ........           _BLF     ??ReadLong,??ReadLong??rA
   \   00000160   08008DE5           STR      R0,[SP, #+8]
   1284                          entry.Description     =  ConfigString.GetRemainingLine(ErrorLine);
   \   00000164   0D20A0E1           MOV      R2,SP
   \   00000168   98108DE2           ADD      R1,SP,#+152
   \   0000016C   0400A0E1           MOV      R0,R4
   \   00000170   ........           _BLF     ??GetRemainingLine,??GetRemainingLine??rA
   \   00000174   ........           LDR      R0,??DataTable74  ;; ??npos
   \   00000178   0020A0E3           MOV      R2,#+0
   \   0000017C   003090E5           LDR      R3,[R0, #+0]
   \   00000180   98108DE2           ADD      R1,SP,#+152
   \   00000184   0C008DE2           ADD      R0,SP,#+12
   \   00000188   ........           _BLF     ??assign,??assign??rA
   \   0000018C   0020A0E3           MOV      R2,#+0
   \   00000190   0110A0E3           MOV      R1,#+1
   \   00000194   98008DE2           ADD      R0,SP,#+152
   \   00000198   ........           _BLF     ??_Tidy,??_Tidy??rA
   1285                          NoError = !ErrorLine;
   \                     ??LoadConfigNetwork_10:
   \   0000019C   00009DE5           LDR      R0,[SP, #+0]
   \   000001A0   000050E3           CMP      R0,#+0
   \   000001A4   0400001A           BNE      ??LoadConfigNetwork_11
   \   000001A8   0160A0E3           MOV      R6,#+1
   1286                          if (NoError) {
   1287                              PROTanksystemUnit::_net_devices.push_back(entry);
   \   000001AC   04108DE2           ADD      R1,SP,#+4
   \   000001B0   380089E2           ADD      R0,R9,#+56
   \   000001B4   ........           _BLF     ??_Push_back0_3,??_Push_back0??rA_3
   \   000001B8   000000EA           B        ??LoadConfigNetwork_4
   1288                          }
   \                     ??LoadConfigNetwork_11:
   \   000001BC   0060A0E3           MOV      R6,#+0
   1289                          break;
   1290          
   1291                      case C_NETWORK_END:
   1292                          break;
   1293                      }
   1294                  }
   1295              } while (NoError && (ErrorLine != EOF) && (Key != C_NETWORK_END));
   \                     ??LoadConfigNetwork_4:
   \   000001C0   0020A0E3           MOV      R2,#+0
   \   000001C4   0110A0E3           MOV      R1,#+1
   \   000001C8   0C008DE2           ADD      R0,SP,#+12
   \   000001CC   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000001D0   0020A0E3           MOV      R2,#+0
   \   000001D4   0110A0E3           MOV      R1,#+1
   \   000001D8   44008DE2           ADD      R0,SP,#+68
   \   000001DC   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000001E0   000056E3           CMP      R6,#+0
   \   000001E4   00009D15           LDRNE    R0,[SP, #+0]
   \   000001E8   07005011           CMPNE    R0,R7
   \   000001EC   6D00A013           MOVNE    R0,#+109
   \   000001F0   800D8013           ORRNE    R0,R0,#0x2000
   \   000001F4   00005511           CMPNE    R5,R0
   \   000001F8   89FFFF1A           BNE      ??LoadConfigNetwork_2
   1296              return NoError;
   \   000001FC   0600A0E1           MOV      R0,R6
   \   00000200   B4D08DE2           ADD      SP,SP,#+180
   \   00000204   ........           B        ?Subroutine52
   \                     ??LoadConfigNetwork_1:
   \   00000208   ........           DC32     `?<Constant "Network">`
   1297          }

   \                                 In segment CODE, align 4, keep-with-next
   \                     ?Subroutine52:
   \   00000000   F047BDE8           POP      {R4-R10,LR}
   \   00000004   1EFF2FE1           BX       LR               ;; return
   \                     ??Subroutine52_0:
   \   00000008   25690000           DC8      "%i",+0
   \   0000000C   ........           DC32     `?<Constant "00:00:00">`
   1298          
   1299          //---------------------------------------------------------------------------
   1300          
   1301          ///////////////////////////////////////////////////////////////
   1302          //
   1303          // Routines for the librarian
   1304          //
   1305          ///////////////////////////////////////////////////////////////
   1306          

   \                                 In segment CODE, align 4, keep-with-next
   1307          int PROTanksystemUnit::GetValue(int ValueId, int Index, float &MyRetValue,  int &DecPnt, int &Unit) {
   \                     ??GetValue:
   \   00000000   F24F2DE9           PUSH     {R1,R4-R11,LR}
   1308              int Status = GETVAL_NO_ERR;
   1309              switch (ValueId) {
   \   00000004   00E09DE5           LDR      LR,[SP, #+0]
   \   00000008   28509DE5           LDR      R5,[SP, #+40]
   \   0000000C   2C609DE5           LDR      R6,[SP, #+44]
   \   00000010   0340A0E1           MOV      R4,R3
   \   00000014   0070A0E3           MOV      R7,#+0
   \   00000018   021180E0           ADD      R1,R0,R2, LSL #+2
   \   0000001C   1230A0E3           MOV      R3,#+18
   \   00000020   02C0A0E3           MOV      R12,#+2
   \   00000024   1080A0E3           MOV      R8,#+16
   \   00000028   0190A0E3           MOV      R9,#+1
   \   0000002C   00A0A0E3           MOV      R10,#+0
   \   00000030   58B0A0E3           MOV      R11,#+88
   \   00000034   50BE8BE3           ORR      R11,R11,#0x500
   \   00000038   0B005EE1           CMP      LR,R11
   \   0000003C   01B08B13           ORRNE    R11,R11,#0x1
   \   00000040   0B005E11           CMPNE    LR,R11
   \   00000044   01B08B12           ADDNE    R11,R11,#+1
   \   00000048   0B005E11           CMPNE    LR,R11
   \   0000004C   01B08B13           ORRNE    R11,R11,#0x1
   \   00000050   0B005E11           CMPNE    LR,R11
   \   00000054   01B08B12           ADDNE    R11,R11,#+1
   \   00000058   0B005E11           CMPNE    LR,R11
   \   0000005C   01B08B13           ORRNE    R11,R11,#0x1
   \   00000060   0B005E11           CMPNE    LR,R11
   \   00000064   01B08B12           ADDNE    R11,R11,#+1
   \   00000068   0B005E11           CMPNE    LR,R11
   \   0000006C   8200000A           BEQ      ??GetValue_2
   \   00000070   27B0A0E3           MOV      R11,#+39
   \   00000074   C0BE8BE3           ORR      R11,R11,#0xC00
   \   00000078   0B005EE1           CMP      LR,R11
   \   0000007C   8E00000A           BEQ      ??GetValue_3
   \   00000080   01B08BE2           ADD      R11,R11,#+1
   \   00000084   0B005EE1           CMP      LR,R11
   \   00000088   8E00000A           BEQ      ??GetValue_4
   \   0000008C   01B08BE3           ORR      R11,R11,#0x1
   \   00000090   0B005EE1           CMP      LR,R11
   \   00000094   8E00000A           BEQ      ??GetValue_5
   \   00000098   01B08BE2           ADD      R11,R11,#+1
   \   0000009C   0B005EE1           CMP      LR,R11
   \   000000A0   8D00000A           BEQ      ??GetValue_6
   \   000000A4   FABE89E3           ORR      R11,R9,#0xFA0
   \   000000A8   0B005EE1           CMP      LR,R11
   \   000000AC   4400000A           BEQ      ??GetValue_7
   \   000000B0   F9BE83E2           ADD      R11,R3,#+3984
   \   000000B4   0B005EE1           CMP      LR,R11
   \   000000B8   4700000A           BEQ      ??GetValue_8
   \   000000BC   01B08BE3           ORR      R11,R11,#0x1
   \   000000C0   0B005EE1           CMP      LR,R11
   \   000000C4   4900000A           BEQ      ??GetValue_9
   \   000000C8   01B08BE2           ADD      R11,R11,#+1
   \   000000CC   0B005EE1           CMP      LR,R11
   \   000000D0   4800000A           BEQ      ??GetValue_10
   \   000000D4   01B08BE3           ORR      R11,R11,#0x1
   \   000000D8   0B005EE1           CMP      LR,R11
   \   000000DC   4700000A           BEQ      ??GetValue_11
   \   000000E0   01B08BE2           ADD      R11,R11,#+1
   \   000000E4   0B005EE1           CMP      LR,R11
   \   000000E8   4600000A           BEQ      ??GetValue_12
   \   000000EC   01B08BE3           ORR      R11,R11,#0x1
   \   000000F0   0B005EE1           CMP      LR,R11
   \   000000F4   4700000A           BEQ      ??GetValue_13
   \   000000F8   01B08BE2           ADD      R11,R11,#+1
   \   000000FC   0B005EE1           CMP      LR,R11
   \   00000100   4200000A           BEQ      ??GetValue_14
   \   00000104   02B08BE3           ORR      R11,R11,#0x2
   \   00000108   0B005EE1           CMP      LR,R11
   \   0000010C   4400000A           BEQ      ??GetValue_15
   \   00000110   FB0E5EE3           CMP      LR,#+4016
   \   00000114   4800000A           BEQ      ??GetValue_16
   \   00000118   FABE83E3           ORR      R11,R3,#0xFA0
   \   0000011C   0B005EE1           CMP      LR,R11
   \   00000120   4700000A           BEQ      ??GetValue_17
   \   00000124   03B08BE2           ADD      R11,R11,#+3
   \   00000128   0B005EE1           CMP      LR,R11
   \   0000012C   4600000A           BEQ      ??GetValue_18
   \   00000130   01B08BE2           ADD      R11,R11,#+1
   \   00000134   0B005EE1           CMP      LR,R11
   \   00000138   4900000A           BEQ      ??GetValue_19
   \   0000013C   01B08BE3           ORR      R11,R11,#0x1
   \   00000140   0B005EE1           CMP      LR,R11
   \   00000144   4800000A           BEQ      ??GetValue_20
   \   00000148   01B08BE2           ADD      R11,R11,#+1
   \   0000014C   0B005EE1           CMP      LR,R11
   \   00000150   4700000A           BEQ      ??GetValue_21
   \   00000154   4CB08BE2           ADD      R11,R11,#+76
   \   00000158   0B005EE1           CMP      LR,R11
   \   0000015C   0900000A           BEQ      ??GetValue_22
   \   00000160   01B08BE3           ORR      R11,R11,#0x1
   \   00000164   0B005EE1           CMP      LR,R11
   \   00000168   0C00000A           BEQ      ??GetValue_23
   \   0000016C   01B08BE2           ADD      R11,R11,#+1
   \   00000170   0B005EE1           CMP      LR,R11
   \   00000174   0E00000A           BEQ      ??GetValue_24
   \   00000178   01B08BE3           ORR      R11,R11,#0x1
   \   0000017C   0B005EE1           CMP      LR,R11
   \   00000180   0D00000A           BEQ      ??GetValue_25
   \   00000184   5A0000EA           B        ??GetValue_26
   1310              case SVT_TXU_RX_BYTES:
   1311                  MyRetValue = RxCnt[Index];
   \                     ??GetValue_22:
   \   00000188   F00191E5           LDR      R0,[R1, #+496]
   \                     ??GetValue_27:
   \   0000018C   ........           _BLF     __ulongToFloat,??__ulongToFloat??rA
   \                     ??GetValue_28:
   \   00000190   000084E5           STR      R0,[R4, #+0]
   1312                  DecPnt     = 0;
   \   00000194   00A085E5           STR      R10,[R5, #+0]
   1313                  Unit       = NO_UNIT;
   \   00000198   00A086E5           STR      R10,[R6, #+0]
   \   0000019C   5B0000EA           B        ??GetValue_29
   1314                  break;
   1315              case SVT_TXU_RX_LOAD :
   1316                  MyRetValue = RxLoad[Index];
   \                     ??GetValue_23:
   \   000001A0   9C0191E5           LDR      R0,[R1, #+412]
   \                     ??GetValue_30:
   \   000001A4   000084E5           STR      R0,[R4, #+0]
   1317                  DecPnt     = 1;
   \   000001A8   009085E5           STR      R9,[R5, #+0]
   1318                  Unit       = PERCENT_UNIT;
   \   000001AC   008086E5           STR      R8,[R6, #+0]
   \   000001B0   560000EA           B        ??GetValue_29
   1319                  break;
   1320              case SVT_TXU_TX_BYTES:
   1321                  MyRetValue = TxCnt[Index];
   \                     ??GetValue_24:
   \   000001B4   D40191E5           LDR      R0,[R1, #+468]
   \   000001B8   F3FFFFEA           B        ??GetValue_27
   1322                  DecPnt     = 0;
   1323                  Unit       = NO_UNIT;
   1324                  break;
   1325              case SVT_TXU_TX_LOAD :
   1326                  MyRetValue = TxLoad[Index];
   \                     ??GetValue_25:
   \   000001BC   B80191E5           LDR      R0,[R1, #+440]
   \   000001C0   F7FFFFEA           B        ??GetValue_30
   1327                  DecPnt     = 1;
   1328                  Unit       = PERCENT_UNIT;
   1329                  break;
   1330              case SVT_AIN1:
   1331                  MyRetValue = ADResults[0];
   \                     ??GetValue_7:
   \   000001C4   7C0190E5           LDR      R0,[R0, #+380]
   \   000001C8   000084E5           STR      R0,[R4, #+0]
   1332                  DecPnt     = 2;
   \   000001CC   00C085E5           STR      R12,[R5, #+0]
   1333                  Unit       = CURRENT_UNIT;
   \   000001D0   1100A0E3           MOV      R0,#+17
   \                     ??GetValue_31:
   \   000001D4   000086E5           STR      R0,[R6, #+0]
   \   000001D8   4C0000EA           B        ??GetValue_29
   1334                  break;
   1335              case SVT_AIN2:
   1336                  MyRetValue = ADResults[1];
   \                     ??GetValue_8:
   \   000001DC   800190E5           LDR      R0,[R0, #+384]
   \                     ??GetValue_32:
   \   000001E0   000084E5           STR      R0,[R4, #+0]
   1337                  DecPnt     = 2;
   \   000001E4   00C085E5           STR      R12,[R5, #+0]
   1338                  Unit       = VOLTAGE_UNIT;
   \   000001E8   003086E5           STR      R3,[R6, #+0]
   \   000001EC   470000EA           B        ??GetValue_29
   1339                  break;
   1340              case SVT_AIN3 :
   1341                  MyRetValue = ADResults[2];
   \                     ??GetValue_9:
   \   000001F0   840190E5           LDR      R0,[R0, #+388]
   \   000001F4   F9FFFFEA           B        ??GetValue_32
   1342                  DecPnt     = 2;
   1343                  Unit       = VOLTAGE_UNIT;
   1344                  break;
   1345              case SVT_AIN4 :
   1346                  MyRetValue = ADResults[3];
   \                     ??GetValue_10:
   \   000001F8   880190E5           LDR      R0,[R0, #+392]
   \   000001FC   F7FFFFEA           B        ??GetValue_32
   1347                  DecPnt     = 2;
   1348                  Unit       = VOLTAGE_UNIT;
   1349                  break;
   1350              case SVT_AIN5 :
   1351                  MyRetValue = ADResults[4];
   \                     ??GetValue_11:
   \   00000200   8C0190E5           LDR      R0,[R0, #+396]
   \   00000204   F5FFFFEA           B        ??GetValue_32
   1352                  DecPnt     = 2;
   1353                  Unit       = VOLTAGE_UNIT;
   1354                  break;
   1355              case SVT_AIN6 :
   1356                  MyRetValue = ADResults[6];
   \                     ??GetValue_12:
   \   00000208   940190E5           LDR      R0,[R0, #+404]
   \   0000020C   F3FFFFEA           B        ??GetValue_32
   1357                  DecPnt     = 2;
   1358                  Unit       = VOLTAGE_UNIT;
   1359                  break;
   1360              case SVT_FLASH_ERROR_STATUS :
   1361                  MyRetValue = FlashErrStatus;
   \                     ??GetValue_14:
   \   00000210   1402D0E5           LDRB     R0,[R0, #+532]
   \   00000214   DCFFFFEA           B        ??GetValue_27
   1362                  DecPnt     = 0;
   1363                  Unit       = NO_UNIT;
   1364                  break;
   1365              case SVT_LAST_OS_ERROR :
   1366                  MyRetValue = LastOSErr;
   \                     ??GetValue_13:
   \   00000218   0C02D0E5           LDRB     R0,[R0, #+524]
   \                     ??GetValue_33:
   \   0000021C   ........           _BLF     __ulongToFloat,??__ulongToFloat??rA
   \   00000220   DAFFFFEA           B        ??GetValue_28
   1367                  DecPnt     = 0;
   1368                  Unit       = NO_UNIT;
   1369                  break;
   1370              case SVT_RUNNING_HOURS   :
   1371                  MyRetValue = RunningHours;
   \                     ??GetValue_15:
   \   00000224   340290E5           LDR      R0,[R0, #+564]
   \   00000228   000084E5           STR      R0,[R4, #+0]
   1372                  DecPnt     = 3;
   \   0000022C   0300A0E3           MOV      R0,#+3
   \   00000230   000085E5           STR      R0,[R5, #+0]
   1373                  Unit       = DAY_UNIT;
   \   00000234   1900A0E3           MOV      R0,#+25
   \   00000238   E5FFFFEA           B        ??GetValue_31
   1374                  break;
   1375              case SVT_RXERR_CMD  :
   1376                  MyRetValue = RxErrCmd;
   \                     ??GetValue_16:
   \   0000023C   480490E5           LDR      R0,[R0, #+1096]
   \   00000240   D1FFFFEA           B        ??GetValue_27
   1377                  DecPnt     = 0;
   1378                  Unit       = NO_UNIT;
   1379                  break;
   1380              case SVT_RXERR_CNT  :
   1381                  MyRetValue = RxErrCnt;
   \                     ??GetValue_17:
   \   00000244   500490E5           LDR      R0,[R0, #+1104]
   \   00000248   F3FFFFEA           B        ??GetValue_33
   1382                  DecPnt     = 0;
   1383                  Unit       = NO_UNIT;
   1384                  break;
   1385              case SVT_IO_SYSTEM_DELAY:
   1386                  MyRetValue = IOLoadDelay;
   \                     ??GetValue_18:
   \   0000024C   380290E5           LDR      R0,[R0, #+568]
   \   00000250   ........           _BLF     __longToFloat,??__longToFloat??rA
   \   00000254   000084E5           STR      R0,[R4, #+0]
   1387                  DecPnt     = 0;
   \   00000258   00A085E5           STR      R10,[R5, #+0]
   1388                  Unit       = MSECOND_UNIT;
   \   0000025C   1500A0E3           MOV      R0,#+21
   \   00000260   DBFFFFEA           B        ??GetValue_31
   1389                  break;
   1390              case SVT_CPU_LOAD_RAW:
   1391                  MyRetValue = RawLoad;
   \                     ??GetValue_19:
   \   00000264   400290E5           LDR      R0,[R0, #+576]
   \   00000268   CDFFFFEA           B        ??GetValue_30
   1392                  DecPnt     = 1;
   1393                  Unit       = PERCENT_UNIT;
   1394                  break;
   1395              case SVT_CPU_LOAD_AVG:
   1396                  MyRetValue = AvgLoad;
   \                     ??GetValue_20:
   \   0000026C   440290E5           LDR      R0,[R0, #+580]
   \   00000270   CBFFFFEA           B        ??GetValue_30
   1397                  DecPnt     = 1;
   1398                  Unit       = PERCENT_UNIT;
   1399                  break;
   1400              case SVT_CPU_LOAD_MAX:
   1401                  MyRetValue = MaxLoad;
   \                     ??GetValue_21:
   \   00000274   480290E5           LDR      R0,[R0, #+584]
   \   00000278   C9FFFFEA           B        ??GetValue_30
   1402                  DecPnt     = 1;
   1403                  Unit       = PERCENT_UNIT;
   1404                  break;
   1405              case SVT_ROLLING_PERIOD     :
   1406              case SVT_ROLLING_FREQUENCY  :
   1407              case SVT_LIST_MAX_P         :
   1408              case SVT_LIST_MAX_S         :
   1409              case SVT_LIST_BUF_MAX_P     :
   1410              case SVT_LIST_BUF_MAX_S     :
   1411              case SVT_RESET_MAX_LIST     :
   1412                  if (PROInclinometer::PROInclinPtr) {
   \                     ??GetValue_2:
   \   0000027C   ........           LDR      R0,??DataTable75  ;; ??PROInclinPtr
   \   00000280   007090E5           LDR      R7,[R0, #+0]
   \   00000284   000057E3           CMP      R7,#+0
   \   00000288   0900000A           BEQ      ??GetValue_34
   1413                      Status = PROInclinometer::PROInclinPtr->GetValue(ValueId, Index, MyRetValue,  DecPnt, Unit);
   \   0000028C   40002DE9           PUSH     {R6}
   \   00000290   20002DE9           PUSH     {R5}
   \   00000294   0430A0E1           MOV      R3,R4
   \   00000298   A44097E5           LDR      R4,[R7, #+164]
   \   0000029C   0E10A0E1           MOV      R1,LR
   \   000002A0   244094E5           LDR      R4,[R4, #+36]
   \   000002A4   0700A0E1           MOV      R0,R7
   \   000002A8   0FE0A0E1           MOV      LR,PC
   \   000002AC   14FF2FE1           BX       R4
   \   000002B0   140000EA           B        ??GetValue_35
   1414                  } else {
   1415                      Status = GETVAL_NOT_AVAILABLE;
   \                     ??GetValue_34:
   \   000002B4   0170A0E3           MOV      R7,#+1
   \   000002B8   140000EA           B        ??GetValue_29
   1416                  }
   1417                  break;
   1418              case SVT_TASK_STACK_USED         :
   1419                  MyRetValue = StackUsed[Index];
   \                     ??GetValue_3:
   \   000002BC   BC0891E5           LDR      R0,[R1, #+2236]
   \                     ??GetValue_36:
   \   000002C0   ........           _BLF     __longToFloat,??__longToFloat??rA
   \   000002C4   B1FFFFEA           B        ??GetValue_28
   1420                  DecPnt     = 0;
   1421                  Unit       = NO_UNIT;
   1422                  break;
   1423              case SVT_TASK_STACK_SPACE         :
   1424                  MyRetValue = StackSpace[Index];
   \                     ??GetValue_4:
   \   000002C8   FC0991E5           LDR      R0,[R1, #+2556]
   \   000002CC   ........           _BLF     __longToFloat,??__longToFloat??rA
   \   000002D0   AEFFFFEA           B        ??GetValue_28
   1425                  DecPnt     = 0;
   1426                  Unit       = NO_UNIT;
   1427                  break;
   1428              case SVT_TASK_NUMBER        :
   1429                  MyRetValue = NumberOfTasks;
   \                     ??GetValue_5:
   \   000002D4   9C0A90E5           LDR      R0,[R0, #+2716]
   \   000002D8   F8FFFFEA           B        ??GetValue_36
   1430                  DecPnt     = 0;
   1431                  Unit       = NO_UNIT;
   1432                  break;
   1433              case SVT_TASK_LOAD:
   1434                  MyRetValue = RawPerformance[Index] / 10.0F;
   \                     ??GetValue_6:
   \   000002DC   5C0991E5           LDR      R0,[R1, #+2396]
   \   000002E0   ........           _BLF     __longToFloat,??__longToFloat??rA
   \   000002E4   4014A0E3           MOV      R1,#+1073741824
   \   000002E8   481781E3           ORR      R1,R1,#0x1200000
   \   000002EC   ........           _BLF     __fDiv,??__fDiv??rA
   \   000002F0   ABFFFFEA           B        ??GetValue_30
   1435                  DecPnt     = 1;
   1436                  Unit       = PERCENT_UNIT;
   1437                  break;
   1438              default:
   1439                  Status = PRogramObjectBase::GetValue(ValueId, Index, MyRetValue,  DecPnt, Unit);
   \                     ??GetValue_26:
   \   000002F4   40002DE9           PUSH     {R6}
   \   000002F8   20002DE9           PUSH     {R5}
   \   000002FC   0430A0E1           MOV      R3,R4
   \   00000300   0E10A0E1           MOV      R1,LR
   \   00000304   ........           _BLF     ??GetValue_1,??GetValue??rA
   \                     ??GetValue_35:
   \   00000308   0070A0E1           MOV      R7,R0
   \   0000030C   08D08DE2           ADD      SP,SP,#+8
   1440                  break;
   1441              }
   1442              return (Status);
   \                     ??GetValue_29:
   \   00000310   0700A0E1           MOV      R0,R7
   \   00000314                      REQUIRE ?Subroutine51
   \   00000314                      ;; // Fall through to label ?Subroutine51
   1443          }
   1444          

   \                                 In segment CODE, align 4, keep-with-next
   1445          int PROTanksystemUnit::GetStringValue(int ValueId, int Index, AnsiString &MyString) {
   \                     ??GetStringValue:
   \   00000000   F0472DE9           PUSH     {R4-R10,LR}
   \   00000004   01C0A0E1           MOV      R12,R1
   1446              int Status = GETVAL_NO_ERR;
   1447              switch (ValueId) {
   \   00000008   5E10A0E3           MOV      R1,#+94
   \   0000000C   401F81E3           ORR      R1,R1,#0x100
   \   00000010   007081E0           ADD      R7,R1,R0
   \   00000014   ........           LDR      R1,??DataTable74  ;; ??npos
   \   00000018   F8D04DE2           SUB      SP,SP,#+248
   \   0000001C   006091E5           LDR      R6,[R1, #+0]
   \   00000020   02E0A0E1           MOV      LR,R2
   \   00000024   ........           LDR      R2,??Subroutine52_0+0x4  ;; `?<Constant "00:00:00">`
   \   00000028   0340A0E1           MOV      R4,R3
   \   0000002C   0050A0E3           MOV      R5,#+0
   \   00000030   0E3180E0           ADD      R3,R0,LR, LSL #+2
   \   00000034   848F80E2           ADD      R8,R0,#+528
   \   00000038   E510A0E3           MOV      R1,#+229
   \   0000003C   401F81E3           ORR      R1,R1,#0x100
   \   00000040   22A0A0E3           MOV      R10,#+34
   \   00000044   C0AE8AE3           ORR      R10,R10,#0xC00
   \   00000048   0A005CE1           CMP      R12,R10
   \   0000004C   5700000A           BEQ      ??GetStringValue_4
   \   00000050   04A08AE3           ORR      R10,R10,#0x4
   \   00000054   0A005CE1           CMP      R12,R10
   \   00000058   2200000A           BEQ      ??GetStringValue_5
   \   0000005C   A9A0A0E3           MOV      R10,#+169
   \   00000060   F0AE8AE3           ORR      R10,R10,#0xF00
   \   00000064   0A005CE1           CMP      R12,R10
   \   00000068   1800000A           BEQ      ??GetStringValue_6
   \   0000006C   02A08AE3           ORR      R10,R10,#0x2
   \   00000070   0A005CE1           CMP      R12,R10
   \   00000074   2300000A           BEQ      ??GetStringValue_7
   \   00000078   01A08AE2           ADD      R10,R10,#+1
   \   0000007C   0A005CE1           CMP      R12,R10
   \   00000080   3600000A           BEQ      ??GetStringValue_8
   \   00000084   01A08AE3           ORR      R10,R10,#0x1
   \   00000088   0A005CE1           CMP      R12,R10
   \   0000008C   5800000A           BEQ      ??GetStringValue_9
   \   00000090   01A08AE2           ADD      R10,R10,#+1
   \   00000094   0A005CE1           CMP      R12,R10
   \   00000098   7C00000A           BEQ      ??GetStringValue_10
   \   0000009C   01A08AE3           ORR      R10,R10,#0x1
   \   000000A0   0A005CE1           CMP      R12,R10
   \   000000A4   A200000A           BEQ      ??GetStringValue_11
   \   000000A8   02A08AE2           ADD      R10,R10,#+2
   \   000000AC   0A005CE1           CMP      R12,R10
   \   000000B0   9700000A           BEQ      ??GetStringValue_12
   \   000000B4   02A08AE3           ORR      R10,R10,#0x2
   \   000000B8   0A005CE1           CMP      R12,R10
   \   000000BC   A500000A           BEQ      ??GetStringValue_13
   \   000000C0   01A08AE2           ADD      R10,R10,#+1
   \   000000C4   0A005CE1           CMP      R12,R10
   \   000000C8   AE00000A           BEQ      ??GetStringValue_14
   \   000000CC   B70000EA           B        ??GetStringValue_15
   1448              case SVT_LAST_OS_ERROR_TASK:
   1449                  MyString = LastOSErrTask;
   \                     ??GetStringValue_6:
   \   000000D0   0630A0E1           MOV      R3,R6
   \   000000D4   0020A0E3           MOV      R2,#+0
   \   000000D8   861F80E2           ADD      R1,R0,#+536
   \                     ??GetStringValue_16:
   \   000000DC   0400A0E1           MOV      R0,R4
   \   000000E0   ........           _BLF     ??assign,??assign??rA
   \   000000E4   B60000EA           B        ??GetStringValue_17
   1450                  break;
   1451              case SVT_TASK_NAME:
   1452                  MyString = TaskName[Index];
   \                     ??GetStringValue_5:
   \   000000E8   0630A0E1           MOV      R3,R6
   \   000000EC   0020A0E3           MOV      R2,#+0
   \   000000F0   5C10A0E3           MOV      R1,#+92
   \   000000F4   401E81E3           ORR      R1,R1,#0x400
   \   000000F8   1C60A0E3           MOV      R6,#+28
   \   000000FC   960E20E0           MLA      R0,R6,LR,R0
   \   00000100   001081E0           ADD      R1,R1,R0
   \   00000104   F4FFFFEA           B        ??GetStringValue_16
   1453                  break;
   1454              case SVT_UNIT_PROGRAM_VERSION:
   1455                  MyString = MyString.sprintf("%d.%d.%d.%d", ActualProgramVersion.ProdNo, ActualProgramVersion.PacketFormat, ActualProgramVersion.NewFunctions, ActualProgramVersion.Build);
   \                     ??GetStringValue_7:
   \   00000108   0500D7E5           LDRB     R0,[R7, #+5]
   \   0000010C   142082E2           ADD      R2,R2,#+20
   \   00000110   01002DE9           PUSH     {R0}
   \   00000114   0400D7E5           LDRB     R0,[R7, #+4]
   \   00000118   01002DE9           PUSH     {R0}
   \   0000011C   0300D7E5           LDRB     R0,[R7, #+3]
   \   00000120   01002DE9           PUSH     {R0}
   \   00000124   0230D7E5           LDRB     R3,[R7, #+2]
   \   00000128   78108DE2           ADD      R1,SP,#+120
   \   0000012C   0400A0E1           MOV      R0,R4
   \   00000130   ........           _BLF     ??sprintf,??sprintf??rA
   \   00000134   0630A0E1           MOV      R3,R6
   \   00000138   0020A0E3           MOV      R2,#+0
   \   0000013C   78108DE2           ADD      R1,SP,#+120
   \   00000140   0400A0E1           MOV      R0,R4
   \   00000144   ........           _BLF     ??assign,??assign??rA
   \   00000148   0520A0E1           MOV      R2,R5
   \   0000014C   0110A0E3           MOV      R1,#+1
   \   00000150   78008DE2           ADD      R0,SP,#+120
   \                     ??GetStringValue_18:
   \   00000154   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000158   0CD08DE2           ADD      SP,SP,#+12
   \   0000015C   980000EA           B        ??GetStringValue_17
   1456                  break;
   1457              case SVT_UNIT_BOOTLOADER_VERSION:
   1458                  MyString = MyString.sprintf("%d.%d.%d.%d", ActualBootVersion.ProdNo, ActualBootVersion.PacketFormat, ActualBootVersion.NewFunctions, ActualBootVersion.Build);
   \                     ??GetStringValue_8:
   \   00000160   0900D7E5           LDRB     R0,[R7, #+9]
   \   00000164   142082E2           ADD      R2,R2,#+20
   \   00000168   01002DE9           PUSH     {R0}
   \   0000016C   0800D7E5           LDRB     R0,[R7, #+8]
   \   00000170   01002DE9           PUSH     {R0}
   \   00000174   0700D7E5           LDRB     R0,[R7, #+7]
   \   00000178   01002DE9           PUSH     {R0}
   \   0000017C   0630D7E5           LDRB     R3,[R7, #+6]
   \   00000180   94108DE2           ADD      R1,SP,#+148
   \   00000184   0400A0E1           MOV      R0,R4
   \   00000188   ........           _BLF     ??sprintf,??sprintf??rA
   \   0000018C   0630A0E1           MOV      R3,R6
   \   00000190   0020A0E3           MOV      R2,#+0
   \   00000194   94108DE2           ADD      R1,SP,#+148
   \   00000198   0400A0E1           MOV      R0,R4
   \   0000019C   ........           _BLF     ??assign,??assign??rA
   \   000001A0   0520A0E1           MOV      R2,R5
   \   000001A4   0110A0E3           MOV      R1,#+1
   \   000001A8   94008DE2           ADD      R0,SP,#+148
   \   000001AC   E8FFFFEA           B        ??GetStringValue_18
   1459                  break;
   1460              case SVT_DATA_VERSION:
   1461                  {
   1462                      char Buf[BUF_SIZE];
   1463                      sprintf(Buf, "%i", ActualDataVersion);
   \                     ??GetStringValue_4:
   \   000001B0   B020D7E1           LDRH     R2,[R7, #+0]
   \   000001B4   ........           ADR      R1,??Subroutine52_0  ;; "%i"
   \   000001B8   1C008DE2           ADD      R0,SP,#+28
   \   000001BC   ........           _BLF     sprintf,??sprintf??rA_1
   1464                      MyString = Buf;
   \   000001C0   1C108DE2           ADD      R1,SP,#+28
   \   000001C4   0D00A0E1           MOV      R0,SP
   \   000001C8   ........           _BLF     ??AnsiString_1,??AnsiString??rA_1
   \   000001CC   0630A0E1           MOV      R3,R6
   \   000001D0   0020A0E3           MOV      R2,#+0
   \   000001D4   0010A0E1           MOV      R1,R0
   \                     ??GetStringValue_19:
   \   000001D8   0400A0E1           MOV      R0,R4
   \   000001DC   ........           _BLF     ??assign,??assign??rA
   \   000001E0   0020A0E3           MOV      R2,#+0
   \   000001E4   0110A0E3           MOV      R1,#+1
   \   000001E8   0D00A0E1           MOV      R0,SP
   \                     ??GetStringValue_20:
   \   000001EC   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000001F0   730000EA           B        ??GetStringValue_17
   1465                  }
   1466                  break;
   1467              case SVT_DEVICE:
   1468                  {
   1469                      int MyWord;
   1470                      switch (Channels[Index]->Device) {
   \                     ??GetStringValue_9:
   \   000001F4   680393E5           LDR      R0,[R3, #+872]
   \   000001F8   A80090E5           LDR      R0,[R0, #+168]
   \   000001FC   610040E2           SUB      R0,R0,#+97
   \   00000200   7C0D40E2           SUB      R0,R0,#+7936
   \   00000204   130050E3           CMP      R0,#+19
   \   00000208   1A00008A           BHI      ??GetStringValue_21
   \   0000020C   012F8FE2           ADR      R2,??GetStringValue_1
   \   00000210   0020D2E7           LDRB     R2,[R2, R0]
   \   00000214   02F18FE0           ADD      PC,PC,R2, LSL #+2
   \                     ??GetStringValue_1:
   \   00000218   0406080A           DC8      +4,+6,+8,+10
   \   0000021C   0C0E1012           DC8      +12,+14,+16,+18
   \   00000220   12171212           DC8      +18,+23,+18,+18
   \   00000224   12121212           DC8      +18,+18,+18,+18
   \   00000228   12141612           DC8      +18,+20,+22,+18
   1471                      case C_UART_DEVICE_TDU                  :
   1472                          MyWord = L_WORD627;
   \                     ??GetStringValue_22:
   \   0000022C   8E1081E2           ADD      R1,R1,#+142
   \   00000230   100000EA           B        ??GetStringValue_21
   1473                          break;
   1474                      case C_UART_DEVICE_PC                   :
   1475                          MyWord = L_WORD628;
   \                     ??GetStringValue_23:
   \   00000234   9D1FA0E3           MOV      R1,#+628
   \   00000238   0E0000EA           B        ??GetStringValue_21
   1476                          break;
   1477                      case C_UART_DEVICE_TCU                  :
   1478                          MyWord = L_WORD629;
   \                     ??GetStringValue_24:
   \   0000023C   901081E2           ADD      R1,R1,#+144
   \   00000240   0C0000EA           B        ??GetStringValue_21
   1479                          break;
   1480                      case C_UART_DEVICE_ANPRO3               :
   1481                          MyWord = L_WORD630;
   \                     ??GetStringValue_25:
   \   00000244   911081E2           ADD      R1,R1,#+145
   \   00000248   0A0000EA           B        ??GetStringValue_21
   1482                          break;
   1483                      case C_UART_DEVICE_ANPRO10              :
   1484                          MyWord = L_WORD631;
   \                     ??GetStringValue_26:
   \   0000024C   921081E2           ADD      R1,R1,#+146
   \   00000250   080000EA           B        ??GetStringValue_21
   1485                          break;
   1486                      case C_UART_DEVICE_ZB                   :
   1487                          MyWord = L_WORD632;
   \                     ??GetStringValue_27:
   \   00000254   9E1FA0E3           MOV      R1,#+632
   \   00000258   060000EA           B        ??GetStringValue_21
   1488                          break;
   1489                      case C_UART_DEVICE_ZB_RED               :
   1490                          MyWord = L_WORD633;
   \                     ??GetStringValue_28:
   \   0000025C   941081E2           ADD      R1,R1,#+148
   \   00000260   040000EA           B        ??GetStringValue_21
   1491                          break;
   1492                      case C_UART_DEVICE_MODBUS_SLAVE         :
   1493                      case C_UART_DEVICE_MODBUS_SLAVE_INV     :
   1494                      case C_UART_DEVICE_MODBUS_SLAVE_TCP     :
   1495                      case C_UART_DEVICE_MODBUS_MASTER        :
   1496                      case C_UART_DEVICE_MODBUS_MASTER_INV    :
   1497                      case C_UART_DEVICE_MODICON_MASTER_TCP   :
   1498                      case C_UART_DEVICE_MODICON_SLAVE_TCP    :
   1499                      case C_UART_DEVICE_MODICON_MASTER       :
   1500                      case C_UART_DEVICE_MODICON_SLAVE        :
   1501                          MyWord = L_WORD489;
   \                     ??GetStringValue_29:
   \   00000264   041081E2           ADD      R1,R1,#+4
   \   00000268   020000EA           B        ??GetStringValue_21
   1502                          break;
   1503                      case C_UART_DEVICE_TPC                  :
   1504                          MyWord = L_WORD635;
   \                     ??GetStringValue_30:
   \   0000026C   961081E2           ADD      R1,R1,#+150
   \   00000270   000000EA           B        ??GetStringValue_21
   1505                          break;
   1506                      case C_UART_DEVICE_PRINTER              :
   1507                          MyWord = L_WORD636;
   \                     ??GetStringValue_31:
   \   00000274   9F1FA0E3           MOV      R1,#+636
   1508                          break;
   1509                      case C_UART_DEVICE_SAAB                 :
   1510                          MyWord = L_WORD489;
   1511                          break;
   1512                      default:
   1513                          MyWord = L_WORD485;
   1514                          break;
   1515                      }
   1516                      MyString = FindDictionaryWord(MyWord);
   \                     ??GetStringValue_21:
   \   00000278   0D00A0E1           MOV      R0,SP
   \   0000027C   ........           _BLF     ??FindDictionaryWord,??FindDictionaryWord??rA
   \   00000280   0630A0E1           MOV      R3,R6
   \   00000284   0020A0E3           MOV      R2,#+0
   \   00000288   0D10A0E1           MOV      R1,SP
   \   0000028C   D1FFFFEA           B        ??GetStringValue_19
   1517                  }
   1518                  break;
   1519              case SVT_PROTOCOL:
   1520                  {
   1521                      int MyWord;
   1522                      switch (Channels[Index]->SWProtocol) {
   \                     ??GetStringValue_10:
   \   00000290   680393E5           LDR      R0,[R3, #+872]
   \   00000294   A40090E5           LDR      R0,[R0, #+164]
   \   00000298   550040E2           SUB      R0,R0,#+85
   \   0000029C   7C0D40E2           SUB      R0,R0,#+7936
   \   000002A0   050050E3           CMP      R0,#+5
   \   000002A4   0F00008A           BHI      ??GetStringValue_32
   \   000002A8   012F8FE2           ADR      R2,??GetStringValue_2
   \   000002AC   0020D2E7           LDRB     R2,[R2, R0]
   \   000002B0   02F18FE0           ADD      PC,PC,R2, LSL #+2
   \                     ??GetStringValue_2:
   \   000002B4   01030507           DC8      +1,+3,+5,+7
   \   000002B8   090B0000           DC8      +9,+11,+0,+0
   1523                      case C_UART_SWPRO_ANPRO1  :
   1524                          MyWord = L_WORD637; break;
   \                     ??GetStringValue_33:
   \   000002BC   981081E2           ADD      R1,R1,#+152
   \   000002C0   080000EA           B        ??GetStringValue_32
   1525                      case C_UART_SWPRO_ANPRO3  :
   1526                          MyWord = L_WORD638; break;
   \                     ??GetStringValue_34:
   \   000002C4   991081E2           ADD      R1,R1,#+153
   \   000002C8   060000EA           B        ??GetStringValue_32
   1527                      case C_UART_SWPRO_ANPRO10 :
   1528                          MyWord = L_WORD639; break;
   \                     ??GetStringValue_35:
   \   000002CC   9A1081E2           ADD      R1,R1,#+154
   \   000002D0   040000EA           B        ??GetStringValue_32
   1529                      case C_UART_SWPRO_MODBUS  :
   1530                          MyWord = L_WORD640; break;
   \                     ??GetStringValue_36:
   \   000002D4   A01FA0E3           MOV      R1,#+640
   \   000002D8   020000EA           B        ??GetStringValue_32
   1531                      case C_UART_SWPRO_PRINTER :
   1532                          MyWord = L_WORD641; break;
   \                     ??GetStringValue_37:
   \   000002DC   9C1081E2           ADD      R1,R1,#+156
   \   000002E0   000000EA           B        ??GetStringValue_32
   1533                      case C_UART_SWPRO_SAAB    :
   1534                          MyWord = L_WORD869; break;
   \                     ??GetStringValue_38:
   \   000002E4   601F81E2           ADD      R1,R1,#+384
   1535                      default:
   1536                          MyWord = L_WORD485; break;
   1537                      }
   1538                      MyString = FindDictionaryWord(MyWord); break;
   \                     ??GetStringValue_32:
   \   000002E8   0D00A0E1           MOV      R0,SP
   \   000002EC   ........           _BLF     ??FindDictionaryWord,??FindDictionaryWord??rA
   \   000002F0   0630A0E1           MOV      R3,R6
   \   000002F4   0020A0E3           MOV      R2,#+0
   \   000002F8   0D10A0E1           MOV      R1,SP
   \   000002FC   0400A0E1           MOV      R0,R4
   \   00000300   ........           _BLF     ??assign,??assign??rA
   \   00000304   0520A0E1           MOV      R2,R5
   \   00000308   0110A0E3           MOV      R1,#+1
   \   0000030C   0D00A0E1           MOV      R0,SP
   \   00000310   B5FFFFEA           B        ??GetStringValue_20
   1539                  }
   1540              case SVT_RXERR_MSG  :
   1541                  {
   1542                      int MyWord;
   1543                      switch (RxErrMsg) {
   \                     ??GetStringValue_12:
   \   00000314   3C0298E5           LDR      R0,[R8, #+572]
   \   00000318   010050E2           SUBS     R0,R0,#+1
   \   0000031C   0200000A           BEQ      ??GetStringValue_39
   \   00000320   010050E2           SUBS     R0,R0,#+1
   \   00000324   A91FA003           MOVEQ    R1,#+676
   \   00000328   D2FFFFEA           B        ??GetStringValue_21
   1544                      case E_UNKNOWN_COMMAND:
   1545                          MyWord = L_WORD675; break;
   \                     ??GetStringValue_39:
   \   0000032C   BE1081E2           ADD      R1,R1,#+190
   1546                      case E_UNKNOWN_OBJECT :
   1547                          MyWord = L_WORD676; break;
   1548                      default:
   1549                          MyWord = L_WORD485; break;
   1550                      }
   1551                      MyString = FindDictionaryWord(MyWord);
   \   00000330   D0FFFFEA           B        ??GetStringValue_21
   1552                  }
   1553                  break;
   1554              case SVT_RXERR_ID   :
   1555                  MyString.sprintf("0x%0x", RxErrId);
   \                     ??GetStringValue_11:
   \   00000334   343298E5           LDR      R3,[R8, #+564]
   \   00000338   0C2082E2           ADD      R2,R2,#+12
   \   0000033C   A4108DE2           ADD      R1,SP,#+164
   \   00000340   0400A0E1           MOV      R0,R4
   \   00000344   ........           _BLF     ??sprintf,??sprintf??rA
   \   00000348   0020A0E3           MOV      R2,#+0
   \   0000034C   0110A0E3           MOV      R1,#+1
   \   00000350   A4008DE2           ADD      R0,SP,#+164
   \   00000354   A4FFFFEA           B        ??GetStringValue_20
   1556                  break;
   1557              case SVT_RXERR_TIME :
   1558                  MyString = "00:00:00";
   \                     ??GetStringValue_13:
   \   00000358   0210A0E1           MOV      R1,R2
   \   0000035C   C0008DE2           ADD      R0,SP,#+192
   \   00000360   ........           _BLF     ??AnsiString_1,??AnsiString??rA_1
   \   00000364   0010A0E1           MOV      R1,R0
   \   00000368   0630A0E1           MOV      R3,R6
   \   0000036C   0020A0E3           MOV      R2,#+0
   \   00000370   0400A0E1           MOV      R0,R4
   \   00000374   ........           _BLF     ??assign,??assign??rA
   \   00000378   0520A0E1           MOV      R2,R5
   \   0000037C   0110A0E3           MOV      R1,#+1
   \   00000380   C0008DE2           ADD      R0,SP,#+192
   \   00000384   98FFFFEA           B        ??GetStringValue_20
   1559                  break;
   1560              case SVT_ERROR_ADDRESS :
   1561                  MyString.sprintf("0x%0x", LastErrAddr);
   \                     ??GetStringValue_14:
   \   00000388   003098E5           LDR      R3,[R8, #+0]
   \   0000038C   0C2082E2           ADD      R2,R2,#+12
   \   00000390   DC108DE2           ADD      R1,SP,#+220
   \   00000394   0400A0E1           MOV      R0,R4
   \   00000398   ........           _BLF     ??sprintf,??sprintf??rA
   \   0000039C   0020A0E3           MOV      R2,#+0
   \   000003A0   0110A0E3           MOV      R1,#+1
   \   000003A4   DC008DE2           ADD      R0,SP,#+220
   \   000003A8   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000003AC   040000EA           B        ??GetStringValue_17
   1562                  break;
   1563              default:
   1564                  Status = PRogramObjectBase::GetStringValue(ValueId, Index, MyString);
   \                     ??GetStringValue_15:
   \   000003B0   0430A0E1           MOV      R3,R4
   \   000003B4   0E20A0E1           MOV      R2,LR
   \   000003B8   0C10A0E1           MOV      R1,R12
   \   000003BC   ........           _BLF     ??GetStringValue_3,??GetStringValue??rA
   \   000003C0   0050A0E1           MOV      R5,R0
   1565                  break;
   1566              }
   1567              return (Status);
   \                     ??GetStringValue_17:
   \   000003C4   0500A0E1           MOV      R0,R5
   \   000003C8   F8D08DE2           ADD      SP,SP,#+248
   \   000003CC                      REQUIRE ?Subroutine52
   \   000003CC                      ;; // Fall through to label ?Subroutine52
   1568          }
   1569          

   \                                 In segment CODE, align 4, keep-with-next
   1570          int PROTanksystemUnit::PutValue(int ValueId, int Index, AnsiString NewValue, bool Local, int *UnitId) {
   \                     ??PutValue:
   \   00000000   F0432DE9           PUSH     {R4-R9,LR}
   \   00000004   3CD04DE2           SUB      SP,SP,#+60
   \   00000008   5870DDE5           LDRB     R7,[SP, #+88]
   \   0000000C   5C409DE5           LDR      R4,[SP, #+92]
   \   00000010   0080A0E1           MOV      R8,R0
   \   00000014   0150A0E1           MOV      R5,R1
   \   00000018   0260A0E1           MOV      R6,R2
   \   0000001C   0310A0E1           MOV      R1,R3
   1571              int Status = E_NO_ERR, ValUnitId = NO_UNIT;
   \   00000020   0020A0E3           MOV      R2,#+0
   \   00000024   00208DE5           STR      R2,[SP, #+0]
   1572              switch (ValueId) {
   \   00000028   580045E2           SUB      R0,R5,#+88
   \   0000002C   500E40E2           SUB      R0,R0,#+1280
   \   00000030   050050E3           CMP      R0,#+5
   \   00000034   1D00008A           BHI      ??PutValue_3
   \   00000038   012F8FE2           ADR      R2,??PutValue_1
   \   0000003C   0020D2E7           LDRB     R2,[R2, R0]
   \   00000040   02F18FE0           ADD      PC,PC,R2, LSL #+2
   \                     ??PutValue_1:
   \   00000044   01010101           DC8      +1,+1,+1,+1
   \   00000048   01010000           DC8      +1,+1,+0,+0
   1573              case SVT_ROLLING_PERIOD:
   1574              case SVT_ROLLING_FREQUENCY:
   1575              case SVT_LIST_MAX_P:
   1576              case SVT_LIST_MAX_S:
   1577              case SVT_LIST_BUF_MAX_P:
   1578              case SVT_LIST_BUF_MAX_S:
   1579                  if (PROInclinometer::PROInclinPtr) {
   \                     ??PutValue_4:
   \   0000004C   ........           LDR      R8,??DataTable75  ;; ??PROInclinPtr
   \   00000050   000098E5           LDR      R0,[R8, #+0]
   \   00000054   000050E3           CMP      R0,#+0
   \   00000058   1200000A           BEQ      ??PutValue_5
   1580                      Status = PROInclinometer::PROInclinPtr->PutValue(ValueId, Index, NewValue, Local, &ValUnitId);
   \   0000005C   A40090E5           LDR      R0,[R0, #+164]
   \   00000060   309080E2           ADD      R9,R0,#+48
   \   00000064   04008DE2           ADD      R0,SP,#+4
   \   00000068   ........           _BLF     ??string,??string??rA
   \   0000006C   0D00A0E1           MOV      R0,SP
   \   00000070   01002DE9           PUSH     {R0}
   \   00000074   80002DE9           PUSH     {R7}
   \   00000078   000098E5           LDR      R0,[R8, #+0]
   \   0000007C   0510A0E1           MOV      R1,R5
   \   00000080   005099E5           LDR      R5,[R9, #+0]
   \   00000084   0C308DE2           ADD      R3,SP,#+12
   \   00000088   0620A0E1           MOV      R2,R6
   \   0000008C   0FE0A0E1           MOV      LR,PC
   \   00000090   15FF2FE1           BX       R5
   \   00000094   0050A0E1           MOV      R5,R0
   \   00000098   0020A0E3           MOV      R2,#+0
   \   0000009C   0110A0E3           MOV      R1,#+1
   \   000000A0   0C008DE2           ADD      R0,SP,#+12
   \   000000A4   0F0000EA           B        ??PutValue_6
   1581                  } else {
   1582                      Status = E_INVALID_POINTER;
   \                     ??PutValue_5:
   \   000000A8   0B50A0E3           MOV      R5,#+11
   \   000000AC   0F0000EA           B        ??PutValue_7
   1583                  }
   1584                  break;
   1585              default:
   1586                  Status = PRogramObjectBase::PutValue(ValueId, Index, NewValue, Local, &ValUnitId);
   \                     ??PutValue_3:
   \   000000B0   20008DE2           ADD      R0,SP,#+32
   \   000000B4   ........           _BLF     ??string,??string??rA
   \   000000B8   0D00A0E1           MOV      R0,SP
   \   000000BC   01002DE9           PUSH     {R0}
   \   000000C0   80002DE9           PUSH     {R7}
   \   000000C4   28308DE2           ADD      R3,SP,#+40
   \   000000C8   0620A0E1           MOV      R2,R6
   \   000000CC   0510A0E1           MOV      R1,R5
   \   000000D0   0800A0E1           MOV      R0,R8
   \   000000D4   ........           _BLF     ??PutValue_2,??PutValue??rA
   \   000000D8   0050A0E1           MOV      R5,R0
   \   000000DC   0020A0E3           MOV      R2,#+0
   \   000000E0   0110A0E3           MOV      R1,#+1
   \   000000E4   28008DE2           ADD      R0,SP,#+40
   \                     ??PutValue_6:
   \   000000E8   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000000EC   08D08DE2           ADD      SP,SP,#+8
   1587                  break;
   1588              }
   1589              if (UnitId) {
   \                     ??PutValue_7:
   \   000000F0   000054E3           CMP      R4,#+0
   1590                  *UnitId = ValUnitId;
   \   000000F4   00009D15           LDRNE    R0,[SP, #+0]
   \   000000F8   00008415           STRNE    R0,[R4, #+0]
   1591              }
   1592              return (Status);
   \   000000FC   0500A0E1           MOV      R0,R5
   \   00000100   3CD08DE2           ADD      SP,SP,#+60
   \   00000104   ........           B        ?Subroutine50
   1593          }
   1594          

   \                                 In segment CODE, align 4, keep-with-next
   1595          int PROTanksystemUnit::PutFloatValue(int ValueId, float NewValue) {
   \                     ??PutFloatValue:
   \   00000000   00402DE9           PUSH     {LR}
   1596              int Status = E_NO_ERR;
   1597              //switch ( ValueId ) {
   1598              //   default:
   1599              Status = PRogramObjectBase::PutFloatValue(ValueId, NewValue);
   1600              //     break;
   1601              //}
   1602              return (Status);
   \   00000004   ........           _BLF     ??PutFloatValue_1,??PutFloatValue??rA
   \   00000008                      REQUIRE ?Subroutine48
   \   00000008                      ;; // Fall through to label ?Subroutine48
   1603          }

   \                                 In segment CODE, align 4, keep-with-next
   \                     ?Subroutine48:
   \   00000000   0040BDE8           POP      {LR}
   \   00000004   1EFF2FE1           BX       LR               ;; return
   1604          

   \                                 In segment CODE, align 4, keep-with-next
   1605          void PROTanksystemUnit::FilterValue(float *OldVal, float NewVal, float FilterDegree) {
   \                     ??FilterValue:
   \   00000000   F0412DE9           PUSH     {R4-R8,LR}
   1606              if (NoADFilter) {
   \   00000004   7801D0E5           LDRB     R0,[R0, #+376]
   \   00000008   0170A0E1           MOV      R7,R1
   \   0000000C   006097E5           LDR      R6,[R7, #+0]
   \   00000010   0280A0E1           MOV      R8,R2
   \   00000014   000050E3           CMP      R0,#+0
   \   00000018   1700001A           BNE      ??FilterValue_1
   1607                  *OldVal = NewVal;
   1608              } else {
   1609                  *OldVal += (NewVal - *OldVal) / (FilterDegree + 1.0);
   \   0000001C   0300A0E1           MOV      R0,R3
   \   00000020   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   00000024   0020A0E3           MOV      R2,#+0
   \   00000028   C035A0E3           MOV      R3,#+805306368
   \   0000002C   FF3683E3           ORR      R3,R3,#0xFF00000
   \   00000030   ........           _BLF     __dAdd,??__dAdd??rA
   \   00000034   0040A0E1           MOV      R4,R0
   \   00000038   0150A0E1           MOV      R5,R1
   \   0000003C   0800A0E1           MOV      R0,R8
   \   00000040   0610A0E1           MOV      R1,R6
   \   00000044   ........           _BLF     __fSub,??__fSub??rA
   \   00000048   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   0000004C   0420A0E1           MOV      R2,R4
   \   00000050   0530A0E1           MOV      R3,R5
   \   00000054   ........           _BLF     __dDiv,??__dDiv??rA
   \   00000058   0040A0E1           MOV      R4,R0
   \   0000005C   0150A0E1           MOV      R5,R1
   \   00000060   0600A0E1           MOV      R0,R6
   \   00000064   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   00000068   0420A0E1           MOV      R2,R4
   \   0000006C   0530A0E1           MOV      R3,R5
   \   00000070   ........           _BLF     __dAdd,??__dAdd??rA
   \   00000074   ........           _BLF     __doubleToFloat,??__doubleToFloat??rA
   \   00000078   0080A0E1           MOV      R8,R0
   \                     ??FilterValue_1:
   \   0000007C   008087E5           STR      R8,[R7, #+0]
   1610              }
   1611          }
   \   00000080   ........           B        ?Subroutine53

   \                                 In segment CODE, align 4, keep-with-next
   \                     ?Subroutine53:
   \   00000000   F041BDE8           POP      {R4-R8,LR}
   \   00000004   1EFF2FE1           BX       LR               ;; return
   \                     ??Subroutine53_0:
   \   00000008   ........           DC32     ??TryToRetreiveDataCnt
   \   0000000C   ........           DC32     SaveConfigTaskHandle
   \   00000010   ........           DC32     `?<Constant "TDUConfig">`

   \                                 In segment CODE, align 4, keep-with-next
   1612          void PROTanksystemUnit::Calculate(void) {
   \                     ??Calculate:
   \   00000000   7F4F2DE9           PUSH     {R0-R6,R8-R11,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   1613          #ifdef S2TXU
   1614              // Must be corrected for Unit type, revision EHSMARK
   1615              U16  tmpADData[8];
   1616          
   1617          
   1618              for (int i = 0; i < 8; i++) {
   \   00000008   0000A0E3           MOV      R0,#+0
   1619                  tmpADData[i] = TXUADData[i];
   \                     ??Calculate_2:
   \   0000000C   BC279FE5           LDR      R2,??Calculate_3  ;; TXUADData
   \   00000010   0D10A0E1           MOV      R1,SP
   \   00000014   802082E0           ADD      R2,R2,R0, LSL #+1
   \   00000018   B020D2E1           LDRH     R2,[R2, #+0]
   \   0000001C   801081E0           ADD      R1,R1,R0, LSL #+1
   1620              }
   \   00000020   010080E2           ADD      R0,R0,#+1
   \   00000024   B020C1E1           STRH     R2,[R1, #+0]
   \   00000028   080050E3           CMP      R0,#+8
   \   0000002C   F6FFFFBA           BLT      ??Calculate_2
   1621              OS_IncDI();
   \   00000030   ........           _BLF     OS_DisableInt,??OS_DisableInt??rA
   \   00000034   98079FE5           LDR      R0,??Calculate_3+0x4  ;; OS_Counters
   1622              if (rADCCON & 0x8000) {
   \   00000038   5824A0E3           MOV      R2,#+1476395008
   \   0000003C   0110D0E5           LDRB     R1,[R0, #+1]
   \   00000040   011081E2           ADD      R1,R1,#+1
   \   00000044   0110C0E5           STRB     R1,[R0, #+1]
   \   00000048   002092E5           LDR      R2,[R2, #+0]
   \   0000004C   800C12E3           TST      R2,#0x8000
   1623                  rADCCON |= 0x1;     // Start Auto conversion
   \   00000050   5824A013           MOVNE    R2,#+1476395008
   \   00000054   00309215           LDRNE    R3,[R2, #+0]
   \   00000058   01308313           ORRNE    R3,R3,#0x1
   \   0000005C   00308215           STRNE    R3,[R2, #+0]
   1624              }
   1625              OS_DecRI();
   \   00000060   011051E2           SUBS     R1,R1,#+1
   \   00000064   0110C0E5           STRB     R1,[R0, #+1]
   \   00000068   0000001A           BNE      ??Calculate_4
   \   0000006C   ........           _BLF     OS_EnableInt,??OS_EnableInt??rA
   1626              switch (GlobalDeviceHWId) {
   \                     ??Calculate_4:
   \   00000070   ........           LDR      R0,??DataTable76  ;; GlobalDeviceHWId
   \   00000074   63BFA0E3           MOV      R11,#+396
   \   00000078   F000D0E1           LDRSH    R0,[R0, #+0]
   \   0000007C   62AFA0E3           MOV      R10,#+392
   \   00000080   619FA0E3           MOV      R9,#+388
   \   00000084   605FA0E3           MOV      R5,#+384
   \   00000088   4064A0E3           MOV      R6,#+1073741824
   \   0000008C   A06886E3           ORR      R6,R6,#0xA00000
   \   00000090   5F8FA0E3           MOV      R8,#+380
   \   00000094   030050E3           CMP      R0,#+3
   \   00000098   9901008A           BHI      ??Calculate_5
   \   0000009C   021F8FE2           ADR      R1,??Calculate_1
   \   000000A0   8000A0E1           MOV      R0,R0, LSL #+1
   \   000000A4   B01091E1           LDRH     R1,[R1, R0]
   \   000000A8   01F18FE0           ADD      PC,PC,R1, LSL #+2
   \                     ??Calculate_1:
   \   000000AC   5900DC000100       DC16     +89,+220,+1,+1
   \              0100        
   1627              case TDU_R1:
   1628              case TDU_R2:
   1629                  FilterValue(&ADResults[1], (float)tmpADData[1] * 3.3 / 1024.0 * 11.0);     // 24V DC internal
   \                     ??Calculate_6:
   \   000000B4   B200DDE1           LDRH     R0,[SP, #+2]
   \   000000B8   ........           _BLF     __ulongToFloat,??__ulongToFloat??rA
   \   000000BC   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   000000C0   0020A0E1           MOV      R2,R0
   \   000000C4   0C079FE5           LDR      R0,??Calculate_3+0x8  ;; 0x66666666
   \   000000C8   0130A0E1           MOV      R3,R1
   \   000000CC   08179FE5           LDR      R1,??Calculate_3+0xC  ;; 0x400a6666
   \   000000D0   ........           _BLF     __dMul,??__dMul??rA
   \   000000D4   0020A0E3           MOV      R2,#+0
   \   000000D8   403946E2           SUB      R3,R6,#+1048576
   \   000000DC   ........           _BLF     __dDiv,??__dDiv??rA
   \   000000E0   0020A0E1           MOV      R2,R0
   \   000000E4   0130A0E1           MOV      R3,R1
   \   000000E8   0000A0E3           MOV      R0,#+0
   \   000000EC   7A1846E2           SUB      R1,R6,#+7995392
   \   000000F0   ........           _BLF     __dMul,??__dMul??rA
   \   000000F4   ........           _BLF     __doubleToFloat,??__doubleToFloat??rA
   \   000000F8   0020A0E1           MOV      R2,R0
   \   000000FC   0630A0E1           MOV      R3,R6
   \   00000100   041085E0           ADD      R1,R5,R4
   \   00000104   0400A0E1           MOV      R0,R4
   \   00000108   ........           BL       ??FilterValue
   1630                  FilterValue(&ADResults[2], (float)tmpADData[2] * 3.3 / 1024.0 * 12.2 / 2.2);     // 12V DC   external
   \   0000010C   B400DDE1           LDRH     R0,[SP, #+4]
   \   00000110   ........           _BLF     __ulongToFloat,??__ulongToFloat??rA
   \   00000114   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   00000118   0020A0E1           MOV      R2,R0
   \   0000011C   B4069FE5           LDR      R0,??Calculate_3+0x8  ;; 0x66666666
   \   00000120   0130A0E1           MOV      R3,R1
   \   00000124   B0169FE5           LDR      R1,??Calculate_3+0xC  ;; 0x400a6666
   \   00000128   ........           _BLF     __dMul,??__dMul??rA
   \   0000012C   0020A0E3           MOV      R2,#+0
   \   00000130   403946E2           SUB      R3,R6,#+1048576
   \   00000134   ........           _BLF     __dDiv,??__dDiv??rA
   \   00000138   0020A0E1           MOV      R2,R0
   \   0000013C   94069FE5           LDR      R0,??Calculate_3+0x8  ;; 0x66666666
   \   00000140   0130A0E1           MOV      R3,R1
   \   00000144   94169FE5           LDR      R1,??Calculate_3+0x10  ;; 0x40286666
   \   00000148   ........           _BLF     __dMul,??__dMul??rA
   \   0000014C   90269FE5           LDR      R2,??Calculate_3+0x14  ;; 0xffffffff9999999a
   \   00000150   90369FE5           LDR      R3,??Calculate_3+0x18  ;; 0x40019999
   \   00000154   ........           _BLF     __dDiv,??__dDiv??rA
   \   00000158   ........           _BLF     __doubleToFloat,??__doubleToFloat??rA
   \   0000015C   0020A0E1           MOV      R2,R0
   \   00000160   0630A0E1           MOV      R3,R6
   \   00000164   041089E0           ADD      R1,R9,R4
   \   00000168   0400A0E1           MOV      R0,R4
   \   0000016C   ........           BL       ??FilterValue
   1631                  FilterValue(&ADResults[3], (float)tmpADData[3] * 3.3 / 1024.0 * 11.0 / 10.0);    // 3.3 V DC
   \   00000170   B600DDE1           LDRH     R0,[SP, #+6]
   \   00000174   ........           _BLF     __ulongToFloat,??__ulongToFloat??rA
   \   00000178   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   0000017C   0020A0E1           MOV      R2,R0
   \   00000180   50069FE5           LDR      R0,??Calculate_3+0x8  ;; 0x66666666
   \   00000184   0130A0E1           MOV      R3,R1
   \   00000188   4C169FE5           LDR      R1,??Calculate_3+0xC  ;; 0x400a6666
   \   0000018C   ........           _BLF     __dMul,??__dMul??rA
   \   00000190   0020A0E3           MOV      R2,#+0
   \   00000194   403946E2           SUB      R3,R6,#+1048576
   \   00000198   ........           _BLF     __dDiv,??__dDiv??rA
   \   0000019C   0020A0E1           MOV      R2,R0
   \   000001A0   0130A0E1           MOV      R3,R1
   \   000001A4   0000A0E3           MOV      R0,#+0
   \   000001A8   7A1846E2           SUB      R1,R6,#+7995392
   \   000001AC   ........           _BLF     __dMul,??__dMul??rA
   \   000001B0   0020A0E3           MOV      R2,#+0
   \   000001B4   7C3846E2           SUB      R3,R6,#+8126464
   \   000001B8   ........           _BLF     __dDiv,??__dDiv??rA
   \   000001BC   ........           _BLF     __doubleToFloat,??__doubleToFloat??rA
   \   000001C0   0020A0E1           MOV      R2,R0
   \   000001C4   0630A0E1           MOV      R3,R6
   \   000001C8   04108AE0           ADD      R1,R10,R4
   \   000001CC   0400A0E1           MOV      R0,R4
   \   000001D0   ........           BL       ??FilterValue
   1632                  FilterValue(&ADResults[4], (float)tmpADData[4] * 3.3 / 1024.0);              // 1.8 V DC
   \   000001D4   B800DDE1           LDRH     R0,[SP, #+8]
   \   000001D8   ........           _BLF     __ulongToFloat,??__ulongToFloat??rA
   \   000001DC   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   000001E0   F0259FE5           LDR      R2,??Calculate_3+0x8  ;; 0x66666666
   \   000001E4   F0359FE5           LDR      R3,??Calculate_3+0xC  ;; 0x400a6666
   \   000001E8   ........           _BLF     __dMul,??__dMul??rA
   \   000001EC   0020A0E3           MOV      R2,#+0
   \   000001F0   403946E2           SUB      R3,R6,#+1048576
   \   000001F4   ........           _BLF     __dDiv,??__dDiv??rA
   \   000001F8   ........           _BLF     __doubleToFloat,??__doubleToFloat??rA
   \   000001FC   0020A0E1           MOV      R2,R0
   \   00000200   0630A0E1           MOV      R3,R6
   \   00000204   04108BE0           ADD      R1,R11,R4
   \   00000208   0400A0E1           MOV      R0,R4
   \   0000020C   ........           BL       ??FilterValue
   \   00000210   3B0100EA           B        ??Calculate_5
   1633                  break;
   1634              case TCU_R1:
   1635                  ADResults[0] = (float)tmpADData[0] * 3.3 / 1024.0 / 100.0;                            // 4~20 mA over 100 Ohm
   \                     ??Calculate_7:
   \   00000214   B000DDE1           LDRH     R0,[SP, #+0]
   \   00000218   ........           _BLF     __ulongToFloat,??__ulongToFloat??rA
   \   0000021C   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   00000220   0020A0E1           MOV      R2,R0
   \   00000224   AC059FE5           LDR      R0,??Calculate_3+0x8  ;; 0x66666666
   \   00000228   0130A0E1           MOV      R3,R1
   \   0000022C   A8159FE5           LDR      R1,??Calculate_3+0xC  ;; 0x400a6666
   \   00000230   ........           _BLF     __dMul,??__dMul??rA
   \   00000234   0020A0E3           MOV      R2,#+0
   \   00000238   403946E2           SUB      R3,R6,#+1048576
   \   0000023C   ........           _BLF     __dDiv,??__dDiv??rA
   \   00000240   0020A0E3           MOV      R2,#+0
   \   00000244   473846E2           SUB      R3,R6,#+4653056
   \   00000248   ........           _BLF     __dDiv,??__dDiv??rA
   \   0000024C   ........           _BLF     __doubleToFloat,??__doubleToFloat??rA
   \   00000250   040088E7           STR      R0,[R8, +R4]
   1636                  FilterValue(&ADResults[1], (float)tmpADData[1] * 3.3 / 1024.0 * 11.0);     // 24V DC internal
   \   00000254   B200DDE1           LDRH     R0,[SP, #+2]
   \   00000258   ........           _BLF     __ulongToFloat,??__ulongToFloat??rA
   \   0000025C   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   00000260   0020A0E1           MOV      R2,R0
   \   00000264   6C059FE5           LDR      R0,??Calculate_3+0x8  ;; 0x66666666
   \   00000268   0130A0E1           MOV      R3,R1
   \   0000026C   68159FE5           LDR      R1,??Calculate_3+0xC  ;; 0x400a6666
   \   00000270   ........           _BLF     __dMul,??__dMul??rA
   \   00000274   0020A0E3           MOV      R2,#+0
   \   00000278   403946E2           SUB      R3,R6,#+1048576
   \   0000027C   ........           _BLF     __dDiv,??__dDiv??rA
   \   00000280   0020A0E1           MOV      R2,R0
   \   00000284   0130A0E1           MOV      R3,R1
   \   00000288   0000A0E3           MOV      R0,#+0
   \   0000028C   7A1846E2           SUB      R1,R6,#+7995392
   \   00000290   ........           _BLF     __dMul,??__dMul??rA
   \   00000294   ........           _BLF     __doubleToFloat,??__doubleToFloat??rA
   \   00000298   0020A0E1           MOV      R2,R0
   \   0000029C   0630A0E1           MOV      R3,R6
   \   000002A0   041085E0           ADD      R1,R5,R4
   \   000002A4   0400A0E1           MOV      R0,R4
   \   000002A8   ........           BL       ??FilterValue
   1637                  FilterValue(&ADResults[2], (float)tmpADData[2] * 3.3 / 1024.0 * 11.0);     // 24V DC   external
   \   000002AC   B400DDE1           LDRH     R0,[SP, #+4]
   \   000002B0   ........           _BLF     __ulongToFloat,??__ulongToFloat??rA
   \   000002B4   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   000002B8   0020A0E1           MOV      R2,R0
   \   000002BC   14059FE5           LDR      R0,??Calculate_3+0x8  ;; 0x66666666
   \   000002C0   0130A0E1           MOV      R3,R1
   \   000002C4   10159FE5           LDR      R1,??Calculate_3+0xC  ;; 0x400a6666
   \   000002C8   ........           _BLF     __dMul,??__dMul??rA
   \   000002CC   0020A0E3           MOV      R2,#+0
   \   000002D0   403946E2           SUB      R3,R6,#+1048576
   \   000002D4   ........           _BLF     __dDiv,??__dDiv??rA
   \   000002D8   0020A0E1           MOV      R2,R0
   \   000002DC   0130A0E1           MOV      R3,R1
   \   000002E0   0000A0E3           MOV      R0,#+0
   \   000002E4   7A1846E2           SUB      R1,R6,#+7995392
   \   000002E8   ........           _BLF     __dMul,??__dMul??rA
   \   000002EC   ........           _BLF     __doubleToFloat,??__doubleToFloat??rA
   \   000002F0   0020A0E1           MOV      R2,R0
   \   000002F4   0630A0E1           MOV      R3,R6
   \   000002F8   041089E0           ADD      R1,R9,R4
   \   000002FC   0400A0E1           MOV      R0,R4
   \   00000300   ........           BL       ??FilterValue
   1638                  FilterValue(&ADResults[3], (float)tmpADData[3] * 3.3 / 1024.0 * 11.0 / 10);  // 3.3 V DC
   \   00000304   B600DDE1           LDRH     R0,[SP, #+6]
   \   00000308   ........           _BLF     __ulongToFloat,??__ulongToFloat??rA
   \   0000030C   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   00000310   0020A0E1           MOV      R2,R0
   \   00000314   BC049FE5           LDR      R0,??Calculate_3+0x8  ;; 0x66666666
   \   00000318   0130A0E1           MOV      R3,R1
   \   0000031C   B8149FE5           LDR      R1,??Calculate_3+0xC  ;; 0x400a6666
   \   00000320   ........           _BLF     __dMul,??__dMul??rA
   \   00000324   0020A0E3           MOV      R2,#+0
   \   00000328   403946E2           SUB      R3,R6,#+1048576
   \   0000032C   ........           _BLF     __dDiv,??__dDiv??rA
   \   00000330   0020A0E1           MOV      R2,R0
   \   00000334   0130A0E1           MOV      R3,R1
   \   00000338   0000A0E3           MOV      R0,#+0
   \   0000033C   7A1846E2           SUB      R1,R6,#+7995392
   \   00000340   ........           _BLF     __dMul,??__dMul??rA
   \   00000344   0020A0E3           MOV      R2,#+0
   \   00000348   7C3846E2           SUB      R3,R6,#+8126464
   \   0000034C   ........           _BLF     __dDiv,??__dDiv??rA
   \   00000350   ........           _BLF     __doubleToFloat,??__doubleToFloat??rA
   \   00000354   0020A0E1           MOV      R2,R0
   \   00000358   0630A0E1           MOV      R3,R6
   \   0000035C   04108AE0           ADD      R1,R10,R4
   \   00000360   0400A0E1           MOV      R0,R4
   \   00000364   ........           BL       ??FilterValue
   1639                  FilterValue(&ADResults[4], (float)tmpADData[4] * 3.3 / 1024.0);              // 1.8 V DC
   \   00000368   B800DDE1           LDRH     R0,[SP, #+8]
   \   0000036C   ........           _BLF     __ulongToFloat,??__ulongToFloat??rA
   \   00000370   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   00000374   0020A0E1           MOV      R2,R0
   \   00000378   58049FE5           LDR      R0,??Calculate_3+0x8  ;; 0x66666666
   \   0000037C   0130A0E1           MOV      R3,R1
   \   00000380   54149FE5           LDR      R1,??Calculate_3+0xC  ;; 0x400a6666
   \   00000384   ........           _BLF     __dMul,??__dMul??rA
   \   00000388   0020A0E3           MOV      R2,#+0
   \   0000038C   403946E2           SUB      R3,R6,#+1048576
   \   00000390   ........           _BLF     __dDiv,??__dDiv??rA
   \   00000394   ........           _BLF     __doubleToFloat,??__doubleToFloat??rA
   \   00000398   0020A0E1           MOV      R2,R0
   \   0000039C   0630A0E1           MOV      R3,R6
   \   000003A0   04108BE0           ADD      R1,R11,R4
   \   000003A4   0400A0E1           MOV      R0,R4
   \   000003A8   ........           BL       ??FilterValue
   1640                  AdjustVoltage(ADResults[1], 20);
   \   000003AC   041095E7           LDR      R1,[R5, +R4]
   \   000003B0   1420A0E3           MOV      R2,#+20
   \   000003B4   0400A0E1           MOV      R0,R4
   \   000003B8   ........           BL       ??AdjustVoltage
   1641                  if (AtmRefSensor)   AtmRefSensor->NewValue(ADResults[0]);
   \   000003BC   740194E5           LDR      R0,[R4, #+372]
   \   000003C0   000050E3           CMP      R0,#+0
   \   000003C4   0400000A           BEQ      ??Calculate_8
   \   000003C8   A42090E5           LDR      R2,[R0, #+164]
   \   000003CC   041098E7           LDR      R1,[R8, +R4]
   \   000003D0   682092E5           LDR      R2,[R2, #+104]
   \   000003D4   0FE0A0E1           MOV      LR,PC
   \   000003D8   12FF2FE1           BX       R2
   1642                  if (Internal24VSns) Internal24VSns->NewValue(ADResults[1]);
   \                     ??Calculate_8:
   \   000003DC   6C0294E5           LDR      R0,[R4, #+620]
   \   000003E0   000050E3           CMP      R0,#+0
   \   000003E4   0400000A           BEQ      ??Calculate_9
   \   000003E8   A42090E5           LDR      R2,[R0, #+164]
   \   000003EC   041095E7           LDR      R1,[R5, +R4]
   \   000003F0   682092E5           LDR      R2,[R2, #+104]
   \   000003F4   0FE0A0E1           MOV      LR,PC
   \   000003F8   12FF2FE1           BX       R2
   1643                  if (External24VSns) External24VSns->NewValue(ADResults[2]);
   \                     ??Calculate_9:
   \   000003FC   700294E5           LDR      R0,[R4, #+624]
   \   00000400   000050E3           CMP      R0,#+0
   \   00000404   BF00000A           BEQ      ??Calculate_10
   \   00000408   A42090E5           LDR      R2,[R0, #+164]
   \   0000040C   041099E7           LDR      R1,[R9, +R4]
   \   00000410   682092E5           LDR      R2,[R2, #+104]
   \   00000414   0FE0A0E1           MOV      LR,PC
   \   00000418   12FF2FE1           BX       R2
   \   0000041C   B80000EA           B        ??Calculate_5
   1644                  break;
   1645              case TCU_R2:
   1646                  ADResults[0] = (float)tmpADData[0] * 3.3 / 1024.0 / 250.0;                            // 4~20 mA over 250 Ohm
   \                     ??Calculate_11:
   \   00000420   B000DDE1           LDRH     R0,[SP, #+0]
   \   00000424   ........           _BLF     __ulongToFloat,??__ulongToFloat??rA
   \   00000428   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   0000042C   0020A0E1           MOV      R2,R0
   \   00000430   A0039FE5           LDR      R0,??Calculate_3+0x8  ;; 0x66666666
   \   00000434   0130A0E1           MOV      R3,R1
   \   00000438   9C139FE5           LDR      R1,??Calculate_3+0xC  ;; 0x400a6666
   \   0000043C   ........           _BLF     __dMul,??__dMul??rA
   \   00000440   0020A0E3           MOV      R2,#+0
   \   00000444   403946E2           SUB      R3,R6,#+1048576
   \   00000448   ........           _BLF     __dDiv,??__dDiv??rA
   \   0000044C   0020A0E3           MOV      R2,#+0
   \   00000450   C33946E2           SUB      R3,R6,#+3194880
   \   00000454   ........           _BLF     __dDiv,??__dDiv??rA
   \   00000458   ........           _BLF     __doubleToFloat,??__doubleToFloat??rA
   \   0000045C   040088E7           STR      R0,[R8, +R4]
   1647                  FilterValue(&ADResults[1], (float)tmpADData[1] * 3.3 / 1024.0 * 11.0);     // 24V DC internal
   \   00000460   B200DDE1           LDRH     R0,[SP, #+2]
   \   00000464   ........           _BLF     __ulongToFloat,??__ulongToFloat??rA
   \   00000468   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   0000046C   0020A0E1           MOV      R2,R0
   \   00000470   60039FE5           LDR      R0,??Calculate_3+0x8  ;; 0x66666666
   \   00000474   0130A0E1           MOV      R3,R1
   \   00000478   5C139FE5           LDR      R1,??Calculate_3+0xC  ;; 0x400a6666
   \   0000047C   ........           _BLF     __dMul,??__dMul??rA
   \   00000480   0020A0E3           MOV      R2,#+0
   \   00000484   403946E2           SUB      R3,R6,#+1048576
   \   00000488   ........           _BLF     __dDiv,??__dDiv??rA
   \   0000048C   0020A0E1           MOV      R2,R0
   \   00000490   0130A0E1           MOV      R3,R1
   \   00000494   0000A0E3           MOV      R0,#+0
   \   00000498   7A1846E2           SUB      R1,R6,#+7995392
   \   0000049C   ........           _BLF     __dMul,??__dMul??rA
   \   000004A0   ........           _BLF     __doubleToFloat,??__doubleToFloat??rA
   \   000004A4   0020A0E1           MOV      R2,R0
   \   000004A8   0630A0E1           MOV      R3,R6
   \   000004AC   041085E0           ADD      R1,R5,R4
   \   000004B0   0400A0E1           MOV      R0,R4
   \   000004B4   ........           BL       ??FilterValue
   1648                  FilterValue(&ADResults[2], (float)tmpADData[2] * 3.3 / 1024.0 * 11.0);     // 24V DC   external
   \   000004B8   B400DDE1           LDRH     R0,[SP, #+4]
   \   000004BC   ........           _BLF     __ulongToFloat,??__ulongToFloat??rA
   \   000004C0   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   000004C4   0020A0E1           MOV      R2,R0
   \   000004C8   08039FE5           LDR      R0,??Calculate_3+0x8  ;; 0x66666666
   \   000004CC   0130A0E1           MOV      R3,R1
   \   000004D0   04139FE5           LDR      R1,??Calculate_3+0xC  ;; 0x400a6666
   \   000004D4   ........           _BLF     __dMul,??__dMul??rA
   \   000004D8   0020A0E3           MOV      R2,#+0
   \   000004DC   403946E2           SUB      R3,R6,#+1048576
   \   000004E0   ........           _BLF     __dDiv,??__dDiv??rA
   \   000004E4   0020A0E1           MOV      R2,R0
   \   000004E8   0130A0E1           MOV      R3,R1
   \   000004EC   0000A0E3           MOV      R0,#+0
   \   000004F0   7A1846E2           SUB      R1,R6,#+7995392
   \   000004F4   ........           _BLF     __dMul,??__dMul??rA
   \   000004F8   ........           _BLF     __doubleToFloat,??__doubleToFloat??rA
   \   000004FC   0020A0E1           MOV      R2,R0
   \   00000500   0630A0E1           MOV      R3,R6
   \   00000504   041089E0           ADD      R1,R9,R4
   \   00000508   0400A0E1           MOV      R0,R4
   \   0000050C   ........           BL       ??FilterValue
   1649                  FilterValue(&ADResults[3], (float)tmpADData[3] * 3.3 / 1024.0 * 11.0 / 10.0);    // 3.3 V DC
   \   00000510   B600DDE1           LDRH     R0,[SP, #+6]
   \   00000514   ........           _BLF     __ulongToFloat,??__ulongToFloat??rA
   \   00000518   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   0000051C   0020A0E1           MOV      R2,R0
   \   00000520   B0029FE5           LDR      R0,??Calculate_3+0x8  ;; 0x66666666
   \   00000524   0130A0E1           MOV      R3,R1
   \   00000528   AC129FE5           LDR      R1,??Calculate_3+0xC  ;; 0x400a6666
   \   0000052C   ........           _BLF     __dMul,??__dMul??rA
   \   00000530   0020A0E3           MOV      R2,#+0
   \   00000534   403946E2           SUB      R3,R6,#+1048576
   \   00000538   ........           _BLF     __dDiv,??__dDiv??rA
   \   0000053C   0020A0E1           MOV      R2,R0
   \   00000540   0130A0E1           MOV      R3,R1
   \   00000544   0000A0E3           MOV      R0,#+0
   \   00000548   7A1846E2           SUB      R1,R6,#+7995392
   \   0000054C   ........           _BLF     __dMul,??__dMul??rA
   \   00000550   0020A0E3           MOV      R2,#+0
   \   00000554   7C3846E2           SUB      R3,R6,#+8126464
   \   00000558   ........           _BLF     __dDiv,??__dDiv??rA
   \   0000055C   ........           _BLF     __doubleToFloat,??__doubleToFloat??rA
   \   00000560   0020A0E1           MOV      R2,R0
   \   00000564   0630A0E1           MOV      R3,R6
   \   00000568   04108AE0           ADD      R1,R10,R4
   \   0000056C   0400A0E1           MOV      R0,R4
   \   00000570   ........           BL       ??FilterValue
   1650                  FilterValue(&ADResults[4], (float)tmpADData[4] * 3.3 / 1024.0);              // 1.8 V DC
   \   00000574   B800DDE1           LDRH     R0,[SP, #+8]
   \   00000578   ........           _BLF     __ulongToFloat,??__ulongToFloat??rA
   \   0000057C   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   00000580   0020A0E1           MOV      R2,R0
   \   00000584   4C029FE5           LDR      R0,??Calculate_3+0x8  ;; 0x66666666
   \   00000588   0130A0E1           MOV      R3,R1
   \   0000058C   48129FE5           LDR      R1,??Calculate_3+0xC  ;; 0x400a6666
   \   00000590   ........           _BLF     __dMul,??__dMul??rA
   \   00000594   0020A0E3           MOV      R2,#+0
   \   00000598   403946E2           SUB      R3,R6,#+1048576
   \   0000059C   ........           _BLF     __dDiv,??__dDiv??rA
   \   000005A0   ........           _BLF     __doubleToFloat,??__doubleToFloat??rA
   \   000005A4   0020A0E1           MOV      R2,R0
   \   000005A8   0630A0E1           MOV      R3,R6
   \   000005AC   04108BE0           ADD      R1,R11,R4
   \   000005B0   0400A0E1           MOV      R0,R4
   \   000005B4   ........           BL       ??FilterValue
   1651                  FilterValue(&ADResults[6], (float)tmpADData[6] * 3.3 / 1024.0 * 25.0 / 15.0);    // 5 V DC
   \   000005B8   BC00DDE1           LDRH     R0,[SP, #+12]
   \   000005BC   ........           _BLF     __ulongToFloat,??__ulongToFloat??rA
   \   000005C0   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   000005C4   0020A0E1           MOV      R2,R0
   \   000005C8   08029FE5           LDR      R0,??Calculate_3+0x8  ;; 0x66666666
   \   000005CC   0130A0E1           MOV      R3,R1
   \   000005D0   04129FE5           LDR      R1,??Calculate_3+0xC  ;; 0x400a6666
   \   000005D4   ........           _BLF     __dMul,??__dMul??rA
   \   000005D8   0020A0E3           MOV      R2,#+0
   \   000005DC   403946E2           SUB      R3,R6,#+1048576
   \   000005E0   ........           _BLF     __dDiv,??__dDiv??rA
   \   000005E4   0020A0E1           MOV      R2,R0
   \   000005E8   0130A0E1           MOV      R3,R1
   \   000005EC   0000A0E3           MOV      R0,#+0
   \   000005F0   671846E2           SUB      R1,R6,#+6750208
   \   000005F4   ........           _BLF     __dMul,??__dMul??rA
   \   000005F8   0020A0E3           MOV      R2,#+0
   \   000005FC   723846E2           SUB      R3,R6,#+7471104
   \   00000600   ........           _BLF     __dDiv,??__dDiv??rA
   \   00000604   ........           _BLF     __doubleToFloat,??__doubleToFloat??rA
   \   00000608   0020A0E1           MOV      R2,R0
   \   0000060C   0630A0E1           MOV      R3,R6
   \   00000610   651F84E2           ADD      R1,R4,#+404
   \   00000614   0400A0E1           MOV      R0,R4
   \   00000618   ........           BL       ??FilterValue
   1652                  AdjustVoltage(ADResults[1], 10);
   \   0000061C   041095E7           LDR      R1,[R5, +R4]
   \   00000620   0A20A0E3           MOV      R2,#+10
   \   00000624   0400A0E1           MOV      R0,R4
   \   00000628   ........           BL       ??AdjustVoltage
   1653                  if (AtmRefSensor)   AtmRefSensor->NewValue(ADResults[0]);
   \   0000062C   740194E5           LDR      R0,[R4, #+372]
   \   00000630   000050E3           CMP      R0,#+0
   \   00000634   0400000A           BEQ      ??Calculate_12
   \   00000638   A42090E5           LDR      R2,[R0, #+164]
   \   0000063C   041098E7           LDR      R1,[R8, +R4]
   \   00000640   682092E5           LDR      R2,[R2, #+104]
   \   00000644   0FE0A0E1           MOV      LR,PC
   \   00000648   12FF2FE1           BX       R2
   1654                  if (Internal24VSns) Internal24VSns->NewValue(ADResults[1]);
   \                     ??Calculate_12:
   \   0000064C   6C0294E5           LDR      R0,[R4, #+620]
   \   00000650   000050E3           CMP      R0,#+0
   \   00000654   0400000A           BEQ      ??Calculate_13
   \   00000658   A42090E5           LDR      R2,[R0, #+164]
   \   0000065C   041095E7           LDR      R1,[R5, +R4]
   \   00000660   682092E5           LDR      R2,[R2, #+104]
   \   00000664   0FE0A0E1           MOV      LR,PC
   \   00000668   12FF2FE1           BX       R2
   1655                  if (External24VSns) External24VSns->NewValue(ADResults[2]);
   \                     ??Calculate_13:
   \   0000066C   700294E5           LDR      R0,[R4, #+624]
   \   00000670   000050E3           CMP      R0,#+0
   \   00000674   0400000A           BEQ      ??Calculate_14
   \   00000678   A42090E5           LDR      R2,[R0, #+164]
   \   0000067C   041099E7           LDR      R1,[R9, +R4]
   \   00000680   682092E5           LDR      R2,[R2, #+104]
   \   00000684   0FE0A0E1           MOV      LR,PC
   \   00000688   12FF2FE1           BX       R2
   1656                  if (AC_OK_Sns) AC_OK_Sns->NewValue((rGPFDAT >> 7) & 1);
   \                     ??Calculate_14:
   \   0000068C   740294E5           LDR      R0,[R4, #+628]
   \   00000690   000050E3           CMP      R0,#+0
   \   00000694   0B00000A           BEQ      ??Calculate_15
   \   00000698   5400A0E3           MOV      R0,#+84
   \   0000069C   560480E3           ORR      R0,R0,#0x56000000
   \   000006A0   000090E5           LDR      R0,[R0, #+0]
   \   000006A4   0110A0E3           MOV      R1,#+1
   \   000006A8   A00301E0           AND      R0,R1,R0, LSR #+7
   \   000006AC   ........           _BLF     __ulongToFloat,??__ulongToFloat??rA
   \   000006B0   0010A0E1           MOV      R1,R0
   \   000006B4   740294E5           LDR      R0,[R4, #+628]
   \   000006B8   A42090E5           LDR      R2,[R0, #+164]
   \   000006BC   682092E5           LDR      R2,[R2, #+104]
   \   000006C0   0FE0A0E1           MOV      LR,PC
   \   000006C4   12FF2FE1           BX       R2
   1657                  if (FuseSns) FuseSns->NewValue((rGPFDAT >> 5) & 1);
   \                     ??Calculate_15:
   \   000006C8   780294E5           LDR      R0,[R4, #+632]
   \   000006CC   000050E3           CMP      R0,#+0
   \   000006D0   0C00000A           BEQ      ??Calculate_10
   \   000006D4   5400A0E3           MOV      R0,#+84
   \   000006D8   560480E3           ORR      R0,R0,#0x56000000
   \   000006DC   000090E5           LDR      R0,[R0, #+0]
   \   000006E0   0110A0E3           MOV      R1,#+1
   \   000006E4   A00201E0           AND      R0,R1,R0, LSR #+5
   \   000006E8   ........           _BLF     __ulongToFloat,??__ulongToFloat??rA
   \   000006EC   0010A0E1           MOV      R1,R0
   \   000006F0   780294E5           LDR      R0,[R4, #+632]
   \   000006F4   A42090E5           LDR      R2,[R0, #+164]
   \   000006F8   682092E5           LDR      R2,[R2, #+104]
   \   000006FC   0FE0A0E1           MOV      LR,PC
   \   00000700   12FF2FE1           BX       R2
   1658                  break;
   1659              }
   1660          
   1661          
   1662              NoADFilter = false;
   \                     ??Calculate_5:
   \   00000704   0000A0E3           MOV      R0,#+0
   \                     ??Calculate_10:
   \   00000708   7801C4E5           STRB     R0,[R4, #+376]
   1663              for (int i = 0; i < MAX_COM_PORTS; i++) {
   \   0000070C   0050A0E3           MOV      R5,#+0
   1664                  if (Channels[i]) {
   \                     ??Calculate_16:
   \   00000710   056184E0           ADD      R6,R4,R5, LSL #+2
   \   00000714   680396E5           LDR      R0,[R6, #+872]
   \   00000718   000050E3           CMP      R0,#+0
   \   0000071C   0A00000A           BEQ      ??Calculate_17
   1665                      RxLoad[i] = Channels[i]->RxPercent();
   \   00000720   ........           _BLF     ??RxPercent,??RxPercent??rA
   \   00000724   9C0186E5           STR      R0,[R6, #+412]
   1666                      TxLoad[i] = Channels[i]->TxPercent();
   \   00000728   680396E5           LDR      R0,[R6, #+872]
   \   0000072C   ........           _BLF     ??TxPercent,??TxPercent??rA
   \   00000730   B80186E5           STR      R0,[R6, #+440]
   1667                      TxCnt[i] = Channels[i]->TxCnt;
   \   00000734   680396E5           LDR      R0,[R6, #+872]
   \   00000738   B80090E5           LDR      R0,[R0, #+184]
   \   0000073C   D40186E5           STR      R0,[R6, #+468]
   1668                      RxCnt[i] = Channels[i]->RxCnt;
   \   00000740   680396E5           LDR      R0,[R6, #+872]
   \   00000744   BC0090E5           LDR      R0,[R0, #+188]
   \   00000748   F00186E5           STR      R0,[R6, #+496]
   1669                  }
   1670              }
   \                     ??Calculate_17:
   \   0000074C   015085E2           ADD      R5,R5,#+1
   \   00000750   070055E3           CMP      R5,#+7
   \   00000754   EDFFFFBA           BLT      ??Calculate_16
   1671              RawLoad = TotalRawLoad;
   \   00000758   8C009FE5           LDR      R0,??Calculate_3+0x1C  ;; TotalRawLoad
   \   0000075C   030090E8           LDM      R0,{R0,R1}
   \   00000760   ........           _BLF     __doubleToFloat,??__doubleToFloat??rA
   \   00000764   400284E5           STR      R0,[R4, #+576]
   1672              AvgLoad = AvgPerformance;
   \   00000768   80009FE5           LDR      R0,??Calculate_3+0x20  ;; AvgPerformance
   \   0000076C   030090E8           LDM      R0,{R0,R1}
   \   00000770   ........           _BLF     __doubleToFloat,??__doubleToFloat??rA
   \   00000774   440284E5           STR      R0,[R4, #+580]
   1673              MaxLoad = MaxPerformance;
   \   00000778   74009FE5           LDR      R0,??Calculate_3+0x24  ;; MaxPerformance
   \   0000077C   030090E8           LDM      R0,{R0,R1}
   \   00000780   ........           _BLF     __doubleToFloat,??__doubleToFloat??rA
   \   00000784   480284E5           STR      R0,[R4, #+584]
   1674              RunningHours = RunningTime;
   \   00000788   ........           LDR      R0,??DataTable78  ;; RunningTime
   \   0000078C   000090E5           LDR      R0,[R0, #+0]
   \   00000790   ........           _BLF     __longToFloat,??__longToFloat??rA
   \   00000794   340284E5           STR      R0,[R4, #+564]
   1675              SendData();
   \   00000798   A42094E5           LDR      R2,[R4, #+164]
   \   0000079C   6510A0E3           MOV      R1,#+101
   \   000007A0   402092E5           LDR      R2,[R2, #+64]
   \   000007A4   0400A0E1           MOV      R0,R4
   \   000007A8   0FE0A0E1           MOV      LR,PC
   \   000007AC   12FF2FE1           BX       R2
   1676              SendData(CMD_GENERIC_STATIC_DATA);
   \   000007B0   A42094E5           LDR      R2,[R4, #+164]
   \   000007B4   6610A0E3           MOV      R1,#+102
   \   000007B8   402092E5           LDR      R2,[R2, #+64]
   \   000007BC   0400A0E1           MOV      R0,R4
   \   000007C0   0FE0A0E1           MOV      LR,PC
   \   000007C4   12FF2FE1           BX       R2
   1677          #endif
   1678          }
   \   000007C8   7F4FBDE8           POP      {R0-R6,R8-R11,LR}
   \   000007CC   1EFF2FE1           BX       LR               ;; return
   \                     ??Calculate_3:
   \   000007D0   ........           DC32     TXUADData
   \   000007D4   ........           DC32     OS_Counters
   \   000007D8   66666666           DC32     0x66666666
   \   000007DC   66660A40           DC32     0x400a6666
   \   000007E0   66662840           DC32     0x40286666
   \   000007E4   9A999999           DC32     0xffffffff9999999a
   \   000007E8   99990140           DC32     0x40019999
   \   000007EC   ........           DC32     TotalRawLoad
   \   000007F0   ........           DC32     AvgPerformance
   \   000007F4   ........           DC32     MaxPerformance
   1679          

   \                                 In segment CODE, align 4, keep-with-next
   1680          void PROTanksystemUnit::AdjustVoltage(float Voltage, int Delay) {
   \                     ??AdjustVoltage:
   \   00000000   F0402DE9           PUSH     {R4-R7,LR}
   \   00000004   0060A0E1           MOV      R6,R0
   \   00000008   0100A0E1           MOV      R0,R1
   1681          #if defined(S2TXU)
   1682              static unsigned Cnt;
   1683              if (RunningTime > 60) {
   \   0000000C   ........           LDR      R1,??DataTable78  ;; RunningTime
   \   00000010   001091E5           LDR      R1,[R1, #+0]
   \   00000014   3D0051E3           CMP      R1,#+61
   \   00000018   2D0000BA           BLT      ??AdjustVoltage_1
   1684                  if (Cnt++ > Delay) {
   \   0000001C   ........           LDR      R1,??Subroutine47_0  ;; ??Cnt
   \   00000020   003091E5           LDR      R3,[R1, #+0]
   \   00000024   01C083E2           ADD      R12,R3,#+1
   \   00000028   00C081E5           STR      R12,[R1, #+0]
   \   0000002C   030052E1           CMP      R2,R3
   \   00000030   2700002A           BCS      ??AdjustVoltage_1
   1685                      Cnt = 0;
   \   00000034   0020A0E3           MOV      R2,#+0
   \   00000038   002081E5           STR      R2,[R1, #+0]
   1686                      if (Voltage > TCU_MIN_ADJUST_VOLTAGE) {
   \   0000003C   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   00000040   0040A0E1           MOV      R4,R0
   \   00000044   0150A0E1           MOV      R5,R1
   \   00000048   0120A0E3           MOV      R2,#+1
   \   0000004C   4034A0E3           MOV      R3,#+1073741824
   \   00000050   D03983E3           ORR      R3,R3,#0x340000
   \   00000054   ........           _BLF     __dGreaterEqual,??__dGreaterEqual??rA
   \   00000058   000050E3           CMP      R0,#+0
   \   0000005C   1C00000A           BEQ      ??AdjustVoltage_1
   \   00000060   540396E5           LDR      R0,[R6, #+852]
   \   00000064   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   00000068   0060A0E1           MOV      R6,R0
   \   0000006C   ........           LDR      R0,??Subroutine47_0+0x4  ;; 0x33333333
   \   00000070   0170A0E1           MOV      R7,R1
   \   00000074   C91680E2           ADD      R1,R0,#+210763776
   \   00000078   0620A0E1           MOV      R2,R6
   \   0000007C   0730A0E1           MOV      R3,R7
   \   00000080   ........           _BLF     __dAdd,??__dAdd??rA
   \   00000084   0420A0E1           MOV      R2,R4
   \   00000088   0530A0E1           MOV      R3,R5
   \   0000008C   ........           _BLF     __dLess,??__dLess??rA
   \   00000090   000050E3           CMP      R0,#+0
   1687                          if (Voltage > VoltageSetPoint + TCU_VOLTAGE_WINDOW) {
   1688                              LCD_BackLightAdjust(-1);
   \   00000094   0000E013           MVNNE    R0,#+0
   \   00000098   0C00001A           BNE      ??AdjustVoltage_2
   1689                          } else if (Voltage < VoltageSetPoint - TCU_VOLTAGE_WINDOW) {
   \   0000009C   ........           LDR      R0,??Subroutine47_0+0x8  ;; 0x33333333
   \   000000A0   ........           LDR      R1,??Subroutine47_0+0xC  ;; 0xffffffffbfc33333
   \   000000A4   0620A0E1           MOV      R2,R6
   \   000000A8   0730A0E1           MOV      R3,R7
   \   000000AC   ........           _BLF     __dAdd,??__dAdd??rA
   \   000000B0   0020A0E1           MOV      R2,R0
   \   000000B4   0130A0E1           MOV      R3,R1
   \   000000B8   0400A0E1           MOV      R0,R4
   \   000000BC   0510A0E1           MOV      R1,R5
   \   000000C0   ........           _BLF     __dLess,??__dLess??rA
   \   000000C4   000050E3           CMP      R0,#+0
   \   000000C8   0100000A           BEQ      ??AdjustVoltage_1
   1690                              LCD_BackLightAdjust(1);
   \   000000CC   0100A0E3           MOV      R0,#+1
   \                     ??AdjustVoltage_2:
   \   000000D0   ........           _BLF     ??LCD_BackLightAdjust,??LCD_BackLightAdjust??rA
   1691                          }
   1692                      }
   1693                  }
   1694              }
   1695          #endif
   1696          }
   \                     ??AdjustVoltage_1:
   \   000000D4                      REQUIRE ?Subroutine47
   \   000000D4                      ;; // Fall through to label ?Subroutine47

   \                                 In segment CODE, align 4, keep-with-next
   \                     ?Subroutine47:
   \   00000000   F040BDE8           POP      {R4-R7,LR}
   \   00000004   1EFF2FE1           BX       LR               ;; return
   \                     ??Subroutine47_0:
   \   00000008   ........           DC32     ??Cnt
   \   0000000C   33333333           DC32     0x33333333
   \   00000010   33333333           DC32     0x33333333
   \   00000014   3333C3BF           DC32     0xffffffffbfc33333

   \                                 In segment DATA_Z, align 4, align-sorted
   \                     ??Cnt:
   \   00000000                      DS8 4
   1697          

   \                                 In segment CODE, align 4, keep-with-next
   1698          int PROTanksystemUnit::ReceiveData(U8 *data) {
   \                     ??ReceiveData:
   \   00000000   F0402DE9           PUSH     {R4-R7,LR}
   \   00000004   38D04DE2           SUB      SP,SP,#+56
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   0150A0E1           MOV      R5,R1
   1699              int ErrorStatus = E_OK;
   1700              ANPRO10_CommandHeading *pCH = (ANPRO10_CommandHeading *)data;
   1701              switch (pCH->CommandNo) {
   \   00000010   0100D5E5           LDRB     R0,[R5, #+1]
   \   00000014   0010D5E5           LDRB     R1,[R5, #+0]
   \   00000018   0060A0E3           MOV      R6,#+0
   \   0000001C   A47084E2           ADD      R7,R4,#+164
   \   00000020   000481E1           ORR      R0,R1,R0, LSL #+8
   \   00000024   650050E2           SUBS     R0,R0,#+101
   \   00000028   0200000A           BEQ      ??ReceiveData_1
   \   0000002C   010050E2           SUBS     R0,R0,#+1
   \   00000030   A900000A           BEQ      ??ReceiveData_2
   \   00000034   FC0000EA           B        ??ReceiveData_3
   1702              case CMD_GENERIC_REALTIME_DATA:
   1703                  {
   1704                      ANPRO10_COMMAND_2700  *pData = (ANPRO10_COMMAND_2700 *)data;
   1705                      for (int i = 0; i < MAX_TCU_AD_CHANNELS; i++) {
   \                     ??ReceiveData_1:
   \   00000038   0000A0E3           MOV      R0,#+0
   1706                          ADResults[i] = pData->ADResults[i];
   \                     ??ReceiveData_4:
   \   0000003C   0010A0E3           MOV      R1,#+0
   \   00000040   0D20A0E1           MOV      R2,SP
   \                     ??ReceiveData_5:
   \   00000044   003185E0           ADD      R3,R5,R0, LSL #+2
   \   00000048   083083E2           ADD      R3,R3,#+8
   \   0000004C   0330D1E7           LDRB     R3,[R1, +R3]
   \   00000050   0230C1E7           STRB     R3,[R1, +R2]
   \   00000054   011081E2           ADD      R1,R1,#+1
   \   00000058   040051E3           CMP      R1,#+4
   \   0000005C   F8FFFFBA           BLT      ??ReceiveData_5
   \   00000060   00209DE5           LDR      R2,[SP, #+0]
   \   00000064   001184E0           ADD      R1,R4,R0, LSL #+2
   \   00000068   7C2181E5           STR      R2,[R1, #+380]
   1707                      }
   \   0000006C   010080E2           ADD      R0,R0,#+1
   \   00000070   080050E3           CMP      R0,#+8
   \   00000074   F0FFFFBA           BLT      ??ReceiveData_4
   1708                      for (int i = 0; i < MAX_COM_PORTS; i++) {
   \   00000078   0000A0E3           MOV      R0,#+0
   1709                          RxLoad[i] = pData->RxLoad[i];
   \                     ??ReceiveData_6:
   \   0000007C   0020A0E3           MOV      R2,#+0
   \   00000080   001185E0           ADD      R1,R5,R0, LSL #+2
   \   00000084   04308DE2           ADD      R3,SP,#+4
   \                     ??ReceiveData_7:
   \   00000088   28C081E2           ADD      R12,R1,#+40
   \   0000008C   0CC0D2E7           LDRB     R12,[R2, +R12]
   \   00000090   03C0C2E7           STRB     R12,[R2, +R3]
   \   00000094   012082E2           ADD      R2,R2,#+1
   \   00000098   040052E3           CMP      R2,#+4
   \   0000009C   F9FFFFBA           BLT      ??ReceiveData_7
   \   000000A0   04309DE5           LDR      R3,[SP, #+4]
   \   000000A4   002184E0           ADD      R2,R4,R0, LSL #+2
   \   000000A8   9C3182E5           STR      R3,[R2, #+412]
   1710                          TxLoad[i] = pData->TxLoad[i];
   \   000000AC   0030A0E3           MOV      R3,#+0
   \   000000B0   08C08DE2           ADD      R12,SP,#+8
   \                     ??ReceiveData_8:
   \   000000B4   44E081E2           ADD      LR,R1,#+68
   \   000000B8   0EE0D3E7           LDRB     LR,[R3, +LR]
   \   000000BC   0CE0C3E7           STRB     LR,[R3, +R12]
   \   000000C0   013083E2           ADD      R3,R3,#+1
   \   000000C4   040053E3           CMP      R3,#+4
   \   000000C8   F9FFFFBA           BLT      ??ReceiveData_8
   \   000000CC   08309DE5           LDR      R3,[SP, #+8]
   1711                          TxCnt[i] = pData->TxCnt[i];
   1712                          RxCnt[i] = pData->RxCnt[i];
   1713                      }
   \   000000D0   010080E2           ADD      R0,R0,#+1
   \   000000D4   B83182E5           STR      R3,[R2, #+440]
   \   000000D8   6330D1E5           LDRB     R3,[R1, #+99]
   \   000000DC   62C0D1E5           LDRB     R12,[R1, #+98]
   \   000000E0   070050E3           CMP      R0,#+7
   \   000000E4   03348CE1           ORR      R3,R12,R3, LSL #+8
   \   000000E8   61C0D1E5           LDRB     R12,[R1, #+97]
   \   000000EC   03348CE1           ORR      R3,R12,R3, LSL #+8
   \   000000F0   60C0D1E5           LDRB     R12,[R1, #+96]
   \   000000F4   03348CE1           ORR      R3,R12,R3, LSL #+8
   \   000000F8   D43182E5           STR      R3,[R2, #+468]
   \   000000FC   7F30D1E5           LDRB     R3,[R1, #+127]
   \   00000100   7EC0D1E5           LDRB     R12,[R1, #+126]
   \   00000104   03348CE1           ORR      R3,R12,R3, LSL #+8
   \   00000108   7DC0D1E5           LDRB     R12,[R1, #+125]
   \   0000010C   7C10D1E5           LDRB     R1,[R1, #+124]
   \   00000110   03348CE1           ORR      R3,R12,R3, LSL #+8
   \   00000114   031481E1           ORR      R1,R1,R3, LSL #+8
   \   00000118   F01182E5           STR      R1,[R2, #+496]
   \   0000011C   D6FFFFBA           BLT      ??ReceiveData_6
   1714                      RunningHours    = pData->RunningHours;
   \   00000120   0000A0E3           MOV      R0,#+0
   \   00000124   0C108DE2           ADD      R1,SP,#+12
   \                     ??ReceiveData_9:
   \   00000128   982085E2           ADD      R2,R5,#+152
   \   0000012C   0220D0E7           LDRB     R2,[R0, +R2]
   \   00000130   0120C0E7           STRB     R2,[R0, +R1]
   \   00000134   010080E2           ADD      R0,R0,#+1
   \   00000138   040050E3           CMP      R0,#+4
   \   0000013C   F9FFFFBA           BLT      ??ReceiveData_9
   \   00000140   0C009DE5           LDR      R0,[SP, #+12]
   \   00000144   900187E5           STR      R0,[R7, #+400]
   1715                      RxErrId         = pData->RxErrId;
   \   00000148   9F00D5E5           LDRB     R0,[R5, #+159]
   \   0000014C   9E10D5E5           LDRB     R1,[R5, #+158]
   \   00000150   000481E1           ORR      R0,R1,R0, LSL #+8
   \   00000154   9D10D5E5           LDRB     R1,[R5, #+157]
   \   00000158   000481E1           ORR      R0,R1,R0, LSL #+8
   \   0000015C   9C10D5E5           LDRB     R1,[R5, #+156]
   \   00000160   000481E1           ORR      R0,R1,R0, LSL #+8
   \   00000164   A00387E5           STR      R0,[R7, #+928]
   1716                      RxErrCmd        = pData->RxErrCmd;
   \   00000168   A300D5E5           LDRB     R0,[R5, #+163]
   \   0000016C   A210D5E5           LDRB     R1,[R5, #+162]
   \   00000170   000481E1           ORR      R0,R1,R0, LSL #+8
   \   00000174   A110D5E5           LDRB     R1,[R5, #+161]
   \   00000178   000481E1           ORR      R0,R1,R0, LSL #+8
   \   0000017C   A010D5E5           LDRB     R1,[R5, #+160]
   \   00000180   000481E1           ORR      R0,R1,R0, LSL #+8
   \   00000184   A40387E5           STR      R0,[R7, #+932]
   1717                      RxErrMsg        = pData->RxErrMsg;
   \   00000188   A700D5E5           LDRB     R0,[R5, #+167]
   \   0000018C   A610D5E5           LDRB     R1,[R5, #+166]
   \   00000190   000481E1           ORR      R0,R1,R0, LSL #+8
   \   00000194   A510D5E5           LDRB     R1,[R5, #+165]
   \   00000198   000481E1           ORR      R0,R1,R0, LSL #+8
   \   0000019C   A410D5E5           LDRB     R1,[R5, #+164]
   \   000001A0   000481E1           ORR      R0,R1,R0, LSL #+8
   \   000001A4   A80387E5           STR      R0,[R7, #+936]
   1718                      RxErrCnt        = pData->RxErrCnt;
   \   000001A8   AB00D5E5           LDRB     R0,[R5, #+171]
   \   000001AC   AA10D5E5           LDRB     R1,[R5, #+170]
   \   000001B0   000481E1           ORR      R0,R1,R0, LSL #+8
   \   000001B4   A910D5E5           LDRB     R1,[R5, #+169]
   \   000001B8   000481E1           ORR      R0,R1,R0, LSL #+8
   \   000001BC   A810D5E5           LDRB     R1,[R5, #+168]
   \   000001C0   000481E1           ORR      R0,R1,R0, LSL #+8
   \   000001C4   AC0387E5           STR      R0,[R7, #+940]
   1719                      RxErrTime       = pData->RxErrTime;
   \   000001C8   AF00D5E5           LDRB     R0,[R5, #+175]
   \   000001CC   AE10D5E5           LDRB     R1,[R5, #+174]
   \   000001D0   000481E1           ORR      R0,R1,R0, LSL #+8
   \   000001D4   AD10D5E5           LDRB     R1,[R5, #+173]
   \   000001D8   000481E1           ORR      R0,R1,R0, LSL #+8
   \   000001DC   AC10D5E5           LDRB     R1,[R5, #+172]
   \   000001E0   000481E1           ORR      R0,R1,R0, LSL #+8
   \   000001E4   B00387E5           STR      R0,[R7, #+944]
   1720                      IOLoadDelay     = pData->IOLoadDelay;
   \   000001E8   B300D5E5           LDRB     R0,[R5, #+179]
   \   000001EC   B210D5E5           LDRB     R1,[R5, #+178]
   \   000001F0   000481E1           ORR      R0,R1,R0, LSL #+8
   \   000001F4   B110D5E5           LDRB     R1,[R5, #+177]
   \   000001F8   000481E1           ORR      R0,R1,R0, LSL #+8
   \   000001FC   B010D5E5           LDRB     R1,[R5, #+176]
   \   00000200   000481E1           ORR      R0,R1,R0, LSL #+8
   \   00000204   940187E5           STR      R0,[R7, #+404]
   1721                      SysInfoRxFailCnt = pData->SysInfoRxFailCnt;
   \   00000208   B700D5E5           LDRB     R0,[R5, #+183]
   \   0000020C   B610D5E5           LDRB     R1,[R5, #+182]
   \   00000210   000481E1           ORR      R0,R1,R0, LSL #+8
   \   00000214   B510D5E5           LDRB     R1,[R5, #+181]
   \   00000218   000481E1           ORR      R0,R1,R0, LSL #+8
   \   0000021C   B410D5E5           LDRB     R1,[R5, #+180]
   \   00000220   000481E1           ORR      R0,R1,R0, LSL #+8
   \   00000224   B40387E5           STR      R0,[R7, #+948]
   1722                      RawLoad         = pData->RawLoad;
   \   00000228   0000A0E3           MOV      R0,#+0
   \   0000022C   10108DE2           ADD      R1,SP,#+16
   \                     ??ReceiveData_10:
   \   00000230   B82085E2           ADD      R2,R5,#+184
   \   00000234   0220D0E7           LDRB     R2,[R0, +R2]
   \   00000238   0120C0E7           STRB     R2,[R0, +R1]
   \   0000023C   010080E2           ADD      R0,R0,#+1
   \   00000240   040050E3           CMP      R0,#+4
   \   00000244   F9FFFFBA           BLT      ??ReceiveData_10
   \   00000248   10009DE5           LDR      R0,[SP, #+16]
   1723                      AvgLoad         = pData->AvgLoad;
   \   0000024C   14108DE2           ADD      R1,SP,#+20
   \   00000250   9C0187E5           STR      R0,[R7, #+412]
   \   00000254   0000A0E3           MOV      R0,#+0
   \                     ??ReceiveData_11:
   \   00000258   BC2085E2           ADD      R2,R5,#+188
   \   0000025C   0220D0E7           LDRB     R2,[R0, +R2]
   \   00000260   0120C0E7           STRB     R2,[R0, +R1]
   \   00000264   010080E2           ADD      R0,R0,#+1
   \   00000268   040050E3           CMP      R0,#+4
   \   0000026C   F9FFFFBA           BLT      ??ReceiveData_11
   \   00000270   14009DE5           LDR      R0,[SP, #+20]
   1724                      MaxLoad         = pData->MaxLoad;
   \   00000274   18108DE2           ADD      R1,SP,#+24
   \   00000278   A00187E5           STR      R0,[R7, #+416]
   \   0000027C   0000A0E3           MOV      R0,#+0
   \                     ??ReceiveData_12:
   \   00000280   C02085E2           ADD      R2,R5,#+192
   \   00000284   0220D0E7           LDRB     R2,[R0, +R2]
   \   00000288   0120C0E7           STRB     R2,[R0, +R1]
   \   0000028C   010080E2           ADD      R0,R0,#+1
   \   00000290   040050E3           CMP      R0,#+4
   \   00000294   F9FFFFBA           BLT      ??ReceiveData_12
   \   00000298   18009DE5           LDR      R0,[SP, #+24]
   \   0000029C   A40187E5           STR      R0,[R7, #+420]
   1725          
   1726                      ErrorStatus =  E_OK;
   1727                      if (Master && SendFlashDataInProgress == FLASH_IDLE) {
   \   000002A0   ........           LDR      R0,??DataTable90  ;; Master
   \   000002A4   0000D0E5           LDRB     R0,[R0, #+0]
   \   000002A8   000050E3           CMP      R0,#+0
   \   000002AC   5F00000A           BEQ      ??ReceiveData_13
   \   000002B0   ........           LDR      R0,??DataTable86  ;; SendFlashDataInProgress
   \   000002B4   0000D0E5           LDRB     R0,[R0, #+0]
   \   000002B8   000050E3           CMP      R0,#+0
   \   000002BC   5B00001A           BNE      ??ReceiveData_13
   1728                          SendData();
   \   000002C0   002097E5           LDR      R2,[R7, #+0]
   \   000002C4   6510A0E3           MOV      R1,#+101
   \   000002C8   402092E5           LDR      R2,[R2, #+64]
   \   000002CC   0400A0E1           MOV      R0,R4
   \   000002D0   0FE0A0E1           MOV      LR,PC
   \   000002D4   12FF2FE1           BX       R2
   \   000002D8   540000EA           B        ??ReceiveData_13
   1729                      }
   1730                  }
   1731                  break;
   1732              case CMD_GENERIC_STATIC_DATA:
   1733                  {
   1734                      ANPRO10_COMMAND_2701  *pData = (ANPRO10_COMMAND_2701 *)data;
   1735          
   1736                      // Ignore this packet if to MySelf, because I know MySelf better!!
   1737                      if (this != MySelf) {
   \                     ??ReceiveData_2:
   \   000002DC   ........           LDR      R0,??DataTable87  ;; ??TanksystemUnitSet + 48
   \   000002E0   000090E5           LDR      R0,[R0, #+0]
   \   000002E4   000054E1           CMP      R4,R0
   \   000002E8   5000000A           BEQ      ??ReceiveData_13
   1738                          strncpy((char *)ActualSystemID, (const char *)pData->ActualSystemID, sizeof(ActualSystemID));
   \   000002EC   1420A0E3           MOV      R2,#+20
   \   000002F0   101085E2           ADD      R1,R5,#+16
   \   000002F4   4A00A0E3           MOV      R0,#+74
   \   000002F8   400F80E3           ORR      R0,R0,#0x100
   \   000002FC   040080E0           ADD      R0,R0,R4
   \   00000300   ........           _BLF     strncpy,??strncpy??rA
   1739                          ActualDataVersion                 = pData->ActualDataVersion;
   \   00000304   2500D5E5           LDRB     R0,[R5, #+37]
   \   00000308   2410D5E5           LDRB     R1,[R5, #+36]
   \   0000030C   000481E1           ORR      R0,R1,R0, LSL #+8
   \   00000310   BA0BC7E1           STRH     R0,[R7, #+186]
   1740                          ActualProgramVersion.Build        = pData->ActualProgramVersion.Build;
   \   00000314   0B00D5E5           LDRB     R0,[R5, #+11]
   \   00000318   BF00C7E5           STRB     R0,[R7, #+191]
   1741                          ActualProgramVersion.NewFunctions = pData->ActualProgramVersion.NewFunctions;
   \   0000031C   0A00D5E5           LDRB     R0,[R5, #+10]
   \   00000320   BE00C7E5           STRB     R0,[R7, #+190]
   1742                          ActualProgramVersion.PacketFormat = pData->ActualProgramVersion.PacketFormat;
   \   00000324   0900D5E5           LDRB     R0,[R5, #+9]
   \   00000328   BD00C7E5           STRB     R0,[R7, #+189]
   1743                          ActualProgramVersion.ProdNo       = pData->ActualProgramVersion.ProdNo;
   \   0000032C   0800D5E5           LDRB     R0,[R5, #+8]
   \   00000330   BC00C7E5           STRB     R0,[R7, #+188]
   1744                          ActualBootVersion.Build           = pData->ActualBootVersion.Build;
   \   00000334   0F00D5E5           LDRB     R0,[R5, #+15]
   \   00000338   C300C7E5           STRB     R0,[R7, #+195]
   1745                          ActualBootVersion.NewFunctions    = pData->ActualBootVersion.NewFunctions;
   \   0000033C   0E00D5E5           LDRB     R0,[R5, #+14]
   \   00000340   C200C7E5           STRB     R0,[R7, #+194]
   1746                          ActualBootVersion.PacketFormat    = pData->ActualBootVersion.PacketFormat;
   \   00000344   0D00D5E5           LDRB     R0,[R5, #+13]
   \   00000348   C100C7E5           STRB     R0,[R7, #+193]
   1747                          ActualBootVersion.ProdNo          = pData->ActualBootVersion.ProdNo;
   \   0000034C   0C00D5E5           LDRB     R0,[R5, #+12]
   \   00000350   C000C7E5           STRB     R0,[R7, #+192]
   1748                          ProgrDate                         = pData->ProgrDate;
   \   00000354   2900D5E5           LDRB     R0,[R5, #+41]
   \   00000358   2810D5E5           LDRB     R1,[R5, #+40]
   \   0000035C   000481E1           ORR      R0,R1,R0, LSL #+8
   \   00000360   2710D5E5           LDRB     R1,[R5, #+39]
   \   00000364   000481E1           ORR      R0,R1,R0, LSL #+8
   \   00000368   2610D5E5           LDRB     R1,[R5, #+38]
   \   0000036C   000481E1           ORR      R0,R1,R0, LSL #+8
   \   00000370   C40087E5           STR      R0,[R7, #+196]
   1749                          UpdateTime                        = pData->UpdateTime;
   \   00000374   2D00D5E5           LDRB     R0,[R5, #+45]
   \   00000378   2C10D5E5           LDRB     R1,[R5, #+44]
   \   0000037C   000481E1           ORR      R0,R1,R0, LSL #+8
   \   00000380   2B10D5E5           LDRB     R1,[R5, #+43]
   \   00000384   000481E1           ORR      R0,R1,R0, LSL #+8
   \   00000388   2A10D5E5           LDRB     R1,[R5, #+42]
   \   0000038C   000481E1           ORR      R0,R1,R0, LSL #+8
   \   00000390   C80087E5           STR      R0,[R7, #+200]
   1750                          ProgramType                       = pData->ProgramType;
   \   00000394   2E00D5E5           LDRB     R0,[R5, #+46]
   \   00000398   A400C7E5           STRB     R0,[R7, #+164]
   1751                          HWDeviceId                        = pData->HWDeviceId;
   \   0000039C   2F00D5E5           LDRB     R0,[R5, #+47]
   \   000003A0   8402C7E5           STRB     R0,[R7, #+644]
   1752                          LastOSErr                         = pData->LastOSError;
   \   000003A4   3000D5E5           LDRB     R0,[R5, #+48]
   \   000003A8   6801C7E5           STRB     R0,[R7, #+360]
   1753                          LastErrAddr                       = pData->LastErrAddress;
   \   000003AC   3700D5E5           LDRB     R0,[R5, #+55]
   \   000003B0   3610D5E5           LDRB     R1,[R5, #+54]
   \   000003B4   000481E1           ORR      R0,R1,R0, LSL #+8
   \   000003B8   3510D5E5           LDRB     R1,[R5, #+53]
   \   000003BC   000481E1           ORR      R0,R1,R0, LSL #+8
   \   000003C0   3410D5E5           LDRB     R1,[R5, #+52]
   \   000003C4   000481E1           ORR      R0,R1,R0, LSL #+8
   \   000003C8   6C0187E5           STR      R0,[R7, #+364]
   1754                          FlashErrStatus                    = pData->FlashErrorStatus;
   \   000003CC   3800D5E5           LDRB     R0,[R5, #+56]
   1755                          LastOSErrTask                     = pData->LastOSErrorTask;
   \   000003D0   3C1085E2           ADD      R1,R5,#+60
   \   000003D4   7001C7E5           STRB     R0,[R7, #+368]
   \   000003D8   1C008DE2           ADD      R0,SP,#+28
   \   000003DC   ........           _BLF     ??AnsiString_1,??AnsiString??rA_1
   \   000003E0   ........           LDR      R1,??DataTable92  ;; ??npos
   \   000003E4   0020A0E3           MOV      R2,#+0
   \   000003E8   003091E5           LDR      R3,[R1, #+0]
   \   000003EC   0010A0E1           MOV      R1,R0
   \   000003F0   860F84E2           ADD      R0,R4,#+536
   \   000003F4   ........           _BLF     ??assign,??assign??rA
   \   000003F8   0620A0E1           MOV      R2,R6
   \   000003FC   0110A0E3           MOV      R1,#+1
   \   00000400   1C008DE2           ADD      R0,SP,#+28
   \   00000404   ........           _BLF     ??_Tidy,??_Tidy??rA
   1756                          NumberOfTasks                     = pData->NumberOfTasks;
   \   00000408   5300D5E5           LDRB     R0,[R5, #+83]
   \   0000040C   5210D5E5           LDRB     R1,[R5, #+82]
   \   00000410   000481E1           ORR      R0,R1,R0, LSL #+8
   \   00000414   5110D5E5           LDRB     R1,[R5, #+81]
   \   00000418   000481E1           ORR      R0,R1,R0, LSL #+8
   \   0000041C   5010D5E5           LDRB     R1,[R5, #+80]
   \   00000420   000481E1           ORR      R0,R1,R0, LSL #+8
   \   00000424   F80987E5           STR      R0,[R7, #+2552]
   \   00000428   000000EA           B        ??ReceiveData_13
   1757                          /*
   1758                          for (int i = 0; i < NumberOfTasks && i < MAX_ANPRO10_NUMBER_OF_TASKS; i++) {
   1759                              TaskName[i] = pData->TaskNames[i];
   1760                              StackUsed[i] = pData->StackUsed[i];
   1761                              RawPerformance[i] = pData->RawPerformance[i];
   1762                              StackSpace[i] = pData->StackSpace[i];
   1763          
   1764                          }
   1765                          */
   1766                      }
   1767                  }
   1768                  break;
   1769              default:
   1770                  ErrorStatus = E_UNKNOWN_COMMAND;
   \                     ??ReceiveData_3:
   \   0000042C   0160A0E3           MOV      R6,#+1
   1771                  break;
   1772              }
   1773              return (ErrorStatus);
   \                     ??ReceiveData_13:
   \   00000430   0600A0E1           MOV      R0,R6
   \   00000434   38D08DE2           ADD      SP,SP,#+56
   \   00000438   ........           B        ?Subroutine47
   1774          }
   1775          

   \                                 In segment CODE, align 4, keep-with-next
   1776          int PROTanksystemUnit::SendData(U16 cmd) {
   \                     ??SendData:
   \   00000000   F0402DE9           PUSH     {R4-R7,LR}
   1777              int ErrorStatus = E_OK;
   1778              switch (cmd) {
   \   00000004   ........           LDR      R5,??DataTable90  ;; Master
   \   00000008   4ADF4DE2           SUB      SP,SP,#+296
   \   0000000C   0060A0E1           MOV      R6,R0
   \   00000010   9C4086E2           ADD      R4,R6,#+156
   \   00000014   0E00A0E3           MOV      R0,#+14
   \   00000018   FF20A0E3           MOV      R2,#+255
   \   0000001C   0070A0E3           MOV      R7,#+0
   \   00000020   651051E2           SUBS     R1,R1,#+101
   \   00000024   0200000A           BEQ      ??SendData_1
   \   00000028   011051E2           SUBS     R1,R1,#+1
   \   0000002C   AD00000A           BEQ      ??SendData_2
   \   00000030   060100EA           B        ??SendData_3
   1779              case CMD_GENERIC_REALTIME_DATA:
   1780                  {
   1781                      QueueANPRO10_COMMAND_2700 Cmd;
   1782                      Cmd.TxInfo.Port      = NULL;
   \                     ??SendData_1:
   \   00000034   5C708DE5           STR      R7,[SP, #+92]
   1783                      Cmd.TxInfo.rxAddr    = DEVICE_BROADCAST_ADDR;
   \   00000038   6020CDE5           STRB     R2,[SP, #+96]
   1784                      Cmd.TxInfo.rxId      = DEVICE_BROADCAST_TXU;
   \   0000003C   6100CDE5           STRB     R0,[SP, #+97]
   1785                      Cmd.Data.ObjectId    = IDNumber;
   \   00000040   000094E5           LDR      R0,[R4, #+0]
   1786                      Cmd.Data.ndb         = sizeof(Cmd) - sizeof(QueueANPRO10_CommandHeading);
   \   00000044   C010A0E3           MOV      R1,#+192
   \   00000048   6600CDE5           STRB     R0,[SP, #+102]
   \   0000004C   2004A0E1           LSR      R0,R0,#+8
   \   00000050   6700CDE5           STRB     R0,[SP, #+103]
   \   00000054   2004A0E1           LSR      R0,R0,#+8
   \   00000058   6800CDE5           STRB     R0,[SP, #+104]
   \   0000005C   2004A0E1           LSR      R0,R0,#+8
   \   00000060   6900CDE5           STRB     R0,[SP, #+105]
   \   00000064   B416CDE1           STRH     R1,[SP, #+100]
   1787                      Cmd.Data.CommandNo   = CMD_GENERIC_REALTIME_DATA;
   \   00000068   6510A0E3           MOV      R1,#+101
   \   0000006C   B216CDE1           STRH     R1,[SP, #+98]
   1788                      for (int i = 0; i < MAX_TCU_AD_CHANNELS; i++) {
   \   00000070   0000A0E3           MOV      R0,#+0
   1789                          Cmd.Data.ADResults[i] = ADResults[i];
   \                     ??SendData_4:
   \   00000074   0010A0E3           MOV      R1,#+0
   \                     ??SendData_5:
   \   00000078   003186E0           ADD      R3,R6,R0, LSL #+2
   \   0000007C   5F3F83E2           ADD      R3,R3,#+380
   \   00000080   0330D1E7           LDRB     R3,[R1, +R3]
   \   00000084   5C208DE2           ADD      R2,SP,#+92
   \   00000088   002182E0           ADD      R2,R2,R0, LSL #+2
   \   0000008C   0E2082E2           ADD      R2,R2,#+14
   \   00000090   0230C1E7           STRB     R3,[R1, +R2]
   \   00000094   011081E2           ADD      R1,R1,#+1
   \   00000098   040051E3           CMP      R1,#+4
   \   0000009C   F5FFFFBA           BLT      ??SendData_5
   1790                      }
   \   000000A0   010080E2           ADD      R0,R0,#+1
   \   000000A4   080050E3           CMP      R0,#+8
   \   000000A8   F1FFFFBA           BLT      ??SendData_4
   1791                      for (int i = 0; i < MAX_COM_PORTS; i++) {
   \   000000AC   0000A0E3           MOV      R0,#+0
   1792                          Cmd.Data.RxLoad[i] = RxLoad[i];
   \                     ??SendData_6:
   \   000000B0   0030A0E3           MOV      R3,#+0
   \   000000B4   5C108DE2           ADD      R1,SP,#+92
   \   000000B8   001181E0           ADD      R1,R1,R0, LSL #+2
   \   000000BC   002186E0           ADD      R2,R6,R0, LSL #+2
   \   000000C0   2E7081E2           ADD      R7,R1,#+46
   \                     ??SendData_7:
   \   000000C4   67CF82E2           ADD      R12,R2,#+412
   \   000000C8   0CC0D3E7           LDRB     R12,[R3, +R12]
   \   000000CC   07C0C3E7           STRB     R12,[R3, +R7]
   \   000000D0   013083E2           ADD      R3,R3,#+1
   \   000000D4   040053E3           CMP      R3,#+4
   \   000000D8   F9FFFFBA           BLT      ??SendData_7
   1793                          Cmd.Data.TxLoad[i] = TxLoad[i];
   \   000000DC   0030A0E3           MOV      R3,#+0
   \   000000E0   4A7081E2           ADD      R7,R1,#+74
   \                     ??SendData_8:
   \   000000E4   6ECF82E2           ADD      R12,R2,#+440
   \   000000E8   0CC0D3E7           LDRB     R12,[R3, +R12]
   \   000000EC   07C0C3E7           STRB     R12,[R3, +R7]
   \   000000F0   013083E2           ADD      R3,R3,#+1
   \   000000F4   040053E3           CMP      R3,#+4
   \   000000F8   F9FFFFBA           BLT      ??SendData_8
   1794                          Cmd.Data.TxCnt[i] = TxCnt[i];
   \   000000FC   D43192E5           LDR      R3,[R2, #+468]
   1795                          Cmd.Data.RxCnt[i] = RxCnt[i];
   1796                      }
   \   00000100   010080E2           ADD      R0,R0,#+1
   \   00000104   6630C1E5           STRB     R3,[R1, #+102]
   \   00000108   2334A0E1           LSR      R3,R3,#+8
   \   0000010C   6730C1E5           STRB     R3,[R1, #+103]
   \   00000110   2334A0E1           LSR      R3,R3,#+8
   \   00000114   6830C1E5           STRB     R3,[R1, #+104]
   \   00000118   2334A0E1           LSR      R3,R3,#+8
   \   0000011C   6930C1E5           STRB     R3,[R1, #+105]
   \   00000120   F02192E5           LDR      R2,[R2, #+496]
   \   00000124   070050E3           CMP      R0,#+7
   \   00000128   8220C1E5           STRB     R2,[R1, #+130]
   \   0000012C   2224A0E1           LSR      R2,R2,#+8
   \   00000130   8320C1E5           STRB     R2,[R1, #+131]
   \   00000134   2224A0E1           LSR      R2,R2,#+8
   \   00000138   8420C1E5           STRB     R2,[R1, #+132]
   \   0000013C   2224A0E1           LSR      R2,R2,#+8
   \   00000140   8520C1E5           STRB     R2,[R1, #+133]
   \   00000144   D9FFFFBA           BLT      ??SendData_6
   1797                      Cmd.Data.RunningHours     = RunningHours;
   \   00000148   0000A0E3           MOV      R0,#+0
   \   0000014C   FA108DE2           ADD      R1,SP,#+250
   \                     ??SendData_9:
   \   00000150   662F84E2           ADD      R2,R4,#+408
   \   00000154   0220D0E7           LDRB     R2,[R0, +R2]
   \   00000158   0120C0E7           STRB     R2,[R0, +R1]
   \   0000015C   010080E2           ADD      R0,R0,#+1
   \   00000160   040050E3           CMP      R0,#+4
   \   00000164   F9FFFFBA           BLT      ??SendData_9
   1798                      Cmd.Data.RxErrId          = RxErrId;
   \   00000168   A80394E5           LDR      R0,[R4, #+936]
   \   0000016C   FE00CDE5           STRB     R0,[SP, #+254]
   \   00000170   2004A0E1           LSR      R0,R0,#+8
   \   00000174   FF00CDE5           STRB     R0,[SP, #+255]
   \   00000178   2004A0E1           LSR      R0,R0,#+8
   \   0000017C   0001CDE5           STRB     R0,[SP, #+256]
   \   00000180   2004A0E1           LSR      R0,R0,#+8
   \   00000184   0101CDE5           STRB     R0,[SP, #+257]
   1799                      Cmd.Data.RxErrCmd         = RxErrCmd;
   \   00000188   AC0394E5           LDR      R0,[R4, #+940]
   \   0000018C   0201CDE5           STRB     R0,[SP, #+258]
   \   00000190   2004A0E1           LSR      R0,R0,#+8
   \   00000194   0301CDE5           STRB     R0,[SP, #+259]
   \   00000198   2004A0E1           LSR      R0,R0,#+8
   \   0000019C   0401CDE5           STRB     R0,[SP, #+260]
   \   000001A0   2004A0E1           LSR      R0,R0,#+8
   \   000001A4   0501CDE5           STRB     R0,[SP, #+261]
   1800                      Cmd.Data.RxErrMsg         = RxErrMsg;
   \   000001A8   B00394E5           LDR      R0,[R4, #+944]
   \   000001AC   0601CDE5           STRB     R0,[SP, #+262]
   \   000001B0   2004A0E1           LSR      R0,R0,#+8
   \   000001B4   0701CDE5           STRB     R0,[SP, #+263]
   \   000001B8   2004A0E1           LSR      R0,R0,#+8
   \   000001BC   0801CDE5           STRB     R0,[SP, #+264]
   \   000001C0   2004A0E1           LSR      R0,R0,#+8
   \   000001C4   0901CDE5           STRB     R0,[SP, #+265]
   1801                      Cmd.Data.RxErrCnt         = RxErrCnt;
   \   000001C8   B40394E5           LDR      R0,[R4, #+948]
   \   000001CC   0A01CDE5           STRB     R0,[SP, #+266]
   \   000001D0   2004A0E1           LSR      R0,R0,#+8
   \   000001D4   0B01CDE5           STRB     R0,[SP, #+267]
   \   000001D8   2004A0E1           LSR      R0,R0,#+8
   \   000001DC   0C01CDE5           STRB     R0,[SP, #+268]
   \   000001E0   2004A0E1           LSR      R0,R0,#+8
   \   000001E4   0D01CDE5           STRB     R0,[SP, #+269]
   1802                      Cmd.Data.RxErrTime        = RxErrTime;
   \   000001E8   B80394E5           LDR      R0,[R4, #+952]
   \   000001EC   0E01CDE5           STRB     R0,[SP, #+270]
   \   000001F0   2004A0E1           LSR      R0,R0,#+8
   \   000001F4   0F01CDE5           STRB     R0,[SP, #+271]
   \   000001F8   2004A0E1           LSR      R0,R0,#+8
   \   000001FC   1001CDE5           STRB     R0,[SP, #+272]
   \   00000200   2004A0E1           LSR      R0,R0,#+8
   \   00000204   1101CDE5           STRB     R0,[SP, #+273]
   1803                      Cmd.Data.IOLoadDelay      = IOLoadDelay;
   \   00000208   9C0194E5           LDR      R0,[R4, #+412]
   \   0000020C   1201CDE5           STRB     R0,[SP, #+274]
   \   00000210   2004A0E1           LSR      R0,R0,#+8
   \   00000214   1301CDE5           STRB     R0,[SP, #+275]
   \   00000218   2004A0E1           LSR      R0,R0,#+8
   \   0000021C   1401CDE5           STRB     R0,[SP, #+276]
   \   00000220   2004A0E1           LSR      R0,R0,#+8
   \   00000224   1501CDE5           STRB     R0,[SP, #+277]
   1804                      Cmd.Data.SysInfoRxFailCnt = SysInfoRxFailCnt;
   \   00000228   BC0394E5           LDR      R0,[R4, #+956]
   \   0000022C   1601CDE5           STRB     R0,[SP, #+278]
   \   00000230   2004A0E1           LSR      R0,R0,#+8
   \   00000234   1701CDE5           STRB     R0,[SP, #+279]
   \   00000238   2004A0E1           LSR      R0,R0,#+8
   \   0000023C   1801CDE5           STRB     R0,[SP, #+280]
   \   00000240   2004A0E1           LSR      R0,R0,#+8
   \   00000244   1901CDE5           STRB     R0,[SP, #+281]
   1805          
   1806                      Cmd.Data.RawLoad          = RawLoad;
   \   00000248   0000A0E3           MOV      R0,#+0
   \                     ??SendData_10:
   \   0000024C   692F84E2           ADD      R2,R4,#+420
   \   00000250   0220D0E7           LDRB     R2,[R0, +R2]
   \   00000254   1A108DE2           ADD      R1,SP,#+26
   \   00000258   401F81E2           ADD      R1,R1,#+256
   \   0000025C   0120C0E7           STRB     R2,[R0, +R1]
   \   00000260   010080E2           ADD      R0,R0,#+1
   \   00000264   040050E3           CMP      R0,#+4
   \   00000268   F7FFFFBA           BLT      ??SendData_10
   1807                      Cmd.Data.AvgLoad          = AvgLoad;
   \   0000026C   0000A0E3           MOV      R0,#+0
   \                     ??SendData_11:
   \   00000270   6A2F84E2           ADD      R2,R4,#+424
   \   00000274   0220D0E7           LDRB     R2,[R0, +R2]
   \   00000278   1E108DE2           ADD      R1,SP,#+30
   \   0000027C   401F81E2           ADD      R1,R1,#+256
   \   00000280   0120C0E7           STRB     R2,[R0, +R1]
   \   00000284   010080E2           ADD      R0,R0,#+1
   \   00000288   040050E3           CMP      R0,#+4
   \   0000028C   F7FFFFBA           BLT      ??SendData_11
   1808                      Cmd.Data.MaxLoad          = MaxLoad;
   \   00000290   0000A0E3           MOV      R0,#+0
   \                     ??SendData_12:
   \   00000294   6B2F84E2           ADD      R2,R4,#+428
   \   00000298   0220D0E7           LDRB     R2,[R0, +R2]
   \   0000029C   22108DE2           ADD      R1,SP,#+34
   \   000002A0   401F81E2           ADD      R1,R1,#+256
   \   000002A4   0120C0E7           STRB     R2,[R0, +R1]
   \   000002A8   010080E2           ADD      R0,R0,#+1
   \   000002AC   040050E3           CMP      R0,#+4
   \   000002B0   F7FFFFBA           BLT      ??SendData_12
   1809                      bool hasSent;
   1810                      if (Master) {
   \   000002B4   0000D5E5           LDRB     R0,[R5, #+0]
   \   000002B8   000050E3           CMP      R0,#+0
   \   000002BC   5C008DE2           ADD      R0,SP,#+92
   \   000002C0   0100000A           BEQ      ??SendData_13
   1811                          hasSent = ANPRO10SendNormal(&Cmd);
   \   000002C4   ........           _BLF     ??ANPRO10SendNormal,??ANPRO10SendNormal??rA
   \   000002C8   000000EA           B        ??SendData_14
   1812                      } else {
   1813                          hasSent = ANPRO10SendUrgent(&Cmd);
   \                     ??SendData_13:
   \   000002CC   ........           _BLF     ??ANPRO10SendUrgent,??ANPRO10SendUrgent??rA
   1814                      }
   1815                      if (!hasSent) ErrorStatus =  E_QUEUE_FULL;
   \                     ??SendData_14:
   \   000002D0   000050E3           CMP      R0,#+0
   \   000002D4   0100001A           BNE      ??SendData_15
   \                     ??SendData_16:
   \   000002D8   0300A0E3           MOV      R0,#+3
   \   000002DC   5C0000EA           B        ??SendData_17
   1816                      else ErrorStatus =  E_OK;
   \                     ??SendData_15:
   \   000002E0   0000A0E3           MOV      R0,#+0
   \   000002E4   5A0000EA           B        ??SendData_17
   1817                  }
   1818                  break;
   1819              case CMD_GENERIC_STATIC_DATA:
   1820                  {
   1821                      QueueANPRO10_COMMAND_2701 Cmd;
   1822                      Cmd.TxInfo.Port    = NULL;
   \                     ??SendData_2:
   \   000002E8   00708DE5           STR      R7,[SP, #+0]
   1823                      Cmd.TxInfo.rxAddr  = DEVICE_BROADCAST_ADDR;
   \   000002EC   0420CDE5           STRB     R2,[SP, #+4]
   1824                      Cmd.TxInfo.rxId    = DEVICE_BROADCAST_TXU;
   \   000002F0   0500CDE5           STRB     R0,[SP, #+5]
   1825                      Cmd.Data.ObjectId  = IDNumber;
   \   000002F4   000094E5           LDR      R0,[R4, #+0]
   1826                      Cmd.Data.ndb       = sizeof(Cmd) - sizeof(QueueANPRO10_CommandHeading);
   \   000002F8   5010A0E3           MOV      R1,#+80
   \   000002FC   0A00CDE5           STRB     R0,[SP, #+10]
   \   00000300   2004A0E1           LSR      R0,R0,#+8
   \   00000304   0B00CDE5           STRB     R0,[SP, #+11]
   \   00000308   2004A0E1           LSR      R0,R0,#+8
   \   0000030C   0C00CDE5           STRB     R0,[SP, #+12]
   \   00000310   2004A0E1           LSR      R0,R0,#+8
   \   00000314   0D00CDE5           STRB     R0,[SP, #+13]
   \   00000318   B810CDE1           STRH     R1,[SP, #+8]
   1827                      Cmd.Data.CommandNo = CMD_GENERIC_STATIC_DATA;
   \   0000031C   6610A0E3           MOV      R1,#+102
   \   00000320   B610CDE1           STRH     R1,[SP, #+6]
   1828                      strcpy(Cmd.Data.ActualSystemID, ActualSystemID);
   \   00000324   E40081E2           ADD      R0,R1,#+228
   \   00000328   061080E0           ADD      R1,R0,R6
   \   0000032C   16008DE2           ADD      R0,SP,#+22
   \   00000330   ........           _BLF     strcpy,??strcpy??rA
   1829                      Cmd.Data.ActualDataVersion                 = ActualDataVersion;
   \   00000334   B21CD4E1           LDRH     R1,[R4, #+194]
   \   00000338   BA12CDE1           STRH     R1,[SP, #+42]
   1830                      Cmd.Data.ActualProgramVersion.Build        = ActualProgramVersion.Build;
   \   0000033C   C710D4E5           LDRB     R1,[R4, #+199]
   \   00000340   1110CDE5           STRB     R1,[SP, #+17]
   1831                      Cmd.Data.ActualProgramVersion.NewFunctions = ActualProgramVersion.NewFunctions;
   \   00000344   C610D4E5           LDRB     R1,[R4, #+198]
   \   00000348   1010CDE5           STRB     R1,[SP, #+16]
   1832                      Cmd.Data.ActualProgramVersion.PacketFormat = ActualProgramVersion.PacketFormat;
   \   0000034C   C510D4E5           LDRB     R1,[R4, #+197]
   \   00000350   0F10CDE5           STRB     R1,[SP, #+15]
   1833                      Cmd.Data.ActualProgramVersion.ProdNo       = ActualProgramVersion.ProdNo;
   \   00000354   C410D4E5           LDRB     R1,[R4, #+196]
   \   00000358   0E10CDE5           STRB     R1,[SP, #+14]
   1834                      Cmd.Data.ActualBootVersion.Build           = ActualBootVersion.Build;
   \   0000035C   CB10D4E5           LDRB     R1,[R4, #+203]
   \   00000360   1510CDE5           STRB     R1,[SP, #+21]
   1835                      Cmd.Data.ActualBootVersion.NewFunctions    = ActualBootVersion.NewFunctions;
   \   00000364   CA10D4E5           LDRB     R1,[R4, #+202]
   \   00000368   1410CDE5           STRB     R1,[SP, #+20]
   1836                      Cmd.Data.ActualBootVersion.PacketFormat    = ActualBootVersion.PacketFormat;
   \   0000036C   C910D4E5           LDRB     R1,[R4, #+201]
   \   00000370   1310CDE5           STRB     R1,[SP, #+19]
   1837                      Cmd.Data.ActualBootVersion.ProdNo          = ActualBootVersion.ProdNo;
   \   00000374   C810D4E5           LDRB     R1,[R4, #+200]
   \   00000378   1210CDE5           STRB     R1,[SP, #+18]
   1838                      Cmd.Data.ProgrDate                         = ProgrDate;
   \   0000037C   CC1094E5           LDR      R1,[R4, #+204]
   \   00000380   2C108DE5           STR      R1,[SP, #+44]
   1839                      Cmd.Data.UpdateTime                        = UpdateTime;
   \   00000384   D01094E5           LDR      R1,[R4, #+208]
   \   00000388   30108DE5           STR      R1,[SP, #+48]
   1840                      Cmd.Data.ProgramType                       = ProgramType;
   \   0000038C   AC10D4E5           LDRB     R1,[R4, #+172]
   \   00000390   3410CDE5           STRB     R1,[SP, #+52]
   1841                      Cmd.Data.HWDeviceId                        = HWDeviceId;
   \   00000394   8C12D4E5           LDRB     R1,[R4, #+652]
   \   00000398   3510CDE5           STRB     R1,[SP, #+53]
   1842                      Cmd.Data.LastErrAddress                    = LastErrAddr;
   \   0000039C   740194E5           LDR      R0,[R4, #+372]
   \   000003A0   3A00CDE5           STRB     R0,[SP, #+58]
   \   000003A4   2004A0E1           LSR      R0,R0,#+8
   \   000003A8   3B00CDE5           STRB     R0,[SP, #+59]
   \   000003AC   2004A0E1           LSR      R0,R0,#+8
   \   000003B0   3C00CDE5           STRB     R0,[SP, #+60]
   \   000003B4   2004A0E1           LSR      R0,R0,#+8
   \   000003B8   3D00CDE5           STRB     R0,[SP, #+61]
   1843                      Cmd.Data.LastOSError                       = LastOSErr;
   \   000003BC   7001D4E5           LDRB     R0,[R4, #+368]
   \   000003C0   3600CDE5           STRB     R0,[SP, #+54]
   \   000003C4   0000A0E3           MOV      R0,#+0
   \   000003C8   3700CDE5           STRB     R0,[SP, #+55]
   \   000003CC   3800CDE5           STRB     R0,[SP, #+56]
   \   000003D0   3900CDE5           STRB     R0,[SP, #+57]
   1844                      Cmd.Data.FlashErrorStatus                  = FlashErrStatus;
   \   000003D4   7801D4E5           LDRB     R0,[R4, #+376]
   \   000003D8   3E00CDE5           STRB     R0,[SP, #+62]
   \   000003DC   0700A0E1           MOV      R0,R7
   \   000003E0   3F00CDE5           STRB     R0,[SP, #+63]
   \   000003E4   4000CDE5           STRB     R0,[SP, #+64]
   \   000003E8   4100CDE5           STRB     R0,[SP, #+65]
   1845                      strncpy(Cmd.Data.LastOSErrorTask, LastOSErrTask.c_str(), MAX_ANPRO10_NAME_LENGTH - 1);
   \   000003EC   860F86E2           ADD      R0,R6,#+536
   \   000003F0   ........           _BLF     ??c_str,??c_str??rA
   \   000003F4   1320A0E3           MOV      R2,#+19
   \   000003F8   0010A0E1           MOV      R1,R0
   \   000003FC   42008DE2           ADD      R0,SP,#+66
   \   00000400   ........           _BLF     strncpy,??strncpy??rA
   1846                      Cmd.Data.LastOSErrorTask[MAX_ANPRO10_NAME_LENGTH - 1] = 0;
   \   00000404   5570CDE5           STRB     R7,[SP, #+85]
   1847                      Cmd.Data.NumberOfTasks = NumberOfTasks;
   \   00000408   000A94E5           LDR      R0,[R4, #+2560]
   \   0000040C   5600CDE5           STRB     R0,[SP, #+86]
   \   00000410   2004A0E1           LSR      R0,R0,#+8
   \   00000414   5700CDE5           STRB     R0,[SP, #+87]
   \   00000418   2004A0E1           LSR      R0,R0,#+8
   \   0000041C   5800CDE5           STRB     R0,[SP, #+88]
   \   00000420   2004A0E1           LSR      R0,R0,#+8
   \   00000424   5900CDE5           STRB     R0,[SP, #+89]
   1848                      /*
   1849                      for (int i = 0; i < NumberOfTasks && i < MAX_ANPRO10_NUMBER_OF_TASKS; i++) {
   1850                          strncpy(Cmd.Data.TaskNames[i], TaskName[i].c_str(), MAX_ANPRO10_NAME_LENGTH - 1);
   1851                          Cmd.Data.TaskNames[i][MAX_ANPRO10_NAME_LENGTH - 1] = 0;
   1852                          Cmd.Data.StackUsed[i]       = StackUsed[i];
   1853                          Cmd.Data.RawPerformance[i]  = RawPerformance[i];
   1854                          Cmd.Data.StackSpace[i]      = StackSpace[i];
   1855                      }
   1856                      */
   1857                      bool hasSent;
   1858                      if (Master) {
   \   00000428   0000D5E5           LDRB     R0,[R5, #+0]
   \   0000042C   000050E3           CMP      R0,#+0
   \   00000430   0D00A0E1           MOV      R0,SP
   \   00000434   0100000A           BEQ      ??SendData_18
   1859                          hasSent = ANPRO10SendNormal(&Cmd);
   \   00000438   ........           _BLF     ??ANPRO10SendNormal,??ANPRO10SendNormal??rA
   \   0000043C   000000EA           B        ??SendData_19
   1860                      } else {
   1861                          hasSent = ANPRO10SendUrgent(&Cmd);
   \                     ??SendData_18:
   \   00000440   ........           _BLF     ??ANPRO10SendUrgent,??ANPRO10SendUrgent??rA
   1862                      }
   1863                      if (!hasSent) ErrorStatus =  E_QUEUE_FULL;
   \                     ??SendData_19:
   \   00000444   000050E3           CMP      R0,#+0
   \   00000448   A2FFFF0A           BEQ      ??SendData_16
   1864                      else ErrorStatus =  E_OK;
   \   0000044C   A3FFFFEA           B        ??SendData_15
   1865                  }
   1866                  break;
   1867              default:
   1868                  ErrorStatus =  E_UNKNOWN_COMMAND;
   \                     ??SendData_3:
   \   00000450   0100A0E3           MOV      R0,#+1
   1869                  break;
   1870              }
   1871              return (ErrorStatus);
   \                     ??SendData_17:
   \   00000454   4ADF8DE2           ADD      SP,SP,#+296
   \   00000458   ........           B        ?Subroutine47
   1872          }
   1873          

   \                                 In segment CODE, align 4, keep-with-next
   1874          ValueList* PROTanksystemUnit::GetValueInfoTableStatic(int &Entries, int Index, int HWDevId) {
   1875              ValueList *Ptr = NULL;
   1876              switch (HWDevId) {
   \                     ??GetValueInfoTableStatic:
   \   00000000   4C309FE5           LDR      R3,??GetValueInfoTableStatic_2  ;; ??TCU_R1UnitValueList
   \   00000004   0010A0E3           MOV      R1,#+0
   \   00000008   030052E3           CMP      R2,#+3
   \   0000000C   0E00008A           BHI      ??GetValueInfoTableStatic_3
   \   00000010   01CF8FE2           ADR      R12,??GetValueInfoTableStatic_1
   \   00000014   02C0DCE7           LDRB     R12,[R12, R2]
   \   00000018   0CF18FE0           ADD      PC,PC,R12, LSL #+2
   \                     ??GetValueInfoTableStatic_1:
   \   0000001C   04080000           DC8      +4,+8,+0,+0
   1877              case TDU_R1:
   1878              case TDU_R2:
   1879                  Entries = NELEMENTS(TDUUnitValueList);
   \                     ??GetValueInfoTableStatic_4:
   \   00000020   1610A0E3           MOV      R1,#+22
   \   00000024   001080E5           STR      R1,[R0, #+0]
   1880                  Ptr     = TDUUnitValueList;
   \   00000028   AB1F83E2           ADD      R1,R3,#+684
   \   0000002C   060000EA           B        ??GetValueInfoTableStatic_3
   1881                  break;
   1882              case TCU_R1:
   1883                  Entries = NELEMENTS(TCU_R1UnitValueList);
   \                     ??GetValueInfoTableStatic_5:
   \   00000030   1C10A0E3           MOV      R1,#+28
   \   00000034   001080E5           STR      R1,[R0, #+0]
   1884                  Ptr     = TCU_R1UnitValueList;
   \   00000038   0310A0E1           MOV      R1,R3
   \   0000003C   020000EA           B        ??GetValueInfoTableStatic_3
   1885                  break;
   1886              case TCU_R2:
   1887                  Entries = NELEMENTS(TCU_R2UnitValueList);
   \                     ??GetValueInfoTableStatic_6:
   \   00000040   1D10A0E3           MOV      R1,#+29
   \   00000044   001080E5           STR      R1,[R0, #+0]
   1888                  Ptr     = TCU_R2UnitValueList;
   \   00000048   541F83E2           ADD      R1,R3,#+336
   1889                  break;
   1890              }
   1891              return (Ptr);
   \                     ??GetValueInfoTableStatic_3:
   \   0000004C   0100A0E1           MOV      R0,R1
   \   00000050   1EFF2FE1           BX       LR               ;; return
   \                     ??GetValueInfoTableStatic_2:
   \   00000054   ........           DC32     ??TCU_R1UnitValueList
   1892          }
   1893          

   \                                 In segment CODE, align 4, keep-with-next
   1894          ValueList* PROTanksystemUnit::GetValueInfoTable(int &Entries, int Index) {
   \                     ??GetValueInfoTable:
   \   00000000   00402DE9           PUSH     {LR}
   \   00000004   0130A0E1           MOV      R3,R1
   \   00000008   0210A0E1           MOV      R1,R2
   1895              return GetValueInfoTableStatic(Entries, Index, HWDeviceId);
   \   0000000C   2823D0E5           LDRB     R2,[R0, #+808]
   \   00000010   0300A0E1           MOV      R0,R3
   \   00000014   ........           BL       ??GetValueInfoTableStatic
   \   00000018   ........           B        ?Subroutine48
   1896          }
   1897          
   1898          ///////////////////////////////////////////////////////////////////
   1899          //
   1900          //  Checks all devices connected to the TCU
   1901          //  only to be started on master
   1902          //
   1903          ///////////////////////////////////////////////////////////////////

   \                                 In segment CODE, align 4, keep-with-next
   1904          void PROTanksystemUnit::CheckSysInfo(void) {
   \                     ??CheckSysInfo:
   \   00000000   F0472DE9           PUSH     {R4-R10,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   1905          #ifndef WIN32
   1906              // A delay so Settings are read to be sure that RequestConfig is set correctly
   1907              OS_Delay(10*1000);
   \   00000008   1000A0E3           MOV      R0,#+16
   \   0000000C   9C0D80E3           ORR      R0,R0,#0x2700
   \   00000010   ........           _BLF     OS_Delay,??OS_Delay??rA
   \   00000014   9FAFA0E3           MOV      R10,#+636
   \   00000018   0F0000EA           B        ??CheckSysInfo_4
   1908              while ( true ) {
   1909                  int NextTime = OS_Time + 30*1000;
   1910                  for ( int ComIndex = 0; ComIndex < MAX_COM_PORTS; ComIndex++ ) {
   1911                      TSNUart *Port = TSNUart::Channels[ComIndex];
   1912                      if ( Port ) {
   1913                          switch ( Port->Device ) {
   1914                              case C_UART_DEVICE_PC :
   1915                              case C_UART_DEVICE_TCU:
   1916                              case C_UART_DEVICE_TDU:
   1917                              {
   1918                                  set<PRogramObjectBase*>::iterator pBIt;
   1919                                  for ( pBIt=UnitPortList[ComIndex].begin(); pBIt!=UnitPortList[ComIndex].end(); pBIt++ ) {
   1920                                      ((PROTanksystemUnit*)(*pBIt))->CheckSysInfo(Port);
   \                     ??CheckSysInfo_5:
   \   0000001C   100099E5           LDR      R0,[R9, #+16]
   \   00000020   0710A0E1           MOV      R1,R7
   \   00000024   ........           BL       ??CheckSysInfo_2
   1921                                      OS_Delay(2000);
   \   00000028   7D0EA0E3           MOV      R0,#+2000
   \   0000002C   ........           _BLF     OS_Delay,??OS_Delay??rA
   1922                                  }
   \   00000030   0900A0E1           MOV      R0,R9
   \   00000034   ........           _BLF     ??_IncP,??_IncP??rA
   \   00000038   0090A0E1           MOV      R9,R0
   \                     ??CheckSysInfo_6:
   \   0000003C   08008AE0           ADD      R0,R10,R8
   \   00000040   000059E1           CMP      R9,R0
   \   00000044   F4FFFF1A           BNE      ??CheckSysInfo_5
   \                     ??CheckSysInfo_7:
   \   00000048   016086E2           ADD      R6,R6,#+1
   \   0000004C   070056E3           CMP      R6,#+7
   \   00000050   070000BA           BLT      ??CheckSysInfo_8
   1923                              }
   1924                              break;
   1925                              default:
   1926                              break;
   1927                          }
   1928                      }
   1929                  }
   1930                  OS_DelayUntil(NextTime);
   \   00000054   0500A0E1           MOV      R0,R5
   \   00000058   ........           _BLF     OS_DelayUntil,??OS_DelayUntil??rA
   \                     ??CheckSysInfo_4:
   \   0000005C   54009FE5           LDR      R0,??CheckSysInfo_9  ;; OS_Time
   \   00000060   3010A0E3           MOV      R1,#+48
   \   00000064   000090E5           LDR      R0,[R0, #+0]
   \   00000068   751C81E3           ORR      R1,R1,#0x7500
   \   0000006C   005081E0           ADD      R5,R1,R0
   \   00000070   0060A0E3           MOV      R6,#+0
   \                     ??CheckSysInfo_8:
   \   00000074   ........           LDR      R0,??DataTable84  ;; ??Channels
   \   00000078   067190E7           LDR      R7,[R0, +R6, LSL #+2]
   \   0000007C   000057E3           CMP      R7,#+0
   \   00000080   F0FFFF0A           BEQ      ??CheckSysInfo_7
   \   00000084   A80097E5           LDR      R0,[R7, #+168]
   \   00000088   610040E2           SUB      R0,R0,#+97
   \   0000008C   7C0D40E2           SUB      R0,R0,#+7936
   \   00000090   020050E3           CMP      R0,#+2
   \   00000094   EBFFFF8A           BHI      ??CheckSysInfo_7
   \   00000098   011F8FE2           ADR      R1,??CheckSysInfo_1
   \   0000009C   D01091E1           LDRSB    R1,[R1, R0]
   \   000000A0   01F18FE0           ADD      PC,PC,R1, LSL #+2
   \                     ??CheckSysInfo_1:
   \   000000A4   00000000           DC8      +0,+0,+0,+0
   \                     ??CheckSysInfo_10:
   \   000000A8   1800A0E3           MOV      R0,#+24
   \   000000AC   904628E0           MLA      R8,R0,R6,R4
   \   000000B0   08909AE7           LDR      R9,[R10, +R8]
   \   000000B4   E0FFFFEA           B        ??CheckSysInfo_6
   \                     ??CheckSysInfo_9:
   \   000000B8   ........           DC32     OS_Time
   1931              }
   1932          #endif
   1933          }
   1934          
   1935          

   \                                 In segment CODE, align 4, keep-with-next
   1936          void PROTanksystemUnit::GetConfigFromTDU(TSNUart *Port) {
   \                     ??GetConfigFromTDU:
   \   00000000   F0412DE9           PUSH     {R4-R8,LR}
   1937              int RetryCnt = 0;
   1938              static bool HasReceived = false;
   1939              static int  TryToRetreiveDataCnt = 0;
   1940          
   1941              if (!HasReceived) {
   \   00000004   ........           LDR      R5,??Subroutine53_0  ;; ??TryToRetreiveDataCnt
   \   00000008   0060A0E1           MOV      R6,R0
   \   0000000C   0400D5E5           LDRB     R0,[R5, #+4]
   \   00000010   0170A0E1           MOV      R7,R1
   \   00000014   0040A0E3           MOV      R4,#+0
   \   00000018   000050E3           CMP      R0,#+0
   \   0000001C   4700001A           BNE      ??GetConfigFromTDU_1
   1942                  // If can not retrieve data, make the config file automatically so that the RequestConfig is removed from the config file.
   1943                  if (TryToRetreiveDataCnt++ > 10) {
   \   00000020   000095E5           LDR      R0,[R5, #+0]
   \   00000024   011080E2           ADD      R1,R0,#+1
   \   00000028   001085E5           STR      R1,[R5, #+0]
   \   0000002C   0B0050E3           CMP      R0,#+11
   \   00000030   130000BA           BLT      ??GetConfigFromTDU_2
   1944                      switch (PROProjectInfo::RequestConfig) {
   \   00000034   ........           LDR      R4,??DataTable100  ;; ??RequestConfig
   \   00000038   000094E5           LDR      R0,[R4, #+0]
   \   0000003C   010050E2           SUBS     R0,R0,#+1
   \   00000040   0400000A           BEQ      ??GetConfigFromTDU_3
   \   00000044   010050E2           SUBS     R0,R0,#+1
   \   00000048   0A00001A           BNE      ??GetConfigFromTDU_4
   1945                      case FLASH_RET_MODE_SETT:
   1946                          SignalSaveSettings(FLASH_SAVE_SETTINGS);
   \   0000004C   0100A0E3           MOV      R0,#+1
   \   00000050   ........           _BLF     ??SignalSaveSettings,??SignalSaveSettings??rA
   \   00000054   070000EA           B        ??GetConfigFromTDU_4
   1947                          break;
   1948                      case FLASH_RET_MODE_CONF:
   1949          #ifdef S2TXU
   1950                          if (OS_IsTask(&SaveConfigTaskHandle)) {
   \                     ??GetConfigFromTDU_3:
   \   00000058   ........           LDR      R5,??Subroutine53_0+0x4  ;; SaveConfigTaskHandle
   \   0000005C   0500A0E1           MOV      R0,R5
   \   00000060   ........           _BLF     OS_IsTask,??OS_IsTask??rA
   \   00000064   000050E3           CMP      R0,#+0
   \   00000068   0300000A           BEQ      ??GetConfigFromTDU_5
   1951                              OS_SignalEvent(FLASH_WRITE_CONFIG_NO_DELAY, &SaveConfigTaskHandle);
   \   0000006C   0510A0E1           MOV      R1,R5
   \   00000070   0200A0E3           MOV      R0,#+2
   \   00000074   ........           _BLF     OS_SignalEvent,??OS_SignalEvent??rA
   1952                          }
   1953          #endif
   1954                          break;
   1955                      }
   1956                      PROProjectInfo::RequestConfig = FLASH_RET_MODE_NONE;
   \                     ??GetConfigFromTDU_4:
   \   00000078   0000A0E3           MOV      R0,#+0
   \                     ??GetConfigFromTDU_5:
   \   0000007C   000084E5           STR      R0,[R4, #+0]
   \   00000080   2E0000EA           B        ??GetConfigFromTDU_1
   1957                  } else {
   1958                      bool SendOK   = ANPRO10SendCommand(Port, Address, UnitID, CMD_REQ_SETTINGS);
   1959                      if (SendOK) {
   \                     ??GetConfigFromTDU_2:
   \   00000084   242396E5           LDR      R2,[R6, #+804]
   \   00000088   2C1396E5           LDR      R1,[R6, #+812]
   \   0000008C   F73EA0E3           MOV      R3,#+3952
   \   00000090   0700A0E1           MOV      R0,R7
   \   00000094   ........           _BLF     ??ANPRO10SendCommand,??ANPRO10SendCommand??rA
   \   00000098   000050E3           CMP      R0,#+0
   \   0000009C   2700000A           BEQ      ??GetConfigFromTDU_1
   1960                          TSN_Delay(2000);
   \   000000A0   ........           LDR      R8,??DataTable86  ;; SendFlashDataInProgress
   \   000000A4   7D0EA0E3           MOV      R0,#+2000
   \   000000A8   ........           _BLF     OS_Delay,??OS_Delay??rA
   1961                          do {
   1962                              TSN_Delay(1000);
   \                     ??GetConfigFromTDU_6:
   \   000000AC   FA0FA0E3           MOV      R0,#+1000
   \   000000B0   ........           _BLF     OS_Delay,??OS_Delay??rA
   1963                          }while (SendFlashDataInProgress && RetryCnt++ < 30);
   \   000000B4   0000D8E5           LDRB     R0,[R8, #+0]
   \   000000B8   000050E3           CMP      R0,#+0
   \   000000BC   0300000A           BEQ      ??GetConfigFromTDU_7
   \   000000C0   0400A0E1           MOV      R0,R4
   \   000000C4   014080E2           ADD      R4,R0,#+1
   \   000000C8   1E0050E3           CMP      R0,#+30
   \   000000CC   F6FFFFBA           BLT      ??GetConfigFromTDU_6
   1964                          if (RetryCnt < 30) {
   \                     ??GetConfigFromTDU_7:
   \   000000D0   1E0054E3           CMP      R4,#+30
   \   000000D4   190000AA           BGE      ??GetConfigFromTDU_1
   1965                              SendOK = ANPRO10SendCommand(Port, Address, UnitID, CMD_REQ_CONFIG);
   1966                              if (SendOK) {
   \   000000D8   242396E5           LDR      R2,[R6, #+804]
   \   000000DC   2C1396E5           LDR      R1,[R6, #+812]
   \   000000E0   6630A0E3           MOV      R3,#+102
   \   000000E4   F03E83E3           ORR      R3,R3,#0xF00
   \   000000E8   0700A0E1           MOV      R0,R7
   \   000000EC   ........           _BLF     ??ANPRO10SendCommand,??ANPRO10SendCommand??rA
   \   000000F0   000050E3           CMP      R0,#+0
   \   000000F4   1100000A           BEQ      ??GetConfigFromTDU_1
   1967                                  RetryCnt = 0;
   \   000000F8   0040A0E3           MOV      R4,#+0
   1968                                  TSN_Delay(2000);
   \   000000FC   7D0EA0E3           MOV      R0,#+2000
   \   00000100   ........           _BLF     OS_Delay,??OS_Delay??rA
   1969                                  do {
   1970                                      TSN_Delay(1000);
   \                     ??GetConfigFromTDU_8:
   \   00000104   FA0FA0E3           MOV      R0,#+1000
   \   00000108   ........           _BLF     OS_Delay,??OS_Delay??rA
   1971                                  }while (SendFlashDataInProgress && RetryCnt++ < 30);
   \   0000010C   0000D8E5           LDRB     R0,[R8, #+0]
   \   00000110   000050E3           CMP      R0,#+0
   \   00000114   0300000A           BEQ      ??GetConfigFromTDU_9
   \   00000118   0400A0E1           MOV      R0,R4
   \   0000011C   014080E2           ADD      R4,R0,#+1
   \   00000120   1E0050E3           CMP      R0,#+30
   \   00000124   F6FFFFBA           BLT      ??GetConfigFromTDU_8
   1972                                  if (RetryCnt < 30) {
   \                     ??GetConfigFromTDU_9:
   \   00000128   1E0054E3           CMP      R4,#+30
   \   0000012C   030000AA           BGE      ??GetConfigFromTDU_1
   1973                                      HasReceived = true;
   \   00000130   0100A0E3           MOV      R0,#+1
   \   00000134   0400C5E5           STRB     R0,[R5, #+4]
   1974          #ifdef S2TXU
   1975                                      RestartIncMsg("TDUConfig");
   \   00000138   ........           LDR      R0,??Subroutine53_0+0x8  ;; `?<Constant "TDUConfig">`
   \   0000013C   ........           _BLF     RestartIncMsg,??RestartIncMsg??rA
   1976          #endif
   1977                                  }
   1978                              }
   1979                          }
   1980                      }
   1981                  }
   1982              }
   1983          }
   \                     ??GetConfigFromTDU_1:
   \   00000140                      REQUIRE ?Subroutine53
   \   00000140                      ;; // Fall through to label ?Subroutine53

   \                                 In segment DATA_Z, align 4, align-sorted
   \                     ??TryToRetreiveDataCnt:
   \   00000000                      DS8 4
   \   00000004                      DS8 1

   \                                 In segment CODE, align 4, keep-with-next
   1984          void PROTanksystemUnit::SysInfoTask(void) {
   1985              PROTanksystemUnit::MySelf->CheckSysInfo();
   \                     ??SysInfoTask:
   \   00000000   ........           LDR      R0,??DataTable87  ;; ??TanksystemUnitSet + 48
   \   00000004   00402DE9           PUSH     {LR}
   \   00000008   000090E5           LDR      R0,[R0, #+0]
   \   0000000C   ........           BL       ??CheckSysInfo
   1986          }
   \   00000010   ........           B        ?Subroutine48
   1987          

   \                                 In segment CODE, align 4, keep-with-next
   1988          PROTanksystemUnit* PROTanksystemUnit::FindDevice(TSNUart *Port, int SAddress, int SUnitId) {
   \                     ??FindDevice:
   \   00000000   F0432DE9           PUSH     {R4-R9,LR}
   1989              PROTanksystemUnit *FoundDevice = NULL;
   1990              switch (CurrentDeviceId) {
   \   00000004   ........           LDR      R8,??DataTable101  ;; ??TanksystemUnitSet
   \   00000008   0150A0E1           MOV      R5,R1
   \   0000000C   ........           LDR      R1,??DataTable93  ;; CurrentDeviceId
   \   00000010   0040A0E1           MOV      R4,R0
   \   00000014   F010D1E1           LDRSH    R1,[R1, #+0]
   \   00000018   340098E5           LDR      R0,[R8, #+52]
   \   0000001C   0260A0E1           MOV      R6,R2
   \   00000020   0070A0E3           MOV      R7,#+0
   \   00000024   201041E2           SUB      R1,R1,#+32
   \   00000028   020051E3           CMP      R1,#+2
   \   0000002C   0500009A           BLS      ??FindDevice_1
   \   00000030   101041E2           SUB      R1,R1,#+16
   \   00000034   020051E3           CMP      R1,#+2
   \   00000038   2100009A           BLS      ??FindDevice_2
   \   0000003C   101051E2           SUBS     R1,R1,#+16
   \   00000040   1F00000A           BEQ      ??FindDevice_2
   \   00000044   230000EA           B        ??FindDevice_3
   1991              case DEVICE_TCU       :
   1992              case DEVICE_TCU_R1    :
   1993              case DEVICE_TCU_R2    :
   1994                  if (Master) {
   \                     ??FindDevice_1:
   \   00000048   ........           LDR      R1,??DataTable90  ;; Master
   \   0000004C   0010D1E5           LDRB     R1,[R1, #+0]
   \   00000050   000051E3           CMP      R1,#+0
   \   00000054   1A00000A           BEQ      ??FindDevice_2
   1995                      if (Port) {
   \   00000058   000054E3           CMP      R4,#+0
   \   0000005C   1D00000A           BEQ      ??FindDevice_3
   1996                          if (MyTCUPtr->UnitPortList[Port->PortNumber].empty()) {
   \   00000060   801094E5           LDR      R1,[R4, #+128]
   \   00000064   1820A0E3           MOV      R2,#+24
   \   00000068   920120E0           MLA      R0,R2,R1,R0
   \   0000006C   8C1290E5           LDR      R1,[R0, #+652]
   \   00000070   000051E3           CMP      R1,#+0
   \   00000074   1700000A           BEQ      ??FindDevice_3
   1997                              break;
   1998                          }
   1999                          set<PRogramObjectBase *>::iterator pBIt;
   2000                          for (pBIt = MyTCUPtr->UnitPortList[Port->PortNumber].begin(); pBIt != MyTCUPtr->UnitPortList[Port->PortNumber].end(); pBIt++) {
   \   00000078   9F9FA0E3           MOV      R9,#+636
   \   0000007C   000099E7           LDR      R0,[R9, +R0]
   \                     ??FindDevice_4:
   \   00000080   801094E5           LDR      R1,[R4, #+128]
   \   00000084   343098E5           LDR      R3,[R8, #+52]
   \   00000088   1820A0E3           MOV      R2,#+24
   \   0000008C   923121E0           MLA      R1,R2,R1,R3
   \   00000090   011089E0           ADD      R1,R9,R1
   \   00000094   010050E1           CMP      R0,R1
   \   00000098   0E00000A           BEQ      ??FindDevice_3
   2001                              PROTanksystemUnit *Device = (PROTanksystemUnit *)(*pBIt);
   \   0000009C   101090E5           LDR      R1,[R0, #+16]
   2002                              if (Device) {
   \   000000A0   000051E3           CMP      R1,#+0
   \   000000A4   0400000A           BEQ      ??FindDevice_5
   2003                                  if (Device->Address == SAddress && Device->UnitID == SUnitId) {
   \   000000A8   2C2391E5           LDR      R2,[R1, #+812]
   \   000000AC   050052E1           CMP      R2,R5
   \   000000B0   24239105           LDREQ    R2,[R1, #+804]
   \   000000B4   06005201           CMPEQ    R2,R6
   2004                                      FoundDevice = Device;
   \   000000B8   0170A001           MOVEQ    R7,R1
   2005                                  }
   2006                              }
   2007                          }
   \                     ??FindDevice_5:
   \   000000BC   ........           _BLF     ??_IncP,??_IncP??rA
   \   000000C0   EEFFFFEA           B        ??FindDevice_4
   2008                      }
   2009                      break;
   2010                  }
   2011              case DEVICE_PCSW      :
   2012              case DEVICE_TDU       :
   2013              case DEVICE_TDU_R1    :
   2014              case DEVICE_TDU_R2    :
   2015                  if (MyTCUPtr->Address == SAddress && MyTCUPtr->UnitID == SUnitId) {
   \                     ??FindDevice_2:
   \   000000C4   2C1390E5           LDR      R1,[R0, #+812]
   \   000000C8   050051E1           CMP      R1,R5
   \   000000CC   24139005           LDREQ    R1,[R0, #+804]
   \   000000D0   06005101           CMPEQ    R1,R6
   2016                      FoundDevice = MyTCUPtr;
   \   000000D4   0070A001           MOVEQ    R7,R0
   2017                  }
   2018                  break;
   2019              default:
   2020                  break;
   2021              }
   2022              return (FoundDevice);
   \                     ??FindDevice_3:
   \   000000D8   0700A0E1           MOV      R0,R7
   \   000000DC   ........           B        ?Subroutine50
   2023          }
   2024          

   \                                 In segment CODE, align 4, keep-with-next
   2025          PROTanksystemUnit* PROTanksystemUnit::FindMySelf(int TCUAddress, int TCUPortNo, int MyAddress) {
   \                     ??FindMySelf:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   2026              PROTanksystemUnit *FoundDevice = NULL;
   2027              unsigned tmpId = CreateId(TCUAddress, TCUPortNo, MyAddress);
   2028          
   2029              set<PRogramObjectBase *>::iterator pBIt;
   2030              for (pBIt = TanksystemUnitSet.begin(); !FoundDevice && pBIt != TanksystemUnitSet.end(); pBIt++) {
   \   00000004   ........           LDR      R6,??DataTable102  ;; ??TanksystemUnitSet
   \   00000008   0040A0E3           MOV      R4,#+0
   \   0000000C   ........           BL       ??CreateId
   \   00000010   0050A0E1           MOV      R5,R0
   \   00000014   000096E5           LDR      R0,[R6, #+0]
   \                     ??FindMySelf_1:
   \   00000018   060050E1           CMP      R0,R6
   \   0000001C   0800000A           BEQ      ??FindMySelf_2
   2031                  PROTanksystemUnit *Device = (PROTanksystemUnit *)(*pBIt);
   \   00000020   101090E5           LDR      R1,[R0, #+16]
   2032                  if (Device && Device->IDNumber == tmpId) {
   \   00000024   000051E3           CMP      R1,#+0
   \   00000028   0200000A           BEQ      ??FindMySelf_3
   \   0000002C   9C2091E5           LDR      R2,[R1, #+156]
   \   00000030   050052E1           CMP      R2,R5
   2033                      FoundDevice = Device;
   \   00000034   0140A001           MOVEQ    R4,R1
   2034                  }
   2035              }
   \                     ??FindMySelf_3:
   \   00000038   ........           _BLF     ??_IncP,??_IncP??rA
   \   0000003C   000054E3           CMP      R4,#+0
   \   00000040   F4FFFF0A           BEQ      ??FindMySelf_1
   2036          
   2037              return (FoundDevice);
   \                     ??FindMySelf_2:
   \   00000044   0400A0E1           MOV      R0,R4
   \   00000048   ........           B        ?Subroutine54
   2038          }

   \                                 In segment CODE, align 4, keep-with-next
   \                     ?Subroutine54:
   \   00000000   7040BDE8           POP      {R4-R6,LR}
   \   00000004   1EFF2FE1           BX       LR               ;; return
   2039          
   2040          

   \                                 In segment CODE, align 4, keep-with-next
   2041          U8 PROTanksystemUnit::GetProgramType(void) {
   2042              return ProgramType;
   \                     ??GetProgramType:
   \   00000000   4801D0E5           LDRB     R0,[R0, #+328]
   \   00000004   1EFF2FE1           BX       LR               ;; return
   2043          }
   2044          #ifdef WIN32
   2045              #pragma warn -8004
   2046          #endif
   2047          

   \                                 In segment CODE, align 4, keep-with-next
   2048          void PROTanksystemUnit::Update_Device_Info(TSNUart *Port, ANPRO10_COMMAND_2001 *InfoStruct) {
   \                     ??Update_Device_Info:
   \   00000000   F0402DE9           PUSH     {R4-R7,LR}
   \   00000004   0060A0E1           MOV      R6,R0
   2049              ProgramVersionInfo LocalBootVersion = BootVersion;
   2050          
   2051              SysInfoAvailable = true;    // Hva med denne EHSMark????
   \   00000008   80019FE5           LDR      R0,??Update_Device_Info_1  ;; SysInfoAvailable
   \   0000000C   1CD04DE2           SUB      SP,SP,#+28
   \   00000010   0140A0E1           MOV      R4,R1
   \   00000014   0250A0E1           MOV      R5,R2
   \   00000018   0110A0E3           MOV      R1,#+1
   \   0000001C   0010C0E5           STRB     R1,[R0, #+0]
   2052              ProgramType   = InfoStruct->ProgramType; // 0 = Bootloader, 1 = Application
   \   00000020   0600D5E5           LDRB     R0,[R5, #+6]
   \   00000024   527F86E2           ADD      R7,R6,#+328
   2053          
   2054              strncpy((char *)ActualSystemID, (const char *)InfoStruct->SystemID, sizeof(ActualSystemID));
   \   00000028   1420A0E3           MOV      R2,#+20
   \   0000002C   0000C7E5           STRB     R0,[R7, #+0]
   \   00000030   071085E2           ADD      R1,R5,#+7
   \   00000034   4A00A0E3           MOV      R0,#+74
   \   00000038   400F80E3           ORR      R0,R0,#0x100
   \   0000003C   060080E0           ADD      R0,R0,R6
   \   00000040   ........           _BLF     strncpy,??strncpy??rA
   2055              ActualDataVersion   = InfoStruct->DataVersion;
   \   00000044   1C00D5E5           LDRB     R0,[R5, #+28]
   \   00000048   1B10D5E5           LDRB     R1,[R5, #+27]
   \   0000004C   000481E1           ORR      R0,R1,R0, LSL #+8
   \   00000050   B601C7E1           STRH     R0,[R7, #+22]
   2056          
   2057              ActualProgramVersion.Build        = InfoStruct->ProgramVersion.Build;
   \   00000054   2000D5E5           LDRB     R0,[R5, #+32]
   \   00000058   1B00C7E5           STRB     R0,[R7, #+27]
   2058              ActualProgramVersion.NewFunctions = InfoStruct->ProgramVersion.NewFunctions;
   \   0000005C   1F00D5E5           LDRB     R0,[R5, #+31]
   \   00000060   1A00C7E5           STRB     R0,[R7, #+26]
   2059              ActualProgramVersion.PacketFormat = InfoStruct->ProgramVersion.PacketFormat;
   \   00000064   1E00D5E5           LDRB     R0,[R5, #+30]
   \   00000068   1900C7E5           STRB     R0,[R7, #+25]
   2060              ActualProgramVersion.ProdNo       = InfoStruct->ProgramVersion.ProdNo;
   \   0000006C   1D00D5E5           LDRB     R0,[R5, #+29]
   \   00000070   1800C7E5           STRB     R0,[R7, #+24]
   2061              ActualBootVersion.Build           = InfoStruct->BootVersion.Build;
   \   00000074   2400D5E5           LDRB     R0,[R5, #+36]
   \   00000078   1F00C7E5           STRB     R0,[R7, #+31]
   2062              ActualBootVersion.NewFunctions    = InfoStruct->BootVersion.NewFunctions;
   \   0000007C   2300D5E5           LDRB     R0,[R5, #+35]
   \   00000080   1E00C7E5           STRB     R0,[R7, #+30]
   2063              ActualBootVersion.PacketFormat    = InfoStruct->BootVersion.PacketFormat;
   \   00000084   2200D5E5           LDRB     R0,[R5, #+34]
   \   00000088   1D00C7E5           STRB     R0,[R7, #+29]
   2064              ActualBootVersion.ProdNo          = InfoStruct->BootVersion.ProdNo;
   \   0000008C   2100D5E5           LDRB     R0,[R5, #+33]
   \   00000090   1C00C7E5           STRB     R0,[R7, #+28]
   2065              ProgrDate                         = InfoStruct->ProgrDate;
   \   00000094   2800D5E5           LDRB     R0,[R5, #+40]
   \   00000098   2710D5E5           LDRB     R1,[R5, #+39]
   \   0000009C   000481E1           ORR      R0,R1,R0, LSL #+8
   \   000000A0   2610D5E5           LDRB     R1,[R5, #+38]
   \   000000A4   000481E1           ORR      R0,R1,R0, LSL #+8
   \   000000A8   2510D5E5           LDRB     R1,[R5, #+37]
   \   000000AC   000481E1           ORR      R0,R1,R0, LSL #+8
   \   000000B0   200087E5           STR      R0,[R7, #+32]
   2066              UpdateTime                        = time(NULL);
   \   000000B4   0000A0E3           MOV      R0,#+0
   \   000000B8   ........           _BLF     time,??time??rA
   \   000000BC   240087E5           STR      R0,[R7, #+36]
   2067              LastOSErr                         = InfoStruct->LastOSError;
   \   000000C0   2900D5E5           LDRB     R0,[R5, #+41]
   \   000000C4   C400C7E5           STRB     R0,[R7, #+196]
   2068              LastErrAddr                       = InfoStruct->LastErrAddress;
   \   000000C8   3000D5E5           LDRB     R0,[R5, #+48]
   \   000000CC   2F10D5E5           LDRB     R1,[R5, #+47]
   \   000000D0   000481E1           ORR      R0,R1,R0, LSL #+8
   \   000000D4   2E10D5E5           LDRB     R1,[R5, #+46]
   \   000000D8   000481E1           ORR      R0,R1,R0, LSL #+8
   \   000000DC   2D10D5E5           LDRB     R1,[R5, #+45]
   \   000000E0   000481E1           ORR      R0,R1,R0, LSL #+8
   \   000000E4   C80087E5           STR      R0,[R7, #+200]
   2069              FlashErrStatus                    = InfoStruct->FlashErrorStatus;
   \   000000E8   3100D5E5           LDRB     R0,[R5, #+49]
   2070              // Make sure that the strin is 0-terminated
   2071              InfoStruct->LastOSErrorTask[TASK_NAME_LENGTH-1] = 0;
   2072              LastOSErrTask                     = InfoStruct->LastOSErrorTask;
   \   000000EC   351085E2           ADD      R1,R5,#+53
   \   000000F0   CC00C7E5           STRB     R0,[R7, #+204]
   \   000000F4   0000A0E3           MOV      R0,#+0
   \   000000F8   5400C5E5           STRB     R0,[R5, #+84]
   \   000000FC   0D00A0E1           MOV      R0,SP
   \   00000100   ........           _BLF     ??AnsiString_1,??AnsiString??rA_1
   \   00000104   ........           LDR      R1,??DataTable92  ;; ??npos
   \   00000108   0020A0E3           MOV      R2,#+0
   \   0000010C   003091E5           LDR      R3,[R1, #+0]
   \   00000110   0010A0E1           MOV      R1,R0
   \   00000114   860F86E2           ADD      R0,R6,#+536
   \   00000118   ........           _BLF     ??assign,??assign??rA
   \   0000011C   0020A0E3           MOV      R2,#+0
   \   00000120   0110A0E3           MOV      R1,#+1
   \   00000124   0D00A0E1           MOV      R0,SP
   \   00000128   ........           _BLF     ??_Tidy,??_Tidy??rA
   2073          
   2074          #ifndef WIN32
   2075          
   2076              switch ( CurrentDeviceId ) {
   \   0000012C   ........           LDR      R0,??DataTable93  ;; CurrentDeviceId
   \   00000130   F000D0E1           LDRSH    R0,[R0, #+0]
   \   00000134   200040E2           SUB      R0,R0,#+32
   \   00000138   020050E3           CMP      R0,#+2
   \   0000013C   1100008A           BHI      ??Update_Device_Info_2
   2077                  case DEVICE_TCU       :
   2078                  case DEVICE_TCU_R1    :
   2079                  case DEVICE_TCU_R2    :
   2080                  if ( OS_IsTask(&TaskHandle) && (SysInfoReqestComPortNum == Port->PortNumber) && (SysInfoRequestAddress == InfoStruct->UnitAdress) && (SysInfoRequestId == InfoStruct->UnitID) ) {
   \   00000140   ........           LDR      R6,??DataTable99  ;; ??SysInfoReqestComPortNum
   \   00000144   0C0086E2           ADD      R0,R6,#+12
   \   00000148   ........           _BLF     OS_IsTask,??OS_IsTask??rA
   \   0000014C   000050E3           CMP      R0,#+0
   \   00000150   0C00000A           BEQ      ??Update_Device_Info_2
   \   00000154   000096E5           LDR      R0,[R6, #+0]
   \   00000158   801094E5           LDR      R1,[R4, #+128]
   \   0000015C   010050E1           CMP      R0,R1
   \   00000160   0510D505           LDRBEQ   R1,[R5, #+5]
   \   00000164   04009605           LDREQ    R0,[R6, #+4]
   \   00000168   01005001           CMPEQ    R0,R1
   \   0000016C   0410D505           LDRBEQ   R1,[R5, #+4]
   \   00000170   08009605           LDREQ    R0,[R6, #+8]
   \   00000174   01005001           CMPEQ    R0,R1
   \   00000178   0200001A           BNE      ??Update_Device_Info_2
   2081                      OS_SignalEvent(SYSINFO_RECEIVED_EVENT,&TaskHandle);
   \   0000017C   0C1086E2           ADD      R1,R6,#+12
   \   00000180   0400A0E3           MOV      R0,#+4
   \   00000184   ........           _BLF     OS_SignalEvent,??OS_SignalEvent??rA
   2082                  }
   2083                  break;
   2084                  case DEVICE_PCSW      :
   2085                  break;
   2086                  case DEVICE_TDU       :
   2087                  case DEVICE_TDU_R1    :
   2088                  case DEVICE_TDU_R2    :
   2089                  break;
   2090                  default:
   2091                  break;
   2092              }
   2093          
   2094          #endif
   2095          
   2096          }
   \                     ??Update_Device_Info_2:
   \   00000188   1CD08DE2           ADD      SP,SP,#+28
   \   0000018C   ........           B        ?Subroutine47
   \                     ??Update_Device_Info_1:
   \   00000190   ........           DC32     SysInfoAvailable
   2097          

   \                                 In segment CODE, align 4, keep-with-next
   2098          void PROTanksystemUnit::Update_Unit_Info(TSNUart *Port, ANPRO10_COMMAND_2001 *InfoStruct) {
   \                     ??Update_Unit_Info:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   0150A0E1           MOV      R5,R1
   2099              PROTanksystemUnit *Device = FindDevice(Port, InfoStruct->UnitAdress, InfoStruct->UnitID);
   \   00000008   0420D5E5           LDRB     R2,[R5, #+4]
   \   0000000C   0510D5E5           LDRB     R1,[R5, #+5]
   \   00000010   0040A0E1           MOV      R4,R0
   \   00000014   ........           BL       ??FindDevice
   2100              if (Device) {
   \   00000018   000050E3           CMP      R0,#+0
   \   0000001C   0200000A           BEQ      ??Update_Unit_Info_1
   2101                  Device->Update_Device_Info(Port, InfoStruct);
   \   00000020   0520A0E1           MOV      R2,R5
   \   00000024   0410A0E1           MOV      R1,R4
   \   00000028   ........           BL       ??Update_Device_Info
   2102              }
   2103          }
   \                     ??Update_Unit_Info_1:
   \   0000002C   ........           B        ?Subroutine46
   2104          

   \                                 In segment CODE, align 4, keep-with-next
   2105          void PROTanksystemUnit::VersionControl(TSNUart *Port) {
   \                     ??VersionControl:
   \   00000000   F14F2DE9           PUSH     {R0,R4-R11,LR}
   \   00000004   10D04DE2           SUB      SP,SP,#+16
   \   00000008   0140A0E1           MOV      R4,R1
   2106          #if !defined(ANBOOTLOADER) && !defined(WIN32)
   2107              bool Upgraded = false;
   2108              switch (Port->Device) {
   \   0000000C   A80094E5           LDR      R0,[R4, #+168]
   \   00000010   610040E2           SUB      R0,R0,#+97
   \   00000014   7C0D40E2           SUB      R0,R0,#+7936
   \   00000018   020050E3           CMP      R0,#+2
   \   0000001C   7200008A           BHI      ??VersionControl_3
   \   00000020   011F8FE2           ADR      R1,??VersionControl_1
   \   00000024   0010D1E7           LDRB     R1,[R1, R0]
   \   00000028   01F18FE0           ADD      PC,PC,R1, LSL #+2
   \                     ??VersionControl_1:
   \   0000002C   02000200           DC8      +2,+0,+2,+0
   2109                  case C_UART_DEVICE_PC :
   2110                  TSN_Delay(1);
   \                     ??VersionControl_4:
   \   00000030   0100A0E3           MOV      R0,#+1
   \   00000034   ........           _BLF     OS_Delay,??OS_Delay??rA
   2111          
   2112                  case C_UART_DEVICE_TCU:
   2113                  case C_UART_DEVICE_TDU:
   2114                  switch (ProgramType) {
   \                     ??VersionControl_5:
   \   00000038   10009DE5           LDR      R0,[SP, #+16]
   \   0000003C   BC619FE5           LDR      R6,??VersionControl_6  ;; UploadMessageBuf
   \   00000040   ........           LDR      R10,??DataTable95  ;; ??ProjectName
   \   00000044   525F80E2           ADD      R5,R0,#+328
   \   00000048   0000D5E5           LDRB     R0,[R5, #+0]
   \   0000004C   6470A0E3           MOV      R7,#+100
   \   00000050   F07E87E3           ORR      R7,R7,#0xF00
   \   00000054   0180A0E3           MOV      R8,#+1
   \   00000058   020050E3           CMP      R0,#+2
   \   0000005C   6200008A           BHI      ??VersionControl_3
   \   00000060   011F8FE2           ADR      R1,??VersionControl_2
   \   00000064   0010D1E7           LDRB     R1,[R1, R0]
   \   00000068   01F18FE0           ADD      PC,PC,R1, LSL #+2
   \                     ??VersionControl_2:
   \   0000006C   000D4400           DC8      +0,+13,+68,+0
   2115                      case 0:
   2116                      { // Bootloader
   2117                          UploadMessageStruct MyMessage;
   2118                          MyMessage.Port              = Port;
   \                     ??VersionControl_7:
   \   00000070   00408DE5           STR      R4,[SP, #+0]
   2119                          MyMessage.Cmd               = CMD_SEND_FLASH_PROG_NO_RESTART;
   \   00000074   071047E2           SUB      R1,R7,#+7
   \   00000078   BC10CDE1           STRH     R1,[SP, #+12]
   2120                          MyMessage.Address           = Address;
   \   0000007C   E41195E5           LDR      R1,[R5, #+484]
   2121                          MyMessage.UnitId            = UnitID;
   2122                          MyMessage.isVersionControl  = true;
   2123                          //
   2124                          // original code has a deadly side effect of putting
   2125                          // communication tasks to suspended state if the mailbox
   2126                          // is full because of any form of a fuck-up
   2127                          // it's better to just lose a message in case of
   2128                          // mailbox full.
   2129                          // -hkim-
   2130                          //OS_PutMail(&UploadMessageBuf, &MyMessage);
   2131                          OS_PutMailCond(&UploadMessageBuf, &MyMessage);
   \   00000080   0600A0E1           MOV      R0,R6
   \   00000084   04108DE5           STR      R1,[SP, #+4]
   \   00000088   DC1195E5           LDR      R1,[R5, #+476]
   \   0000008C   08108DE5           STR      R1,[SP, #+8]
   \   00000090   0E80CDE5           STRB     R8,[SP, #+14]
   \   00000094   0D10A0E1           MOV      R1,SP
   \   00000098   ........           _BLF     OS_PutMailCond,??OS_PutMailCond??rA
   2132                          MyMessage.Cmd     = CMD_SEND_CONFIG;
   \                     ??VersionControl_8:
   \   0000009C   BC70CDE1           STRH     R7,[SP, #+12]
   2133                          OS_PutMailCond(&UploadMessageBuf, &MyMessage);
   \   000000A0   4E0000EA           B        ??VersionControl_9
   2134                      }
   2135                      break;
   2136                      case 1:
   2137                      {
   2138                          bool prgDifference = bool(memcmp(&MyProgramVersion, &ActualProgramVersion, sizeof(ProgramVersionInfo)));
   \                     ??VersionControl_10:
   \   000000A4   10009DE5           LDR      R0,[SP, #+16]
   \   000000A8   0420A0E3           MOV      R2,#+4
   \   000000AC   581F80E2           ADD      R1,R0,#+352
   \   000000B0   ........           LDR      R0,??DataTable96  ;; MyProgramVersion
   \   000000B4   ........           _BLF     memcmp,??memcmp??rA
   \   000000B8   000050E3           CMP      R0,#+0
   \   000000BC   0190A013           MOVNE    R9,#+1
   \   000000C0   0090A003           MOVEQ    R9,#+0
   2139                          bool cfgDifference = bool(strncmp(ActualSystemID, PROProjectInfo::PROProjectInfoPtr->ProjectName.c_str(), ANPRO10_ID_LENGTH - 1) || ActualDataVersion != TSNConfigInfo::ConfigInfoPtr->PrevConfigDataRevision);
   \   000000C4   0A00A0E1           MOV      R0,R10
   \   000000C8   ........           _BLF     ??c_str,??c_str??rA
   \   000000CC   10309DE5           LDR      R3,[SP, #+16]
   \   000000D0   1320A0E3           MOV      R2,#+19
   \   000000D4   0010A0E1           MOV      R1,R0
   \   000000D8   4A00A0E3           MOV      R0,#+74
   \   000000DC   400F80E3           ORR      R0,R0,#0x100
   \   000000E0   030080E0           ADD      R0,R0,R3
   \   000000E4   ........           _BLF     strncmp,??strncmp??rA
   \   000000E8   000050E3           CMP      R0,#+0
   \   000000EC   0500001A           BNE      ??VersionControl_11
   \   000000F0   ........           LDR      R1,??DataTable98  ;; ??ConfigInfoPtr
   \   000000F4   B601D5E1           LDRH     R0,[R5, #+22]
   \   000000F8   001091E5           LDR      R1,[R1, #+0]
   \   000000FC   3C1191E5           LDR      R1,[R1, #+316]
   \   00000100   010050E1           CMP      R0,R1
   \   00000104   0100000A           BEQ      ??VersionControl_12
   \                     ??VersionControl_11:
   \   00000108   0100A0E3           MOV      R0,#+1
   \   0000010C   000000EA           B        ??VersionControl_13
   \                     ??VersionControl_12:
   \   00000110   0000A0E3           MOV      R0,#+0
   2140                          if (prgDifference  && cfgDifference) {
   \                     ??VersionControl_13:
   \   00000114   090010E1           TST      R0,R9
   \   00000118   0D00000A           BEQ      ??VersionControl_14
   2141                              UploadMessageStruct MyMessage;
   2142                              MyMessage.Port              = Port;
   \   0000011C   00408DE5           STR      R4,[SP, #+0]
   2143                              MyMessage.Cmd               = CMD_SEND_FLASH_PROG_NO_RESTART;
   \   00000120   071047E2           SUB      R1,R7,#+7
   \   00000124   BC10CDE1           STRH     R1,[SP, #+12]
   2144                              MyMessage.Address           = Address;
   \   00000128   E41195E5           LDR      R1,[R5, #+484]
   2145                              MyMessage.UnitId            = UnitID;
   2146                              MyMessage.isVersionControl  = true;
   2147                              //
   2148                              // original code has a deadly side effect of putting
   2149                              // communication tasks to suspended state if the mailbox
   2150                              // is full because of any form of a fuck-up
   2151                              // it's better to just lose a message in case of
   2152                              // mailbox full.
   2153                              // -hkim-
   2154                              //OS_PutMail(&UploadMessageBuf, &MyMessage);
   2155                              if (!OS_PutMailCond(&UploadMessageBuf, &MyMessage)) {
   \   0000012C   0600A0E1           MOV      R0,R6
   \   00000130   04108DE5           STR      R1,[SP, #+4]
   \   00000134   DC1195E5           LDR      R1,[R5, #+476]
   \   00000138   08108DE5           STR      R1,[SP, #+8]
   \   0000013C   0E80CDE5           STRB     R8,[SP, #+14]
   \   00000140   0D10A0E1           MOV      R1,SP
   \   00000144   ........           _BLF     OS_PutMailCond,??OS_PutMailCond??rA
   \   00000148   000050E3           CMP      R0,#+0
   \   0000014C   2600001A           BNE      ??VersionControl_3
   2156                                  MyMessage.Cmd     = CMD_SEND_CONFIG;
   \   00000150   D1FFFFEA           B        ??VersionControl_8
   2157                                  OS_PutMailCond(&UploadMessageBuf, &MyMessage);
   2158                              }
   2159                          } else if (prgDifference) {
   \                     ??VersionControl_14:
   \   00000154   000059E3           CMP      R9,#+0
   \   00000158   0300000A           BEQ      ??VersionControl_15
   2160                              UploadMessageStruct MyMessage;
   2161                              MyMessage.Port              = Port;
   \   0000015C   00408DE5           STR      R4,[SP, #+0]
   2162                              MyMessage.Cmd               = CMD_SEND_FLASH_PROG;
   \   00000160   0A1047E2           SUB      R1,R7,#+10
   \   00000164   BC10CDE1           STRH     R1,[SP, #+12]
   2163                              MyMessage.Address           = Address;
   \   00000168   170000EA           B        ??VersionControl_16
   2164                              MyMessage.UnitId            = UnitID;
   2165                              MyMessage.isVersionControl  = true;
   2166                              //
   2167                              // original code has a deadly side effect of putting
   2168                              // communication tasks to suspended state if the mailbox
   2169                              // is full because of any form of a fuck-up
   2170                              // it's better to just lose a message in case of
   2171                              // mailbox full.
   2172                              // -hkim-
   2173                              //OS_PutMail(&UploadMessageBuf, &MyMessage);
   2174                              OS_PutMailCond(&UploadMessageBuf, &MyMessage);
   2175                          } else if (cfgDifference ) {
   \                     ??VersionControl_15:
   \   0000016C   000050E3           CMP      R0,#+0
   \   00000170   1D00000A           BEQ      ??VersionControl_3
   2176                              UploadMessageStruct MyMessage;
   2177                              MyMessage.Port              = Port;
   \   00000174   00408DE5           STR      R4,[SP, #+0]
   2178                              MyMessage.Cmd               = CMD_SEND_CONFIG;
   \   00000178   BC70CDE1           STRH     R7,[SP, #+12]
   2179                              MyMessage.Address           = Address;
   \   0000017C   120000EA           B        ??VersionControl_16
   2180                              MyMessage.UnitId            = UnitID;
   2181                              MyMessage.isVersionControl  = true;
   2182                              //
   2183                              // original code has a deadly side effect of putting
   2184                              // communication tasks to suspended state if the mailbox
   2185                              // is full because of any form of a fuck-up
   2186                              // it's better to just lose a message in case of
   2187                              // mailbox full.
   2188                              // -hkim-
   2189                              //OS_PutMail(&UploadMessageBuf, &MyMessage);
   2190                              OS_PutMailCond(&UploadMessageBuf, &MyMessage);
   2191                          }
   2192                      }
   2193                      break;
   2194                      case 2:
   2195                      if (strncmp(ActualSystemID, PROProjectInfo::PROProjectInfoPtr->ProjectName.c_str(), ANPRO10_ID_LENGTH - 1) || ActualDataVersion != TSNConfigInfo::ConfigInfoPtr->PrevConfigDataRevision) {
   \                     ??VersionControl_17:
   \   00000180   0A00A0E1           MOV      R0,R10
   \   00000184   ........           _BLF     ??c_str,??c_str??rA
   \   00000188   10309DE5           LDR      R3,[SP, #+16]
   \   0000018C   0010A0E1           MOV      R1,R0
   \   00000190   1320A0E3           MOV      R2,#+19
   \   00000194   4A00A0E3           MOV      R0,#+74
   \   00000198   400F80E3           ORR      R0,R0,#0x100
   \   0000019C   030080E0           ADD      R0,R0,R3
   \   000001A0   ........           _BLF     strncmp,??strncmp??rA
   \   000001A4   000050E3           CMP      R0,#+0
   \   000001A8   0500001A           BNE      ??VersionControl_18
   \   000001AC   ........           LDR      R1,??DataTable98  ;; ??ConfigInfoPtr
   \   000001B0   B601D5E1           LDRH     R0,[R5, #+22]
   \   000001B4   001091E5           LDR      R1,[R1, #+0]
   \   000001B8   3C1191E5           LDR      R1,[R1, #+316]
   \   000001BC   010050E1           CMP      R0,R1
   \   000001C0   0900000A           BEQ      ??VersionControl_3
   2196                          UploadMessageStruct MyMessage;
   2197                          MyMessage.Port              = Port;
   \                     ??VersionControl_18:
   \   000001C4   00408DE5           STR      R4,[SP, #+0]
   2198                          MyMessage.Cmd               = CMD_SEND_CONFIG;
   \   000001C8   BC70CDE1           STRH     R7,[SP, #+12]
   2199                          MyMessage.Address           = Address;
   \                     ??VersionControl_16:
   \   000001CC   E41195E5           LDR      R1,[R5, #+484]
   \   000001D0   04108DE5           STR      R1,[SP, #+4]
   2200                          MyMessage.UnitId            = UnitID;
   \   000001D4   DC1195E5           LDR      R1,[R5, #+476]
   \   000001D8   08108DE5           STR      R1,[SP, #+8]
   2201                          MyMessage.isVersionControl  = true;
   \   000001DC   0E80CDE5           STRB     R8,[SP, #+14]
   2202                          //
   2203                          // original code has a deadly side effect of putting
   2204                          // communication tasks to suspended state if the mailbox
   2205                          // is full because of any form of a fuck-up
   2206                          // it's better to just lose a message in case of
   2207                          // mailbox full.
   2208                          // -hkim-
   2209                          //OS_PutMail(&UploadMessageBuf, &MyMessage);
   2210                          OS_PutMailCond(&UploadMessageBuf, &MyMessage);
   \                     ??VersionControl_9:
   \   000001E0   0D10A0E1           MOV      R1,SP
   \   000001E4   0600A0E1           MOV      R0,R6
   \   000001E8   ........           _BLF     OS_PutMailCond,??OS_PutMailCond??rA
   2211                      }
   2212                      break;
   2213                  }
   2214                  break;
   2215                  default:
   2216                  break;
   2217              }
   2218              // Give e.g. a TDU a chance to start up properly before continuing
   2219              TSN_Delay(15000);
   \                     ??VersionControl_3:
   \   000001EC   9800A0E3           MOV      R0,#+152
   \   000001F0   E80D80E3           ORR      R0,R0,#0x3A00
   \   000001F4   ........           _BLF     OS_Delay,??OS_Delay??rA
   2220          
   2221          #endif
   2222          }
   \   000001F8   14D08DE2           ADD      SP,SP,#+20
   \   000001FC   ........           B        ?Subroutine49
   \                     ??VersionControl_6:
   \   00000200   ........           DC32     UploadMessageBuf
   2223          

   \                                 In segment CODE, align 4, keep-with-next
   2224          void PROTanksystemUnit::CheckSysInfo(TSNUart *Port) {
   \                     ??CheckSysInfo_2:
   \   00000000   F0412DE9           PUSH     {R4-R8,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0160B0E1           MOVS     R6,R1
   2225              if (Port) {
   2226          #if !defined(ANBOOTLOADER) && !defined(WIN32)
   2227                  switch(Port->HWProtocol){
   \   0000000C   A0009615           LDRNE    R0,[R6, #+160]
   \   00000010   4A20A013           MOVNE    R2,#+74
   \   00000014   7C2D8213           ORRNE    R2,R2,#0x1F00
   \   00000018   02005011           CMPNE    R0,R2
   \   0000001C   4200000A           BEQ      ??CheckSysInfo_11
   2228                      case C_UART_HWPRO:
   2229                      break;
   2230                      default:
   2231                      int RetryCnt = 0;
   \   00000020   0070A0E3           MOV      R7,#+0
   2232                      bool HasInfo    = false;
   2233                      int Delay;
   2234                      switch ( Port->HWProtocol ) {
   \   00000024   4B0040E2           SUB      R0,R0,#+75
   \   00000028   7C0D40E2           SUB      R0,R0,#+7936
   \   0000002C   010050E3           CMP      R0,#+1
   \   00000030   0500008A           BHI      ??CheckSysInfo_12
   \   00000034   011F8FE2           ADR      R1,??CheckSysInfo_3
   \   00000038   0010D1E7           LDRB     R1,[R1, R0]
   \   0000003C   01F18FE0           ADD      PC,PC,R1, LSL #+2
   \                     ??CheckSysInfo_3:
   \   00000040   00000000           DC8      +0,+0,+0,+0
   2235                          case C_UART_HWPRO_232:
   2236                          Delay = 5000; //2500;
   \                     ??CheckSysInfo_13:
   \   00000044   8850A0E3           MOV      R5,#+136
   \   00000048   4C5D85E3           ORR      R5,R5,#0x1300
   2237                          break;
   2238                          case C_UART_HWPRO_485:
   2239                          Delay = 5000;
   2240                          break;
   2241                      }
   2242                      if ( OS_IsTask(&TaskHandle) ) {
   \                     ??CheckSysInfo_12:
   \   0000004C   ........           LDR      R8,??DataTable99  ;; ??SysInfoReqestComPortNum
   \   00000050   0C0088E2           ADD      R0,R8,#+12
   \   00000054   ........           _BLF     OS_IsTask,??OS_IsTask??rA
   \   00000058   000050E3           CMP      R0,#+0
   \   0000005C   0100000A           BEQ      ??CheckSysInfo_14
   2243                          OS_ClearEvents(&TaskHandle);
   \   00000060   0C0088E2           ADD      R0,R8,#+12
   \   00000064   ........           _BLF     OS_ClearEvents,??OS_ClearEvents??rA
   2244                      }
   2245                      if (PROProjectInfo::RequestConfig) {
   \                     ??CheckSysInfo_14:
   \   00000068   ........           LDR      R0,??DataTable100  ;; ??RequestConfig
   \   0000006C   000090E5           LDR      R0,[R0, #+0]
   \   00000070   000050E3           CMP      R0,#+0
   \   00000074   0300000A           BEQ      ??CheckSysInfo_15
   2246                          GetConfigFromTDU(Port);
   \   00000078   0610A0E1           MOV      R1,R6
   \   0000007C   0400A0E1           MOV      R0,R4
   \   00000080   ........           BL       ??GetConfigFromTDU
   \   00000084   280000EA           B        ??CheckSysInfo_11
   2247                      } else {
   2248                          SysInfoReqestComPortNum = Port->PortNumber;
   \                     ??CheckSysInfo_15:
   \   00000088   800096E5           LDR      R0,[R6, #+128]
   \   0000008C   000088E5           STR      R0,[R8, #+0]
   2249                          SysInfoRequestId      = UnitID;
   \   00000090   240394E5           LDR      R0,[R4, #+804]
   \   00000094   080088E5           STR      R0,[R8, #+8]
   2250                          SysInfoRequestAddress = Address;
   \   00000098   2C0394E5           LDR      R0,[R4, #+812]
   \   0000009C   040088E5           STR      R0,[R8, #+4]
   2251          
   2252                          do {
   2253                              ANPRO10_SendSysInfo(Port,Address,UnitID);
   \                     ??CheckSysInfo_16:
   \   000000A0   242394E5           LDR      R2,[R4, #+804]
   \   000000A4   2C1394E5           LDR      R1,[R4, #+812]
   \   000000A8   0600A0E1           MOV      R0,R6
   \   000000AC   ........           _BLF     ??ANPRO10_SendSysInfo,??ANPRO10_SendSysInfo??rA
   2254                              int SysInfoReceived = OS_WaitEventTimed(SYSINFO_RECEIVED_EVENT, Delay);
   \   000000B0   0510A0E1           MOV      R1,R5
   \   000000B4   0400A0E3           MOV      R0,#+4
   \   000000B8   ........           _BLF     OS_WaitEventTimed,??OS_WaitEventTimed??rA
   2255                              if ( SysInfoReceived == SYSINFO_RECEIVED_EVENT ) {
   \   000000BC   040050E3           CMP      R0,#+4
   \   000000C0   0400001A           BNE      ??CheckSysInfo_17
   2256                                  HasInfo = true;
   2257                              }
   2258                          }while ( !HasInfo && RetryCnt++ < 4 );
   2259                          if ( HasInfo ) {
   2260                              VersionControl(Port);
   \   000000C4   0610A0E1           MOV      R1,R6
   \   000000C8   0400A0E1           MOV      R0,R4
   \   000000CC   ........           BL       ??VersionControl
   2261                              SysInfoRxFailCnt = 0;
   \   000000D0   0000A0E3           MOV      R0,#+0
   \   000000D4   050000EA           B        ??CheckSysInfo_18
   2262                          } else {
   \                     ??CheckSysInfo_17:
   \   000000D8   0700A0E1           MOV      R0,R7
   \   000000DC   017080E2           ADD      R7,R0,#+1
   \   000000E0   040050E3           CMP      R0,#+4
   \   000000E4   EDFFFFBA           BLT      ??CheckSysInfo_16
   2263                              SysInfoRxFailCnt++;
   \   000000E8   580494E5           LDR      R0,[R4, #+1112]
   \   000000EC   010080E2           ADD      R0,R0,#+1
   \                     ??CheckSysInfo_18:
   \   000000F0   580484E5           STR      R0,[R4, #+1112]
   2264                          }
   2265                          if ( TXUComFailureAlarm ) {
   \   000000F4   3C1294E5           LDR      R1,[R4, #+572]
   \   000000F8   000051E3           CMP      R1,#+0
   \   000000FC   0400000A           BEQ      ??CheckSysInfo_19
   2266                              TXUComFailureAlarm->Check();
   \   00000100   0100A0E1           MOV      R0,R1
   \   00000104   A41091E5           LDR      R1,[R1, #+164]
   \   00000108   641091E5           LDR      R1,[R1, #+100]
   \   0000010C   0FE0A0E1           MOV      LR,PC
   \   00000110   11FF2FE1           BX       R1
   2267                          }
   2268                          SendData();
   \                     ??CheckSysInfo_19:
   \   00000114   A42094E5           LDR      R2,[R4, #+164]
   \   00000118   6510A0E3           MOV      R1,#+101
   \   0000011C   402092E5           LDR      R2,[R2, #+64]
   \   00000120   0400A0E1           MOV      R0,R4
   \   00000124   0FE0A0E1           MOV      LR,PC
   \   00000128   12FF2FE1           BX       R2
   2269                      }
   2270                      break;
   2271                  }
   2272          
   2273          #endif
   2274              }
   2275          }
   \                     ??CheckSysInfo_11:
   \   0000012C   ........           B        ?Subroutine53
   2276          
   2277          
   2278          //---------------------------------------------------------------------------
   2279          
   2280          

   \                                 In segment CODE, align 4, keep-with-next
   2281          void PROTanksystemUnit::SetIOLoadDelay(int Delay) {
   2282              IOLoadDelay = Delay;
   \                     ??SetIOLoadDelay:
   \   00000000   381280E5           STR      R1,[R0, #+568]
   2283          }
   \   00000004   1EFF2FE1           BX       LR               ;; return
   2284          

   \                                 In segment CODE, align 4, keep-with-next
   2285          int PROTanksystemUnit::GetIOLoadDelay(void) {
   2286              return IOLoadDelay;
   \                     ??GetIOLoadDelay:
   \   00000000   380290E5           LDR      R0,[R0, #+568]
   \   00000004   1EFF2FE1           BX       LR               ;; return
   2287          }
   2288          
   2289          

   \                                 In segment CODE, align 4, keep-with-next
   2290          PROTanksystemUnit* PROTanksystemUnit::FindTCU(int Address) {
   \                     ??FindTCU:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   2291          
   2292              // Try to find the TCU if it is declared separately
   2293              if (!PROTanksystemUnit::TanksystemTCUSet.empty()) {
   \   00000004   ........           LDR      R5,??DataTable101  ;; ??TanksystemUnitSet
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   280095E5           LDR      R0,[R5, #+40]
   \   00000010   000050E3           CMP      R0,#+0
   \   00000014   0C00000A           BEQ      ??FindTCU_1
   2294                  set<PRogramObjectBase *>::iterator pBIt2;
   2295                  for (pBIt2 = TanksystemTCUSet.begin(); pBIt2 != TanksystemTCUSet.end(); pBIt2++) {
   \   00000018   180095E5           LDR      R0,[R5, #+24]
   \   0000001C   000000EA           B        ??FindTCU_2
   \                     ??FindTCU_3:
   \   00000020   ........           _BLF     ??_IncP,??_IncP??rA
   \                     ??FindTCU_2:
   \   00000024   181085E2           ADD      R1,R5,#+24
   \   00000028   010050E1           CMP      R0,R1
   \   0000002C   0500000A           BEQ      ??FindTCU_4
   2296                      PROTanksystemUnit *LocalTCUElement = ((PROTanksystemUnit *)(*pBIt2));
   \   00000030   101090E5           LDR      R1,[R0, #+16]
   2297                      if (LocalTCUElement->Address == Address) return LocalTCUElement;
   \   00000034   2C2391E5           LDR      R2,[R1, #+812]
   \   00000038   040052E1           CMP      R2,R4
   \   0000003C   F7FFFF1A           BNE      ??FindTCU_3
   \   00000040   0100A0E1           MOV      R0,R1
   \   00000044   000000EA           B        ??FindTCU_1
   2298                  }
   2299              }
   2300              return NULL;
   \                     ??FindTCU_4:
   \   00000048   0000A0E3           MOV      R0,#+0
   \                     ??FindTCU_1:
   \   0000004C   ........           B        ?Subroutine46
   2301          }
   2302          

   \                                 In segment CODE, align 4, keep-with-next
   2303          TSNUart* PROTanksystemUnit::GetComPort(int TCUAddress, int PortNum) {
   \                     ??GetComPort:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0140A0E1           MOV      R4,R1
   2304              PROTanksystemUnit *tmpPtr = FindTCU(TCUAddress);
   \   00000008   ........           BL       ??FindTCU
   2305              if (tmpPtr) {
   \   0000000C   000050E3           CMP      R0,#+0
   2306                  return tmpPtr->Channels[PortNum];
   \   00000010   04018010           ADDNE    R0,R0,R4, LSL #+2
   \   00000014   68039015           LDRNE    R0,[R0, #+872]
   2307              } else {
   2308                  return NULL;
   \   00000018   1040BDE8           POP      {R4,LR}
   \   0000001C   1EFF2FE1           BX       LR               ;; return
   2309              }
   2310          
   2311          }
   2312          

   \                                 In segment CODE, align 4, keep-with-next
   2313          PROTanksystemUnit* PROTanksystemUnit::FindUnit(int address, int dev_id) {
   \                     ??FindUnit:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   2314              //
   2315              // this is a bullshit.
   2316              // instead this should be set<PROTanksystemUnit*>
   2317              //
   2318              // -hkim-
   2319              //
   2320          
   2321              set<PRogramObjectBase *>::iterator itr;
   2322          
   2323              for (itr = TanksystemUnitSet.begin(); itr != TanksystemUnitSet.end(); itr++) {
   \   00000004   ........           LDR      R6,??DataTable102  ;; ??TanksystemUnitSet
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   000096E5           LDR      R0,[R6, #+0]
   \   00000010   0150A0E1           MOV      R5,R1
   \   00000014   000000EA           B        ??FindUnit_1
   \                     ??FindUnit_2:
   \   00000018   ........           _BLF     ??_IncP,??_IncP??rA
   \                     ??FindUnit_1:
   \   0000001C   060050E1           CMP      R0,R6
   2324                  PROTanksystemUnit *Device = (PROTanksystemUnit *)(*itr);
   2325          
   2326                  if (Device->Address == address && Device->UnitID == dev_id) {
   2327                      return Device;
   2328                  }
   2329              }
   2330              return NULL;
   \   00000020   0000A003           MOVEQ    R0,#+0
   \   00000024   0600000A           BEQ      ??FindUnit_3
   \   00000028   101090E5           LDR      R1,[R0, #+16]
   \   0000002C   2C2391E5           LDR      R2,[R1, #+812]
   \   00000030   040052E1           CMP      R2,R4
   \   00000034   24239105           LDREQ    R2,[R1, #+804]
   \   00000038   05005201           CMPEQ    R2,R5
   \   0000003C   F5FFFF1A           BNE      ??FindUnit_2
   \   00000040   0100A0E1           MOV      R0,R1
   \                     ??FindUnit_3:
   \   00000044                      REQUIRE ?Subroutine54
   \   00000044                      ;; // Fall through to label ?Subroutine54
   2331          }

   \                                 In segment DATA_ID, align 4, align-sorted
   \                     `?<Initializer for TCU_R1UnitValueList>`:
   \   00000000   30010000ED00       DC32 304, 237, 1000, 368, 237, 4001, 369, 237, 4002, 370, 237, 4003
   \              0000E8030000
   \              70010000ED00
   \              0000A10F0000
   \              71010000ED00
   \              0000A20F0000
   \              72010000ED00
   \              0000A30F0000
   \   00000030   73010000ED00       DC32 371, 237, 4004, 372, 237, 4005, 763, 237, 4020, 373, 237, 4007
   \              0000A40F0000
   \              74010000ED00
   \              0000A50F0000
   \              FB020000ED00
   \              0000B40F0000
   \              75010000ED00
   \              0000A70F0000
   \   00000060   76010000ED00       DC32 374, 237, 4008, 375, 237, 4009, 376, 237, 4010, 1007, 237, 4022
   \              0000A80F0000
   \              77010000ED00
   \              0000A90F0000
   \              78010000ED00
   \              0000AA0F0000
   \              EF030000ED00
   \              0000B60F0000
   \   00000090   F0030000ED00       DC32 1008, 237, 4023, 1009, 237, 4024, 670, 237, 4015, 671, 237, 4016
   \              0000B70F0000
   \              F1030000ED00
   \              0000B80F0000
   \              9E020000ED00
   \              0000AF0F0000
   \              9F020000ED00
   \              0000B00F0000
   \   000000C0   A0020000ED00       DC32 672, 237, 4017, 673, 237, 4018, 674, 237, 4019, 846, 237, 4021
   \              0000B10F0000
   \              A1020000ED00
   \              0000B20F0000
   \              A2020000ED00
   \              0000B30F0000
   \              4E030000ED00
   \              0000B50F0000
   \   000000F0   89030000ED00       DC32 905, 237, 1368, 906, 237, 1373, 907, 237, 1371, 908, 237, 1372, 24
   \              000058050000
   \              8A030000ED00
   \              00005D050000
   \              8B030000ED00
   \              00005B050000
   \              8C030000ED00
   \              00005C050000
   \              18000000    
   \   00000124   ED000000AB0F       DC32 237, 4011, 483, 237, 4012, 25, 237, 3106, 1090, 237, 3113
   \              0000E3010000
   \              ED000000AC0F
   \              000019000000
   \              ED000000220C
   \              000042040000
   \              ED000000290C
   \              0000        
   \                     `?<Initializer for TCU_R2UnitValueList>`:
   \   00000150   30010000ED00       DC32 304, 237, 1000, 368, 237, 4001, 369, 237, 4002, 370, 237, 4003
   \              0000E8030000
   \              70010000ED00
   \              0000A10F0000
   \              71010000ED00
   \              0000A20F0000
   \              72010000ED00
   \              0000A30F0000
   \   00000180   73010000ED00       DC32 371, 237, 4004, 372, 237, 4005, 377, 237, 4006, 763, 237, 4020
   \              0000A40F0000
   \              74010000ED00
   \              0000A50F0000
   \              79010000ED00
   \              0000A60F0000
   \              FB020000ED00
   \              0000B40F0000
   \   000001B0   75010000ED00       DC32 373, 237, 4007, 374, 237, 4008, 375, 237, 4009, 376, 237, 4010
   \              0000A70F0000
   \              76010000ED00
   \              0000A80F0000
   \              77010000ED00
   \              0000A90F0000
   \              78010000ED00
   \              0000AA0F0000
   \   000001E0   9E020000ED00       DC32 670, 237, 4015, 671, 237, 4016, 672, 237, 4017, 673, 237, 4018
   \              0000AF0F0000
   \              9F020000ED00
   \              0000B00F0000
   \              A0020000ED00
   \              0000B10F0000
   \              A1020000ED00
   \              0000B20F0000
   \   00000210   A2020000ED00       DC32 674, 237, 4019, 846, 237, 4021, 1007, 237, 4022, 1008, 237, 4023
   \              0000B30F0000
   \              4E030000ED00
   \              0000B50F0000
   \              EF030000ED00
   \              0000B60F0000
   \              F0030000ED00
   \              0000B70F0000
   \   00000240   F1030000ED00       DC32 1009, 237, 4024, 905, 237, 1368, 906, 237, 1373, 907, 237, 1371
   \              0000B80F0000
   \              89030000ED00
   \              000058050000
   \              8A030000ED00
   \              00005D050000
   \              8B030000ED00
   \              00005B050000
   \   00000270   8C030000ED00       DC32 908, 237, 1372, 24, 237, 4011, 483, 237, 4012, 25, 237, 3106, 1090
   \              00005C050000
   \              18000000ED00
   \              0000AB0F0000
   \              E3010000ED00
   \              0000AC0F0000
   \              19000000ED00
   \              0000220C0000
   \              42040000    
   \   000002A4   ED000000290C       DC32 237, 3113
   \              0000        
   \                     `?<Initializer for TDUUnitValueList>`:
   \   000002AC   30010000ED00       DC32 304, 237, 1000, 389, 237, 4002, 378, 237, 4003, 371, 237, 4004
   \              0000E8030000
   \              85010000ED00
   \              0000A20F0000
   \              7A010000ED00
   \              0000A30F0000
   \              73010000ED00
   \              0000A40F0000
   \   000002DC   74010000ED00       DC32 372, 237, 4005, 763, 237, 4020, 373, 237, 4007, 374, 237, 4008
   \              0000A50F0000
   \              FB020000ED00
   \              0000B40F0000
   \              75010000ED00
   \              0000A70F0000
   \              76010000ED00
   \              0000A80F0000
   \   0000030C   77010000ED00       DC32 375, 237, 4009, 376, 237, 4010, 1007, 237, 4022, 1008, 237, 4023
   \              0000A90F0000
   \              78010000ED00
   \              0000AA0F0000
   \              EF030000ED00
   \              0000B60F0000
   \              F0030000ED00
   \              0000B70F0000
   \   0000033C   F1030000ED00       DC32 1009, 237, 4024, 670, 237, 4015, 671, 237, 4016, 672, 237, 4017
   \              0000B80F0000
   \              9E020000ED00
   \              0000AF0F0000
   \              9F020000ED00
   \              0000B00F0000
   \              A0020000ED00
   \              0000B10F0000
   \   0000036C   A1020000ED00       DC32 673, 237, 4018, 674, 237, 4019, 24, 237, 4011, 483, 237, 4012, 25
   \              0000B20F0000
   \              A2020000ED00
   \              0000B30F0000
   \              18000000ED00
   \              0000AB0F0000
   \              E3010000ED00
   \              0000AC0F0000
   \              19000000    
   \   000003A0   ED000000220C       DC32 237, 3106, 1090, 237, 3113
   \              000042040000
   \              ED000000290C
   \              0000        

   \                                 In segment DIFUNCT, align 4, keep-with-next, root
   \   00000000                      REQUIRE ?call_ctors
   \   00000000   ........           DC32    ??__sti__routine

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "TDUConfig">`:
   \   00000000   544455436F6E       DC8 "TDUConfig"
   \              66696700    
   \   0000000A   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "TCU ">`:
   \   00000000   5443552000         DC8 "TCU "
   \   00000005   000000             DC8 0, 0, 0
   \   00000008   206F6E204E65       DC8 " on Net"
   \              7400        
   \   00000010   5443553A00         DC8 "TCU:"
   \   00000015   000000             DC8 0, 0, 0
   \   00000018   5444553A00         DC8 "TDU:"
   \   0000001D   000000             DC8 0, 0, 0
   \   00000020   206F6E20436F       DC8 " on Com"
   \              6D00        

   \                                 In segment DATA_C, align 1, align-sorted
   \   00000000   2000               DC8 " "

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant {(0.0F), (20.0F), (20.0F), (3.29999`:
   \   00000000   000000000000       DC32 0H, 41A00000H, 41A00000H, 40533333H, 3FE66666H, 0H, 40A00000H, 0H
   \              A0410000A041
   \              333353406666
   \              E63F00000000
   \              0000A0400000
   \              0000        

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "00:00:00">`:
   \   00000000   30303A30303A       DC8 "00:00:00"
   \              303000      
   \   00000009   000000             DC8 0, 0, 0
   \   0000000C   307825307800       DC8 "0x%0x"
   \   00000012   0000               DC8 0, 0
   \   00000014   25642E25642E       DC8 "%d.%d.%d.%d"
   \              25642E256400

   \                                 In segment DATA_C, align 1, align-sorted
   \   00000000   256900             DC8 "%i"

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "Network">`:
   \   00000000   4E6574776F72       DC8 "Network"
   \              6B00        

   \                                 In segment DATA_C, align 4, align-sorted
   \   00000000   50433A00           DC8 "PC:"

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs PROTanksystemUnit &PROTanksystemUnit::new PROTanksystemUnit(int, int)
   \                     `??new PROTanksystemUnit`:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
   \   0000000C   AA0EA0E3           MOV      R0,#+2720
   \   00000010   ........           _BLF     `??operator new`,`??operator new??rA`
   \   00000014   000050E3           CMP      R0,#+0
   \   00000018   0200000A           BEQ      `??new PROTanksystemUnit_3`
   \   0000001C   0520A0E1           MOV      R2,R5
   \   00000020   0410A0E1           MOV      R1,R4
   \   00000024   ........           BL       ??PROTanksystemUnit_1
   \                     `??new PROTanksystemUnit_3`:
   \   00000028   ........           B        ?Subroutine46

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs PROTanksystemUnit &PROTanksystemUnit::new PROTanksystemUnit(int, int, int, PROTanksystemUnit *)
   \                     `??new PROTanksystemUnit_1`:
   \   00000000   F0402DE9           PUSH     {R4-R7,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
   \   0000000C   0260A0E1           MOV      R6,R2
   \   00000010   0370A0E1           MOV      R7,R3
   \   00000014   AA0EA0E3           MOV      R0,#+2720
   \   00000018   ........           _BLF     `??operator new`,`??operator new??rA`
   \   0000001C   000050E3           CMP      R0,#+0
   \   00000020   0500000A           BEQ      `??new PROTanksystemUnit_4`
   \   00000024   80002DE9           PUSH     {R7}
   \   00000028   0630A0E1           MOV      R3,R6
   \   0000002C   0520A0E1           MOV      R2,R5
   \   00000030   0410A0E1           MOV      R1,R4
   \   00000034   ........           BL       ??PROTanksystemUnit
   \   00000038   04D08DE2           ADD      SP,SP,#+4
   \                     `??new PROTanksystemUnit_4`:
   \   0000003C   ........           B        ?Subroutine47

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs PROTanksystemUnit &PROTanksystemUnit::new PROTanksystemUnit()
   \                     `??new PROTanksystemUnit_2`:
   \   00000000   00402DE9           PUSH     {LR}
   \   00000004   AA0EA0E3           MOV      R0,#+2720
   \   00000008   ........           _BLF     `??operator new`,`??operator new??rA`
   \   0000000C   000050E3           CMP      R0,#+0
   \   00000010   0000000A           BEQ      `??new PROTanksystemUnit_5`
   \   00000014   ........           BL       ??PROTanksystemUnit_2
   \                     `??new PROTanksystemUnit_5`:
   \   00000018   ........           B        ?Subroutine48

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable18:
   \   00000000   ........           DC32     CurrentDeviceAddress

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable19:
   \   00000000   ........           DC32     GlobalDeviceHWId

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable23:
   \   00000000   ........           DC32     MyProgramVersion

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable24:
   \   00000000   00F0FF31           DC32     0x31fff000

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable25:
   \   00000000   ........           DC32     ??TanksystemUnitSet

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable27:
   \   00000000   ........           DC32     ??set

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable28:
   \   00000000   ........           DC32     ??AnsiString

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable29:
   \   00000000   ........           DC32     ??ConfigInfoPtr

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable30:
   \   00000000   ........           DC32     ??PROProjectInfoPtr

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable31:
   \   00000000   ........           DC32     ??ProjectName

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable32:
   \   00000000   ........           DC32     CurrentDeviceId

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable36:
   \   00000000   ........           DC32     Master

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable38:
   \   00000000   ........           DC32     ??__vtbl

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable39:
   \   00000000   ........           DC32     ??TanksystemUnitSet

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable40:
   \   00000000   ........           DC32     ??Channels

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable41:
   \   00000000   ........           DC32     ??GlobalHW_UnitSet

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable42:
   \   00000000   50433A00           DC8      "PC:"

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable50:
   \   00000000   50433A00           DC8      "PC:"

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable51:
   \   00000000   ........           DC32     `?<Constant "TCU ">`

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable55:
   \   00000000   ........           DC32     ??npos

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable56:
   \   00000000   ........           DC32     ??npos

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable57:
   \   00000000   50433A00           DC8      "PC:"

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable59:
   \   00000000   ........           DC32     CurrentDeviceAddress

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable60:
   \   00000000   ........           DC32     `?<Constant "TCU ">`

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable61:
   \   00000000   ........           DC32     GlobalDeviceHWId

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable63:
   \   00000000   ........           DC32     MyProgramVersion

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable64:
   \   00000000   00F0FF31           DC32     0x31fff000

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable65:
   \   00000000   ........           DC32     CurrentDeviceId

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable71:
   \   00000000   ........           DC32     ??TanksystemUnitSet

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable74:
   \   00000000   ........           DC32     ??npos

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable75:
   \   00000000   ........           DC32     ??PROInclinPtr

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable76:
   \   00000000   ........           DC32     GlobalDeviceHWId

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable78:
   \   00000000   ........           DC32     RunningTime

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable84:
   \   00000000   ........           DC32     ??Channels

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable86:
   \   00000000   ........           DC32     SendFlashDataInProgress

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable87:
   \   00000000   ........           DC32     ??TanksystemUnitSet + 48

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable90:
   \   00000000   ........           DC32     Master

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable92:
   \   00000000   ........           DC32     ??npos

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable93:
   \   00000000   ........           DC32     CurrentDeviceId

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable95:
   \   00000000   ........           DC32     ??ProjectName

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable96:
   \   00000000   ........           DC32     MyProgramVersion

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable98:
   \   00000000   ........           DC32     ??ConfigInfoPtr

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable99:
   \   00000000   ........           DC32     ??SysInfoReqestComPortNum

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable100:
   \   00000000   ........           DC32     ??RequestConfig

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable101:
   \   00000000   ........           DC32     ??TanksystemUnitSet

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable102:
   \   00000000   ........           DC32     ??TanksystemUnitSet

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable103:
   \   00000000   ........           DC32     ??set

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable104:
   \   00000000   ........           DC32     ??AnsiString
   2332          

   Maximum stack usage in bytes:

     Function                       CSTACK
     --------                       ------
     AnsiString::~AnsiString()          4
     DeviceData::DeviceData(DeviceData const &)
                                        8
     DeviceData::operator=(DeviceData const &)
                                        8
     NetworkedDevice::NetworkedDevice(NetworkedDevice const &)
                                        8
     NetworkedDevice::operator=(NetworkedDevice const &)
                                        8
     PROTanksystemUnit::AddAtmReferenceSensor(AIPressSensor *)
                                        0
     PROTanksystemUnit::AdjustVoltage(float, int)
                                       20
     PROTanksystemUnit::Calculate()    52
     PROTanksystemUnit::CheckSysInfo()
                                       32
     PROTanksystemUnit::CheckSysInfo(TSNUart *)
                                       24
     PROTanksystemUnit::CreateId(int, int, int)
                                        0
     PROTanksystemUnit::FilterValue(float *, float, float)
                                       24
     PROTanksystemUnit::FindDevice(TSNUart *, int, int)
                                       28
     PROTanksystemUnit::FindMySelf(int, int, int)
                                       16
     PROTanksystemUnit::FindTCU(int)
                                       12
     PROTanksystemUnit::FindUnit(int, int)
                                       16
     PROTanksystemUnit::GetComPort(int, int)
                                        8
     PROTanksystemUnit::GetConfigFromTDU(TSNUart *)
                                       24
     PROTanksystemUnit::GetIOLoadDelay()
                                        0
     PROTanksystemUnit::GetProgramType()
                                        0
     PROTanksystemUnit::GetStringValue(int, int, AnsiString &)
                                      292
     PROTanksystemUnit::GetValue(int, int, float &, int &, int &)
                                       48
     PROTanksystemUnit::GetValueInfoTable(int &, int)
                                        4
     PROTanksystemUnit::GetValueInfoTableStatic(int &, int, int)
                                        0
     PROTanksystemUnit::InitTDUWinUarts()
                                       68
     PROTanksystemUnit::Initiate()    124
     PROTanksystemUnit::LoadConfigFromFile(TSNConfigString &)
                                      920
     PROTanksystemUnit::LoadConfigNetwork(TSNConfigString &)
                                      212
     PROTanksystemUnit::PROTanksystemUnit()
                                       28
     PROTanksystemUnit::PROTanksystemUnit(int, int)
                                       28
     PROTanksystemUnit::PROTanksystemUnit(int, int, int, PROTanksystemUnit *)
                                       36
     PROTanksystemUnit::PutFloatValue(int, float)
                                        4
     PROTanksystemUnit::PutValue(int, int, AnsiString, bool, int *)
                                       96
     PROTanksystemUnit::ReceiveData(unsigned char *)
                                       76
     PROTanksystemUnit::SendData(unsigned short)
                                      316
     PROTanksystemUnit::SetIOLoadDelay(int)
                                        0
     PROTanksystemUnit::SetId()       544
     PROTanksystemUnit::SetIdNet()    460
     PROTanksystemUnit::SetKeyFromUart()
                                        4
     PROTanksystemUnit::SetProList()
                                        0
     PROTanksystemUnit::SetUart(int, int, int, int, int, char)
                                       40
     PROTanksystemUnit::SysInfoTask()
                                        4
     PROTanksystemUnit::Update_Device_Info(TSNUart *, ANPRO10_COMMAND_2001 *)
                                       48
     PROTanksystemUnit::Update_Unit_Info(TSNUart *, ANPRO10_COMMAND_2001 *)
                                       12
     PROTanksystemUnit::VersionControl(TSNUart *)
                                       56
     PROTanksystemUnit::WriteConfigToFile(TSNConfigString &)
                                      940
     PROTanksystemUnit::new PROTanksystemUnit()
                                        4
     PROTanksystemUnit::new PROTanksystemUnit(int, int)
                                       12
     PROTanksystemUnit::new PROTanksystemUnit(int, int, int, PROTanksystemUnit *)
                                       24
     PROTanksystemUnit::~PROTanksystemUnit()
                                       36
     _Tree<_Tset_traits<PRogramObject *, less<PRogramObject *>, allocator<PRogramObject *>, false>>::_Erase(_Tree<_Tset_traits<PRogramObject *, less<PRogramObject *>, allocator<PRogramObject *>, false>>::_Nodeptr)
                                       16
     _Tree<_Tset_traits<PRogramObject *, less<PRogramObject *>, allocator<PRogramObject *>, false>>::_Insert(bool, _Tree<_Tset_traits<PRogramObject *, less<PRogramObject *>, allocator<PRogramObject *>, false>>::_Nodeptr, PRogramObject *)
                                       24
     _Tree<_Tset_traits<PRogramObject *, less<PRogramObject *>, allocator<PRogramObject *>, false>>::_Lbound(PRogramObject *) const
                                        0
     _Tree<_Tset_traits<PRogramObject *, less<PRogramObject *>, allocator<PRogramObject *>, false>>::_Ubound(PRogramObject *) const
                                        0
     _Tree<_Tset_traits<PRogramObject *, less<PRogramObject *>, allocator<PRogramObject *>, false>>::equal_range(PRogramObject *)
                                       28
     _Tree<_Tset_traits<PRogramObject *, less<PRogramObject *>, allocator<PRogramObject *>, false>>::erase(PRogramObject *)
                                       24
     _Tree<_Tset_traits<PRogramObject *, less<PRogramObject *>, allocator<PRogramObject *>, false>>::erase(_Tree<_Tset_traits<PRogramObject *, less<PRogramObject *>, allocator<PRogramObject *>, false>>::iterator, _Tree<_Tset_traits<PRogramObject *, less<PRogramObject *>, allocator<PRogramObject *>, false>>::iterator)
                                       20
     _Tree<_Tset_traits<PRogramObject *, less<PRogramObject *>, allocator<PRogramObject *>, false>>::insert(PRogramObject *)
                                       44
     _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::_Erase(_Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::_Nodeptr)
                                       16
     _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::_Insert(bool, _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::_Nodeptr, PRogramObjectBase *)
                                       24
     _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::_Lbound(PRogramObjectBase *) const
                                        0
     _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::_Ubound(PRogramObjectBase *) const
                                        0
     _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::clear()
                                        8
     _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::equal_range(PRogramObjectBase *)
                                       28
     _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::erase(PRogramObjectBase *)
                                       24
     _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::erase(_Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::iterator, _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::iterator)
                                       20
     _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::insert(PRogramObjectBase *)
                                       44
     _Tree_algobase<allocator<void>>::_Clear()
                                        0
     _Tree_algobase<allocator<void>>::_DecP(_Tree_algobase<allocator<void>>::_Genptr)
                                        0
     _Tree_algobase<allocator<void>>::_Erase(_Tree_algobase<allocator<void>>::_Genptr)
                                       32
     _Tree_algobase<allocator<void>>::_IncP(_Tree_algobase<allocator<void>>::_Genptr)
                                        0
     _Tree_algobase<allocator<void>>::_Insert(bool, _Tree_algobase<allocator<void>>::_Genptr, _Tree_algobase<allocator<void>>::_Genptr)
                                       20
     _Tree_algobase<allocator<void>>::_Lrotate(_Tree_algobase<allocator<void>>::_Genptr)
                                        0
     _Tree_algobase<allocator<void>>::_Rrotate(_Tree_algobase<allocator<void>>::_Genptr)
                                        0
     _Vector_impl<AnalogInput *, allocator<AnalogInput *>>::_Insert(AnalogInput **, AnalogInput * const &)
                                       16
     _Vector_impl<AnalogInput *, allocator<AnalogInput *>>::_Make_room(AnalogInput **, unsigned int)
                                       32
     _Vector_impl<AnalogInput *, allocator<AnalogInput *>>::_Push_back0(AnalogInput *)
                                        8
     _Vector_impl<DeviceData, allocator<DeviceData>>::_Assign(_Vector_impl<DeviceData, allocator<DeviceData>> const &)
                                       32
     _Vector_impl<DeviceData, allocator<DeviceData>>::_Destroy(DeviceData *, DeviceData *)
                                       12
     _Vector_impl<DeviceData, allocator<DeviceData>>::_Insert_n(DeviceData *, unsigned int, DeviceData const &)
                                       52
     _Vector_impl<DeviceData, allocator<DeviceData>>::_Make_room(DeviceData *, unsigned int)
                                       36
     _Vector_impl<DeviceData, allocator<DeviceData>>::_Push_back0(DeviceData const &)
                                       24
     _Vector_impl<DeviceData, allocator<DeviceData>>::_Tidy0()
                                        8
     _Vector_impl<DeviceData, allocator<DeviceData>>::_Ucopy(DeviceData const *, DeviceData const *, DeviceData *)
                                       16
     _Vector_impl<NetworkedDevice, allocator<NetworkedDevice>>::_EraseAll()
                                       16
     _Vector_impl<NetworkedDevice, allocator<NetworkedDevice>>::_Insert_n(NetworkedDevice *, unsigned int, NetworkedDevice const &)
                                       52
     _Vector_impl<NetworkedDevice, allocator<NetworkedDevice>>::_Make_room(NetworkedDevice *, unsigned int)
                                       36
     _Vector_impl<NetworkedDevice, allocator<NetworkedDevice>>::_Push_back0(NetworkedDevice const &)
                                       24
     _Vector_impl<NetworkedDevice, allocator<NetworkedDevice>>::_Tidy0()
                                        8
     _Vector_impl<NetworkedDevice, allocator<NetworkedDevice>>::_Ucopy(NetworkedDevice const *, NetworkedDevice const *, NetworkedDevice *)
                                       16
     _Vector_impl<vector<DeviceData>, allocator<vector<DeviceData>>>::_EraseAll()
                                       16
     _Vector_impl<vector<DeviceData>, allocator<vector<DeviceData>>>::_Insert0(vector<DeviceData> *, vector<DeviceData> const &)
                                       32
     _Vector_impl<vector<DeviceData>, allocator<vector<DeviceData>>>::_Make_room(vector<DeviceData> *, unsigned int)
                                       36
     _Vector_impl<vector<DeviceData>, allocator<vector<DeviceData>>>::_Push_back0(vector<DeviceData> const &)
                                        8
     _Vector_impl<vector<DeviceData>, allocator<vector<DeviceData>>>::_Tidy0()
                                        8
     _Vector_impl<vector<DeviceData>, allocator<vector<DeviceData>>>::_Ucopy(vector<DeviceData> const *, vector<DeviceData> const *, vector<DeviceData> *)
                                       16
     _Vector_impl<vector<DeviceData>, allocator<vector<DeviceData>>>::_Ufill(vector<DeviceData> *, unsigned int, vector<DeviceData> const &)
                                       24
     _Vector_value<allocator<void>>::_Zero()
                                        0
     __sti__routine()                  12
     operator+(char const *, string const &)
                                       44
     operator+(string const &, char const *)
                                       44
     operator+(string const &, string const &)
                                       40
     set<PRogramObjectBase *>::set()
                                       12
     set<PRogramObjectBase *>::~set()
                                        4
     string::c_str() const              0
     string::string(string const &)    12
     vector<NetworkedDevice>::~vector()
                                        8
     vector<PRogramObjectBase *>::~vector()
                                        8


   Segment part sizes:

     Function/Label                 Bytes
     --------------                 -----
     string::string(string const &)   64
     string::c_str() const            24
     _Tree_algobase<allocator<void>>::_DecP(_Tree_algobase<allocator<void>>::_Genptr)
                                     100
     _Tree_algobase<allocator<void>>::_IncP(_Tree_algobase<allocator<void>>::_Genptr)
                                      92
     _Tree_algobase<allocator<void>>::_Clear()
                                      36
     _Tree_algobase<allocator<void>>::_Rrotate(_Tree_algobase<allocator<void>>::_Genptr)
                                      84
     _Tree_algobase<allocator<void>>::_Lrotate(_Tree_algobase<allocator<void>>::_Genptr)
                                      84
     _Tree_algobase<allocator<void>>::_Erase(_Tree_algobase<allocator<void>>::_Genptr)
                                     804
     _Tree_algobase<allocator<void>>::_Insert(bool, _Tree_algobase<allocator<void>>::_Genptr, _Tree_algobase<allocator<void>>::_Genptr)
                                     356
     _Tree<_Tset_traits<PRogramObject *, less<PRogramObject *>, allocator<PRogramObject *>, false>>::insert(PRogramObject *)
                                     200
     _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::insert(PRogramObjectBase *)
                                     200
     _Tree<_Tset_traits<PRogramObject *, less<PRogramObject *>, allocator<PRogramObject *>, false>>::erase(_Tree<_Tset_traits<PRogramObject *, less<PRogramObject *>, allocator<PRogramObject *>, false>>::iterator, _Tree<_Tset_traits<PRogramObject *, less<PRogramObject *>, allocator<PRogramObject *>, false>>::iterator)
                                     120
     _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::erase(_Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::iterator, _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::iterator)
                                     108
     _Tree<_Tset_traits<PRogramObject *, less<PRogramObject *>, allocator<PRogramObject *>, false>>::erase(PRogramObject *)
                                      84
     _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::erase(PRogramObjectBase *)
                                      84
     _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::clear()
                                      32
     _Tree<_Tset_traits<PRogramObject *, less<PRogramObject *>, allocator<PRogramObject *>, false>>::equal_range(PRogramObject *)
                                      76
     _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::equal_range(PRogramObjectBase *)
                                      76
     _Tree<_Tset_traits<PRogramObject *, less<PRogramObject *>, allocator<PRogramObject *>, false>>::_Erase(_Tree<_Tset_traits<PRogramObject *, less<PRogramObject *>, allocator<PRogramObject *>, false>>::_Nodeptr)
                                      68
     _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::_Erase(_Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::_Nodeptr)
                                      68
     _Tree<_Tset_traits<PRogramObject *, less<PRogramObject *>, allocator<PRogramObject *>, false>>::_Insert(bool, _Tree<_Tset_traits<PRogramObject *, less<PRogramObject *>, allocator<PRogramObject *>, false>>::_Nodeptr, PRogramObject *)
                                      96
     _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::_Insert(bool, _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::_Nodeptr, PRogramObjectBase *)
                                      96
     _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::_Lbound(PRogramObjectBase *) const
                                      40
     _Tree<_Tset_traits<PRogramObject *, less<PRogramObject *>, allocator<PRogramObject *>, false>>::_Lbound(PRogramObject *) const
                                      40
     _Tree<_Tset_traits<PRogramObject *, less<PRogramObject *>, allocator<PRogramObject *>, false>>::_Ubound(PRogramObject *) const
                                      40
     _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::_Ubound(PRogramObjectBase *) const
                                      40
     set<PRogramObjectBase *>::~set()
                                      16
     set<PRogramObjectBase *>::set()
                                      48
     _Vector_value<allocator<void>>::_Zero()
                                      20
     _Vector_impl<vector<DeviceData>, allocator<vector<DeviceData>>>::_EraseAll()
                                      64
     _Vector_impl<NetworkedDevice, allocator<NetworkedDevice>>::_EraseAll()
                                      64
     _Vector_impl<DeviceData, allocator<DeviceData>>::_Tidy0()
                                      48
     _Vector_impl<NetworkedDevice, allocator<NetworkedDevice>>::_Tidy0()
                                      44
     _Vector_impl<vector<DeviceData>, allocator<vector<DeviceData>>>::_Tidy0()
                                      44
     _Vector_impl<DeviceData, allocator<DeviceData>>::_Destroy(DeviceData *, DeviceData *)
                                      52
     _Vector_impl<DeviceData, allocator<DeviceData>>::_Assign(_Vector_impl<DeviceData, allocator<DeviceData>> const &)
                                     380
     _Vector_impl<AnalogInput *, allocator<AnalogInput *>>::_Insert(AnalogInput **, AnalogInput * const &)
                                      72
     _Vector_impl<NetworkedDevice, allocator<NetworkedDevice>>::_Insert_n(NetworkedDevice *, unsigned int, NetworkedDevice const &)
                                     120
     _Vector_impl<DeviceData, allocator<DeviceData>>::_Insert_n(DeviceData *, unsigned int, DeviceData const &)
                                     120
     _Vector_impl<vector<DeviceData>, allocator<vector<DeviceData>>>::_Make_room(vector<DeviceData> *, unsigned int)
                                     460
     _Vector_impl<DeviceData, allocator<DeviceData>>::_Make_room(DeviceData *, unsigned int)
                                     416
     _Vector_impl<NetworkedDevice, allocator<NetworkedDevice>>::_Make_room(NetworkedDevice *, unsigned int)
                                     460
     _Vector_impl<AnalogInput *, allocator<AnalogInput *>>::_Make_room(AnalogInput **, unsigned int)
                                     244
     _Vector_impl<vector<DeviceData>, allocator<vector<DeviceData>>>::_Insert0(vector<DeviceData> *, vector<DeviceData> const &)
                                     120
     _Vector_impl<AnalogInput *, allocator<AnalogInput *>>::_Push_back0(AnalogInput *)
                                      72
     _Vector_impl<DeviceData, allocator<DeviceData>>::_Push_back0(DeviceData const &)
                                     112
     _Vector_impl<vector<DeviceData>, allocator<vector<DeviceData>>>::_Push_back0(vector<DeviceData> const &)
                                      76
     _Vector_impl<NetworkedDevice, allocator<NetworkedDevice>>::_Push_back0(NetworkedDevice const &)
                                     112
     _Vector_impl<vector<DeviceData>, allocator<vector<DeviceData>>>::_Ufill(vector<DeviceData> *, unsigned int, vector<DeviceData> const &)
                                      88
     _Vector_impl<NetworkedDevice, allocator<NetworkedDevice>>::_Ucopy(NetworkedDevice const *, NetworkedDevice const *, NetworkedDevice *)
                                      68
     _Vector_impl<vector<DeviceData>, allocator<vector<DeviceData>>>::_Ucopy(vector<DeviceData> const *, vector<DeviceData> const *, vector<DeviceData> *)
                                      76
     _Vector_impl<DeviceData, allocator<DeviceData>>::_Ucopy(DeviceData const *, DeviceData const *, DeviceData *)
                                      68
     vector<PRogramObjectBase *>::~vector()
                                      44
     vector<NetworkedDevice>::~vector()
                                      28
     operator+(string const &, string const &)
                                      88
     operator+(char const *, string const &)
                                     128
     operator+(string const &, char const *)
                                      92
     AnsiString::~AnsiString()        24
     BootVersion                       4
     LastOSError                       4
     FlashErrorStatus                  4
     LastOSErrorTask                  32
     LastErrAddress                    4
     DeviceData::operator=(DeviceData const &)
                                      64
     DeviceData::DeviceData(DeviceData const &)
                                      48
     NetworkedDevice::NetworkedDevice(NetworkedDevice const &)
                                      48
     NetworkedDevice::operator=(NetworkedDevice const &)
                                      64
     PROTanksystemUnit::TCU_R1UnitValueList
                                     948
     PROTanksystemUnit::MySettingsId
                                       4
     __sti__routine()                 60
     ?_0                              36
     PROTanksystemUnit::TanksystemUnitSet
                                      68
     PROTanksystemUnit::TaskStack   8192
     PROTanksystemUnit::SysInfoReqestComPortNum
                                      76
     PROTanksystemUnit::PROTanksystemUnit(int, int, int, PROTanksystemUnit *)
                                     640
     ?Subroutine49                    16
     PROTanksystemUnit::PROTanksystemUnit(int, int)
                                     656
     ?Subroutine50                     8
     PROTanksystemUnit::PROTanksystemUnit()
                                     516
     PROTanksystemUnit::Initiate()   500
     PROTanksystemUnit::InitTDUWinUarts()
                                     348
     PROTanksystemUnit::~PROTanksystemUnit()
                                     800
     PROTanksystemUnit::AddAtmReferenceSensor(AIPressSensor *)
                                       8
     PROTanksystemUnit::SetKeyFromUart()
                                     632
     PROTanksystemUnit::SetProList()
                                       4
     ?Subroutine46                    12
     PROTanksystemUnit::SetId()      860
     PROTanksystemUnit::SetIdNet()   740
     PROTanksystemUnit::CreateId(int, int, int)
                                      40
     PROTanksystemUnit::SetUart(int, int, int, int, int, char)
                                     784
     ?Subroutine51                     8
     PROTanksystemUnit::WriteConfigToFile(TSNConfigString &)
                                    1752
     PROTanksystemUnit::LoadConfigFromFile(TSNConfigString &)
                                    3112
     PROTanksystemUnit::LoadConfigNetwork(TSNConfigString &)
                                     524
     ?Subroutine52                    16
     PROTanksystemUnit::GetValue(int, int, float &, int &, int &)
                                     788
     PROTanksystemUnit::GetStringValue(int, int, AnsiString &)
                                     972
     PROTanksystemUnit::PutValue(int, int, AnsiString, bool, int *)
                                     264
     PROTanksystemUnit::PutFloatValue(int, float)
                                       8
     ?Subroutine48                     8
     PROTanksystemUnit::FilterValue(float *, float, float)
                                     132
     ?Subroutine53                    20
     PROTanksystemUnit::Calculate() 2040
     PROTanksystemUnit::AdjustVoltage(float, int)
                                     212
     ?Subroutine47                    24
     Cnt                               4
     PROTanksystemUnit::ReceiveData(unsigned char *)
                                    1084
     PROTanksystemUnit::SendData(unsigned short)
                                    1116
     PROTanksystemUnit::GetValueInfoTableStatic(int &, int, int)
                                      88
     PROTanksystemUnit::GetValueInfoTable(int &, int)
                                      28
     PROTanksystemUnit::CheckSysInfo()
                                     188
     PROTanksystemUnit::GetConfigFromTDU(TSNUart *)
                                     320
     TryToRetreiveDataCnt              5
     PROTanksystemUnit::SysInfoTask()
                                      20
     PROTanksystemUnit::FindDevice(TSNUart *, int, int)
                                     224
     PROTanksystemUnit::FindMySelf(int, int, int)
                                      76
     ?Subroutine54                     8
     PROTanksystemUnit::GetProgramType()
                                       8
     PROTanksystemUnit::Update_Device_Info(TSNUart *, ANPRO10_COMMAND_2001 *)
                                     404
     PROTanksystemUnit::Update_Unit_Info(TSNUart *, ANPRO10_COMMAND_2001 *)
                                      48
     PROTanksystemUnit::VersionControl(TSNUart *)
                                     516
     PROTanksystemUnit::CheckSysInfo(TSNUart *)
                                     304
     PROTanksystemUnit::SetIOLoadDelay(int)
                                       8
     PROTanksystemUnit::GetIOLoadDelay()
                                       8
     PROTanksystemUnit::FindTCU(int)
                                      80
     PROTanksystemUnit::GetComPort(int, int)
                                      32
     PROTanksystemUnit::FindUnit(int, int)
                                      68
     ?<Initializer for TCU_R1UnitValueList>
                                     948
     ?<Constant "TDUConfig">          12
     ?<Constant "TCU ">               40
     ?<Constant " ">                   2
     ?<Constant {(0.0F), (20.0F), (20.0F), (3.29999
                                      32
     ?<Constant "00:00:00">           32
     ?<Constant "%i">                  3
     ?<Constant "Network">             8
     ?<Constant "PC:">                 4
     PROTanksystemUnit::new PROTanksystemUnit(int, int)
                                      44
     PROTanksystemUnit::new PROTanksystemUnit(int, int, int, PROTanksystemUnit *)
                                      64
     PROTanksystemUnit::new PROTanksystemUnit()
                                      28
     ??DataTable18                     4
     ??DataTable19                     4
     ??DataTable23                     4
     ??DataTable24                     4
     ??DataTable25                     4
     ??DataTable27                     4
     ??DataTable28                     4
     ??DataTable29                     4
     ??DataTable30                     4
     ??DataTable31                     4
     ??DataTable32                     4
     ??DataTable36                     4
     ??DataTable38                     4
     ??DataTable39                     4
     ??DataTable40                     4
     ??DataTable41                     4
     ??DataTable42                     4
     ??DataTable50                     4
     ??DataTable51                     4
     ??DataTable55                     4
     ??DataTable56                     4
     ??DataTable57                     4
     ??DataTable59                     4
     ??DataTable60                     4
     ??DataTable61                     4
     ??DataTable63                     4
     ??DataTable64                     4
     ??DataTable65                     4
     ??DataTable71                     4
     ??DataTable74                     4
     ??DataTable75                     4
     ??DataTable76                     4
     ??DataTable78                     4
     ??DataTable84                     4
     ??DataTable86                     4
     ??DataTable87                     4
     ??DataTable90                     4
     ??DataTable92                     4
     ??DataTable93                     4
     ??DataTable95                     4
     ??DataTable96                     4
     ??DataTable98                     4
     ??DataTable99                     4
     ??DataTable100                    4
     ??DataTable101                    4
     ??DataTable102                    4
     ??DataTable103                    4
     ??DataTable104                    4
      Others                        2164

 
 30 664 bytes in segment CODE
     48 bytes in segment DATA_AN
    293 bytes in segment DATA_C
    948 bytes in segment DATA_I
    948 bytes in segment DATA_ID
  8 361 bytes in segment DATA_Z
      4 bytes in segment DIFUNCT
     24 bytes in segment INITTAB
 
 21 464 bytes of CODE  memory (+ 9 228 bytes shared)
  1 241 bytes of CONST memory
  9 309 bytes of DATA  memory (+    48 bytes shared)

Errors: none
Warnings: 2
