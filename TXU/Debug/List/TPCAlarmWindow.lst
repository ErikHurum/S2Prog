##############################################################################
#                                                                            #
# IAR ARM ANSI C/C++ Compiler V4.42A/W32               14/Sep/2022  15:19:11 #
# Copyright 1999-2005 IAR Systems. All rights reserved.                      #
#                                                                            #
#    Cpu mode        =  interwork                                            #
#    Endian          =  little                                               #
#    Stack alignment =  4                                                    #
#    Source file     =  D:\S2Prog\Shared\Src\TPCAlarmWindow.cpp              #
#    Command line    =  D:\S2Prog\Shared\Src\TPCAlarmWindow.cpp --fpu None   #
#                       -D OS_LIBMODE_SP -D CPU_S3C2410 -D OS_RAMVECT=0 -D   #
#                       OS_UART=-1 -D S2TXU -D USE_LZO=1 -D __ARM_LIBRARY__  #
#                       -D WATCHDOG=1 -D NETWORK=1 -lCN                      #
#                       D:\S2Prog\TXU\Debug\List\ -o                         #
#                       D:\S2Prog\TXU\Debug\Obj\ -z9 --debug --cpu_mode arm  #
#                       --endian little --cpu ARM920T --stack_align 4        #
#                       --interwork -e --enable_multibytes --eec++           #
#                       --dlib_config "C:\Program Files (x86)\IAR            #
#                       Systems\Embedded Workbench                           #
#                       4.0\arm\LIB\dl4tpainl8n.h" -I                        #
#                       D:\S2Prog\TXU\GUI\CORE\ -I D:\S2Prog\TXU\GUI\WM\ -I  #
#                       D:\S2Prog\TXU\GUI\WIDGET\ -I D:\S2Prog\TXU\CONFIG\   #
#                       -I D:\S2Prog\TXU\INC\ -I D:\S2Prog\TXU\..\SHARED\INC #
#                       \ -I D:\S2Prog\TXU\..\SHARED\SRC\ -I                 #
#                       D:\S2Prog\TXU\..\SHARED\LZO\minilzo.210\ -I          #
#                       D:\S2Prog\TXU\lwip-1.4.1\src\include\ -I             #
#                       D:\S2Prog\TXU\lwip-1.4.1\src\include\ipv4\ -I        #
#                       D:\S2Prog\TXU\lwip-1.4.1\src\ -I                     #
#                       D:\S2Prog\TXU\..\SHARED\Database\ -I                 #
#                       D:\S2Prog\TXU\src\ -I "C:\Program Files (x86)\IAR    #
#                       Systems\Embedded Workbench 4.0\arm\INC\"             #
#                       --inline_threshold=2                                 #
#    List file       =  D:\S2Prog\TXU\Debug\List\TPCAlarmWindow.lst          #
#    Object file     =  D:\S2Prog\TXU\Debug\Obj\TPCAlarmWindow.r79           #
#                                                                            #
#                                                                            #
##############################################################################

D:\S2Prog\Shared\Src\TPCAlarmWindow.cpp
      1          #include "TSNIncludes.h"

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void operator+(string const &, string const &)
   \                     `??operator+`:
   \   00000000   F0402DE9           PUSH     {R4-R7,LR}
   \   00000004   1CD04DE2           SUB      SP,SP,#+28
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   0150A0E1           MOV      R5,R1
   \   00000010   0260A0E1           MOV      R6,R2
   \   00000014   0020A0E3           MOV      R2,#+0
   \   00000018   0010A0E3           MOV      R1,#+0
   \   0000001C   0D00A0E1           MOV      R0,SP
   \   00000020   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000024   6C009FE5           LDR      R0,`??operator+_1`  ;; ??npos
   \   00000028   0020A0E3           MOV      R2,#+0
   \   0000002C   007090E5           LDR      R7,[R0, #+0]
   \   00000030   0510A0E1           MOV      R1,R5
   \   00000034   0730A0E1           MOV      R3,R7
   \   00000038   0D00A0E1           MOV      R0,SP
   \   0000003C   ........           _BLF     ??assign,??assign??rA
   \   00000040   0730A0E1           MOV      R3,R7
   \   00000044   0020A0E3           MOV      R2,#+0
   \   00000048   0610A0E1           MOV      R1,R6
   \   0000004C   0D00A0E1           MOV      R0,SP
   \   00000050   ........           _BLF     ??append,??append??rA
   \   00000054   0050A0E1           MOV      R5,R0
   \   00000058   0020A0E3           MOV      R2,#+0
   \   0000005C   0210A0E1           MOV      R1,R2
   \   00000060   0400A0E1           MOV      R0,R4
   \   00000064   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000068   0730A0E1           MOV      R3,R7
   \   0000006C   0020A0E3           MOV      R2,#+0
   \   00000070   0510A0E1           MOV      R1,R5
   \   00000074   0400A0E1           MOV      R0,R4
   \   00000078   ........           _BLF     ??assign,??assign??rA
   \   0000007C   0020A0E3           MOV      R2,#+0
   \   00000080   0110A0E3           MOV      R1,#+1
   \   00000084   0D00A0E1           MOV      R0,SP
   \   00000088   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   0000008C   1CD08DE2           ADD      SP,SP,#+28
   \   00000090   F040BDE8           POP      {R4-R7,LR}
   \   00000094   1EFF2FE1           BX       LR               ;; return
   \                     `??operator+_1`:
   \   00000098   ........           DC32     ??npos

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs AnsiString::AnsiString(AnsiString const &)
   \                     ??AnsiString:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
   \   0000000C   0020A0E3           MOV      R2,#+0
   \   00000010   0010A0E3           MOV      R1,#+0
   \   00000014   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000018   1C009FE5           LDR      R0,??AnsiString_3  ;; ??npos
   \   0000001C   0020A0E3           MOV      R2,#+0
   \   00000020   003090E5           LDR      R3,[R0, #+0]
   \   00000024   0510A0E1           MOV      R1,R5
   \   00000028   0400A0E1           MOV      R0,R4
   \   0000002C   ........           _BLF     ??assign,??assign??rA
   \   00000030   0400A0E1           MOV      R0,R4
   \   00000034   3040BDE8           POP      {R4,R5,LR}
   \   00000038   1EFF2FE1           BX       LR               ;; return
   \                     ??AnsiString_3:
   \   0000003C   ........           DC32     ??npos
      2          #pragma hdrstop
      3          #ifdef BORLAND
      4          #pragma package(smart_init)
      5          #endif
      6          
      7          //---------------------------------------------------------------------------
      8          
      9          

   \                                 In segment CODE, align 4, keep-with-next
     10          TPCAlarmWindow::TPCAlarmWindow(void)
     11          {
     12          //  LocationType;
     13          //	Index = 0;
     14          	MainDisplay = 0;
   \                     ??TPCAlarmWindow:
   \   00000000   0010A0E3           MOV      R1,#+0
   \   00000004   B010C0E1           STRH     R1,[R0, #+0]
     15          	UpperDisplay = 0;
   \   00000008   B210C0E1           STRH     R1,[R0, #+2]
     16            MainGraph = 0;
   \   0000000C   B410C0E1           STRH     R1,[R0, #+4]
     17           //	Graph[TPC_MAX_GRAPHS];
     18          //	BottomDisplay = 0;
     19          //	TopDisplay = 0;
     20          //	ValName = "";
     21          //	LocName = "";
     22          //	MsgPtr = "";
     23          //	DispUVal = 0.0;
     24          //	DispLVal = 0.0;
     25           // GraphVal[TPC_MAX_GRAPHS];
     26          }
   \   00000010   1EFF2FE1           BX       LR               ;; return
     27          

   \                                 In segment CODE, align 4, keep-with-next
     28          TPCAlarmWindow::~TPCAlarmWindow(void)
     29          {
     30          }
   \                     `?~TPCAlarmWindow`:
   \   00000000   1EFF2FE1           BX       LR               ;; return
     31          //---------------------------------------------------------------------------
     32          
     33          ///////////////////////////////////////////////////////////////
     34          //
     35          // Routines for the Configuration
     36          //
     37          ///////////////////////////////////////////////////////////////
     38          

   \                                 In segment CODE, align 4, keep-with-next
     39          AnsiString TPCAlarmWindow::MakeConfigString(int ExtraTabs)
     40          {
   \                     ??MakeConfigString:
   \   00000000   F0432DE9           PUSH     {R4-R9,LR}
     41            AnsiString LocalString;
     42            LocalString +=TabStr2+KeyWord(C_TPC_ALARM_WINDOW)+CrLfStr;
   \   00000004   54639FE5           LDR      R6,??MakeConfigString_1  ;; TabStr2
   \   00000008   54739FE5           LDR      R7,??MakeConfigString_1+0x4  ;; CrLfStr
   \   0000000C   9ADF4DE2           SUB      SP,SP,#+616
   \   00000010   0040A0E1           MOV      R4,R0
     43            LocalString +=TabStr3+KeyWord(C_TPC_UPPER_DISP)+KeyWord(UpperDisplay)+CrLfStr;
   \   00000014   4C939FE5           LDR      R9,??MakeConfigString_1+0x8  ;; TabStr3
   \   00000018   0150A0E1           MOV      R5,R1
   \   0000001C   0500A0E1           MOV      R0,R5
   \   00000020   ........           _BLF     ??AnsiString_1,??AnsiString??rA
   \   00000024   D610A0E3           MOV      R1,#+214
   \   00000028   601E81E3           ORR      R1,R1,#0x600
   \   0000002C   38008DE2           ADD      R0,SP,#+56
   \   00000030   ........           _BLF     ??KeyWord,??KeyWord??rA
   \   00000034   38208DE2           ADD      R2,SP,#+56
   \   00000038   0610A0E1           MOV      R1,R6
   \   0000003C   1C008DE2           ADD      R0,SP,#+28
   \   00000040   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000044   0720A0E1           MOV      R2,R7
   \   00000048   1C108DE2           ADD      R1,SP,#+28
   \   0000004C   0D00A0E1           MOV      R0,SP
   \   00000050   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000054   10039FE5           LDR      R0,??MakeConfigString_1+0xC  ;; ??npos
   \   00000058   0020A0E3           MOV      R2,#+0
   \   0000005C   008090E5           LDR      R8,[R0, #+0]
   \   00000060   0D10A0E1           MOV      R1,SP
   \   00000064   0830A0E1           MOV      R3,R8
   \   00000068   0500A0E1           MOV      R0,R5
   \   0000006C   ........           _BLF     ??append,??append??rA
   \   00000070   0020A0E3           MOV      R2,#+0
   \   00000074   0110A0E3           MOV      R1,#+1
   \   00000078   0D00A0E1           MOV      R0,SP
   \   0000007C   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000080   0020A0E3           MOV      R2,#+0
   \   00000084   0110A0E3           MOV      R1,#+1
   \   00000088   1C008DE2           ADD      R0,SP,#+28
   \   0000008C   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000090   0020A0E3           MOV      R2,#+0
   \   00000094   0110A0E3           MOV      R1,#+1
   \   00000098   38008DE2           ADD      R0,SP,#+56
   \   0000009C   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000000A0   F210D4E1           LDRSH    R1,[R4, #+2]
   \   000000A4   C4008DE2           ADD      R0,SP,#+196
   \   000000A8   ........           _BLF     ??KeyWord,??KeyWord??rA
   \   000000AC   C410A0E3           MOV      R1,#+196
   \   000000B0   601E81E3           ORR      R1,R1,#0x600
   \   000000B4   A8008DE2           ADD      R0,SP,#+168
   \   000000B8   ........           _BLF     ??KeyWord,??KeyWord??rA
   \   000000BC   A8208DE2           ADD      R2,SP,#+168
   \   000000C0   0910A0E1           MOV      R1,R9
   \   000000C4   8C008DE2           ADD      R0,SP,#+140
   \   000000C8   ........           _BLF     `??operator+`,`??operator+??rA`
   \   000000CC   C4208DE2           ADD      R2,SP,#+196
   \   000000D0   8C108DE2           ADD      R1,SP,#+140
   \   000000D4   70008DE2           ADD      R0,SP,#+112
   \   000000D8   ........           _BLF     `??operator+`,`??operator+??rA`
   \   000000DC   0720A0E1           MOV      R2,R7
   \   000000E0   70108DE2           ADD      R1,SP,#+112
   \   000000E4   54008DE2           ADD      R0,SP,#+84
   \   000000E8   ........           _BLF     `??operator+`,`??operator+??rA`
   \   000000EC   0830A0E1           MOV      R3,R8
   \   000000F0   0020A0E3           MOV      R2,#+0
   \   000000F4   54108DE2           ADD      R1,SP,#+84
   \   000000F8   0500A0E1           MOV      R0,R5
   \   000000FC   ........           _BLF     ??append,??append??rA
   \   00000100   0020A0E3           MOV      R2,#+0
   \   00000104   0110A0E3           MOV      R1,#+1
   \   00000108   54008DE2           ADD      R0,SP,#+84
   \   0000010C   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000110   0020A0E3           MOV      R2,#+0
   \   00000114   0110A0E3           MOV      R1,#+1
   \   00000118   70008DE2           ADD      R0,SP,#+112
   \   0000011C   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000120   0020A0E3           MOV      R2,#+0
   \   00000124   0110A0E3           MOV      R1,#+1
   \   00000128   C4008DE2           ADD      R0,SP,#+196
   \   0000012C   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000130   0020A0E3           MOV      R2,#+0
   \   00000134   0110A0E3           MOV      R1,#+1
   \   00000138   8C008DE2           ADD      R0,SP,#+140
   \   0000013C   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000140   0020A0E3           MOV      R2,#+0
   \   00000144   0110A0E3           MOV      R1,#+1
   \   00000148   A8008DE2           ADD      R0,SP,#+168
   \   0000014C   ........           _BLF     ??_Tidy,??_Tidy??rA
     44            LocalString +=TabStr3+KeyWord(C_TPC_MAIN_DISP)+KeyWord(MainDisplay)+CrLfStr;
   \   00000150   F010D4E1           LDRSH    R1,[R4, #+0]
   \   00000154   540F8DE2           ADD      R0,SP,#+336
   \   00000158   ........           _BLF     ??KeyWord,??KeyWord??rA
   \   0000015C   C510A0E3           MOV      R1,#+197
   \   00000160   601E81E3           ORR      R1,R1,#0x600
   \   00000164   4D0F8DE2           ADD      R0,SP,#+308
   \   00000168   ........           _BLF     ??KeyWord,??KeyWord??rA
   \   0000016C   4D2F8DE2           ADD      R2,SP,#+308
   \   00000170   0910A0E1           MOV      R1,R9
   \   00000174   460F8DE2           ADD      R0,SP,#+280
   \   00000178   ........           _BLF     `??operator+`,`??operator+??rA`
   \   0000017C   542F8DE2           ADD      R2,SP,#+336
   \   00000180   461F8DE2           ADD      R1,SP,#+280
   \   00000184   FC008DE2           ADD      R0,SP,#+252
   \   00000188   ........           _BLF     `??operator+`,`??operator+??rA`
   \   0000018C   0720A0E1           MOV      R2,R7
   \   00000190   FC108DE2           ADD      R1,SP,#+252
   \   00000194   E0008DE2           ADD      R0,SP,#+224
   \   00000198   ........           _BLF     `??operator+`,`??operator+??rA`
   \   0000019C   0830A0E1           MOV      R3,R8
   \   000001A0   0020A0E3           MOV      R2,#+0
   \   000001A4   E0108DE2           ADD      R1,SP,#+224
   \   000001A8   0500A0E1           MOV      R0,R5
   \   000001AC   ........           _BLF     ??append,??append??rA
   \   000001B0   0020A0E3           MOV      R2,#+0
   \   000001B4   0110A0E3           MOV      R1,#+1
   \   000001B8   E0008DE2           ADD      R0,SP,#+224
   \   000001BC   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000001C0   0020A0E3           MOV      R2,#+0
   \   000001C4   0110A0E3           MOV      R1,#+1
   \   000001C8   FC008DE2           ADD      R0,SP,#+252
   \   000001CC   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000001D0   0020A0E3           MOV      R2,#+0
   \   000001D4   0110A0E3           MOV      R1,#+1
   \   000001D8   540F8DE2           ADD      R0,SP,#+336
   \   000001DC   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000001E0   0020A0E3           MOV      R2,#+0
   \   000001E4   0110A0E3           MOV      R1,#+1
   \   000001E8   460F8DE2           ADD      R0,SP,#+280
   \   000001EC   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000001F0   0020A0E3           MOV      R2,#+0
   \   000001F4   0110A0E3           MOV      R1,#+1
   \   000001F8   4D0F8DE2           ADD      R0,SP,#+308
   \   000001FC   ........           _BLF     ??_Tidy,??_Tidy??rA
     45            LocalString +=TabStr3+KeyWord(C_TPC_MAIN_GRAPH)+KeyWord(MainGraph)+CrLfStr;
   \   00000200   F410D4E1           LDRSH    R1,[R4, #+4]
   \   00000204   770F8DE2           ADD      R0,SP,#+476
   \   00000208   ........           _BLF     ??KeyWord,??KeyWord??rA
   \   0000020C   C610A0E3           MOV      R1,#+198
   \   00000210   601E81E3           ORR      R1,R1,#0x600
   \   00000214   700F8DE2           ADD      R0,SP,#+448
   \   00000218   ........           _BLF     ??KeyWord,??KeyWord??rA
   \   0000021C   702F8DE2           ADD      R2,SP,#+448
   \   00000220   0910A0E1           MOV      R1,R9
   \   00000224   690F8DE2           ADD      R0,SP,#+420
   \   00000228   ........           _BLF     `??operator+`,`??operator+??rA`
   \   0000022C   772F8DE2           ADD      R2,SP,#+476
   \   00000230   691F8DE2           ADD      R1,SP,#+420
   \   00000234   620F8DE2           ADD      R0,SP,#+392
   \   00000238   ........           _BLF     `??operator+`,`??operator+??rA`
   \   0000023C   0720A0E1           MOV      R2,R7
   \   00000240   621F8DE2           ADD      R1,SP,#+392
   \   00000244   5B0F8DE2           ADD      R0,SP,#+364
   \   00000248   ........           _BLF     `??operator+`,`??operator+??rA`
   \   0000024C   0830A0E1           MOV      R3,R8
   \   00000250   0020A0E3           MOV      R2,#+0
   \   00000254   5B1F8DE2           ADD      R1,SP,#+364
   \   00000258   0500A0E1           MOV      R0,R5
   \   0000025C   ........           _BLF     ??append,??append??rA
   \   00000260   0020A0E3           MOV      R2,#+0
   \   00000264   0110A0E3           MOV      R1,#+1
   \   00000268   5B0F8DE2           ADD      R0,SP,#+364
   \   0000026C   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000270   0020A0E3           MOV      R2,#+0
   \   00000274   0110A0E3           MOV      R1,#+1
   \   00000278   620F8DE2           ADD      R0,SP,#+392
   \   0000027C   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000280   0020A0E3           MOV      R2,#+0
   \   00000284   0110A0E3           MOV      R1,#+1
   \   00000288   770F8DE2           ADD      R0,SP,#+476
   \   0000028C   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000290   0020A0E3           MOV      R2,#+0
   \   00000294   0110A0E3           MOV      R1,#+1
   \   00000298   690F8DE2           ADD      R0,SP,#+420
   \   0000029C   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000002A0   0020A0E3           MOV      R2,#+0
   \   000002A4   0110A0E3           MOV      R1,#+1
   \   000002A8   700F8DE2           ADD      R0,SP,#+448
   \   000002AC   ........           _BLF     ??_Tidy,??_Tidy??rA
     46            LocalString +=TabStr2+KeyWord(C_TPC_END_WINDOW)+CrLfStr;
   \   000002B0   C310A0E3           MOV      R1,#+195
   \   000002B4   601E81E3           ORR      R1,R1,#0x600
   \   000002B8   8C0F8DE2           ADD      R0,SP,#+560
   \   000002BC   ........           _BLF     ??KeyWord,??KeyWord??rA
   \   000002C0   8C2F8DE2           ADD      R2,SP,#+560
   \   000002C4   0610A0E1           MOV      R1,R6
   \   000002C8   850F8DE2           ADD      R0,SP,#+532
   \   000002CC   ........           _BLF     `??operator+`,`??operator+??rA`
   \   000002D0   0720A0E1           MOV      R2,R7
   \   000002D4   851F8DE2           ADD      R1,SP,#+532
   \   000002D8   7E0F8DE2           ADD      R0,SP,#+504
   \   000002DC   ........           _BLF     `??operator+`,`??operator+??rA`
   \   000002E0   0830A0E1           MOV      R3,R8
   \   000002E4   0020A0E3           MOV      R2,#+0
   \   000002E8   7E1F8DE2           ADD      R1,SP,#+504
   \   000002EC   0500A0E1           MOV      R0,R5
   \   000002F0   ........           _BLF     ??append,??append??rA
   \   000002F4   0020A0E3           MOV      R2,#+0
   \   000002F8   0110A0E3           MOV      R1,#+1
   \   000002FC   7E0F8DE2           ADD      R0,SP,#+504
   \   00000300   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000304   0020A0E3           MOV      R2,#+0
   \   00000308   0110A0E3           MOV      R1,#+1
   \   0000030C   850F8DE2           ADD      R0,SP,#+532
   \   00000310   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000314   0020A0E3           MOV      R2,#+0
   \   00000318   0110A0E3           MOV      R1,#+1
   \   0000031C   8C0F8DE2           ADD      R0,SP,#+560
   \   00000320   ........           _BLF     ??_Tidy,??_Tidy??rA
     47            LocalString +=(AnsiString) NewLineStr;
   \   00000324   44109FE5           LDR      R1,??MakeConfigString_1+0x10  ;; NewLineStr
   \   00000328   930F8DE2           ADD      R0,SP,#+588
   \   0000032C   ........           _BLF     ??AnsiString,??AnsiString??rA_1
   \   00000330   0830A0E1           MOV      R3,R8
   \   00000334   0020A0E3           MOV      R2,#+0
   \   00000338   0010A0E1           MOV      R1,R0
   \   0000033C   0500A0E1           MOV      R0,R5
   \   00000340   ........           _BLF     ??append,??append??rA
   \   00000344   0020A0E3           MOV      R2,#+0
   \   00000348   0110A0E3           MOV      R1,#+1
   \   0000034C   930F8DE2           ADD      R0,SP,#+588
   \   00000350   ........           _BLF     ??_Tidy,??_Tidy??rA
     48            return LocalString;
   \   00000354   9ADF8DE2           ADD      SP,SP,#+616
   \   00000358   F043BDE8           POP      {R4-R9,LR}
   \   0000035C   1EFF2FE1           BX       LR               ;; return
   \                     ??MakeConfigString_1:
   \   00000360   ........           DC32     TabStr2
   \   00000364   ........           DC32     CrLfStr
   \   00000368   ........           DC32     TabStr3
   \   0000036C   ........           DC32     ??npos
   \   00000370   ........           DC32     NewLineStr
     49          }
     50          //---------------------------------------------------------------------------
     51          

   \                                 In segment CODE, align 4, keep-with-next
     52          bool TPCAlarmWindow::LoadConfigString(TSNConfigString &ConfigString)
     53          {
   \                     ??LoadConfigString:
   \   00000000   F0472DE9           PUSH     {R4-R10,LR}
     54          	bool NoError = true;
     55            int ErrorLine=0;
   \   00000004   00A29FE5           LDR      R10,??LoadConfigString_2  ;; `?<Constant "TPC Alarm Window">`
   \   00000008   ACD04DE2           SUB      SP,SP,#+172
   \   0000000C   0040A0E1           MOV      R4,R0
   \   00000010   0150A0E1           MOV      R5,R1
   \   00000014   0190A0E3           MOV      R9,#+1
   \   00000018   0010A0E3           MOV      R1,#+0
   \   0000001C   00108DE5           STR      R1,[SP, #+0]
   \   00000020   0160E0E1           MVN      R6,R1
     56            int Key;
     57            do {
     58              AnsiString InputKeyWord= ConfigString.NextWord(ErrorLine);
   \                     ??LoadConfigString_3:
   \   00000024   0030A0E3           MOV      R3,#+0
   \   00000028   0D20A0E1           MOV      R2,SP
   \   0000002C   3C108DE2           ADD      R1,SP,#+60
   \   00000030   0500A0E1           MOV      R0,R5
   \   00000034   ........           _BLF     ??NextWord,??NextWord??rA
     59              if( ErrorLine ) {
   \   00000038   00009DE5           LDR      R0,[SP, #+0]
   \   0000003C   000050E3           CMP      R0,#+0
   \   00000040   0A00000A           BEQ      ??LoadConfigString_4
     60                if( ErrorLine != EOF ) {
   \   00000044   060050E1           CMP      R0,R6
   \   00000048   6000000A           BEQ      ??LoadConfigString_5
     61          				GiveConfigWarning((AnsiString)"TPC Alarm Window",ErrorLine);
   \   0000004C   0A10A0E1           MOV      R1,R10
   \   00000050   04008DE2           ADD      R0,SP,#+4
   \   00000054   ........           _BLF     ??AnsiString_2,??AnsiString??rA_2
   \   00000058   00109DE5           LDR      R1,[SP, #+0]
   \   0000005C   ........           _BLF     ??GiveConfigWarning,??GiveConfigWarning??rA
   \   00000060   0020A0E3           MOV      R2,#+0
   \                     ??LoadConfigString_6:
   \   00000064   0110A0E3           MOV      R1,#+1
   \   00000068   04008DE2           ADD      R0,SP,#+4
   \   0000006C   560000EA           B        ??LoadConfigString_7
     62          			}
     63          		} else {
     64          			Key = FindConfigKey(InputKeyWord);
   \                     ??LoadConfigString_4:
   \   00000070   3C108DE2           ADD      R1,SP,#+60
   \   00000074   58008DE2           ADD      R0,SP,#+88
   \   00000078   ........           _BLF     ??AnsiString,??AnsiString??rA_1
   \   0000007C   ........           _BLF     ??FindConfigKey,??FindConfigKey??rA
   \   00000080   0070A0E1           MOV      R7,R0
   \   00000084   0020A0E3           MOV      R2,#+0
   \   00000088   0110A0E3           MOV      R1,#+1
   \   0000008C   58008DE2           ADD      R0,SP,#+88
   \   00000090   ........           _BLF     ??_Tidy,??_Tidy??rA
     65          			switch ( Key ) {
   \   00000094   C30047E2           SUB      R0,R7,#+195
   \   00000098   600E40E2           SUB      R0,R0,#+1536
   \   0000009C   030050E3           CMP      R0,#+3
   \   000000A0   0300008A           BHI      ??LoadConfigString_8
   \   000000A4   011F8FE2           ADR      R1,??LoadConfigString_1
   \   000000A8   0010D1E7           LDRB     R1,[R1, R0]
   \   000000AC   01F18FE0           ADD      PC,PC,R1, LSL #+2
   \                     ??LoadConfigString_1:
   \   000000B0   47121D31           DC8      +71,+18,+29,+49
     66          				default:
     67          					GiveConfigWarning((AnsiString)"TPC Alarm Window",InputKeyWord,ConfigString.LineCount);
   \                     ??LoadConfigString_8:
   \   000000B4   3C108DE2           ADD      R1,SP,#+60
   \   000000B8   74008DE2           ADD      R0,SP,#+116
   \   000000BC   ........           _BLF     ??AnsiString,??AnsiString??rA_1
   \   000000C0   0080A0E1           MOV      R8,R0
   \   000000C4   0A10A0E1           MOV      R1,R10
   \   000000C8   90008DE2           ADD      R0,SP,#+144
   \   000000CC   ........           _BLF     ??AnsiString_2,??AnsiString??rA_2
   \   000000D0   1C2095E5           LDR      R2,[R5, #+28]
   \   000000D4   0810A0E1           MOV      R1,R8
   \   000000D8   ........           _BLF     ??GiveConfigWarning_1,??GiveConfigWarning??rA_1
   \   000000DC   0020A0E3           MOV      R2,#+0
   \   000000E0   0110A0E3           MOV      R1,#+1
   \   000000E4   74008DE2           ADD      R0,SP,#+116
   \   000000E8   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000000EC   0020A0E3           MOV      R2,#+0
   \   000000F0   0110A0E3           MOV      R1,#+1
   \   000000F4   90008DE2           ADD      R0,SP,#+144
   \   000000F8   330000EA           B        ??LoadConfigString_7
     68                  break;
     69                  case C_TPC_END_WINDOW:
     70                  break;
     71                  case C_TPC_UPPER_DISP:
     72                  {
     73                    AnsiString tempStr = ConfigString.NextWord(ErrorLine);
   \                     ??LoadConfigString_9:
   \   000000FC   0030A0E3           MOV      R3,#+0
   \   00000100   0D20A0E1           MOV      R2,SP
   \   00000104   20108DE2           ADD      R1,SP,#+32
   \   00000108   0500A0E1           MOV      R0,R5
   \   0000010C   ........           _BLF     ??NextWord,??NextWord??rA
     74                    UpperDisplay = FindConfigKey(tempStr);
   \   00000110   20108DE2           ADD      R1,SP,#+32
   \   00000114   04008DE2           ADD      R0,SP,#+4
   \   00000118   ........           _BLF     ??AnsiString,??AnsiString??rA_1
   \   0000011C   ........           _BLF     ??FindConfigKey,??FindConfigKey??rA
   \   00000120   B200C4E1           STRH     R0,[R4, #+2]
   \   00000124   1D0000EA           B        ??LoadConfigString_10
     75                    NoError = !ErrorLine;
     76                  }
     77                  break;
     78                  case C_TPC_MAIN_DISP:
     79                  {
     80                    AnsiString tempStr = ConfigString.NextWord(ErrorLine);
   \                     ??LoadConfigString_11:
   \   00000128   0030A0E3           MOV      R3,#+0
   \   0000012C   0D20A0E1           MOV      R2,SP
   \   00000130   04108DE2           ADD      R1,SP,#+4
   \   00000134   0500A0E1           MOV      R0,R5
   \   00000138   ........           _BLF     ??NextWord,??NextWord??rA
     81                    MainDisplay = FindConfigKey(tempStr);
   \   0000013C   04108DE2           ADD      R1,SP,#+4
   \   00000140   20008DE2           ADD      R0,SP,#+32
   \   00000144   ........           _BLF     ??AnsiString,??AnsiString??rA_1
   \   00000148   ........           _BLF     ??FindConfigKey,??FindConfigKey??rA
   \   0000014C   B000C4E1           STRH     R0,[R4, #+0]
   \   00000150   0020A0E3           MOV      R2,#+0
   \   00000154   0110A0E3           MOV      R1,#+1
   \   00000158   20008DE2           ADD      R0,SP,#+32
   \   0000015C   ........           _BLF     ??_Tidy,??_Tidy??rA
     82                    NoError = !ErrorLine;
   \   00000160   00009DE5           LDR      R0,[SP, #+0]
     83                  }
   \   00000164   0020A0E3           MOV      R2,#+0
   \   00000168   000050E3           CMP      R0,#+0
   \   0000016C   0190A003           MOVEQ    R9,#+1
   \   00000170   0090A013           MOVNE    R9,#+0
   \   00000174   BAFFFFEA           B        ??LoadConfigString_6
     84                  break;
     85                  case C_TPC_MAIN_GRAPH:
     86                  {
     87                    AnsiString tempStr = ConfigString.NextWord(ErrorLine);
   \                     ??LoadConfigString_12:
   \   00000178   0030A0E3           MOV      R3,#+0
   \   0000017C   0D20A0E1           MOV      R2,SP
   \   00000180   20108DE2           ADD      R1,SP,#+32
   \   00000184   0500A0E1           MOV      R0,R5
   \   00000188   ........           _BLF     ??NextWord,??NextWord??rA
     88                    MainGraph = FindConfigKey(tempStr);
   \   0000018C   20108DE2           ADD      R1,SP,#+32
   \   00000190   04008DE2           ADD      R0,SP,#+4
   \   00000194   ........           _BLF     ??AnsiString,??AnsiString??rA_1
   \   00000198   ........           _BLF     ??FindConfigKey,??FindConfigKey??rA
   \   0000019C   B400C4E1           STRH     R0,[R4, #+4]
   \                     ??LoadConfigString_10:
   \   000001A0   0020A0E3           MOV      R2,#+0
   \   000001A4   0110A0E3           MOV      R1,#+1
   \   000001A8   04008DE2           ADD      R0,SP,#+4
   \   000001AC   ........           _BLF     ??_Tidy,??_Tidy??rA
     89                    NoError = !ErrorLine;
   \   000001B0   00009DE5           LDR      R0,[SP, #+0]
     90                  }
   \   000001B4   0020A0E3           MOV      R2,#+0
   \   000001B8   000050E3           CMP      R0,#+0
   \   000001BC   0190A003           MOVEQ    R9,#+1
   \   000001C0   0090A013           MOVNE    R9,#+0
   \   000001C4   0110A0E3           MOV      R1,#+1
   \   000001C8   20008DE2           ADD      R0,SP,#+32
   \                     ??LoadConfigString_7:
   \   000001CC   ........           _BLF     ??_Tidy,??_Tidy??rA
     91                  break;
     92                }
     93              }
     94            }while( NoError && ( ErrorLine != EOF )&& ( Key != C_TPC_END_WINDOW ) );
   \                     ??LoadConfigString_5:
   \   000001D0   0020A0E3           MOV      R2,#+0
   \   000001D4   0110A0E3           MOV      R1,#+1
   \   000001D8   3C008DE2           ADD      R0,SP,#+60
   \   000001DC   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000001E0   000059E3           CMP      R9,#+0
   \   000001E4   00009D15           LDRNE    R0,[SP, #+0]
   \   000001E8   06005011           CMPNE    R0,R6
   \   000001EC   C300A013           MOVNE    R0,#+195
   \   000001F0   600E8013           ORRNE    R0,R0,#0x600
   \   000001F4   00005711           CMPNE    R7,R0
   \   000001F8   89FFFF1A           BNE      ??LoadConfigString_3
     95            return NoError;
   \   000001FC   0900A0E1           MOV      R0,R9
   \   00000200   ACD08DE2           ADD      SP,SP,#+172
   \   00000204   F047BDE8           POP      {R4-R10,LR}
   \   00000208   1EFF2FE1           BX       LR               ;; return
   \                     ??LoadConfigString_2:
   \   0000020C   ........           DC32     `?<Constant "TPC Alarm Window">`
     96          }

   \                                 In segment DIFUNCT, align 4, keep-with-next, root
   \   00000000                      REQUIRE ?call_ctors
   \   00000000   ........           DC32    ??__sti__routine

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "TPC Alarm Window">`:
   \   00000000   54504320416C       DC8 "TPC Alarm Window"
   \              61726D205769
   \              6E646F7700  
   \   00000011   000000             DC8 0, 0, 0

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs TPCAlarmWindow &TPCAlarmWindow::new TPCAlarmWindow()
   \                     `??new TPCAlarmWindow`:
   \   00000000   00402DE9           PUSH     {LR}
   \   00000004   0600A0E3           MOV      R0,#+6
   \   00000008   ........           _BLF     `??operator new`,`??operator new??rA`
   \   0000000C   000050E3           CMP      R0,#+0
   \   00000010   0000000A           BEQ      `??new TPCAlarmWindow_1`
   \   00000014   ........           BL       ??TPCAlarmWindow
   \                     `??new TPCAlarmWindow_1`:
   \   00000018   ........           B        ?Subroutine7

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void TPCAlarmWindow::delete ~TPCAlarmWindow(TPCAlarmWindow *)
   \                     `??delete ~TPCAlarmWindow`:
   \   00000000   00402DE9           PUSH     {LR}
   \   00000004   000050E3           CMP      R0,#+0
   \   00000008   0000000A           BEQ      `??delete ~TPCAlarmWindow_1`
   \   0000000C   ........           _BLF     `??operator delete`,`??operator delete??rA`
   \                     `??delete ~TPCAlarmWindow_1`:
   \   00000010                      REQUIRE ?Subroutine7
   \   00000010                      ;; // Fall through to label ?Subroutine7

   \                                 In segment CODE, align 4, keep-with-next
   \                     ?Subroutine7:
   \   00000000   0040BDE8           POP      {LR}
   \   00000004   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   static __??Code32?? __intrinsic __code __interwork __atpcs void __sti__routine()
   \                     ??__sti__routine:
   \   00000000   1EFF2FE1           BX       LR               ;; return
     97          //---------------------------------------------------------------------------
     98          

   Maximum stack usage in bytes:

     Function                       CSTACK
     --------                       ------
     AnsiString::AnsiString(AnsiString const &)
                                       12
     TPCAlarmWindow::LoadConfigString(TSNConfigString &)
                                      204
     TPCAlarmWindow::MakeConfigString(int)
                                      644
     TPCAlarmWindow::TPCAlarmWindow()
                                        0
     TPCAlarmWindow::delete ~TPCAlarmWindow(TPCAlarmWindow *)
                                        4
     TPCAlarmWindow::new TPCAlarmWindow()
                                        4
     TPCAlarmWindow::~TPCAlarmWindow()
                                        0
     __sti__routine()                   0
     operator+(string const &, string const &)
                                       48


   Segment part sizes:

     Function/Label                 Bytes
     --------------                 -----
     operator+(string const &, string const &)
                                     156
     AnsiString::AnsiString(AnsiString const &)
                                      64
     TPCAlarmWindow::TPCAlarmWindow()
                                      20
     TPCAlarmWindow::~TPCAlarmWindow()
                                       4
     TPCAlarmWindow::MakeConfigString(int)
                                     884
     TPCAlarmWindow::LoadConfigString(TSNConfigString &)
                                     528
     ?<Constant "TPC Alarm Window">   20
     TPCAlarmWindow::new TPCAlarmWindow()
                                      28
     TPCAlarmWindow::delete ~TPCAlarmWindow(TPCAlarmWindow *)
                                      16
     ?Subroutine7                      8
     __sti__routine()                  4
      Others                         200

 
 1 908 bytes in segment CODE
    20 bytes in segment DATA_C
     4 bytes in segment DIFUNCT
 
 1 496 bytes of CODE  memory (+ 416 bytes shared)
    20 bytes of CONST memory

Errors: none
Warnings: none
