##############################################################################
#                                                                            #
# IAR ARM ANSI C/C++ Compiler V4.42A/W32               14/Sep/2022  15:19:43 #
# Copyright 1999-2005 IAR Systems. All rights reserved.                      #
#                                                                            #
#    Cpu mode        =  interwork                                            #
#    Endian          =  little                                               #
#    Stack alignment =  4                                                    #
#    Source file     =  D:\S2Prog\Shared\Src\TSNSaveSettings.cpp             #
#    Command line    =  D:\S2Prog\Shared\Src\TSNSaveSettings.cpp --fpu None  #
#                       -D OS_LIBMODE_SP -D CPU_S3C2410 -D OS_RAMVECT=0 -D   #
#                       OS_UART=-1 -D S2TXU -D USE_LZO=1 -D __ARM_LIBRARY__  #
#                       -D WATCHDOG=1 -D NETWORK=1 -lCN                      #
#                       D:\S2Prog\TXU\Debug\List\ -o                         #
#                       D:\S2Prog\TXU\Debug\Obj\ -z9 --debug --cpu_mode arm  #
#                       --endian little --cpu ARM920T --stack_align 4        #
#                       --interwork -e --enable_multibytes --eec++           #
#                       --dlib_config "C:\Program Files (x86)\IAR            #
#                       Systems\Embedded Workbench                           #
#                       4.0\arm\LIB\dl4tpainl8n.h" -I                        #
#                       D:\S2Prog\TXU\GUI\CORE\ -I D:\S2Prog\TXU\GUI\WM\ -I  #
#                       D:\S2Prog\TXU\GUI\WIDGET\ -I D:\S2Prog\TXU\CONFIG\   #
#                       -I D:\S2Prog\TXU\INC\ -I D:\S2Prog\TXU\..\SHARED\INC #
#                       \ -I D:\S2Prog\TXU\..\SHARED\SRC\ -I                 #
#                       D:\S2Prog\TXU\..\SHARED\LZO\minilzo.210\ -I          #
#                       D:\S2Prog\TXU\lwip-1.4.1\src\include\ -I             #
#                       D:\S2Prog\TXU\lwip-1.4.1\src\include\ipv4\ -I        #
#                       D:\S2Prog\TXU\lwip-1.4.1\src\ -I                     #
#                       D:\S2Prog\TXU\..\SHARED\Database\ -I                 #
#                       D:\S2Prog\TXU\src\ -I "C:\Program Files (x86)\IAR    #
#                       Systems\Embedded Workbench 4.0\arm\INC\"             #
#                       --inline_threshold=2                                 #
#    List file       =  D:\S2Prog\TXU\Debug\List\TSNSaveSettings.lst         #
#    Object file     =  D:\S2Prog\TXU\Debug\Obj\TSNSaveSettings.r79          #
#                                                                            #
#                                                                            #
##############################################################################

D:\S2Prog\Shared\Src\TSNSaveSettings.cpp
      1          #ifdef BORLAND
      2              #include "TSNIncludes.h"
      3              #pragma hdrstop
      4          #else
      5              #include "TDUIncludes.h"

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs string::string(string const &)
   \                     ??string:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
   \   0000000C   0020A0E3           MOV      R2,#+0
   \   00000010   0010A0E3           MOV      R1,#+0
   \   00000014   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000018   1C009FE5           LDR      R0,??string_1    ;; ??npos
   \   0000001C   0020A0E3           MOV      R2,#+0
   \   00000020   003090E5           LDR      R3,[R0, #+0]
   \   00000024   0510A0E1           MOV      R1,R5
   \   00000028   0400A0E1           MOV      R0,R4
   \   0000002C   ........           _BLF     ??assign,??assign??rA
   \   00000030   0400A0E1           MOV      R0,R4
   \   00000034   3040BDE8           POP      {R4,R5,LR}
   \   00000038   1EFF2FE1           BX       LR               ;; return
   \                     ??string_1:
   \   0000003C   ........           DC32     ??npos

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs char const *string::c_str() const
   \                     ??c_str:
   \   00000000   181090E5           LDR      R1,[R0, #+24]
   \   00000004   100051E3           CMP      R1,#+16
   \   00000008   04009025           LDRCS    R0,[R0, #+4]
   \   0000000C   1EFF2F21           BXCS     LR
   \   00000010   040080E2           ADD      R0,R0,#+4
   \   00000014   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs _Tree_algobase<allocator<void>>::_Genptr _Tree_algobase<allocator<void>>::_DecP(_Tree_algobase<allocator<void>>::_Genptr)
   \                     ??_DecP:
   \   00000000   0D10D0E5           LDRB     R1,[R0, #+13]
   \   00000004   000051E3           CMP      R1,#+0
   \   00000008   08009015           LDRNE    R0,[R0, #+8]
   \   0000000C   1EFF2F11           BXNE     LR
   \   00000010   001090E5           LDR      R1,[R0, #+0]
   \   00000014   0D20D1E5           LDRB     R2,[R1, #+13]
   \   00000018   000052E3           CMP      R2,#+0
   \   0000001C   0700001A           BNE      ??_DecP_1
   \   00000020   000000EA           B        ??_DecP_2
   \                     ??_DecP_3:
   \   00000024   0010A0E1           MOV      R1,R0
   \                     ??_DecP_2:
   \   00000028   080091E5           LDR      R0,[R1, #+8]
   \   0000002C   0D20D0E5           LDRB     R2,[R0, #+13]
   \   00000030   000052E3           CMP      R2,#+0
   \   00000034   FAFFFF0A           BEQ      ??_DecP_3
   \   00000038   0100A0E1           MOV      R0,R1
   \   0000003C   1EFF2FE1           BX       LR
   \                     ??_DecP_1:
   \   00000040   041090E5           LDR      R1,[R0, #+4]
   \   00000044   0D20D1E5           LDRB     R2,[R1, #+13]
   \   00000048   000052E3           CMP      R2,#+0
   \   0000004C   1EFF2F11           BXNE     LR
   \   00000050   002091E5           LDR      R2,[R1, #+0]
   \   00000054   020050E1           CMP      R0,R2
   \   00000058   0100A0E1           MOV      R0,R1
   \   0000005C   F7FFFF0A           BEQ      ??_DecP_1
   \   00000060   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs _Tree_algobase<allocator<void>>::_Genptr _Tree_algobase<allocator<void>>::_IncP(_Tree_algobase<allocator<void>>::_Genptr)
   \                     ??_IncP:
   \   00000000   0D10D0E5           LDRB     R1,[R0, #+13]
   \   00000004   000051E3           CMP      R1,#+0
   \   00000008   1EFF2F11           BXNE     LR
   \   0000000C   081090E5           LDR      R1,[R0, #+8]
   \   00000010   0D20D1E5           LDRB     R2,[R1, #+13]
   \   00000014   000052E3           CMP      R2,#+0
   \   00000018   0700001A           BNE      ??_IncP_1
   \   0000001C   000000EA           B        ??_IncP_2
   \                     ??_IncP_3:
   \   00000020   0010A0E1           MOV      R1,R0
   \                     ??_IncP_2:
   \   00000024   000091E5           LDR      R0,[R1, #+0]
   \   00000028   0D20D0E5           LDRB     R2,[R0, #+13]
   \   0000002C   000052E3           CMP      R2,#+0
   \   00000030   FAFFFF0A           BEQ      ??_IncP_3
   \   00000034   060000EA           B        ??_IncP_4
   \                     ??_IncP_5:
   \   00000038   0100A0E1           MOV      R0,R1
   \                     ??_IncP_1:
   \   0000003C   041090E5           LDR      R1,[R0, #+4]
   \   00000040   0D20D1E5           LDRB     R2,[R1, #+13]
   \   00000044   000052E3           CMP      R2,#+0
   \   00000048   08209105           LDREQ    R2,[R1, #+8]
   \   0000004C   02005001           CMPEQ    R0,R2
   \   00000050   F8FFFF0A           BEQ      ??_IncP_5
   \                     ??_IncP_4:
   \   00000054   0100A0E1           MOV      R0,R1
   \   00000058   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void _Tree_algobase<allocator<void>>::_Clear()
   \                     ??_Clear:
   \   00000000   040080E5           STR      R0,[R0, #+4]
   \   00000004   000080E5           STR      R0,[R0, #+0]
   \   00000008   080080E5           STR      R0,[R0, #+8]
   \   0000000C   0110A0E3           MOV      R1,#+1
   \   00000010   0D10C0E5           STRB     R1,[R0, #+13]
   \   00000014   0C10C0E5           STRB     R1,[R0, #+12]
   \   00000018   0010A0E3           MOV      R1,#+0
   \   0000001C   101080E5           STR      R1,[R0, #+16]
   \   00000020   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void _Tree_algobase<allocator<void>>::_Rrotate(_Tree_algobase<allocator<void>>::_Genptr)
   \                     ??_Rrotate:
   \   00000000   002091E5           LDR      R2,[R1, #+0]
   \   00000004   083092E5           LDR      R3,[R2, #+8]
   \   00000008   003081E5           STR      R3,[R1, #+0]
   \   0000000C   083092E5           LDR      R3,[R2, #+8]
   \   00000010   0DC0D3E5           LDRB     R12,[R3, #+13]
   \   00000014   00005CE3           CMP      R12,#+0
   \   00000018   04108305           STREQ    R1,[R3, #+4]
   \   0000001C   043091E5           LDR      R3,[R1, #+4]
   \   00000020   043082E5           STR      R3,[R2, #+4]
   \   00000024   043090E5           LDR      R3,[R0, #+4]
   \   00000028   030051E1           CMP      R1,R3
   \   0000002C   04208005           STREQ    R2,[R0, #+4]
   \   00000030   0400000A           BEQ      ??_Rrotate_1
   \   00000034   040091E5           LDR      R0,[R1, #+4]
   \   00000038   083090E5           LDR      R3,[R0, #+8]
   \   0000003C   030051E1           CMP      R1,R3
   \   00000040   08208005           STREQ    R2,[R0, #+8]
   \   00000044   00208015           STRNE    R2,[R0, #+0]
   \                     ??_Rrotate_1:
   \   00000048   081082E5           STR      R1,[R2, #+8]
   \   0000004C   042081E5           STR      R2,[R1, #+4]
   \   00000050   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void _Tree_algobase<allocator<void>>::_Lrotate(_Tree_algobase<allocator<void>>::_Genptr)
   \                     ??_Lrotate:
   \   00000000   082091E5           LDR      R2,[R1, #+8]
   \   00000004   003092E5           LDR      R3,[R2, #+0]
   \   00000008   083081E5           STR      R3,[R1, #+8]
   \   0000000C   003092E5           LDR      R3,[R2, #+0]
   \   00000010   0DC0D3E5           LDRB     R12,[R3, #+13]
   \   00000014   00005CE3           CMP      R12,#+0
   \   00000018   04108305           STREQ    R1,[R3, #+4]
   \   0000001C   043091E5           LDR      R3,[R1, #+4]
   \   00000020   043082E5           STR      R3,[R2, #+4]
   \   00000024   043090E5           LDR      R3,[R0, #+4]
   \   00000028   030051E1           CMP      R1,R3
   \   0000002C   04208005           STREQ    R2,[R0, #+4]
   \   00000030   0400000A           BEQ      ??_Lrotate_1
   \   00000034   040091E5           LDR      R0,[R1, #+4]
   \   00000038   003090E5           LDR      R3,[R0, #+0]
   \   0000003C   030051E1           CMP      R1,R3
   \   00000040   00208005           STREQ    R2,[R0, #+0]
   \   00000044   08208015           STRNE    R2,[R0, #+8]
   \                     ??_Lrotate_1:
   \   00000048   001082E5           STR      R1,[R2, #+0]
   \   0000004C   042081E5           STR      R2,[R1, #+4]
   \   00000050   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void _Tree_algobase<allocator<void>>::_Insert(bool, _Tree_algobase<allocator<void>>::_Genptr, _Tree_algobase<allocator<void>>::_Genptr)
   \                     ??_Insert:
   \   00000000   F0402DE9           PUSH     {R4-R7,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   100094E5           LDR      R0,[R4, #+16]
   \   0000000C   0350A0E1           MOV      R5,R3
   \   00000010   010080E2           ADD      R0,R0,#+1
   \   00000014   100084E5           STR      R0,[R4, #+16]
   \   00000018   040052E1           CMP      R2,R4
   \   0000001C   0300001A           BNE      ??_Insert_2
   \   00000020   045084E5           STR      R5,[R4, #+4]
   \   00000024   005084E5           STR      R5,[R4, #+0]
   \                     ??_Insert_3:
   \   00000028   085084E5           STR      R5,[R4, #+8]
   \   0000002C   130000EA           B        ??_Insert_4
   \                     ??_Insert_2:
   \   00000030   000051E3           CMP      R1,#+0
   \   00000034   0500000A           BEQ      ??_Insert_5
   \   00000038   005082E5           STR      R5,[R2, #+0]
   \   0000003C   000094E5           LDR      R0,[R4, #+0]
   \   00000040   000052E1           CMP      R2,R0
   \   00000044   0D00001A           BNE      ??_Insert_4
   \   00000048   005084E5           STR      R5,[R4, #+0]
   \   0000004C   0B0000EA           B        ??_Insert_4
   \                     ??_Insert_5:
   \   00000050   085082E5           STR      R5,[R2, #+8]
   \   00000054   080094E5           LDR      R0,[R4, #+8]
   \   00000058   000052E1           CMP      R2,R0
   \   0000005C   0700001A           BNE      ??_Insert_4
   \   00000060   F0FFFFEA           B        ??_Insert_3
   \                     ??_Insert_6:
   \   00000064   0C70C0E5           STRB     R7,[R0, #+12]
   \   00000068   0C70C2E5           STRB     R7,[R2, #+12]
   \   0000006C   040095E5           LDR      R0,[R5, #+4]
   \   00000070   040090E5           LDR      R0,[R0, #+4]
   \   00000074   0C60C0E5           STRB     R6,[R0, #+12]
   \   00000078   040095E5           LDR      R0,[R5, #+4]
   \   0000007C   045090E5           LDR      R5,[R0, #+4]
   \                     ??_Insert_4:
   \   00000080   0170A0E3           MOV      R7,#+1
   \   00000084   040095E5           LDR      R0,[R5, #+4]
   \   00000088   0C10D0E5           LDRB     R1,[R0, #+12]
   \   0000008C   000051E3           CMP      R1,#+0
   \   00000090   2F00001A           BNE      ??_Insert_7
   \   00000094   041090E5           LDR      R1,[R0, #+4]
   \   00000098   0060A0E3           MOV      R6,#+0
   \   0000009C   001091E5           LDR      R1,[R1, #+0]
   \   000000A0   010050E1           CMP      R0,R1
   \   000000A4   041090E5           LDR      R1,[R0, #+4]
   \   000000A8   1400001A           BNE      ??_Insert_8
   \   000000AC   082091E5           LDR      R2,[R1, #+8]
   \   000000B0   0C10D2E5           LDRB     R1,[R2, #+12]
   \   000000B4   000051E3           CMP      R1,#+0
   \   000000B8   E9FFFF0A           BEQ      ??_Insert_6
   \   000000BC   081090E5           LDR      R1,[R0, #+8]
   \   000000C0   010055E1           CMP      R5,R1
   \   000000C4   0300001A           BNE      ??_Insert_9
   \   000000C8   0050A0E1           MOV      R5,R0
   \   000000CC   0510A0E1           MOV      R1,R5
   \   000000D0   0400A0E1           MOV      R0,R4
   \   000000D4   ........           _BLF     ??_Lrotate,??_Lrotate??rA
   \                     ??_Insert_9:
   \   000000D8   040095E5           LDR      R0,[R5, #+4]
   \   000000DC   0C70C0E5           STRB     R7,[R0, #+12]
   \   000000E0   040095E5           LDR      R0,[R5, #+4]
   \   000000E4   040090E5           LDR      R0,[R0, #+4]
   \   000000E8   0C60C0E5           STRB     R6,[R0, #+12]
   \   000000EC   040095E5           LDR      R0,[R5, #+4]
   \   000000F0   041090E5           LDR      R1,[R0, #+4]
   \   000000F4   0400A0E1           MOV      R0,R4
   \   000000F8   ........           _BLF     ??_Rrotate,??_Rrotate??rA
   \   000000FC   DFFFFFEA           B        ??_Insert_4
   \                     ??_Insert_8:
   \   00000100   002091E5           LDR      R2,[R1, #+0]
   \   00000104   0C10D2E5           LDRB     R1,[R2, #+12]
   \   00000108   000051E3           CMP      R1,#+0
   \   0000010C   D4FFFF0A           BEQ      ??_Insert_6
   \   00000110   001090E5           LDR      R1,[R0, #+0]
   \   00000114   010055E1           CMP      R5,R1
   \   00000118   0300001A           BNE      ??_Insert_10
   \   0000011C   0050A0E1           MOV      R5,R0
   \   00000120   0510A0E1           MOV      R1,R5
   \   00000124   0400A0E1           MOV      R0,R4
   \   00000128   ........           _BLF     ??_Rrotate,??_Rrotate??rA
   \                     ??_Insert_10:
   \   0000012C   040095E5           LDR      R0,[R5, #+4]
   \   00000130   0C70C0E5           STRB     R7,[R0, #+12]
   \   00000134   040095E5           LDR      R0,[R5, #+4]
   \   00000138   040090E5           LDR      R0,[R0, #+4]
   \   0000013C   0C60C0E5           STRB     R6,[R0, #+12]
   \   00000140   040095E5           LDR      R0,[R5, #+4]
   \   00000144   041090E5           LDR      R1,[R0, #+4]
   \   00000148   0400A0E1           MOV      R0,R4
   \   0000014C   ........           _BLF     ??_Lrotate,??_Lrotate??rA
   \   00000150   CAFFFFEA           B        ??_Insert_4
   \                     ??_Insert_7:
   \   00000154   040094E5           LDR      R0,[R4, #+4]
   \   00000158   0C70C0E5           STRB     R7,[R0, #+12]
   \   0000015C   F040BDE8           POP      {R4-R7,LR}
   \   00000160   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs _Tree<_Tset_traits<int, less<int>, allocator<int>, false>>::_Pairib _Tree<_Tset_traits<int, less<int>, allocator<int>, false>>::insert(int)
   \                     ??insert:
   \   00000000   F3432DE9           PUSH     {R0,R1,R4-R9,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0160A0E1           MOV      R6,R1
   \   0000000C   040096E5           LDR      R0,[R6, #+4]
   \   00000010   0270A0E1           MOV      R7,R2
   \   00000014   0680A0E1           MOV      R8,R6
   \   00000018   0190A0E3           MOV      R9,#+1
   \                     ??insert_1:
   \   0000001C   0D10D0E5           LDRB     R1,[R0, #+13]
   \   00000020   000051E3           CMP      R1,#+0
   \   00000024   0700001A           BNE      ??insert_2
   \   00000028   101090E5           LDR      R1,[R0, #+16]
   \   0000002C   0080A0E1           MOV      R8,R0
   \   00000030   010057E1           CMP      R7,R1
   \   00000034   000090B5           LDRLT    R0,[R0, #+0]
   \   00000038   0190A0B3           MOVLT    R9,#+1
   \   0000003C   080090A5           LDRGE    R0,[R0, #+8]
   \   00000040   0090A0A3           MOVGE    R9,#+0
   \   00000044   F4FFFFEA           B        ??insert_1
   \                     ??insert_2:
   \   00000048   0800A0E1           MOV      R0,R8
   \   0000004C   0150A0E3           MOV      R5,#+1
   \   00000050   000059E3           CMP      R9,#+0
   \   00000054   0B00000A           BEQ      ??insert_3
   \   00000058   001096E5           LDR      R1,[R6, #+0]
   \   0000005C   010050E1           CMP      R0,R1
   \   00000060   0700001A           BNE      ??insert_4
   \   00000064   0730A0E1           MOV      R3,R7
   \   00000068   0820A0E1           MOV      R2,R8
   \   0000006C   0110A0E3           MOV      R1,#+1
   \                     ??insert_5:
   \   00000070   0600A0E1           MOV      R0,R6
   \   00000074   ........           _BLF     ??_Insert_1,??_Insert??rA
   \   00000078   00008DE5           STR      R0,[SP, #+0]
   \   0000007C   0450CDE5           STRB     R5,[SP, #+4]
   \   00000080   0A0000EA           B        ??insert_6
   \                     ??insert_4:
   \   00000084   ........           _BLF     ??_DecP,??_DecP??rA
   \                     ??insert_3:
   \   00000088   101090E5           LDR      R1,[R0, #+16]
   \   0000008C   070051E1           CMP      R1,R7
   \   00000090   030000AA           BGE      ??insert_7
   \   00000094   0730A0E1           MOV      R3,R7
   \   00000098   0820A0E1           MOV      R2,R8
   \   0000009C   0910A0E1           MOV      R1,R9
   \   000000A0   F2FFFFEA           B        ??insert_5
   \                     ??insert_7:
   \   000000A4   00008DE5           STR      R0,[SP, #+0]
   \   000000A8   0010A0E3           MOV      R1,#+0
   \   000000AC   0410CDE5           STRB     R1,[SP, #+4]
   \                     ??insert_6:
   \   000000B0   0D00A0E1           MOV      R0,SP
   \   000000B4   030090E8           LDM      R0,{R0,R1}
   \   000000B8   030084E8           STM      R4,{R0,R1}
   \   000000BC   0400A0E1           MOV      R0,R4
   \   000000C0   F643BDE8           POP      {R1,R2,R4-R9,LR}
   \   000000C4   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::_Copy(_Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>> const &)
   \                     ??_Copy:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   0150A0E1           MOV      R5,R1
   \   00000008   041095E5           LDR      R1,[R5, #+4]
   \   0000000C   0040A0E1           MOV      R4,R0
   \   00000010   0420A0E1           MOV      R2,R4
   \   00000014   ........           _BLF     ??_Copy_1,??_Copy??rA
   \   00000018   040084E5           STR      R0,[R4, #+4]
   \   0000001C   100095E5           LDR      R0,[R5, #+16]
   \   00000020   100084E5           STR      R0,[R4, #+16]
   \   00000024   040094E5           LDR      R0,[R4, #+4]
   \   00000028   0D10D0E5           LDRB     R1,[R0, #+13]
   \   0000002C   000051E3           CMP      R1,#+0
   \   00000030   1000001A           BNE      ??_Copy_2
   \   00000034   0010A0E1           MOV      R1,R0
   \   00000038   000000EA           B        ??_Copy_3
   \                     ??_Copy_4:
   \   0000003C   0210A0E1           MOV      R1,R2
   \                     ??_Copy_3:
   \   00000040   002091E5           LDR      R2,[R1, #+0]
   \   00000044   0D30D2E5           LDRB     R3,[R2, #+13]
   \   00000048   000053E3           CMP      R3,#+0
   \   0000004C   FAFFFF0A           BEQ      ??_Copy_4
   \   00000050   001084E5           STR      R1,[R4, #+0]
   \   00000054   081084E2           ADD      R1,R4,#+8
   \   00000058   000000EA           B        ??_Copy_5
   \                     ??_Copy_6:
   \   0000005C   0200A0E1           MOV      R0,R2
   \                     ??_Copy_5:
   \   00000060   082090E5           LDR      R2,[R0, #+8]
   \   00000064   0D30D2E5           LDRB     R3,[R2, #+13]
   \   00000068   000053E3           CMP      R3,#+0
   \   0000006C   FAFFFF0A           BEQ      ??_Copy_6
   \   00000070   000081E5           STR      R0,[R1, #+0]
   \   00000074   010000EA           B        ??_Copy_7
   \                     ??_Copy_2:
   \   00000078   004084E5           STR      R4,[R4, #+0]
   \   0000007C   084084E5           STR      R4,[R4, #+8]
   \                     ??_Copy_7:
   \   00000080   3040BDE8           POP      {R4,R5,LR}
   \   00000084   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::_Nodeptr _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::_Copy(_Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::_Nodeptr, _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::_Nodeptr)
   \                     ??_Copy_1:
   \   00000000   F0472DE9           PUSH     {R4-R10,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
   \   0000000C   0D00D5E5           LDRB     R0,[R5, #+13]
   \   00000010   0280A0E1           MOV      R8,R2
   \   00000014   0460A0E1           MOV      R6,R4
   \   00000018   000050E3           CMP      R0,#+0
   \   0000001C   1900001A           BNE      ??_Copy_8
   \   00000020   0C90D5E5           LDRB     R9,[R5, #+12]
   \   00000024   10A095E5           LDR      R10,[R5, #+16]
   \   00000028   1400A0E3           MOV      R0,#+20
   \   0000002C   ........           _BLF     `??operator new`,`??operator new??rA`
   \   00000030   0070B0E1           MOVS     R7,R0
   \   00000034   0600000A           BEQ      ??_Copy_9
   \   00000038   004087E5           STR      R4,[R7, #+0]
   \   0000003C   048087E5           STR      R8,[R7, #+4]
   \   00000040   084087E5           STR      R4,[R7, #+8]
   \   00000044   0C90C7E5           STRB     R9,[R7, #+12]
   \   00000048   0000A0E3           MOV      R0,#+0
   \   0000004C   0D00C7E5           STRB     R0,[R7, #+13]
   \   00000050   10A087E5           STR      R10,[R7, #+16]
   \                     ??_Copy_9:
   \   00000054   0D00D6E5           LDRB     R0,[R6, #+13]
   \   00000058   001095E5           LDR      R1,[R5, #+0]
   \   0000005C   0720A0E1           MOV      R2,R7
   \   00000060   000050E3           CMP      R0,#+0
   \   00000064   0760A011           MOVNE    R6,R7
   \   00000068   0400A0E1           MOV      R0,R4
   \   0000006C   E3FFFFEB           BL       ??_Copy_1
   \   00000070   000087E5           STR      R0,[R7, #+0]
   \   00000074   081095E5           LDR      R1,[R5, #+8]
   \   00000078   0720A0E1           MOV      R2,R7
   \   0000007C   0400A0E1           MOV      R0,R4
   \   00000080   DEFFFFEB           BL       ??_Copy_1
   \   00000084   080087E5           STR      R0,[R7, #+8]
   \                     ??_Copy_8:
   \   00000088   0600A0E1           MOV      R0,R6
   \   0000008C   F047BDE8           POP      {R4-R10,LR}
   \   00000090   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::_Erase(_Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::_Nodeptr)
   \                     ??_Erase:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
   \   0000000C   0560A0E1           MOV      R6,R5
   \   00000010   060000EA           B        ??_Erase_2
   \                     ??_Erase_3:
   \   00000014   081096E5           LDR      R1,[R6, #+8]
   \   00000018   0400A0E1           MOV      R0,R4
   \   0000001C   F7FFFFEB           BL       ??_Erase
   \   00000020   006096E5           LDR      R6,[R6, #+0]
   \   00000024   0500A0E1           MOV      R0,R5
   \   00000028   ........           _BLF     `??operator delete`,`??operator delete??rA`
   \   0000002C   0650A0E1           MOV      R5,R6
   \                     ??_Erase_2:
   \   00000030   0D00D6E5           LDRB     R0,[R6, #+13]
   \   00000034   000050E3           CMP      R0,#+0
   \   00000038   F5FFFF0A           BEQ      ??_Erase_3
   \   0000003C   7040BDE8           POP      {R4-R6,LR}
   \   00000040   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void _Tree<_Tset_traits<int, less<int>, allocator<int>, false>>::_Erase(_Tree<_Tset_traits<int, less<int>, allocator<int>, false>>::_Nodeptr)
   \                     ??_Erase_1:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
   \   0000000C   0560A0E1           MOV      R6,R5
   \   00000010   060000EA           B        ??_Erase_4
   \                     ??_Erase_5:
   \   00000014   081096E5           LDR      R1,[R6, #+8]
   \   00000018   0400A0E1           MOV      R0,R4
   \   0000001C   F7FFFFEB           BL       ??_Erase_1
   \   00000020   006096E5           LDR      R6,[R6, #+0]
   \   00000024   0500A0E1           MOV      R0,R5
   \   00000028   ........           _BLF     `??operator delete`,`??operator delete??rA`
   \   0000002C   0650A0E1           MOV      R5,R6
   \                     ??_Erase_4:
   \   00000030   0D00D6E5           LDRB     R0,[R6, #+13]
   \   00000034   000050E3           CMP      R0,#+0
   \   00000038   F5FFFF0A           BEQ      ??_Erase_5
   \   0000003C   7040BDE8           POP      {R4-R6,LR}
   \   00000040   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs _Tree<_Tset_traits<int, less<int>, allocator<int>, false>>::iterator _Tree<_Tset_traits<int, less<int>, allocator<int>, false>>::_Insert(bool, _Tree<_Tset_traits<int, less<int>, allocator<int>, false>>::_Nodeptr, int)
   \                     ??_Insert_1:
   \   00000000   F0412DE9           PUSH     {R4-R8,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
   \   0000000C   0260A0E1           MOV      R6,R2
   \   00000010   0370A0E1           MOV      R7,R3
   \   00000014   1400A0E3           MOV      R0,#+20
   \   00000018   ........           _BLF     `??operator new`,`??operator new??rA`
   \   0000001C   0080B0E1           MOVS     R8,R0
   \   00000020   0600000A           BEQ      ??_Insert_11
   \   00000024   004088E5           STR      R4,[R8, #+0]
   \   00000028   046088E5           STR      R6,[R8, #+4]
   \   0000002C   084088E5           STR      R4,[R8, #+8]
   \   00000030   0000A0E3           MOV      R0,#+0
   \   00000034   0C00C8E5           STRB     R0,[R8, #+12]
   \   00000038   0D00C8E5           STRB     R0,[R8, #+13]
   \   0000003C   107088E5           STR      R7,[R8, #+16]
   \                     ??_Insert_11:
   \   00000040   0830A0E1           MOV      R3,R8
   \   00000044   0620A0E1           MOV      R2,R6
   \   00000048   0510A0E1           MOV      R1,R5
   \   0000004C   0400A0E1           MOV      R0,R4
   \   00000050   ........           _BLF     ??_Insert,??_Insert??rA_1
   \   00000054   0800A0E1           MOV      R0,R8
   \   00000058   F041BDE8           POP      {R4-R8,LR}
   \   0000005C   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs set<PRogramObjectBase *>::~set()
   \                     `?~set`:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   041094E5           LDR      R1,[R4, #+4]
   \   0000000C   ........           _BLF     ??_Erase,??_Erase??rA
   \   00000010   0400A0E1           MOV      R0,R4
   \   00000014   ........           _BLF     ??_Clear,??_Clear??rA
   \   00000018   1040BDE8           POP      {R4,LR}
   \   0000001C   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs set<PRogramObjectBase *>::set(set<PRogramObjectBase *> const &)
   \                     ??set:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   0150A0E1           MOV      R5,R1
   \   00000008   1460D5E5           LDRB     R6,[R5, #+20]
   \   0000000C   0040A0E1           MOV      R4,R0
   \   00000010   ........           _BLF     ??_Clear,??_Clear??rA
   \   00000014   1460C4E5           STRB     R6,[R4, #+20]
   \   00000018   0510A0E1           MOV      R1,R5
   \   0000001C   0400A0E1           MOV      R0,R4
   \   00000020   ........           _BLF     ??_Copy,??_Copy??rA_1
   \   00000024   0400A0E1           MOV      R0,R4
   \   00000028   7040BDE8           POP      {R4-R6,LR}
   \   0000002C   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs set<int>::set()
   \                     ??set_1:
   \   00000000   11402DE9           PUSH     {R0,R4,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0110A0E3           MOV      R1,#+1
   \   0000000C   0D00A0E1           MOV      R0,SP
   \   00000010   ........           _BLF     __data_memzero,??__data_memzero??rA
   \   00000014   0400A0E1           MOV      R0,R4
   \   00000018   ........           _BLF     ??_Clear,??_Clear??rA
   \   0000001C   0000DDE5           LDRB     R0,[SP, #+0]
   \   00000020   1400C4E5           STRB     R0,[R4, #+20]
   \   00000024   0400A0E1           MOV      R0,R4
   \   00000028   1240BDE8           POP      {R1,R4,LR}
   \   0000002C   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void operator+(string const &, string const &)
   \                     `??operator+`:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   1CD04DE2           SUB      SP,SP,#+28
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   0250A0E1           MOV      R5,R2
   \   00000010   0D00A0E1           MOV      R0,SP
   \   00000014   ........           _BLF     ??string,??string??rA
   \   00000018   34109FE5           LDR      R1,`??operator+_2`  ;; ??npos
   \   0000001C   0020A0E3           MOV      R2,#+0
   \   00000020   003091E5           LDR      R3,[R1, #+0]
   \   00000024   0510A0E1           MOV      R1,R5
   \   00000028   ........           _BLF     ??append,??append??rA
   \   0000002C   0010A0E1           MOV      R1,R0
   \   00000030   0400A0E1           MOV      R0,R4
   \   00000034   ........           _BLF     ??string,??string??rA
   \   00000038   0020A0E3           MOV      R2,#+0
   \   0000003C   0110A0E3           MOV      R1,#+1
   \   00000040   0D00A0E1           MOV      R0,SP
   \   00000044   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000048   1CD08DE2           ADD      SP,SP,#+28
   \   0000004C   3040BDE8           POP      {R4,R5,LR}
   \   00000050   1EFF2FE1           BX       LR               ;; return
   \                     `??operator+_2`:
   \   00000054   ........           DC32     ??npos

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void operator+(string const &, char const *)
   \                     `??operator+_1`:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   1CD04DE2           SUB      SP,SP,#+28
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   0250A0E1           MOV      R5,R2
   \   00000010   0D00A0E1           MOV      R0,SP
   \   00000014   ........           _BLF     ??string,??string??rA
   \   00000018   0060A0E1           MOV      R6,R0
   \   0000001C   0500A0E1           MOV      R0,R5
   \   00000020   ........           _BLF     strlen,??strlen??rA
   \   00000024   0020A0E1           MOV      R2,R0
   \   00000028   0510A0E1           MOV      R1,R5
   \   0000002C   0600A0E1           MOV      R0,R6
   \   00000030   ........           _BLF     ??append_1,??append??rA_1
   \   00000034   0010A0E1           MOV      R1,R0
   \   00000038   0400A0E1           MOV      R0,R4
   \   0000003C   ........           _BLF     ??string,??string??rA
   \   00000040   0020A0E3           MOV      R2,#+0
   \   00000044   0110A0E3           MOV      R1,#+1
   \   00000048   0D00A0E1           MOV      R0,SP
   \   0000004C   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000050   1CD08DE2           ADD      SP,SP,#+28
   \   00000054   7040BDE8           POP      {R4-R6,LR}
   \   00000058   1EFF2FE1           BX       LR               ;; return
      6          #endif
      7          //---------------------------------------------------------------------------
      8          

   \                                 In segment CODE, align 4, keep-with-next
      9          void RestoreSettingsWarning(AnsiString Message) {
     10              RestoreSettingsWarningsString += Message + NewLineStr;
   \                     ??RestoreSettingsWarning:
   \   00000000   ........           LDR      R2,??DataTable13  ;; NewLineStr
   \   00000004   00402DE9           PUSH     {LR}
   \   00000008   1CD04DE2           SUB      SP,SP,#+28
   \   0000000C   0010A0E1           MOV      R1,R0
   \   00000010   0D00A0E1           MOV      R0,SP
   \   00000014   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000018   ........           LDR      R0,??DataTable3  ;; ??npos
   \   0000001C   0020A0E3           MOV      R2,#+0
   \   00000020   003090E5           LDR      R3,[R0, #+0]
   \   00000024   ........           LDR      R0,??Subroutine15_0  ;; RestoreSettingsWarningsString
   \   00000028   0D10A0E1           MOV      R1,SP
   \   0000002C   ........           _BLF     ??append,??append??rA
   \   00000030   0020A0E3           MOV      R2,#+0
   \   00000034   0110A0E3           MOV      R1,#+1
   \   00000038   0D00A0E1           MOV      R0,SP
   \   0000003C   ........           _BLF     ??_Tidy,??_Tidy??rA
     11          }
   \   00000040   1CD08DE2           ADD      SP,SP,#+28
   \   00000044                      REQUIRE ?Subroutine15
   \   00000044                      ;; // Fall through to label ?Subroutine15

   \                                 In segment CODE, align 4, keep-with-next
   \                     ?Subroutine15:
   \   00000000   0040BDE8           POP      {LR}
   \   00000004   1EFF2FE1           BX       LR               ;; return
   \                     ??Subroutine15_0:
   \   00000008   ........           DC32     RestoreSettingsWarningsString
     12          //---------------------------------------------------------------------------
     13          

   \                                 In segment CODE, align 4, keep-with-next
   \                     ?Subroutine14:
   \   00000000   1040BDE8           POP      {R4,LR}
   \   00000004   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
     14          TSNSaveSettings::TSNSaveSettings(void) {
   \                     ??TSNSaveSettings:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   1CD04DE2           SUB      SP,SP,#+28
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   ........           _BLF     ??set_1,??set??rA
   \   00000010   180084E2           ADD      R0,R4,#+24
   \   00000014   ........           _BLF     ??AnsiString,??AnsiString??rA
     15              FileName = "Settings.s2s";
   \   00000018   38109FE5           LDR      R1,??TSNSaveSettings_2  ;; `?<Constant "Settings.s2s">`
   \   0000001C   0D00A0E1           MOV      R0,SP
   \   00000020   ........           _BLF     ??AnsiString_1,??AnsiString??rA_1
   \   00000024   ........           LDR      R1,??DataTable3  ;; ??npos
   \   00000028   0020A0E3           MOV      R2,#+0
   \   0000002C   003091E5           LDR      R3,[R1, #+0]
   \   00000030   0010A0E1           MOV      R1,R0
   \   00000034   180084E2           ADD      R0,R4,#+24
   \   00000038   ........           _BLF     ??assign,??assign??rA
   \   0000003C   0020A0E3           MOV      R2,#+0
   \   00000040   0110A0E3           MOV      R1,#+1
   \   00000044   0D00A0E1           MOV      R0,SP
   \   00000048   ........           _BLF     ??_Tidy,??_Tidy??rA
     16          }
   \   0000004C   0400A0E1           MOV      R0,R4
   \   00000050   1CD08DE2           ADD      SP,SP,#+28
   \   00000054   ........           B        ?Subroutine14
   \                     ??TSNSaveSettings_2:
   \   00000058   ........           DC32     `?<Constant "Settings.s2s">`

   \                                 In segment CODE, align 4, keep-with-next
     17          TSNSaveSettings::TSNSaveSettings(AnsiString FName) {
   \                     ??TSNSaveSettings_1:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
   \   0000000C   ........           _BLF     ??set_1,??set??rA
   \   00000010   180084E2           ADD      R0,R4,#+24
   \   00000014   ........           _BLF     ??AnsiString,??AnsiString??rA
     18              FileName = FName;
   \   00000018   ........           LDR      R0,??DataTable3  ;; ??npos
   \   0000001C   0020A0E3           MOV      R2,#+0
   \   00000020   003090E5           LDR      R3,[R0, #+0]
   \   00000024   0510A0E1           MOV      R1,R5
   \   00000028   180084E2           ADD      R0,R4,#+24
   \   0000002C   ........           _BLF     ??assign,??assign??rA
     19          }
   \   00000030   0400A0E1           MOV      R0,R4
   \   00000034   3040BDE8           POP      {R4,R5,LR}
   \   00000038   1EFF2FE1           BX       LR               ;; return
     20          

   \                                 In segment CODE, align 4, keep-with-next
     21          TSNSaveSettings::~TSNSaveSettings(void) {
   \                     `?~TSNSaveSettings`:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0040A0E1           MOV      R4,R0
     22          }
   \   00000008   0020A0E3           MOV      R2,#+0
   \   0000000C   0110A0E3           MOV      R1,#+1
   \   00000010   180084E2           ADD      R0,R4,#+24
   \   00000014   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000018   041094E5           LDR      R1,[R4, #+4]
   \   0000001C   0400A0E1           MOV      R0,R4
   \   00000020   ........           _BLF     ??_Erase_1,??_Erase??rA_1
   \   00000024   0400A0E1           MOV      R0,R4
   \   00000028   ........           _BLF     ??_Clear,??_Clear??rA
   \   0000002C   ........           B        ?Subroutine14
     23          

   \                                 In segment CODE, align 4, keep-with-next
     24          void TSNSaveSettings::WriteToFile(void) {
   \                     ??WriteToFile:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   0040A0E1           MOV      R4,R0
     25          
     26              TSNConfigString *SettingsString = new TSNConfigString(FLASH_FILE_SIZE);
   \   00000008   ........           LDR      R0,??DataTable12  ;; 0x3fffb
   \   0000000C   ........           _BLF     `??new TSNConfigString`,`??new TSNConfigString??rA`
   \   00000010   0050B0E1           MOVS     R5,R0
     27              if ( SettingsString ) {
   \   00000014   1000000A           BEQ      ??WriteToFile_1
     28                  SaveSettings(SettingsString);
   \   00000018   0510A0E1           MOV      R1,R5
   \   0000001C   0400A0E1           MOV      R0,R4
   \   00000020   ........           BL       ??SaveSettings
     29                  if ( SettingsString->GetSize() ) {
   \   00000024   0500A0E1           MOV      R0,R5
   \   00000028   ........           _BLF     ??GetSize,??GetSize??rA
   \   0000002C   000050E3           CMP      R0,#+0
   \   00000030   0700000A           BEQ      ??WriteToFile_2
     30                      SettingsString->WriteFile((char *)FileName.c_str(), PRogramObjectBase::WriteAll);
   \   00000034   ........           LDR      R0,??DataTable20  ;; ??WriteAll
   \   00000038   0060D0E5           LDRB     R6,[R0, #+0]
   \   0000003C   180084E2           ADD      R0,R4,#+24
   \   00000040   ........           _BLF     ??c_str,??c_str??rA
   \   00000044   0620A0E1           MOV      R2,R6
   \   00000048   0010A0E1           MOV      R1,R0
   \   0000004C   0500A0E1           MOV      R0,R5
   \   00000050   ........           _BLF     ??WriteFile,??WriteFile??rA
     31                  }
     32                  delete SettingsString;
   \                     ??WriteToFile_2:
   \   00000054   0500A0E1           MOV      R0,R5
   \   00000058   ........           _BLF     `??delete ~TSNConfigString`,`??delete ~TSNConfigString??rA`
     33              }
     34          }
   \                     ??WriteToFile_1:
   \   0000005C   7040BDE8           POP      {R4-R6,LR}
   \   00000060   1EFF2FE1           BX       LR               ;; return
     35          

   \                                 In segment CODE, align 4, keep-with-next
     36          void TSNSaveSettings::SaveSettings(TSNConfigString *SettingsString) {
     37              if ( PROProjectInfo::PROProjectInfoPtr && PROProjectInfo::PROProjectInfoPtr->ProjectName.data() ) {
   \                     ??SaveSettings:
   \   00000000   ........           LDR      R0,??DataTable14  ;; ??PROProjectInfoPtr
   \   00000004   F0402DE9           PUSH     {R4-R7,LR}
   \   00000008   42DF4DE2           SUB      SP,SP,#+264
   \   0000000C   005090E5           LDR      R5,[R0, #+0]
   \   00000010   0140A0E1           MOV      R4,R1
   \   00000014   000055E3           CMP      R5,#+0
   \   00000018   7C00000A           BEQ      ??SaveSettings_4
   \   0000001C   F8019FE5           LDR      R0,??SaveSettings_5  ;; ??ProjectName
   \   00000020   ........           _BLF     ??c_str,??c_str??rA
   \   00000024   000050E3           CMP      R0,#+0
   \   00000028   7800000A           BEQ      ??SaveSettings_4
     38                  PROProjectInfo::PROProjectInfoPtr->SaveSettings(SettingsString);
   \   0000002C   0410A0E1           MOV      R1,R4
   \   00000030   0500A0E1           MOV      R0,R5
   \   00000034   ........           _BLF     ??SaveSettings_1,??SaveSettings??rA
     39          #ifndef BORLAND
     40                  if ( SystemWindow )	SystemWindow->SaveSettings(SettingsString);
   \   00000038   ........           LDR      R0,??DataTable15  ;; SystemWindow
   \   0000003C   000090E5           LDR      R0,[R0, #+0]
   \   00000040   000050E3           CMP      R0,#+0
   \   00000044   0100000A           BEQ      ??SaveSettings_6
   \   00000048   0410A0E1           MOV      R1,R4
   \   0000004C   ........           _BLF     ??SaveSettings_2,??SaveSettings??rA_1
     41          #endif
     42          // SystemData Info
     43                  if ( PROSystemData::TXUSystemData ) PROSystemData::TXUSystemData->SaveSettings(SettingsString);
   \                     ??SaveSettings_6:
   \   00000050   ........           LDR      R0,??DataTable16  ;; ??TXUSystemData
   \   00000054   002090E5           LDR      R2,[R0, #+0]
   \   00000058   000052E3           CMP      R2,#+0
   \   0000005C   0500000A           BEQ      ??SaveSettings_7
   \   00000060   0200A0E1           MOV      R0,R2
   \   00000064   A42092E5           LDR      R2,[R2, #+164]
   \   00000068   0410A0E1           MOV      R1,R4
   \   0000006C   602092E5           LDR      R2,[R2, #+96]
   \   00000070   0FE0A0E1           MOV      LR,PC
   \   00000074   12FF2FE1           BX       R2
     44          //// Config Info
     45          //  	if ( ConfigInfoPtr )ConfigInfoPtr->WriteConfigToFile(SettingsString);
     46          //// Project Info
     47          //		PROProjectInfo::PROProjectInfoPtr->WriteConfigToFile(SettingsString);
     48          //// TCU Info
     49          //		if ( TanksystemTCUList ) {
     50          //			PRONode *Node = TanksystemTCUList->getHead();
     51          //			int ListSize = TanksystemTCUList->Size();
     52          //			for ( int count=0; count<ListSize; count++ ) {
     53          //				Node = Node->getNext();
     54          //				PROTanksystemUnit *Element = (PROTanksystemUnit*)Node->getElement();
     55          //				if ( Element )Element-> (SettingsString);
     56          //			}
     57          //		}
     58          //
     59          // Atmospheric reference
     60                  if ( PROAtmReference::PROAtmRefPtr ) PROAtmReference::PROAtmRefPtr->SaveSettings(SettingsString);
   \                     ??SaveSettings_7:
   \   00000078   ........           LDR      R0,??DataTable17  ;; ??PROAtmRefPtr
   \   0000007C   002090E5           LDR      R2,[R0, #+0]
   \   00000080   000052E3           CMP      R2,#+0
   \   00000084   0500000A           BEQ      ??SaveSettings_8
   \   00000088   0200A0E1           MOV      R0,R2
   \   0000008C   A42092E5           LDR      R2,[R2, #+164]
   \   00000090   0410A0E1           MOV      R1,R4
   \   00000094   602092E5           LDR      R2,[R2, #+96]
   \   00000098   0FE0A0E1           MOV      LR,PC
   \   0000009C   12FF2FE1           BX       R2
     61          //// Inclinometers
     62                  if ( PROInclinometer::PROInclinPtr ) PROInclinometer::PROInclinPtr->SaveSettings(SettingsString);
   \                     ??SaveSettings_8:
   \   000000A0   ........           LDR      R0,??DataTable18  ;; ??PROInclinPtr
   \   000000A4   002090E5           LDR      R2,[R0, #+0]
   \   000000A8   000052E3           CMP      R2,#+0
   \   000000AC   0500000A           BEQ      ??SaveSettings_9
   \   000000B0   0200A0E1           MOV      R0,R2
   \   000000B4   A42092E5           LDR      R2,[R2, #+164]
   \   000000B8   0410A0E1           MOV      R1,R4
   \   000000BC   602092E5           LDR      R2,[R2, #+96]
   \   000000C0   0FE0A0E1           MOV      LR,PC
   \   000000C4   12FF2FE1           BX       R2
     63          //// Draft measurements
     64                  if ( PRODraftSystem::PRODraftSysPtr ) PRODraftSystem::PRODraftSysPtr->SaveSettings(SettingsString);
   \                     ??SaveSettings_9:
   \   000000C8   ........           LDR      R0,??DataTable19  ;; ??PRODraftSysPtr
   \   000000CC   002090E5           LDR      R2,[R0, #+0]
   \   000000D0   000052E3           CMP      R2,#+0
   \   000000D4   0500000A           BEQ      ??SaveSettings_10
   \   000000D8   0200A0E1           MOV      R0,R2
   \   000000DC   A42092E5           LDR      R2,[R2, #+164]
   \   000000E0   0410A0E1           MOV      R1,R4
   \   000000E4   602092E5           LDR      R2,[R2, #+96]
   \   000000E8   0FE0A0E1           MOV      LR,PC
   \   000000EC   12FF2FE1           BX       R2
     65          
     66          // for all types of PRogramObject
     67                  set<PRogramObjectBase *>PROListTable[] = {
   \                     ??SaveSettings_10:
   \   000000F0   28119FE5           LDR      R1,??SaveSettings_5+0x4  ;; ??ObjectSet
   \   000000F4   0D00A0E1           MOV      R0,SP
   \   000000F8   ........           _BLF     ??set,??set??rA_1
   \   000000FC   20119FE5           LDR      R1,??SaveSettings_5+0x8  ;; ??ObjectSet_1
   \   00000100   18008DE2           ADD      R0,SP,#+24
   \   00000104   ........           _BLF     ??set,??set??rA_1
   \   00000108   18119FE5           LDR      R1,??SaveSettings_5+0xC  ;; ??ObjectSet_2
   \   0000010C   30008DE2           ADD      R0,SP,#+48
   \   00000110   ........           _BLF     ??set,??set??rA_1
   \   00000114   10119FE5           LDR      R1,??SaveSettings_5+0x10  ;; ??ObjectSet_3
   \   00000118   48008DE2           ADD      R0,SP,#+72
   \   0000011C   ........           _BLF     ??set,??set??rA_1
   \   00000120   08119FE5           LDR      R1,??SaveSettings_5+0x14  ;; ??ObjectSet_4
   \   00000124   60008DE2           ADD      R0,SP,#+96
   \   00000128   ........           _BLF     ??set,??set??rA_1
   \   0000012C   00119FE5           LDR      R1,??SaveSettings_5+0x18  ;; ??ObjectSet_5
   \   00000130   78008DE2           ADD      R0,SP,#+120
   \   00000134   ........           _BLF     ??set,??set??rA_1
   \   00000138   F8109FE5           LDR      R1,??SaveSettings_5+0x1C  ;; ??ObjectSet_6
   \   0000013C   90008DE2           ADD      R0,SP,#+144
   \   00000140   ........           _BLF     ??set,??set??rA_1
   \   00000144   F0109FE5           LDR      R1,??SaveSettings_5+0x20  ;; ??ObjectSet_7
   \   00000148   A8008DE2           ADD      R0,SP,#+168
   \   0000014C   ........           _BLF     ??set,??set??rA_1
   \   00000150   E8109FE5           LDR      R1,??SaveSettings_5+0x24  ;; ??ObjectSet_8
   \   00000154   C0008DE2           ADD      R0,SP,#+192
   \   00000158   ........           _BLF     ??set,??set??rA_1
   \   0000015C   E0109FE5           LDR      R1,??SaveSettings_5+0x28  ;; ??ObjectSet_9
   \   00000160   D8008DE2           ADD      R0,SP,#+216
   \   00000164   ........           _BLF     ??set,??set??rA_1
   \   00000168   D8109FE5           LDR      R1,??SaveSettings_5+0x2C  ;; ??ObjectSet_10
   \   0000016C   F0008DE2           ADD      R0,SP,#+240
   \   00000170   ........           _BLF     ??set,??set??rA_1
     68                      PROCargoTank::ObjectSet,
     69                      PROBallastTank::ObjectSet,
     70                      PROServiceTank::ObjectSet,
     71                      PROLevelSwitch::ObjectSet,
     72                      PROTankPressure::ObjectSet,
     73                      PROLinePressure::ObjectSet,
     74                      PROTemperature::ObjectSet,
     75                      PROWaterIngress::ObjectSet,
     76                      PROVoidSpace::ObjectSet,
     77                      PROWaterHeater::ObjectSet,
     78          			PROTankWashingMachine::ObjectSet,
     79          		};
     80          
     81                  for ( unsigned i = 0; i < NELEMENTS(PROListTable); i++ ) {
   \   00000174   0050A0E3           MOV      R5,#+0
     82                      set<PRogramObjectBase *>::iterator pBIt;
     83                      for ( pBIt = PROListTable[i].begin(); pBIt != PROListTable[i].end(); pBIt++ ) {
   \                     ??SaveSettings_11:
   \   00000178   1800A0E3           MOV      R0,#+24
   \   0000017C   0D10A0E1           MOV      R1,SP
   \   00000180   901526E0           MLA      R6,R0,R5,R1
   \   00000184   007096E5           LDR      R7,[R6, #+0]
   \   00000188   090000EA           B        ??SaveSettings_12
     84                          ((PRogramObject *)(*pBIt))->SaveSettings(SettingsString);
   \                     ??SaveSettings_13:
   \   0000018C   102097E5           LDR      R2,[R7, #+16]
   \   00000190   0410A0E1           MOV      R1,R4
   \   00000194   0200A0E1           MOV      R0,R2
   \   00000198   A42092E5           LDR      R2,[R2, #+164]
   \   0000019C   602092E5           LDR      R2,[R2, #+96]
   \   000001A0   0FE0A0E1           MOV      LR,PC
   \   000001A4   12FF2FE1           BX       R2
     85                      }
   \   000001A8   0700A0E1           MOV      R0,R7
   \   000001AC   ........           _BLF     ??_IncP,??_IncP??rA
   \   000001B0   0070A0E1           MOV      R7,R0
   \                     ??SaveSettings_12:
   \   000001B4   060057E1           CMP      R7,R6
   \   000001B8   F3FFFF1A           BNE      ??SaveSettings_13
     86                  }
   \   000001BC   015085E2           ADD      R5,R5,#+1
   \   000001C0   0B0055E3           CMP      R5,#+11
   \   000001C4   EBFFFF3A           BCC      ??SaveSettings_11
     87          
     88                  for ( int i = 0; i < MAX_CARGOTYPES; i++ ) {
   \   000001C8   0050A0E3           MOV      R5,#+0
   \                     ??SaveSettings_14:
   \   000001CC   78009FE5           LDR      R0,??SaveSettings_5+0x30  ;; ??CargoTable
   \   000001D0   000090E5           LDR      R0,[R0, #+0]
   \   000001D4   050180E0           ADD      R0,R0,R5, LSL #+2
   \   000001D8   001090E5           LDR      R1,[R0, #+0]
   \   000001DC   000051E3           CMP      R1,#+0
   \   000001E0   0200000A           BEQ      ??SaveSettings_15
     89                      if ( CTOUser::CargoTable[i] )	CTOUser::CargoTable[i]->SaveSettings(SettingsString);
   \   000001E4   000090E5           LDR      R0,[R0, #+0]
   \   000001E8   0410A0E1           MOV      R1,R4
   \   000001EC   ........           _BLF     ??SaveSettings_3,??SaveSettings??rA_2
     90                  }
   \                     ??SaveSettings_15:
   \   000001F0   015085E2           ADD      R5,R5,#+1
   \   000001F4   C80055E3           CMP      R5,#+200
   \   000001F8   F3FFFFBA           BLT      ??SaveSettings_14
     91          
     92          /*	Not necessary to save
     93                  if ( TPCxList ) {
     94                      PRONode *Node = TPCxList->getHead();
     95                      int ListSize = TPCxList->Size();
     96                      for ( int count=0; count<ListSize; count++ ) {
     97                          Node = Node->getNext();
     98                          TPCxObject *Element = (TPCxObject*)Node->getElement();
     99                          Element->SaveSettings(SettingsString);
    100                      }
    101                  }
    102          */
    103                  //SettingsString->WriteFile(fileName,true); // Write all
    104              } else {}
   \   000001FC   4C309FE5           LDR      R3,??SaveSettings_5+0x34  ;; `?~set`
   \   00000200   1820A0E3           MOV      R2,#+24
   \   00000204   0B10A0E3           MOV      R1,#+11
   \   00000208   0D00A0E1           MOV      R0,SP
   \   0000020C   ........           _BLF     __data_vec_destroy,??__data_vec_destroy??rA
    105          }
   \                     ??SaveSettings_4:
   \   00000210   42DF8DE2           ADD      SP,SP,#+264
   \   00000214   F040BDE8           POP      {R4-R7,LR}
   \   00000218   1EFF2FE1           BX       LR               ;; return
   \                     ??SaveSettings_5:
   \   0000021C   ........           DC32     ??ProjectName
   \   00000220   ........           DC32     ??ObjectSet
   \   00000224   ........           DC32     ??ObjectSet_1
   \   00000228   ........           DC32     ??ObjectSet_2
   \   0000022C   ........           DC32     ??ObjectSet_3
   \   00000230   ........           DC32     ??ObjectSet_4
   \   00000234   ........           DC32     ??ObjectSet_5
   \   00000238   ........           DC32     ??ObjectSet_6
   \   0000023C   ........           DC32     ??ObjectSet_7
   \   00000240   ........           DC32     ??ObjectSet_8
   \   00000244   ........           DC32     ??ObjectSet_9
   \   00000248   ........           DC32     ??ObjectSet_10
   \   0000024C   ........           DC32     ??CargoTable
   \   00000250   ........           DC32     `?~set`
    106          

   \                                 In segment CODE, align 4, keep-with-next
    107          void TSNSaveSettings::LoadFromFile(void) {
    108              TSNConfigString SettingsString(FLASH_FILE_SIZE);
   \                     ??LoadFromFile:
   \   00000000   ........           LDR      R1,??DataTable12  ;; 0x3fffb
   \   00000004   10402DE9           PUSH     {R4,LR}
   \   00000008   20D04DE2           SUB      SP,SP,#+32
   \   0000000C   0040A0E1           MOV      R4,R0
   \   00000010   0D00A0E1           MOV      R0,SP
   \   00000014   ........           _BLF     ??TSNConfigString,??TSNConfigString??rA
    109              if ( SettingsString.ReadFile((char *)FileName.c_str()) ) {
   \   00000018   180084E2           ADD      R0,R4,#+24
   \   0000001C   ........           _BLF     ??c_str,??c_str??rA
   \   00000020   0010A0E1           MOV      R1,R0
   \   00000024   0D00A0E1           MOV      R0,SP
   \   00000028   ........           _BLF     ??ReadFile,??ReadFile??rA
   \   0000002C   000050E3           CMP      R0,#+0
   \   00000030   0200000A           BEQ      ??LoadFromFile_1
    110                  if ( !RestoreSettings(&SettingsString) ) {
   \   00000034   0D10A0E1           MOV      R1,SP
   \   00000038   0400A0E1           MOV      R0,R4
   \   0000003C   ........           BL       ??RestoreSettings
    111                      //SetFactoryDefaults();
    112                  }
    113              }
    114          }
   \                     ??LoadFromFile_1:
   \   00000040   0D00A0E1           MOV      R0,SP
   \   00000044   ........           _BLF     `?~TSNConfigString`,`?~TSNConfigString??rA`
   \   00000048   20D08DE2           ADD      SP,SP,#+32
   \   0000004C   ........           B        ?Subroutine14
    115          

   \                                 In segment CODE, align 4, keep-with-next
    116          bool TSNSaveSettings::RestoreSettings(TSNConfigString *SettingsString) {
   \                     ??RestoreSettings:
   \   00000000   D14F2DE9           PUSH     {R0,R4,R6-R11,LR}
    117              //RestoreSettingsWarningsString = "";
    118              PRogramObjectBase *CurrentPRO;
    119              unsigned IDNumber;
    120              bool NoError     = true;
    121              bool HasSystemId = false;
    122              int ErrorLine = 0;
   \   00000004   ........           LDR      R9,??DataTable13  ;; NewLineStr
   \   00000008   3CA59FE5           LDR      R10,??RestoreSettings_2  ;; `?<Constant "Basic level:\\nUnknown ...">`
   \   0000000C   5CDF4DE2           SUB      SP,SP,#+368
   \   00000010   0140A0E1           MOV      R4,R1
   \   00000014   0170A0E3           MOV      R7,#+1
   \   00000018   0080A0E3           MOV      R8,#+0
   \   0000001C   0010A0E3           MOV      R1,#+0
   \   00000020   00108DE5           STR      R1,[SP, #+0]
   \   00000024   0160E0E1           MVN      R6,R1
    123              int Cnt = 0;
    124              do {
    125                  AnsiString InputKeyWord = SettingsString->NextWord(ErrorLine);
   \                     ??RestoreSettings_3:
   \   00000028   0030A0E3           MOV      R3,#+0
   \   0000002C   0D20A0E1           MOV      R2,SP
   \   00000030   3C108DE2           ADD      R1,SP,#+60
   \   00000034   0400A0E1           MOV      R0,R4
   \   00000038   ........           _BLF     ??NextWord,??NextWord??rA
    126                  if ( ErrorLine ) {
   \   0000003C   00009DE5           LDR      R0,[SP, #+0]
   \   00000040   000050E3           CMP      R0,#+0
   \   00000044   2900000A           BEQ      ??RestoreSettings_4
    127                      if ( ErrorLine != EOF ) {
   \   00000048   060050E1           CMP      R0,R6
   \   0000004C   2E01000A           BEQ      ??RestoreSettings_5
    128                          RestoreSettingsWarning((AnsiString)"Basic level:\nUnknown error started at line:" + (AnsiString)ErrorLine + NewLineStr);
   \   00000050   0010A0E1           MOV      R1,R0
   \   00000054   90008DE2           ADD      R0,SP,#+144
   \   00000058   ........           _BLF     ??AnsiString_2,??AnsiString??rA_2
   \   0000005C   00B0A0E1           MOV      R11,R0
   \   00000060   0A10A0E1           MOV      R1,R10
   \   00000064   74008DE2           ADD      R0,SP,#+116
   \   00000068   ........           _BLF     ??AnsiString_1,??AnsiString??rA_1
   \   0000006C   0B20A0E1           MOV      R2,R11
   \   00000070   0010A0E1           MOV      R1,R0
   \   00000074   04008DE2           ADD      R0,SP,#+4
   \   00000078   ........           _BLF     `??operator+`,`??operator+??rA`
   \   0000007C   0920A0E1           MOV      R2,R9
   \   00000080   04108DE2           ADD      R1,SP,#+4
   \   00000084   20008DE2           ADD      R0,SP,#+32
   \   00000088   ........           _BLF     `??operator+`,`??operator+??rA`
   \   0000008C   20108DE2           ADD      R1,SP,#+32
   \   00000090   58008DE2           ADD      R0,SP,#+88
   \   00000094   ........           _BLF     ??AnsiString_3,??AnsiString??rA_3
   \   00000098   ........           BL       ??RestoreSettingsWarning
   \   0000009C   0020A0E3           MOV      R2,#+0
   \   000000A0   0110A0E3           MOV      R1,#+1
   \   000000A4   58008DE2           ADD      R0,SP,#+88
   \   000000A8   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000000AC   0020A0E3           MOV      R2,#+0
   \   000000B0   0110A0E3           MOV      R1,#+1
   \   000000B4   20008DE2           ADD      R0,SP,#+32
   \   000000B8   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000000BC   0020A0E3           MOV      R2,#+0
   \   000000C0   0110A0E3           MOV      R1,#+1
   \   000000C4   04008DE2           ADD      R0,SP,#+4
   \   000000C8   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000000CC   0020A0E3           MOV      R2,#+0
   \   000000D0   0110A0E3           MOV      R1,#+1
   \   000000D4   90008DE2           ADD      R0,SP,#+144
   \   000000D8   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000000DC   0020A0E3           MOV      R2,#+0
   \   000000E0   0110A0E3           MOV      R1,#+1
   \   000000E4   74008DE2           ADD      R0,SP,#+116
   \                     ??RestoreSettings_6:
   \   000000E8   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000000EC   060100EA           B        ??RestoreSettings_5
    129                      }
    130                  } else {
    131                      int Key = FindConfigKey(InputKeyWord);
   \                     ??RestoreSettings_4:
   \   000000F0   3C108DE2           ADD      R1,SP,#+60
   \   000000F4   04008DE2           ADD      R0,SP,#+4
   \   000000F8   ........           _BLF     ??string,??string??rA
   \   000000FC   04008DE2           ADD      R0,SP,#+4
   \   00000100   ........           _BLF     ??FindConfigKey,??FindConfigKey??rA
   \   00000104   00B0A0E1           MOV      R11,R0
   \   00000108   0020A0E3           MOV      R2,#+0
   \   0000010C   0110A0E3           MOV      R1,#+1
   \   00000110   04008DE2           ADD      R0,SP,#+4
   \   00000114   ........           _BLF     ??_Tidy,??_Tidy??rA
    132                      Cnt++;
    133                      switch ( Key ) {
   \   00000118   FA0F5BE3           CMP      R11,#+1000
   \   0000011C   EA00A013           MOVNE    R0,#+234
   \   00000120   C00F8013           ORRNE    R0,R0,#0x300
   \   00000124   00005B11           CMPNE    R11,R0
   \   00000128   FB0F5B13           CMPNE    R11,#+1004
   \   0000012C   F600000A           BEQ      ??RestoreSettings_5
   \   00000130   070080E2           ADD      R0,R0,#+7
   \   00000134   00005BE1           CMP      R11,R0
   \   00000138   A500000A           BEQ      ??RestoreSettings_7
   \   0000013C   010080E2           ADD      R0,R0,#+1
   \   00000140   00005BE1           CMP      R11,R0
   \   00000144   7900000A           BEQ      ??RestoreSettings_8
   \   00000148   050080E3           ORR      R0,R0,#0x5
   \   0000014C   00005BE1           CMP      R11,R0
   \   00000150   9200000A           BEQ      ??RestoreSettings_9
   \   00000154   FF0F5BE3           CMP      R11,#+1020
   \   00000158   A000000A           BEQ      ??RestoreSettings_10
   \   0000015C   0F0080E2           ADD      R0,R0,#+15
   \   00000160   00005BE1           CMP      R11,R0
   \   00000164   AE00000A           BEQ      ??RestoreSettings_11
   \   00000168   410E5BE3           CMP      R11,#+1040
   \   0000016C   B900000A           BEQ      ??RestoreSettings_12
   \   00000170   140080E2           ADD      R0,R0,#+20
   \   00000174   00005BE1           CMP      R11,R0
   \   00000178   01008013           ORRNE    R0,R0,#0x1
   \   0000017C   00005B11           CMPNE    R11,R0
   \   00000180   01008012           ADDNE    R0,R0,#+1
   \   00000184   00005B11           CMPNE    R11,R0
   \   00000188   01008013           ORRNE    R0,R0,#0x1
   \   0000018C   00005B11           CMPNE    R11,R0
   \   00000190   01008012           ADDNE    R0,R0,#+1
   \   00000194   00005B11           CMPNE    R11,R0
   \   00000198   01008013           ORRNE    R0,R0,#0x1
   \   0000019C   00005B11           CMPNE    R11,R0
   \   000001A0   420E5B13           CMPNE    R11,#+1056
   \   000001A4   02008012           ADDNE    R0,R0,#+2
   \   000001A8   00005B11           CMPNE    R11,R0
   \   000001AC   03008012           ADDNE    R0,R0,#+3
   \   000001B0   00005B11           CMPNE    R11,R0
   \   000001B4   0A008013           ORRNE    R0,R0,#0xA
   \   000001B8   00005B11           CMPNE    R11,R0
   \   000001BC   03008012           ADDNE    R0,R0,#+3
   \   000001C0   00005B11           CMPNE    R11,R0
   \   000001C4   07008012           ADDNE    R0,R0,#+7
   \   000001C8   00005B11           CMPNE    R11,R0
   \   000001CC   14008012           ADDNE    R0,R0,#+20
   \   000001D0   00005B11           CMPNE    R11,R0
   \   000001D4   460E5B13           CMPNE    R11,#+1120
   \   000001D8   29008012           ADDNE    R0,R0,#+41
   \   000001DC   00005B11           CMPNE    R11,R0
   \   000001E0   01008012           ADDNE    R0,R0,#+1
   \   000001E4   00005B11           CMPNE    R11,R0
   \   000001E8   A700000A           BEQ      ??RestoreSettings_13
   \   000001EC   080080E3           ORR      R0,R0,#0x8
   \   000001F0   00005BE1           CMP      R11,R0
   \   000001F4   7600000A           BEQ      ??RestoreSettings_7
   \   000001F8   0A0080E2           ADD      R0,R0,#+10
   \   000001FC   00005BE1           CMP      R11,R0
   \   00000200   01008013           ORRNE    R0,R0,#0x1
   \   00000204   00005B11           CMPNE    R11,R0
   \   00000208   01008012           ADDNE    R0,R0,#+1
   \   0000020C   00005B11           CMPNE    R11,R0
   \   00000210   01008013           ORRNE    R0,R0,#0x1
   \   00000214   00005B11           CMPNE    R11,R0
   \   00000218   9B00000A           BEQ      ??RestoreSettings_13
   \   0000021C   480F80E3           ORR      R0,R0,#0x120
   \   00000220   00005BE1           CMP      R11,R0
   \   00000224   A900000A           BEQ      ??RestoreSettings_14
   \   00000228   9800A0E3           MOV      R0,#+152
   \   0000022C   800E80E3           ORR      R0,R0,#0x800
   \   00000230   00005BE1           CMP      R11,R0
   \   00000234   B900A013           MOVNE    R0,#+185
   \   00000238   B00E8013           ORRNE    R0,R0,#0xB00
   \   0000023C   00005B11           CMPNE    R11,R0
   \   00000240   B100000A           BEQ      ??RestoreSettings_5
   \   00000244   6200A0E3           MOV      R0,#+98
   \   00000248   6C0D80E3           ORR      R0,R0,#0x1B00
   \   0000024C   00005BE1           CMP      R11,R0
   \   00000250   4400000A           BEQ      ??RestoreSettings_15
    134                      default:
    135                          RestoreSettingsWarning((AnsiString)"Basic level:\nThe keyword " + InputKeyWord + " is not allowed here!! Line:" + (AnsiString)SettingsString->LineCount + NewLineStr);
   \   00000254   1C1094E5           LDR      R1,[R4, #+28]
   \   00000258   550F8DE2           ADD      R0,SP,#+340
   \   0000025C   ........           _BLF     ??AnsiString_2,??AnsiString??rA_2
   \   00000260   00B0A0E1           MOV      R11,R0
   \   00000264   2C108AE2           ADD      R1,R10,#+44
   \   00000268   4E0F8DE2           ADD      R0,SP,#+312
   \   0000026C   ........           _BLF     ??AnsiString_1,??AnsiString??rA_1
   \   00000270   0010A0E1           MOV      R1,R0
   \   00000274   3C208DE2           ADD      R2,SP,#+60
   \   00000278   470F8DE2           ADD      R0,SP,#+284
   \   0000027C   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000280   48208AE2           ADD      R2,R10,#+72
   \   00000284   471F8DE2           ADD      R1,SP,#+284
   \   00000288   400F8DE2           ADD      R0,SP,#+256
   \   0000028C   ........           _BLF     `??operator+_1`,`??operator+??rA_1`
   \   00000290   0B20A0E1           MOV      R2,R11
   \   00000294   401F8DE2           ADD      R1,SP,#+256
   \   00000298   E4008DE2           ADD      R0,SP,#+228
   \   0000029C   ........           _BLF     `??operator+`,`??operator+??rA`
   \   000002A0   0920A0E1           MOV      R2,R9
   \   000002A4   E4108DE2           ADD      R1,SP,#+228
   \   000002A8   C8008DE2           ADD      R0,SP,#+200
   \   000002AC   ........           _BLF     `??operator+`,`??operator+??rA`
   \   000002B0   C8108DE2           ADD      R1,SP,#+200
   \   000002B4   AC008DE2           ADD      R0,SP,#+172
   \   000002B8   ........           _BLF     ??AnsiString_3,??AnsiString??rA_3
   \   000002BC   ........           BL       ??RestoreSettingsWarning
   \   000002C0   0020A0E3           MOV      R2,#+0
   \   000002C4   0110A0E3           MOV      R1,#+1
   \   000002C8   AC008DE2           ADD      R0,SP,#+172
   \   000002CC   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000002D0   0020A0E3           MOV      R2,#+0
   \   000002D4   0110A0E3           MOV      R1,#+1
   \   000002D8   C8008DE2           ADD      R0,SP,#+200
   \   000002DC   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000002E0   0020A0E3           MOV      R2,#+0
   \   000002E4   0110A0E3           MOV      R1,#+1
   \   000002E8   E4008DE2           ADD      R0,SP,#+228
   \   000002EC   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000002F0   0020A0E3           MOV      R2,#+0
   \   000002F4   0110A0E3           MOV      R1,#+1
   \   000002F8   550F8DE2           ADD      R0,SP,#+340
   \   000002FC   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000300   0020A0E3           MOV      R2,#+0
   \   00000304   0110A0E3           MOV      R1,#+1
   \   00000308   400F8DE2           ADD      R0,SP,#+256
   \   0000030C   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000310   0020A0E3           MOV      R2,#+0
   \   00000314   0110A0E3           MOV      R1,#+1
   \   00000318   470F8DE2           ADD      R0,SP,#+284
   \   0000031C   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000320   0020A0E3           MOV      R2,#+0
   \   00000324   0110A0E3           MOV      R1,#+1
   \   00000328   4E0F8DE2           ADD      R0,SP,#+312
   \   0000032C   6DFFFFEA           B        ??RestoreSettings_6
    136                          break;
    137                      case C_AI_END:      // If AI type not found can continue with this
    138                      case C_AL_END:
    139                      case C_PRO_END:
    140                      case C_PRO_END_COMMON:
    141                      case C_PRO_END_PRO:
    142                          break;
    143                      case C_PRO_PROJINFO:
    144                          if ( PROProjectInfo::PROProjectInfoPtr ) {
   \                     ??RestoreSettings_8:
   \   00000330   ........           LDR      R0,??DataTable14  ;; ??PROProjectInfoPtr
   \   00000334   002090E5           LDR      R2,[R0, #+0]
   \   00000338   000052E3           CMP      R2,#+0
   \   0000033C   7300000A           BEQ      ??RestoreSettings_16
    145                              NoError = PROProjectInfo::PROProjectInfoPtr->RestoreSettings(SettingsString);
   \   00000340   0200A0E1           MOV      R0,R2
   \   00000344   A42092E5           LDR      R2,[R2, #+164]
   \   00000348   0410A0E1           MOV      R1,R4
   \   0000034C   142092E5           LDR      R2,[R2, #+20]
   \   00000350   0FE0A0E1           MOV      LR,PC
   \   00000354   12FF2FE1           BX       R2
   \   00000358   0070B0E1           MOVS     R7,R0
    146                              if ( NoError ) {
   \   0000035C   6A00000A           BEQ      ??RestoreSettings_5
    147                                  HasSystemId = true;
   \   00000360   0180A0E3           MOV      R8,#+1
   \   00000364   680000EA           B        ??RestoreSettings_5
    148                              }
    149                          }
    150                          break;
    151                      case C_TDU_SYSTEM_WIN:
    152                          if ( HasSystemId ) {
   \                     ??RestoreSettings_15:
   \   00000368   000058E3           CMP      R8,#+0
   \   0000036C   6500000A           BEQ      ??RestoreSettings_17
    153          #ifndef BORLAND
    154                              switch ( GlobalDeviceHWId ) {
   \   00000370   D8019FE5           LDR      R0,??RestoreSettings_2+0x4  ;; GlobalDeviceHWId
   \   00000374   F000D0E1           LDRSH    R0,[R0, #+0]
   \   00000378   020040E2           SUB      R0,R0,#+2
   \   0000037C   010050E3           CMP      R0,#+1
   \   00000380   6100008A           BHI      ??RestoreSettings_5
    155                              case TDU_R1:
    156                              case TDU_R2:
    157                                  if ( SystemWindow ) SystemWindow->RestoreSettings(SettingsString);
   \   00000384   ........           LDR      R0,??DataTable15  ;; SystemWindow
   \   00000388   000090E5           LDR      R0,[R0, #+0]
   \   0000038C   000050E3           CMP      R0,#+0
   \   00000390   5D00000A           BEQ      ??RestoreSettings_5
   \   00000394   0410A0E1           MOV      R1,R4
   \   00000398   ........           _BLF     ??RestoreSettings_1,??RestoreSettings??rA
   \   0000039C   5A0000EA           B        ??RestoreSettings_5
    158                                  break;
    159                              case TCU_R1:
    160                              case TCU_R2:
    161                              default:
    162                                  // Do nothing, because we do not have a windows system on
    163                                  // this unit. Should have read the info and ignored it
    164                                  break;
    165                              }
    166          #endif
    167                          } else {
    168                              NoError = false;
    169                          }
    170                          break;
    171                      case C_PRO_SYSDATA:
    172                          if ( HasSystemId ) {
   \                     ??RestoreSettings_9:
   \   000003A0   000058E3           CMP      R8,#+0
   \   000003A4   5700000A           BEQ      ??RestoreSettings_17
    173                              if ( PROSystemData::TXUSystemData ) PROSystemData::TXUSystemData->RestoreSettings(SettingsString);
   \   000003A8   ........           LDR      R0,??DataTable16  ;; ??TXUSystemData
   \   000003AC   002090E5           LDR      R2,[R0, #+0]
   \   000003B0   000052E3           CMP      R2,#+0
   \   000003B4   5500000A           BEQ      ??RestoreSettings_16
   \   000003B8   0200A0E1           MOV      R0,R2
   \   000003BC   A42092E5           LDR      R2,[R2, #+164]
   \   000003C0   0410A0E1           MOV      R1,R4
   \   000003C4   142092E5           LDR      R2,[R2, #+20]
   \   000003C8   0FE0A0E1           MOV      LR,PC
   \   000003CC   12FF2FE1           BX       R2
   \   000003D0   4D0000EA           B        ??RestoreSettings_5
    174                          } else {
    175                              NoError = false;
    176                          }
    177                          break;
    178                      case C_CONFIG_INFO:
    179                      case C_PRO_TANKSYS_UNIT:
    180                          if ( HasSystemId ) {} else {
   \                     ??RestoreSettings_7:
   \   000003D4   000058E3           CMP      R8,#+0
   \   000003D8   4B00001A           BNE      ??RestoreSettings_5
    181                              NoError = false;
   \   000003DC   490000EA           B        ??RestoreSettings_17
    182                          }
    183                          break;
    184                      case C_PRO_ATMREFSENS:
    185                          if ( HasSystemId ) {
   \                     ??RestoreSettings_10:
   \   000003E0   000058E3           CMP      R8,#+0
   \   000003E4   4700000A           BEQ      ??RestoreSettings_17
    186                              IDNumber = SettingsString->ReadInteger(ErrorLine);
   \   000003E8   0020A0E3           MOV      R2,#+0
   \   000003EC   0D10A0E1           MOV      R1,SP
   \   000003F0   0400A0E1           MOV      R0,R4
   \   000003F4   ........           _BLF     ??ReadInteger,??ReadInteger??rA
    187                              if ( PROAtmReference::PROAtmRefPtr ) PROAtmReference::PROAtmRefPtr->RestoreSettings(SettingsString);
   \   000003F8   ........           LDR      R0,??DataTable17  ;; ??PROAtmRefPtr
   \   000003FC   002090E5           LDR      R2,[R0, #+0]
   \   00000400   000052E3           CMP      R2,#+0
   \   00000404   4100000A           BEQ      ??RestoreSettings_16
   \   00000408   0200A0E1           MOV      R0,R2
   \   0000040C   A42092E5           LDR      R2,[R2, #+164]
   \   00000410   0410A0E1           MOV      R1,R4
   \   00000414   142092E5           LDR      R2,[R2, #+20]
   \   00000418   0FE0A0E1           MOV      LR,PC
   \   0000041C   12FF2FE1           BX       R2
   \   00000420   390000EA           B        ??RestoreSettings_5
    188                          } else {
    189                              NoError = false;
    190                          }
    191                          break;
    192                      case C_PRO_INC:
    193                          if ( HasSystemId ) {
   \                     ??RestoreSettings_11:
   \   00000424   000058E3           CMP      R8,#+0
   \   00000428   3600000A           BEQ      ??RestoreSettings_17
    194                              if ( PROInclinometer::PROInclinPtr ) PROInclinometer::PROInclinPtr->RestoreSettings(SettingsString);
   \   0000042C   ........           LDR      R0,??DataTable18  ;; ??PROInclinPtr
   \   00000430   002090E5           LDR      R2,[R0, #+0]
   \   00000434   000052E3           CMP      R2,#+0
   \   00000438   3400000A           BEQ      ??RestoreSettings_16
   \   0000043C   0200A0E1           MOV      R0,R2
   \   00000440   A42092E5           LDR      R2,[R2, #+164]
   \   00000444   0410A0E1           MOV      R1,R4
   \   00000448   142092E5           LDR      R2,[R2, #+20]
   \   0000044C   0FE0A0E1           MOV      LR,PC
   \   00000450   12FF2FE1           BX       R2
   \   00000454   2C0000EA           B        ??RestoreSettings_5
    195                          } else {
    196                              NoError = false;
    197                          }
    198                          break;
    199                      case C_PRO_DRAFT_SYSTEM:
    200                          if ( HasSystemId ) {
   \                     ??RestoreSettings_12:
   \   00000458   000058E3           CMP      R8,#+0
   \   0000045C   2900000A           BEQ      ??RestoreSettings_17
    201                              if ( PRODraftSystem::PRODraftSysPtr ) PRODraftSystem::PRODraftSysPtr->RestoreSettings(SettingsString);
   \   00000460   ........           LDR      R0,??DataTable19  ;; ??PRODraftSysPtr
   \   00000464   002090E5           LDR      R2,[R0, #+0]
   \   00000468   000052E3           CMP      R2,#+0
   \   0000046C   2700000A           BEQ      ??RestoreSettings_16
   \   00000470   0200A0E1           MOV      R0,R2
   \   00000474   A42092E5           LDR      R2,[R2, #+164]
   \   00000478   0410A0E1           MOV      R1,R4
   \   0000047C   142092E5           LDR      R2,[R2, #+20]
   \   00000480   0FE0A0E1           MOV      LR,PC
   \   00000484   12FF2FE1           BX       R2
   \   00000488   1F0000EA           B        ??RestoreSettings_5
    202                          } else {
    203                              NoError = false;
    204                          }
    205                          break;
    206          			case C_PRO_CARGO        	:
    207          			case C_PRO_TANK         	:
    208          			case C_PRO_BALLAST      	:
    209          			case C_PRO_HFO          	:
    210          			case C_PRO_DO           	:
    211          			case C_PRO_LUB          	:
    212          			case C_PRO_FW           	:
    213          			case C_PRO_MISC         	:
    214          			case C_PRO_LINEPRESS    	:
    215          			case C_PRO_TANKPRESS    	:
    216          			case C_PRO_TEMP         	:
    217          			case C_PRO_LEVSWITCH    	:
    218          			case C_PRO_WATER_HEATER 	:
    219          			case C_PRO_TANK_WASH_MACHINE:
    220          			case C_PRO_WATERINGRESS 	:
    221          			case C_PRO_VOIDSPACE    	:
    222          			case C_PRO_T_PANEL_CONTR	:    //must be something wrong if this
    223          			case C_PRO_TPC140       	:
    224          			case C_PRO_TPC350       	:
    225                      case C_PRO_TPC196       	:
    226                          if ( HasSystemId ) {
   \                     ??RestoreSettings_13:
   \   0000048C   000058E3           CMP      R8,#+0
   \   00000490   1C00000A           BEQ      ??RestoreSettings_17
    227                              IDNumber = SettingsString->ReadInteger(ErrorLine);
   \   00000494   0020A0E3           MOV      R2,#+0
   \   00000498   0D10A0E1           MOV      R1,SP
   \   0000049C   0400A0E1           MOV      R0,R4
   \   000004A0   ........           _BLF     ??ReadInteger,??ReadInteger??rA
    228                              CurrentPRO = FindObjectFromIDNumber(IDNumber);
   \   000004A4   0010A0E1           MOV      R1,R0
   \   000004A8   70019DE5           LDR      R0,[SP, #+368]
   \   000004AC   ........           BL       ??FindObjectFromIDNumber
   \   000004B0   0020B0E1           MOVS     R2,R0
    229                              if ( CurrentPRO ) {
   \   000004B4   1300000A           BEQ      ??RestoreSettings_17
    230                                  CurrentPRO->RestoreSettings(SettingsString);
   \                     ??RestoreSettings_18:
   \   000004B8   A42090E5           LDR      R2,[R0, #+164]
   \   000004BC   0410A0E1           MOV      R1,R4
   \   000004C0   142092E5           LDR      R2,[R2, #+20]
   \   000004C4   0FE0A0E1           MOV      LR,PC
   \   000004C8   12FF2FE1           BX       R2
   \   000004CC   0E0000EA           B        ??RestoreSettings_5
    231                              } else {
    232                                  NoError = false;
    233                              }
    234                          } else {
    235                              NoError = false;
    236                          }
    237                          break;
    238          
    239                      case C_PRO_USER_CARGO_TYPE:
    240                          if ( HasSystemId ) {
   \                     ??RestoreSettings_14:
   \   000004D0   000058E3           CMP      R8,#+0
   \   000004D4   0B00000A           BEQ      ??RestoreSettings_17
    241                              IDNumber = SettingsString->ReadInteger(ErrorLine);
   \   000004D8   0020A0E3           MOV      R2,#+0
   \   000004DC   0D10A0E1           MOV      R1,SP
   \   000004E0   0400A0E1           MOV      R0,R4
   \   000004E4   ........           _BLF     ??ReadInteger,??ReadInteger??rA
    242                              // Correct for former bug with IDNumber
    243                              IDNumber = (IDNumber & 0xffff) | (C_PRO_USER_CARGO_TYPE << 16);
    244                              CurrentPRO = FindObjectFromIDNumber(IDNumber);
   \   000004E8   0008A0E1           LSL      R0,R0,#+16
   \   000004EC   5016A0E3           MOV      R1,#+83886080
   \   000004F0   AB1881E3           ORR      R1,R1,#0xAB0000
   \   000004F4   201881E1           ORR      R1,R1,R0, LSR #+16
   \   000004F8   70019DE5           LDR      R0,[SP, #+368]
   \   000004FC   ........           BL       ??FindObjectFromIDNumber
   \   00000500   0020B0E1           MOVS     R2,R0
    245                              if ( CurrentPRO ) {
   \   00000504   EBFFFF1A           BNE      ??RestoreSettings_18
    246                                  CurrentPRO->RestoreSettings(SettingsString);
    247                              } else {
    248                                  NoError = false;
    249                              }
    250                          } else {
    251                              NoError = false;
   \                     ??RestoreSettings_17:
   \   00000508   0070A0E3           MOV      R7,#+0
    252                          }
    253                          break;
    254                      }
    255                  }
    256              }while ( NoError && (ErrorLine != EOF) );
   \                     ??RestoreSettings_5:
   \   0000050C   0020A0E3           MOV      R2,#+0
   \                     ??RestoreSettings_16:
   \   00000510   0110A0E3           MOV      R1,#+1
   \   00000514   3C008DE2           ADD      R0,SP,#+60
   \   00000518   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   0000051C   000057E3           CMP      R7,#+0
   \   00000520   00009D15           LDRNE    R0,[SP, #+0]
   \   00000524   06005011           CMPNE    R0,R6
   \   00000528   BEFEFF1A           BNE      ??RestoreSettings_3
    257              if ( !HasSystemId ) {
   \   0000052C   000058E3           CMP      R8,#+0
    258                  PRogramObjectBase::WriteAll = true;
   \   00000530   ........           LDREQ    R0,??DataTable20  ;; ??WriteAll
   \   00000534   0110A003           MOVEQ    R1,#+1
   \   00000538   0010C005           STRBEQ   R1,[R0, #+0]
    259              }
    260              return (NoError);
   \   0000053C   0700A0E1           MOV      R0,R7
   \   00000540   5DDF8DE2           ADD      SP,SP,#+372
   \   00000544   D04FBDE8           POP      {R4,R6-R11,LR}
   \   00000548   1EFF2FE1           BX       LR               ;; return
   \                     ??RestoreSettings_2:
   \   0000054C   ........           DC32     `?<Constant "Basic level:\\nUnknown ...">`
   \   00000550   ........           DC32     GlobalDeviceHWId
    261          }
    262          
    263          

   \                                 In segment CODE, align 4, keep-with-next
    264          bool TSNSaveSettings::IsNotRestoredPreviously(int IdNum) {
   \                     ??IsNotRestoredPreviously:
   \   00000000   13402DE9           PUSH     {R0,R1,R4,LR}
    265              bool AlreadyRead = false;
    266              pair<set<int>::iterator, bool> pr;
    267              // Should not be required to loop here!
    268              //int Cnt=0;
    269              pr = IDNumbers.insert(IdNum);
   \   00000004   0120A0E1           MOV      R2,R1
   \   00000008   0010A0E1           MOV      R1,R0
   \   0000000C   0D00A0E1           MOV      R0,SP
   \   00000010   ........           _BLF     ??insert,??insert??rA
    270              if ( !pr.second ) {
   \   00000014   0400DDE5           LDRB     R0,[SP, #+4]
   \   00000018   0040A0E3           MOV      R4,#+0
   \   0000001C   000050E3           CMP      R0,#+0
    271                  AlreadyRead = true;
   \   00000020   0140A003           MOVEQ    R4,#+1
    272              }
    273              return (!AlreadyRead);
   \   00000024   010024E2           EOR      R0,R4,#0x1
   \   00000028   1640BDE8           POP      {R1,R2,R4,LR}
   \   0000002C   FF0000E2           AND      R0,R0,#0xFF
   \   00000030   1EFF2FE1           BX       LR               ;; return
    274          }
    275          

   \                                 In segment CODE, align 4, keep-with-next
    276          PRogramObjectBase* TSNSaveSettings::FindObjectFromIDNumber(int IDNumber) {
   \                     ??FindObjectFromIDNumber:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0140A0E1           MOV      R4,R1
    277              if ( IsNotRestoredPreviously(IDNumber) ) {
   \   00000008   ........           BL       ??IsNotRestoredPreviously
   \   0000000C   000050E3           CMP      R0,#+0
   \   00000010   0900000A           BEQ      ??FindObjectFromIDNumber_1
    278                  PRogramObjectBase *ObjPtr =  FindPROFromIDNumber(IDNumber);
   \   00000014   0010A0E3           MOV      R1,#+0
   \   00000018   0400A0E1           MOV      R0,R4
   \   0000001C   ........           _BLF     ??FindPROFromIDNumber,??FindPROFromIDNumber??rA
    279                  // Check if old or new format for CreatedFromTank if object not found
    280                  // 0x8000 flags new format, 0x1000 is old
    281                  if ( !ObjPtr && (IDNumber & 0x1000) ) {
   \   00000020   000050E3           CMP      R0,#+0
   \   00000024   0400001A           BNE      ??FindObjectFromIDNumber_1
   \   00000028   400D14E3           TST      R4,#0x1000
   \   0000002C   0200000A           BEQ      ??FindObjectFromIDNumber_1
    282                      IDNumber -= 0x1000;
    283                      IDNumber += 0x8000;
    284                      ObjPtr =  FindPROFromIDNumber(IDNumber);
   \   00000030   0010A0E3           MOV      R1,#+0
   \   00000034   700C84E2           ADD      R0,R4,#+28672
   \   00000038   ........           _BLF     ??FindPROFromIDNumber,??FindPROFromIDNumber??rA
    285                  }
    286                  return ObjPtr;
    287              } else {
    288                  return NULL;
   \                     ??FindObjectFromIDNumber_1:
   \   0000003C   ........           B        ?Subroutine14
    289              }
    290          }

   \                                 In segment DIFUNCT, align 4, keep-with-next, root
   \   00000000                      REQUIRE ?call_ctors
   \   00000000   ........           DC32    ??__sti__routine

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "Settings.s2s">`:
   \   00000000   53657474696E       DC8 "Settings.s2s"
   \              67732E733273
   \              00          
   \   0000000D   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "Basic level:\\nUnknown ...">`:
   \   00000000   426173696320       DC8 "Basic level:\012Unknown error started at line:"
   \              6C6576656C3A
   \              0A556E6B6E6F
   \              776E20657272
   \              6F7220737461
   \              727465642061
   \              74206C696E65
   \              3A00        
   \   0000002C   426173696320       DC8 "Basic level:\012The keyword "
   \              6C6576656C3A
   \              0A546865206B
   \              6579776F7264
   \              2000        
   \   00000046   0000               DC8 0, 0
   \   00000048   206973206E6F       DC8 " is not allowed here!! Line:"
   \              7420616C6C6F
   \              776564206865
   \              72652121204C
   \              696E653A00  
   \   00000065   000000             DC8 0, 0, 0

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs TSNSaveSettings &TSNSaveSettings::new TSNSaveSettings(AnsiString)
   \                     `??new TSNSaveSettings`:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   3400A0E3           MOV      R0,#+52
   \   0000000C   ........           _BLF     `??operator new`,`??operator new??rA`
   \   00000010   000050E3           CMP      R0,#+0
   \   00000014   0100000A           BEQ      `??new TSNSaveSettings_2`
   \   00000018   0410A0E1           MOV      R1,R4
   \   0000001C   ........           BL       ??TSNSaveSettings_1
   \                     `??new TSNSaveSettings_2`:
   \   00000020   ........           B        ?Subroutine14

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs TSNSaveSettings &TSNSaveSettings::new TSNSaveSettings()
   \                     `??new TSNSaveSettings_1`:
   \   00000000   00402DE9           PUSH     {LR}
   \   00000004   3400A0E3           MOV      R0,#+52
   \   00000008   ........           _BLF     `??operator new`,`??operator new??rA`
   \   0000000C   000050E3           CMP      R0,#+0
   \   00000010   0000000A           BEQ      `??new TSNSaveSettings_3`
   \   00000014   ........           BL       ??TSNSaveSettings
   \                     `??new TSNSaveSettings_3`:
   \   00000018   ........           B        ?Subroutine15

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void TSNSaveSettings::delete ~TSNSaveSettings(TSNSaveSettings *)
   \                     `??delete ~TSNSaveSettings`:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0040B0E1           MOVS     R4,R0
   \   00000008   0200000A           BEQ      `??delete ~TSNSaveSettings_1`
   \   0000000C   ........           BL       `?~TSNSaveSettings`
   \   00000010   0400A0E1           MOV      R0,R4
   \   00000014   ........           _BLF     `??operator delete`,`??operator delete??rA`
   \                     `??delete ~TSNSaveSettings_1`:
   \   00000018                      REQUIRE ?Subroutine14
   \   00000018                      ;; // Fall through to label ?Subroutine14

   \                                 In segment CODE, align 4, keep-with-next
   \   static __??Code32?? __intrinsic __code __interwork __atpcs void __sti__routine()
   \                     ??__sti__routine:
   \   00000000   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable3:
   \   00000000   ........           DC32     ??npos

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable12:
   \   00000000   FBFF0300           DC32     0x3fffb

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable13:
   \   00000000   ........           DC32     NewLineStr

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable14:
   \   00000000   ........           DC32     ??PROProjectInfoPtr

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable15:
   \   00000000   ........           DC32     SystemWindow

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable16:
   \   00000000   ........           DC32     ??TXUSystemData

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable17:
   \   00000000   ........           DC32     ??PROAtmRefPtr

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable18:
   \   00000000   ........           DC32     ??PROInclinPtr

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable19:
   \   00000000   ........           DC32     ??PRODraftSysPtr

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable20:
   \   00000000   ........           DC32     ??WriteAll
    291          

   Maximum stack usage in bytes:

     Function                       CSTACK
     --------                       ------
     RestoreSettingsWarning(AnsiString)
                                       32
     TSNSaveSettings::FindObjectFromIDNumber(int)
                                        8
     TSNSaveSettings::IsNotRestoredPreviously(int)
                                       16
     TSNSaveSettings::LoadFromFile()
                                       40
     TSNSaveSettings::RestoreSettings(TSNConfigString *)
                                      408
     TSNSaveSettings::SaveSettings(TSNConfigString *)
                                      284
     TSNSaveSettings::TSNSaveSettings()
                                       36
     TSNSaveSettings::TSNSaveSettings(AnsiString)
                                       12
     TSNSaveSettings::WriteToFile()    16
     TSNSaveSettings::delete ~TSNSaveSettings(TSNSaveSettings *)
                                        8
     TSNSaveSettings::new TSNSaveSettings()
                                        4
     TSNSaveSettings::new TSNSaveSettings(AnsiString)
                                        8
     TSNSaveSettings::~TSNSaveSettings()
                                        8
     _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::_Copy(_Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>> const &)
                                       12
     _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::_Copy(_Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::_Nodeptr, _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::_Nodeptr)
                                       32
     _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::_Erase(_Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::_Nodeptr)
                                       16
     _Tree<_Tset_traits<int, less<int>, allocator<int>, false>>::_Erase(_Tree<_Tset_traits<int, less<int>, allocator<int>, false>>::_Nodeptr)
                                       16
     _Tree<_Tset_traits<int, less<int>, allocator<int>, false>>::_Insert(bool, _Tree<_Tset_traits<int, less<int>, allocator<int>, false>>::_Nodeptr, int)
                                       24
     _Tree<_Tset_traits<int, less<int>, allocator<int>, false>>::insert(int)
                                       40
     _Tree_algobase<allocator<void>>::_Clear()
                                        0
     _Tree_algobase<allocator<void>>::_DecP(_Tree_algobase<allocator<void>>::_Genptr)
                                        0
     _Tree_algobase<allocator<void>>::_IncP(_Tree_algobase<allocator<void>>::_Genptr)
                                        0
     _Tree_algobase<allocator<void>>::_Insert(bool, _Tree_algobase<allocator<void>>::_Genptr, _Tree_algobase<allocator<void>>::_Genptr)
                                       20
     _Tree_algobase<allocator<void>>::_Lrotate(_Tree_algobase<allocator<void>>::_Genptr)
                                        0
     _Tree_algobase<allocator<void>>::_Rrotate(_Tree_algobase<allocator<void>>::_Genptr)
                                        0
     __sti__routine()                   0
     operator+(string const &, char const *)
                                       44
     operator+(string const &, string const &)
                                       40
     set<PRogramObjectBase *>::set(set<PRogramObjectBase *> const &)
                                       16
     set<PRogramObjectBase *>::~set()
                                        8
     set<int>::set()                   12
     string::c_str() const              0
     string::string(string const &)    12


   Segment part sizes:

     Function/Label                 Bytes
     --------------                 -----
     string::string(string const &)   64
     string::c_str() const            24
     _Tree_algobase<allocator<void>>::_DecP(_Tree_algobase<allocator<void>>::_Genptr)
                                     100
     _Tree_algobase<allocator<void>>::_IncP(_Tree_algobase<allocator<void>>::_Genptr)
                                      92
     _Tree_algobase<allocator<void>>::_Clear()
                                      36
     _Tree_algobase<allocator<void>>::_Rrotate(_Tree_algobase<allocator<void>>::_Genptr)
                                      84
     _Tree_algobase<allocator<void>>::_Lrotate(_Tree_algobase<allocator<void>>::_Genptr)
                                      84
     _Tree_algobase<allocator<void>>::_Insert(bool, _Tree_algobase<allocator<void>>::_Genptr, _Tree_algobase<allocator<void>>::_Genptr)
                                     356
     _Tree<_Tset_traits<int, less<int>, allocator<int>, false>>::insert(int)
                                     200
     _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::_Copy(_Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>> const &)
                                     136
     _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::_Copy(_Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::_Nodeptr, _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::_Nodeptr)
                                     148
     _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::_Erase(_Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::_Nodeptr)
                                      68
     _Tree<_Tset_traits<int, less<int>, allocator<int>, false>>::_Erase(_Tree<_Tset_traits<int, less<int>, allocator<int>, false>>::_Nodeptr)
                                      68
     _Tree<_Tset_traits<int, less<int>, allocator<int>, false>>::_Insert(bool, _Tree<_Tset_traits<int, less<int>, allocator<int>, false>>::_Nodeptr, int)
                                      96
     set<PRogramObjectBase *>::~set()
                                      32
     set<PRogramObjectBase *>::set(set<PRogramObjectBase *> const &)
                                      48
     set<int>::set()                  48
     operator+(string const &, string const &)
                                      88
     operator+(string const &, char const *)
                                      92
     RestoreSettingsWarning(AnsiString)
                                      68
     ?Subroutine15                    12
     ?Subroutine14                     8
     TSNSaveSettings::TSNSaveSettings()
                                      92
     TSNSaveSettings::TSNSaveSettings(AnsiString)
                                      60
     TSNSaveSettings::~TSNSaveSettings()
                                      48
     TSNSaveSettings::WriteToFile()  100
     TSNSaveSettings::SaveSettings(TSNConfigString *)
                                     596
     TSNSaveSettings::LoadFromFile()
                                      80
     TSNSaveSettings::RestoreSettings(TSNConfigString *)
                                    1364
     TSNSaveSettings::IsNotRestoredPreviously(int)
                                      52
     TSNSaveSettings::FindObjectFromIDNumber(int)
                                      64
     ?<Constant "Settings.s2s">       16
     ?<Constant "Basic level:\nUnknown ...">
                                     104
     TSNSaveSettings::new TSNSaveSettings(AnsiString)
                                      36
     TSNSaveSettings::new TSNSaveSettings()
                                      28
     TSNSaveSettings::delete ~TSNSaveSettings(TSNSaveSettings *)
                                      24
     __sti__routine()                  4
     ??DataTable3                      4
     ??DataTable12                     4
     ??DataTable13                     4
     ??DataTable14                     4
     ??DataTable15                     4
     ??DataTable16                     4
     ??DataTable17                     4
     ??DataTable18                     4
     ??DataTable19                     4
     ??DataTable20                     4
      Others                         612

 
 5 148 bytes in segment CODE
   120 bytes in segment DATA_C
     4 bytes in segment DIFUNCT
 
 2 680 bytes of CODE  memory (+ 2 472 bytes shared)
   120 bytes of CONST memory

Errors: none
Warnings: none
