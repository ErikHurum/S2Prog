##############################################################################
#                                                                            #
# IAR ARM ANSI C/C++ Compiler V4.42A/W32               14/Sep/2022  15:17:02 #
# Copyright 1999-2005 IAR Systems. All rights reserved.                      #
#                                                                            #
#    Cpu mode        =  interwork                                            #
#    Endian          =  little                                               #
#    Stack alignment =  4                                                    #
#    Source file     =  D:\S2Prog\Shared\Src\PROWaterHeater.cpp              #
#    Command line    =  D:\S2Prog\Shared\Src\PROWaterHeater.cpp --fpu None   #
#                       -D OS_LIBMODE_SP -D CPU_S3C2410 -D OS_RAMVECT=0 -D   #
#                       OS_UART=-1 -D S2TXU -D USE_LZO=1 -D __ARM_LIBRARY__  #
#                       -D WATCHDOG=1 -D NETWORK=1 -lCN                      #
#                       D:\S2Prog\TXU\Debug\List\ -o                         #
#                       D:\S2Prog\TXU\Debug\Obj\ -z9 --debug --cpu_mode arm  #
#                       --endian little --cpu ARM920T --stack_align 4        #
#                       --interwork -e --enable_multibytes --eec++           #
#                       --dlib_config "C:\Program Files (x86)\IAR            #
#                       Systems\Embedded Workbench                           #
#                       4.0\arm\LIB\dl4tpainl8n.h" -I                        #
#                       D:\S2Prog\TXU\GUI\CORE\ -I D:\S2Prog\TXU\GUI\WM\ -I  #
#                       D:\S2Prog\TXU\GUI\WIDGET\ -I D:\S2Prog\TXU\CONFIG\   #
#                       -I D:\S2Prog\TXU\INC\ -I D:\S2Prog\TXU\..\SHARED\INC #
#                       \ -I D:\S2Prog\TXU\..\SHARED\SRC\ -I                 #
#                       D:\S2Prog\TXU\..\SHARED\LZO\minilzo.210\ -I          #
#                       D:\S2Prog\TXU\lwip-1.4.1\src\include\ -I             #
#                       D:\S2Prog\TXU\lwip-1.4.1\src\include\ipv4\ -I        #
#                       D:\S2Prog\TXU\lwip-1.4.1\src\ -I                     #
#                       D:\S2Prog\TXU\..\SHARED\Database\ -I                 #
#                       D:\S2Prog\TXU\src\ -I "C:\Program Files (x86)\IAR    #
#                       Systems\Embedded Workbench 4.0\arm\INC\"             #
#                       --inline_threshold=2                                 #
#    List file       =  D:\S2Prog\TXU\Debug\List\PROWaterHeater.lst          #
#    Object file     =  D:\S2Prog\TXU\Debug\Obj\PROWaterHeater.r79           #
#                                                                            #
#                                                                            #
##############################################################################

D:\S2Prog\Shared\Src\PROWaterHeater.cpp
      1          #include "TSNIncludes.h"

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs string::string(string const &)
   \                     ??string:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
   \   0000000C   0020A0E3           MOV      R2,#+0
   \   00000010   0010A0E3           MOV      R1,#+0
   \   00000014   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000018   1C009FE5           LDR      R0,??string_1    ;; ??npos
   \   0000001C   0020A0E3           MOV      R2,#+0
   \   00000020   003090E5           LDR      R3,[R0, #+0]
   \   00000024   0510A0E1           MOV      R1,R5
   \   00000028   0400A0E1           MOV      R0,R4
   \   0000002C   ........           _BLF     ??assign,??assign??rA
   \   00000030   0400A0E1           MOV      R0,R4
   \   00000034   3040BDE8           POP      {R4,R5,LR}
   \   00000038   1EFF2FE1           BX       LR               ;; return
   \                     ??string_1:
   \   0000003C   ........           DC32     ??npos

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs _Tree_algobase<allocator<void>>::_Genptr _Tree_algobase<allocator<void>>::_DecP(_Tree_algobase<allocator<void>>::_Genptr)
   \                     ??_DecP:
   \   00000000   0D10D0E5           LDRB     R1,[R0, #+13]
   \   00000004   000051E3           CMP      R1,#+0
   \   00000008   08009015           LDRNE    R0,[R0, #+8]
   \   0000000C   1EFF2F11           BXNE     LR
   \   00000010   001090E5           LDR      R1,[R0, #+0]
   \   00000014   0D20D1E5           LDRB     R2,[R1, #+13]
   \   00000018   000052E3           CMP      R2,#+0
   \   0000001C   0700001A           BNE      ??_DecP_1
   \   00000020   000000EA           B        ??_DecP_2
   \                     ??_DecP_3:
   \   00000024   0010A0E1           MOV      R1,R0
   \                     ??_DecP_2:
   \   00000028   080091E5           LDR      R0,[R1, #+8]
   \   0000002C   0D20D0E5           LDRB     R2,[R0, #+13]
   \   00000030   000052E3           CMP      R2,#+0
   \   00000034   FAFFFF0A           BEQ      ??_DecP_3
   \   00000038   0100A0E1           MOV      R0,R1
   \   0000003C   1EFF2FE1           BX       LR
   \                     ??_DecP_1:
   \   00000040   041090E5           LDR      R1,[R0, #+4]
   \   00000044   0D20D1E5           LDRB     R2,[R1, #+13]
   \   00000048   000052E3           CMP      R2,#+0
   \   0000004C   1EFF2F11           BXNE     LR
   \   00000050   002091E5           LDR      R2,[R1, #+0]
   \   00000054   020050E1           CMP      R0,R2
   \   00000058   0100A0E1           MOV      R0,R1
   \   0000005C   F7FFFF0A           BEQ      ??_DecP_1
   \   00000060   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs _Tree_algobase<allocator<void>>::_Genptr _Tree_algobase<allocator<void>>::_IncP(_Tree_algobase<allocator<void>>::_Genptr)
   \                     ??_IncP:
   \   00000000   0D10D0E5           LDRB     R1,[R0, #+13]
   \   00000004   000051E3           CMP      R1,#+0
   \   00000008   1EFF2F11           BXNE     LR
   \   0000000C   081090E5           LDR      R1,[R0, #+8]
   \   00000010   0D20D1E5           LDRB     R2,[R1, #+13]
   \   00000014   000052E3           CMP      R2,#+0
   \   00000018   0700001A           BNE      ??_IncP_1
   \   0000001C   000000EA           B        ??_IncP_2
   \                     ??_IncP_3:
   \   00000020   0010A0E1           MOV      R1,R0
   \                     ??_IncP_2:
   \   00000024   000091E5           LDR      R0,[R1, #+0]
   \   00000028   0D20D0E5           LDRB     R2,[R0, #+13]
   \   0000002C   000052E3           CMP      R2,#+0
   \   00000030   FAFFFF0A           BEQ      ??_IncP_3
   \   00000034   060000EA           B        ??_IncP_4
   \                     ??_IncP_5:
   \   00000038   0100A0E1           MOV      R0,R1
   \                     ??_IncP_1:
   \   0000003C   041090E5           LDR      R1,[R0, #+4]
   \   00000040   0D20D1E5           LDRB     R2,[R1, #+13]
   \   00000044   000052E3           CMP      R2,#+0
   \   00000048   08209105           LDREQ    R2,[R1, #+8]
   \   0000004C   02005001           CMPEQ    R0,R2
   \   00000050   F8FFFF0A           BEQ      ??_IncP_5
   \                     ??_IncP_4:
   \   00000054   0100A0E1           MOV      R0,R1
   \   00000058   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void _Tree_algobase<allocator<void>>::_Clear()
   \                     ??_Clear:
   \   00000000   040080E5           STR      R0,[R0, #+4]
   \   00000004   000080E5           STR      R0,[R0, #+0]
   \   00000008   080080E5           STR      R0,[R0, #+8]
   \   0000000C   0110A0E3           MOV      R1,#+1
   \   00000010   0D10C0E5           STRB     R1,[R0, #+13]
   \   00000014   0C10C0E5           STRB     R1,[R0, #+12]
   \   00000018   0010A0E3           MOV      R1,#+0
   \   0000001C   101080E5           STR      R1,[R0, #+16]
   \   00000020   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void _Tree_algobase<allocator<void>>::_Rrotate(_Tree_algobase<allocator<void>>::_Genptr)
   \                     ??_Rrotate:
   \   00000000   002091E5           LDR      R2,[R1, #+0]
   \   00000004   083092E5           LDR      R3,[R2, #+8]
   \   00000008   003081E5           STR      R3,[R1, #+0]
   \   0000000C   083092E5           LDR      R3,[R2, #+8]
   \   00000010   0DC0D3E5           LDRB     R12,[R3, #+13]
   \   00000014   00005CE3           CMP      R12,#+0
   \   00000018   04108305           STREQ    R1,[R3, #+4]
   \   0000001C   043091E5           LDR      R3,[R1, #+4]
   \   00000020   043082E5           STR      R3,[R2, #+4]
   \   00000024   043090E5           LDR      R3,[R0, #+4]
   \   00000028   030051E1           CMP      R1,R3
   \   0000002C   04208005           STREQ    R2,[R0, #+4]
   \   00000030   0400000A           BEQ      ??_Rrotate_1
   \   00000034   040091E5           LDR      R0,[R1, #+4]
   \   00000038   083090E5           LDR      R3,[R0, #+8]
   \   0000003C   030051E1           CMP      R1,R3
   \   00000040   08208005           STREQ    R2,[R0, #+8]
   \   00000044   00208015           STRNE    R2,[R0, #+0]
   \                     ??_Rrotate_1:
   \   00000048   081082E5           STR      R1,[R2, #+8]
   \   0000004C   042081E5           STR      R2,[R1, #+4]
   \   00000050   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void _Tree_algobase<allocator<void>>::_Lrotate(_Tree_algobase<allocator<void>>::_Genptr)
   \                     ??_Lrotate:
   \   00000000   082091E5           LDR      R2,[R1, #+8]
   \   00000004   003092E5           LDR      R3,[R2, #+0]
   \   00000008   083081E5           STR      R3,[R1, #+8]
   \   0000000C   003092E5           LDR      R3,[R2, #+0]
   \   00000010   0DC0D3E5           LDRB     R12,[R3, #+13]
   \   00000014   00005CE3           CMP      R12,#+0
   \   00000018   04108305           STREQ    R1,[R3, #+4]
   \   0000001C   043091E5           LDR      R3,[R1, #+4]
   \   00000020   043082E5           STR      R3,[R2, #+4]
   \   00000024   043090E5           LDR      R3,[R0, #+4]
   \   00000028   030051E1           CMP      R1,R3
   \   0000002C   04208005           STREQ    R2,[R0, #+4]
   \   00000030   0400000A           BEQ      ??_Lrotate_1
   \   00000034   040091E5           LDR      R0,[R1, #+4]
   \   00000038   003090E5           LDR      R3,[R0, #+0]
   \   0000003C   030051E1           CMP      R1,R3
   \   00000040   00208005           STREQ    R2,[R0, #+0]
   \   00000044   08208015           STRNE    R2,[R0, #+8]
   \                     ??_Lrotate_1:
   \   00000048   001082E5           STR      R1,[R2, #+0]
   \   0000004C   042081E5           STR      R2,[R1, #+4]
   \   00000050   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs _Tree_algobase<allocator<void>>::_Genptr _Tree_algobase<allocator<void>>::_Erase(_Tree_algobase<allocator<void>>::_Genptr)
   \                     ??_Erase:
   \   00000000   F0472DE9           PUSH     {R4-R10,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0160A0E1           MOV      R6,R1
   \   0000000C   0680A0E1           MOV      R8,R6
   \   00000010   0600A0E1           MOV      R0,R6
   \   00000014   ........           _BLF     ??_IncP,??_IncP??rA
   \   00000018   007098E5           LDR      R7,[R8, #+0]
   \   0000001C   0D10D7E5           LDRB     R1,[R7, #+13]
   \   00000020   000051E3           CMP      R1,#+0
   \   00000024   0400001A           BNE      ??_Erase_2
   \   00000028   081098E5           LDR      R1,[R8, #+8]
   \   0000002C   0D10D1E5           LDRB     R1,[R1, #+13]
   \   00000030   000051E3           CMP      R1,#+0
   \   00000034   0100001A           BNE      ??_Erase_3
   \   00000038   0080A0E1           MOV      R8,R0
   \                     ??_Erase_2:
   \   0000003C   087098E5           LDR      R7,[R8, #+8]
   \                     ??_Erase_3:
   \   00000040   060058E1           CMP      R8,R6
   \   00000044   2B00001A           BNE      ??_Erase_4
   \   00000048   0D00D7E5           LDRB     R0,[R7, #+13]
   \   0000004C   045096E5           LDR      R5,[R6, #+4]
   \   00000050   000050E3           CMP      R0,#+0
   \   00000054   04508705           STREQ    R5,[R7, #+4]
   \   00000058   040094E5           LDR      R0,[R4, #+4]
   \   0000005C   060050E1           CMP      R0,R6
   \   00000060   04708405           STREQ    R7,[R4, #+4]
   \   00000064   0300000A           BEQ      ??_Erase_5
   \   00000068   000095E5           LDR      R0,[R5, #+0]
   \   0000006C   060050E1           CMP      R0,R6
   \   00000070   00708505           STREQ    R7,[R5, #+0]
   \   00000074   08708515           STRNE    R7,[R5, #+8]
   \                     ??_Erase_5:
   \   00000078   000094E5           LDR      R0,[R4, #+0]
   \   0000007C   060050E1           CMP      R0,R6
   \   00000080   0B00001A           BNE      ??_Erase_6
   \   00000084   0D00D7E5           LDRB     R0,[R7, #+13]
   \   00000088   000050E3           CMP      R0,#+0
   \   0000008C   0500A011           MOVNE    R0,R5
   \   00000090   0600001A           BNE      ??_Erase_7
   \   00000094   0700A0E1           MOV      R0,R7
   \   00000098   000000EA           B        ??_Erase_8
   \                     ??_Erase_9:
   \   0000009C   0100A0E1           MOV      R0,R1
   \                     ??_Erase_8:
   \   000000A0   001090E5           LDR      R1,[R0, #+0]
   \   000000A4   0D20D1E5           LDRB     R2,[R1, #+13]
   \   000000A8   000052E3           CMP      R2,#+0
   \   000000AC   FAFFFF0A           BEQ      ??_Erase_9
   \                     ??_Erase_7:
   \   000000B0   000084E5           STR      R0,[R4, #+0]
   \                     ??_Erase_6:
   \   000000B4   080094E5           LDR      R0,[R4, #+8]
   \   000000B8   060050E1           CMP      R0,R6
   \   000000BC   2F00001A           BNE      ??_Erase_10
   \   000000C0   0D10D7E5           LDRB     R1,[R7, #+13]
   \   000000C4   080084E2           ADD      R0,R4,#+8
   \   000000C8   000051E3           CMP      R1,#+0
   \   000000CC   0510A011           MOVNE    R1,R5
   \   000000D0   0600001A           BNE      ??_Erase_11
   \   000000D4   0710A0E1           MOV      R1,R7
   \   000000D8   000000EA           B        ??_Erase_12
   \                     ??_Erase_13:
   \   000000DC   0210A0E1           MOV      R1,R2
   \                     ??_Erase_12:
   \   000000E0   082091E5           LDR      R2,[R1, #+8]
   \   000000E4   0D30D2E5           LDRB     R3,[R2, #+13]
   \   000000E8   000053E3           CMP      R3,#+0
   \   000000EC   FAFFFF0A           BEQ      ??_Erase_13
   \                     ??_Erase_11:
   \   000000F0   001080E5           STR      R1,[R0, #+0]
   \   000000F4   210000EA           B        ??_Erase_10
   \                     ??_Erase_4:
   \   000000F8   000096E5           LDR      R0,[R6, #+0]
   \   000000FC   048080E5           STR      R8,[R0, #+4]
   \   00000100   000096E5           LDR      R0,[R6, #+0]
   \   00000104   000088E5           STR      R0,[R8, #+0]
   \   00000108   080096E5           LDR      R0,[R6, #+8]
   \   0000010C   000058E1           CMP      R8,R0
   \   00000110   0850A001           MOVEQ    R5,R8
   \   00000114   0800000A           BEQ      ??_Erase_14
   \   00000118   0D00D7E5           LDRB     R0,[R7, #+13]
   \   0000011C   045098E5           LDR      R5,[R8, #+4]
   \   00000120   000050E3           CMP      R0,#+0
   \   00000124   04508705           STREQ    R5,[R7, #+4]
   \   00000128   007085E5           STR      R7,[R5, #+0]
   \   0000012C   080096E5           LDR      R0,[R6, #+8]
   \   00000130   080088E5           STR      R0,[R8, #+8]
   \   00000134   080096E5           LDR      R0,[R6, #+8]
   \   00000138   048080E5           STR      R8,[R0, #+4]
   \                     ??_Erase_14:
   \   0000013C   040094E5           LDR      R0,[R4, #+4]
   \   00000140   060050E1           CMP      R0,R6
   \   00000144   04808405           STREQ    R8,[R4, #+4]
   \   00000148   0400000A           BEQ      ??_Erase_15
   \   0000014C   040096E5           LDR      R0,[R6, #+4]
   \   00000150   001090E5           LDR      R1,[R0, #+0]
   \   00000154   060051E1           CMP      R1,R6
   \   00000158   00808005           STREQ    R8,[R0, #+0]
   \   0000015C   08808015           STRNE    R8,[R0, #+8]
   \                     ??_Erase_15:
   \   00000160   040096E5           LDR      R0,[R6, #+4]
   \   00000164   0C1088E2           ADD      R1,R8,#+12
   \   00000168   040088E5           STR      R0,[R8, #+4]
   \   0000016C   0020D1E5           LDRB     R2,[R1, #+0]
   \   00000170   0C0086E2           ADD      R0,R6,#+12
   \   00000174   0030D0E5           LDRB     R3,[R0, #+0]
   \   00000178   0030C1E5           STRB     R3,[R1, #+0]
   \   0000017C   0020C0E5           STRB     R2,[R0, #+0]
   \                     ??_Erase_10:
   \   00000180   0C00D6E5           LDRB     R0,[R6, #+12]
   \   00000184   010050E3           CMP      R0,#+1
   \   00000188   5E00001A           BNE      ??_Erase_16
   \   0000018C   0090A0E3           MOV      R9,#+0
   \   00000190   01A0A0E3           MOV      R10,#+1
   \   00000194   060000EA           B        ??_Erase_17
   \                     ??_Erase_18:
   \   00000198   080098E5           LDR      R0,[R8, #+8]
   \   0000019C   0C00D0E5           LDRB     R0,[R0, #+12]
   \   000001A0   010050E3           CMP      R0,#+1
   \   000001A4   1C00001A           BNE      ??_Erase_19
   \                     ??_Erase_20:
   \   000001A8   0C90C8E5           STRB     R9,[R8, #+12]
   \                     ??_Erase_21:
   \   000001AC   0570A0E1           MOV      R7,R5
   \   000001B0   045097E5           LDR      R5,[R7, #+4]
   \                     ??_Erase_17:
   \   000001B4   040094E5           LDR      R0,[R4, #+4]
   \   000001B8   000057E1           CMP      R7,R0
   \   000001BC   5000000A           BEQ      ??_Erase_22
   \   000001C0   0C00D7E5           LDRB     R0,[R7, #+12]
   \   000001C4   010050E3           CMP      R0,#+1
   \   000001C8   4D00001A           BNE      ??_Erase_22
   \   000001CC   008095E5           LDR      R8,[R5, #+0]
   \   000001D0   080057E1           CMP      R7,R8
   \   000001D4   2400001A           BNE      ??_Erase_23
   \   000001D8   088095E5           LDR      R8,[R5, #+8]
   \   000001DC   0C00D8E5           LDRB     R0,[R8, #+12]
   \   000001E0   000050E3           CMP      R0,#+0
   \   000001E4   0500001A           BNE      ??_Erase_24
   \   000001E8   0CA0C8E5           STRB     R10,[R8, #+12]
   \   000001EC   0C90C5E5           STRB     R9,[R5, #+12]
   \   000001F0   0510A0E1           MOV      R1,R5
   \   000001F4   0400A0E1           MOV      R0,R4
   \   000001F8   ........           _BLF     ??_Lrotate,??_Lrotate??rA
   \   000001FC   088095E5           LDR      R8,[R5, #+8]
   \                     ??_Erase_24:
   \   00000200   0D00D8E5           LDRB     R0,[R8, #+13]
   \   00000204   000050E3           CMP      R0,#+0
   \   00000208   E7FFFF1A           BNE      ??_Erase_21
   \   0000020C   000098E5           LDR      R0,[R8, #+0]
   \   00000210   0C00D0E5           LDRB     R0,[R0, #+12]
   \   00000214   010050E3           CMP      R0,#+1
   \   00000218   DEFFFF0A           BEQ      ??_Erase_18
   \                     ??_Erase_19:
   \   0000021C   080098E5           LDR      R0,[R8, #+8]
   \   00000220   0C00D0E5           LDRB     R0,[R0, #+12]
   \   00000224   010050E3           CMP      R0,#+1
   \   00000228   0600001A           BNE      ??_Erase_25
   \   0000022C   000098E5           LDR      R0,[R8, #+0]
   \   00000230   0810A0E1           MOV      R1,R8
   \   00000234   0CA0C0E5           STRB     R10,[R0, #+12]
   \   00000238   0C90C8E5           STRB     R9,[R8, #+12]
   \   0000023C   0400A0E1           MOV      R0,R4
   \   00000240   ........           _BLF     ??_Rrotate,??_Rrotate??rA
   \   00000244   088095E5           LDR      R8,[R5, #+8]
   \                     ??_Erase_25:
   \   00000248   0C00D5E5           LDRB     R0,[R5, #+12]
   \   0000024C   0510A0E1           MOV      R1,R5
   \   00000250   0C00C8E5           STRB     R0,[R8, #+12]
   \   00000254   0CA0C5E5           STRB     R10,[R5, #+12]
   \   00000258   080098E5           LDR      R0,[R8, #+8]
   \   0000025C   0CA0C0E5           STRB     R10,[R0, #+12]
   \   00000260   0400A0E1           MOV      R0,R4
   \   00000264   ........           _BLF     ??_Lrotate,??_Lrotate??rA
   \   00000268   250000EA           B        ??_Erase_22
   \                     ??_Erase_23:
   \   0000026C   0C00D8E5           LDRB     R0,[R8, #+12]
   \   00000270   000050E3           CMP      R0,#+0
   \   00000274   0500001A           BNE      ??_Erase_26
   \   00000278   0CA0C8E5           STRB     R10,[R8, #+12]
   \   0000027C   0C90C5E5           STRB     R9,[R5, #+12]
   \   00000280   0510A0E1           MOV      R1,R5
   \   00000284   0400A0E1           MOV      R0,R4
   \   00000288   ........           _BLF     ??_Rrotate,??_Rrotate??rA
   \   0000028C   008095E5           LDR      R8,[R5, #+0]
   \                     ??_Erase_26:
   \   00000290   0D00D8E5           LDRB     R0,[R8, #+13]
   \   00000294   000050E3           CMP      R0,#+0
   \   00000298   C3FFFF1A           BNE      ??_Erase_21
   \   0000029C   080098E5           LDR      R0,[R8, #+8]
   \   000002A0   0C00D0E5           LDRB     R0,[R0, #+12]
   \   000002A4   010050E3           CMP      R0,#+1
   \   000002A8   00009805           LDREQ    R0,[R8, #+0]
   \   000002AC   0C00D005           LDRBEQ   R0,[R0, #+12]
   \   000002B0   01005003           CMPEQ    R0,#+1
   \   000002B4   BBFFFF0A           BEQ      ??_Erase_20
   \   000002B8   000098E5           LDR      R0,[R8, #+0]
   \   000002BC   0C00D0E5           LDRB     R0,[R0, #+12]
   \   000002C0   010050E3           CMP      R0,#+1
   \   000002C4   0600001A           BNE      ??_Erase_27
   \   000002C8   080098E5           LDR      R0,[R8, #+8]
   \   000002CC   0810A0E1           MOV      R1,R8
   \   000002D0   0CA0C0E5           STRB     R10,[R0, #+12]
   \   000002D4   0C90C8E5           STRB     R9,[R8, #+12]
   \   000002D8   0400A0E1           MOV      R0,R4
   \   000002DC   ........           _BLF     ??_Lrotate,??_Lrotate??rA
   \   000002E0   008095E5           LDR      R8,[R5, #+0]
   \                     ??_Erase_27:
   \   000002E4   0C00D5E5           LDRB     R0,[R5, #+12]
   \   000002E8   0510A0E1           MOV      R1,R5
   \   000002EC   0C00C8E5           STRB     R0,[R8, #+12]
   \   000002F0   0CA0C5E5           STRB     R10,[R5, #+12]
   \   000002F4   000098E5           LDR      R0,[R8, #+0]
   \   000002F8   0CA0C0E5           STRB     R10,[R0, #+12]
   \   000002FC   0400A0E1           MOV      R0,R4
   \   00000300   ........           _BLF     ??_Rrotate,??_Rrotate??rA
   \                     ??_Erase_22:
   \   00000304   0CA0C7E5           STRB     R10,[R7, #+12]
   \                     ??_Erase_16:
   \   00000308   100094E5           LDR      R0,[R4, #+16]
   \   0000030C   000050E3           CMP      R0,#+0
   \   00000310   01004012           SUBNE    R0,R0,#+1
   \   00000314   10008415           STRNE    R0,[R4, #+16]
   \   00000318   0600A0E1           MOV      R0,R6
   \   0000031C   F047BDE8           POP      {R4-R10,LR}
   \   00000320   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void _Tree_algobase<allocator<void>>::_Insert(bool, _Tree_algobase<allocator<void>>::_Genptr, _Tree_algobase<allocator<void>>::_Genptr)
   \                     ??_Insert:
   \   00000000   F0402DE9           PUSH     {R4-R7,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   100094E5           LDR      R0,[R4, #+16]
   \   0000000C   0350A0E1           MOV      R5,R3
   \   00000010   010080E2           ADD      R0,R0,#+1
   \   00000014   100084E5           STR      R0,[R4, #+16]
   \   00000018   040052E1           CMP      R2,R4
   \   0000001C   0300001A           BNE      ??_Insert_5
   \   00000020   045084E5           STR      R5,[R4, #+4]
   \   00000024   005084E5           STR      R5,[R4, #+0]
   \                     ??_Insert_6:
   \   00000028   085084E5           STR      R5,[R4, #+8]
   \   0000002C   130000EA           B        ??_Insert_7
   \                     ??_Insert_5:
   \   00000030   000051E3           CMP      R1,#+0
   \   00000034   0500000A           BEQ      ??_Insert_8
   \   00000038   005082E5           STR      R5,[R2, #+0]
   \   0000003C   000094E5           LDR      R0,[R4, #+0]
   \   00000040   000052E1           CMP      R2,R0
   \   00000044   0D00001A           BNE      ??_Insert_7
   \   00000048   005084E5           STR      R5,[R4, #+0]
   \   0000004C   0B0000EA           B        ??_Insert_7
   \                     ??_Insert_8:
   \   00000050   085082E5           STR      R5,[R2, #+8]
   \   00000054   080094E5           LDR      R0,[R4, #+8]
   \   00000058   000052E1           CMP      R2,R0
   \   0000005C   0700001A           BNE      ??_Insert_7
   \   00000060   F0FFFFEA           B        ??_Insert_6
   \                     ??_Insert_9:
   \   00000064   0C70C0E5           STRB     R7,[R0, #+12]
   \   00000068   0C70C2E5           STRB     R7,[R2, #+12]
   \   0000006C   040095E5           LDR      R0,[R5, #+4]
   \   00000070   040090E5           LDR      R0,[R0, #+4]
   \   00000074   0C60C0E5           STRB     R6,[R0, #+12]
   \   00000078   040095E5           LDR      R0,[R5, #+4]
   \   0000007C   045090E5           LDR      R5,[R0, #+4]
   \                     ??_Insert_7:
   \   00000080   0170A0E3           MOV      R7,#+1
   \   00000084   040095E5           LDR      R0,[R5, #+4]
   \   00000088   0C10D0E5           LDRB     R1,[R0, #+12]
   \   0000008C   000051E3           CMP      R1,#+0
   \   00000090   2F00001A           BNE      ??_Insert_10
   \   00000094   041090E5           LDR      R1,[R0, #+4]
   \   00000098   0060A0E3           MOV      R6,#+0
   \   0000009C   001091E5           LDR      R1,[R1, #+0]
   \   000000A0   010050E1           CMP      R0,R1
   \   000000A4   041090E5           LDR      R1,[R0, #+4]
   \   000000A8   1400001A           BNE      ??_Insert_11
   \   000000AC   082091E5           LDR      R2,[R1, #+8]
   \   000000B0   0C10D2E5           LDRB     R1,[R2, #+12]
   \   000000B4   000051E3           CMP      R1,#+0
   \   000000B8   E9FFFF0A           BEQ      ??_Insert_9
   \   000000BC   081090E5           LDR      R1,[R0, #+8]
   \   000000C0   010055E1           CMP      R5,R1
   \   000000C4   0300001A           BNE      ??_Insert_12
   \   000000C8   0050A0E1           MOV      R5,R0
   \   000000CC   0510A0E1           MOV      R1,R5
   \   000000D0   0400A0E1           MOV      R0,R4
   \   000000D4   ........           _BLF     ??_Lrotate,??_Lrotate??rA
   \                     ??_Insert_12:
   \   000000D8   040095E5           LDR      R0,[R5, #+4]
   \   000000DC   0C70C0E5           STRB     R7,[R0, #+12]
   \   000000E0   040095E5           LDR      R0,[R5, #+4]
   \   000000E4   040090E5           LDR      R0,[R0, #+4]
   \   000000E8   0C60C0E5           STRB     R6,[R0, #+12]
   \   000000EC   040095E5           LDR      R0,[R5, #+4]
   \   000000F0   041090E5           LDR      R1,[R0, #+4]
   \   000000F4   0400A0E1           MOV      R0,R4
   \   000000F8   ........           _BLF     ??_Rrotate,??_Rrotate??rA
   \   000000FC   DFFFFFEA           B        ??_Insert_7
   \                     ??_Insert_11:
   \   00000100   002091E5           LDR      R2,[R1, #+0]
   \   00000104   0C10D2E5           LDRB     R1,[R2, #+12]
   \   00000108   000051E3           CMP      R1,#+0
   \   0000010C   D4FFFF0A           BEQ      ??_Insert_9
   \   00000110   001090E5           LDR      R1,[R0, #+0]
   \   00000114   010055E1           CMP      R5,R1
   \   00000118   0300001A           BNE      ??_Insert_13
   \   0000011C   0050A0E1           MOV      R5,R0
   \   00000120   0510A0E1           MOV      R1,R5
   \   00000124   0400A0E1           MOV      R0,R4
   \   00000128   ........           _BLF     ??_Rrotate,??_Rrotate??rA
   \                     ??_Insert_13:
   \   0000012C   040095E5           LDR      R0,[R5, #+4]
   \   00000130   0C70C0E5           STRB     R7,[R0, #+12]
   \   00000134   040095E5           LDR      R0,[R5, #+4]
   \   00000138   040090E5           LDR      R0,[R0, #+4]
   \   0000013C   0C60C0E5           STRB     R6,[R0, #+12]
   \   00000140   040095E5           LDR      R0,[R5, #+4]
   \   00000144   041090E5           LDR      R1,[R0, #+4]
   \   00000148   0400A0E1           MOV      R0,R4
   \   0000014C   ........           _BLF     ??_Lrotate,??_Lrotate??rA
   \   00000150   CAFFFFEA           B        ??_Insert_7
   \                     ??_Insert_10:
   \   00000154   040094E5           LDR      R0,[R4, #+4]
   \   00000158   0C70C0E5           STRB     R7,[R0, #+12]
   \   0000015C   F040BDE8           POP      {R4-R7,LR}
   \   00000160   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::_Pairib _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::insert(PRogramObjectBase *)
   \                     ??insert:
   \   00000000   F34C2DE9           PUSH     {R0,R1,R4-R7,R10,R11,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
   \   0000000C   040095E5           LDR      R0,[R5, #+4]
   \   00000010   0260A0E1           MOV      R6,R2
   \   00000014   05B0A0E1           MOV      R11,R5
   \   00000018   0170A0E3           MOV      R7,#+1
   \                     ??insert_1:
   \   0000001C   0D10D0E5           LDRB     R1,[R0, #+13]
   \   00000020   000051E3           CMP      R1,#+0
   \   00000024   0700001A           BNE      ??insert_2
   \   00000028   101090E5           LDR      R1,[R0, #+16]
   \   0000002C   00B0A0E1           MOV      R11,R0
   \   00000030   010056E1           CMP      R6,R1
   \   00000034   00009035           LDRCC    R0,[R0, #+0]
   \   00000038   0170A033           MOVCC    R7,#+1
   \   0000003C   08009025           LDRCS    R0,[R0, #+8]
   \   00000040   0070A023           MOVCS    R7,#+0
   \   00000044   F4FFFFEA           B        ??insert_1
   \                     ??insert_2:
   \   00000048   0B00A0E1           MOV      R0,R11
   \   0000004C   01A0A0E3           MOV      R10,#+1
   \   00000050   000057E3           CMP      R7,#+0
   \   00000054   0B00000A           BEQ      ??insert_3
   \   00000058   001095E5           LDR      R1,[R5, #+0]
   \   0000005C   010050E1           CMP      R0,R1
   \   00000060   0700001A           BNE      ??insert_4
   \   00000064   0630A0E1           MOV      R3,R6
   \   00000068   0B20A0E1           MOV      R2,R11
   \   0000006C   0110A0E3           MOV      R1,#+1
   \                     ??insert_5:
   \   00000070   0500A0E1           MOV      R0,R5
   \   00000074   ........           _BLF     ??_Insert_1,??_Insert??rA
   \   00000078   00008DE5           STR      R0,[SP, #+0]
   \   0000007C   04A0CDE5           STRB     R10,[SP, #+4]
   \   00000080   0A0000EA           B        ??insert_6
   \                     ??insert_4:
   \   00000084   ........           _BLF     ??_DecP,??_DecP??rA
   \                     ??insert_3:
   \   00000088   101090E5           LDR      R1,[R0, #+16]
   \   0000008C   060051E1           CMP      R1,R6
   \   00000090   0300002A           BCS      ??insert_7
   \   00000094   0630A0E1           MOV      R3,R6
   \   00000098   0B20A0E1           MOV      R2,R11
   \   0000009C   0710A0E1           MOV      R1,R7
   \   000000A0   F2FFFFEA           B        ??insert_5
   \                     ??insert_7:
   \   000000A4   00008DE5           STR      R0,[SP, #+0]
   \   000000A8   0010A0E3           MOV      R1,#+0
   \   000000AC   0410CDE5           STRB     R1,[SP, #+4]
   \                     ??insert_6:
   \   000000B0   0D00A0E1           MOV      R0,SP
   \   000000B4   030090E8           LDM      R0,{R0,R1}
   \   000000B8   030084E8           STM      R4,{R0,R1}
   \   000000BC   0400A0E1           MOV      R0,R4
   \   000000C0   F64CBDE8           POP      {R1,R2,R4-R7,R10,R11,LR}
   \   000000C4   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::iterator _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::erase(_Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::iterator, _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::iterator)
   \                     ??erase:
   \   00000000   F0402DE9           PUSH     {R4-R7,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   000094E5           LDR      R0,[R4, #+0]
   \   0000000C   0150A0E1           MOV      R5,R1
   \   00000010   0260A0E1           MOV      R6,R2
   \   00000014   000055E1           CMP      R5,R0
   \   00000018   04005601           CMPEQ    R6,R4
   \   0000001C   0D00001A           BNE      ??erase_2
   \   00000020   0400A0E1           MOV      R0,R4
   \   00000024   ........           _BLF     ??clear,??clear??rA
   \   00000028   000094E5           LDR      R0,[R4, #+0]
   \   0000002C   0C0000EA           B        ??erase_3
   \                     ??erase_4:
   \   00000030   0570A0E1           MOV      R7,R5
   \   00000034   0500A0E1           MOV      R0,R5
   \   00000038   ........           _BLF     ??_IncP,??_IncP??rA
   \   0000003C   0050A0E1           MOV      R5,R0
   \   00000040   0700A0E1           MOV      R0,R7
   \   00000044   ........           _BLF     ??_IncP,??_IncP??rA
   \   00000048   0710A0E1           MOV      R1,R7
   \   0000004C   0400A0E1           MOV      R0,R4
   \   00000050   ........           _BLF     ??_Erase,??_Erase??rA
   \   00000054   ........           _BLF     `??operator delete`,`??operator delete??rA`
   \                     ??erase_2:
   \   00000058   060055E1           CMP      R5,R6
   \   0000005C   F3FFFF1A           BNE      ??erase_4
   \   00000060   0500A0E1           MOV      R0,R5
   \                     ??erase_3:
   \   00000064   F040BDE8           POP      {R4-R7,LR}
   \   00000068   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs unsigned int _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::erase(PRogramObjectBase *)
   \                     ??erase_1:
   \   00000000   73402DE9           PUSH     {R0,R1,R4-R6,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0120A0E1           MOV      R2,R1
   \   0000000C   0410A0E1           MOV      R1,R4
   \   00000010   0D00A0E1           MOV      R0,SP
   \   00000014   ........           _BLF     ??equal_range,??equal_range??rA
   \   00000018   04509DE5           LDR      R5,[SP, #+4]
   \   0000001C   00009DE5           LDR      R0,[SP, #+0]
   \   00000020   0060A0E3           MOV      R6,#+0
   \   00000024   010000EA           B        ??erase_5
   \                     ??erase_6:
   \   00000028   016086E2           ADD      R6,R6,#+1
   \   0000002C   ........           _BLF     ??_IncP,??_IncP??rA
   \                     ??erase_5:
   \   00000030   050050E1           CMP      R0,R5
   \   00000034   FBFFFF1A           BNE      ??erase_6
   \   00000038   04209DE5           LDR      R2,[SP, #+4]
   \   0000003C   00109DE5           LDR      R1,[SP, #+0]
   \   00000040   0400A0E1           MOV      R0,R4
   \   00000044   ........           _BLF     ??erase,??erase??rA
   \   00000048   0600A0E1           MOV      R0,R6
   \   0000004C   7640BDE8           POP      {R1,R2,R4-R6,LR}
   \   00000050   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::clear()
   \                     ??clear:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   041094E5           LDR      R1,[R4, #+4]
   \   0000000C   ........           _BLF     ??_Erase_1,??_Erase??rA_1
   \   00000010   0400A0E1           MOV      R0,R4
   \   00000014   ........           _BLF     ??_Clear,??_Clear??rA
   \   00000018   1040BDE8           POP      {R4,LR}
   \   0000001C   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::_Pairii _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::equal_range(PRogramObjectBase *)
   \                     ??equal_range:
   \   00000000   F3402DE9           PUSH     {R0,R1,R4-R7,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
   \   0000000C   0260A0E1           MOV      R6,R2
   \   00000010   0610A0E1           MOV      R1,R6
   \   00000014   0500A0E1           MOV      R0,R5
   \   00000018   ........           _BLF     ??_Ubound,??_Ubound??rA
   \   0000001C   0070A0E1           MOV      R7,R0
   \   00000020   0610A0E1           MOV      R1,R6
   \   00000024   0500A0E1           MOV      R0,R5
   \   00000028   ........           _BLF     ??_Lbound,??_Lbound??rA
   \   0000002C   00008DE5           STR      R0,[SP, #+0]
   \   00000030   04708DE5           STR      R7,[SP, #+4]
   \   00000034   0D00A0E1           MOV      R0,SP
   \   00000038   030090E8           LDM      R0,{R0,R1}
   \   0000003C   030084E8           STM      R4,{R0,R1}
   \   00000040   0400A0E1           MOV      R0,R4
   \   00000044   F640BDE8           POP      {R1,R2,R4-R7,LR}
   \   00000048   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::_Erase(_Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::_Nodeptr)
   \                     ??_Erase_1:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
   \   0000000C   0560A0E1           MOV      R6,R5
   \   00000010   060000EA           B        ??_Erase_28
   \                     ??_Erase_29:
   \   00000014   081096E5           LDR      R1,[R6, #+8]
   \   00000018   0400A0E1           MOV      R0,R4
   \   0000001C   F7FFFFEB           BL       ??_Erase_1
   \   00000020   006096E5           LDR      R6,[R6, #+0]
   \   00000024   0500A0E1           MOV      R0,R5
   \   00000028   ........           _BLF     `??operator delete`,`??operator delete??rA`
   \   0000002C   0650A0E1           MOV      R5,R6
   \                     ??_Erase_28:
   \   00000030   0D00D6E5           LDRB     R0,[R6, #+13]
   \   00000034   000050E3           CMP      R0,#+0
   \   00000038   F5FFFF0A           BEQ      ??_Erase_29
   \   0000003C   7040BDE8           POP      {R4-R6,LR}
   \   00000040   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::iterator _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::_Insert(bool, _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::_Nodeptr, PRogramObjectBase *)
   \                     ??_Insert_1:
   \   00000000   F0412DE9           PUSH     {R4-R8,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
   \   0000000C   0260A0E1           MOV      R6,R2
   \   00000010   0370A0E1           MOV      R7,R3
   \   00000014   1400A0E3           MOV      R0,#+20
   \   00000018   ........           _BLF     `??operator new`,`??operator new??rA`
   \   0000001C   0080B0E1           MOVS     R8,R0
   \   00000020   0600000A           BEQ      ??_Insert_14
   \   00000024   004088E5           STR      R4,[R8, #+0]
   \   00000028   046088E5           STR      R6,[R8, #+4]
   \   0000002C   084088E5           STR      R4,[R8, #+8]
   \   00000030   0000A0E3           MOV      R0,#+0
   \   00000034   0C00C8E5           STRB     R0,[R8, #+12]
   \   00000038   0D00C8E5           STRB     R0,[R8, #+13]
   \   0000003C   107088E5           STR      R7,[R8, #+16]
   \                     ??_Insert_14:
   \   00000040   0830A0E1           MOV      R3,R8
   \   00000044   0620A0E1           MOV      R2,R6
   \   00000048   0510A0E1           MOV      R1,R5
   \   0000004C   0400A0E1           MOV      R0,R4
   \   00000050   ........           _BLF     ??_Insert,??_Insert??rA_1
   \   00000054   0800A0E1           MOV      R0,R8
   \   00000058   F041BDE8           POP      {R4-R8,LR}
   \   0000005C   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::_Nodeptr _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::_Lbound(PRogramObjectBase *) const
   \                     ??_Lbound:
   \   00000000   042090E5           LDR      R2,[R0, #+4]
   \                     ??_Lbound_1:
   \   00000004   0D30D2E5           LDRB     R3,[R2, #+13]
   \   00000008   000053E3           CMP      R3,#+0
   \   0000000C   1EFF2F11           BXNE     LR
   \   00000010   103092E5           LDR      R3,[R2, #+16]
   \   00000014   010053E1           CMP      R3,R1
   \   00000018   08209235           LDRCC    R2,[R2, #+8]
   \   0000001C   0200A021           MOVCS    R0,R2
   \   00000020   00209225           LDRCS    R2,[R2, #+0]
   \   00000024   F6FFFFEA           B        ??_Lbound_1

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::_Nodeptr _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::_Ubound(PRogramObjectBase *) const
   \                     ??_Ubound:
   \   00000000   042090E5           LDR      R2,[R0, #+4]
   \                     ??_Ubound_1:
   \   00000004   0D30D2E5           LDRB     R3,[R2, #+13]
   \   00000008   000053E3           CMP      R3,#+0
   \   0000000C   1EFF2F11           BXNE     LR
   \   00000010   103092E5           LDR      R3,[R2, #+16]
   \   00000014   030051E1           CMP      R1,R3
   \   00000018   08209225           LDRCS    R2,[R2, #+8]
   \   0000001C   0200A031           MOVCC    R0,R2
   \   00000020   00209235           LDRCC    R2,[R2, #+0]
   \   00000024   F6FFFFEA           B        ??_Ubound_1

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs set<PRogramObjectBase *>::~set()
   \                     `?~set`:
   \   00000000   00402DE9           PUSH     {LR}
   \   00000004   ........           _BLF     ??clear,??clear??rA
   \   00000008   0040BDE8           POP      {LR}
   \   0000000C   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void _Vector_value<allocator<void>>::_Zero()
   \                     ??_Zero:
   \   00000000   0010A0E3           MOV      R1,#+0
   \   00000004   001080E5           STR      R1,[R0, #+0]
   \   00000008   041080E5           STR      R1,[R0, #+4]
   \   0000000C   081080E5           STR      R1,[R0, #+8]
   \   00000010   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void _Vector_impl<PRogramObjectBase *, allocator<PRogramObjectBase *>>::_Tidy0()
   \                     ??_Tidy0:
   \   00000000   00402DE9           PUSH     {LR}
   \   00000004   001090E5           LDR      R1,[R0, #+0]
   \   00000008   000051E3           CMP      R1,#+0
   \   0000000C   0200000A           BEQ      ??_Tidy0_2
   \   00000010   041080E5           STR      R1,[R0, #+4]
   \   00000014   0100A0E1           MOV      R0,R1
   \   00000018   ........           _BLF     `??operator delete`,`??operator delete??rA`
   \                     ??_Tidy0_2:
   \   0000001C   0040BDE8           POP      {LR}
   \   00000020   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void _Vector_impl<PROWaterHeater *, allocator<PROWaterHeater *>>::_Tidy0()
   \                     ??_Tidy0_1:
   \   00000000   00402DE9           PUSH     {LR}
   \   00000004   001090E5           LDR      R1,[R0, #+0]
   \   00000008   000051E3           CMP      R1,#+0
   \   0000000C   0200000A           BEQ      ??_Tidy0_3
   \   00000010   041080E5           STR      R1,[R0, #+4]
   \   00000014   0100A0E1           MOV      R0,R1
   \   00000018   ........           _BLF     `??operator delete`,`??operator delete??rA`
   \                     ??_Tidy0_3:
   \   0000001C   0040BDE8           POP      {LR}
   \   00000020   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs PRogramObjectBase ** _Vector_impl<PRogramObjectBase *, allocator<PRogramObjectBase *>>::_Insert(PRogramObjectBase **, PRogramObjectBase * const &)
   \                     ??_Insert_2:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   005092E5           LDR      R5,[R2, #+0]
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   000094E5           LDR      R0,[R4, #+0]
   \   00000010   0120A0E3           MOV      R2,#+1
   \   00000014   000050E3           CMP      R0,#+0
   \   00000018   0060A003           MOVEQ    R6,#+0
   \   0000001C   00604110           SUBNE    R6,R1,R0
   \   00000020   0400A0E1           MOV      R0,R4
   \   00000024   ........           _BLF     ??_Make_room_2,??_Make_room??rA
   \   00000028   0110A0E3           MOV      R1,#+1
   \                     ??_Insert_15:
   \   0000002C   ........           STR      R5,[R0], #+4
   \   00000030   011051E2           SUBS     R1,R1,#+1
   \   00000034   FCFFFF1A           BNE      ??_Insert_15
   \   00000038   000094E5           LDR      R0,[R4, #+0]
   \   0000003C   000086E0           ADD      R0,R6,R0
   \   00000040   7040BDE8           POP      {R4-R6,LR}
   \   00000044   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs PROWaterHeater ** _Vector_impl<PROWaterHeater *, allocator<PROWaterHeater *>>::_Insert(PROWaterHeater **, PROWaterHeater * const &)
   \                     ??_Insert_3:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   005092E5           LDR      R5,[R2, #+0]
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   000094E5           LDR      R0,[R4, #+0]
   \   00000010   0120A0E3           MOV      R2,#+1
   \   00000014   000050E3           CMP      R0,#+0
   \   00000018   0060A003           MOVEQ    R6,#+0
   \   0000001C   00604110           SUBNE    R6,R1,R0
   \   00000020   0400A0E1           MOV      R0,R4
   \   00000024   ........           _BLF     ??_Make_room,??_Make_room??rA_1
   \   00000028   0110A0E3           MOV      R1,#+1
   \                     ??_Insert_16:
   \   0000002C   ........           STR      R5,[R0], #+4
   \   00000030   011051E2           SUBS     R1,R1,#+1
   \   00000034   FCFFFF1A           BNE      ??_Insert_16
   \   00000038   000094E5           LDR      R0,[R4, #+0]
   \   0000003C   000086E0           ADD      R0,R6,R0
   \   00000040   7040BDE8           POP      {R4-R6,LR}
   \   00000044   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs AnalogInput ** _Vector_impl<AnalogInput *, allocator<AnalogInput *>>::_Insert(AnalogInput **, AnalogInput * const &)
   \                     ??_Insert_4:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   005092E5           LDR      R5,[R2, #+0]
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   000094E5           LDR      R0,[R4, #+0]
   \   00000010   0120A0E3           MOV      R2,#+1
   \   00000014   000050E3           CMP      R0,#+0
   \   00000018   0060A003           MOVEQ    R6,#+0
   \   0000001C   00604110           SUBNE    R6,R1,R0
   \   00000020   0400A0E1           MOV      R0,R4
   \   00000024   ........           _BLF     ??_Make_room_1,??_Make_room??rA_2
   \   00000028   0110A0E3           MOV      R1,#+1
   \                     ??_Insert_17:
   \   0000002C   ........           STR      R5,[R0], #+4
   \   00000030   011051E2           SUBS     R1,R1,#+1
   \   00000034   FCFFFF1A           BNE      ??_Insert_17
   \   00000038   000094E5           LDR      R0,[R4, #+0]
   \   0000003C   000086E0           ADD      R0,R6,R0
   \   00000040   7040BDE8           POP      {R4-R6,LR}
   \   00000044   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs PROWaterHeater ** _Vector_impl<PROWaterHeater *, allocator<PROWaterHeater *>>::_Make_room(PROWaterHeater **, unsigned int)
   \                     ??_Make_room:
   \   00000000   F0472DE9           PUSH     {R4-R10,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   000094E5           LDR      R0,[R4, #+0]
   \   0000000C   0150A0E1           MOV      R5,R1
   \   00000010   081094E5           LDR      R1,[R4, #+8]
   \   00000014   0260A0E1           MOV      R6,R2
   \   00000018   001041E0           SUB      R1,R1,R0
   \   0000001C   2171A0E1           LSR      R7,R1,#+2
   \   00000020   041094E5           LDR      R1,[R4, #+4]
   \   00000024   000056E3           CMP      R6,#+0
   \   00000028   000041E0           SUB      R0,R1,R0
   \   0000002C   2001A0E1           LSR      R0,R0,#+2
   \   00000030   2900000A           BEQ      ??_Make_room_3
   \   00000034   C024E0E3           MVN      R2,#-1073741824
   \   00000038   002042E0           SUB      R2,R2,R0
   \   0000003C   060052E1           CMP      R2,R6
   \   00000040   2500003A           BCC      ??_Make_room_3
   \   00000044   008086E0           ADD      R8,R6,R0
   \   00000048   080057E1           CMP      R7,R8
   \   0000004C   1C00002A           BCS      ??_Make_room_4
   \   00000050   A700A0E1           LSR      R0,R7,#+1
   \   00000054   C014E0E3           MVN      R1,#-1073741824
   \   00000058   001041E0           SUB      R1,R1,R0
   \   0000005C   070051E1           CMP      R1,R7
   \   00000060   0070A033           MOVCC    R7,#+0
   \   00000064   07708020           ADDCS    R7,R0,R7
   \   00000068   080057E1           CMP      R7,R8
   \   0000006C   0870A031           MOVCC    R7,R8
   \   00000070   0701A0E1           LSL      R0,R7,#+2
   \   00000074   ........           _BLF     `??operator new`,`??operator new??rA`
   \   00000078   0090A0E1           MOV      R9,R0
   \   0000007C   000094E5           LDR      R0,[R4, #+0]
   \   00000080   0920A0E1           MOV      R2,R9
   \   00000084   0510A0E1           MOV      R1,R5
   \   00000088   ........           _BLF     _Copy_a4,??_Copy_a4??rA
   \   0000008C   041094E5           LDR      R1,[R4, #+4]
   \   00000090   00A0A0E1           MOV      R10,R0
   \   00000094   06218AE0           ADD      R2,R10,R6, LSL #+2
   \   00000098   0500A0E1           MOV      R0,R5
   \   0000009C   ........           _BLF     _Copy_a4,??_Copy_a4??rA
   \   000000A0   0400A0E1           MOV      R0,R4
   \   000000A4   ........           _BLF     ??_Tidy0_1,??_Tidy0??rA
   \   000000A8   070189E0           ADD      R0,R9,R7, LSL #+2
   \   000000AC   080084E5           STR      R0,[R4, #+8]
   \   000000B0   080189E0           ADD      R0,R9,R8, LSL #+2
   \   000000B4   040084E5           STR      R0,[R4, #+4]
   \   000000B8   009084E5           STR      R9,[R4, #+0]
   \   000000BC   0A50A0E1           MOV      R5,R10
   \   000000C0   050000EA           B        ??_Make_room_3
   \                     ??_Make_room_4:
   \   000000C4   062181E0           ADD      R2,R1,R6, LSL #+2
   \   000000C8   0500A0E1           MOV      R0,R5
   \   000000CC   ........           _BLF     _Copy_backward_a4,??_Copy_backward_a4??rA
   \   000000D0   040094E5           LDR      R0,[R4, #+4]
   \   000000D4   060180E0           ADD      R0,R0,R6, LSL #+2
   \   000000D8   040084E5           STR      R0,[R4, #+4]
   \                     ??_Make_room_3:
   \   000000DC   0500A0E1           MOV      R0,R5
   \   000000E0   F047BDE8           POP      {R4-R10,LR}
   \   000000E4   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs AnalogInput ** _Vector_impl<AnalogInput *, allocator<AnalogInput *>>::_Make_room(AnalogInput **, unsigned int)
   \                     ??_Make_room_1:
   \   00000000   F0472DE9           PUSH     {R4-R10,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   000094E5           LDR      R0,[R4, #+0]
   \   0000000C   0150A0E1           MOV      R5,R1
   \   00000010   081094E5           LDR      R1,[R4, #+8]
   \   00000014   0260A0E1           MOV      R6,R2
   \   00000018   001041E0           SUB      R1,R1,R0
   \   0000001C   2171A0E1           LSR      R7,R1,#+2
   \   00000020   041094E5           LDR      R1,[R4, #+4]
   \   00000024   000056E3           CMP      R6,#+0
   \   00000028   000041E0           SUB      R0,R1,R0
   \   0000002C   2001A0E1           LSR      R0,R0,#+2
   \   00000030   2C00000A           BEQ      ??_Make_room_5
   \   00000034   C024E0E3           MVN      R2,#-1073741824
   \   00000038   002042E0           SUB      R2,R2,R0
   \   0000003C   060052E1           CMP      R2,R6
   \   00000040   2800003A           BCC      ??_Make_room_5
   \   00000044   008086E0           ADD      R8,R6,R0
   \   00000048   080057E1           CMP      R7,R8
   \   0000004C   1F00002A           BCS      ??_Make_room_6
   \   00000050   A700A0E1           LSR      R0,R7,#+1
   \   00000054   C014E0E3           MVN      R1,#-1073741824
   \   00000058   001041E0           SUB      R1,R1,R0
   \   0000005C   070051E1           CMP      R1,R7
   \   00000060   0070A033           MOVCC    R7,#+0
   \   00000064   07708020           ADDCS    R7,R0,R7
   \   00000068   080057E1           CMP      R7,R8
   \   0000006C   0870A031           MOVCC    R7,R8
   \   00000070   0701A0E1           LSL      R0,R7,#+2
   \   00000074   ........           _BLF     `??operator new`,`??operator new??rA`
   \   00000078   0090A0E1           MOV      R9,R0
   \   0000007C   000094E5           LDR      R0,[R4, #+0]
   \   00000080   0920A0E1           MOV      R2,R9
   \   00000084   0510A0E1           MOV      R1,R5
   \   00000088   ........           _BLF     _Copy_a4,??_Copy_a4??rA
   \   0000008C   041094E5           LDR      R1,[R4, #+4]
   \   00000090   00A0A0E1           MOV      R10,R0
   \   00000094   06218AE0           ADD      R2,R10,R6, LSL #+2
   \   00000098   0500A0E1           MOV      R0,R5
   \   0000009C   ........           _BLF     _Copy_a4,??_Copy_a4??rA
   \   000000A0   000094E5           LDR      R0,[R4, #+0]
   \   000000A4   000050E3           CMP      R0,#+0
   \   000000A8   0100000A           BEQ      ??_Make_room_7
   \   000000AC   040084E5           STR      R0,[R4, #+4]
   \   000000B0   ........           _BLF     `??operator delete`,`??operator delete??rA`
   \                     ??_Make_room_7:
   \   000000B4   070189E0           ADD      R0,R9,R7, LSL #+2
   \   000000B8   080084E5           STR      R0,[R4, #+8]
   \   000000BC   080189E0           ADD      R0,R9,R8, LSL #+2
   \   000000C0   040084E5           STR      R0,[R4, #+4]
   \   000000C4   009084E5           STR      R9,[R4, #+0]
   \   000000C8   0A50A0E1           MOV      R5,R10
   \   000000CC   050000EA           B        ??_Make_room_5
   \                     ??_Make_room_6:
   \   000000D0   062181E0           ADD      R2,R1,R6, LSL #+2
   \   000000D4   0500A0E1           MOV      R0,R5
   \   000000D8   ........           _BLF     _Copy_backward_a4,??_Copy_backward_a4??rA
   \   000000DC   040094E5           LDR      R0,[R4, #+4]
   \   000000E0   060180E0           ADD      R0,R0,R6, LSL #+2
   \   000000E4   040084E5           STR      R0,[R4, #+4]
   \                     ??_Make_room_5:
   \   000000E8   0500A0E1           MOV      R0,R5
   \   000000EC   F047BDE8           POP      {R4-R10,LR}
   \   000000F0   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs PRogramObjectBase ** _Vector_impl<PRogramObjectBase *, allocator<PRogramObjectBase *>>::_Make_room(PRogramObjectBase **, unsigned int)
   \                     ??_Make_room_2:
   \   00000000   F0472DE9           PUSH     {R4-R10,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   000094E5           LDR      R0,[R4, #+0]
   \   0000000C   0150A0E1           MOV      R5,R1
   \   00000010   081094E5           LDR      R1,[R4, #+8]
   \   00000014   0260A0E1           MOV      R6,R2
   \   00000018   001041E0           SUB      R1,R1,R0
   \   0000001C   2171A0E1           LSR      R7,R1,#+2
   \   00000020   041094E5           LDR      R1,[R4, #+4]
   \   00000024   000056E3           CMP      R6,#+0
   \   00000028   000041E0           SUB      R0,R1,R0
   \   0000002C   2001A0E1           LSR      R0,R0,#+2
   \   00000030   2900000A           BEQ      ??_Make_room_8
   \   00000034   C024E0E3           MVN      R2,#-1073741824
   \   00000038   002042E0           SUB      R2,R2,R0
   \   0000003C   060052E1           CMP      R2,R6
   \   00000040   2500003A           BCC      ??_Make_room_8
   \   00000044   008086E0           ADD      R8,R6,R0
   \   00000048   080057E1           CMP      R7,R8
   \   0000004C   1C00002A           BCS      ??_Make_room_9
   \   00000050   A700A0E1           LSR      R0,R7,#+1
   \   00000054   C014E0E3           MVN      R1,#-1073741824
   \   00000058   001041E0           SUB      R1,R1,R0
   \   0000005C   070051E1           CMP      R1,R7
   \   00000060   0070A033           MOVCC    R7,#+0
   \   00000064   07708020           ADDCS    R7,R0,R7
   \   00000068   080057E1           CMP      R7,R8
   \   0000006C   0870A031           MOVCC    R7,R8
   \   00000070   0701A0E1           LSL      R0,R7,#+2
   \   00000074   ........           _BLF     `??operator new`,`??operator new??rA`
   \   00000078   0090A0E1           MOV      R9,R0
   \   0000007C   000094E5           LDR      R0,[R4, #+0]
   \   00000080   0920A0E1           MOV      R2,R9
   \   00000084   0510A0E1           MOV      R1,R5
   \   00000088   ........           _BLF     _Copy_a4,??_Copy_a4??rA
   \   0000008C   041094E5           LDR      R1,[R4, #+4]
   \   00000090   00A0A0E1           MOV      R10,R0
   \   00000094   06218AE0           ADD      R2,R10,R6, LSL #+2
   \   00000098   0500A0E1           MOV      R0,R5
   \   0000009C   ........           _BLF     _Copy_a4,??_Copy_a4??rA
   \   000000A0   0400A0E1           MOV      R0,R4
   \   000000A4   ........           _BLF     ??_Tidy0,??_Tidy0??rA_1
   \   000000A8   070189E0           ADD      R0,R9,R7, LSL #+2
   \   000000AC   080084E5           STR      R0,[R4, #+8]
   \   000000B0   080189E0           ADD      R0,R9,R8, LSL #+2
   \   000000B4   040084E5           STR      R0,[R4, #+4]
   \   000000B8   009084E5           STR      R9,[R4, #+0]
   \   000000BC   0A50A0E1           MOV      R5,R10
   \   000000C0   050000EA           B        ??_Make_room_8
   \                     ??_Make_room_9:
   \   000000C4   062181E0           ADD      R2,R1,R6, LSL #+2
   \   000000C8   0500A0E1           MOV      R0,R5
   \   000000CC   ........           _BLF     _Copy_backward_a4,??_Copy_backward_a4??rA
   \   000000D0   040094E5           LDR      R0,[R4, #+4]
   \   000000D4   060180E0           ADD      R0,R0,R6, LSL #+2
   \   000000D8   040084E5           STR      R0,[R4, #+4]
   \                     ??_Make_room_8:
   \   000000DC   0500A0E1           MOV      R0,R5
   \   000000E0   F047BDE8           POP      {R4-R10,LR}
   \   000000E4   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void _Vector_impl<PRogramObjectBase *, allocator<PRogramObjectBase *>>::_Push_back0(PRogramObjectBase *)
   \                     ??_Push_back0:
   \   00000000   02402DE9           PUSH     {R1,LR}
   \   00000004   041090E5           LDR      R1,[R0, #+4]
   \   00000008   082090E5           LDR      R2,[R0, #+8]
   \   0000000C   020051E1           CMP      R1,R2
   \   00000010   0800002A           BCS      ??_Push_back0_3
   \   00000014   00209DE5           LDR      R2,[SP, #+0]
   \   00000018   0130A0E3           MOV      R3,#+1
   \   0000001C   01C0A0E1           MOV      R12,R1
   \                     ??_Push_back0_4:
   \   00000020   ........           STR      R2,[R12], #+4
   \   00000024   013053E2           SUBS     R3,R3,#+1
   \   00000028   FCFFFF1A           BNE      ??_Push_back0_4
   \   0000002C   041081E2           ADD      R1,R1,#+4
   \   00000030   041080E5           STR      R1,[R0, #+4]
   \   00000034   010000EA           B        ??_Push_back0_5
   \                     ??_Push_back0_3:
   \   00000038   0D20A0E1           MOV      R2,SP
   \   0000003C   ........           _BLF     ??_Insert_2,??_Insert??rA_2
   \                     ??_Push_back0_5:
   \   00000040   0140BDE8           POP      {R0,LR}
   \   00000044   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void _Vector_impl<AnalogInput *, allocator<AnalogInput *>>::_Push_back0(AnalogInput *)
   \                     ??_Push_back0_1:
   \   00000000   02402DE9           PUSH     {R1,LR}
   \   00000004   041090E5           LDR      R1,[R0, #+4]
   \   00000008   082090E5           LDR      R2,[R0, #+8]
   \   0000000C   020051E1           CMP      R1,R2
   \   00000010   0800002A           BCS      ??_Push_back0_6
   \   00000014   00209DE5           LDR      R2,[SP, #+0]
   \   00000018   0130A0E3           MOV      R3,#+1
   \   0000001C   01C0A0E1           MOV      R12,R1
   \                     ??_Push_back0_7:
   \   00000020   ........           STR      R2,[R12], #+4
   \   00000024   013053E2           SUBS     R3,R3,#+1
   \   00000028   FCFFFF1A           BNE      ??_Push_back0_7
   \   0000002C   041081E2           ADD      R1,R1,#+4
   \   00000030   041080E5           STR      R1,[R0, #+4]
   \   00000034   010000EA           B        ??_Push_back0_8
   \                     ??_Push_back0_6:
   \   00000038   0D20A0E1           MOV      R2,SP
   \   0000003C   ........           _BLF     ??_Insert_4,??_Insert??rA_3
   \                     ??_Push_back0_8:
   \   00000040   0140BDE8           POP      {R0,LR}
   \   00000044   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void _Vector_impl<PROWaterHeater *, allocator<PROWaterHeater *>>::_Push_back0(PROWaterHeater *)
   \                     ??_Push_back0_2:
   \   00000000   02402DE9           PUSH     {R1,LR}
   \   00000004   041090E5           LDR      R1,[R0, #+4]
   \   00000008   082090E5           LDR      R2,[R0, #+8]
   \   0000000C   020051E1           CMP      R1,R2
   \   00000010   0800002A           BCS      ??_Push_back0_9
   \   00000014   00209DE5           LDR      R2,[SP, #+0]
   \   00000018   0130A0E3           MOV      R3,#+1
   \   0000001C   01C0A0E1           MOV      R12,R1
   \                     ??_Push_back0_10:
   \   00000020   ........           STR      R2,[R12], #+4
   \   00000024   013053E2           SUBS     R3,R3,#+1
   \   00000028   FCFFFF1A           BNE      ??_Push_back0_10
   \   0000002C   041081E2           ADD      R1,R1,#+4
   \   00000030   041080E5           STR      R1,[R0, #+4]
   \   00000034   010000EA           B        ??_Push_back0_11
   \                     ??_Push_back0_9:
   \   00000038   0D20A0E1           MOV      R2,SP
   \   0000003C   ........           _BLF     ??_Insert_3,??_Insert??rA_4
   \                     ??_Push_back0_11:
   \   00000040   0140BDE8           POP      {R0,LR}
   \   00000044   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs vector<PROWaterHeater *>::~vector()
   \                     `?~vector_1`:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   ........           _BLF     ??_Tidy0_1,??_Tidy0??rA
   \   0000000C   0400A0E1           MOV      R0,R4
   \   00000010   ........           _BLF     ??_Zero,??_Zero??rA
   \   00000014   1040BDE8           POP      {R4,LR}
   \   00000018   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs vector<PRogramObjectBase *>::~vector()
   \                     `?~vector`:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   ........           _BLF     ??_Tidy0,??_Tidy0??rA_1
   \   0000000C   0400A0E1           MOV      R0,R4
   \   00000010   ........           _BLF     ??_Zero,??_Zero??rA
   \   00000014   1040BDE8           POP      {R4,LR}
   \   00000018   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void operator+(string const &, string const &)
   \                     `??operator+`:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   1CD04DE2           SUB      SP,SP,#+28
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   0250A0E1           MOV      R5,R2
   \   00000010   0D00A0E1           MOV      R0,SP
   \   00000014   ........           _BLF     ??string,??string??rA
   \   00000018   34109FE5           LDR      R1,`??operator+_2`  ;; ??npos
   \   0000001C   0020A0E3           MOV      R2,#+0
   \   00000020   003091E5           LDR      R3,[R1, #+0]
   \   00000024   0510A0E1           MOV      R1,R5
   \   00000028   ........           _BLF     ??append,??append??rA
   \   0000002C   0010A0E1           MOV      R1,R0
   \   00000030   0400A0E1           MOV      R0,R4
   \   00000034   ........           _BLF     ??string,??string??rA
   \   00000038   0020A0E3           MOV      R2,#+0
   \   0000003C   0110A0E3           MOV      R1,#+1
   \   00000040   0D00A0E1           MOV      R0,SP
   \   00000044   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000048   1CD08DE2           ADD      SP,SP,#+28
   \   0000004C   3040BDE8           POP      {R4,R5,LR}
   \   00000050   1EFF2FE1           BX       LR               ;; return
   \                     `??operator+_2`:
   \   00000054   ........           DC32     ??npos

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void operator+(string const &, char const *)
   \                     `??operator+_1`:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   1CD04DE2           SUB      SP,SP,#+28
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   0250A0E1           MOV      R5,R2
   \   00000010   0D00A0E1           MOV      R0,SP
   \   00000014   ........           _BLF     ??string,??string??rA
   \   00000018   0060A0E1           MOV      R6,R0
   \   0000001C   0500A0E1           MOV      R0,R5
   \   00000020   ........           _BLF     strlen,??strlen??rA
   \   00000024   0020A0E1           MOV      R2,R0
   \   00000028   0510A0E1           MOV      R1,R5
   \   0000002C   0600A0E1           MOV      R0,R6
   \   00000030   ........           _BLF     ??append_1,??append??rA_1
   \   00000034   0010A0E1           MOV      R1,R0
   \   00000038   0400A0E1           MOV      R0,R4
   \   0000003C   ........           _BLF     ??string,??string??rA
   \   00000040   0020A0E3           MOV      R2,#+0
   \   00000044   0110A0E3           MOV      R1,#+1
   \   00000048   0D00A0E1           MOV      R0,SP
   \   0000004C   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000050   1CD08DE2           ADD      SP,SP,#+28
   \   00000054   7040BDE8           POP      {R4-R6,LR}
   \   00000058   1EFF2FE1           BX       LR               ;; return
      2          #pragma hdrstop
      3          #ifdef BORLAND
      4              #pragma package(smart_init)
      5          #endif
      6          

   \                                 In segment DATA_C, align 4, align-sorted
      7          vector<PRogramObjectBase *>PROWaterHeater::AllObjVector;
   \                     ?_0:
   \   00000000   ............       DC32 ?_1, ??AllObjVector, `?~vector`
   \              ............
   \   0000000C   ............       DC32 ?_3, ??ObjectSet, `?~set`
   \              ............
   \   00000018   ............       DC32 ?_5, ??ObjectVector, `?~vector_1`
   \              ............

   \                                 In segment DATA_Z, align 4, align-sorted
      8          set<PRogramObjectBase *>PROWaterHeater::ObjectSet;
   \                     ??ObjectSet:
   \   00000000                      DS8 24
   \                     ??AllObjVector:
   \   00000018                      DS8 12
      9          vector<PROWaterHeater *>PROWaterHeater::ObjectVector;
   \                     ??ObjectVector:
   \   00000024                      DS8 12
     10          
     11          //---------------------------------------------------------------------------
     12          
     13          

   \                                 In segment CODE, align 4, keep-with-next
     14          PROWaterHeater::PROWaterHeater(int idNumber, bool addToList)
   \                     ??PROWaterHeater:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
   \   0000000C   0260A0E1           MOV      R6,R2
     15              : PROXRefObject(true) {
   \   00000010   0110A0E3           MOV      R1,#+1
   \   00000014   ........           _BLF     ??PROXRefObject,??PROXRefObject??rA
   \   00000018   ........           LDR      R0,??DataTable2  ;; ??__vtbl
     16              Initiate(idNumber, addToList);
   \   0000001C   0620A0E1           MOV      R2,R6
   \   00000020   A40084E5           STR      R0,[R4, #+164]
   \   00000024   0510A0E1           MOV      R1,R5
   \   00000028   0400A0E1           MOV      R0,R4
   \   0000002C   ........           BL       ??Initiate
     17          }
   \   00000030   0400A0E1           MOV      R0,R4
   \   00000034   ........           B        ?Subroutine15

   \                                 In segment CODE, align 4, keep-with-next
   \                     ?Subroutine15:
   \   00000000   7040BDE8           POP      {R4-R6,LR}
   \   00000004   1EFF2FE1           BX       LR               ;; return
     18          //---------------------------------------------------------------------------
     19          
     20          

   \                                 In segment CODE, align 4, keep-with-next
     21          PROWaterHeater::~PROWaterHeater(void) {
   \                     `?~PROWaterHeater`:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
   \   0000000C   000054E3           CMP      R4,#+0
   \   00000010   1300000A           BEQ      `?~PROWaterHeater_1`
   \   00000014   ........           LDR      R0,??DataTable2  ;; ??__vtbl
     22              PROXRefObject::~PROXRefObject();
     23              ObjectSet.erase(this);
   \   00000018   ........           LDR      R6,??DataTable4  ;; ??ObjectSet
   \   0000001C   A40084E5           STR      R0,[R4, #+164]
   \   00000020   0210A0E3           MOV      R1,#+2
   \   00000024   0400A0E1           MOV      R0,R4
   \   00000028   ........           _BLF     `?~PROXRefObject`,`?~PROXRefObject??rA`
   \   0000002C   0410A0E1           MOV      R1,R4
   \   00000030   0600A0E1           MOV      R0,R6
   \   00000034   ........           _BLF     ??erase_1,??erase??rA_1
     24              EraseFromVector(AllObjVector, this);
   \   00000038   0420A0E1           MOV      R2,R4
   \   0000003C   181086E2           ADD      R1,R6,#+24
   \   00000040   0400A0E1           MOV      R0,R4
   \   00000044   ........           _BLF     ??EraseFromVector,??EraseFromVector??rA
     25          }
   \   00000048   0010A0E3           MOV      R1,#+0
   \   0000004C   0400A0E1           MOV      R0,R4
   \   00000050   ........           _BLF     `?~PROXRefObject`,`?~PROXRefObject??rA`
   \   00000054   010015E3           TST      R5,#0x1
   \   00000058   0100000A           BEQ      `?~PROWaterHeater_1`
   \   0000005C   0400A0E1           MOV      R0,R4
   \   00000060   ........           _BLF     `??operator delete`,`??operator delete??rA`
   \                     `?~PROWaterHeater_1`:
   \   00000064                      REQUIRE ?Subroutine15
   \   00000064                      ;; // Fall through to label ?Subroutine15
     26          //---------------------------------------------------------------------------
     27          
     28          

   \                                 In segment CODE, align 4, keep-with-next
     29          void PROWaterHeater::Initiate(int idNumber, bool addToList) {
   \                     ??Initiate:
   \   00000000   73402DE9           PUSH     {R0,R1,R4-R6,LR}
     30              if ( addToList ) {
   \   00000004   ........           LDR      R6,??DataTable4  ;; ??ObjectSet
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   0150A0E1           MOV      R5,R1
   \   00000010   000052E3           CMP      R2,#+0
   \   00000014   0800000A           BEQ      ??Initiate_1
     31                  ObjectSet.insert(this);
   \   00000018   0420A0E1           MOV      R2,R4
   \   0000001C   0610A0E1           MOV      R1,R6
   \   00000020   0D00A0E1           MOV      R0,SP
   \   00000024   ........           _BLF     ??insert,??insert??rA
     32                  AllObjVector.push_back(this);
   \   00000028   0410A0E1           MOV      R1,R4
   \   0000002C   180086E2           ADD      R0,R6,#+24
   \   00000030   ........           _BLF     ??_Push_back0,??_Push_back0??rA
     33                  AddToIOObjectList();
   \   00000034   0400A0E1           MOV      R0,R4
   \   00000038   ........           _BLF     ??AddToIOObjectList,??AddToIOObjectList??rA
     34              }
     35              ObjectVector.push_back(this);
   \                     ??Initiate_1:
   \   0000003C   0410A0E1           MOV      R1,R4
   \   00000040   240086E2           ADD      R0,R6,#+36
   \   00000044   ........           _BLF     ??_Push_back0_2,??_Push_back0??rA_1
     36          
     37              if ( idNumber == 0 ) {
   \   00000048   000055E3           CMP      R5,#+0
     38                  IDNumber = (C_PRO_WATER_HEATER << 16) + ObjectSet.size();
   \   0000004C   10009605           LDREQ    R0,[R6, #+16]
   \   00000050   4016A003           MOVEQ    R1,#+67108864
   \   00000054   76188103           ORREQ    R1,R1,#0x760000
   \   00000058   00508100           ADDEQ    R5,R1,R0
     39              } else {
     40                  IDNumber = idNumber;
   \   0000005C   9C5084E5           STR      R5,[R4, #+156]
     41              }
     42          
     43              Type = C_PRO_WATER_HEATER;
   \   00000060   7600A0E3           MOV      R0,#+118
   \   00000064   400E80E3           ORR      R0,R0,#0x400
   \   00000068   A00084E5           STR      R0,[R4, #+160]
     44              HasPressure             = false;
   \   0000006C   0000A0E3           MOV      R0,#+0
   \   00000070   0010A0E3           MOV      R1,#+0
   \   00000074   5C11C4E5           STRB     R1,[R4, #+348]
     45              HasInputTemperature     = false;
   \   00000078   7011C4E5           STRB     R1,[R4, #+368]
     46              HasOutputTemperature    = false;
   \   0000007C   7811C4E5           STRB     R1,[R4, #+376]
     47              ptrPipePressure         = NULL;
   \   00000080   880184E5           STR      R0,[R4, #+392]
     48              ptrInputTempSensor      = NULL;
   \   00000084   8C0184E5           STR      R0,[R4, #+396]
     49              ptrOutputTempSensor     = NULL;
   \   00000088   900184E5           STR      R0,[R4, #+400]
     50              ManualPressure          = 0.0;
   \   0000008C   640184E5           STR      R0,[R4, #+356]
     51              ManualInputTemp         = 0.0;
   \   00000090   680184E5           STR      R0,[R4, #+360]
     52              ManualOutputTemp        = 0.0;
   \   00000094   6C0184E5           STR      R0,[R4, #+364]
     53              MDO_Efficiency          = WATER_HEATER_DEFAULT_EFFICIENCY;
   \   00000098   4004A0E3           MOV      R0,#+1073741824
   \   0000009C   A80780E3           ORR      R0,R0,#0x2A00000
   \   000000A0   800184E5           STR      R0,[R4, #+384]
     54              MDO_kWh_per_ton         = MDO_KWH_PER_TON;
   \   000000A4   08009FE5           LDR      R0,??Initiate_2  ;; 0x4639c800
   \   000000A8   840184E5           STR      R0,[R4, #+388]
     55          }
   \   000000AC   7340BDE8           POP      {R0,R1,R4-R6,LR}
   \   000000B0   1EFF2FE1           BX       LR               ;; return
   \                     ??Initiate_2:
   \   000000B4   00C83946           DC32     0x4639c800
     56          //---------------------------------------------------------------------------
     57          
     58          

   \                                 In segment CODE, align 4, keep-with-next
     59          void PROWaterHeater::WriteConfigToFile(TSNConfigString &ConfigString) {
   \                     ??WriteConfigToFile:
   \   00000000   F04F2DE9           PUSH     {R4-R11,LR}
     60          
     61              AnsiString LocalString;
     62              AnsiString IntNumStr;
     63              IntNumStr.cat_sprintf("0x%0x", IDNumber);
     64              LocalString += KeyWord(C_PRO_WATER_HEATER) + CrLfStr;
   \   00000004   ........           LDR      R5,??DataTable5  ;; CrLfStr
   \   00000008   98D04DE2           SUB      SP,SP,#+152
   \   0000000C   40DE4DE2           SUB      SP,SP,#+1024
   \   00000010   0040A0E1           MOV      R4,R0
   \   00000014   0190A0E1           MOV      R9,R1
     65              LocalString += TabStr1 + KeyWord(C_PRO_ID_NUMBER) + IntNumStr + CrLfStr;
   \   00000018   ........           LDR      R7,??DataTable6  ;; TabStr1
   \   0000001C   0D00A0E1           MOV      R0,SP
   \   00000020   ........           _BLF     ??AnsiString,??AnsiString??rA
   \   00000024   460E8DE2           ADD      R0,SP,#+1120
   \   00000028   ........           _BLF     ??AnsiString,??AnsiString??rA
   \   0000002C   9C3094E5           LDR      R3,[R4, #+156]
   \   00000030   ........           LDR      R2,??DataTable7  ;; `?<Constant "0x%0x">`
   \   00000034   7C108DE2           ADD      R1,SP,#+124
   \   00000038   401E81E2           ADD      R1,R1,#+1024
   \   0000003C   460E8DE2           ADD      R0,SP,#+1120
   \   00000040   ........           _BLF     ??cat_sprintf,??cat_sprintf??rA
   \   00000044   0020A0E3           MOV      R2,#+0
   \   00000048   0110A0E3           MOV      R1,#+1
   \   0000004C   7C008DE2           ADD      R0,SP,#+124
   \   00000050   400E80E2           ADD      R0,R0,#+1024
   \   00000054   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000058   7610A0E3           MOV      R1,#+118
   \   0000005C   401E81E3           ORR      R1,R1,#0x400
   \   00000060   E0008DE2           ADD      R0,SP,#+224
   \   00000064   ........           _BLF     ??KeyWord,??KeyWord??rA
   \   00000068   0520A0E1           MOV      R2,R5
   \   0000006C   E0108DE2           ADD      R1,SP,#+224
   \   00000070   C4008DE2           ADD      R0,SP,#+196
   \   00000074   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000078   ........           LDR      R0,??DataTable8  ;; ??npos
   \   0000007C   0020A0E3           MOV      R2,#+0
   \   00000080   006090E5           LDR      R6,[R0, #+0]
   \   00000084   C4108DE2           ADD      R1,SP,#+196
   \   00000088   0630A0E1           MOV      R3,R6
   \   0000008C   0D00A0E1           MOV      R0,SP
   \   00000090   ........           _BLF     ??append,??append??rA
   \   00000094   0020A0E3           MOV      R2,#+0
   \   00000098   0110A0E3           MOV      R1,#+1
   \   0000009C   C4008DE2           ADD      R0,SP,#+196
   \   000000A0   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000000A4   0020A0E3           MOV      R2,#+0
   \   000000A8   0110A0E3           MOV      R1,#+1
   \   000000AC   E0008DE2           ADD      R0,SP,#+224
   \   000000B0   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000000B4   1B10A0E3           MOV      R1,#+27
   \   000000B8   501E81E3           ORR      R1,R1,#0x500
   \   000000BC   540F8DE2           ADD      R0,SP,#+336
   \   000000C0   ........           _BLF     ??KeyWord,??KeyWord??rA
   \   000000C4   542F8DE2           ADD      R2,SP,#+336
   \   000000C8   0710A0E1           MOV      R1,R7
   \   000000CC   4D0F8DE2           ADD      R0,SP,#+308
   \   000000D0   ........           _BLF     `??operator+`,`??operator+??rA`
   \   000000D4   462E8DE2           ADD      R2,SP,#+1120
   \   000000D8   4D1F8DE2           ADD      R1,SP,#+308
   \   000000DC   460F8DE2           ADD      R0,SP,#+280
   \   000000E0   ........           _BLF     `??operator+`,`??operator+??rA`
   \   000000E4   0520A0E1           MOV      R2,R5
   \   000000E8   461F8DE2           ADD      R1,SP,#+280
   \   000000EC   FC008DE2           ADD      R0,SP,#+252
   \   000000F0   ........           _BLF     `??operator+`,`??operator+??rA`
   \   000000F4   0630A0E1           MOV      R3,R6
   \   000000F8   0020A0E3           MOV      R2,#+0
   \   000000FC   FC108DE2           ADD      R1,SP,#+252
   \   00000100   0D00A0E1           MOV      R0,SP
   \   00000104   ........           _BLF     ??append,??append??rA
   \   00000108   0020A0E3           MOV      R2,#+0
   \   0000010C   0110A0E3           MOV      R1,#+1
   \   00000110   FC008DE2           ADD      R0,SP,#+252
   \   00000114   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000118   0020A0E3           MOV      R2,#+0
   \   0000011C   0110A0E3           MOV      R1,#+1
   \   00000120   460F8DE2           ADD      R0,SP,#+280
   \   00000124   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000128   0020A0E3           MOV      R2,#+0
   \   0000012C   0110A0E3           MOV      R1,#+1
   \   00000130   4D0F8DE2           ADD      R0,SP,#+308
   \   00000134   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000138   0020A0E3           MOV      R2,#+0
   \   0000013C   0110A0E3           MOV      R1,#+1
   \   00000140   540F8DE2           ADD      R0,SP,#+336
   \   00000144   ........           _BLF     ??_Tidy,??_Tidy??rA
     66              LocalString += MakeConfigString();   //common
   \   00000148   A43094E5           LDR      R3,[R4, #+164]
   \   0000014C   0020A0E3           MOV      R2,#+0
   \   00000150   0C3093E5           LDR      R3,[R3, #+12]
   \   00000154   5B1F8DE2           ADD      R1,SP,#+364
   \   00000158   0400A0E1           MOV      R0,R4
   \   0000015C   0FE0A0E1           MOV      LR,PC
   \   00000160   13FF2FE1           BX       R3
   \   00000164   0630A0E1           MOV      R3,R6
   \   00000168   0020A0E3           MOV      R2,#+0
   \   0000016C   5B1F8DE2           ADD      R1,SP,#+364
   \   00000170   0D00A0E1           MOV      R0,SP
   \   00000174   ........           _BLF     ??append,??append??rA
   \   00000178   0020A0E3           MOV      R2,#+0
   \   0000017C   0110A0E3           MOV      R1,#+1
   \   00000180   5B0F8DE2           ADD      R0,SP,#+364
   \   00000184   ........           _BLF     ??_Tidy,??_Tidy??rA
     67          
     68              LocalString += TabStr1 + KeyWord(C_PRO_WATER_HEATER_INPUT_TEMP      ) + TabStr1 + FloatToAnsiString(ManualInputTemp) + CrLfStr;
   \   00000188   681194E5           LDR      R1,[R4, #+360]
   \   0000018C   0330A0E3           MOV      R3,#+3
   \   00000190   0720A0E3           MOV      R2,#+7
   \   00000194   850F8DE2           ADD      R0,SP,#+532
   \   00000198   ........           _BLF     ??FloatToAnsiString,??FloatToAnsiString??rA
   \   0000019C   8E10A0E3           MOV      R1,#+142
   \   000001A0   AC1D81E3           ORR      R1,R1,#0x2B00
   \   000001A4   7E0F8DE2           ADD      R0,SP,#+504
   \   000001A8   ........           _BLF     ??KeyWord,??KeyWord??rA
   \   000001AC   7E2F8DE2           ADD      R2,SP,#+504
   \   000001B0   0710A0E1           MOV      R1,R7
   \   000001B4   770F8DE2           ADD      R0,SP,#+476
   \   000001B8   ........           _BLF     `??operator+`,`??operator+??rA`
   \   000001BC   0720A0E1           MOV      R2,R7
   \   000001C0   771F8DE2           ADD      R1,SP,#+476
   \   000001C4   700F8DE2           ADD      R0,SP,#+448
   \   000001C8   ........           _BLF     `??operator+`,`??operator+??rA`
   \   000001CC   852F8DE2           ADD      R2,SP,#+532
   \   000001D0   701F8DE2           ADD      R1,SP,#+448
   \   000001D4   690F8DE2           ADD      R0,SP,#+420
   \   000001D8   ........           _BLF     `??operator+`,`??operator+??rA`
   \   000001DC   0520A0E1           MOV      R2,R5
   \   000001E0   691F8DE2           ADD      R1,SP,#+420
   \   000001E4   620F8DE2           ADD      R0,SP,#+392
   \   000001E8   ........           _BLF     `??operator+`,`??operator+??rA`
   \   000001EC   0630A0E1           MOV      R3,R6
   \   000001F0   0020A0E3           MOV      R2,#+0
   \   000001F4   621F8DE2           ADD      R1,SP,#+392
   \   000001F8   0D00A0E1           MOV      R0,SP
   \   000001FC   ........           _BLF     ??append,??append??rA
   \   00000200   0020A0E3           MOV      R2,#+0
   \   00000204   0110A0E3           MOV      R1,#+1
   \   00000208   620F8DE2           ADD      R0,SP,#+392
   \   0000020C   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000210   0020A0E3           MOV      R2,#+0
   \   00000214   0110A0E3           MOV      R1,#+1
   \   00000218   690F8DE2           ADD      R0,SP,#+420
   \   0000021C   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000220   0020A0E3           MOV      R2,#+0
   \   00000224   0110A0E3           MOV      R1,#+1
   \   00000228   850F8DE2           ADD      R0,SP,#+532
   \   0000022C   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000230   0020A0E3           MOV      R2,#+0
   \   00000234   0110A0E3           MOV      R1,#+1
   \   00000238   700F8DE2           ADD      R0,SP,#+448
   \   0000023C   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000240   0020A0E3           MOV      R2,#+0
   \   00000244   0110A0E3           MOV      R1,#+1
   \   00000248   770F8DE2           ADD      R0,SP,#+476
   \   0000024C   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000250   0020A0E3           MOV      R2,#+0
   \   00000254   0110A0E3           MOV      R1,#+1
   \   00000258   7E0F8DE2           ADD      R0,SP,#+504
   \   0000025C   ........           _BLF     ??_Tidy,??_Tidy??rA
     69              LocalString += TabStr1 + KeyWord(C_PRO_WATER_HEATER_OUTPUT_TEMP     ) + FloatToAnsiString(ManualOutputTemp) + CrLfStr;
   \   00000260   6C1194E5           LDR      R1,[R4, #+364]
   \   00000264   0330A0E3           MOV      R3,#+3
   \   00000268   0720A0E3           MOV      R2,#+7
   \   0000026C   A80F8DE2           ADD      R0,SP,#+672
   \   00000270   ........           _BLF     ??FloatToAnsiString,??FloatToAnsiString??rA
   \   00000274   8F10A0E3           MOV      R1,#+143
   \   00000278   AC1D81E3           ORR      R1,R1,#0x2B00
   \   0000027C   A10F8DE2           ADD      R0,SP,#+644
   \   00000280   ........           _BLF     ??KeyWord,??KeyWord??rA
   \   00000284   A12F8DE2           ADD      R2,SP,#+644
   \   00000288   0710A0E1           MOV      R1,R7
   \   0000028C   9A0F8DE2           ADD      R0,SP,#+616
   \   00000290   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000294   A82F8DE2           ADD      R2,SP,#+672
   \   00000298   9A1F8DE2           ADD      R1,SP,#+616
   \   0000029C   930F8DE2           ADD      R0,SP,#+588
   \   000002A0   ........           _BLF     `??operator+`,`??operator+??rA`
   \   000002A4   0520A0E1           MOV      R2,R5
   \   000002A8   931F8DE2           ADD      R1,SP,#+588
   \   000002AC   8C0F8DE2           ADD      R0,SP,#+560
   \   000002B0   ........           _BLF     `??operator+`,`??operator+??rA`
   \   000002B4   0630A0E1           MOV      R3,R6
   \   000002B8   0020A0E3           MOV      R2,#+0
   \   000002BC   8C1F8DE2           ADD      R1,SP,#+560
   \   000002C0   0D00A0E1           MOV      R0,SP
   \   000002C4   ........           _BLF     ??append,??append??rA
   \   000002C8   0020A0E3           MOV      R2,#+0
   \   000002CC   0110A0E3           MOV      R1,#+1
   \   000002D0   8C0F8DE2           ADD      R0,SP,#+560
   \   000002D4   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000002D8   0020A0E3           MOV      R2,#+0
   \   000002DC   0110A0E3           MOV      R1,#+1
   \   000002E0   930F8DE2           ADD      R0,SP,#+588
   \   000002E4   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000002E8   0020A0E3           MOV      R2,#+0
   \   000002EC   0110A0E3           MOV      R1,#+1
   \   000002F0   A80F8DE2           ADD      R0,SP,#+672
   \   000002F4   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000002F8   0020A0E3           MOV      R2,#+0
   \   000002FC   0110A0E3           MOV      R1,#+1
   \   00000300   9A0F8DE2           ADD      R0,SP,#+616
   \   00000304   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000308   0020A0E3           MOV      R2,#+0
   \   0000030C   0110A0E3           MOV      R1,#+1
   \   00000310   A10F8DE2           ADD      R0,SP,#+644
   \   00000314   ........           _BLF     ??_Tidy,??_Tidy??rA
     70          
     71              if ( PROProjectInfo::PressLim_mBar ) {
   \   00000318   ........           LDR      R0,??DataTable12  ;; ??PressLim_mBar
   \   0000031C   9080A0E3           MOV      R8,#+144
   \   00000320   0000D0E5           LDRB     R0,[R0, #+0]
   \   00000324   AC8D88E3           ORR      R8,R8,#0x2B00
   \   00000328   0330A0E3           MOV      R3,#+3
   \   0000032C   000050E3           CMP      R0,#+0
   \   00000330   0720A0E3           MOV      R2,#+7
   \   00000334   3C00000A           BEQ      ??WriteConfigToFile_1
     72                  LocalString += TabStr1 + KeyWord(C_PRO_WATER_HEATER_PRESSURE    ) + TabStr1 + FloatToAnsiString(ManualPressure/ MH2O_TO_BAR) + CrLfStr;
   \   00000338   640194E5           LDR      R0,[R4, #+356]
   \   0000033C   03A0A0E1           MOV      R10,R3
   \   00000340   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   00000344   ........           LDR      R2,??DataTable13  ;; 0xffffffffda554b8c
   \   00000348   ........           LDR      R3,??DataTable14  ;; 0x3fb91ae2
   \   0000034C   07B0A0E3           MOV      R11,#+7
   \   00000350   ........           _BLF     __dDiv,??__dDiv??rA
   \   00000354   ........           _BLF     __doubleToFloat,??__doubleToFloat??rA
   \   00000358   0010A0E1           MOV      R1,R0
   \   0000035C   0A30A0E1           MOV      R3,R10
   \   00000360   0B20A0E1           MOV      R2,R11
   \   00000364   38008DE2           ADD      R0,SP,#+56
   \   00000368   ........           _BLF     ??FloatToAnsiString,??FloatToAnsiString??rA
   \   0000036C   0810A0E1           MOV      R1,R8
   \   00000370   54008DE2           ADD      R0,SP,#+84
   \   00000374   ........           _BLF     ??KeyWord,??KeyWord??rA
   \   00000378   54208DE2           ADD      R2,SP,#+84
   \   0000037C   0710A0E1           MOV      R1,R7
   \   00000380   70008DE2           ADD      R0,SP,#+112
   \   00000384   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000388   0720A0E1           MOV      R2,R7
   \   0000038C   70108DE2           ADD      R1,SP,#+112
   \   00000390   8C008DE2           ADD      R0,SP,#+140
   \   00000394   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000398   38208DE2           ADD      R2,SP,#+56
   \   0000039C   8C108DE2           ADD      R1,SP,#+140
   \   000003A0   A8008DE2           ADD      R0,SP,#+168
   \   000003A4   ........           _BLF     `??operator+`,`??operator+??rA`
   \   000003A8   0520A0E1           MOV      R2,R5
   \   000003AC   A8108DE2           ADD      R1,SP,#+168
   \   000003B0   1C008DE2           ADD      R0,SP,#+28
   \   000003B4   ........           _BLF     `??operator+`,`??operator+??rA`
   \   000003B8   0630A0E1           MOV      R3,R6
   \   000003BC   0020A0E3           MOV      R2,#+0
   \   000003C0   1C108DE2           ADD      R1,SP,#+28
   \   000003C4   0D00A0E1           MOV      R0,SP
   \   000003C8   ........           _BLF     ??append,??append??rA
   \   000003CC   0020A0E3           MOV      R2,#+0
   \   000003D0   0110A0E3           MOV      R1,#+1
   \   000003D4   1C008DE2           ADD      R0,SP,#+28
   \   000003D8   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000003DC   0020A0E3           MOV      R2,#+0
   \   000003E0   0110A0E3           MOV      R1,#+1
   \   000003E4   A8008DE2           ADD      R0,SP,#+168
   \   000003E8   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000003EC   0020A0E3           MOV      R2,#+0
   \   000003F0   0110A0E3           MOV      R1,#+1
   \   000003F4   38008DE2           ADD      R0,SP,#+56
   \   000003F8   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000003FC   0020A0E3           MOV      R2,#+0
   \   00000400   0110A0E3           MOV      R1,#+1
   \   00000404   8C008DE2           ADD      R0,SP,#+140
   \   00000408   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   0000040C   0020A0E3           MOV      R2,#+0
   \   00000410   0110A0E3           MOV      R1,#+1
   \   00000414   70008DE2           ADD      R0,SP,#+112
   \   00000418   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   0000041C   0020A0E3           MOV      R2,#+0
   \   00000420   0110A0E3           MOV      R1,#+1
   \   00000424   54008DE2           ADD      R0,SP,#+84
   \   00000428   310000EA           B        ??WriteConfigToFile_2
     73              }else{
     74                  LocalString += TabStr1 + KeyWord(C_PRO_WATER_HEATER_PRESSURE    ) + TabStr1 + FloatToAnsiString(ManualPressure) + CrLfStr;
   \                     ??WriteConfigToFile_1:
   \   0000042C   641194E5           LDR      R1,[R4, #+356]
   \   00000430   1C008DE2           ADD      R0,SP,#+28
   \   00000434   ........           _BLF     ??FloatToAnsiString,??FloatToAnsiString??rA
   \   00000438   0810A0E1           MOV      R1,R8
   \   0000043C   A8008DE2           ADD      R0,SP,#+168
   \   00000440   ........           _BLF     ??KeyWord,??KeyWord??rA
   \   00000444   A8208DE2           ADD      R2,SP,#+168
   \   00000448   0710A0E1           MOV      R1,R7
   \   0000044C   8C008DE2           ADD      R0,SP,#+140
   \   00000450   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000454   0720A0E1           MOV      R2,R7
   \   00000458   8C108DE2           ADD      R1,SP,#+140
   \   0000045C   70008DE2           ADD      R0,SP,#+112
   \   00000460   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000464   1C208DE2           ADD      R2,SP,#+28
   \   00000468   70108DE2           ADD      R1,SP,#+112
   \   0000046C   54008DE2           ADD      R0,SP,#+84
   \   00000470   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000474   0520A0E1           MOV      R2,R5
   \   00000478   54108DE2           ADD      R1,SP,#+84
   \   0000047C   38008DE2           ADD      R0,SP,#+56
   \   00000480   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000484   0630A0E1           MOV      R3,R6
   \   00000488   0020A0E3           MOV      R2,#+0
   \   0000048C   38108DE2           ADD      R1,SP,#+56
   \   00000490   0D00A0E1           MOV      R0,SP
   \   00000494   ........           _BLF     ??append,??append??rA
   \   00000498   0020A0E3           MOV      R2,#+0
   \   0000049C   0110A0E3           MOV      R1,#+1
   \   000004A0   38008DE2           ADD      R0,SP,#+56
   \   000004A4   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000004A8   0020A0E3           MOV      R2,#+0
   \   000004AC   0110A0E3           MOV      R1,#+1
   \   000004B0   54008DE2           ADD      R0,SP,#+84
   \   000004B4   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000004B8   0020A0E3           MOV      R2,#+0
   \   000004BC   0110A0E3           MOV      R1,#+1
   \   000004C0   1C008DE2           ADD      R0,SP,#+28
   \   000004C4   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000004C8   0020A0E3           MOV      R2,#+0
   \   000004CC   0110A0E3           MOV      R1,#+1
   \   000004D0   70008DE2           ADD      R0,SP,#+112
   \   000004D4   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000004D8   0020A0E3           MOV      R2,#+0
   \   000004DC   0110A0E3           MOV      R1,#+1
   \   000004E0   8C008DE2           ADD      R0,SP,#+140
   \   000004E4   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000004E8   0020A0E3           MOV      R2,#+0
   \   000004EC   0110A0E3           MOV      R1,#+1
   \   000004F0   A8008DE2           ADD      R0,SP,#+168
   \                     ??WriteConfigToFile_2:
   \   000004F4   ........           _BLF     ??_Tidy,??_Tidy??rA
     75              }
     76          
     77              LocalString += TabStr1 + KeyWord(C_PRO_WATER_HEATER_EFFICIENCY      ) + TabStr1 + FloatToAnsiString(MDO_Efficiency) + CrLfStr;
   \   000004F8   801194E5           LDR      R1,[R4, #+384]
   \   000004FC   0330A0E3           MOV      R3,#+3
   \   00000500   0720A0E3           MOV      R2,#+7
   \   00000504   D20F8DE2           ADD      R0,SP,#+840
   \   00000508   ........           _BLF     ??FloatToAnsiString,??FloatToAnsiString??rA
   \   0000050C   011088E3           ORR      R1,R8,#0x1
   \   00000510   CB0F8DE2           ADD      R0,SP,#+812
   \   00000514   ........           _BLF     ??KeyWord,??KeyWord??rA
   \   00000518   CB2F8DE2           ADD      R2,SP,#+812
   \   0000051C   0710A0E1           MOV      R1,R7
   \   00000520   C40F8DE2           ADD      R0,SP,#+784
   \   00000524   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000528   0720A0E1           MOV      R2,R7
   \   0000052C   C41F8DE2           ADD      R1,SP,#+784
   \   00000530   BD0F8DE2           ADD      R0,SP,#+756
   \   00000534   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000538   D22F8DE2           ADD      R2,SP,#+840
   \   0000053C   BD1F8DE2           ADD      R1,SP,#+756
   \   00000540   B60F8DE2           ADD      R0,SP,#+728
   \   00000544   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000548   0520A0E1           MOV      R2,R5
   \   0000054C   B61F8DE2           ADD      R1,SP,#+728
   \   00000550   AF0F8DE2           ADD      R0,SP,#+700
   \   00000554   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000558   0630A0E1           MOV      R3,R6
   \   0000055C   0020A0E3           MOV      R2,#+0
   \   00000560   AF1F8DE2           ADD      R1,SP,#+700
   \   00000564   0D00A0E1           MOV      R0,SP
   \   00000568   ........           _BLF     ??append,??append??rA
   \   0000056C   0020A0E3           MOV      R2,#+0
   \   00000570   0110A0E3           MOV      R1,#+1
   \   00000574   AF0F8DE2           ADD      R0,SP,#+700
   \   00000578   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   0000057C   0020A0E3           MOV      R2,#+0
   \   00000580   0110A0E3           MOV      R1,#+1
   \   00000584   B60F8DE2           ADD      R0,SP,#+728
   \   00000588   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   0000058C   0020A0E3           MOV      R2,#+0
   \   00000590   0110A0E3           MOV      R1,#+1
   \   00000594   D20F8DE2           ADD      R0,SP,#+840
   \   00000598   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   0000059C   0020A0E3           MOV      R2,#+0
   \   000005A0   0110A0E3           MOV      R1,#+1
   \   000005A4   BD0F8DE2           ADD      R0,SP,#+756
   \   000005A8   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000005AC   0020A0E3           MOV      R2,#+0
   \   000005B0   0110A0E3           MOV      R1,#+1
   \   000005B4   C40F8DE2           ADD      R0,SP,#+784
   \   000005B8   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000005BC   0020A0E3           MOV      R2,#+0
   \   000005C0   0110A0E3           MOV      R1,#+1
   \   000005C4   CB0F8DE2           ADD      R0,SP,#+812
   \   000005C8   ........           _BLF     ??_Tidy,??_Tidy??rA
     78              LocalString += TabStr1 + KeyWord(C_PRO_WATER_HEATER_FUEL_KWH_PER_TON) + TabStr1 + FloatToAnsiString(MDO_kWh_per_ton) + CrLfStr;
   \   000005CC   841194E5           LDR      R1,[R4, #+388]
   \   000005D0   0330A0E3           MOV      R3,#+3
   \   000005D4   0720A0E3           MOV      R2,#+7
   \   000005D8   FC0F8DE2           ADD      R0,SP,#+1008
   \   000005DC   ........           _BLF     ??FloatToAnsiString,??FloatToAnsiString??rA
   \   000005E0   021088E3           ORR      R1,R8,#0x2
   \   000005E4   F50F8DE2           ADD      R0,SP,#+980
   \   000005E8   ........           _BLF     ??KeyWord,??KeyWord??rA
   \   000005EC   F52F8DE2           ADD      R2,SP,#+980
   \   000005F0   0710A0E1           MOV      R1,R7
   \   000005F4   EE0F8DE2           ADD      R0,SP,#+952
   \   000005F8   ........           _BLF     `??operator+`,`??operator+??rA`
   \   000005FC   0720A0E1           MOV      R2,R7
   \   00000600   EE1F8DE2           ADD      R1,SP,#+952
   \   00000604   E70F8DE2           ADD      R0,SP,#+924
   \   00000608   ........           _BLF     `??operator+`,`??operator+??rA`
   \   0000060C   FC2F8DE2           ADD      R2,SP,#+1008
   \   00000610   E71F8DE2           ADD      R1,SP,#+924
   \   00000614   E00F8DE2           ADD      R0,SP,#+896
   \   00000618   ........           _BLF     `??operator+`,`??operator+??rA`
   \   0000061C   0520A0E1           MOV      R2,R5
   \   00000620   E01F8DE2           ADD      R1,SP,#+896
   \   00000624   D90F8DE2           ADD      R0,SP,#+868
   \   00000628   ........           _BLF     `??operator+`,`??operator+??rA`
   \   0000062C   0630A0E1           MOV      R3,R6
   \   00000630   0020A0E3           MOV      R2,#+0
   \   00000634   D91F8DE2           ADD      R1,SP,#+868
   \   00000638   0D00A0E1           MOV      R0,SP
   \   0000063C   ........           _BLF     ??append,??append??rA
   \   00000640   0020A0E3           MOV      R2,#+0
   \   00000644   0110A0E3           MOV      R1,#+1
   \   00000648   D90F8DE2           ADD      R0,SP,#+868
   \   0000064C   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000650   0020A0E3           MOV      R2,#+0
   \   00000654   0110A0E3           MOV      R1,#+1
   \   00000658   E00F8DE2           ADD      R0,SP,#+896
   \   0000065C   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000660   0020A0E3           MOV      R2,#+0
   \   00000664   0110A0E3           MOV      R1,#+1
   \   00000668   FC0F8DE2           ADD      R0,SP,#+1008
   \   0000066C   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000670   0020A0E3           MOV      R2,#+0
   \   00000674   0110A0E3           MOV      R1,#+1
   \   00000678   E70F8DE2           ADD      R0,SP,#+924
   \   0000067C   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000680   0020A0E3           MOV      R2,#+0
   \   00000684   0110A0E3           MOV      R1,#+1
   \   00000688   EE0F8DE2           ADD      R0,SP,#+952
   \   0000068C   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000690   0020A0E3           MOV      R2,#+0
   \   00000694   0110A0E3           MOV      R1,#+1
   \   00000698   F50F8DE2           ADD      R0,SP,#+980
   \   0000069C   ........           _BLF     ??_Tidy,??_Tidy??rA
     79          
     80              for ( unsigned i = 0; i < AllAnalogInList.size(); i++ ) {
   \   000006A0   0070A0E3           MOV      R7,#+0
   \   000006A4   4E8FA0E3           MOV      R8,#+312
   \   000006A8   120000EA           B        ??WriteConfigToFile_3
     81                  LocalString += AllAnalogInList[i]->MakeConfigString();          //common
   \                     ??WriteConfigToFile_4:
   \   000006AC   040098E7           LDR      R0,[R8, +R4]
   \   000006B0   0020A0E3           MOV      R2,#+0
   \   000006B4   073190E7           LDR      R3,[R0, +R7, LSL #+2]
   \   000006B8   1C108DE2           ADD      R1,SP,#+28
   \   000006BC   0300A0E1           MOV      R0,R3
   \   000006C0   A43093E5           LDR      R3,[R3, #+164]
     82              }
   \   000006C4   017087E2           ADD      R7,R7,#+1
   \   000006C8   0C3093E5           LDR      R3,[R3, #+12]
   \   000006CC   0FE0A0E1           MOV      LR,PC
   \   000006D0   13FF2FE1           BX       R3
   \   000006D4   0630A0E1           MOV      R3,R6
   \   000006D8   0020A0E3           MOV      R2,#+0
   \   000006DC   1C108DE2           ADD      R1,SP,#+28
   \   000006E0   0D00A0E1           MOV      R0,SP
   \   000006E4   ........           _BLF     ??append,??append??rA
   \   000006E8   0020A0E3           MOV      R2,#+0
   \   000006EC   0110A0E3           MOV      R1,#+1
   \   000006F0   1C008DE2           ADD      R0,SP,#+28
   \   000006F4   ........           _BLF     ??_Tidy,??_Tidy??rA
   \                     ??WriteConfigToFile_3:
   \   000006F8   040088E0           ADD      R0,R8,R4
   \   000006FC   041090E5           LDR      R1,[R0, #+4]
   \   00000700   000090E5           LDR      R0,[R0, #+0]
   \   00000704   000041E0           SUB      R0,R1,R0
   \   00000708   200157E1           CMP      R7,R0, LSR #+2
   \   0000070C   E6FFFF3A           BCC      ??WriteConfigToFile_4
     83              LocalString += CrLfStr;
   \   00000710   0630A0E1           MOV      R3,R6
   \   00000714   0020A0E3           MOV      R2,#+0
   \   00000718   0510A0E1           MOV      R1,R5
   \   0000071C   0D00A0E1           MOV      R0,SP
   \   00000720   ........           _BLF     ??append,??append??rA
     84              LocalString += KeyWord(C_PRO_END) + CrLfStr;
   \   00000724   FA1FA0E3           MOV      R1,#+1000
   \   00000728   28008DE2           ADD      R0,SP,#+40
   \   0000072C   400E80E2           ADD      R0,R0,#+1024
   \   00000730   ........           _BLF     ??KeyWord,??KeyWord??rA
   \   00000734   0520A0E1           MOV      R2,R5
   \   00000738   28108DE2           ADD      R1,SP,#+40
   \   0000073C   401E81E2           ADD      R1,R1,#+1024
   \   00000740   0C008DE2           ADD      R0,SP,#+12
   \   00000744   400E80E2           ADD      R0,R0,#+1024
   \   00000748   ........           _BLF     `??operator+`,`??operator+??rA`
   \   0000074C   0630A0E1           MOV      R3,R6
   \   00000750   0020A0E3           MOV      R2,#+0
   \   00000754   0C108DE2           ADD      R1,SP,#+12
   \   00000758   401E81E2           ADD      R1,R1,#+1024
   \   0000075C   0D00A0E1           MOV      R0,SP
   \   00000760   ........           _BLF     ??append,??append??rA
   \   00000764   0020A0E3           MOV      R2,#+0
   \   00000768   0110A0E3           MOV      R1,#+1
   \   0000076C   0C008DE2           ADD      R0,SP,#+12
   \   00000770   400E80E2           ADD      R0,R0,#+1024
   \   00000774   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000778   0020A0E3           MOV      R2,#+0
   \   0000077C   0110A0E3           MOV      R1,#+1
   \   00000780   28008DE2           ADD      R0,SP,#+40
   \   00000784   400E80E2           ADD      R0,R0,#+1024
   \   00000788   ........           _BLF     ??_Tidy,??_Tidy??rA
     85              LocalString += CrLfStr;
   \   0000078C   0630A0E1           MOV      R3,R6
   \   00000790   0020A0E3           MOV      R2,#+0
   \   00000794   0510A0E1           MOV      R1,R5
   \   00000798   0D00A0E1           MOV      R0,SP
   \   0000079C   ........           _BLF     ??append,??append??rA
     86              ConfigString.AddString(LocalString);
   \   000007A0   0D10A0E1           MOV      R1,SP
   \   000007A4   44008DE2           ADD      R0,SP,#+68
   \   000007A8   400E80E2           ADD      R0,R0,#+1024
   \   000007AC   ........           _BLF     ??string,??string??rA
   \   000007B0   44108DE2           ADD      R1,SP,#+68
   \   000007B4   401E81E2           ADD      R1,R1,#+1024
   \   000007B8   0900A0E1           MOV      R0,R9
   \   000007BC   ........           _BLF     ??AddString,??AddString??rA
   \   000007C0   0020A0E3           MOV      R2,#+0
   \   000007C4   0110A0E3           MOV      R1,#+1
   \   000007C8   44008DE2           ADD      R0,SP,#+68
   \   000007CC   400E80E2           ADD      R0,R0,#+1024
   \   000007D0   ........           _BLF     ??_Tidy,??_Tidy??rA
     87          }
   \   000007D4   0020A0E3           MOV      R2,#+0
   \   000007D8   0110A0E3           MOV      R1,#+1
   \   000007DC   460E8DE2           ADD      R0,SP,#+1120
   \   000007E0   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000007E4   0020A0E3           MOV      R2,#+0
   \   000007E8   0110A0E3           MOV      R1,#+1
   \   000007EC   0D00A0E1           MOV      R0,SP
   \   000007F0   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000007F4   98D08DE2           ADD      SP,SP,#+152
   \   000007F8   40DE8DE2           ADD      SP,SP,#+1024
   \   000007FC   ........           B        ?Subroutine16

   \                                 In segment CODE, align 4, keep-with-next
   \                     ?Subroutine16:
   \   00000000   F04FBDE8           POP      {R4-R11,LR}
   \   00000004   1EFF2FE1           BX       LR               ;; return
   \                     ??Subroutine16_0:
   \   00000008   ........           DC32     `?<Constant "Water Heater ">`
     88          //---------------------------------------------------------------------------
     89          
     90          

   \                                 In segment CODE, align 4, keep-with-next
     91          int PROWaterHeater::LoadConfigFromFile(TSNConfigString &ConfigString) {
   \                     ??LoadConfigFromFile:
   \   00000000   F04F2DE9           PUSH     {R4-R11,LR}
   \   00000004   42DF4DE2           SUB      SP,SP,#+264
   \   00000008   0150A0E1           MOV      R5,R1
     92              SetLineNumber(ConfigString.LineCount);
   \   0000000C   1C1095E5           LDR      R1,[R5, #+28]
   \   00000010   0040A0E1           MOV      R4,R0
   \   00000014   ........           _BLF     ??SetLineNumber,??SetLineNumber??rA
     93              //HighTempPtr           = new AlarmHighTemp( this);
     94              //LowTempPtr            = new AlarmLowTemp( this);
     95              //AlarmSet.insert(HighTempPtr);
     96              //AlarmSet.insert(LowTempPtr);
     97              //AddAlarms(CompleteAlarmInfoList);
     98              AnsiString warningStartText("Water Heater ");
   \   00000018   ........           LDR      R1,??Subroutine16_0  ;; `?<Constant "Water Heater ">`
   \   0000001C   74008DE2           ADD      R0,SP,#+116
   \   00000020   ........           _BLF     ??AnsiString_1,??AnsiString??rA_1
     99              bool NoError = true;
    100              int ErrorLine = 0;
   \   00000024   0010A0E3           MOV      R1,#+0
   \   00000028   00108DE5           STR      R1,[SP, #+0]
   \   0000002C   4B6FA0E3           MOV      R6,#+300
   \   00000030   4A9FA0E3           MOV      R9,#+296
    101              int Key;
    102          
    103              do {
    104                  AnsiString InputKeyWord = ConfigString.NextWord(ErrorLine);
   \                     ??LoadConfigFromFile_1:
   \   00000034   0030A0E3           MOV      R3,#+0
   \   00000038   0D20A0E1           MOV      R2,SP
   \   0000003C   58108DE2           ADD      R1,SP,#+88
   \   00000040   0500A0E1           MOV      R0,R5
   \   00000044   ........           _BLF     ??NextWord,??NextWord??rA
    105                  if ( ErrorLine ) {
   \   00000048   00009DE5           LDR      R0,[SP, #+0]
   \   0000004C   000050E3           CMP      R0,#+0
   \   00000050   1300000A           BEQ      ??LoadConfigFromFile_2
    106                      if ( ErrorLine != EOF ) {
   \   00000054   010070E3           CMN      R0,#+1
   \   00000058   AC01000A           BEQ      ??LoadConfigFromFile_3
    107                          GiveConfigWarning(warningStartText + Name, ErrorLine);
   \   0000005C   442084E2           ADD      R2,R4,#+68
   \   00000060   74108DE2           ADD      R1,SP,#+116
   \   00000064   04008DE2           ADD      R0,SP,#+4
   \   00000068   ........           _BLF     `??operator+`,`??operator+??rA`
   \   0000006C   04108DE2           ADD      R1,SP,#+4
   \   00000070   20008DE2           ADD      R0,SP,#+32
   \   00000074   ........           _BLF     ??AnsiString_2,??AnsiString??rA_2
   \   00000078   00109DE5           LDR      R1,[SP, #+0]
   \   0000007C   ........           _BLF     ??GiveConfigWarning,??GiveConfigWarning??rA
   \                     ??LoadConfigFromFile_4:
   \   00000080   0020A0E3           MOV      R2,#+0
   \   00000084   0110A0E3           MOV      R1,#+1
   \   00000088   20008DE2           ADD      R0,SP,#+32
   \   0000008C   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000090   0020A0E3           MOV      R2,#+0
   \   00000094   0110A0E3           MOV      R1,#+1
   \   00000098   04008DE2           ADD      R0,SP,#+4
   \                     ??LoadConfigFromFile_5:
   \   0000009C   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000000A0   9A0100EA           B        ??LoadConfigFromFile_3
    108                      }
    109                  } else {
    110                      Key = FindConfigKey(InputKeyWord);
   \                     ??LoadConfigFromFile_2:
   \   000000A4   58108DE2           ADD      R1,SP,#+88
   \   000000A8   90008DE2           ADD      R0,SP,#+144
   \   000000AC   ........           _BLF     ??string,??string??rA
   \   000000B0   90008DE2           ADD      R0,SP,#+144
   \   000000B4   ........           _BLF     ??FindConfigKey,??FindConfigKey??rA
   \   000000B8   0070A0E1           MOV      R7,R0
   \   000000BC   0020A0E3           MOV      R2,#+0
   \   000000C0   0110A0E3           MOV      R1,#+1
   \   000000C4   90008DE2           ADD      R0,SP,#+144
   \   000000C8   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000000CC   58AFA0E3           MOV      R10,#+352
   \   000000D0   0700A0E1           MOV      R0,R7
   \   000000D4   FA0F50E3           CMP      R0,#+1000
   \   000000D8   EA10A013           MOVNE    R1,#+234
   \   000000DC   C01F8113           ORRNE    R1,R1,#0x300
   \   000000E0   01005011           CMPNE    R0,R1
   \   000000E4   8901000A           BEQ      ??LoadConfigFromFile_3
   \   000000E8   011081E3           ORR      R1,R1,#0x1
   \   000000EC   010050E1           CMP      R0,R1
   \   000000F0   5500000A           BEQ      ??LoadConfigFromFile_6
   \   000000F4   FB0F50E3           CMP      R0,#+1004
   \   000000F8   8401000A           BEQ      ??LoadConfigFromFile_3
   \   000000FC   3E10A0E3           MOV      R1,#+62
   \   00000100   801E81E3           ORR      R1,R1,#0x800
   \   00000104   010050E1           CMP      R0,R1
   \   00000108   01108113           ORRNE    R1,R1,#0x1
   \   0000010C   01005011           CMPNE    R0,R1
   \   00000110   F000000A           BEQ      ??LoadConfigFromFile_7
   \   00000114   091081E2           ADD      R1,R1,#+9
   \   00000118   010050E1           CMP      R0,R1
   \   0000011C   01108113           ORRNE    R1,R1,#0x1
   \   00000120   01005011           CMPNE    R0,R1
   \   00000124   01108112           ADDNE    R1,R1,#+1
   \   00000128   01005011           CMPNE    R0,R1
   \   0000012C   01108113           ORRNE    R1,R1,#0x1
   \   00000130   01005011           CMPNE    R0,R1
   \   00000134   01108112           ADDNE    R1,R1,#+1
   \   00000138   01005011           CMPNE    R0,R1
   \   0000013C   01108113           ORRNE    R1,R1,#0x1
   \   00000140   01005011           CMPNE    R0,R1
   \   00000144   05108112           ADDNE    R1,R1,#+5
   \   00000148   01005011           CMPNE    R0,R1
   \   0000014C   1101000A           BEQ      ??LoadConfigFromFile_8
   \   00000150   011081E3           ORR      R1,R1,#0x1
   \   00000154   010050E1           CMP      R0,R1
   \   00000158   3D01000A           BEQ      ??LoadConfigFromFile_9
   \   0000015C   0B1081E2           ADD      R1,R1,#+11
   \   00000160   010050E1           CMP      R0,R1
   \   00000164   5100000A           BEQ      ??LoadConfigFromFile_10
   \   00000168   011081E3           ORR      R1,R1,#0x1
   \   0000016C   010050E1           CMP      R0,R1
   \   00000170   C900000A           BEQ      ??LoadConfigFromFile_11
   \   00000174   071081E2           ADD      R1,R1,#+7
   \   00000178   010050E1           CMP      R0,R1
   \   0000017C   CD00000A           BEQ      ??LoadConfigFromFile_12
   \   00000180   321081E2           ADD      R1,R1,#+50
   \   00000184   010050E1           CMP      R0,R1
   \   00000188   B910A013           MOVNE    R1,#+185
   \   0000018C   B01E8113           ORRNE    R1,R1,#0xB00
   \   00000190   01005011           CMPNE    R0,R1
   \   00000194   5D01000A           BEQ      ??LoadConfigFromFile_3
   \   00000198   3410A0E3           MOV      R1,#+52
   \   0000019C   841D81E3           ORR      R1,R1,#0x2100
   \   000001A0   010050E1           CMP      R0,R1
   \   000001A4   2C00000A           BEQ      ??LoadConfigFromFile_13
   \   000001A8   8E10A0E3           MOV      R1,#+142
   \   000001AC   AC1D81E3           ORR      R1,R1,#0x2B00
   \   000001B0   010050E1           CMP      R0,R1
   \   000001B4   4D00000A           BEQ      ??LoadConfigFromFile_14
   \   000001B8   011081E3           ORR      R1,R1,#0x1
   \   000001BC   010050E1           CMP      R0,R1
   \   000001C0   6C00000A           BEQ      ??LoadConfigFromFile_15
   \   000001C4   011081E2           ADD      R1,R1,#+1
   \   000001C8   010050E1           CMP      R0,R1
   \   000001CC   8400000A           BEQ      ??LoadConfigFromFile_16
   \   000001D0   011081E3           ORR      R1,R1,#0x1
   \   000001D4   010050E1           CMP      R0,R1
   \   000001D8   2600000A           BEQ      ??LoadConfigFromFile_17
   \   000001DC   011081E2           ADD      R1,R1,#+1
   \   000001E0   010050E1           CMP      R0,R1
   \   000001E4   2A00000A           BEQ      ??LoadConfigFromFile_18
    111                      switch ( Key ) {
    112                      default:
    113                          GiveConfigWarning(warningStartText + Name, InputKeyWord, ConfigString.LineCount);
   \   000001E8   58108DE2           ADD      R1,SP,#+88
   \   000001EC   B4008DE2           ADD      R0,SP,#+180
   \   000001F0   ........           _BLF     ??string,??string??rA
   \   000001F4   442084E2           ADD      R2,R4,#+68
   \   000001F8   74108DE2           ADD      R1,SP,#+116
   \   000001FC   EC008DE2           ADD      R0,SP,#+236
   \   00000200   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000204   EC108DE2           ADD      R1,SP,#+236
   \   00000208   D0008DE2           ADD      R0,SP,#+208
   \   0000020C   ........           _BLF     ??AnsiString_2,??AnsiString??rA_2
   \   00000210   1C2095E5           LDR      R2,[R5, #+28]
   \   00000214   B4108DE2           ADD      R1,SP,#+180
   \   00000218   ........           _BLF     ??GiveConfigWarning_1,??GiveConfigWarning??rA_1
   \   0000021C   0020A0E3           MOV      R2,#+0
   \   00000220   0110A0E3           MOV      R1,#+1
   \   00000224   B4008DE2           ADD      R0,SP,#+180
   \   00000228   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   0000022C   0020A0E3           MOV      R2,#+0
   \   00000230   0110A0E3           MOV      R1,#+1
   \   00000234   D0008DE2           ADD      R0,SP,#+208
   \   00000238   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   0000023C   0020A0E3           MOV      R2,#+0
   \   00000240   0110A0E3           MOV      R1,#+1
   \   00000244   EC008DE2           ADD      R0,SP,#+236
   \   00000248   93FFFFEA           B        ??LoadConfigFromFile_5
    114                          break;
    115                      case C_AI_END:      // If AI type not found can continue with this
    116                      case C_AL_END:
    117                      case C_PRO_END:
    118                      case C_PRO_END_COMMON:
    119                      case C_PRO_END_PRO:
    120                          break;
    121                      case C_PRO_START_PRO:
    122                          PRogramObject::LoadConfigString(ConfigString);
   \                     ??LoadConfigFromFile_6:
   \   0000024C   0510A0E1           MOV      R1,R5
   \   00000250   0400A0E1           MOV      R0,R4
   \   00000254   ........           _BLF     ??LoadConfigString_1,??LoadConfigString??rA
   \   00000258   2C0100EA           B        ??LoadConfigFromFile_3
    123                          break;
    124                      case C_XREF_START:
    125                          LoadConfigString(ConfigString);
   \                     ??LoadConfigFromFile_13:
   \   0000025C   A42094E5           LDR      R2,[R4, #+164]
   \   00000260   0510A0E1           MOV      R1,R5
   \   00000264   102092E5           LDR      R2,[R2, #+16]
   \   00000268   0400A0E1           MOV      R0,R4
   \   0000026C   0FE0A0E1           MOV      LR,PC
   \   00000270   12FF2FE1           BX       R2
   \   00000274   250100EA           B        ??LoadConfigFromFile_3
    126                          break;
    127                      case C_PRO_WATER_HEATER_EFFICIENCY:
    128                          MDO_Efficiency = (float)ConfigString.ReadDouble(ErrorLine);
   \                     ??LoadConfigFromFile_17:
   \   00000278   0020A0E3           MOV      R2,#+0
   \   0000027C   0D10A0E1           MOV      R1,SP
   \   00000280   0500A0E1           MOV      R0,R5
   \   00000284   ........           _BLF     ??ReadDouble,??ReadDouble??rA
   \   00000288   ........           _BLF     __doubleToFloat,??__doubleToFloat??rA
   \   0000028C   800184E5           STR      R0,[R4, #+384]
   \   00000290   1E0100EA           B        ??LoadConfigFromFile_3
    129                          break;
    130                      case C_PRO_WATER_HEATER_FUEL_KWH_PER_TON:
    131                          MDO_kWh_per_ton = (float)ConfigString.ReadDouble(ErrorLine);
   \                     ??LoadConfigFromFile_18:
   \   00000294   0020A0E3           MOV      R2,#+0
   \   00000298   0D10A0E1           MOV      R1,SP
   \   0000029C   0500A0E1           MOV      R0,R5
   \   000002A0   ........           _BLF     ??ReadDouble,??ReadDouble??rA
   \   000002A4   ........           _BLF     __doubleToFloat,??__doubleToFloat??rA
   \   000002A8   840184E5           STR      R0,[R4, #+388]
   \   000002AC   170100EA           B        ??LoadConfigFromFile_3
    132                          break;
    133                      case C_AI_Pt100:
    134                          {
    135                              AITempSensor_Pt100 *AnalogInPtr = new AITempSensor_Pt100();
   \                     ??LoadConfigFromFile_10:
   \   000002B0   630FA0E3           MOV      R0,#+396
   \   000002B4   ........           _BLF     `??operator new`,`??operator new??rA`
   \   000002B8   0080B0E1           MOVS     R8,R0
   \   000002BC   0100000A           BEQ      ??LoadConfigFromFile_19
   \   000002C0   0010A0E3           MOV      R1,#+0
   \   000002C4   ........           _BLF     ??AITempSensor_Pt100,??AITempSensor_Pt100??rA
    136                              AnalogInPtr->LoadConfigString(ConfigString);
   \                     ??LoadConfigFromFile_19:
   \   000002C8   A42098E5           LDR      R2,[R8, #+164]
   \   000002CC   0510A0E1           MOV      R1,R5
   \   000002D0   102092E5           LDR      R2,[R2, #+16]
   \   000002D4   0800A0E1           MOV      R0,R8
   \   000002D8   0FE0A0E1           MOV      LR,PC
   \   000002DC   12FF2FE1           BX       R2
    137                              AnalogInList.push_back((AnalogInput *)AnalogInPtr);
   \                     ??LoadConfigFromFile_20:
   \   000002E0   0810A0E1           MOV      R1,R8
   \   000002E4   040086E0           ADD      R0,R6,R4
   \   000002E8   ........           _BLF     ??_Push_back0_1,??_Push_back0??rA_2
   \   000002EC   070100EA           B        ??LoadConfigFromFile_3
    138                          }
    139                          break;
    140                      case C_PRO_WATER_HEATER_INPUT_TEMP:
    141                          ManualInputTemp = ConfigString.ReadDouble(ErrorLine);
   \                     ??LoadConfigFromFile_14:
   \   000002F0   0020A0E3           MOV      R2,#+0
   \   000002F4   0D10A0E1           MOV      R1,SP
   \   000002F8   0500A0E1           MOV      R0,R5
   \   000002FC   ........           _BLF     ??ReadDouble,??ReadDouble??rA
   \   00000300   ........           _BLF     __doubleToFloat,??__doubleToFloat??rA
   \   00000304   680184E5           STR      R0,[R4, #+360]
    142                          if ( ErrorLine ) {
   \   00000308   00009DE5           LDR      R0,[SP, #+0]
   \   0000030C   000050E3           CMP      R0,#+0
   \   00000310   FE00000A           BEQ      ??LoadConfigFromFile_3
    143                              GiveConfigWarning(warningStartText + Name, InputKeyWord, ConfigString.LineCount);
   \   00000314   58108DE2           ADD      R1,SP,#+88
   \   00000318   3C008DE2           ADD      R0,SP,#+60
   \   0000031C   ........           _BLF     ??string,??string??rA
   \   00000320   442084E2           ADD      R2,R4,#+68
   \   00000324   74108DE2           ADD      R1,SP,#+116
   \   00000328   20008DE2           ADD      R0,SP,#+32
   \   0000032C   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000330   20108DE2           ADD      R1,SP,#+32
   \   00000334   04008DE2           ADD      R0,SP,#+4
   \   00000338   ........           _BLF     ??AnsiString_2,??AnsiString??rA_2
   \   0000033C   1C2095E5           LDR      R2,[R5, #+28]
   \   00000340   3C108DE2           ADD      R1,SP,#+60
   \   00000344   ........           _BLF     ??GiveConfigWarning_1,??GiveConfigWarning??rA_1
   \   00000348   0020A0E3           MOV      R2,#+0
   \   0000034C   0110A0E3           MOV      R1,#+1
   \   00000350   3C008DE2           ADD      R0,SP,#+60
   \   00000354   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000358   0020A0E3           MOV      R2,#+0
   \   0000035C   0110A0E3           MOV      R1,#+1
   \   00000360   04008DE2           ADD      R0,SP,#+4
   \   00000364   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000368   0020A0E3           MOV      R2,#+0
   \   0000036C   0110A0E3           MOV      R1,#+1
   \   00000370   20008DE2           ADD      R0,SP,#+32
   \   00000374   48FFFFEA           B        ??LoadConfigFromFile_5
    144                          }
    145                          break;
    146                      case C_PRO_WATER_HEATER_OUTPUT_TEMP:
    147                          ManualOutputTemp = ConfigString.ReadDouble(ErrorLine);
   \                     ??LoadConfigFromFile_15:
   \   00000378   0020A0E3           MOV      R2,#+0
   \   0000037C   0D10A0E1           MOV      R1,SP
   \   00000380   0500A0E1           MOV      R0,R5
   \   00000384   ........           _BLF     ??ReadDouble,??ReadDouble??rA
   \   00000388   ........           _BLF     __doubleToFloat,??__doubleToFloat??rA
   \   0000038C   6C0184E5           STR      R0,[R4, #+364]
    148                          if ( ErrorLine ) {
   \   00000390   00009DE5           LDR      R0,[SP, #+0]
   \   00000394   000050E3           CMP      R0,#+0
   \   00000398   DC00000A           BEQ      ??LoadConfigFromFile_3
    149                              GiveConfigWarning(warningStartText + Name, InputKeyWord, ConfigString.LineCount);
   \   0000039C   58108DE2           ADD      R1,SP,#+88
   \   000003A0   3C008DE2           ADD      R0,SP,#+60
   \   000003A4   ........           _BLF     ??string,??string??rA
   \   000003A8   442084E2           ADD      R2,R4,#+68
   \   000003AC   74108DE2           ADD      R1,SP,#+116
   \   000003B0   04008DE2           ADD      R0,SP,#+4
   \   000003B4   ........           _BLF     `??operator+`,`??operator+??rA`
   \   000003B8   04108DE2           ADD      R1,SP,#+4
   \   000003BC   20008DE2           ADD      R0,SP,#+32
   \   000003C0   ........           _BLF     ??AnsiString_2,??AnsiString??rA_2
   \   000003C4   1C2095E5           LDR      R2,[R5, #+28]
   \   000003C8   3C108DE2           ADD      R1,SP,#+60
   \   000003CC   ........           _BLF     ??GiveConfigWarning_1,??GiveConfigWarning??rA_1
   \   000003D0   0020A0E3           MOV      R2,#+0
   \   000003D4   0110A0E3           MOV      R1,#+1
   \   000003D8   3C008DE2           ADD      R0,SP,#+60
   \   000003DC   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000003E0   26FFFFEA           B        ??LoadConfigFromFile_4
    150                          }
    151                          break;
    152                      case C_PRO_WATER_HEATER_PRESSURE:
    153                          ManualPressure = ConfigString.ReadDouble(ErrorLine);
   \                     ??LoadConfigFromFile_16:
   \   000003E4   0020A0E3           MOV      R2,#+0
   \   000003E8   0D10A0E1           MOV      R1,SP
   \   000003EC   0500A0E1           MOV      R0,R5
   \   000003F0   ........           _BLF     ??ReadDouble,??ReadDouble??rA
   \   000003F4   ........           _BLF     __doubleToFloat,??__doubleToFloat??rA
   \   000003F8   640184E5           STR      R0,[R4, #+356]
    154                          if ( ErrorLine ) {
   \   000003FC   00009DE5           LDR      R0,[SP, #+0]
   \   00000400   000050E3           CMP      R0,#+0
   \   00000404   1800000A           BEQ      ??LoadConfigFromFile_21
    155                              GiveConfigWarning(warningStartText + Name, InputKeyWord, ConfigString.LineCount);
   \   00000408   58108DE2           ADD      R1,SP,#+88
   \   0000040C   20008DE2           ADD      R0,SP,#+32
   \   00000410   ........           _BLF     ??string,??string??rA
   \   00000414   442084E2           ADD      R2,R4,#+68
   \   00000418   74108DE2           ADD      R1,SP,#+116
   \   0000041C   3C008DE2           ADD      R0,SP,#+60
   \   00000420   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000424   3C108DE2           ADD      R1,SP,#+60
   \   00000428   04008DE2           ADD      R0,SP,#+4
   \   0000042C   ........           _BLF     ??AnsiString_2,??AnsiString??rA_2
   \   00000430   1C2095E5           LDR      R2,[R5, #+28]
   \   00000434   20108DE2           ADD      R1,SP,#+32
   \   00000438   ........           _BLF     ??GiveConfigWarning_1,??GiveConfigWarning??rA_1
   \   0000043C   0020A0E3           MOV      R2,#+0
   \   00000440   0110A0E3           MOV      R1,#+1
   \   00000444   20008DE2           ADD      R0,SP,#+32
   \   00000448   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   0000044C   0020A0E3           MOV      R2,#+0
   \   00000450   0110A0E3           MOV      R1,#+1
   \   00000454   04008DE2           ADD      R0,SP,#+4
   \   00000458   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   0000045C   0020A0E3           MOV      R2,#+0
   \   00000460   0110A0E3           MOV      R1,#+1
   \   00000464   3C008DE2           ADD      R0,SP,#+60
   \   00000468   0BFFFFEA           B        ??LoadConfigFromFile_5
    156                          } else if ( PROProjectInfo::PressLim_mBar ) {
   \                     ??LoadConfigFromFile_21:
   \   0000046C   ........           LDR      R0,??DataTable12  ;; ??PressLim_mBar
   \   00000470   0000D0E5           LDRB     R0,[R0, #+0]
   \   00000474   000050E3           CMP      R0,#+0
   \   00000478   A400000A           BEQ      ??LoadConfigFromFile_3
    157                              ManualPressure /= MH2O_TO_BAR;
   \   0000047C   640194E5           LDR      R0,[R4, #+356]
   \   00000480   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   00000484   ........           LDR      R2,??DataTable13  ;; 0xffffffffda554b8c
   \   00000488   ........           LDR      R3,??DataTable14  ;; 0x3fb91ae2
   \   0000048C   ........           _BLF     __dDiv,??__dDiv??rA
   \   00000490   ........           _BLF     __doubleToFloat,??__doubleToFloat??rA
   \   00000494   640184E5           STR      R0,[R4, #+356]
   \   00000498   9C0000EA           B        ??LoadConfigFromFile_3
    158                          }
    159                          break;
    160                      case C_AI_Pt1000:
    161                          {
    162                              AITempSensor_Pt1000 *AnalogInPtr = new AITempSensor_Pt1000();
   \                     ??LoadConfigFromFile_11:
   \   0000049C   640FA0E3           MOV      R0,#+400
   \   000004A0   ........           _BLF     `??operator new`,`??operator new??rA`
   \   000004A4   0080B0E1           MOVS     R8,R0
   \   000004A8   86FFFF0A           BEQ      ??LoadConfigFromFile_19
   \   000004AC   0010A0E3           MOV      R1,#+0
   \   000004B0   ........           _BLF     ??AITempSensor_Pt1000,??AITempSensor_Pt1000??rA
    163                              AnalogInPtr->LoadConfigString(ConfigString);
   \   000004B4   83FFFFEA           B        ??LoadConfigFromFile_19
    164                              AnalogInList.push_back((AnalogInput *)AnalogInPtr);
    165                          }
    166                          break;
    167                      case C_AI_TEMP_mA:
    168                          {
    169                              AITempSensor_mA *AnalogInPtr = new AITempSensor_mA(Key);
   \                     ??LoadConfigFromFile_12:
   \   000004B8   ........           _BLF     `??new AITempSensor_mA`,`??new AITempSensor_mA??rA`
   \   000004BC   0080A0E1           MOV      R8,R0
    170                              AnalogInPtr->LoadConfigString(ConfigString);
   \   000004C0   A42098E5           LDR      R2,[R8, #+164]
   \   000004C4   0510A0E1           MOV      R1,R5
   \   000004C8   102092E5           LDR      R2,[R2, #+16]
   \   000004CC   0FE0A0E1           MOV      LR,PC
   \   000004D0   12FF2FE1           BX       R2
    171                              AnalogInList.push_back((AnalogInput *)AnalogInPtr);
   \   000004D4   81FFFFEA           B        ??LoadConfigFromFile_20
    172                          }
    173                          break;
    174                      case C_AI_P906_0110:
    175                      case C_AI_P906_0111:
    176                          if ( ptrPipePressure != NULL ) {
   \                     ??LoadConfigFromFile_7:
   \   000004D8   880194E5           LDR      R0,[R4, #+392]
   \   000004DC   000050E3           CMP      R0,#+0
   \   000004E0   1100000A           BEQ      ??LoadConfigFromFile_22
    177                              GiveConfigWarning(warningStartText + Name, InputKeyWord, ConfigString.LineCount);
   \   000004E4   58108DE2           ADD      R1,SP,#+88
   \   000004E8   3C008DE2           ADD      R0,SP,#+60
   \   000004EC   ........           _BLF     ??string,??string??rA
   \   000004F0   442084E2           ADD      R2,R4,#+68
   \   000004F4   74108DE2           ADD      R1,SP,#+116
   \   000004F8   04008DE2           ADD      R0,SP,#+4
   \   000004FC   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000500   04108DE2           ADD      R1,SP,#+4
   \   00000504   20008DE2           ADD      R0,SP,#+32
   \   00000508   ........           _BLF     ??AnsiString_2,??AnsiString??rA_2
   \   0000050C   1C2095E5           LDR      R2,[R5, #+28]
   \   00000510   3C108DE2           ADD      R1,SP,#+60
   \   00000514   ........           _BLF     ??GiveConfigWarning_1,??GiveConfigWarning??rA_1
   \   00000518   0020A0E3           MOV      R2,#+0
   \   0000051C   0110A0E3           MOV      R1,#+1
   \   00000520   3C008DE2           ADD      R0,SP,#+60
   \   00000524   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000528   D4FEFFEA           B        ??LoadConfigFromFile_4
    178                          } else {
    179                              AIPressSensor_mV *AnalogInPtr = new AIPressSensor_mV(Key);
   \                     ??LoadConfigFromFile_22:
   \   0000052C   0010A0E3           MOV      R1,#+0
   \   00000530   0700A0E1           MOV      R0,R7
   \   00000534   ........           _BLF     `??new AIPressSensor_mV`,`??new AIPressSensor_mV??rA`
   \   00000538   00B0A0E1           MOV      R11,R0
    180                              AnalogInPtr->LoadConfigString(ConfigString);
   \   0000053C   A4209BE5           LDR      R2,[R11, #+164]
   \   00000540   0510A0E1           MOV      R1,R5
   \   00000544   102092E5           LDR      R2,[R2, #+16]
   \   00000548   0FE0A0E1           MOV      LR,PC
   \   0000054C   12FF2FE1           BX       R2
    181                              MaxPressureRange = MAX(AnalogInPtr->MaxRange, MaxPressureRange);
   \   00000550   588194E5           LDR      R8,[R4, #+344]
   \   00000554   0BA09AE7           LDR      R10,[R10, +R11]
   \   00000558   0810A0E1           MOV      R1,R8
   \   0000055C   0A00A0E1           MOV      R0,R10
   \   00000560   ........           _BLF     __fLess,??__fLess??rA
   \   00000564   000050E3           CMP      R0,#+0
   \   00000568   08A0A011           MOVNE    R10,R8
   \   0000056C   58A184E5           STR      R10,[R4, #+344]
    182                              AnalogInPtr->Location = C_AI_LOC_VAPOUR;
   \   00000570   E200A0E3           MOV      R0,#+226
   \   00000574   800E80E3           ORR      R0,R0,#0x800
   \   00000578   0B0089E7           STR      R0,[R9, +R11]
    183                              AnalogInPtr->SetIsPressureSns();
   \   0000057C   0110A0E3           MOV      R1,#+1
   \   00000580   0B00A0E1           MOV      R0,R11
   \   00000584   ........           _BLF     ??SetIsPressureSns,??SetIsPressureSns??rA
    184          //#ifndef ANCONF
    185                              ////For picture on TDU, no need?
    186                              //AnalogInList.push_back((AnalogInput*)AnalogInPtr);
    187                              // This sensor will currently not be visible
    188                              AITempSensor_Pt1000 *tmpSensor = new AITempSensor_Pt1000(AnalogInPtr);
   \   00000588   0B00A0E1           MOV      R0,R11
   \   0000058C   ........           _BLF     `??new AITempSensor_Pt1000`,`??new AITempSensor_Pt1000??rA`
   \   00000590   0010A0E1           MOV      R1,R0
    189                              AnalogInList.push_back((AnalogInput *)tmpSensor);
   \   00000594   5A0000EA           B        ??LoadConfigFromFile_23
    190          //#endif
    191                              ptrPipePressure = (AIPressSensor *)AnalogInPtr;
    192                          }
    193                          break;
    194                      case C_AI_ATM_N_Ex:
    195                      case C_AI_ATM_Ex:
    196                      case C_AI_ATM_Ex_H:
    197                      case C_AI_ATM_N_Ex_0_1:
    198                      case C_AI_APT500	  :
    199                      case C_AI_SPT900	  :
    200                      case C_AI_Gen_4_20mA:
    201                          if ( ptrPipePressure != NULL ) {
   \                     ??LoadConfigFromFile_8:
   \   00000598   880194E5           LDR      R0,[R4, #+392]
   \   0000059C   000050E3           CMP      R0,#+0
   \   000005A0   1800000A           BEQ      ??LoadConfigFromFile_24
    202                              GiveConfigWarning(warningStartText + Name, InputKeyWord, ConfigString.LineCount);
   \   000005A4   58108DE2           ADD      R1,SP,#+88
   \   000005A8   20008DE2           ADD      R0,SP,#+32
   \   000005AC   ........           _BLF     ??string,??string??rA
   \   000005B0   442084E2           ADD      R2,R4,#+68
   \   000005B4   74108DE2           ADD      R1,SP,#+116
   \   000005B8   3C008DE2           ADD      R0,SP,#+60
   \   000005BC   ........           _BLF     `??operator+`,`??operator+??rA`
   \   000005C0   3C108DE2           ADD      R1,SP,#+60
   \   000005C4   04008DE2           ADD      R0,SP,#+4
   \   000005C8   ........           _BLF     ??AnsiString_2,??AnsiString??rA_2
   \   000005CC   1C2095E5           LDR      R2,[R5, #+28]
   \   000005D0   20108DE2           ADD      R1,SP,#+32
   \   000005D4   ........           _BLF     ??GiveConfigWarning_1,??GiveConfigWarning??rA_1
   \   000005D8   0020A0E3           MOV      R2,#+0
   \   000005DC   0110A0E3           MOV      R1,#+1
   \   000005E0   20008DE2           ADD      R0,SP,#+32
   \   000005E4   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000005E8   0020A0E3           MOV      R2,#+0
   \   000005EC   0110A0E3           MOV      R1,#+1
   \   000005F0   04008DE2           ADD      R0,SP,#+4
   \   000005F4   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000005F8   0020A0E3           MOV      R2,#+0
   \   000005FC   0110A0E3           MOV      R1,#+1
   \   00000600   3C008DE2           ADD      R0,SP,#+60
   \   00000604   A4FEFFEA           B        ??LoadConfigFromFile_5
    203                          } else {
    204                              AIPressSensor_mA *AnalogInPtr = new AIPressSensor_mA(Key);
   \                     ??LoadConfigFromFile_24:
   \   00000608   0010A0E3           MOV      R1,#+0
   \   0000060C   0700A0E1           MOV      R0,R7
   \   00000610   ........           _BLF     `??new AIPressSensor_mA`,`??new AIPressSensor_mA??rA`
   \   00000614   00B0A0E1           MOV      R11,R0
    205                              AnalogInPtr->LoadConfigString(ConfigString);
   \   00000618   A4209BE5           LDR      R2,[R11, #+164]
   \   0000061C   0510A0E1           MOV      R1,R5
   \   00000620   102092E5           LDR      R2,[R2, #+16]
   \   00000624   0FE0A0E1           MOV      LR,PC
   \   00000628   12FF2FE1           BX       R2
    206                              MaxPressureRange = MAX(AnalogInPtr->MaxRange, MaxPressureRange);
   \   0000062C   588194E5           LDR      R8,[R4, #+344]
   \   00000630   0BA09AE7           LDR      R10,[R10, +R11]
   \   00000634   0810A0E1           MOV      R1,R8
   \   00000638   0A00A0E1           MOV      R0,R10
   \   0000063C   ........           _BLF     __fLess,??__fLess??rA
   \   00000640   000050E3           CMP      R0,#+0
   \   00000644   08A0A011           MOVNE    R10,R8
   \   00000648   58A184E5           STR      R10,[R4, #+344]
    207                              AnalogInPtr->Location = C_AI_LOC_VAPOUR;
   \   0000064C   E200A0E3           MOV      R0,#+226
   \   00000650   250000EA           B        ??LoadConfigFromFile_25
    208                              AnalogInPtr->SetIsPressureSns();
    209                              AnalogInList.push_back((AnalogInput *)AnalogInPtr);
    210                              ptrPipePressure = (AIPressSensor *)AnalogInPtr;
    211                          }
    212                          break;
    213                      case C_AI_DIFF_PRESSURE_mA:
    214                          if ( ptrPipePressure != NULL ) {
   \                     ??LoadConfigFromFile_9:
   \   00000654   880194E5           LDR      R0,[R4, #+392]
   \   00000658   000050E3           CMP      R0,#+0
   \   0000065C   1100000A           BEQ      ??LoadConfigFromFile_26
    215                              GiveConfigWarning(warningStartText + Name, InputKeyWord, ConfigString.LineCount);
   \   00000660   58108DE2           ADD      R1,SP,#+88
   \   00000664   3C008DE2           ADD      R0,SP,#+60
   \   00000668   ........           _BLF     ??string,??string??rA
   \   0000066C   442084E2           ADD      R2,R4,#+68
   \   00000670   74108DE2           ADD      R1,SP,#+116
   \   00000674   04008DE2           ADD      R0,SP,#+4
   \   00000678   ........           _BLF     `??operator+`,`??operator+??rA`
   \   0000067C   04108DE2           ADD      R1,SP,#+4
   \   00000680   20008DE2           ADD      R0,SP,#+32
   \   00000684   ........           _BLF     ??AnsiString_2,??AnsiString??rA_2
   \   00000688   1C2095E5           LDR      R2,[R5, #+28]
   \   0000068C   3C108DE2           ADD      R1,SP,#+60
   \   00000690   ........           _BLF     ??GiveConfigWarning_1,??GiveConfigWarning??rA_1
   \   00000694   0020A0E3           MOV      R2,#+0
   \   00000698   0110A0E3           MOV      R1,#+1
   \   0000069C   3C008DE2           ADD      R0,SP,#+60
   \   000006A0   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000006A4   75FEFFEA           B        ??LoadConfigFromFile_4
    216                          } else {
    217                              AIDiffPressSensor_mA *AnalogInPtr = new AIDiffPressSensor_mA(Key);
   \                     ??LoadConfigFromFile_26:
   \   000006A8   0700A0E1           MOV      R0,R7
   \   000006AC   ........           _BLF     `??new AIDiffPressSensor_mA`,`??new AIDiffPressSensor_mA??rA`
   \   000006B0   00B0A0E1           MOV      R11,R0
    218                              AnalogInPtr->LoadConfigString(ConfigString);
   \   000006B4   A4209BE5           LDR      R2,[R11, #+164]
   \   000006B8   0510A0E1           MOV      R1,R5
   \   000006BC   102092E5           LDR      R2,[R2, #+16]
   \   000006C0   0FE0A0E1           MOV      LR,PC
   \   000006C4   12FF2FE1           BX       R2
    219                              MaxPressureRange = MAX(AnalogInPtr->MaxRange, MaxPressureRange);
   \   000006C8   588194E5           LDR      R8,[R4, #+344]
   \   000006CC   0BA09AE7           LDR      R10,[R10, +R11]
   \   000006D0   0810A0E1           MOV      R1,R8
   \   000006D4   0A00A0E1           MOV      R0,R10
   \   000006D8   ........           _BLF     __fLess,??__fLess??rA
   \   000006DC   000050E3           CMP      R0,#+0
   \   000006E0   08A0A011           MOVNE    R10,R8
   \   000006E4   58A184E5           STR      R10,[R4, #+344]
    220                              AnalogInPtr->Location = C_AI_LOC_TANK_CLEAN;
   \   000006E8   F300A0E3           MOV      R0,#+243
   \                     ??LoadConfigFromFile_25:
   \   000006EC   800E80E3           ORR      R0,R0,#0x800
   \   000006F0   0B0089E7           STR      R0,[R9, +R11]
    221                              AnalogInPtr->SetIsPressureSns();
   \   000006F4   0110A0E3           MOV      R1,#+1
   \   000006F8   0B00A0E1           MOV      R0,R11
   \   000006FC   ........           _BLF     ??SetIsPressureSns,??SetIsPressureSns??rA
    222                              AnalogInList.push_back((AnalogInput *)AnalogInPtr);
   \   00000700   0B10A0E1           MOV      R1,R11
   \                     ??LoadConfigFromFile_23:
   \   00000704   040086E0           ADD      R0,R6,R4
   \   00000708   ........           _BLF     ??_Push_back0_1,??_Push_back0??rA_2
    223                              ptrPipePressure = (AIPressSensor *)AnalogInPtr;
   \   0000070C   88B184E5           STR      R11,[R4, #+392]
    224                          }
    225                          break;
    226          
    227                      }
    228                  }
    229              }while ( NoError && (ErrorLine != EOF) && (Key != C_PRO_END) );
   \                     ??LoadConfigFromFile_3:
   \   00000710   0020A0E3           MOV      R2,#+0
   \   00000714   0110A0E3           MOV      R1,#+1
   \   00000718   58008DE2           ADD      R0,SP,#+88
   \   0000071C   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000720   00009DE5           LDR      R0,[SP, #+0]
   \   00000724   010070E3           CMN      R0,#+1
   \   00000728   FA0F5713           CMPNE    R7,#+1000
   \   0000072C   40FEFF1A           BNE      ??LoadConfigFromFile_1
    230          
    231              CopyAnalogList();
   \   00000730   0400A0E1           MOV      R0,R4
   \   00000734   ........           _BLF     ??CopyAnalogList,??CopyAnalogList??rA
    232              AddSensorAlarms();
   \   00000738   0400A0E1           MOV      R0,R4
   \   0000073C   ........           _BLF     ??AddSensorAlarms,??AddSensorAlarms??rA
    233          
    234              // input and output temperature sensor pointers
    235              for ( unsigned i = 0; i < AnalogInList.size(); i++ ) {
   \   00000740   0000A0E3           MOV      R0,#+0
   \   00000744   060000EA           B        ??LoadConfigFromFile_27
    236                  if ( AnalogInList[i]->Location == C_AI_LOC_TEMP_IN ) {
    237                      ptrInputTempSensor = (AITempSensor *)AnalogInList[i];
    238                  } else if ( AnalogInList[i]->Location == C_AI_LOC_TEMP_OUT ) {
   \                     ??LoadConfigFromFile_28:
   \   00000748   002091E5           LDR      R2,[R1, #+0]
   \   0000074C   013083E2           ADD      R3,R3,#+1
   \   00000750   282192E5           LDR      R2,[R2, #+296]
   \   00000754   030052E1           CMP      R2,R3
    239                      ptrOutputTempSensor = (AITempSensor *)AnalogInList[i];
   \   00000758   00109105           LDREQ    R1,[R1, #+0]
   \   0000075C   90118405           STREQ    R1,[R4, #+400]
    240                  }
   \                     ??LoadConfigFromFile_29:
   \   00000760   010080E2           ADD      R0,R0,#+1
   \                     ??LoadConfigFromFile_27:
   \   00000764   041086E0           ADD      R1,R6,R4
   \   00000768   042091E5           LDR      R2,[R1, #+4]
   \   0000076C   001091E5           LDR      R1,[R1, #+0]
   \   00000770   011042E0           SUB      R1,R2,R1
   \   00000774   210150E1           CMP      R0,R1, LSR #+2
   \   00000778   0A00002A           BCS      ??LoadConfigFromFile_30
   \   0000077C   041096E7           LDR      R1,[R6, +R4]
   \   00000780   0730A0E3           MOV      R3,#+7
   \   00000784   001181E0           ADD      R1,R1,R0, LSL #+2
   \   00000788   002091E5           LDR      R2,[R1, #+0]
   \   0000078C   903E83E3           ORR      R3,R3,#0x900
   \   00000790   282192E5           LDR      R2,[R2, #+296]
   \   00000794   030052E1           CMP      R2,R3
   \   00000798   EAFFFF1A           BNE      ??LoadConfigFromFile_28
   \   0000079C   001091E5           LDR      R1,[R1, #+0]
   \   000007A0   8C1184E5           STR      R1,[R4, #+396]
   \   000007A4   EDFFFFEA           B        ??LoadConfigFromFile_29
    241              }
    242          
    243              SetChildUserRights();
    244              PROWaterHeater::AllObjVector.push_back(this);
   \                     ??LoadConfigFromFile_30:
   \   000007A8   ........           LDR      R5,??DataTable15  ;; ??ObjectSet
   \   000007AC   0400A0E1           MOV      R0,R4
   \   000007B0   ........           _BLF     ??SetChildUserRights,??SetChildUserRights??rA
   \   000007B4   0410A0E1           MOV      R1,R4
   \   000007B8   180085E2           ADD      R0,R5,#+24
   \   000007BC   ........           _BLF     ??_Push_back0,??_Push_back0??rA
    245              PROWaterHeater::ObjectSet.insert(this);
   \   000007C0   0420A0E1           MOV      R2,R4
   \   000007C4   0510A0E1           MOV      R1,R5
   \   000007C8   AC008DE2           ADD      R0,SP,#+172
   \   000007CC   ........           _BLF     ??insert,??insert??rA
    246              return ErrorLine;
   \   000007D0   00409DE5           LDR      R4,[SP, #+0]
   \   000007D4   0020A0E3           MOV      R2,#+0
   \   000007D8   0110A0E3           MOV      R1,#+1
   \   000007DC   74008DE2           ADD      R0,SP,#+116
   \   000007E0   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000007E4   0400A0E1           MOV      R0,R4
   \   000007E8   42DF8DE2           ADD      SP,SP,#+264
   \   000007EC                      REQUIRE ?Subroutine16
   \   000007EC                      ;; // Fall through to label ?Subroutine16
    247          }
    248          //---------------------------------------------------------------------------
    249          
    250          
    251          /*bool PROWaterHeater::IsAvailableNewData(void)
    252          {
    253              return bool(abs(clock() - TimeStamp) < 4*RS485_IO_PERIODE);
    254          }*/
    255          //---------------------------------------------------------------------------
    256          
    257          // Must prepare improved logic to support multiple heaters properly
    258          // One thing to correct at that time is HasPressure, HasInputTemperature, OutputTemperatureValue 
    259          

   \                                 In segment CODE, align 4, keep-with-next
    260          void PROWaterHeater::Calculate(void) {
   \                     ??Calculate:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   0040A0E1           MOV      R4,R0
    261              // Do temperatures
    262              if ( !AnalogInList.empty() ) {
   \   00000008   4B0F84E2           ADD      R0,R4,#+300
   \   0000000C   041090E5           LDR      R1,[R0, #+4]
   \   00000010   000090E5           LDR      R0,[R0, #+0]
   \   00000014   0150A0E3           MOV      R5,#+1
   \   00000018   000041E0           SUB      R0,R1,R0
   \   0000001C   2001B0E1           LSRS     R0,R0,#+2
   \   00000020   0F00001A           BNE      ??Calculate_1
    263                  if ( ptrPipePressure != NULL ) {
    264                      float tmpPress = ptrPipePressure->Calculate();
    265                      if ( ptrPipePressure->ResultOK ) {
    266                          HasPressure     = true;
    267                          PressureValue   = tmpPress;
    268                      } else {
    269                          PressureValue   = ManualPressure;
    270                      }
    271                  } else {
    272                      HasPressure     = true;
    273                      PressureValue   = ManualPressure;
    274                  }
    275          
    276                  if ( ptrInputTempSensor != NULL ) {
    277                      float tmpTemp = ptrInputTempSensor->Calculate();
    278                      if ( ptrInputTempSensor->ResultOK ) {
    279                          HasInputTemperature     = true;
    280                          InputTemperatureValue   = tmpTemp;
    281                      } else {
    282                          InputTemperatureValue   = ManualInputTemp;
    283                      }
    284                  } else {
    285                      HasInputTemperature     = true;
    286                      InputTemperatureValue   = ManualInputTemp;
    287                  }
    288          
    289                  if ( ptrOutputTempSensor != NULL ) {
    290                      OutputTemperatureValue = ptrOutputTempSensor->Calculate();
    291                      float tmpTemp = ptrInputTempSensor->Calculate();
    292                      if ( ptrInputTempSensor->ResultOK ) {
    293                          HasInputTemperature  = true;
    294                          HasOutputTemperature = true;
    295                      } else {
    296                          OutputTemperatureValue   = ManualOutputTemp;
    297                      }
    298                  } else {
    299                      HasOutputTemperature    = true;
    300                      OutputTemperatureValue  = ManualOutputTemp;
    301                  }
    302              } else {
    303                  HasPressure             = true;
   \   00000024   5C51C4E5           STRB     R5,[R4, #+348]
    304                  PressureValue           = ManualPressure;
   \   00000028   640194E5           LDR      R0,[R4, #+356]
   \   0000002C   600184E5           STR      R0,[R4, #+352]
    305                  HasInputTemperature     = true;
   \   00000030   7051C4E5           STRB     R5,[R4, #+368]
    306                  InputTemperatureValue   = ManualInputTemp;
   \   00000034   680194E5           LDR      R0,[R4, #+360]
   \   00000038   740184E5           STR      R0,[R4, #+372]
    307                  HasOutputTemperature    = true;
    308                  OutputTemperatureValue  = ManualOutputTemp;
    309              }
   \                     ??Calculate_2:
   \   0000003C   7851C4E5           STRB     R5,[R4, #+376]
   \                     ??Calculate_3:
   \   00000040   6C0194E5           LDR      R0,[R4, #+364]
   \   00000044   7C0184E5           STR      R0,[R4, #+380]
    310          
    311              SendData();
   \                     ??Calculate_4:
   \   00000048   A42094E5           LDR      R2,[R4, #+164]
   \   0000004C   6510A0E3           MOV      R1,#+101
   \   00000050   402092E5           LDR      R2,[R2, #+64]
   \   00000054   0400A0E1           MOV      R0,R4
   \   00000058   0FE0A0E1           MOV      LR,PC
   \   0000005C   12FF2FE1           BX       R2
    312          }
   \   00000060   ........           B        ?Subroutine15
   \                     ??Calculate_1:
   \   00000064   881194E5           LDR      R1,[R4, #+392]
   \   00000068   3660A0E3           MOV      R6,#+54
   \   0000006C   406F86E3           ORR      R6,R6,#0x100
   \   00000070   000051E3           CMP      R1,#+0
   \   00000074   0A00000A           BEQ      ??Calculate_5
   \   00000078   0100A0E1           MOV      R0,R1
   \   0000007C   A41091E5           LDR      R1,[R1, #+164]
   \   00000080   601091E5           LDR      R1,[R1, #+96]
   \   00000084   0FE0A0E1           MOV      LR,PC
   \   00000088   11FF2FE1           BX       R1
   \   0000008C   881194E5           LDR      R1,[R4, #+392]
   \   00000090   0110D6E7           LDRB     R1,[R6, +R1]
   \   00000094   000051E3           CMP      R1,#+0
   \   00000098   0200000A           BEQ      ??Calculate_6
   \   0000009C   5C51C4E5           STRB     R5,[R4, #+348]
   \   000000A0   010000EA           B        ??Calculate_7
   \                     ??Calculate_5:
   \   000000A4   5C51C4E5           STRB     R5,[R4, #+348]
   \                     ??Calculate_6:
   \   000000A8   640194E5           LDR      R0,[R4, #+356]
   \                     ??Calculate_7:
   \   000000AC   600184E5           STR      R0,[R4, #+352]
   \   000000B0   8C1194E5           LDR      R1,[R4, #+396]
   \   000000B4   000051E3           CMP      R1,#+0
   \   000000B8   0A00000A           BEQ      ??Calculate_8
   \   000000BC   0100A0E1           MOV      R0,R1
   \   000000C0   A41091E5           LDR      R1,[R1, #+164]
   \   000000C4   601091E5           LDR      R1,[R1, #+96]
   \   000000C8   0FE0A0E1           MOV      LR,PC
   \   000000CC   11FF2FE1           BX       R1
   \   000000D0   8C1194E5           LDR      R1,[R4, #+396]
   \   000000D4   0110D6E7           LDRB     R1,[R6, +R1]
   \   000000D8   000051E3           CMP      R1,#+0
   \   000000DC   0200000A           BEQ      ??Calculate_9
   \   000000E0   7051C4E5           STRB     R5,[R4, #+368]
   \   000000E4   010000EA           B        ??Calculate_10
   \                     ??Calculate_8:
   \   000000E8   7051C4E5           STRB     R5,[R4, #+368]
   \                     ??Calculate_9:
   \   000000EC   680194E5           LDR      R0,[R4, #+360]
   \                     ??Calculate_10:
   \   000000F0   740184E5           STR      R0,[R4, #+372]
   \   000000F4   901194E5           LDR      R1,[R4, #+400]
   \   000000F8   000051E3           CMP      R1,#+0
   \   000000FC   CEFFFF0A           BEQ      ??Calculate_2
   \   00000100   0100A0E1           MOV      R0,R1
   \   00000104   A41091E5           LDR      R1,[R1, #+164]
   \   00000108   601091E5           LDR      R1,[R1, #+96]
   \   0000010C   0FE0A0E1           MOV      LR,PC
   \   00000110   11FF2FE1           BX       R1
   \   00000114   7C0184E5           STR      R0,[R4, #+380]
   \   00000118   8C1194E5           LDR      R1,[R4, #+396]
   \   0000011C   0100A0E1           MOV      R0,R1
   \   00000120   A41091E5           LDR      R1,[R1, #+164]
   \   00000124   601091E5           LDR      R1,[R1, #+96]
   \   00000128   0FE0A0E1           MOV      LR,PC
   \   0000012C   11FF2FE1           BX       R1
   \   00000130   8C0194E5           LDR      R0,[R4, #+396]
   \   00000134   0000D6E7           LDRB     R0,[R6, +R0]
   \   00000138   000050E3           CMP      R0,#+0
   \   0000013C   BFFFFF0A           BEQ      ??Calculate_3
   \   00000140   7051C4E5           STRB     R5,[R4, #+368]
   \   00000144   7851C4E5           STRB     R5,[R4, #+376]
   \   00000148   BEFFFFEA           B        ??Calculate_4
    313          ///////////////////////////////////////////////////////////////
    314          //
    315          // Routines for Saving of Settings
    316          //
    317          ///////////////////////////////////////////////////////////////

   \                                 In segment CODE, align 4, keep-with-next
    318          void PROWaterHeater::SaveSettings(TSNConfigString *SettingsString) {
   \                     ??SaveSettings:
   \   00000000   F0472DE9           PUSH     {R4-R10,LR}
   \   00000004   7CD04DE2           SUB      SP,SP,#+124
   \   00000008   40DE4DE2           SUB      SP,SP,#+1024
   \   0000000C   0050A0E1           MOV      R5,R0
    319              if (IsModified || WriteAll) {
   \   00000010   0000D5E5           LDRB     R0,[R5, #+0]
   \   00000014   0160A0E1           MOV      R6,R1
   \   00000018   000050E3           CMP      R0,#+0
   \   0000001C   E4069F05           LDREQ    R0,??SaveSettings_2  ;; ??WriteAll
   \   00000020   0000D005           LDRBEQ   R0,[R0, #+0]
   \   00000024   00005003           CMPEQ    R0,#+0
   \   00000028   B201000A           BEQ      ??SaveSettings_3
    320                  IsModified = false;
    321                  AnsiString LocalString;
    322                  AnsiString IdNumStr;
    323                  IdNumStr.cat_sprintf("0x%0x", IDNumber);
    324                  LocalString += KeyWord(Type) + IdNumStr + CrLfStr;
   \   0000002C   ........           LDR      R7,??DataTable16  ;; CrLfStr
    325          
    326                  LocalString += TabStr1 + KeyWord(C_PRO_WATER_HEATER_PRESSURE       ) + TabStr2  + FloatToAnsiString(ManualPressure      ) + CrLfStr;
   \   00000030   ........           LDR      R9,??DataTable17  ;; TabStr1
   \   00000034   D0A69FE5           LDR      R10,??SaveSettings_2+0x4  ;; TabStr2
   \   00000038   0000A0E3           MOV      R0,#+0
   \   0000003C   0000C5E5           STRB     R0,[R5, #+0]
   \   00000040   0D00A0E1           MOV      R0,SP
   \   00000044   ........           _BLF     ??AnsiString,??AnsiString??rA
   \   00000048   44008DE2           ADD      R0,SP,#+68
   \   0000004C   400E80E2           ADD      R0,R0,#+1024
   \   00000050   ........           _BLF     ??AnsiString,??AnsiString??rA
   \   00000054   9C3095E5           LDR      R3,[R5, #+156]
   \   00000058   ........           LDR      R2,??DataTable18  ;; `?<Constant "0x%0x">`
   \   0000005C   0040A0E3           MOV      R4,#+0
   \   00000060   461E8DE2           ADD      R1,SP,#+1120
   \   00000064   44008DE2           ADD      R0,SP,#+68
   \   00000068   400E80E2           ADD      R0,R0,#+1024
   \   0000006C   ........           _BLF     ??cat_sprintf,??cat_sprintf??rA
   \   00000070   0420A0E1           MOV      R2,R4
   \   00000074   0110A0E3           MOV      R1,#+1
   \   00000078   460E8DE2           ADD      R0,SP,#+1120
   \   0000007C   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000080   A01095E5           LDR      R1,[R5, #+160]
   \   00000084   8C008DE2           ADD      R0,SP,#+140
   \   00000088   ........           _BLF     ??KeyWord,??KeyWord??rA
   \   0000008C   44208DE2           ADD      R2,SP,#+68
   \   00000090   402E82E2           ADD      R2,R2,#+1024
   \   00000094   8C108DE2           ADD      R1,SP,#+140
   \   00000098   70008DE2           ADD      R0,SP,#+112
   \   0000009C   ........           _BLF     `??operator+`,`??operator+??rA`
   \   000000A0   0720A0E1           MOV      R2,R7
   \   000000A4   70108DE2           ADD      R1,SP,#+112
   \   000000A8   54008DE2           ADD      R0,SP,#+84
   \   000000AC   ........           _BLF     `??operator+`,`??operator+??rA`
   \   000000B0   ........           LDR      R0,??DataTable19  ;; ??npos
   \   000000B4   0420A0E1           MOV      R2,R4
   \   000000B8   008090E5           LDR      R8,[R0, #+0]
   \   000000BC   54108DE2           ADD      R1,SP,#+84
   \   000000C0   0830A0E1           MOV      R3,R8
   \   000000C4   0D00A0E1           MOV      R0,SP
   \   000000C8   ........           _BLF     ??append,??append??rA
   \   000000CC   0420A0E1           MOV      R2,R4
   \   000000D0   0110A0E3           MOV      R1,#+1
   \   000000D4   54008DE2           ADD      R0,SP,#+84
   \   000000D8   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000000DC   0420A0E1           MOV      R2,R4
   \   000000E0   0110A0E3           MOV      R1,#+1
   \   000000E4   70008DE2           ADD      R0,SP,#+112
   \   000000E8   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000000EC   0420A0E1           MOV      R2,R4
   \   000000F0   0110A0E3           MOV      R1,#+1
   \   000000F4   8C008DE2           ADD      R0,SP,#+140
   \   000000F8   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000000FC   641195E5           LDR      R1,[R5, #+356]
   \   00000100   0330A0E3           MOV      R3,#+3
   \   00000104   0720A0E3           MOV      R2,#+7
   \   00000108   4D0F8DE2           ADD      R0,SP,#+308
   \   0000010C   ........           _BLF     ??FloatToAnsiString,??FloatToAnsiString??rA
   \   00000110   9010A0E3           MOV      R1,#+144
   \   00000114   AC1D81E3           ORR      R1,R1,#0x2B00
   \   00000118   460F8DE2           ADD      R0,SP,#+280
   \   0000011C   ........           _BLF     ??KeyWord,??KeyWord??rA
   \   00000120   462F8DE2           ADD      R2,SP,#+280
   \   00000124   0910A0E1           MOV      R1,R9
   \   00000128   FC008DE2           ADD      R0,SP,#+252
   \   0000012C   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000130   0A20A0E1           MOV      R2,R10
   \   00000134   FC108DE2           ADD      R1,SP,#+252
   \   00000138   E0008DE2           ADD      R0,SP,#+224
   \   0000013C   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000140   4D2F8DE2           ADD      R2,SP,#+308
   \   00000144   E0108DE2           ADD      R1,SP,#+224
   \   00000148   C4008DE2           ADD      R0,SP,#+196
   \   0000014C   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000150   0720A0E1           MOV      R2,R7
   \   00000154   C4108DE2           ADD      R1,SP,#+196
   \   00000158   A8008DE2           ADD      R0,SP,#+168
   \   0000015C   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000160   0830A0E1           MOV      R3,R8
   \   00000164   0420A0E1           MOV      R2,R4
   \   00000168   A8108DE2           ADD      R1,SP,#+168
   \   0000016C   0D00A0E1           MOV      R0,SP
   \   00000170   ........           _BLF     ??append,??append??rA
   \   00000174   0420A0E1           MOV      R2,R4
   \   00000178   0110A0E3           MOV      R1,#+1
   \   0000017C   A8008DE2           ADD      R0,SP,#+168
   \   00000180   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000184   0420A0E1           MOV      R2,R4
   \   00000188   0110A0E3           MOV      R1,#+1
   \   0000018C   C4008DE2           ADD      R0,SP,#+196
   \   00000190   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000194   0420A0E1           MOV      R2,R4
   \   00000198   0110A0E3           MOV      R1,#+1
   \   0000019C   4D0F8DE2           ADD      R0,SP,#+308
   \   000001A0   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000001A4   0420A0E1           MOV      R2,R4
   \   000001A8   0110A0E3           MOV      R1,#+1
   \   000001AC   E0008DE2           ADD      R0,SP,#+224
   \   000001B0   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000001B4   0420A0E1           MOV      R2,R4
   \   000001B8   0110A0E3           MOV      R1,#+1
   \   000001BC   FC008DE2           ADD      R0,SP,#+252
   \   000001C0   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000001C4   0420A0E1           MOV      R2,R4
   \   000001C8   0110A0E3           MOV      R1,#+1
   \   000001CC   460F8DE2           ADD      R0,SP,#+280
   \   000001D0   ........           _BLF     ??_Tidy,??_Tidy??rA
    327                  LocalString += TabStr1 + KeyWord(C_PRO_WATER_HEATER_INPUT_TEMP     ) + TabStr2  + FloatToAnsiString(ManualInputTemp     ) + CrLfStr;
   \   000001D4   681195E5           LDR      R1,[R5, #+360]
   \   000001D8   0330A0E3           MOV      R3,#+3
   \   000001DC   0720A0E3           MOV      R2,#+7
   \   000001E0   770F8DE2           ADD      R0,SP,#+476
   \   000001E4   ........           _BLF     ??FloatToAnsiString,??FloatToAnsiString??rA
   \   000001E8   8E10A0E3           MOV      R1,#+142
   \   000001EC   AC1D81E3           ORR      R1,R1,#0x2B00
   \   000001F0   700F8DE2           ADD      R0,SP,#+448
   \   000001F4   ........           _BLF     ??KeyWord,??KeyWord??rA
   \   000001F8   702F8DE2           ADD      R2,SP,#+448
   \   000001FC   0910A0E1           MOV      R1,R9
   \   00000200   690F8DE2           ADD      R0,SP,#+420
   \   00000204   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000208   0A20A0E1           MOV      R2,R10
   \   0000020C   691F8DE2           ADD      R1,SP,#+420
   \   00000210   620F8DE2           ADD      R0,SP,#+392
   \   00000214   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000218   772F8DE2           ADD      R2,SP,#+476
   \   0000021C   621F8DE2           ADD      R1,SP,#+392
   \   00000220   5B0F8DE2           ADD      R0,SP,#+364
   \   00000224   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000228   0720A0E1           MOV      R2,R7
   \   0000022C   5B1F8DE2           ADD      R1,SP,#+364
   \   00000230   540F8DE2           ADD      R0,SP,#+336
   \   00000234   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000238   0830A0E1           MOV      R3,R8
   \   0000023C   0420A0E1           MOV      R2,R4
   \   00000240   541F8DE2           ADD      R1,SP,#+336
   \   00000244   0D00A0E1           MOV      R0,SP
   \   00000248   ........           _BLF     ??append,??append??rA
   \   0000024C   0420A0E1           MOV      R2,R4
   \   00000250   0110A0E3           MOV      R1,#+1
   \   00000254   540F8DE2           ADD      R0,SP,#+336
   \   00000258   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   0000025C   0420A0E1           MOV      R2,R4
   \   00000260   0110A0E3           MOV      R1,#+1
   \   00000264   5B0F8DE2           ADD      R0,SP,#+364
   \   00000268   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   0000026C   0420A0E1           MOV      R2,R4
   \   00000270   0110A0E3           MOV      R1,#+1
   \   00000274   770F8DE2           ADD      R0,SP,#+476
   \   00000278   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   0000027C   0420A0E1           MOV      R2,R4
   \   00000280   0110A0E3           MOV      R1,#+1
   \   00000284   620F8DE2           ADD      R0,SP,#+392
   \   00000288   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   0000028C   0420A0E1           MOV      R2,R4
   \   00000290   0110A0E3           MOV      R1,#+1
   \   00000294   690F8DE2           ADD      R0,SP,#+420
   \   00000298   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   0000029C   0420A0E1           MOV      R2,R4
   \   000002A0   0110A0E3           MOV      R1,#+1
   \   000002A4   700F8DE2           ADD      R0,SP,#+448
   \   000002A8   ........           _BLF     ??_Tidy,??_Tidy??rA
    328                  LocalString += TabStr1 + KeyWord(C_PRO_WATER_HEATER_OUTPUT_TEMP    ) + TabStr1  + FloatToAnsiString(ManualOutputTemp    ) + CrLfStr;
   \   000002AC   6C1195E5           LDR      R1,[R5, #+364]
   \   000002B0   0330A0E3           MOV      R3,#+3
   \   000002B4   0720A0E3           MOV      R2,#+7
   \   000002B8   A10F8DE2           ADD      R0,SP,#+644
   \   000002BC   ........           _BLF     ??FloatToAnsiString,??FloatToAnsiString??rA
   \   000002C0   8F10A0E3           MOV      R1,#+143
   \   000002C4   AC1D81E3           ORR      R1,R1,#0x2B00
   \   000002C8   9A0F8DE2           ADD      R0,SP,#+616
   \   000002CC   ........           _BLF     ??KeyWord,??KeyWord??rA
   \   000002D0   9A2F8DE2           ADD      R2,SP,#+616
   \   000002D4   0910A0E1           MOV      R1,R9
   \   000002D8   930F8DE2           ADD      R0,SP,#+588
   \   000002DC   ........           _BLF     `??operator+`,`??operator+??rA`
   \   000002E0   0920A0E1           MOV      R2,R9
   \   000002E4   931F8DE2           ADD      R1,SP,#+588
   \   000002E8   8C0F8DE2           ADD      R0,SP,#+560
   \   000002EC   ........           _BLF     `??operator+`,`??operator+??rA`
   \   000002F0   A12F8DE2           ADD      R2,SP,#+644
   \   000002F4   8C1F8DE2           ADD      R1,SP,#+560
   \   000002F8   850F8DE2           ADD      R0,SP,#+532
   \   000002FC   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000300   0720A0E1           MOV      R2,R7
   \   00000304   851F8DE2           ADD      R1,SP,#+532
   \   00000308   7E0F8DE2           ADD      R0,SP,#+504
   \   0000030C   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000310   0830A0E1           MOV      R3,R8
   \   00000314   0420A0E1           MOV      R2,R4
   \   00000318   7E1F8DE2           ADD      R1,SP,#+504
   \   0000031C   0D00A0E1           MOV      R0,SP
   \   00000320   ........           _BLF     ??append,??append??rA
   \   00000324   0420A0E1           MOV      R2,R4
   \   00000328   0110A0E3           MOV      R1,#+1
   \   0000032C   7E0F8DE2           ADD      R0,SP,#+504
   \   00000330   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000334   0420A0E1           MOV      R2,R4
   \   00000338   0110A0E3           MOV      R1,#+1
   \   0000033C   850F8DE2           ADD      R0,SP,#+532
   \   00000340   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000344   0420A0E1           MOV      R2,R4
   \   00000348   0110A0E3           MOV      R1,#+1
   \   0000034C   A10F8DE2           ADD      R0,SP,#+644
   \   00000350   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000354   0420A0E1           MOV      R2,R4
   \   00000358   0110A0E3           MOV      R1,#+1
   \   0000035C   8C0F8DE2           ADD      R0,SP,#+560
   \   00000360   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000364   0420A0E1           MOV      R2,R4
   \   00000368   0110A0E3           MOV      R1,#+1
   \   0000036C   930F8DE2           ADD      R0,SP,#+588
   \   00000370   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000374   0420A0E1           MOV      R2,R4
   \   00000378   0110A0E3           MOV      R1,#+1
   \   0000037C   9A0F8DE2           ADD      R0,SP,#+616
   \   00000380   ........           _BLF     ??_Tidy,??_Tidy??rA
    329                  LocalString += TabStr1 + KeyWord(C_PRO_WATER_HEATER_EFFICIENCY ) + TabStr2  + FloatToAnsiString(MDO_Efficiency ) + CrLfStr;
   \   00000384   801195E5           LDR      R1,[R5, #+384]
   \   00000388   0330A0E3           MOV      R3,#+3
   \   0000038C   0720A0E3           MOV      R2,#+7
   \   00000390   CB0F8DE2           ADD      R0,SP,#+812
   \   00000394   ........           _BLF     ??FloatToAnsiString,??FloatToAnsiString??rA
   \   00000398   9110A0E3           MOV      R1,#+145
   \   0000039C   AC1D81E3           ORR      R1,R1,#0x2B00
   \   000003A0   C40F8DE2           ADD      R0,SP,#+784
   \   000003A4   ........           _BLF     ??KeyWord,??KeyWord??rA
   \   000003A8   C42F8DE2           ADD      R2,SP,#+784
   \   000003AC   0910A0E1           MOV      R1,R9
   \   000003B0   BD0F8DE2           ADD      R0,SP,#+756
   \   000003B4   ........           _BLF     `??operator+`,`??operator+??rA`
   \   000003B8   0A20A0E1           MOV      R2,R10
   \   000003BC   BD1F8DE2           ADD      R1,SP,#+756
   \   000003C0   B60F8DE2           ADD      R0,SP,#+728
   \   000003C4   ........           _BLF     `??operator+`,`??operator+??rA`
   \   000003C8   CB2F8DE2           ADD      R2,SP,#+812
   \   000003CC   B61F8DE2           ADD      R1,SP,#+728
   \   000003D0   AF0F8DE2           ADD      R0,SP,#+700
   \   000003D4   ........           _BLF     `??operator+`,`??operator+??rA`
   \   000003D8   0720A0E1           MOV      R2,R7
   \   000003DC   AF1F8DE2           ADD      R1,SP,#+700
   \   000003E0   A80F8DE2           ADD      R0,SP,#+672
   \   000003E4   ........           _BLF     `??operator+`,`??operator+??rA`
   \   000003E8   0830A0E1           MOV      R3,R8
   \   000003EC   0420A0E1           MOV      R2,R4
   \   000003F0   A81F8DE2           ADD      R1,SP,#+672
   \   000003F4   0D00A0E1           MOV      R0,SP
   \   000003F8   ........           _BLF     ??append,??append??rA
   \   000003FC   0420A0E1           MOV      R2,R4
   \   00000400   0110A0E3           MOV      R1,#+1
   \   00000404   A80F8DE2           ADD      R0,SP,#+672
   \   00000408   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   0000040C   0420A0E1           MOV      R2,R4
   \   00000410   0110A0E3           MOV      R1,#+1
   \   00000414   AF0F8DE2           ADD      R0,SP,#+700
   \   00000418   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   0000041C   0420A0E1           MOV      R2,R4
   \   00000420   0110A0E3           MOV      R1,#+1
   \   00000424   CB0F8DE2           ADD      R0,SP,#+812
   \   00000428   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   0000042C   0420A0E1           MOV      R2,R4
   \   00000430   0110A0E3           MOV      R1,#+1
   \   00000434   B60F8DE2           ADD      R0,SP,#+728
   \   00000438   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   0000043C   0420A0E1           MOV      R2,R4
   \   00000440   0110A0E3           MOV      R1,#+1
   \   00000444   BD0F8DE2           ADD      R0,SP,#+756
   \   00000448   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   0000044C   0420A0E1           MOV      R2,R4
   \   00000450   0110A0E3           MOV      R1,#+1
   \   00000454   C40F8DE2           ADD      R0,SP,#+784
   \   00000458   ........           _BLF     ??_Tidy,??_Tidy??rA
    330                  LocalString += TabStr1 + KeyWord(C_PRO_WATER_HEATER_FUEL_KWH_PER_TON   ) + TabStr2  + FloatToAnsiString(MDO_kWh_per_ton       ) + CrLfStr;
   \   0000045C   841195E5           LDR      R1,[R5, #+388]
   \   00000460   0330A0E3           MOV      R3,#+3
   \   00000464   0720A0E3           MOV      R2,#+7
   \   00000468   F50F8DE2           ADD      R0,SP,#+980
   \   0000046C   ........           _BLF     ??FloatToAnsiString,??FloatToAnsiString??rA
   \   00000470   9210A0E3           MOV      R1,#+146
   \   00000474   AC1D81E3           ORR      R1,R1,#0x2B00
   \   00000478   EE0F8DE2           ADD      R0,SP,#+952
   \   0000047C   ........           _BLF     ??KeyWord,??KeyWord??rA
   \   00000480   EE2F8DE2           ADD      R2,SP,#+952
   \   00000484   0910A0E1           MOV      R1,R9
   \   00000488   E70F8DE2           ADD      R0,SP,#+924
   \   0000048C   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000490   0A20A0E1           MOV      R2,R10
   \   00000494   E71F8DE2           ADD      R1,SP,#+924
   \   00000498   E00F8DE2           ADD      R0,SP,#+896
   \   0000049C   ........           _BLF     `??operator+`,`??operator+??rA`
   \   000004A0   F52F8DE2           ADD      R2,SP,#+980
   \   000004A4   E01F8DE2           ADD      R1,SP,#+896
   \   000004A8   D90F8DE2           ADD      R0,SP,#+868
   \   000004AC   ........           _BLF     `??operator+`,`??operator+??rA`
   \   000004B0   0720A0E1           MOV      R2,R7
   \   000004B4   D91F8DE2           ADD      R1,SP,#+868
   \   000004B8   D20F8DE2           ADD      R0,SP,#+840
   \   000004BC   ........           _BLF     `??operator+`,`??operator+??rA`
   \   000004C0   0830A0E1           MOV      R3,R8
   \   000004C4   0420A0E1           MOV      R2,R4
   \   000004C8   D21F8DE2           ADD      R1,SP,#+840
   \   000004CC   0D00A0E1           MOV      R0,SP
   \   000004D0   ........           _BLF     ??append,??append??rA
   \   000004D4   0420A0E1           MOV      R2,R4
   \   000004D8   0110A0E3           MOV      R1,#+1
   \   000004DC   D20F8DE2           ADD      R0,SP,#+840
   \   000004E0   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000004E4   0420A0E1           MOV      R2,R4
   \   000004E8   0110A0E3           MOV      R1,#+1
   \   000004EC   D90F8DE2           ADD      R0,SP,#+868
   \   000004F0   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000004F4   0420A0E1           MOV      R2,R4
   \   000004F8   0110A0E3           MOV      R1,#+1
   \   000004FC   F50F8DE2           ADD      R0,SP,#+980
   \   00000500   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000504   0420A0E1           MOV      R2,R4
   \   00000508   0110A0E3           MOV      R1,#+1
   \   0000050C   E00F8DE2           ADD      R0,SP,#+896
   \   00000510   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000514   0420A0E1           MOV      R2,R4
   \   00000518   0110A0E3           MOV      R1,#+1
   \   0000051C   E70F8DE2           ADD      R0,SP,#+924
   \   00000520   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000524   0420A0E1           MOV      R2,R4
   \   00000528   0110A0E3           MOV      R1,#+1
   \   0000052C   EE0F8DE2           ADD      R0,SP,#+952
   \   00000530   ........           _BLF     ??_Tidy,??_Tidy??rA
    331                  set<AlarmBasic *>::iterator pBIt;
    332                  for (pBIt = AlarmSet.begin(); pBIt != AlarmSet.end(); pBIt++) {
   \   00000534   E49095E5           LDR      R9,[R5, #+228]
   \   00000538   1A0000EA           B        ??SaveSettings_4
    333                      AlarmBasic *element = *pBIt;
   \                     ??SaveSettings_5:
   \   0000053C   100099E5           LDR      R0,[R9, #+16]
    334                      if (element && !element->Locked) LocalString += (AnsiString)element->SaveSettings();
   \   00000540   000050E3           CMP      R0,#+0
   \   00000544   1400000A           BEQ      ??SaveSettings_6
   \   00000548   E810D0E5           LDRB     R1,[R0, #+232]
   \   0000054C   000051E3           CMP      R1,#+0
   \   00000550   1100001A           BNE      ??SaveSettings_6
   \   00000554   1C108DE2           ADD      R1,SP,#+28
   \   00000558   ........           _BLF     ??SaveSettings_1,??SaveSettings??rA
   \   0000055C   1C108DE2           ADD      R1,SP,#+28
   \   00000560   38008DE2           ADD      R0,SP,#+56
   \   00000564   ........           _BLF     ??string,??string??rA
   \   00000568   0830A0E1           MOV      R3,R8
   \   0000056C   0020A0E3           MOV      R2,#+0
   \   00000570   38108DE2           ADD      R1,SP,#+56
   \   00000574   0D00A0E1           MOV      R0,SP
   \   00000578   ........           _BLF     ??append,??append??rA
   \   0000057C   0420A0E1           MOV      R2,R4
   \   00000580   0110A0E3           MOV      R1,#+1
   \   00000584   38008DE2           ADD      R0,SP,#+56
   \   00000588   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   0000058C   0420A0E1           MOV      R2,R4
   \   00000590   0110A0E3           MOV      R1,#+1
   \   00000594   1C008DE2           ADD      R0,SP,#+28
   \   00000598   ........           _BLF     ??_Tidy,??_Tidy??rA
    335                  }
   \                     ??SaveSettings_6:
   \   0000059C   0900A0E1           MOV      R0,R9
   \   000005A0   ........           _BLF     ??_IncP,??_IncP??rA
   \   000005A4   0090A0E1           MOV      R9,R0
   \                     ??SaveSettings_4:
   \   000005A8   E40085E2           ADD      R0,R5,#+228
   \   000005AC   000059E1           CMP      R9,R0
   \   000005B0   E1FFFF1A           BNE      ??SaveSettings_5
    336                  for ( unsigned j = 0; j < AnalogInList.size(); j++ ) {
   \   000005B4   4B9FA0E3           MOV      R9,#+300
   \   000005B8   160000EA           B        ??SaveSettings_7
    337                      if ( AnalogInList[j] ) LocalString += AnalogInList[j]->SaveAISettings();
   \                     ??SaveSettings_8:
   \   000005BC   050099E7           LDR      R0,[R9, +R5]
   \   000005C0   040180E0           ADD      R0,R0,R4, LSL #+2
   \   000005C4   001090E5           LDR      R1,[R0, #+0]
   \   000005C8   000051E3           CMP      R1,#+0
   \   000005CC   1000000A           BEQ      ??SaveSettings_9
   \   000005D0   0130A0E1           MOV      R3,R1
   \   000005D4   0300A0E1           MOV      R0,R3
   \   000005D8   A43093E5           LDR      R3,[R3, #+164]
   \   000005DC   0020A0E3           MOV      R2,#+0
   \   000005E0   6C3093E5           LDR      R3,[R3, #+108]
   \   000005E4   1C108DE2           ADD      R1,SP,#+28
   \   000005E8   0FE0A0E1           MOV      LR,PC
   \   000005EC   13FF2FE1           BX       R3
   \   000005F0   0830A0E1           MOV      R3,R8
   \   000005F4   0020A0E3           MOV      R2,#+0
   \   000005F8   1C108DE2           ADD      R1,SP,#+28
   \   000005FC   0D00A0E1           MOV      R0,SP
   \   00000600   ........           _BLF     ??append,??append??rA
   \   00000604   0020A0E3           MOV      R2,#+0
   \   00000608   0110A0E3           MOV      R1,#+1
   \   0000060C   1C008DE2           ADD      R0,SP,#+28
   \   00000610   ........           _BLF     ??_Tidy,??_Tidy??rA
    338                  }
   \                     ??SaveSettings_9:
   \   00000614   014084E2           ADD      R4,R4,#+1
   \                     ??SaveSettings_7:
   \   00000618   050089E0           ADD      R0,R9,R5
   \   0000061C   041090E5           LDR      R1,[R0, #+4]
   \   00000620   000090E5           LDR      R0,[R0, #+0]
   \   00000624   000041E0           SUB      R0,R1,R0
   \   00000628   200154E1           CMP      R4,R0, LSR #+2
   \   0000062C   E2FFFF3A           BCC      ??SaveSettings_8
    339                  LocalString += KeyWord(C_PRO_END) + CrLfStr;
   \   00000630   FA1FA0E3           MOV      R1,#+1000
   \   00000634   0C008DE2           ADD      R0,SP,#+12
   \   00000638   400E80E2           ADD      R0,R0,#+1024
   \   0000063C   ........           _BLF     ??KeyWord,??KeyWord??rA
   \   00000640   0720A0E1           MOV      R2,R7
   \   00000644   0C108DE2           ADD      R1,SP,#+12
   \   00000648   401E81E2           ADD      R1,R1,#+1024
   \   0000064C   FC0F8DE2           ADD      R0,SP,#+1008
   \   00000650   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000654   0830A0E1           MOV      R3,R8
   \   00000658   0020A0E3           MOV      R2,#+0
   \   0000065C   FC1F8DE2           ADD      R1,SP,#+1008
   \   00000660   0D00A0E1           MOV      R0,SP
   \   00000664   ........           _BLF     ??append,??append??rA
   \   00000668   0020A0E3           MOV      R2,#+0
   \   0000066C   0110A0E3           MOV      R1,#+1
   \   00000670   FC0F8DE2           ADD      R0,SP,#+1008
   \   00000674   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000678   0020A0E3           MOV      R2,#+0
   \   0000067C   0110A0E3           MOV      R1,#+1
   \   00000680   0C008DE2           ADD      R0,SP,#+12
   \   00000684   400E80E2           ADD      R0,R0,#+1024
   \   00000688   ........           _BLF     ??_Tidy,??_Tidy??rA
    340                  LocalString += CrLfStr;
   \   0000068C   0830A0E1           MOV      R3,R8
   \   00000690   0020A0E3           MOV      R2,#+0
   \   00000694   0710A0E1           MOV      R1,R7
   \   00000698   0D00A0E1           MOV      R0,SP
   \   0000069C   ........           _BLF     ??append,??append??rA
    341                  SettingsString->AddString(LocalString);
   \   000006A0   0D10A0E1           MOV      R1,SP
   \   000006A4   28008DE2           ADD      R0,SP,#+40
   \   000006A8   400E80E2           ADD      R0,R0,#+1024
   \   000006AC   ........           _BLF     ??string,??string??rA
   \   000006B0   28108DE2           ADD      R1,SP,#+40
   \   000006B4   401E81E2           ADD      R1,R1,#+1024
   \   000006B8   0600A0E1           MOV      R0,R6
   \   000006BC   ........           _BLF     ??AddString,??AddString??rA
   \   000006C0   0020A0E3           MOV      R2,#+0
   \   000006C4   0110A0E3           MOV      R1,#+1
   \   000006C8   28008DE2           ADD      R0,SP,#+40
   \   000006CC   400E80E2           ADD      R0,R0,#+1024
   \   000006D0   ........           _BLF     ??_Tidy,??_Tidy??rA
    342              }
   \   000006D4   0020A0E3           MOV      R2,#+0
   \   000006D8   0110A0E3           MOV      R1,#+1
   \   000006DC   44008DE2           ADD      R0,SP,#+68
   \   000006E0   400E80E2           ADD      R0,R0,#+1024
   \   000006E4   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000006E8   0020A0E3           MOV      R2,#+0
   \   000006EC   0110A0E3           MOV      R1,#+1
   \   000006F0   0D00A0E1           MOV      R0,SP
   \   000006F4   ........           _BLF     ??_Tidy,??_Tidy??rA
    343          }
   \                     ??SaveSettings_3:
   \   000006F8   7CD08DE2           ADD      SP,SP,#+124
   \   000006FC   40DE8DE2           ADD      SP,SP,#+1024
   \   00000700   F047BDE8           POP      {R4-R10,LR}
   \   00000704   1EFF2FE1           BX       LR               ;; return
   \                     ??SaveSettings_2:
   \   00000708   ........           DC32     ??WriteAll
   \   0000070C   ........           DC32     TabStr2
    344          
    345          
    346                
    347              
    348             
    349          
    350            
    351          
    352          

   \                                 In segment CODE, align 4, keep-with-next
    353          bool PROWaterHeater::RestoreSettings(TSNConfigString *SettingsString) {
   \                     ??RestoreSettings:
   \   00000000   F04F2DE9           PUSH     {R4-R11,LR}
    354              bool NoError   = true;
    355              int  ErrorLine = 0;
   \   00000004   50859FE5           LDR      R8,??RestoreSettings_1  ;; NewLineStr
   \   00000008   50959FE5           LDR      R9,??RestoreSettings_1+0x4  ;; `?<Constant "Temperature ">`
   \   0000000C   94DF4DE2           SUB      SP,SP,#+592
   \   00000010   0040A0E1           MOV      R4,R0
   \   00000014   0150A0E1           MOV      R5,R1
   \   00000018   0160A0E3           MOV      R6,#+1
   \   0000001C   0010A0E3           MOV      R1,#+0
   \   00000020   00108DE5           STR      R1,[SP, #+0]
    356              int  Key;
    357              do {
    358                  AnsiString InputKeyWord = SettingsString->NextWord(ErrorLine);
   \                     ??RestoreSettings_2:
   \   00000024   0030A0E3           MOV      R3,#+0
   \   00000028   0D20A0E1           MOV      R2,SP
   \   0000002C   E4108DE2           ADD      R1,SP,#+228
   \   00000030   0500A0E1           MOV      R0,R5
   \   00000034   ........           _BLF     ??NextWord,??NextWord??rA
    359                  if (ErrorLine) {
   \   00000038   00009DE5           LDR      R0,[SP, #+0]
   \   0000003C   000050E3           CMP      R0,#+0
   \   00000040   3800000A           BEQ      ??RestoreSettings_3
    360                      if (ErrorLine != EOF) {
   \   00000044   010070E3           CMN      R0,#+1
   \   00000048   3701000A           BEQ      ??RestoreSettings_4
    361                          RestoreSettingsWarning((AnsiString)"Temperature " + Name + ":\nUnknown error started at line:" + (AnsiString)ErrorLine + NewLineStr);
   \   0000004C   0010A0E1           MOV      R1,R0
   \   00000050   74008DE2           ADD      R0,SP,#+116
   \   00000054   ........           _BLF     ??AnsiString_3,??AnsiString??rA_3
   \   00000058   00A0A0E1           MOV      R10,R0
   \   0000005C   0910A0E1           MOV      R1,R9
   \   00000060   90008DE2           ADD      R0,SP,#+144
   \   00000064   ........           _BLF     ??AnsiString_1,??AnsiString??rA_1
   \   00000068   442084E2           ADD      R2,R4,#+68
   \   0000006C   0010A0E1           MOV      R1,R0
   \   00000070   04008DE2           ADD      R0,SP,#+4
   \   00000074   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000078   102089E2           ADD      R2,R9,#+16
   \   0000007C   04108DE2           ADD      R1,SP,#+4
   \   00000080   20008DE2           ADD      R0,SP,#+32
   \   00000084   ........           _BLF     `??operator+_1`,`??operator+??rA_1`
   \   00000088   0A20A0E1           MOV      R2,R10
   \   0000008C   20108DE2           ADD      R1,SP,#+32
   \   00000090   3C008DE2           ADD      R0,SP,#+60
   \   00000094   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000098   0820A0E1           MOV      R2,R8
   \   0000009C   3C108DE2           ADD      R1,SP,#+60
   \   000000A0   58008DE2           ADD      R0,SP,#+88
   \   000000A4   ........           _BLF     `??operator+`,`??operator+??rA`
   \   000000A8   58108DE2           ADD      R1,SP,#+88
   \   000000AC   AC008DE2           ADD      R0,SP,#+172
   \   000000B0   ........           _BLF     ??AnsiString_2,??AnsiString??rA_2
   \   000000B4   ........           _BLF     ??RestoreSettingsWarning,??RestoreSettingsWarning??rA
   \   000000B8   0020A0E3           MOV      R2,#+0
   \   000000BC   0110A0E3           MOV      R1,#+1
   \   000000C0   AC008DE2           ADD      R0,SP,#+172
   \   000000C4   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000000C8   0020A0E3           MOV      R2,#+0
   \   000000CC   0110A0E3           MOV      R1,#+1
   \   000000D0   58008DE2           ADD      R0,SP,#+88
   \   000000D4   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000000D8   0020A0E3           MOV      R2,#+0
   \   000000DC   0110A0E3           MOV      R1,#+1
   \   000000E0   3C008DE2           ADD      R0,SP,#+60
   \   000000E4   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000000E8   0020A0E3           MOV      R2,#+0
   \   000000EC   0110A0E3           MOV      R1,#+1
   \   000000F0   74008DE2           ADD      R0,SP,#+116
   \   000000F4   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000000F8   0020A0E3           MOV      R2,#+0
   \   000000FC   0110A0E3           MOV      R1,#+1
   \   00000100   20008DE2           ADD      R0,SP,#+32
   \   00000104   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000108   0020A0E3           MOV      R2,#+0
   \   0000010C   0110A0E3           MOV      R1,#+1
   \   00000110   04008DE2           ADD      R0,SP,#+4
   \   00000114   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000118   0020A0E3           MOV      R2,#+0
   \   0000011C   0110A0E3           MOV      R1,#+1
   \   00000120   90008DE2           ADD      R0,SP,#+144
   \   00000124   FF0000EA           B        ??RestoreSettings_5
    362                      }
    363                  } else {
    364                      Key = FindConfigKey(InputKeyWord);
   \                     ??RestoreSettings_3:
   \   00000128   E4108DE2           ADD      R1,SP,#+228
   \   0000012C   04008DE2           ADD      R0,SP,#+4
   \   00000130   ........           _BLF     ??string,??string??rA
   \   00000134   04008DE2           ADD      R0,SP,#+4
   \   00000138   ........           _BLF     ??FindConfigKey,??FindConfigKey??rA
   \   0000013C   0070A0E1           MOV      R7,R0
   \   00000140   0020A0E3           MOV      R2,#+0
   \   00000144   0110A0E3           MOV      R1,#+1
   \   00000148   04008DE2           ADD      R0,SP,#+4
   \   0000014C   ........           _BLF     ??_Tidy,??_Tidy??rA
    365                      switch (Key) {
   \   00000150   FA0F57E3           CMP      R7,#+1000
   \   00000154   EA10A013           MOVNE    R1,#+234
   \   00000158   C01F8113           ORRNE    R1,R1,#0x300
   \   0000015C   01005711           CMPNE    R7,R1
   \   00000160   FB0F5713           CMPNE    R7,#+1004
   \   00000164   AF10A013           MOVNE    R1,#+175
   \   00000168   501E8113           ORRNE    R1,R1,#0x500
   \   0000016C   01005711           CMPNE    R7,R1
   \   00000170   6B00000A           BEQ      ??RestoreSettings_6
   \   00000174   3E10A0E3           MOV      R1,#+62
   \   00000178   801E81E3           ORR      R1,R1,#0x800
   \   0000017C   010057E1           CMP      R7,R1
   \   00000180   01108113           ORRNE    R1,R1,#0x1
   \   00000184   01005711           CMPNE    R7,R1
   \   00000188   1F108112           ADDNE    R1,R1,#+31
   \   0000018C   01005711           CMPNE    R7,R1
   \   00000190   01108113           ORRNE    R1,R1,#0x1
   \   00000194   01005711           CMPNE    R7,R1
   \   00000198   07108112           ADDNE    R1,R1,#+7
   \   0000019C   01005711           CMPNE    R7,R1
   \   000001A0   02108112           ADDNE    R1,R1,#+2
   \   000001A4   01005711           CMPNE    R7,R1
   \   000001A8   8200000A           BEQ      ??RestoreSettings_7
   \   000001AC   301081E2           ADD      R1,R1,#+48
   \   000001B0   010057E1           CMP      R7,R1
   \   000001B4   B910A013           MOVNE    R1,#+185
   \   000001B8   B01E8113           ORRNE    R1,R1,#0xB00
   \   000001BC   01005711           CMPNE    R7,R1
   \   000001C0   5700000A           BEQ      ??RestoreSettings_6
   \   000001C4   8E10A0E3           MOV      R1,#+142
   \   000001C8   AC1D81E3           ORR      R1,R1,#0x2B00
   \   000001CC   010057E1           CMP      R7,R1
   \   000001D0   5C00000A           BEQ      ??RestoreSettings_8
   \   000001D4   011081E3           ORR      R1,R1,#0x1
   \   000001D8   010057E1           CMP      R7,R1
   \   000001DC   6000000A           BEQ      ??RestoreSettings_9
   \   000001E0   011081E2           ADD      R1,R1,#+1
   \   000001E4   010057E1           CMP      R7,R1
   \   000001E8   4F00000A           BEQ      ??RestoreSettings_10
   \   000001EC   011081E3           ORR      R1,R1,#0x1
   \   000001F0   010057E1           CMP      R7,R1
   \   000001F4   6100000A           BEQ      ??RestoreSettings_11
   \   000001F8   011081E2           ADD      R1,R1,#+1
   \   000001FC   010057E1           CMP      R7,R1
   \   00000200   6500000A           BEQ      ??RestoreSettings_12
    366                      default:
    367                          NoError = false;
    368                          RestoreSettingsWarning((AnsiString)"Temperature " + Name + ":\nThe keyword " + InputKeyWord + " is not allowed here!! Line:" + (AnsiString)SettingsString->LineCount + NewLineStr);
   \   00000204   1C1095E5           LDR      R1,[R5, #+28]
   \   00000208   0060A0E3           MOV      R6,#+0
   \   0000020C   8D0F8DE2           ADD      R0,SP,#+564
   \   00000210   ........           _BLF     ??AnsiString_3,??AnsiString??rA_3
   \   00000214   00A0A0E1           MOV      R10,R0
   \   00000218   0910A0E1           MOV      R1,R9
   \   0000021C   860F8DE2           ADD      R0,SP,#+536
   \   00000220   ........           _BLF     ??AnsiString_1,??AnsiString??rA_1
   \   00000224   0010A0E1           MOV      R1,R0
   \   00000228   442084E2           ADD      R2,R4,#+68
   \   0000022C   7F0F8DE2           ADD      R0,SP,#+508
   \   00000230   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000234   342089E2           ADD      R2,R9,#+52
   \   00000238   7F1F8DE2           ADD      R1,SP,#+508
   \   0000023C   780F8DE2           ADD      R0,SP,#+480
   \   00000240   ........           _BLF     `??operator+_1`,`??operator+??rA_1`
   \   00000244   E4208DE2           ADD      R2,SP,#+228
   \   00000248   781F8DE2           ADD      R1,SP,#+480
   \   0000024C   710F8DE2           ADD      R0,SP,#+452
   \   00000250   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000254   442089E2           ADD      R2,R9,#+68
   \   00000258   711F8DE2           ADD      R1,SP,#+452
   \   0000025C   6A0F8DE2           ADD      R0,SP,#+424
   \   00000260   ........           _BLF     `??operator+_1`,`??operator+??rA_1`
   \   00000264   0A20A0E1           MOV      R2,R10
   \   00000268   6A1F8DE2           ADD      R1,SP,#+424
   \   0000026C   630F8DE2           ADD      R0,SP,#+396
   \   00000270   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000274   0820A0E1           MOV      R2,R8
   \   00000278   631F8DE2           ADD      R1,SP,#+396
   \   0000027C   5C0F8DE2           ADD      R0,SP,#+368
   \   00000280   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000284   5C1F8DE2           ADD      R1,SP,#+368
   \   00000288   550F8DE2           ADD      R0,SP,#+340
   \   0000028C   ........           _BLF     ??AnsiString_2,??AnsiString??rA_2
   \   00000290   ........           _BLF     ??RestoreSettingsWarning,??RestoreSettingsWarning??rA
   \   00000294   0020A0E3           MOV      R2,#+0
   \   00000298   0110A0E3           MOV      R1,#+1
   \   0000029C   550F8DE2           ADD      R0,SP,#+340
   \   000002A0   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000002A4   0620A0E1           MOV      R2,R6
   \   000002A8   0110A0E3           MOV      R1,#+1
   \   000002AC   5C0F8DE2           ADD      R0,SP,#+368
   \   000002B0   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000002B4   0620A0E1           MOV      R2,R6
   \   000002B8   0110A0E3           MOV      R1,#+1
   \   000002BC   630F8DE2           ADD      R0,SP,#+396
   \   000002C0   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000002C4   0620A0E1           MOV      R2,R6
   \   000002C8   0110A0E3           MOV      R1,#+1
   \   000002CC   8D0F8DE2           ADD      R0,SP,#+564
   \   000002D0   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000002D4   0620A0E1           MOV      R2,R6
   \   000002D8   0110A0E3           MOV      R1,#+1
   \   000002DC   6A0F8DE2           ADD      R0,SP,#+424
   \   000002E0   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000002E4   0620A0E1           MOV      R2,R6
   \   000002E8   0110A0E3           MOV      R1,#+1
   \   000002EC   710F8DE2           ADD      R0,SP,#+452
   \   000002F0   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000002F4   0620A0E1           MOV      R2,R6
   \   000002F8   0110A0E3           MOV      R1,#+1
   \   000002FC   780F8DE2           ADD      R0,SP,#+480
   \   00000300   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000304   0620A0E1           MOV      R2,R6
   \   00000308   0110A0E3           MOV      R1,#+1
   \   0000030C   7F0F8DE2           ADD      R0,SP,#+508
   \   00000310   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000314   0620A0E1           MOV      R2,R6
   \   00000318   0110A0E3           MOV      R1,#+1
   \   0000031C   860F8DE2           ADD      R0,SP,#+536
   \   00000320   800000EA           B        ??RestoreSettings_5
    369                          break;
    370                      case C_AI_END:          // If AI type not found can continue with this
    371                      case C_AL_END:
    372                      case C_CT_END:
    373                      case C_PRO_END:
    374                      case C_PRO_END_COMMON:
    375                      case C_PRO_END_PRO:
    376                          Key = C_PRO_END;
   \                     ??RestoreSettings_6:
   \   00000324   FA7FA0E3           MOV      R7,#+1000
   \   00000328   7F0000EA           B        ??RestoreSettings_4
    377                          break;
    378                      case C_PRO_WATER_HEATER_PRESSURE               :
    379                          ManualPressure = SettingsString->ReadDouble(ErrorLine);
   \                     ??RestoreSettings_10:
   \   0000032C   0020A0E3           MOV      R2,#+0
   \   00000330   0D10A0E1           MOV      R1,SP
   \   00000334   0500A0E1           MOV      R0,R5
   \   00000338   ........           _BLF     ??ReadDouble,??ReadDouble??rA
   \   0000033C   ........           _BLF     __doubleToFloat,??__doubleToFloat??rA
   \   00000340   640184E5           STR      R0,[R4, #+356]
   \   00000344   780000EA           B        ??RestoreSettings_4
    380                          break;
    381                      case C_PRO_WATER_HEATER_INPUT_TEMP      :
    382                          ManualInputTemp = SettingsString->ReadDouble(ErrorLine);
   \                     ??RestoreSettings_8:
   \   00000348   0020A0E3           MOV      R2,#+0
   \   0000034C   0D10A0E1           MOV      R1,SP
   \   00000350   0500A0E1           MOV      R0,R5
   \   00000354   ........           _BLF     ??ReadDouble,??ReadDouble??rA
   \   00000358   ........           _BLF     __doubleToFloat,??__doubleToFloat??rA
   \   0000035C   680184E5           STR      R0,[R4, #+360]
   \   00000360   710000EA           B        ??RestoreSettings_4
    383                          break;
    384                      case C_PRO_WATER_HEATER_OUTPUT_TEMP     :
    385                          ManualOutputTemp = SettingsString->ReadDouble(ErrorLine);
   \                     ??RestoreSettings_9:
   \   00000364   0020A0E3           MOV      R2,#+0
   \   00000368   0D10A0E1           MOV      R1,SP
   \   0000036C   0500A0E1           MOV      R0,R5
   \   00000370   ........           _BLF     ??ReadDouble,??ReadDouble??rA
   \   00000374   ........           _BLF     __doubleToFloat,??__doubleToFloat??rA
   \   00000378   6C0184E5           STR      R0,[R4, #+364]
   \   0000037C   6A0000EA           B        ??RestoreSettings_4
    386                          break;
    387                      case C_PRO_WATER_HEATER_EFFICIENCY      :
    388                          MDO_Efficiency = SettingsString->ReadDouble(ErrorLine);
   \                     ??RestoreSettings_11:
   \   00000380   0020A0E3           MOV      R2,#+0
   \   00000384   0D10A0E1           MOV      R1,SP
   \   00000388   0500A0E1           MOV      R0,R5
   \   0000038C   ........           _BLF     ??ReadDouble,??ReadDouble??rA
   \   00000390   ........           _BLF     __doubleToFloat,??__doubleToFloat??rA
   \   00000394   800184E5           STR      R0,[R4, #+384]
   \   00000398   630000EA           B        ??RestoreSettings_4
    389                          break;
    390                      case C_PRO_WATER_HEATER_FUEL_KWH_PER_TON  		:
    391                          MDO_kWh_per_ton = SettingsString->ReadDouble(ErrorLine);
   \                     ??RestoreSettings_12:
   \   0000039C   0020A0E3           MOV      R2,#+0
   \   000003A0   0D10A0E1           MOV      R1,SP
   \   000003A4   0500A0E1           MOV      R0,R5
   \   000003A8   ........           _BLF     ??ReadDouble,??ReadDouble??rA
   \   000003AC   ........           _BLF     __doubleToFloat,??__doubleToFloat??rA
   \   000003B0   840184E5           STR      R0,[R4, #+388]
   \   000003B4   5C0000EA           B        ??RestoreSettings_4
    392                          break;
    393                      case C_AI_P906_0110 :
    394                      case C_AI_P906_0111 :
    395                      case C_AI_Pt100     :
    396                      case C_AI_Pt1000    :
    397                      case C_AI_TEMP_mA   :
    398                      case C_AI_TEMP_AD590:
    399                          {
    400                              int         AIIDNumber   = SettingsString->ReadInteger(ErrorLine);
   \                     ??RestoreSettings_7:
   \   000003B8   0020A0E3           MOV      R2,#+0
   \   000003BC   0D10A0E1           MOV      R1,SP
   \   000003C0   0500A0E1           MOV      R0,R5
   \   000003C4   ........           _BLF     ??ReadInteger,??ReadInteger??rA
   \   000003C8   00B0A0E1           MOV      R11,R0
    401          					AnalogInput *AnalogInPtr = (AnalogInput *)FindObject(AIIDNumber);
   \   000003CC   ........           _BLF     ??FindObject,??FindObject??rA
   \   000003D0   0020B0E1           MOVS     R2,R0
    402          					if (AnalogInPtr) {
   \   000003D4   0500000A           BEQ      ??RestoreSettings_13
    403          						AnalogInPtr->RestoreAISettings(SettingsString);
   \   000003D8   A42090E5           LDR      R2,[R0, #+164]
   \   000003DC   0510A0E1           MOV      R1,R5
   \   000003E0   702092E5           LDR      R2,[R2, #+112]
   \   000003E4   0FE0A0E1           MOV      LR,PC
   \   000003E8   12FF2FE1           BX       R2
   \   000003EC   4E0000EA           B        ??RestoreSettings_4
    404          					}else{
    405          						RestoreSettingsWarning((AnsiString)"Temperature " + Name + ":\nSensor Id " + AnsiString(AIIDNumber) + " is not found!! Line:" + (AnsiString)SettingsString->LineCount + NewLineStr);
   \                     ??RestoreSettings_13:
   \   000003F0   1C1095E5           LDR      R1,[R5, #+28]
   \   000003F4   4E0F8DE2           ADD      R0,SP,#+312
   \   000003F8   ........           _BLF     ??AnsiString_3,??AnsiString??rA_3
   \   000003FC   00A0A0E1           MOV      R10,R0
   \   00000400   0B10A0E1           MOV      R1,R11
   \   00000404   470F8DE2           ADD      R0,SP,#+284
   \   00000408   ........           _BLF     ??AnsiString_3,??AnsiString??rA_3
   \   0000040C   00B0A0E1           MOV      R11,R0
   \   00000410   0910A0E1           MOV      R1,R9
   \   00000414   400F8DE2           ADD      R0,SP,#+256
   \   00000418   ........           _BLF     ??AnsiString_1,??AnsiString??rA_1
   \   0000041C   442084E2           ADD      R2,R4,#+68
   \   00000420   0010A0E1           MOV      R1,R0
   \   00000424   C8008DE2           ADD      R0,SP,#+200
   \   00000428   ........           _BLF     `??operator+`,`??operator+??rA`
   \   0000042C   642089E2           ADD      R2,R9,#+100
   \   00000430   C8108DE2           ADD      R1,SP,#+200
   \   00000434   AC008DE2           ADD      R0,SP,#+172
   \   00000438   ........           _BLF     `??operator+_1`,`??operator+??rA_1`
   \   0000043C   0B20A0E1           MOV      R2,R11
   \   00000440   AC108DE2           ADD      R1,SP,#+172
   \   00000444   90008DE2           ADD      R0,SP,#+144
   \   00000448   ........           _BLF     `??operator+`,`??operator+??rA`
   \   0000044C   742089E2           ADD      R2,R9,#+116
   \   00000450   90108DE2           ADD      R1,SP,#+144
   \   00000454   74008DE2           ADD      R0,SP,#+116
   \   00000458   ........           _BLF     `??operator+_1`,`??operator+??rA_1`
   \   0000045C   0A20A0E1           MOV      R2,R10
   \   00000460   74108DE2           ADD      R1,SP,#+116
   \   00000464   58008DE2           ADD      R0,SP,#+88
   \   00000468   ........           _BLF     `??operator+`,`??operator+??rA`
   \   0000046C   0820A0E1           MOV      R2,R8
   \   00000470   58108DE2           ADD      R1,SP,#+88
   \   00000474   3C008DE2           ADD      R0,SP,#+60
   \   00000478   ........           _BLF     `??operator+`,`??operator+??rA`
   \   0000047C   3C108DE2           ADD      R1,SP,#+60
   \   00000480   20008DE2           ADD      R0,SP,#+32
   \   00000484   ........           _BLF     ??AnsiString_2,??AnsiString??rA_2
   \   00000488   ........           _BLF     ??RestoreSettingsWarning,??RestoreSettingsWarning??rA
   \   0000048C   0020A0E3           MOV      R2,#+0
   \   00000490   0110A0E3           MOV      R1,#+1
   \   00000494   20008DE2           ADD      R0,SP,#+32
   \   00000498   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   0000049C   0020A0E3           MOV      R2,#+0
   \   000004A0   0110A0E3           MOV      R1,#+1
   \   000004A4   3C008DE2           ADD      R0,SP,#+60
   \   000004A8   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000004AC   0020A0E3           MOV      R2,#+0
   \   000004B0   0110A0E3           MOV      R1,#+1
   \   000004B4   58008DE2           ADD      R0,SP,#+88
   \   000004B8   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000004BC   0020A0E3           MOV      R2,#+0
   \   000004C0   0110A0E3           MOV      R1,#+1
   \   000004C4   4E0F8DE2           ADD      R0,SP,#+312
   \   000004C8   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000004CC   0020A0E3           MOV      R2,#+0
   \   000004D0   0110A0E3           MOV      R1,#+1
   \   000004D4   74008DE2           ADD      R0,SP,#+116
   \   000004D8   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000004DC   0020A0E3           MOV      R2,#+0
   \   000004E0   0110A0E3           MOV      R1,#+1
   \   000004E4   90008DE2           ADD      R0,SP,#+144
   \   000004E8   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000004EC   0020A0E3           MOV      R2,#+0
   \   000004F0   0110A0E3           MOV      R1,#+1
   \   000004F4   470F8DE2           ADD      R0,SP,#+284
   \   000004F8   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000004FC   0020A0E3           MOV      R2,#+0
   \   00000500   0110A0E3           MOV      R1,#+1
   \   00000504   AC008DE2           ADD      R0,SP,#+172
   \   00000508   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   0000050C   0020A0E3           MOV      R2,#+0
   \   00000510   0110A0E3           MOV      R1,#+1
   \   00000514   C8008DE2           ADD      R0,SP,#+200
   \   00000518   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   0000051C   0020A0E3           MOV      R2,#+0
   \   00000520   0110A0E3           MOV      R1,#+1
   \   00000524   400F8DE2           ADD      R0,SP,#+256
   \                     ??RestoreSettings_5:
   \   00000528   ........           _BLF     ??_Tidy,??_Tidy??rA
    406          					}
    407                          }
    408                          break;
    409                      }
    410                  }
    411              }while (NoError && (ErrorLine != EOF) && (Key != C_PRO_END));
   \                     ??RestoreSettings_4:
   \   0000052C   0020A0E3           MOV      R2,#+0
   \   00000530   0110A0E3           MOV      R1,#+1
   \   00000534   E4008DE2           ADD      R0,SP,#+228
   \   00000538   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   0000053C   000056E3           CMP      R6,#+0
   \   00000540   00009D15           LDRNE    R0,[SP, #+0]
   \   00000544   01007013           CMNNE    R0,#+1
   \   00000548   FA0F5713           CMPNE    R7,#+1000
   \   0000054C   B4FEFF1A           BNE      ??RestoreSettings_2
    412              return (NoError);
   \   00000550   0600A0E1           MOV      R0,R6
   \   00000554   94DF8DE2           ADD      SP,SP,#+592
   \   00000558   ........           B        ?Subroutine16
   \                     ??RestoreSettings_1:
   \   0000055C   ........           DC32     NewLineStr
   \   00000560   ........           DC32     `?<Constant "Temperature ">`
    413          }
    414          //---------------------------------------------------------------------------

   \                                 In segment CODE, align 4, keep-with-next
    415          int PROWaterHeater::GetValue(int ValueId, int Index, float &MyRetValue,  int &DecPnt, int &Unit) {
   \                     ??GetValue:
   \   00000000   F0472DE9           PUSH     {R4-R10,LR}
   \   00000004   20409DE5           LDR      R4,[SP, #+32]
   \   00000008   24509DE5           LDR      R5,[SP, #+36]
    416              int Status = GETVAL_NO_ERR;
   \   0000000C   00C0A0E3           MOV      R12,#+0
    417          
    418              //HasPressure = true;
    419              //IsNewData = true;
    420              switch ( ValueId ) {
   \   00000010   0860A0E3           MOV      R6,#+8
   \   00000014   0570A0E3           MOV      R7,#+5
   \   00000018   0180A0E3           MOV      R8,#+1
   \   0000001C   400E51E3           CMP      R1,#+1024
   \   00000020   5FA0A013           MOVNE    R10,#+95
   \   00000024   90AD8A13           ORRNE    R10,R10,#0x2400
   \   00000028   0A005111           CMPNE    R1,R10
   \   0000002C   1500000A           BEQ      ??GetValue_2
   \   00000030   08A08AE2           ADD      R10,R10,#+8
   \   00000034   0A0051E1           CMP      R1,R10
   \   00000038   1700000A           BEQ      ??GetValue_3
   \   0000003C   01A08AE2           ADD      R10,R10,#+1
   \   00000040   0A0051E1           CMP      R1,R10
   \   00000044   1800000A           BEQ      ??GetValue_4
   \   00000048   01A08AE3           ORR      R10,R10,#0x1
   \   0000004C   0A0051E1           CMP      R1,R10
   \   00000050   2500000A           BEQ      ??GetValue_5
   \   00000054   01A08AE2           ADD      R10,R10,#+1
   \   00000058   0A0051E1           CMP      R1,R10
   \   0000005C   2800000A           BEQ      ??GetValue_6
   \   00000060   01A08AE3           ORR      R10,R10,#0x1
   \   00000064   0A0051E1           CMP      R1,R10
   \   00000068   1300000A           BEQ      ??GetValue_7
   \   0000006C   01A08AE2           ADD      R10,R10,#+1
   \   00000070   0A0051E1           CMP      R1,R10
   \   00000074   1400000A           BEQ      ??GetValue_8
   \   00000078   01A08AE3           ORR      R10,R10,#0x1
   \   0000007C   0A0051E1           CMP      R1,R10
   \   00000080   1500000A           BEQ      ??GetValue_9
   \   00000084   230000EA           B        ??GetValue_10
    421              case SVT_PRESSURE                       :
    422              case SVT_TWM_PRESSURE                   :
    423                  DecPnt     = 1;
   \                     ??GetValue_2:
   \   00000088   008084E5           STR      R8,[R4, #+0]
    424                  Unit       = PRESSURE_UNIT3;
   \   0000008C   006085E5           STR      R6,[R5, #+0]
    425                  MyRetValue = PressureValue;
   \   00000090   600190E5           LDR      R0,[R0, #+352]
   \                     ??GetValue_11:
   \   00000094   000083E5           STR      R0,[R3, #+0]
   \   00000098   230000EA           B        ??GetValue_12
    426                  break;
    427              case SVT_TWM_HEATER_INPUT_TEMP          :
    428                  DecPnt     = 1;
   \                     ??GetValue_3:
   \   0000009C   008084E5           STR      R8,[R4, #+0]
    429                  Unit       = TEMP_UNIT;
   \   000000A0   007085E5           STR      R7,[R5, #+0]
    430                  MyRetValue = InputTemperatureValue;
   \   000000A4   740190E5           LDR      R0,[R0, #+372]
   \   000000A8   F9FFFFEA           B        ??GetValue_11
    431                  break;
    432              case SVT_TWM_HEATER_OUTPUT_TEMP         :
    433                  DecPnt     = 1;
   \                     ??GetValue_4:
   \   000000AC   008084E5           STR      R8,[R4, #+0]
    434                  Unit       = TEMP_UNIT;
   \   000000B0   007085E5           STR      R7,[R5, #+0]
    435                  MyRetValue = OutputTemperatureValue;
   \   000000B4   7C0190E5           LDR      R0,[R0, #+380]
   \                     ??GetValue_13:
   \   000000B8   F5FFFFEA           B        ??GetValue_11
    436                  break;
    437              case SVT_TWM_MAN_PRESSURE               :
    438                  DecPnt     = 1;
   \                     ??GetValue_7:
   \   000000BC   008084E5           STR      R8,[R4, #+0]
    439                  Unit       = PRESSURE_UNIT3;
   \   000000C0   006085E5           STR      R6,[R5, #+0]
    440                  MyRetValue = ManualPressure;
   \   000000C4   640190E5           LDR      R0,[R0, #+356]
   \   000000C8   F1FFFFEA           B        ??GetValue_11
    441                  break;
    442              case SVT_TWM_MAN_HEATER_INPUT_TEMP      :
    443                  DecPnt     = 1;
   \                     ??GetValue_8:
   \   000000CC   008084E5           STR      R8,[R4, #+0]
    444                  Unit       = TEMP_UNIT;
   \   000000D0   007085E5           STR      R7,[R5, #+0]
    445                  MyRetValue = ManualInputTemp;
   \   000000D4   680190E5           LDR      R0,[R0, #+360]
   \   000000D8   EDFFFFEA           B        ??GetValue_11
    446                  break;
    447              case SVT_TWM_MAN_HEATER_OUTPUT_TEMP     :
    448                  DecPnt     = 1;
   \                     ??GetValue_9:
   \   000000DC   008084E5           STR      R8,[R4, #+0]
    449                  Unit       = TEMP_UNIT;
   \   000000E0   007085E5           STR      R7,[R5, #+0]
    450                  MyRetValue = ManualOutputTemp;
   \   000000E4   6C0190E5           LDR      R0,[R0, #+364]
   \   000000E8   E9FFFFEA           B        ??GetValue_11
    451                  break;
    452              case SVT_TWM_HEATER_EFFICIENCY      :
    453                  DecPnt     = 1;
   \                     ??GetValue_5:
   \   000000EC   008084E5           STR      R8,[R4, #+0]
    454                  Unit       = PERCENT_UNIT;
   \   000000F0   1010A0E3           MOV      R1,#+16
   \   000000F4   001085E5           STR      R1,[R5, #+0]
    455                  MyRetValue = MDO_Efficiency;
   \   000000F8   800190E5           LDR      R0,[R0, #+384]
   \   000000FC   000083E5           STR      R0,[R3, #+0]
   \   00000100   090000EA           B        ??GetValue_12
    456                  break;
    457          	case SVT_TWM_FUEL_TON_PER_KWH  		:
    458                  DecPnt     = 1;
   \                     ??GetValue_6:
   \   00000104   008084E5           STR      R8,[R4, #+0]
    459                  Unit       = NO_UNIT;
   \   00000108   0010A0E3           MOV      R1,#+0
   \   0000010C   001085E5           STR      R1,[R5, #+0]
    460                  MyRetValue = MDO_kWh_per_ton;
   \   00000110   840190E5           LDR      R0,[R0, #+388]
   \   00000114   DEFFFFEA           B        ??GetValue_11
    461                  break;
    462              default:
    463                  Status = PROXRefObject::GetValue(ValueId, Index, MyRetValue,  DecPnt, Unit);
   \                     ??GetValue_10:
   \   00000118   20002DE9           PUSH     {R5}
   \   0000011C   10002DE9           PUSH     {R4}
   \   00000120   ........           _BLF     ??GetValue_1,??GetValue??rA
   \   00000124   00C0A0E1           MOV      R12,R0
   \   00000128   08D08DE2           ADD      SP,SP,#+8
    464                  break;
    465              }
    466              return (Status);
   \                     ??GetValue_12:
   \   0000012C   F047BDE8           POP      {R4-R10,LR}
   \   00000130   0C00A0E1           MOV      R0,R12
   \   00000134   1EFF2FE1           BX       LR               ;; return
    467          }
    468          

   \                                 In segment CODE, align 4, keep-with-next
    469          int PROWaterHeater::GetStringValue(int ValueId, int Index, AnsiString &MyString) {
   \                     ??GetStringValue:
   \   00000000   00402DE9           PUSH     {LR}
    470              int Status = GETVAL_NO_ERR;
    471              switch ( ValueId ) {
    472              default:
    473                  Status = PROXRefObject::GetStringValue(ValueId, Index, MyString);
    474                  break;
    475              }
    476              return (Status);
   \   00000004   ........           _BLF     ??GetStringValue_1,??GetStringValue??rA
   \   00000008   ........           B        ?Subroutine17
    477          }

   \                                 In segment CODE, align 4, keep-with-next
   \                     ?Subroutine17:
   \   00000000   0040BDE8           POP      {LR}
   \   00000004   1EFF2FE1           BX       LR               ;; return
    478          
    479          

   \                                 In segment CODE, align 4, keep-with-next
    480          int PROWaterHeater::PutValue(int ValueId, int Index, AnsiString NewValue, bool Local, int *UnitId) {
   \                     ??PutValue:
   \   00000000   F0412DE9           PUSH     {R4-R8,LR}
   \   00000004   40D04DE2           SUB      SP,SP,#+64
   \   00000008   5880DDE5           LDRB     R8,[SP, #+88]
   \   0000000C   5C509DE5           LDR      R5,[SP, #+92]
   \   00000010   0040A0E1           MOV      R4,R0
   \   00000014   0160A0E1           MOV      R6,R1
   \   00000018   0270A0E1           MOV      R7,R2
   \   0000001C   0310A0E1           MOV      R1,R3
    481              int Status    = E_NO_ERR; 
   \   00000020   0020A0E3           MOV      R2,#+0
   \   00000024   00208DE5           STR      R2,[SP, #+0]
    482              int ValUnitId = NO_UNIT;
   \   00000028   04208DE5           STR      R2,[SP, #+4]
    483          
    484              switch ( ValueId ) {
   \   0000002C   690046E2           SUB      R0,R6,#+105
   \   00000030   900D40E2           SUB      R0,R0,#+9216
   \   00000034   040050E3           CMP      R0,#+4
   \   00000038   8B00008A           BHI      ??PutValue_3
   \   0000003C   012F8FE2           ADR      R2,??PutValue_1
   \   00000040   0020D2E7           LDRB     R2,[R2, R0]
   \   00000044   02F18FE0           ADD      PC,PC,R2, LSL #+2
   \                     ??PutValue_1:
   \   00000048   5470011E           DC8      +84,+112,+1,+30
   \   0000004C   39000000           DC8      +57,+0,+0,+0
    485              case SVT_TWM_MAN_PRESSURE              :
    486                  {
    487          			float NewManualPressure  = ConvertToSi(NewValue, ValUnitId = PRESSURE_UNIT3, Status, 0.0, 15.0/MH2O_TO_BAR, 0.0);
   \                     ??PutValue_4:
   \   00000050   0820A0E3           MOV      R2,#+8
   \   00000054   04208DE5           STR      R2,[SP, #+4]
   \   00000058   08008DE2           ADD      R0,SP,#+8
   \   0000005C   ........           _BLF     ??string,??string??rA
   \   00000060   0000A0E3           MOV      R0,#+0
   \   00000064   0010A0E3           MOV      R1,#+0
   \   00000068   03002DE9           PUSH     {R0,R1}
   \   0000006C   74029FE5           LDR      R0,??PutValue_5  ;; 0x485265a1
   \   00000070   74129FE5           LDR      R1,??PutValue_5+0x4  ;; 0x40631ea3
   \   00000074   03002DE9           PUSH     {R0,R1}
   \   00000078   0000A0E3           MOV      R0,#+0
   \   0000007C   0010A0E1           MOV      R1,R0
   \   00000080   03002DE9           PUSH     {R0,R1}
   \   00000084   18208DE2           ADD      R2,SP,#+24
   \   00000088   20008DE2           ADD      R0,SP,#+32
   \   0000008C   0800BDE8           POP      {R3}
   \   00000090   0810A0E3           MOV      R1,#+8
   \   00000094   ........           _BLF     ??ConvertToSi,??ConvertToSi??rA
   \   00000098   0060A0E1           MOV      R6,R0
   \   0000009C   0020A0E3           MOV      R2,#+0
   \   000000A0   0110A0E3           MOV      R1,#+1
   \   000000A4   1C008DE2           ADD      R0,SP,#+28
   \   000000A8   ........           _BLF     ??_Tidy,??_Tidy??rA
    488                      if (Status == E_NO_ERR) {
   \   000000AC   14009DE5           LDR      R0,[SP, #+20]
   \   000000B0   14D08DE2           ADD      SP,SP,#+20
   \   000000B4   000050E3           CMP      R0,#+0
   \   000000B8   7B00001A           BNE      ??PutValue_6
    489                          ManualPressure = NewManualPressure;
   \   000000BC   646184E5           STR      R6,[R4, #+356]
   \   000000C0   7C0000EA           B        ??PutValue_7
    490                      }
    491          
    492                  }
    493                  break;
    494              case SVT_TWM_MAN_HEATER_INPUT_TEMP     :
    495                  {
    496          			float NewManualInputTemp  = ConvertToSi(NewValue, ValUnitId = TEMP_UNIT, Status, 0.0, 75.0, 0.0);
   \                     ??PutValue_8:
   \   000000C4   0520A0E3           MOV      R2,#+5
   \   000000C8   04208DE5           STR      R2,[SP, #+4]
   \   000000CC   08008DE2           ADD      R0,SP,#+8
   \   000000D0   ........           _BLF     ??string,??string??rA
   \   000000D4   0000A0E3           MOV      R0,#+0
   \   000000D8   0010A0E3           MOV      R1,#+0
   \   000000DC   03002DE9           PUSH     {R0,R1}
   \   000000E0   08129FE5           LDR      R1,??PutValue_5+0x8  ;; 0x4052c000
   \   000000E4   03002DE9           PUSH     {R0,R1}
   \   000000E8   0010A0E1           MOV      R1,R0
   \   000000EC   03002DE9           PUSH     {R0,R1}
   \   000000F0   18208DE2           ADD      R2,SP,#+24
   \   000000F4   20008DE2           ADD      R0,SP,#+32
   \   000000F8   0800BDE8           POP      {R3}
   \   000000FC   0510A0E3           MOV      R1,#+5
   \   00000100   ........           _BLF     ??ConvertToSi,??ConvertToSi??rA
   \   00000104   0060A0E1           MOV      R6,R0
   \   00000108   0020A0E3           MOV      R2,#+0
   \   0000010C   0110A0E3           MOV      R1,#+1
   \   00000110   1C008DE2           ADD      R0,SP,#+28
   \   00000114   ........           _BLF     ??_Tidy,??_Tidy??rA
    497                      if (Status == E_NO_ERR) {
   \   00000118   14009DE5           LDR      R0,[SP, #+20]
   \   0000011C   14D08DE2           ADD      SP,SP,#+20
   \   00000120   000050E3           CMP      R0,#+0
   \   00000124   6000001A           BNE      ??PutValue_6
    498                          ManualInputTemp = NewManualInputTemp;
   \   00000128   686184E5           STR      R6,[R4, #+360]
   \   0000012C   610000EA           B        ??PutValue_7
    499                      }
    500          
    501                  }
    502                  break;
    503              case SVT_TWM_MAN_HEATER_OUTPUT_TEMP    :
    504                  {
    505                      float NewManualOutputTemp  = ConvertToSi(NewValue, ValUnitId = TEMP_UNIT, Status, 0.0, 150, 0.0);
   \                     ??PutValue_9:
   \   00000130   0520A0E3           MOV      R2,#+5
   \   00000134   04208DE5           STR      R2,[SP, #+4]
   \   00000138   08008DE2           ADD      R0,SP,#+8
   \   0000013C   ........           _BLF     ??string,??string??rA
   \   00000140   0000A0E3           MOV      R0,#+0
   \   00000144   0010A0E3           MOV      R1,#+0
   \   00000148   03002DE9           PUSH     {R0,R1}
   \   0000014C   A0119FE5           LDR      R1,??PutValue_5+0xC  ;; 0x4062c000
   \   00000150   03002DE9           PUSH     {R0,R1}
   \   00000154   0010A0E1           MOV      R1,R0
   \   00000158   03002DE9           PUSH     {R0,R1}
   \   0000015C   18208DE2           ADD      R2,SP,#+24
   \   00000160   20008DE2           ADD      R0,SP,#+32
   \   00000164   0800BDE8           POP      {R3}
   \   00000168   0510A0E3           MOV      R1,#+5
   \   0000016C   ........           _BLF     ??ConvertToSi,??ConvertToSi??rA
   \   00000170   0060A0E1           MOV      R6,R0
   \   00000174   0020A0E3           MOV      R2,#+0
   \   00000178   0110A0E3           MOV      R1,#+1
   \   0000017C   1C008DE2           ADD      R0,SP,#+28
   \   00000180   ........           _BLF     ??_Tidy,??_Tidy??rA
    506                      if (Status == E_NO_ERR) {
   \   00000184   14009DE5           LDR      R0,[SP, #+20]
   \   00000188   14D08DE2           ADD      SP,SP,#+20
   \   0000018C   000050E3           CMP      R0,#+0
   \   00000190   4500001A           BNE      ??PutValue_6
    507                          ManualOutputTemp = NewManualOutputTemp;
   \   00000194   6C6184E5           STR      R6,[R4, #+364]
   \   00000198   460000EA           B        ??PutValue_7
    508                      }
    509          
    510                  }
    511                  break;
    512              case SVT_TWM_HEATER_EFFICIENCY :
    513                  {
    514                      float NewMDO_Efficiency  = ConvertToSi(NewValue, ValUnitId = PERCENT_UNIT, Status, 0.0, 100.0, 0.0);
   \                     ??PutValue_10:
   \   0000019C   1020A0E3           MOV      R2,#+16
   \   000001A0   04208DE5           STR      R2,[SP, #+4]
   \   000001A4   08008DE2           ADD      R0,SP,#+8
   \   000001A8   ........           _BLF     ??string,??string??rA
   \   000001AC   0000A0E3           MOV      R0,#+0
   \   000001B0   0010A0E3           MOV      R1,#+0
   \   000001B4   03002DE9           PUSH     {R0,R1}
   \   000001B8   4014A0E3           MOV      R1,#+1073741824
   \   000001BC   591881E3           ORR      R1,R1,#0x590000
   \   000001C0   03002DE9           PUSH     {R0,R1}
   \   000001C4   0010A0E1           MOV      R1,R0
   \   000001C8   03002DE9           PUSH     {R0,R1}
   \   000001CC   18208DE2           ADD      R2,SP,#+24
   \   000001D0   20008DE2           ADD      R0,SP,#+32
   \   000001D4   0800BDE8           POP      {R3}
   \   000001D8   1010A0E3           MOV      R1,#+16
   \   000001DC   ........           _BLF     ??ConvertToSi,??ConvertToSi??rA
   \   000001E0   0060A0E1           MOV      R6,R0
   \   000001E4   0020A0E3           MOV      R2,#+0
   \   000001E8   0110A0E3           MOV      R1,#+1
   \   000001EC   1C008DE2           ADD      R0,SP,#+28
   \   000001F0   ........           _BLF     ??_Tidy,??_Tidy??rA
    515                      if (Status == E_NO_ERR) {
   \   000001F4   14009DE5           LDR      R0,[SP, #+20]
   \   000001F8   14D08DE2           ADD      SP,SP,#+20
   \   000001FC   000050E3           CMP      R0,#+0
   \   00000200   2900001A           BNE      ??PutValue_6
    516                          MDO_Efficiency = NewMDO_Efficiency;
   \   00000204   806184E5           STR      R6,[R4, #+384]
   \   00000208   2A0000EA           B        ??PutValue_7
    517                      }
    518          
    519                  }
    520                  break;
    521              case SVT_TWM_FUEL_TON_PER_KWH   :
    522                  {
    523                      float NewMDO_Ton_per_kWh  = ConvertToSi(NewValue, ValUnitId = NO_UNIT, Status, 0.0, MDO_KWH_PER_TON*1.2, 0.0);
   \                     ??PutValue_11:
   \   0000020C   08008DE2           ADD      R0,SP,#+8
   \   00000210   ........           _BLF     ??string,??string??rA
   \   00000214   0000A0E3           MOV      R0,#+0
   \   00000218   0010A0E3           MOV      R1,#+0
   \   0000021C   03002DE9           PUSH     {R0,R1}
   \   00000220   D0109FE5           LDR      R1,??PutValue_5+0x10  ;; 0x40cbde00
   \   00000224   03002DE9           PUSH     {R0,R1}
   \   00000228   0010A0E1           MOV      R1,R0
   \   0000022C   03002DE9           PUSH     {R0,R1}
   \   00000230   18208DE2           ADD      R2,SP,#+24
   \   00000234   20008DE2           ADD      R0,SP,#+32
   \   00000238   0800BDE8           POP      {R3}
   \   0000023C   ........           _BLF     ??ConvertToSi,??ConvertToSi??rA
   \   00000240   0060A0E1           MOV      R6,R0
   \   00000244   0020A0E3           MOV      R2,#+0
   \   00000248   0110A0E3           MOV      R1,#+1
   \   0000024C   1C008DE2           ADD      R0,SP,#+28
   \   00000250   ........           _BLF     ??_Tidy,??_Tidy??rA
    524                      if (Status == E_NO_ERR) {
   \   00000254   14009DE5           LDR      R0,[SP, #+20]
   \   00000258   14D08DE2           ADD      SP,SP,#+20
   \   0000025C   000050E3           CMP      R0,#+0
   \   00000260   1100001A           BNE      ??PutValue_6
    525                          MDO_kWh_per_ton = NewMDO_Ton_per_kWh;
   \   00000264   846184E5           STR      R6,[R4, #+388]
   \   00000268   120000EA           B        ??PutValue_7
    526                      }
    527          
    528                  }
    529                  break;
    530              default:
    531                  Status = PROXRefObject::PutValue(ValueId, Index, NewValue, Local, &ValUnitId);
   \                     ??PutValue_3:
   \   0000026C   24008DE2           ADD      R0,SP,#+36
   \   00000270   ........           _BLF     ??string,??string??rA
   \   00000274   04008DE2           ADD      R0,SP,#+4
   \   00000278   01002DE9           PUSH     {R0}
   \   0000027C   00012DE9           PUSH     {R8}
   \   00000280   2C308DE2           ADD      R3,SP,#+44
   \   00000284   0720A0E1           MOV      R2,R7
   \   00000288   0610A0E1           MOV      R1,R6
   \   0000028C   0400A0E1           MOV      R0,R4
   \   00000290   ........           _BLF     ??PutValue_2,??PutValue??rA
   \   00000294   08008DE5           STR      R0,[SP, #+8]
   \   00000298   0020A0E3           MOV      R2,#+0
   \   0000029C   0110A0E3           MOV      R1,#+1
   \   000002A0   2C008DE2           ADD      R0,SP,#+44
   \   000002A4   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000002A8   08D08DE2           ADD      SP,SP,#+8
    532                  break;
    533              }
    534              if ( Status == E_NO_ERR ) {
   \                     ??PutValue_6:
   \   000002AC   00009DE5           LDR      R0,[SP, #+0]
   \   000002B0   000050E3           CMP      R0,#+0
   \   000002B4   0400001A           BNE      ??PutValue_12
    535                  SetModifiedFlag();
   \                     ??PutValue_7:
   \   000002B8   A41094E5           LDR      R1,[R4, #+164]
   \   000002BC   0400A0E1           MOV      R0,R4
   \   000002C0   541091E5           LDR      R1,[R1, #+84]
   \   000002C4   0FE0A0E1           MOV      LR,PC
   \   000002C8   11FF2FE1           BX       R1
    536              }
    537              if ( UnitId ) {
   \                     ??PutValue_12:
   \   000002CC   000055E3           CMP      R5,#+0
    538                  *UnitId = ValUnitId;
   \   000002D0   04009D15           LDRNE    R0,[SP, #+4]
   \   000002D4   00008515           STRNE    R0,[R5, #+0]
    539              }
    540              return (Status);
   \   000002D8   00009DE5           LDR      R0,[SP, #+0]
   \   000002DC   40D08DE2           ADD      SP,SP,#+64
   \   000002E0   F041BDE8           POP      {R4-R8,LR}
   \   000002E4   1EFF2FE1           BX       LR               ;; return
   \                     ??PutValue_5:
   \   000002E8   A1655248           DC32     0x485265a1
   \   000002EC   A31E6340           DC32     0x40631ea3
   \   000002F0   00C05240           DC32     0x4052c000
   \   000002F4   00C06240           DC32     0x4062c000
   \   000002F8   00DECB40           DC32     0x40cbde00
    541          }
    542          
    543          
    544          
    545          
    546          
    547          

   \                                 In segment CODE, align 4, keep-with-next
    548          int PROWaterHeater::ReceiveData(U8 *data) {
   \                     ??ReceiveData:
   \   00000000   20D04DE2           SUB      SP,SP,#+32
    549              int ErrorStatus = E_OK;
    550              ANPRO10_CommandHeading *pCH = (ANPRO10_CommandHeading *)data;
    551              switch ( pCH->CommandNo ) {
   \   00000004   0120D1E5           LDRB     R2,[R1, #+1]
   \   00000008   0030D1E5           LDRB     R3,[R1, #+0]
   \   0000000C   022483E1           ORR      R2,R3,R2, LSL #+8
   \   00000010   652052E2           SUBS     R2,R2,#+101
   \   00000014   0200000A           BEQ      ??ReceiveData_1
   \   00000018   012052E2           SUBS     R2,R2,#+1
   \   0000001C   2A00000A           BEQ      ??ReceiveData_2
   \   00000020   5C0000EA           B        ??ReceiveData_3
    552              case CMD_GENERIC_REALTIME_DATA:
    553                  {
    554                      ANPRO10_COMMAND_2150  *pData = (ANPRO10_COMMAND_2150 *)data;
    555                      HWFailure               = pData->HWFailure;
   \                     ??ReceiveData_1:
   \   00000024   1420D1E5           LDRB     R2,[R1, #+20]
    556                      IsNewData               = pData->IsNewData;
    557                      PressureValue           = pData->PressureValue;
   \   00000028   0D30A0E1           MOV      R3,SP
   \   0000002C   3C20C0E5           STRB     R2,[R0, #+60]
   \   00000030   1520D1E5           LDRB     R2,[R1, #+21]
   \   00000034   E020C0E5           STRB     R2,[R0, #+224]
   \   00000038   0020A0E3           MOV      R2,#+0
   \                     ??ReceiveData_4:
   \   0000003C   08C081E2           ADD      R12,R1,#+8
   \   00000040   0CC0D2E7           LDRB     R12,[R2, +R12]
   \   00000044   03C0C2E7           STRB     R12,[R2, +R3]
   \   00000048   012082E2           ADD      R2,R2,#+1
   \   0000004C   040052E3           CMP      R2,#+4
   \   00000050   F9FFFFBA           BLT      ??ReceiveData_4
   \   00000054   00209DE5           LDR      R2,[SP, #+0]
    558                      InputTemperatureValue   = pData->InputTemperatureValue;
   \   00000058   04308DE2           ADD      R3,SP,#+4
   \   0000005C   602180E5           STR      R2,[R0, #+352]
   \   00000060   0020A0E3           MOV      R2,#+0
   \                     ??ReceiveData_5:
   \   00000064   0CC081E2           ADD      R12,R1,#+12
   \   00000068   0CC0D2E7           LDRB     R12,[R2, +R12]
   \   0000006C   03C0C2E7           STRB     R12,[R2, +R3]
   \   00000070   012082E2           ADD      R2,R2,#+1
   \   00000074   040052E3           CMP      R2,#+4
   \   00000078   F9FFFFBA           BLT      ??ReceiveData_5
   \   0000007C   04209DE5           LDR      R2,[SP, #+4]
    559                      OutputTemperatureValue  = pData->OutputTemperatureValue;
   \   00000080   08308DE2           ADD      R3,SP,#+8
   \   00000084   742180E5           STR      R2,[R0, #+372]
   \   00000088   0020A0E3           MOV      R2,#+0
   \                     ??ReceiveData_6:
   \   0000008C   10C081E2           ADD      R12,R1,#+16
   \   00000090   0CC0D2E7           LDRB     R12,[R2, +R12]
   \   00000094   03C0C2E7           STRB     R12,[R2, +R3]
   \   00000098   012082E2           ADD      R2,R2,#+1
   \   0000009C   040052E3           CMP      R2,#+4
   \   000000A0   F9FFFFBA           BLT      ??ReceiveData_6
   \   000000A4   08209DE5           LDR      R2,[SP, #+8]
   \   000000A8   7C2180E5           STR      R2,[R0, #+380]
    560                      HasPressure             = pData->HasPressure;
   \   000000AC   1620D1E5           LDRB     R2,[R1, #+22]
   \   000000B0   5C21C0E5           STRB     R2,[R0, #+348]
    561                      HasInputTemperature     = pData->HasInputTemperature;
   \   000000B4   1720D1E5           LDRB     R2,[R1, #+23]
   \   000000B8   7021C0E5           STRB     R2,[R0, #+368]
    562                      HasOutputTemperature    = pData->HasOutputTemperature;
   \   000000BC   1810D1E5           LDRB     R1,[R1, #+24]
   \   000000C0   7811C0E5           STRB     R1,[R0, #+376]
    563                      ErrorStatus             = E_OK;
   \                     ??ReceiveData_7:
   \   000000C4   0000A0E3           MOV      R0,#+0
   \   000000C8   330000EA           B        ??ReceiveData_8
    564                  }
    565                  break;
    566              case CMD_GENERIC_STATIC_DATA:
    567                  {
    568                      ANPRO10_COMMAND_2151    *pData = (ANPRO10_COMMAND_2151 *)data;
    569                      ManualPressure          = pData->ManualPressure     ;
   \                     ??ReceiveData_2:
   \   000000CC   0020A0E3           MOV      R2,#+0
   \   000000D0   0C308DE2           ADD      R3,SP,#+12
   \                     ??ReceiveData_9:
   \   000000D4   08C081E2           ADD      R12,R1,#+8
   \   000000D8   0CC0D2E7           LDRB     R12,[R2, +R12]
   \   000000DC   03C0C2E7           STRB     R12,[R2, +R3]
   \   000000E0   012082E2           ADD      R2,R2,#+1
   \   000000E4   040052E3           CMP      R2,#+4
   \   000000E8   F9FFFFBA           BLT      ??ReceiveData_9
   \   000000EC   0C209DE5           LDR      R2,[SP, #+12]
    570                      ManualInputTemp         = pData->ManualInputTemp    ;
   \   000000F0   10308DE2           ADD      R3,SP,#+16
   \   000000F4   642180E5           STR      R2,[R0, #+356]
   \   000000F8   0020A0E3           MOV      R2,#+0
   \                     ??ReceiveData_10:
   \   000000FC   0CC081E2           ADD      R12,R1,#+12
   \   00000100   0CC0D2E7           LDRB     R12,[R2, +R12]
   \   00000104   03C0C2E7           STRB     R12,[R2, +R3]
   \   00000108   012082E2           ADD      R2,R2,#+1
   \   0000010C   040052E3           CMP      R2,#+4
   \   00000110   F9FFFFBA           BLT      ??ReceiveData_10
   \   00000114   10209DE5           LDR      R2,[SP, #+16]
    571                      ManualOutputTemp        = pData->ManualOutputTemp   ;
   \   00000118   14308DE2           ADD      R3,SP,#+20
   \   0000011C   682180E5           STR      R2,[R0, #+360]
   \   00000120   0020A0E3           MOV      R2,#+0
   \                     ??ReceiveData_11:
   \   00000124   10C081E2           ADD      R12,R1,#+16
   \   00000128   0CC0D2E7           LDRB     R12,[R2, +R12]
   \   0000012C   03C0C2E7           STRB     R12,[R2, +R3]
   \   00000130   012082E2           ADD      R2,R2,#+1
   \   00000134   040052E3           CMP      R2,#+4
   \   00000138   F9FFFFBA           BLT      ??ReceiveData_11
   \   0000013C   14209DE5           LDR      R2,[SP, #+20]
    572                      MDO_Efficiency          = pData->MDO_Efficiency     ;
   \   00000140   18308DE2           ADD      R3,SP,#+24
   \   00000144   6C2180E5           STR      R2,[R0, #+364]
   \   00000148   0020A0E3           MOV      R2,#+0
   \                     ??ReceiveData_12:
   \   0000014C   14C081E2           ADD      R12,R1,#+20
   \   00000150   0CC0D2E7           LDRB     R12,[R2, +R12]
   \   00000154   03C0C2E7           STRB     R12,[R2, +R3]
   \   00000158   012082E2           ADD      R2,R2,#+1
   \   0000015C   040052E3           CMP      R2,#+4
   \   00000160   F9FFFFBA           BLT      ??ReceiveData_12
   \   00000164   18209DE5           LDR      R2,[SP, #+24]
    573                      MDO_kWh_per_ton         = pData->MDO_kWh_per_ton    ;
   \   00000168   1C308DE2           ADD      R3,SP,#+28
   \   0000016C   802180E5           STR      R2,[R0, #+384]
   \   00000170   0020A0E3           MOV      R2,#+0
   \                     ??ReceiveData_13:
   \   00000174   18C081E2           ADD      R12,R1,#+24
   \   00000178   0CC0D2E7           LDRB     R12,[R2, +R12]
   \   0000017C   03C0C2E7           STRB     R12,[R2, +R3]
   \   00000180   012082E2           ADD      R2,R2,#+1
   \   00000184   040052E3           CMP      R2,#+4
   \   00000188   F9FFFFBA           BLT      ??ReceiveData_13
   \   0000018C   1C109DE5           LDR      R1,[SP, #+28]
   \   00000190   841180E5           STR      R1,[R0, #+388]
    574                      ErrorStatus             = E_OK;
   \   00000194   CAFFFFEA           B        ??ReceiveData_7
    575                  }
    576                  break;
    577              default:
    578                  ErrorStatus = E_UNKNOWN_COMMAND;
   \                     ??ReceiveData_3:
   \   00000198   0100A0E3           MOV      R0,#+1
    579                  break;
    580              }
    581              return (ErrorStatus);
   \                     ??ReceiveData_8:
   \   0000019C   20D08DE2           ADD      SP,SP,#+32       ;; stack cleaning
   \   000001A0   1EFF2FE1           BX       LR               ;; return
    582          }
    583          //---------------------------------------------------------------------------
    584          
    585          

   \                                 In segment CODE, align 4, keep-with-next
    586          int PROWaterHeater::SendData(U16 cmd) {
   \                     ??SendData:
   \   00000000   00402DE9           PUSH     {LR}
   \   00000004   44D04DE2           SUB      SP,SP,#+68
    587              int ErrorStatus = E_OK;
    588              switch ( cmd ) {
   \   00000008   0E20A0E3           MOV      R2,#+14
   \   0000000C   FF30A0E3           MOV      R3,#+255
   \   00000010   00C0A0E3           MOV      R12,#+0
   \   00000014   651051E2           SUBS     R1,R1,#+101
   \   00000018   0200000A           BEQ      ??SendData_1
   \   0000001C   011051E2           SUBS     R1,R1,#+1
   \   00000020   3900000A           BEQ      ??SendData_2
   \   00000024   740000EA           B        ??SendData_3
    589              case CMD_GENERIC_REALTIME_DATA:
    590                  {
    591                      QueueANPRO10_COMMAND_2150 Cmd;
    592                      Cmd.TxInfo.Port                 = NULL;
   \                     ??SendData_1:
   \   00000028   00C08DE5           STR      R12,[SP, #+0]
    593                      Cmd.TxInfo.rxAddr               = DEVICE_BROADCAST_ADDR;
   \   0000002C   0430CDE5           STRB     R3,[SP, #+4]
    594                      Cmd.TxInfo.rxId                 = DEVICE_BROADCAST_TXU;
   \   00000030   0520CDE5           STRB     R2,[SP, #+5]
    595                      Cmd.Data.ObjectId               = IDNumber;
   \   00000034   9C1090E5           LDR      R1,[R0, #+156]
    596                      Cmd.Data.ndb                    = sizeof(Cmd) - sizeof(QueueANPRO10_CommandHeading);
   \   00000038   1520A0E3           MOV      R2,#+21
   \   0000003C   0A10CDE5           STRB     R1,[SP, #+10]
   \   00000040   2114A0E1           LSR      R1,R1,#+8
   \   00000044   0B10CDE5           STRB     R1,[SP, #+11]
   \   00000048   2114A0E1           LSR      R1,R1,#+8
   \   0000004C   0C10CDE5           STRB     R1,[SP, #+12]
   \   00000050   2114A0E1           LSR      R1,R1,#+8
   \   00000054   0D10CDE5           STRB     R1,[SP, #+13]
   \   00000058   B820CDE1           STRH     R2,[SP, #+8]
    597                      Cmd.Data.CommandNo              = CMD_GENERIC_REALTIME_DATA;
   \   0000005C   6520A0E3           MOV      R2,#+101
   \   00000060   B620CDE1           STRH     R2,[SP, #+6]
    598                      Cmd.Data.HWFailure              = HWFailure;
   \   00000064   3C20D0E5           LDRB     R2,[R0, #+60]
    599                      Cmd.Data.IsNewData              = IsNewData;
    600                      Cmd.Data.PressureValue          = PressureValue;
   \   00000068   0010A0E3           MOV      R1,#+0
   \   0000006C   1A20CDE5           STRB     R2,[SP, #+26]
   \   00000070   E020D0E5           LDRB     R2,[R0, #+224]
   \   00000074   1B20CDE5           STRB     R2,[SP, #+27]
   \   00000078   0E208DE2           ADD      R2,SP,#+14
   \                     ??SendData_4:
   \   0000007C   583F80E2           ADD      R3,R0,#+352
   \   00000080   0330D1E7           LDRB     R3,[R1, +R3]
   \   00000084   0230C1E7           STRB     R3,[R1, +R2]
   \   00000088   011081E2           ADD      R1,R1,#+1
   \   0000008C   040051E3           CMP      R1,#+4
   \   00000090   F9FFFFBA           BLT      ??SendData_4
    601                      Cmd.Data.InputTemperatureValue  = InputTemperatureValue;
   \   00000094   0010A0E3           MOV      R1,#+0
   \   00000098   12208DE2           ADD      R2,SP,#+18
   \                     ??SendData_5:
   \   0000009C   5D3F80E2           ADD      R3,R0,#+372
   \   000000A0   0330D1E7           LDRB     R3,[R1, +R3]
   \   000000A4   0230C1E7           STRB     R3,[R1, +R2]
   \   000000A8   011081E2           ADD      R1,R1,#+1
   \   000000AC   040051E3           CMP      R1,#+4
   \   000000B0   F9FFFFBA           BLT      ??SendData_5
    602                      Cmd.Data.OutputTemperatureValue = OutputTemperatureValue;
   \   000000B4   0010A0E3           MOV      R1,#+0
   \   000000B8   16208DE2           ADD      R2,SP,#+22
   \                     ??SendData_6:
   \   000000BC   5F3F80E2           ADD      R3,R0,#+380
   \   000000C0   0330D1E7           LDRB     R3,[R1, +R3]
   \   000000C4   0230C1E7           STRB     R3,[R1, +R2]
   \   000000C8   011081E2           ADD      R1,R1,#+1
   \   000000CC   040051E3           CMP      R1,#+4
   \   000000D0   F9FFFFBA           BLT      ??SendData_6
    603                      Cmd.Data.HasPressure            = HasPressure;
   \   000000D4   5C21D0E5           LDRB     R2,[R0, #+348]
   \   000000D8   1C20CDE5           STRB     R2,[SP, #+28]
    604                      Cmd.Data.HasInputTemperature    = HasInputTemperature;
   \   000000DC   7021D0E5           LDRB     R2,[R0, #+368]
   \   000000E0   1D20CDE5           STRB     R2,[SP, #+29]
    605                      Cmd.Data.HasOutputTemperature   = HasOutputTemperature;
   \   000000E4   7801D0E5           LDRB     R0,[R0, #+376]
   \   000000E8   1E00CDE5           STRB     R0,[SP, #+30]
    606          
    607                      bool sent = ANPRO10SendNormal(&Cmd);
    608                      if ( !sent ) ErrorStatus =  E_QUEUE_FULL;
   \   000000EC   0D00A0E1           MOV      R0,SP
   \   000000F0   ........           _BLF     ??ANPRO10SendNormal,??ANPRO10SendNormal??rA
   \   000000F4   000050E3           CMP      R0,#+0
   \   000000F8   0100001A           BNE      ??SendData_7
   \                     ??SendData_8:
   \   000000FC   0300A0E3           MOV      R0,#+3
   \   00000100   3E0000EA           B        ??SendData_9
    609                      else ErrorStatus =  E_OK;
   \                     ??SendData_7:
   \   00000104   0000A0E3           MOV      R0,#+0
   \   00000108   3C0000EA           B        ??SendData_9
    610                  }
    611                  break;
    612              case CMD_GENERIC_STATIC_DATA:
    613                  {
    614                      QueueANPRO10_COMMAND_2151 Cmd;
    615                      Cmd.TxInfo.Port                 = NULL;
   \                     ??SendData_2:
   \   0000010C   20C08DE5           STR      R12,[SP, #+32]
    616                      Cmd.TxInfo.rxAddr               = DEVICE_BROADCAST_ADDR;
   \   00000110   2430CDE5           STRB     R3,[SP, #+36]
    617                      Cmd.TxInfo.rxId                 = DEVICE_BROADCAST_TXU;
   \   00000114   2520CDE5           STRB     R2,[SP, #+37]
    618                      Cmd.Data.ObjectId               = IDNumber;
   \   00000118   9C1090E5           LDR      R1,[R0, #+156]
    619                      Cmd.Data.ndb                    = sizeof(Cmd) - sizeof(QueueANPRO10_CommandHeading);
   \   0000011C   1820A0E3           MOV      R2,#+24
   \   00000120   2A10CDE5           STRB     R1,[SP, #+42]
   \   00000124   2114A0E1           LSR      R1,R1,#+8
   \   00000128   2B10CDE5           STRB     R1,[SP, #+43]
   \   0000012C   2114A0E1           LSR      R1,R1,#+8
   \   00000130   2C10CDE5           STRB     R1,[SP, #+44]
   \   00000134   2114A0E1           LSR      R1,R1,#+8
   \   00000138   2D10CDE5           STRB     R1,[SP, #+45]
   \   0000013C   B822CDE1           STRH     R2,[SP, #+40]
    620                      Cmd.Data.CommandNo              = CMD_GENERIC_STATIC_DATA;
   \   00000140   6620A0E3           MOV      R2,#+102
   \   00000144   B622CDE1           STRH     R2,[SP, #+38]
    621                      Cmd.Data.ManualPressure         = ManualPressure;  
   \   00000148   0010A0E3           MOV      R1,#+0
   \   0000014C   2E208DE2           ADD      R2,SP,#+46
   \                     ??SendData_10:
   \   00000150   593F80E2           ADD      R3,R0,#+356
   \   00000154   0330D1E7           LDRB     R3,[R1, +R3]
   \   00000158   0230C1E7           STRB     R3,[R1, +R2]
   \   0000015C   011081E2           ADD      R1,R1,#+1
   \   00000160   040051E3           CMP      R1,#+4
   \   00000164   F9FFFFBA           BLT      ??SendData_10
    622                      Cmd.Data.ManualInputTemp        = ManualInputTemp; 
   \   00000168   0010A0E3           MOV      R1,#+0
   \   0000016C   32208DE2           ADD      R2,SP,#+50
   \                     ??SendData_11:
   \   00000170   5A3F80E2           ADD      R3,R0,#+360
   \   00000174   0330D1E7           LDRB     R3,[R1, +R3]
   \   00000178   0230C1E7           STRB     R3,[R1, +R2]
   \   0000017C   011081E2           ADD      R1,R1,#+1
   \   00000180   040051E3           CMP      R1,#+4
   \   00000184   F9FFFFBA           BLT      ??SendData_11
    623                      Cmd.Data.ManualOutputTemp       = ManualOutputTemp;
   \   00000188   0010A0E3           MOV      R1,#+0
   \   0000018C   36208DE2           ADD      R2,SP,#+54
   \                     ??SendData_12:
   \   00000190   5B3F80E2           ADD      R3,R0,#+364
   \   00000194   0330D1E7           LDRB     R3,[R1, +R3]
   \   00000198   0230C1E7           STRB     R3,[R1, +R2]
   \   0000019C   011081E2           ADD      R1,R1,#+1
   \   000001A0   040051E3           CMP      R1,#+4
   \   000001A4   F9FFFFBA           BLT      ??SendData_12
    624                      Cmd.Data.MDO_Efficiency         = MDO_Efficiency;
   \   000001A8   0010A0E3           MOV      R1,#+0
   \   000001AC   3A208DE2           ADD      R2,SP,#+58
   \                     ??SendData_13:
   \   000001B0   603F80E2           ADD      R3,R0,#+384
   \   000001B4   0330D1E7           LDRB     R3,[R1, +R3]
   \   000001B8   0230C1E7           STRB     R3,[R1, +R2]
   \   000001BC   011081E2           ADD      R1,R1,#+1
   \   000001C0   040051E3           CMP      R1,#+4
   \   000001C4   F9FFFFBA           BLT      ??SendData_13
    625                      Cmd.Data.MDO_kWh_per_ton         = MDO_kWh_per_ton      ;
   \   000001C8   0010A0E3           MOV      R1,#+0
   \   000001CC   3E208DE2           ADD      R2,SP,#+62
   \                     ??SendData_14:
   \   000001D0   613F80E2           ADD      R3,R0,#+388
   \   000001D4   0330D1E7           LDRB     R3,[R1, +R3]
   \   000001D8   0230C1E7           STRB     R3,[R1, +R2]
   \   000001DC   011081E2           ADD      R1,R1,#+1
   \   000001E0   040051E3           CMP      R1,#+4
   \   000001E4   F9FFFFBA           BLT      ??SendData_14
    626                      bool sent = ANPRO10SendNormal(&Cmd);
    627                      if ( !sent ) ErrorStatus =  E_QUEUE_FULL;
   \   000001E8   20008DE2           ADD      R0,SP,#+32
   \   000001EC   ........           _BLF     ??ANPRO10SendNormal,??ANPRO10SendNormal??rA
   \   000001F0   000050E3           CMP      R0,#+0
   \   000001F4   C2FFFF1A           BNE      ??SendData_7
   \   000001F8   BFFFFFEA           B        ??SendData_8
    628                      else ErrorStatus =  E_OK;
    629                  }
    630                  break;
    631              default:
    632                  ErrorStatus =  E_UNKNOWN_COMMAND;
   \                     ??SendData_3:
   \   000001FC   0100A0E3           MOV      R0,#+1
    633                  break;
    634              }
    635              return (ErrorStatus);
   \                     ??SendData_9:
   \   00000200   44D08DE2           ADD      SP,SP,#+68
   \   00000204                      REQUIRE ?Subroutine17
   \   00000204                      ;; // Fall through to label ?Subroutine17
    636          }

   \                                 In segment DIFUNCT, align 4, keep-with-next, root
   \   00000000                      REQUIRE ?call_ctors
   \   00000000   ........           DC32    ??__sti__routine

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "0x%0x">`:
   \   00000000   307825307800       DC8 "0x%0x"
   \   00000006   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "Water Heater ">`:
   \   00000000   576174657220       DC8 "Water Heater "
   \              486561746572
   \              2000        
   \   0000000E   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "Temperature ">`:
   \   00000000   54656D706572       DC8 "Temperature "
   \              617475726520
   \              00          
   \   0000000D   000000             DC8 0, 0, 0
   \   00000010   3A0A556E6B6E       DC8 ":\012Unknown error started at line:"
   \              6F776E206572
   \              726F72207374
   \              617274656420
   \              6174206C696E
   \              653A00      
   \   00000031   000000             DC8 0, 0, 0
   \   00000034   3A0A54686520       DC8 ":\012The keyword "
   \              6B6579776F72
   \              642000      
   \   00000043   00                 DC8 0
   \   00000044   206973206E6F       DC8 " is not allowed here!! Line:"
   \              7420616C6C6F
   \              776564206865
   \              72652121204C
   \              696E653A00  
   \   00000061   000000             DC8 0, 0, 0
   \   00000064   3A0A53656E73       DC8 ":\012Sensor Id "
   \              6F7220496420
   \              00          
   \   00000071   000000             DC8 0, 0, 0
   \   00000074   206973206E6F       DC8 " is not found!! Line:"
   \              7420666F756E
   \              642121204C69
   \              6E653A00    
   \   0000008A   0000               DC8 0, 0

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs PROWaterHeater &PROWaterHeater::new PROWaterHeater(int, bool)
   \                     `??new PROWaterHeater`:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
   \   0000000C   650FA0E3           MOV      R0,#+404
   \   00000010   ........           _BLF     `??operator new`,`??operator new??rA`
   \   00000014   000050E3           CMP      R0,#+0
   \   00000018   0200000A           BEQ      `??new PROWaterHeater_1`
   \   0000001C   0520A0E1           MOV      R2,R5
   \   00000020   0410A0E1           MOV      R1,R4
   \   00000024   ........           BL       ??PROWaterHeater
   \                     `??new PROWaterHeater_1`:
   \   00000028   3040BDE8           POP      {R4,R5,LR}
   \   0000002C   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   static __??Code32?? __intrinsic __code __interwork __atpcs void __sti__routine()
   \                     ??__sti__routine:
   \   00000000   31402DE9           PUSH     {R0,R4,R5,LR}
   \   00000004   ........           LDR      R4,??DataTable4  ;; ??ObjectSet
   \   00000008   48509FE5           LDR      R5,??__sti__routine_1  ;; ?_0
   \   0000000C   180084E2           ADD      R0,R4,#+24
   \   00000010   ........           _BLF     ??_Zero,??_Zero??rA
   \   00000014   0500A0E1           MOV      R0,R5
   \   00000018   ........           _BLF     __record_needed_destruction,??__record_needed_destruction??rA
   \   0000001C   0110A0E3           MOV      R1,#+1
   \   00000020   0D00A0E1           MOV      R0,SP
   \   00000024   ........           _BLF     __data_memzero,??__data_memzero??rA
   \   00000028   0400A0E1           MOV      R0,R4
   \   0000002C   ........           _BLF     ??_Clear,??_Clear??rA
   \   00000030   0000DDE5           LDRB     R0,[SP, #+0]
   \   00000034   1400C4E5           STRB     R0,[R4, #+20]
   \   00000038   0C0085E2           ADD      R0,R5,#+12
   \   0000003C   ........           _BLF     __record_needed_destruction,??__record_needed_destruction??rA
   \   00000040   240084E2           ADD      R0,R4,#+36
   \   00000044   ........           _BLF     ??_Zero,??_Zero??rA
   \   00000048   180085E2           ADD      R0,R5,#+24
   \   0000004C   ........           _BLF     __record_needed_destruction,??__record_needed_destruction??rA
   \   00000050   3140BDE8           POP      {R0,R4,R5,LR}
   \   00000054   1EFF2FE1           BX       LR               ;; return
   \                     ??__sti__routine_1:
   \   00000058   ........           DC32     ?_0

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable2:
   \   00000000   ........           DC32     ??__vtbl

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable4:
   \   00000000   ........           DC32     ??ObjectSet

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable5:
   \   00000000   ........           DC32     CrLfStr

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable6:
   \   00000000   ........           DC32     TabStr1

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable7:
   \   00000000   ........           DC32     `?<Constant "0x%0x">`

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable8:
   \   00000000   ........           DC32     ??npos

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable12:
   \   00000000   ........           DC32     ??PressLim_mBar

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable13:
   \   00000000   8C4B55DA           DC32     0xffffffffda554b8c

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable14:
   \   00000000   E21AB93F           DC32     0x3fb91ae2

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable15:
   \   00000000   ........           DC32     ??ObjectSet

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable16:
   \   00000000   ........           DC32     CrLfStr

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable17:
   \   00000000   ........           DC32     TabStr1

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable18:
   \   00000000   ........           DC32     `?<Constant "0x%0x">`

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable19:
   \   00000000   ........           DC32     ??npos
    637          //---------------------------------------------------------------------------
    638          
    639          

   Maximum stack usage in bytes:

     Function                       CSTACK
     --------                       ------
     PROWaterHeater::Calculate()       16
     PROWaterHeater::GetStringValue(int, int, AnsiString &)
                                        4
     PROWaterHeater::GetValue(int, int, float &, int &, int &)
                                       40
     PROWaterHeater::Initiate(int, bool)
                                       24
     PROWaterHeater::LoadConfigFromFile(TSNConfigString &)
                                      300
     PROWaterHeater::PROWaterHeater(int, bool)
                                       16
     PROWaterHeater::PutValue(int, int, AnsiString, bool, int *)
                                      112
     PROWaterHeater::ReceiveData(unsigned char *)
                                       32
     PROWaterHeater::RestoreSettings(TSNConfigString *)
                                      628
     PROWaterHeater::SaveSettings(TSNConfigString *)
                                     1180
     PROWaterHeater::SendData(unsigned short)
                                       72
     PROWaterHeater::WriteConfigToFile(TSNConfigString &)
                                     1212
     PROWaterHeater::new PROWaterHeater(int, bool)
                                       12
     PROWaterHeater::~PROWaterHeater()
                                       16
     _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::_Erase(_Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::_Nodeptr)
                                       16
     _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::_Insert(bool, _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::_Nodeptr, PRogramObjectBase *)
                                       24
     _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::_Lbound(PRogramObjectBase *) const
                                        0
     _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::_Ubound(PRogramObjectBase *) const
                                        0
     _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::clear()
                                        8
     _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::equal_range(PRogramObjectBase *)
                                       28
     _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::erase(PRogramObjectBase *)
                                       24
     _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::erase(_Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::iterator, _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::iterator)
                                       20
     _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::insert(PRogramObjectBase *)
                                       44
     _Tree_algobase<allocator<void>>::_Clear()
                                        0
     _Tree_algobase<allocator<void>>::_DecP(_Tree_algobase<allocator<void>>::_Genptr)
                                        0
     _Tree_algobase<allocator<void>>::_Erase(_Tree_algobase<allocator<void>>::_Genptr)
                                       32
     _Tree_algobase<allocator<void>>::_IncP(_Tree_algobase<allocator<void>>::_Genptr)
                                        0
     _Tree_algobase<allocator<void>>::_Insert(bool, _Tree_algobase<allocator<void>>::_Genptr, _Tree_algobase<allocator<void>>::_Genptr)
                                       20
     _Tree_algobase<allocator<void>>::_Lrotate(_Tree_algobase<allocator<void>>::_Genptr)
                                        0
     _Tree_algobase<allocator<void>>::_Rrotate(_Tree_algobase<allocator<void>>::_Genptr)
                                        0
     _Vector_impl<AnalogInput *, allocator<AnalogInput *>>::_Insert(AnalogInput **, AnalogInput * const &)
                                       16
     _Vector_impl<AnalogInput *, allocator<AnalogInput *>>::_Make_room(AnalogInput **, unsigned int)
                                       32
     _Vector_impl<AnalogInput *, allocator<AnalogInput *>>::_Push_back0(AnalogInput *)
                                        8
     _Vector_impl<PROWaterHeater *, allocator<PROWaterHeater *>>::_Insert(PROWaterHeater **, PROWaterHeater * const &)
                                       16
     _Vector_impl<PROWaterHeater *, allocator<PROWaterHeater *>>::_Make_room(PROWaterHeater **, unsigned int)
                                       32
     _Vector_impl<PROWaterHeater *, allocator<PROWaterHeater *>>::_Push_back0(PROWaterHeater *)
                                        8
     _Vector_impl<PROWaterHeater *, allocator<PROWaterHeater *>>::_Tidy0()
                                        4
     _Vector_impl<PRogramObjectBase *, allocator<PRogramObjectBase *>>::_Insert(PRogramObjectBase **, PRogramObjectBase * const &)
                                       16
     _Vector_impl<PRogramObjectBase *, allocator<PRogramObjectBase *>>::_Make_room(PRogramObjectBase **, unsigned int)
                                       32
     _Vector_impl<PRogramObjectBase *, allocator<PRogramObjectBase *>>::_Push_back0(PRogramObjectBase *)
                                        8
     _Vector_impl<PRogramObjectBase *, allocator<PRogramObjectBase *>>::_Tidy0()
                                        4
     _Vector_value<allocator<void>>::_Zero()
                                        0
     __sti__routine()                  16
     operator+(string const &, char const *)
                                       44
     operator+(string const &, string const &)
                                       40
     set<PRogramObjectBase *>::~set()
                                        4
     string::string(string const &)    12
     vector<PROWaterHeater *>::~vector()
                                        8
     vector<PRogramObjectBase *>::~vector()
                                        8


   Segment part sizes:

     Function/Label                 Bytes
     --------------                 -----
     string::string(string const &)   64
     _Tree_algobase<allocator<void>>::_DecP(_Tree_algobase<allocator<void>>::_Genptr)
                                     100
     _Tree_algobase<allocator<void>>::_IncP(_Tree_algobase<allocator<void>>::_Genptr)
                                      92
     _Tree_algobase<allocator<void>>::_Clear()
                                      36
     _Tree_algobase<allocator<void>>::_Rrotate(_Tree_algobase<allocator<void>>::_Genptr)
                                      84
     _Tree_algobase<allocator<void>>::_Lrotate(_Tree_algobase<allocator<void>>::_Genptr)
                                      84
     _Tree_algobase<allocator<void>>::_Erase(_Tree_algobase<allocator<void>>::_Genptr)
                                     804
     _Tree_algobase<allocator<void>>::_Insert(bool, _Tree_algobase<allocator<void>>::_Genptr, _Tree_algobase<allocator<void>>::_Genptr)
                                     356
     _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::insert(PRogramObjectBase *)
                                     200
     _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::erase(_Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::iterator, _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::iterator)
                                     108
     _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::erase(PRogramObjectBase *)
                                      84
     _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::clear()
                                      32
     _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::equal_range(PRogramObjectBase *)
                                      76
     _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::_Erase(_Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::_Nodeptr)
                                      68
     _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::_Insert(bool, _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::_Nodeptr, PRogramObjectBase *)
                                      96
     _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::_Lbound(PRogramObjectBase *) const
                                      40
     _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::_Ubound(PRogramObjectBase *) const
                                      40
     set<PRogramObjectBase *>::~set()
                                      16
     _Vector_value<allocator<void>>::_Zero()
                                      20
     _Vector_impl<PRogramObjectBase *, allocator<PRogramObjectBase *>>::_Tidy0()
                                      36
     _Vector_impl<PROWaterHeater *, allocator<PROWaterHeater *>>::_Tidy0()
                                      36
     _Vector_impl<PRogramObjectBase *, allocator<PRogramObjectBase *>>::_Insert(PRogramObjectBase **, PRogramObjectBase * const &)
                                      72
     _Vector_impl<PROWaterHeater *, allocator<PROWaterHeater *>>::_Insert(PROWaterHeater **, PROWaterHeater * const &)
                                      72
     _Vector_impl<AnalogInput *, allocator<AnalogInput *>>::_Insert(AnalogInput **, AnalogInput * const &)
                                      72
     _Vector_impl<PROWaterHeater *, allocator<PROWaterHeater *>>::_Make_room(PROWaterHeater **, unsigned int)
                                     232
     _Vector_impl<AnalogInput *, allocator<AnalogInput *>>::_Make_room(AnalogInput **, unsigned int)
                                     244
     _Vector_impl<PRogramObjectBase *, allocator<PRogramObjectBase *>>::_Make_room(PRogramObjectBase **, unsigned int)
                                     232
     _Vector_impl<PRogramObjectBase *, allocator<PRogramObjectBase *>>::_Push_back0(PRogramObjectBase *)
                                      72
     _Vector_impl<AnalogInput *, allocator<AnalogInput *>>::_Push_back0(AnalogInput *)
                                      72
     _Vector_impl<PROWaterHeater *, allocator<PROWaterHeater *>>::_Push_back0(PROWaterHeater *)
                                      72
     vector<PROWaterHeater *>::~vector()
                                      28
     vector<PRogramObjectBase *>::~vector()
                                      28
     operator+(string const &, string const &)
                                      88
     operator+(string const &, char const *)
                                      92
     ?_0                              36
     PROWaterHeater::ObjectSet        48
     PROWaterHeater::PROWaterHeater(int, bool)
                                      56
     ?Subroutine15                     8
     PROWaterHeater::~PROWaterHeater()
                                     100
     PROWaterHeater::Initiate(int, bool)
                                     184
     PROWaterHeater::WriteConfigToFile(TSNConfigString &)
                                    2048
     ?Subroutine16                    12
     PROWaterHeater::LoadConfigFromFile(TSNConfigString &)
                                    2028
     PROWaterHeater::Calculate()     332
     PROWaterHeater::SaveSettings(TSNConfigString *)
                                    1808
     PROWaterHeater::RestoreSettings(TSNConfigString *)
                                    1380
     PROWaterHeater::GetValue(int, int, float &, int &, int &)
                                     312
     PROWaterHeater::GetStringValue(int, int, AnsiString &)
                                      12
     ?Subroutine17                     8
     PROWaterHeater::PutValue(int, int, AnsiString, bool, int *)
                                     764
     PROWaterHeater::ReceiveData(unsigned char *)
                                     420
     PROWaterHeater::SendData(unsigned short)
                                     516
     ?<Constant "0x%0x">               8
     ?<Constant "Water Heater ">      16
     ?<Constant "Temperature ">      140
     PROWaterHeater::new PROWaterHeater(int, bool)
                                      48
     __sti__routine()                 92
     ??DataTable2                      4
     ??DataTable4                      4
     ??DataTable5                      4
     ??DataTable6                      4
     ??DataTable7                      4
     ??DataTable8                      4
     ??DataTable12                     4
     ??DataTable13                     4
     ??DataTable14                     4
     ??DataTable15                     4
     ??DataTable16                     4
     ??DataTable17                     4
     ??DataTable18                     4
     ??DataTable19                     4
      Others                        1256

 
 15 112 bytes in segment CODE
    348 bytes in segment DATA_C
     60 bytes in segment DATA_Z
      4 bytes in segment DIFUNCT
     12 bytes in segment INITTAB
 
 10 188 bytes of CODE  memory (+ 4 940 bytes shared)
    348 bytes of CONST memory
     60 bytes of DATA  memory

Errors: none
Warnings: none
