##############################################################################
#                                                                            #
# IAR ARM ANSI C/C++ Compiler V4.42A/W32               14/Sep/2022  15:17:07 #
# Copyright 1999-2005 IAR Systems. All rights reserved.                      #
#                                                                            #
#    Cpu mode        =  interwork                                            #
#    Endian          =  little                                               #
#    Stack alignment =  4                                                    #
#    Source file     =  D:\S2Prog\Shared\Src\PROXRefObject.cpp               #
#    Command line    =  D:\S2Prog\Shared\Src\PROXRefObject.cpp --fpu None    #
#                       -D OS_LIBMODE_SP -D CPU_S3C2410 -D OS_RAMVECT=0 -D   #
#                       OS_UART=-1 -D S2TXU -D USE_LZO=1 -D __ARM_LIBRARY__  #
#                       -D WATCHDOG=1 -D NETWORK=1 -lCN                      #
#                       D:\S2Prog\TXU\Debug\List\ -o                         #
#                       D:\S2Prog\TXU\Debug\Obj\ -z9 --debug --cpu_mode arm  #
#                       --endian little --cpu ARM920T --stack_align 4        #
#                       --interwork -e --enable_multibytes --eec++           #
#                       --dlib_config "C:\Program Files (x86)\IAR            #
#                       Systems\Embedded Workbench                           #
#                       4.0\arm\LIB\dl4tpainl8n.h" -I                        #
#                       D:\S2Prog\TXU\GUI\CORE\ -I D:\S2Prog\TXU\GUI\WM\ -I  #
#                       D:\S2Prog\TXU\GUI\WIDGET\ -I D:\S2Prog\TXU\CONFIG\   #
#                       -I D:\S2Prog\TXU\INC\ -I D:\S2Prog\TXU\..\SHARED\INC #
#                       \ -I D:\S2Prog\TXU\..\SHARED\SRC\ -I                 #
#                       D:\S2Prog\TXU\..\SHARED\LZO\minilzo.210\ -I          #
#                       D:\S2Prog\TXU\lwip-1.4.1\src\include\ -I             #
#                       D:\S2Prog\TXU\lwip-1.4.1\src\include\ipv4\ -I        #
#                       D:\S2Prog\TXU\lwip-1.4.1\src\ -I                     #
#                       D:\S2Prog\TXU\..\SHARED\Database\ -I                 #
#                       D:\S2Prog\TXU\src\ -I "C:\Program Files (x86)\IAR    #
#                       Systems\Embedded Workbench 4.0\arm\INC\"             #
#                       --inline_threshold=2                                 #
#    List file       =  D:\S2Prog\TXU\Debug\List\PROXRefObject.lst           #
#    Object file     =  D:\S2Prog\TXU\Debug\Obj\PROXRefObject.r79            #
#                                                                            #
#                                                                            #
##############################################################################

D:\S2Prog\Shared\Src\PROXRefObject.cpp
      1          #include "TSNIncludes.h"

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs string::string(string const &)
   \                     ??string:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
   \   0000000C   0020A0E3           MOV      R2,#+0
   \   00000010   0010A0E3           MOV      R1,#+0
   \   00000014   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   00000018   1C009FE5           LDR      R0,??string_1    ;; ??npos
   \   0000001C   0020A0E3           MOV      R2,#+0
   \   00000020   003090E5           LDR      R3,[R0, #+0]
   \   00000024   0510A0E1           MOV      R1,R5
   \   00000028   0400A0E1           MOV      R0,R4
   \   0000002C   ........           _BLF     ??assign,??assign??rA
   \   00000030   0400A0E1           MOV      R0,R4
   \   00000034   3040BDE8           POP      {R4,R5,LR}
   \   00000038   1EFF2FE1           BX       LR               ;; return
   \                     ??string_1:
   \   0000003C   ........           DC32     ??npos

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs _Tree_algobase<allocator<void>>::_Genptr _Tree_algobase<allocator<void>>::_DecP(_Tree_algobase<allocator<void>>::_Genptr)
   \                     ??_DecP:
   \   00000000   0D10D0E5           LDRB     R1,[R0, #+13]
   \   00000004   000051E3           CMP      R1,#+0
   \   00000008   08009015           LDRNE    R0,[R0, #+8]
   \   0000000C   1EFF2F11           BXNE     LR
   \   00000010   001090E5           LDR      R1,[R0, #+0]
   \   00000014   0D20D1E5           LDRB     R2,[R1, #+13]
   \   00000018   000052E3           CMP      R2,#+0
   \   0000001C   0700001A           BNE      ??_DecP_1
   \   00000020   000000EA           B        ??_DecP_2
   \                     ??_DecP_3:
   \   00000024   0010A0E1           MOV      R1,R0
   \                     ??_DecP_2:
   \   00000028   080091E5           LDR      R0,[R1, #+8]
   \   0000002C   0D20D0E5           LDRB     R2,[R0, #+13]
   \   00000030   000052E3           CMP      R2,#+0
   \   00000034   FAFFFF0A           BEQ      ??_DecP_3
   \   00000038   0100A0E1           MOV      R0,R1
   \   0000003C   1EFF2FE1           BX       LR
   \                     ??_DecP_1:
   \   00000040   041090E5           LDR      R1,[R0, #+4]
   \   00000044   0D20D1E5           LDRB     R2,[R1, #+13]
   \   00000048   000052E3           CMP      R2,#+0
   \   0000004C   1EFF2F11           BXNE     LR
   \   00000050   002091E5           LDR      R2,[R1, #+0]
   \   00000054   020050E1           CMP      R0,R2
   \   00000058   0100A0E1           MOV      R0,R1
   \   0000005C   F7FFFF0A           BEQ      ??_DecP_1
   \   00000060   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs _Tree_algobase<allocator<void>>::_Genptr _Tree_algobase<allocator<void>>::_IncP(_Tree_algobase<allocator<void>>::_Genptr)
   \                     ??_IncP:
   \   00000000   0D10D0E5           LDRB     R1,[R0, #+13]
   \   00000004   000051E3           CMP      R1,#+0
   \   00000008   1EFF2F11           BXNE     LR
   \   0000000C   081090E5           LDR      R1,[R0, #+8]
   \   00000010   0D20D1E5           LDRB     R2,[R1, #+13]
   \   00000014   000052E3           CMP      R2,#+0
   \   00000018   0700001A           BNE      ??_IncP_1
   \   0000001C   000000EA           B        ??_IncP_2
   \                     ??_IncP_3:
   \   00000020   0010A0E1           MOV      R1,R0
   \                     ??_IncP_2:
   \   00000024   000091E5           LDR      R0,[R1, #+0]
   \   00000028   0D20D0E5           LDRB     R2,[R0, #+13]
   \   0000002C   000052E3           CMP      R2,#+0
   \   00000030   FAFFFF0A           BEQ      ??_IncP_3
   \   00000034   060000EA           B        ??_IncP_4
   \                     ??_IncP_5:
   \   00000038   0100A0E1           MOV      R0,R1
   \                     ??_IncP_1:
   \   0000003C   041090E5           LDR      R1,[R0, #+4]
   \   00000040   0D20D1E5           LDRB     R2,[R1, #+13]
   \   00000044   000052E3           CMP      R2,#+0
   \   00000048   08209105           LDREQ    R2,[R1, #+8]
   \   0000004C   02005001           CMPEQ    R0,R2
   \   00000050   F8FFFF0A           BEQ      ??_IncP_5
   \                     ??_IncP_4:
   \   00000054   0100A0E1           MOV      R0,R1
   \   00000058   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void _Tree_algobase<allocator<void>>::_Clear()
   \                     ??_Clear:
   \   00000000   040080E5           STR      R0,[R0, #+4]
   \   00000004   000080E5           STR      R0,[R0, #+0]
   \   00000008   080080E5           STR      R0,[R0, #+8]
   \   0000000C   0110A0E3           MOV      R1,#+1
   \   00000010   0D10C0E5           STRB     R1,[R0, #+13]
   \   00000014   0C10C0E5           STRB     R1,[R0, #+12]
   \   00000018   0010A0E3           MOV      R1,#+0
   \   0000001C   101080E5           STR      R1,[R0, #+16]
   \   00000020   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void _Tree_algobase<allocator<void>>::_Rrotate(_Tree_algobase<allocator<void>>::_Genptr)
   \                     ??_Rrotate:
   \   00000000   002091E5           LDR      R2,[R1, #+0]
   \   00000004   083092E5           LDR      R3,[R2, #+8]
   \   00000008   003081E5           STR      R3,[R1, #+0]
   \   0000000C   083092E5           LDR      R3,[R2, #+8]
   \   00000010   0DC0D3E5           LDRB     R12,[R3, #+13]
   \   00000014   00005CE3           CMP      R12,#+0
   \   00000018   04108305           STREQ    R1,[R3, #+4]
   \   0000001C   043091E5           LDR      R3,[R1, #+4]
   \   00000020   043082E5           STR      R3,[R2, #+4]
   \   00000024   043090E5           LDR      R3,[R0, #+4]
   \   00000028   030051E1           CMP      R1,R3
   \   0000002C   04208005           STREQ    R2,[R0, #+4]
   \   00000030   0400000A           BEQ      ??_Rrotate_1
   \   00000034   040091E5           LDR      R0,[R1, #+4]
   \   00000038   083090E5           LDR      R3,[R0, #+8]
   \   0000003C   030051E1           CMP      R1,R3
   \   00000040   08208005           STREQ    R2,[R0, #+8]
   \   00000044   00208015           STRNE    R2,[R0, #+0]
   \                     ??_Rrotate_1:
   \   00000048   081082E5           STR      R1,[R2, #+8]
   \   0000004C   042081E5           STR      R2,[R1, #+4]
   \   00000050   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void _Tree_algobase<allocator<void>>::_Lrotate(_Tree_algobase<allocator<void>>::_Genptr)
   \                     ??_Lrotate:
   \   00000000   082091E5           LDR      R2,[R1, #+8]
   \   00000004   003092E5           LDR      R3,[R2, #+0]
   \   00000008   083081E5           STR      R3,[R1, #+8]
   \   0000000C   003092E5           LDR      R3,[R2, #+0]
   \   00000010   0DC0D3E5           LDRB     R12,[R3, #+13]
   \   00000014   00005CE3           CMP      R12,#+0
   \   00000018   04108305           STREQ    R1,[R3, #+4]
   \   0000001C   043091E5           LDR      R3,[R1, #+4]
   \   00000020   043082E5           STR      R3,[R2, #+4]
   \   00000024   043090E5           LDR      R3,[R0, #+4]
   \   00000028   030051E1           CMP      R1,R3
   \   0000002C   04208005           STREQ    R2,[R0, #+4]
   \   00000030   0400000A           BEQ      ??_Lrotate_1
   \   00000034   040091E5           LDR      R0,[R1, #+4]
   \   00000038   003090E5           LDR      R3,[R0, #+0]
   \   0000003C   030051E1           CMP      R1,R3
   \   00000040   00208005           STREQ    R2,[R0, #+0]
   \   00000044   08208015           STRNE    R2,[R0, #+8]
   \                     ??_Lrotate_1:
   \   00000048   001082E5           STR      R1,[R2, #+0]
   \   0000004C   042081E5           STR      R2,[R1, #+4]
   \   00000050   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs _Tree_algobase<allocator<void>>::_Genptr _Tree_algobase<allocator<void>>::_Erase(_Tree_algobase<allocator<void>>::_Genptr)
   \                     ??_Erase:
   \   00000000   F0472DE9           PUSH     {R4-R10,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0160A0E1           MOV      R6,R1
   \   0000000C   0680A0E1           MOV      R8,R6
   \   00000010   0600A0E1           MOV      R0,R6
   \   00000014   ........           _BLF     ??_IncP,??_IncP??rA
   \   00000018   007098E5           LDR      R7,[R8, #+0]
   \   0000001C   0D10D7E5           LDRB     R1,[R7, #+13]
   \   00000020   000051E3           CMP      R1,#+0
   \   00000024   0400001A           BNE      ??_Erase_5
   \   00000028   081098E5           LDR      R1,[R8, #+8]
   \   0000002C   0D10D1E5           LDRB     R1,[R1, #+13]
   \   00000030   000051E3           CMP      R1,#+0
   \   00000034   0100001A           BNE      ??_Erase_6
   \   00000038   0080A0E1           MOV      R8,R0
   \                     ??_Erase_5:
   \   0000003C   087098E5           LDR      R7,[R8, #+8]
   \                     ??_Erase_6:
   \   00000040   060058E1           CMP      R8,R6
   \   00000044   2B00001A           BNE      ??_Erase_7
   \   00000048   0D00D7E5           LDRB     R0,[R7, #+13]
   \   0000004C   045096E5           LDR      R5,[R6, #+4]
   \   00000050   000050E3           CMP      R0,#+0
   \   00000054   04508705           STREQ    R5,[R7, #+4]
   \   00000058   040094E5           LDR      R0,[R4, #+4]
   \   0000005C   060050E1           CMP      R0,R6
   \   00000060   04708405           STREQ    R7,[R4, #+4]
   \   00000064   0300000A           BEQ      ??_Erase_8
   \   00000068   000095E5           LDR      R0,[R5, #+0]
   \   0000006C   060050E1           CMP      R0,R6
   \   00000070   00708505           STREQ    R7,[R5, #+0]
   \   00000074   08708515           STRNE    R7,[R5, #+8]
   \                     ??_Erase_8:
   \   00000078   000094E5           LDR      R0,[R4, #+0]
   \   0000007C   060050E1           CMP      R0,R6
   \   00000080   0B00001A           BNE      ??_Erase_9
   \   00000084   0D00D7E5           LDRB     R0,[R7, #+13]
   \   00000088   000050E3           CMP      R0,#+0
   \   0000008C   0500A011           MOVNE    R0,R5
   \   00000090   0600001A           BNE      ??_Erase_10
   \   00000094   0700A0E1           MOV      R0,R7
   \   00000098   000000EA           B        ??_Erase_11
   \                     ??_Erase_12:
   \   0000009C   0100A0E1           MOV      R0,R1
   \                     ??_Erase_11:
   \   000000A0   001090E5           LDR      R1,[R0, #+0]
   \   000000A4   0D20D1E5           LDRB     R2,[R1, #+13]
   \   000000A8   000052E3           CMP      R2,#+0
   \   000000AC   FAFFFF0A           BEQ      ??_Erase_12
   \                     ??_Erase_10:
   \   000000B0   000084E5           STR      R0,[R4, #+0]
   \                     ??_Erase_9:
   \   000000B4   080094E5           LDR      R0,[R4, #+8]
   \   000000B8   060050E1           CMP      R0,R6
   \   000000BC   2F00001A           BNE      ??_Erase_13
   \   000000C0   0D10D7E5           LDRB     R1,[R7, #+13]
   \   000000C4   080084E2           ADD      R0,R4,#+8
   \   000000C8   000051E3           CMP      R1,#+0
   \   000000CC   0510A011           MOVNE    R1,R5
   \   000000D0   0600001A           BNE      ??_Erase_14
   \   000000D4   0710A0E1           MOV      R1,R7
   \   000000D8   000000EA           B        ??_Erase_15
   \                     ??_Erase_16:
   \   000000DC   0210A0E1           MOV      R1,R2
   \                     ??_Erase_15:
   \   000000E0   082091E5           LDR      R2,[R1, #+8]
   \   000000E4   0D30D2E5           LDRB     R3,[R2, #+13]
   \   000000E8   000053E3           CMP      R3,#+0
   \   000000EC   FAFFFF0A           BEQ      ??_Erase_16
   \                     ??_Erase_14:
   \   000000F0   001080E5           STR      R1,[R0, #+0]
   \   000000F4   210000EA           B        ??_Erase_13
   \                     ??_Erase_7:
   \   000000F8   000096E5           LDR      R0,[R6, #+0]
   \   000000FC   048080E5           STR      R8,[R0, #+4]
   \   00000100   000096E5           LDR      R0,[R6, #+0]
   \   00000104   000088E5           STR      R0,[R8, #+0]
   \   00000108   080096E5           LDR      R0,[R6, #+8]
   \   0000010C   000058E1           CMP      R8,R0
   \   00000110   0850A001           MOVEQ    R5,R8
   \   00000114   0800000A           BEQ      ??_Erase_17
   \   00000118   0D00D7E5           LDRB     R0,[R7, #+13]
   \   0000011C   045098E5           LDR      R5,[R8, #+4]
   \   00000120   000050E3           CMP      R0,#+0
   \   00000124   04508705           STREQ    R5,[R7, #+4]
   \   00000128   007085E5           STR      R7,[R5, #+0]
   \   0000012C   080096E5           LDR      R0,[R6, #+8]
   \   00000130   080088E5           STR      R0,[R8, #+8]
   \   00000134   080096E5           LDR      R0,[R6, #+8]
   \   00000138   048080E5           STR      R8,[R0, #+4]
   \                     ??_Erase_17:
   \   0000013C   040094E5           LDR      R0,[R4, #+4]
   \   00000140   060050E1           CMP      R0,R6
   \   00000144   04808405           STREQ    R8,[R4, #+4]
   \   00000148   0400000A           BEQ      ??_Erase_18
   \   0000014C   040096E5           LDR      R0,[R6, #+4]
   \   00000150   001090E5           LDR      R1,[R0, #+0]
   \   00000154   060051E1           CMP      R1,R6
   \   00000158   00808005           STREQ    R8,[R0, #+0]
   \   0000015C   08808015           STRNE    R8,[R0, #+8]
   \                     ??_Erase_18:
   \   00000160   040096E5           LDR      R0,[R6, #+4]
   \   00000164   0C1088E2           ADD      R1,R8,#+12
   \   00000168   040088E5           STR      R0,[R8, #+4]
   \   0000016C   0020D1E5           LDRB     R2,[R1, #+0]
   \   00000170   0C0086E2           ADD      R0,R6,#+12
   \   00000174   0030D0E5           LDRB     R3,[R0, #+0]
   \   00000178   0030C1E5           STRB     R3,[R1, #+0]
   \   0000017C   0020C0E5           STRB     R2,[R0, #+0]
   \                     ??_Erase_13:
   \   00000180   0C00D6E5           LDRB     R0,[R6, #+12]
   \   00000184   010050E3           CMP      R0,#+1
   \   00000188   5E00001A           BNE      ??_Erase_19
   \   0000018C   0090A0E3           MOV      R9,#+0
   \   00000190   01A0A0E3           MOV      R10,#+1
   \   00000194   060000EA           B        ??_Erase_20
   \                     ??_Erase_21:
   \   00000198   080098E5           LDR      R0,[R8, #+8]
   \   0000019C   0C00D0E5           LDRB     R0,[R0, #+12]
   \   000001A0   010050E3           CMP      R0,#+1
   \   000001A4   1C00001A           BNE      ??_Erase_22
   \                     ??_Erase_23:
   \   000001A8   0C90C8E5           STRB     R9,[R8, #+12]
   \                     ??_Erase_24:
   \   000001AC   0570A0E1           MOV      R7,R5
   \   000001B0   045097E5           LDR      R5,[R7, #+4]
   \                     ??_Erase_20:
   \   000001B4   040094E5           LDR      R0,[R4, #+4]
   \   000001B8   000057E1           CMP      R7,R0
   \   000001BC   5000000A           BEQ      ??_Erase_25
   \   000001C0   0C00D7E5           LDRB     R0,[R7, #+12]
   \   000001C4   010050E3           CMP      R0,#+1
   \   000001C8   4D00001A           BNE      ??_Erase_25
   \   000001CC   008095E5           LDR      R8,[R5, #+0]
   \   000001D0   080057E1           CMP      R7,R8
   \   000001D4   2400001A           BNE      ??_Erase_26
   \   000001D8   088095E5           LDR      R8,[R5, #+8]
   \   000001DC   0C00D8E5           LDRB     R0,[R8, #+12]
   \   000001E0   000050E3           CMP      R0,#+0
   \   000001E4   0500001A           BNE      ??_Erase_27
   \   000001E8   0CA0C8E5           STRB     R10,[R8, #+12]
   \   000001EC   0C90C5E5           STRB     R9,[R5, #+12]
   \   000001F0   0510A0E1           MOV      R1,R5
   \   000001F4   0400A0E1           MOV      R0,R4
   \   000001F8   ........           _BLF     ??_Lrotate,??_Lrotate??rA
   \   000001FC   088095E5           LDR      R8,[R5, #+8]
   \                     ??_Erase_27:
   \   00000200   0D00D8E5           LDRB     R0,[R8, #+13]
   \   00000204   000050E3           CMP      R0,#+0
   \   00000208   E7FFFF1A           BNE      ??_Erase_24
   \   0000020C   000098E5           LDR      R0,[R8, #+0]
   \   00000210   0C00D0E5           LDRB     R0,[R0, #+12]
   \   00000214   010050E3           CMP      R0,#+1
   \   00000218   DEFFFF0A           BEQ      ??_Erase_21
   \                     ??_Erase_22:
   \   0000021C   080098E5           LDR      R0,[R8, #+8]
   \   00000220   0C00D0E5           LDRB     R0,[R0, #+12]
   \   00000224   010050E3           CMP      R0,#+1
   \   00000228   0600001A           BNE      ??_Erase_28
   \   0000022C   000098E5           LDR      R0,[R8, #+0]
   \   00000230   0810A0E1           MOV      R1,R8
   \   00000234   0CA0C0E5           STRB     R10,[R0, #+12]
   \   00000238   0C90C8E5           STRB     R9,[R8, #+12]
   \   0000023C   0400A0E1           MOV      R0,R4
   \   00000240   ........           _BLF     ??_Rrotate,??_Rrotate??rA
   \   00000244   088095E5           LDR      R8,[R5, #+8]
   \                     ??_Erase_28:
   \   00000248   0C00D5E5           LDRB     R0,[R5, #+12]
   \   0000024C   0510A0E1           MOV      R1,R5
   \   00000250   0C00C8E5           STRB     R0,[R8, #+12]
   \   00000254   0CA0C5E5           STRB     R10,[R5, #+12]
   \   00000258   080098E5           LDR      R0,[R8, #+8]
   \   0000025C   0CA0C0E5           STRB     R10,[R0, #+12]
   \   00000260   0400A0E1           MOV      R0,R4
   \   00000264   ........           _BLF     ??_Lrotate,??_Lrotate??rA
   \   00000268   250000EA           B        ??_Erase_25
   \                     ??_Erase_26:
   \   0000026C   0C00D8E5           LDRB     R0,[R8, #+12]
   \   00000270   000050E3           CMP      R0,#+0
   \   00000274   0500001A           BNE      ??_Erase_29
   \   00000278   0CA0C8E5           STRB     R10,[R8, #+12]
   \   0000027C   0C90C5E5           STRB     R9,[R5, #+12]
   \   00000280   0510A0E1           MOV      R1,R5
   \   00000284   0400A0E1           MOV      R0,R4
   \   00000288   ........           _BLF     ??_Rrotate,??_Rrotate??rA
   \   0000028C   008095E5           LDR      R8,[R5, #+0]
   \                     ??_Erase_29:
   \   00000290   0D00D8E5           LDRB     R0,[R8, #+13]
   \   00000294   000050E3           CMP      R0,#+0
   \   00000298   C3FFFF1A           BNE      ??_Erase_24
   \   0000029C   080098E5           LDR      R0,[R8, #+8]
   \   000002A0   0C00D0E5           LDRB     R0,[R0, #+12]
   \   000002A4   010050E3           CMP      R0,#+1
   \   000002A8   00009805           LDREQ    R0,[R8, #+0]
   \   000002AC   0C00D005           LDRBEQ   R0,[R0, #+12]
   \   000002B0   01005003           CMPEQ    R0,#+1
   \   000002B4   BBFFFF0A           BEQ      ??_Erase_23
   \   000002B8   000098E5           LDR      R0,[R8, #+0]
   \   000002BC   0C00D0E5           LDRB     R0,[R0, #+12]
   \   000002C0   010050E3           CMP      R0,#+1
   \   000002C4   0600001A           BNE      ??_Erase_30
   \   000002C8   080098E5           LDR      R0,[R8, #+8]
   \   000002CC   0810A0E1           MOV      R1,R8
   \   000002D0   0CA0C0E5           STRB     R10,[R0, #+12]
   \   000002D4   0C90C8E5           STRB     R9,[R8, #+12]
   \   000002D8   0400A0E1           MOV      R0,R4
   \   000002DC   ........           _BLF     ??_Lrotate,??_Lrotate??rA
   \   000002E0   008095E5           LDR      R8,[R5, #+0]
   \                     ??_Erase_30:
   \   000002E4   0C00D5E5           LDRB     R0,[R5, #+12]
   \   000002E8   0510A0E1           MOV      R1,R5
   \   000002EC   0C00C8E5           STRB     R0,[R8, #+12]
   \   000002F0   0CA0C5E5           STRB     R10,[R5, #+12]
   \   000002F4   000098E5           LDR      R0,[R8, #+0]
   \   000002F8   0CA0C0E5           STRB     R10,[R0, #+12]
   \   000002FC   0400A0E1           MOV      R0,R4
   \   00000300   ........           _BLF     ??_Rrotate,??_Rrotate??rA
   \                     ??_Erase_25:
   \   00000304   0CA0C7E5           STRB     R10,[R7, #+12]
   \                     ??_Erase_19:
   \   00000308   100094E5           LDR      R0,[R4, #+16]
   \   0000030C   000050E3           CMP      R0,#+0
   \   00000310   01004012           SUBNE    R0,R0,#+1
   \   00000314   10008415           STRNE    R0,[R4, #+16]
   \   00000318   0600A0E1           MOV      R0,R6
   \   0000031C   F047BDE8           POP      {R4-R10,LR}
   \   00000320   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void _Tree_algobase<allocator<void>>::_Insert(bool, _Tree_algobase<allocator<void>>::_Genptr, _Tree_algobase<allocator<void>>::_Genptr)
   \                     ??_Insert:
   \   00000000   F0402DE9           PUSH     {R4-R7,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   100094E5           LDR      R0,[R4, #+16]
   \   0000000C   0350A0E1           MOV      R5,R3
   \   00000010   010080E2           ADD      R0,R0,#+1
   \   00000014   100084E5           STR      R0,[R4, #+16]
   \   00000018   040052E1           CMP      R2,R4
   \   0000001C   0300001A           BNE      ??_Insert_5
   \   00000020   045084E5           STR      R5,[R4, #+4]
   \   00000024   005084E5           STR      R5,[R4, #+0]
   \                     ??_Insert_6:
   \   00000028   085084E5           STR      R5,[R4, #+8]
   \   0000002C   130000EA           B        ??_Insert_7
   \                     ??_Insert_5:
   \   00000030   000051E3           CMP      R1,#+0
   \   00000034   0500000A           BEQ      ??_Insert_8
   \   00000038   005082E5           STR      R5,[R2, #+0]
   \   0000003C   000094E5           LDR      R0,[R4, #+0]
   \   00000040   000052E1           CMP      R2,R0
   \   00000044   0D00001A           BNE      ??_Insert_7
   \   00000048   005084E5           STR      R5,[R4, #+0]
   \   0000004C   0B0000EA           B        ??_Insert_7
   \                     ??_Insert_8:
   \   00000050   085082E5           STR      R5,[R2, #+8]
   \   00000054   080094E5           LDR      R0,[R4, #+8]
   \   00000058   000052E1           CMP      R2,R0
   \   0000005C   0700001A           BNE      ??_Insert_7
   \   00000060   F0FFFFEA           B        ??_Insert_6
   \                     ??_Insert_9:
   \   00000064   0C70C0E5           STRB     R7,[R0, #+12]
   \   00000068   0C70C2E5           STRB     R7,[R2, #+12]
   \   0000006C   040095E5           LDR      R0,[R5, #+4]
   \   00000070   040090E5           LDR      R0,[R0, #+4]
   \   00000074   0C60C0E5           STRB     R6,[R0, #+12]
   \   00000078   040095E5           LDR      R0,[R5, #+4]
   \   0000007C   045090E5           LDR      R5,[R0, #+4]
   \                     ??_Insert_7:
   \   00000080   0170A0E3           MOV      R7,#+1
   \   00000084   040095E5           LDR      R0,[R5, #+4]
   \   00000088   0C10D0E5           LDRB     R1,[R0, #+12]
   \   0000008C   000051E3           CMP      R1,#+0
   \   00000090   2F00001A           BNE      ??_Insert_10
   \   00000094   041090E5           LDR      R1,[R0, #+4]
   \   00000098   0060A0E3           MOV      R6,#+0
   \   0000009C   001091E5           LDR      R1,[R1, #+0]
   \   000000A0   010050E1           CMP      R0,R1
   \   000000A4   041090E5           LDR      R1,[R0, #+4]
   \   000000A8   1400001A           BNE      ??_Insert_11
   \   000000AC   082091E5           LDR      R2,[R1, #+8]
   \   000000B0   0C10D2E5           LDRB     R1,[R2, #+12]
   \   000000B4   000051E3           CMP      R1,#+0
   \   000000B8   E9FFFF0A           BEQ      ??_Insert_9
   \   000000BC   081090E5           LDR      R1,[R0, #+8]
   \   000000C0   010055E1           CMP      R5,R1
   \   000000C4   0300001A           BNE      ??_Insert_12
   \   000000C8   0050A0E1           MOV      R5,R0
   \   000000CC   0510A0E1           MOV      R1,R5
   \   000000D0   0400A0E1           MOV      R0,R4
   \   000000D4   ........           _BLF     ??_Lrotate,??_Lrotate??rA
   \                     ??_Insert_12:
   \   000000D8   040095E5           LDR      R0,[R5, #+4]
   \   000000DC   0C70C0E5           STRB     R7,[R0, #+12]
   \   000000E0   040095E5           LDR      R0,[R5, #+4]
   \   000000E4   040090E5           LDR      R0,[R0, #+4]
   \   000000E8   0C60C0E5           STRB     R6,[R0, #+12]
   \   000000EC   040095E5           LDR      R0,[R5, #+4]
   \   000000F0   041090E5           LDR      R1,[R0, #+4]
   \   000000F4   0400A0E1           MOV      R0,R4
   \   000000F8   ........           _BLF     ??_Rrotate,??_Rrotate??rA
   \   000000FC   DFFFFFEA           B        ??_Insert_7
   \                     ??_Insert_11:
   \   00000100   002091E5           LDR      R2,[R1, #+0]
   \   00000104   0C10D2E5           LDRB     R1,[R2, #+12]
   \   00000108   000051E3           CMP      R1,#+0
   \   0000010C   D4FFFF0A           BEQ      ??_Insert_9
   \   00000110   001090E5           LDR      R1,[R0, #+0]
   \   00000114   010055E1           CMP      R5,R1
   \   00000118   0300001A           BNE      ??_Insert_13
   \   0000011C   0050A0E1           MOV      R5,R0
   \   00000120   0510A0E1           MOV      R1,R5
   \   00000124   0400A0E1           MOV      R0,R4
   \   00000128   ........           _BLF     ??_Rrotate,??_Rrotate??rA
   \                     ??_Insert_13:
   \   0000012C   040095E5           LDR      R0,[R5, #+4]
   \   00000130   0C70C0E5           STRB     R7,[R0, #+12]
   \   00000134   040095E5           LDR      R0,[R5, #+4]
   \   00000138   040090E5           LDR      R0,[R0, #+4]
   \   0000013C   0C60C0E5           STRB     R6,[R0, #+12]
   \   00000140   040095E5           LDR      R0,[R5, #+4]
   \   00000144   041090E5           LDR      R1,[R0, #+4]
   \   00000148   0400A0E1           MOV      R0,R4
   \   0000014C   ........           _BLF     ??_Lrotate,??_Lrotate??rA
   \   00000150   CAFFFFEA           B        ??_Insert_7
   \                     ??_Insert_10:
   \   00000154   040094E5           LDR      R0,[R4, #+4]
   \   00000158   0C70C0E5           STRB     R7,[R0, #+12]
   \   0000015C   F040BDE8           POP      {R4-R7,LR}
   \   00000160   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs _Tree<_Tmap_traits<int, PROXRefObject *, less<int>, allocator<pair<int const, PROXRefObject *>>, true>>::_Pairib _Tree<_Tmap_traits<int, PROXRefObject *, less<int>, allocator<pair<int const, PROXRefObject *>>, true>>::insert(pair<int const, PROXRefObject *> const &)
   \                     ??insert:
   \   00000000   13402DE9           PUSH     {R0,R1,R4,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0100A0E1           MOV      R0,R1
   \   0000000C   043090E5           LDR      R3,[R0, #+4]
   \   00000010   00C0A0E1           MOV      R12,R0
   \   00000014   0110A0E3           MOV      R1,#+1
   \                     ??insert_4:
   \   00000018   0DE0D3E5           LDRB     LR,[R3, #+13]
   \   0000001C   00005EE3           CMP      LR,#+0
   \   00000020   0800001A           BNE      ??insert_5
   \   00000024   001092E5           LDR      R1,[R2, #+0]
   \   00000028   10E093E5           LDR      LR,[R3, #+16]
   \   0000002C   03C0A0E1           MOV      R12,R3
   \   00000030   0E0051E1           CMP      R1,LR
   \   00000034   003093B5           LDRLT    R3,[R3, #+0]
   \   00000038   0110A0B3           MOVLT    R1,#+1
   \   0000003C   083093A5           LDRGE    R3,[R3, #+8]
   \   00000040   0010A0A3           MOVGE    R1,#+0
   \   00000044   F3FFFFEA           B        ??insert_4
   \                     ??insert_5:
   \   00000048   0230A0E1           MOV      R3,R2
   \   0000004C   0C20A0E1           MOV      R2,R12
   \   00000050   ........           _BLF     ??_Insert_2,??_Insert??rA
   \   00000054   00008DE5           STR      R0,[SP, #+0]
   \   00000058   0110A0E3           MOV      R1,#+1
   \   0000005C   0410CDE5           STRB     R1,[SP, #+4]
   \   00000060   0D00A0E1           MOV      R0,SP
   \   00000064   030090E8           LDM      R0,{R0,R1}
   \   00000068   030084E8           STM      R4,{R0,R1}
   \   0000006C   0400A0E1           MOV      R0,R4
   \   00000070   1640BDE8           POP      {R1,R2,R4,LR}
   \   00000074   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs _Tree<_Tset_traits<TankState, less<TankState>, allocator<TankState>, false>>::_Pairib _Tree<_Tset_traits<TankState, less<TankState>, allocator<TankState>, false>>::insert(TankState)
   \                     ??insert_1:
   \   00000000   F3432DE9           PUSH     {R0,R1,R4-R9,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0160A0E1           MOV      R6,R1
   \   0000000C   040096E5           LDR      R0,[R6, #+4]
   \   00000010   0270A0E1           MOV      R7,R2
   \   00000014   0680A0E1           MOV      R8,R6
   \   00000018   0190A0E3           MOV      R9,#+1
   \                     ??insert_6:
   \   0000001C   0D10D0E5           LDRB     R1,[R0, #+13]
   \   00000020   000051E3           CMP      R1,#+0
   \   00000024   0700001A           BNE      ??insert_7
   \   00000028   1010D0E5           LDRB     R1,[R0, #+16]
   \   0000002C   0080A0E1           MOV      R8,R0
   \   00000030   010057E1           CMP      R7,R1
   \   00000034   00009035           LDRCC    R0,[R0, #+0]
   \   00000038   0190A033           MOVCC    R9,#+1
   \   0000003C   08009025           LDRCS    R0,[R0, #+8]
   \   00000040   0090A023           MOVCS    R9,#+0
   \   00000044   F4FFFFEA           B        ??insert_6
   \                     ??insert_7:
   \   00000048   0800A0E1           MOV      R0,R8
   \   0000004C   0150A0E3           MOV      R5,#+1
   \   00000050   000059E3           CMP      R9,#+0
   \   00000054   0B00000A           BEQ      ??insert_8
   \   00000058   001096E5           LDR      R1,[R6, #+0]
   \   0000005C   010050E1           CMP      R0,R1
   \   00000060   0700001A           BNE      ??insert_9
   \   00000064   0730A0E1           MOV      R3,R7
   \   00000068   0820A0E1           MOV      R2,R8
   \   0000006C   0110A0E3           MOV      R1,#+1
   \                     ??insert_10:
   \   00000070   0600A0E1           MOV      R0,R6
   \   00000074   ........           _BLF     ??_Insert_1,??_Insert??rA_1
   \   00000078   00008DE5           STR      R0,[SP, #+0]
   \   0000007C   0450CDE5           STRB     R5,[SP, #+4]
   \   00000080   0A0000EA           B        ??insert_11
   \                     ??insert_9:
   \   00000084   ........           _BLF     ??_DecP,??_DecP??rA
   \                     ??insert_8:
   \   00000088   1010D0E5           LDRB     R1,[R0, #+16]
   \   0000008C   070051E1           CMP      R1,R7
   \   00000090   0300002A           BCS      ??insert_12
   \   00000094   0730A0E1           MOV      R3,R7
   \   00000098   0820A0E1           MOV      R2,R8
   \   0000009C   0910A0E1           MOV      R1,R9
   \   000000A0   F2FFFFEA           B        ??insert_10
   \                     ??insert_12:
   \   000000A4   00008DE5           STR      R0,[SP, #+0]
   \   000000A8   0010A0E3           MOV      R1,#+0
   \   000000AC   0410CDE5           STRB     R1,[SP, #+4]
   \                     ??insert_11:
   \   000000B0   0D00A0E1           MOV      R0,SP
   \   000000B4   030090E8           LDM      R0,{R0,R1}
   \   000000B8   030084E8           STM      R4,{R0,R1}
   \   000000BC   0400A0E1           MOV      R0,R4
   \   000000C0   F643BDE8           POP      {R1,R2,R4-R9,LR}
   \   000000C4   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs _Tree<_Tmap_traits<int, PROXRefObject *, less<int>, allocator<pair<int const, PROXRefObject *>>, false>>::_Pairib _Tree<_Tmap_traits<int, PROXRefObject *, less<int>, allocator<pair<int const, PROXRefObject *>>, false>>::insert(pair<int const, PROXRefObject *> const &)
   \                     ??insert_2:
   \   00000000   F3432DE9           PUSH     {R0,R1,R4-R9,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0160A0E1           MOV      R6,R1
   \   0000000C   040096E5           LDR      R0,[R6, #+4]
   \   00000010   0270A0E1           MOV      R7,R2
   \   00000014   0680A0E1           MOV      R8,R6
   \   00000018   0190A0E3           MOV      R9,#+1
   \                     ??insert_13:
   \   0000001C   0D10D0E5           LDRB     R1,[R0, #+13]
   \   00000020   000051E3           CMP      R1,#+0
   \   00000024   0800001A           BNE      ??insert_14
   \   00000028   001097E5           LDR      R1,[R7, #+0]
   \   0000002C   102090E5           LDR      R2,[R0, #+16]
   \   00000030   0080A0E1           MOV      R8,R0
   \   00000034   020051E1           CMP      R1,R2
   \   00000038   000090B5           LDRLT    R0,[R0, #+0]
   \   0000003C   0190A0B3           MOVLT    R9,#+1
   \   00000040   080090A5           LDRGE    R0,[R0, #+8]
   \   00000044   0090A0A3           MOVGE    R9,#+0
   \   00000048   F3FFFFEA           B        ??insert_13
   \                     ??insert_14:
   \   0000004C   0800A0E1           MOV      R0,R8
   \   00000050   0150A0E3           MOV      R5,#+1
   \   00000054   000059E3           CMP      R9,#+0
   \   00000058   0B00000A           BEQ      ??insert_15
   \   0000005C   001096E5           LDR      R1,[R6, #+0]
   \   00000060   010050E1           CMP      R0,R1
   \   00000064   0700001A           BNE      ??insert_16
   \   00000068   0730A0E1           MOV      R3,R7
   \   0000006C   0820A0E1           MOV      R2,R8
   \   00000070   0110A0E3           MOV      R1,#+1
   \                     ??insert_17:
   \   00000074   0600A0E1           MOV      R0,R6
   \   00000078   ........           _BLF     ??_Insert_3,??_Insert??rA_2
   \   0000007C   00008DE5           STR      R0,[SP, #+0]
   \   00000080   0450CDE5           STRB     R5,[SP, #+4]
   \   00000084   0B0000EA           B        ??insert_18
   \                     ??insert_16:
   \   00000088   ........           _BLF     ??_DecP,??_DecP??rA
   \                     ??insert_15:
   \   0000008C   101090E5           LDR      R1,[R0, #+16]
   \   00000090   002097E5           LDR      R2,[R7, #+0]
   \   00000094   020051E1           CMP      R1,R2
   \   00000098   030000AA           BGE      ??insert_19
   \   0000009C   0730A0E1           MOV      R3,R7
   \   000000A0   0820A0E1           MOV      R2,R8
   \   000000A4   0910A0E1           MOV      R1,R9
   \   000000A8   F1FFFFEA           B        ??insert_17
   \                     ??insert_19:
   \   000000AC   00008DE5           STR      R0,[SP, #+0]
   \   000000B0   0010A0E3           MOV      R1,#+0
   \   000000B4   0410CDE5           STRB     R1,[SP, #+4]
   \                     ??insert_18:
   \   000000B8   0D00A0E1           MOV      R0,SP
   \   000000BC   030090E8           LDM      R0,{R0,R1}
   \   000000C0   030084E8           STM      R4,{R0,R1}
   \   000000C4   0400A0E1           MOV      R0,R4
   \   000000C8   F643BDE8           POP      {R1,R2,R4-R9,LR}
   \   000000CC   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs _Tree<_Tset_traits<PROXRefObject *, less<PROXRefObject *>, allocator<PROXRefObject *>, false>>::_Pairib _Tree<_Tset_traits<PROXRefObject *, less<PROXRefObject *>, allocator<PROXRefObject *>, false>>::insert(PROXRefObject *)
   \                     ??insert_3:
   \   00000000   F34C2DE9           PUSH     {R0,R1,R4-R7,R10,R11,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
   \   0000000C   040095E5           LDR      R0,[R5, #+4]
   \   00000010   0260A0E1           MOV      R6,R2
   \   00000014   05B0A0E1           MOV      R11,R5
   \   00000018   0170A0E3           MOV      R7,#+1
   \                     ??insert_20:
   \   0000001C   0D10D0E5           LDRB     R1,[R0, #+13]
   \   00000020   000051E3           CMP      R1,#+0
   \   00000024   0700001A           BNE      ??insert_21
   \   00000028   101090E5           LDR      R1,[R0, #+16]
   \   0000002C   00B0A0E1           MOV      R11,R0
   \   00000030   010056E1           CMP      R6,R1
   \   00000034   00009035           LDRCC    R0,[R0, #+0]
   \   00000038   0170A033           MOVCC    R7,#+1
   \   0000003C   08009025           LDRCS    R0,[R0, #+8]
   \   00000040   0070A023           MOVCS    R7,#+0
   \   00000044   F4FFFFEA           B        ??insert_20
   \                     ??insert_21:
   \   00000048   0B00A0E1           MOV      R0,R11
   \   0000004C   01A0A0E3           MOV      R10,#+1
   \   00000050   000057E3           CMP      R7,#+0
   \   00000054   0B00000A           BEQ      ??insert_22
   \   00000058   001095E5           LDR      R1,[R5, #+0]
   \   0000005C   010050E1           CMP      R0,R1
   \   00000060   0700001A           BNE      ??insert_23
   \   00000064   0630A0E1           MOV      R3,R6
   \   00000068   0B20A0E1           MOV      R2,R11
   \   0000006C   0110A0E3           MOV      R1,#+1
   \                     ??insert_24:
   \   00000070   0500A0E1           MOV      R0,R5
   \   00000074   ........           _BLF     ??_Insert_4,??_Insert??rA_3
   \   00000078   00008DE5           STR      R0,[SP, #+0]
   \   0000007C   04A0CDE5           STRB     R10,[SP, #+4]
   \   00000080   0A0000EA           B        ??insert_25
   \                     ??insert_23:
   \   00000084   ........           _BLF     ??_DecP,??_DecP??rA
   \                     ??insert_22:
   \   00000088   101090E5           LDR      R1,[R0, #+16]
   \   0000008C   060051E1           CMP      R1,R6
   \   00000090   0300002A           BCS      ??insert_26
   \   00000094   0630A0E1           MOV      R3,R6
   \   00000098   0B20A0E1           MOV      R2,R11
   \   0000009C   0710A0E1           MOV      R1,R7
   \   000000A0   F2FFFFEA           B        ??insert_24
   \                     ??insert_26:
   \   000000A4   00008DE5           STR      R0,[SP, #+0]
   \   000000A8   0010A0E3           MOV      R1,#+0
   \   000000AC   0410CDE5           STRB     R1,[SP, #+4]
   \                     ??insert_25:
   \   000000B0   0D00A0E1           MOV      R0,SP
   \   000000B4   030090E8           LDM      R0,{R0,R1}
   \   000000B8   030084E8           STM      R4,{R0,R1}
   \   000000BC   0400A0E1           MOV      R0,R4
   \   000000C0   F64CBDE8           POP      {R1,R2,R4-R7,R10,R11,LR}
   \   000000C4   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs _Tree<_Tset_traits<PROXRefObject *, less<PROXRefObject *>, allocator<PROXRefObject *>, false>>::iterator _Tree<_Tset_traits<PROXRefObject *, less<PROXRefObject *>, allocator<PROXRefObject *>, false>>::erase(_Tree<_Tset_traits<PROXRefObject *, less<PROXRefObject *>, allocator<PROXRefObject *>, false>>::iterator, _Tree<_Tset_traits<PROXRefObject *, less<PROXRefObject *>, allocator<PROXRefObject *>, false>>::iterator)
   \                     ??erase:
   \   00000000   F0402DE9           PUSH     {R4-R7,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   000094E5           LDR      R0,[R4, #+0]
   \   0000000C   0150A0E1           MOV      R5,R1
   \   00000010   0260A0E1           MOV      R6,R2
   \   00000014   000055E1           CMP      R5,R0
   \   00000018   04005601           CMPEQ    R6,R4
   \   0000001C   0D00001A           BNE      ??erase_4
   \   00000020   0400A0E1           MOV      R0,R4
   \   00000024   ........           _BLF     ??clear,??clear??rA
   \   00000028   000094E5           LDR      R0,[R4, #+0]
   \   0000002C   0C0000EA           B        ??erase_5
   \                     ??erase_6:
   \   00000030   0570A0E1           MOV      R7,R5
   \   00000034   0500A0E1           MOV      R0,R5
   \   00000038   ........           _BLF     ??_IncP,??_IncP??rA
   \   0000003C   0050A0E1           MOV      R5,R0
   \   00000040   0700A0E1           MOV      R0,R7
   \   00000044   ........           _BLF     ??_IncP,??_IncP??rA
   \   00000048   0710A0E1           MOV      R1,R7
   \   0000004C   0400A0E1           MOV      R0,R4
   \   00000050   ........           _BLF     ??_Erase,??_Erase??rA
   \   00000054   ........           _BLF     `??operator delete`,`??operator delete??rA`
   \                     ??erase_4:
   \   00000058   060055E1           CMP      R5,R6
   \   0000005C   F3FFFF1A           BNE      ??erase_6
   \   00000060   0500A0E1           MOV      R0,R5
   \                     ??erase_5:
   \   00000064   F040BDE8           POP      {R4-R7,LR}
   \   00000068   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs _Tree<_Tmap_traits<int, PROXRefObject *, less<int>, allocator<pair<int const, PROXRefObject *>>, false>>::iterator _Tree<_Tmap_traits<int, PROXRefObject *, less<int>, allocator<pair<int const, PROXRefObject *>>, false>>::erase(_Tree<_Tmap_traits<int, PROXRefObject *, less<int>, allocator<pair<int const, PROXRefObject *>>, false>>::iterator, _Tree<_Tmap_traits<int, PROXRefObject *, less<int>, allocator<pair<int const, PROXRefObject *>>, false>>::iterator)
   \                     ??erase_1:
   \   00000000   F0402DE9           PUSH     {R4-R7,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   000094E5           LDR      R0,[R4, #+0]
   \   0000000C   0150A0E1           MOV      R5,R1
   \   00000010   0260A0E1           MOV      R6,R2
   \   00000014   000055E1           CMP      R5,R0
   \   00000018   04005601           CMPEQ    R6,R4
   \   0000001C   0D00001A           BNE      ??erase_7
   \   00000020   0400A0E1           MOV      R0,R4
   \   00000024   ........           _BLF     ??clear_1,??clear??rA_1
   \   00000028   000094E5           LDR      R0,[R4, #+0]
   \   0000002C   0C0000EA           B        ??erase_8
   \                     ??erase_9:
   \   00000030   0570A0E1           MOV      R7,R5
   \   00000034   0500A0E1           MOV      R0,R5
   \   00000038   ........           _BLF     ??_IncP,??_IncP??rA
   \   0000003C   0050A0E1           MOV      R5,R0
   \   00000040   0700A0E1           MOV      R0,R7
   \   00000044   ........           _BLF     ??_IncP,??_IncP??rA
   \   00000048   0710A0E1           MOV      R1,R7
   \   0000004C   0400A0E1           MOV      R0,R4
   \   00000050   ........           _BLF     ??_Erase,??_Erase??rA
   \   00000054   ........           _BLF     `??operator delete`,`??operator delete??rA`
   \                     ??erase_7:
   \   00000058   060055E1           CMP      R5,R6
   \   0000005C   F3FFFF1A           BNE      ??erase_9
   \   00000060   0500A0E1           MOV      R0,R5
   \                     ??erase_8:
   \   00000064   F040BDE8           POP      {R4-R7,LR}
   \   00000068   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs unsigned int _Tree<_Tset_traits<PROXRefObject *, less<PROXRefObject *>, allocator<PROXRefObject *>, false>>::erase(PROXRefObject *)
   \                     ??erase_2:
   \   00000000   73402DE9           PUSH     {R0,R1,R4-R6,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0120A0E1           MOV      R2,R1
   \   0000000C   0410A0E1           MOV      R1,R4
   \   00000010   0D00A0E1           MOV      R0,SP
   \   00000014   ........           _BLF     ??equal_range_2,??equal_range??rA
   \   00000018   04509DE5           LDR      R5,[SP, #+4]
   \   0000001C   00009DE5           LDR      R0,[SP, #+0]
   \   00000020   0060A0E3           MOV      R6,#+0
   \   00000024   010000EA           B        ??erase_10
   \                     ??erase_11:
   \   00000028   016086E2           ADD      R6,R6,#+1
   \   0000002C   ........           _BLF     ??_IncP,??_IncP??rA
   \                     ??erase_10:
   \   00000030   050050E1           CMP      R0,R5
   \   00000034   FBFFFF1A           BNE      ??erase_11
   \   00000038   04209DE5           LDR      R2,[SP, #+4]
   \   0000003C   00109DE5           LDR      R1,[SP, #+0]
   \   00000040   0400A0E1           MOV      R0,R4
   \   00000044   ........           _BLF     ??erase,??erase??rA
   \   00000048   0600A0E1           MOV      R0,R6
   \   0000004C   7640BDE8           POP      {R1,R2,R4-R6,LR}
   \   00000050   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs unsigned int _Tree<_Tmap_traits<int, PROXRefObject *, less<int>, allocator<pair<int const, PROXRefObject *>>, false>>::erase(int)
   \                     ??erase_3:
   \   00000000   73402DE9           PUSH     {R0,R1,R4-R6,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0120A0E1           MOV      R2,R1
   \   0000000C   0410A0E1           MOV      R1,R4
   \   00000010   0D00A0E1           MOV      R0,SP
   \   00000014   ........           _BLF     ??equal_range_1,??equal_range??rA_1
   \   00000018   04509DE5           LDR      R5,[SP, #+4]
   \   0000001C   00009DE5           LDR      R0,[SP, #+0]
   \   00000020   0060A0E3           MOV      R6,#+0
   \   00000024   010000EA           B        ??erase_12
   \                     ??erase_13:
   \   00000028   016086E2           ADD      R6,R6,#+1
   \   0000002C   ........           _BLF     ??_IncP,??_IncP??rA
   \                     ??erase_12:
   \   00000030   050050E1           CMP      R0,R5
   \   00000034   FBFFFF1A           BNE      ??erase_13
   \   00000038   04209DE5           LDR      R2,[SP, #+4]
   \   0000003C   00109DE5           LDR      R1,[SP, #+0]
   \   00000040   0400A0E1           MOV      R0,R4
   \   00000044   ........           _BLF     ??erase_1,??erase??rA_1
   \   00000048   0600A0E1           MOV      R0,R6
   \   0000004C   7640BDE8           POP      {R1,R2,R4-R6,LR}
   \   00000050   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void _Tree<_Tset_traits<PROXRefObject *, less<PROXRefObject *>, allocator<PROXRefObject *>, false>>::clear()
   \                     ??clear:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   041094E5           LDR      R1,[R4, #+4]
   \   0000000C   ........           _BLF     ??_Erase_1,??_Erase??rA_1
   \   00000010   0400A0E1           MOV      R0,R4
   \   00000014   ........           _BLF     ??_Clear,??_Clear??rA
   \   00000018   1040BDE8           POP      {R4,LR}
   \   0000001C   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void _Tree<_Tmap_traits<int, PROXRefObject *, less<int>, allocator<pair<int const, PROXRefObject *>>, false>>::clear()
   \                     ??clear_1:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   041094E5           LDR      R1,[R4, #+4]
   \   0000000C   ........           _BLF     ??_Erase_2,??_Erase??rA_2
   \   00000010   0400A0E1           MOV      R0,R4
   \   00000014   ........           _BLF     ??_Clear,??_Clear??rA
   \   00000018   1040BDE8           POP      {R4,LR}
   \   0000001C   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs _Tree<_Tmap_traits<int, PROXRefObject *, less<int>, allocator<pair<int const, PROXRefObject *>>, false>>::iterator _Tree<_Tmap_traits<int, PROXRefObject *, less<int>, allocator<pair<int const, PROXRefObject *>>, false>>::find(int)
   \                     ??find:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
   \   0000000C   ........           _BLF     ??_Lbound_2,??_Lbound??rA
   \   00000010   040050E1           CMP      R0,R4
   \   00000014   0300000A           BEQ      ??find_1
   \   00000018   101090E5           LDR      R1,[R0, #+16]
   \   0000001C   010055E1           CMP      R5,R1
   \   00000020   0040A0A1           MOVGE    R4,R0
   \   00000024   0400A0E1           MOV      R0,R4
   \                     ??find_1:
   \   00000028   3040BDE8           POP      {R4,R5,LR}
   \   0000002C   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs _Tree<_Tmap_traits<int, PROXRefObject *, less<int>, allocator<pair<int const, PROXRefObject *>>, true>>::_Pairii _Tree<_Tmap_traits<int, PROXRefObject *, less<int>, allocator<pair<int const, PROXRefObject *>>, true>>::equal_range(int)
   \                     ??equal_range:
   \   00000000   F3402DE9           PUSH     {R0,R1,R4-R7,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
   \   0000000C   0260A0E1           MOV      R6,R2
   \   00000010   0610A0E1           MOV      R1,R6
   \   00000014   0500A0E1           MOV      R0,R5
   \   00000018   ........           _BLF     ??_Ubound,??_Ubound??rA
   \   0000001C   0070A0E1           MOV      R7,R0
   \   00000020   0610A0E1           MOV      R1,R6
   \   00000024   0500A0E1           MOV      R0,R5
   \   00000028   ........           _BLF     ??_Lbound,??_Lbound??rA_1
   \   0000002C   00008DE5           STR      R0,[SP, #+0]
   \   00000030   04708DE5           STR      R7,[SP, #+4]
   \   00000034   0D00A0E1           MOV      R0,SP
   \   00000038   030090E8           LDM      R0,{R0,R1}
   \   0000003C   030084E8           STM      R4,{R0,R1}
   \   00000040   0400A0E1           MOV      R0,R4
   \   00000044   F640BDE8           POP      {R1,R2,R4-R7,LR}
   \   00000048   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs _Tree<_Tmap_traits<int, PROXRefObject *, less<int>, allocator<pair<int const, PROXRefObject *>>, false>>::_Pairii _Tree<_Tmap_traits<int, PROXRefObject *, less<int>, allocator<pair<int const, PROXRefObject *>>, false>>::equal_range(int)
   \                     ??equal_range_1:
   \   00000000   F3402DE9           PUSH     {R0,R1,R4-R7,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
   \   0000000C   0260A0E1           MOV      R6,R2
   \   00000010   0610A0E1           MOV      R1,R6
   \   00000014   0500A0E1           MOV      R0,R5
   \   00000018   ........           _BLF     ??_Ubound_2,??_Ubound??rA_1
   \   0000001C   0070A0E1           MOV      R7,R0
   \   00000020   0610A0E1           MOV      R1,R6
   \   00000024   0500A0E1           MOV      R0,R5
   \   00000028   ........           _BLF     ??_Lbound_2,??_Lbound??rA
   \   0000002C   00008DE5           STR      R0,[SP, #+0]
   \   00000030   04708DE5           STR      R7,[SP, #+4]
   \   00000034   0D00A0E1           MOV      R0,SP
   \   00000038   030090E8           LDM      R0,{R0,R1}
   \   0000003C   030084E8           STM      R4,{R0,R1}
   \   00000040   0400A0E1           MOV      R0,R4
   \   00000044   F640BDE8           POP      {R1,R2,R4-R7,LR}
   \   00000048   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs _Tree<_Tset_traits<PROXRefObject *, less<PROXRefObject *>, allocator<PROXRefObject *>, false>>::_Pairii _Tree<_Tset_traits<PROXRefObject *, less<PROXRefObject *>, allocator<PROXRefObject *>, false>>::equal_range(PROXRefObject *)
   \                     ??equal_range_2:
   \   00000000   F3402DE9           PUSH     {R0,R1,R4-R7,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
   \   0000000C   0260A0E1           MOV      R6,R2
   \   00000010   0610A0E1           MOV      R1,R6
   \   00000014   0500A0E1           MOV      R0,R5
   \   00000018   ........           _BLF     ??_Ubound_1,??_Ubound??rA_2
   \   0000001C   0070A0E1           MOV      R7,R0
   \   00000020   0610A0E1           MOV      R1,R6
   \   00000024   0500A0E1           MOV      R0,R5
   \   00000028   ........           _BLF     ??_Lbound_1,??_Lbound??rA_2
   \   0000002C   00008DE5           STR      R0,[SP, #+0]
   \   00000030   04708DE5           STR      R7,[SP, #+4]
   \   00000034   0D00A0E1           MOV      R0,SP
   \   00000038   030090E8           LDM      R0,{R0,R1}
   \   0000003C   030084E8           STM      R4,{R0,R1}
   \   00000040   0400A0E1           MOV      R0,R4
   \   00000044   F640BDE8           POP      {R1,R2,R4-R7,LR}
   \   00000048   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void _Tree<_Tset_traits<PROXRefObject *, less<PROXRefObject *>, allocator<PROXRefObject *>, false>>::_Erase(_Tree<_Tset_traits<PROXRefObject *, less<PROXRefObject *>, allocator<PROXRefObject *>, false>>::_Nodeptr)
   \                     ??_Erase_1:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
   \   0000000C   0560A0E1           MOV      R6,R5
   \   00000010   060000EA           B        ??_Erase_31
   \                     ??_Erase_32:
   \   00000014   081096E5           LDR      R1,[R6, #+8]
   \   00000018   0400A0E1           MOV      R0,R4
   \   0000001C   F7FFFFEB           BL       ??_Erase_1
   \   00000020   006096E5           LDR      R6,[R6, #+0]
   \   00000024   0500A0E1           MOV      R0,R5
   \   00000028   ........           _BLF     `??operator delete`,`??operator delete??rA`
   \   0000002C   0650A0E1           MOV      R5,R6
   \                     ??_Erase_31:
   \   00000030   0D00D6E5           LDRB     R0,[R6, #+13]
   \   00000034   000050E3           CMP      R0,#+0
   \   00000038   F5FFFF0A           BEQ      ??_Erase_32
   \   0000003C   7040BDE8           POP      {R4-R6,LR}
   \   00000040   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void _Tree<_Tmap_traits<int, PROXRefObject *, less<int>, allocator<pair<int const, PROXRefObject *>>, false>>::_Erase(_Tree<_Tmap_traits<int, PROXRefObject *, less<int>, allocator<pair<int const, PROXRefObject *>>, false>>::_Nodeptr)
   \                     ??_Erase_2:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
   \   0000000C   0560A0E1           MOV      R6,R5
   \   00000010   060000EA           B        ??_Erase_33
   \                     ??_Erase_34:
   \   00000014   081096E5           LDR      R1,[R6, #+8]
   \   00000018   0400A0E1           MOV      R0,R4
   \   0000001C   F7FFFFEB           BL       ??_Erase_2
   \   00000020   006096E5           LDR      R6,[R6, #+0]
   \   00000024   0500A0E1           MOV      R0,R5
   \   00000028   ........           _BLF     `??operator delete`,`??operator delete??rA`
   \   0000002C   0650A0E1           MOV      R5,R6
   \                     ??_Erase_33:
   \   00000030   0D00D6E5           LDRB     R0,[R6, #+13]
   \   00000034   000050E3           CMP      R0,#+0
   \   00000038   F5FFFF0A           BEQ      ??_Erase_34
   \   0000003C   7040BDE8           POP      {R4-R6,LR}
   \   00000040   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void _Tree<_Tset_traits<TankState, less<TankState>, allocator<TankState>, false>>::_Erase(_Tree<_Tset_traits<TankState, less<TankState>, allocator<TankState>, false>>::_Nodeptr)
   \                     ??_Erase_3:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
   \   0000000C   0560A0E1           MOV      R6,R5
   \   00000010   060000EA           B        ??_Erase_35
   \                     ??_Erase_36:
   \   00000014   081096E5           LDR      R1,[R6, #+8]
   \   00000018   0400A0E1           MOV      R0,R4
   \   0000001C   F7FFFFEB           BL       ??_Erase_3
   \   00000020   006096E5           LDR      R6,[R6, #+0]
   \   00000024   0500A0E1           MOV      R0,R5
   \   00000028   ........           _BLF     `??operator delete`,`??operator delete??rA`
   \   0000002C   0650A0E1           MOV      R5,R6
   \                     ??_Erase_35:
   \   00000030   0D00D6E5           LDRB     R0,[R6, #+13]
   \   00000034   000050E3           CMP      R0,#+0
   \   00000038   F5FFFF0A           BEQ      ??_Erase_36
   \   0000003C   7040BDE8           POP      {R4-R6,LR}
   \   00000040   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void _Tree<_Tmap_traits<int, PROXRefObject *, less<int>, allocator<pair<int const, PROXRefObject *>>, true>>::_Erase(_Tree<_Tmap_traits<int, PROXRefObject *, less<int>, allocator<pair<int const, PROXRefObject *>>, true>>::_Nodeptr)
   \                     ??_Erase_4:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
   \   0000000C   0560A0E1           MOV      R6,R5
   \   00000010   060000EA           B        ??_Erase_37
   \                     ??_Erase_38:
   \   00000014   081096E5           LDR      R1,[R6, #+8]
   \   00000018   0400A0E1           MOV      R0,R4
   \   0000001C   F7FFFFEB           BL       ??_Erase_4
   \   00000020   006096E5           LDR      R6,[R6, #+0]
   \   00000024   0500A0E1           MOV      R0,R5
   \   00000028   ........           _BLF     `??operator delete`,`??operator delete??rA`
   \   0000002C   0650A0E1           MOV      R5,R6
   \                     ??_Erase_37:
   \   00000030   0D00D6E5           LDRB     R0,[R6, #+13]
   \   00000034   000050E3           CMP      R0,#+0
   \   00000038   F5FFFF0A           BEQ      ??_Erase_38
   \   0000003C   7040BDE8           POP      {R4-R6,LR}
   \   00000040   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs _Tree<_Tset_traits<TankState, less<TankState>, allocator<TankState>, false>>::iterator _Tree<_Tset_traits<TankState, less<TankState>, allocator<TankState>, false>>::_Insert(bool, _Tree<_Tset_traits<TankState, less<TankState>, allocator<TankState>, false>>::_Nodeptr, TankState)
   \                     ??_Insert_1:
   \   00000000   F0412DE9           PUSH     {R4-R8,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
   \   0000000C   0260A0E1           MOV      R6,R2
   \   00000010   0370A0E1           MOV      R7,R3
   \   00000014   1400A0E3           MOV      R0,#+20
   \   00000018   ........           _BLF     `??operator new`,`??operator new??rA`
   \   0000001C   0080B0E1           MOVS     R8,R0
   \   00000020   0600000A           BEQ      ??_Insert_14
   \   00000024   004088E5           STR      R4,[R8, #+0]
   \   00000028   046088E5           STR      R6,[R8, #+4]
   \   0000002C   084088E5           STR      R4,[R8, #+8]
   \   00000030   0000A0E3           MOV      R0,#+0
   \   00000034   0C00C8E5           STRB     R0,[R8, #+12]
   \   00000038   0D00C8E5           STRB     R0,[R8, #+13]
   \   0000003C   1070C8E5           STRB     R7,[R8, #+16]
   \                     ??_Insert_14:
   \   00000040   0830A0E1           MOV      R3,R8
   \   00000044   0620A0E1           MOV      R2,R6
   \   00000048   0510A0E1           MOV      R1,R5
   \   0000004C   0400A0E1           MOV      R0,R4
   \   00000050   ........           _BLF     ??_Insert,??_Insert??rA_4
   \   00000054   0800A0E1           MOV      R0,R8
   \   00000058   F041BDE8           POP      {R4-R8,LR}
   \   0000005C   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs _Tree<_Tmap_traits<int, PROXRefObject *, less<int>, allocator<pair<int const, PROXRefObject *>>, true>>::iterator _Tree<_Tmap_traits<int, PROXRefObject *, less<int>, allocator<pair<int const, PROXRefObject *>>, true>>::_Insert(bool, _Tree<_Tmap_traits<int, PROXRefObject *, less<int>, allocator<pair<int const, PROXRefObject *>>, true>>::_Nodeptr, pair<int const, PROXRefObject *> const &)
   \                     ??_Insert_2:
   \   00000000   F0412DE9           PUSH     {R4-R8,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
   \   0000000C   0260A0E1           MOV      R6,R2
   \   00000010   0380A0E1           MOV      R8,R3
   \   00000014   1800A0E3           MOV      R0,#+24
   \   00000018   ........           _BLF     `??operator new`,`??operator new??rA`
   \   0000001C   0070B0E1           MOVS     R7,R0
   \   00000020   0A00000A           BEQ      ??_Insert_15
   \   00000024   004087E5           STR      R4,[R7, #+0]
   \   00000028   046087E5           STR      R6,[R7, #+4]
   \   0000002C   084087E5           STR      R4,[R7, #+8]
   \   00000030   0000A0E3           MOV      R0,#+0
   \   00000034   0C00C7E5           STRB     R0,[R7, #+12]
   \   00000038   0D00C7E5           STRB     R0,[R7, #+13]
   \   0000003C   001098E5           LDR      R1,[R8, #+0]
   \   00000040   100087E2           ADD      R0,R7,#+16
   \   00000044   001080E5           STR      R1,[R0, #+0]
   \   00000048   041098E5           LDR      R1,[R8, #+4]
   \   0000004C   041080E5           STR      R1,[R0, #+4]
   \                     ??_Insert_15:
   \   00000050   0730A0E1           MOV      R3,R7
   \   00000054   0620A0E1           MOV      R2,R6
   \   00000058   0510A0E1           MOV      R1,R5
   \   0000005C   0400A0E1           MOV      R0,R4
   \   00000060   ........           _BLF     ??_Insert,??_Insert??rA_4
   \   00000064   0700A0E1           MOV      R0,R7
   \   00000068   F041BDE8           POP      {R4-R8,LR}
   \   0000006C   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs _Tree<_Tmap_traits<int, PROXRefObject *, less<int>, allocator<pair<int const, PROXRefObject *>>, false>>::iterator _Tree<_Tmap_traits<int, PROXRefObject *, less<int>, allocator<pair<int const, PROXRefObject *>>, false>>::_Insert(bool, _Tree<_Tmap_traits<int, PROXRefObject *, less<int>, allocator<pair<int const, PROXRefObject *>>, false>>::_Nodeptr, pair<int const, PROXRefObject *> const &)
   \                     ??_Insert_3:
   \   00000000   F0412DE9           PUSH     {R4-R8,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
   \   0000000C   0260A0E1           MOV      R6,R2
   \   00000010   0380A0E1           MOV      R8,R3
   \   00000014   1800A0E3           MOV      R0,#+24
   \   00000018   ........           _BLF     `??operator new`,`??operator new??rA`
   \   0000001C   0070B0E1           MOVS     R7,R0
   \   00000020   0A00000A           BEQ      ??_Insert_16
   \   00000024   004087E5           STR      R4,[R7, #+0]
   \   00000028   046087E5           STR      R6,[R7, #+4]
   \   0000002C   084087E5           STR      R4,[R7, #+8]
   \   00000030   0000A0E3           MOV      R0,#+0
   \   00000034   0C00C7E5           STRB     R0,[R7, #+12]
   \   00000038   0D00C7E5           STRB     R0,[R7, #+13]
   \   0000003C   001098E5           LDR      R1,[R8, #+0]
   \   00000040   100087E2           ADD      R0,R7,#+16
   \   00000044   001080E5           STR      R1,[R0, #+0]
   \   00000048   041098E5           LDR      R1,[R8, #+4]
   \   0000004C   041080E5           STR      R1,[R0, #+4]
   \                     ??_Insert_16:
   \   00000050   0730A0E1           MOV      R3,R7
   \   00000054   0620A0E1           MOV      R2,R6
   \   00000058   0510A0E1           MOV      R1,R5
   \   0000005C   0400A0E1           MOV      R0,R4
   \   00000060   ........           _BLF     ??_Insert,??_Insert??rA_4
   \   00000064   0700A0E1           MOV      R0,R7
   \   00000068   F041BDE8           POP      {R4-R8,LR}
   \   0000006C   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs _Tree<_Tset_traits<PROXRefObject *, less<PROXRefObject *>, allocator<PROXRefObject *>, false>>::iterator _Tree<_Tset_traits<PROXRefObject *, less<PROXRefObject *>, allocator<PROXRefObject *>, false>>::_Insert(bool, _Tree<_Tset_traits<PROXRefObject *, less<PROXRefObject *>, allocator<PROXRefObject *>, false>>::_Nodeptr, PROXRefObject *)
   \                     ??_Insert_4:
   \   00000000   F0412DE9           PUSH     {R4-R8,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
   \   0000000C   0260A0E1           MOV      R6,R2
   \   00000010   0370A0E1           MOV      R7,R3
   \   00000014   1400A0E3           MOV      R0,#+20
   \   00000018   ........           _BLF     `??operator new`,`??operator new??rA`
   \   0000001C   0080B0E1           MOVS     R8,R0
   \   00000020   0600000A           BEQ      ??_Insert_17
   \   00000024   004088E5           STR      R4,[R8, #+0]
   \   00000028   046088E5           STR      R6,[R8, #+4]
   \   0000002C   084088E5           STR      R4,[R8, #+8]
   \   00000030   0000A0E3           MOV      R0,#+0
   \   00000034   0C00C8E5           STRB     R0,[R8, #+12]
   \   00000038   0D00C8E5           STRB     R0,[R8, #+13]
   \   0000003C   107088E5           STR      R7,[R8, #+16]
   \                     ??_Insert_17:
   \   00000040   0830A0E1           MOV      R3,R8
   \   00000044   0620A0E1           MOV      R2,R6
   \   00000048   0510A0E1           MOV      R1,R5
   \   0000004C   0400A0E1           MOV      R0,R4
   \   00000050   ........           _BLF     ??_Insert,??_Insert??rA_4
   \   00000054   0800A0E1           MOV      R0,R8
   \   00000058   F041BDE8           POP      {R4-R8,LR}
   \   0000005C   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs _Tree<_Tmap_traits<int, PROXRefObject *, less<int>, allocator<pair<int const, PROXRefObject *>>, true>>::_Nodeptr _Tree<_Tmap_traits<int, PROXRefObject *, less<int>, allocator<pair<int const, PROXRefObject *>>, true>>::_Lbound(int) const
   \                     ??_Lbound:
   \   00000000   042090E5           LDR      R2,[R0, #+4]
   \                     ??_Lbound_3:
   \   00000004   0D30D2E5           LDRB     R3,[R2, #+13]
   \   00000008   000053E3           CMP      R3,#+0
   \   0000000C   1EFF2F11           BXNE     LR
   \   00000010   103092E5           LDR      R3,[R2, #+16]
   \   00000014   010053E1           CMP      R3,R1
   \   00000018   082092B5           LDRLT    R2,[R2, #+8]
   \   0000001C   0200A0A1           MOVGE    R0,R2
   \   00000020   002092A5           LDRGE    R2,[R2, #+0]
   \   00000024   F6FFFFEA           B        ??_Lbound_3

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs _Tree<_Tset_traits<PROXRefObject *, less<PROXRefObject *>, allocator<PROXRefObject *>, false>>::_Nodeptr _Tree<_Tset_traits<PROXRefObject *, less<PROXRefObject *>, allocator<PROXRefObject *>, false>>::_Lbound(PROXRefObject *) const
   \                     ??_Lbound_1:
   \   00000000   042090E5           LDR      R2,[R0, #+4]
   \                     ??_Lbound_4:
   \   00000004   0D30D2E5           LDRB     R3,[R2, #+13]
   \   00000008   000053E3           CMP      R3,#+0
   \   0000000C   1EFF2F11           BXNE     LR
   \   00000010   103092E5           LDR      R3,[R2, #+16]
   \   00000014   010053E1           CMP      R3,R1
   \   00000018   08209235           LDRCC    R2,[R2, #+8]
   \   0000001C   0200A021           MOVCS    R0,R2
   \   00000020   00209225           LDRCS    R2,[R2, #+0]
   \   00000024   F6FFFFEA           B        ??_Lbound_4

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs _Tree<_Tmap_traits<int, PROXRefObject *, less<int>, allocator<pair<int const, PROXRefObject *>>, false>>::_Nodeptr _Tree<_Tmap_traits<int, PROXRefObject *, less<int>, allocator<pair<int const, PROXRefObject *>>, false>>::_Lbound(int) const
   \                     ??_Lbound_2:
   \   00000000   042090E5           LDR      R2,[R0, #+4]
   \                     ??_Lbound_5:
   \   00000004   0D30D2E5           LDRB     R3,[R2, #+13]
   \   00000008   000053E3           CMP      R3,#+0
   \   0000000C   1EFF2F11           BXNE     LR
   \   00000010   103092E5           LDR      R3,[R2, #+16]
   \   00000014   010053E1           CMP      R3,R1
   \   00000018   082092B5           LDRLT    R2,[R2, #+8]
   \   0000001C   0200A0A1           MOVGE    R0,R2
   \   00000020   002092A5           LDRGE    R2,[R2, #+0]
   \   00000024   F6FFFFEA           B        ??_Lbound_5

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs _Tree<_Tmap_traits<int, PROXRefObject *, less<int>, allocator<pair<int const, PROXRefObject *>>, true>>::_Nodeptr _Tree<_Tmap_traits<int, PROXRefObject *, less<int>, allocator<pair<int const, PROXRefObject *>>, true>>::_Ubound(int) const
   \                     ??_Ubound:
   \   00000000   042090E5           LDR      R2,[R0, #+4]
   \                     ??_Ubound_3:
   \   00000004   0D30D2E5           LDRB     R3,[R2, #+13]
   \   00000008   000053E3           CMP      R3,#+0
   \   0000000C   1EFF2F11           BXNE     LR
   \   00000010   103092E5           LDR      R3,[R2, #+16]
   \   00000014   030051E1           CMP      R1,R3
   \   00000018   082092A5           LDRGE    R2,[R2, #+8]
   \   0000001C   0200A0B1           MOVLT    R0,R2
   \   00000020   002092B5           LDRLT    R2,[R2, #+0]
   \   00000024   F6FFFFEA           B        ??_Ubound_3

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs _Tree<_Tset_traits<PROXRefObject *, less<PROXRefObject *>, allocator<PROXRefObject *>, false>>::_Nodeptr _Tree<_Tset_traits<PROXRefObject *, less<PROXRefObject *>, allocator<PROXRefObject *>, false>>::_Ubound(PROXRefObject *) const
   \                     ??_Ubound_1:
   \   00000000   042090E5           LDR      R2,[R0, #+4]
   \                     ??_Ubound_4:
   \   00000004   0D30D2E5           LDRB     R3,[R2, #+13]
   \   00000008   000053E3           CMP      R3,#+0
   \   0000000C   1EFF2F11           BXNE     LR
   \   00000010   103092E5           LDR      R3,[R2, #+16]
   \   00000014   030051E1           CMP      R1,R3
   \   00000018   08209225           LDRCS    R2,[R2, #+8]
   \   0000001C   0200A031           MOVCC    R0,R2
   \   00000020   00209235           LDRCC    R2,[R2, #+0]
   \   00000024   F6FFFFEA           B        ??_Ubound_4

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs _Tree<_Tmap_traits<int, PROXRefObject *, less<int>, allocator<pair<int const, PROXRefObject *>>, false>>::_Nodeptr _Tree<_Tmap_traits<int, PROXRefObject *, less<int>, allocator<pair<int const, PROXRefObject *>>, false>>::_Ubound(int) const
   \                     ??_Ubound_2:
   \   00000000   042090E5           LDR      R2,[R0, #+4]
   \                     ??_Ubound_5:
   \   00000004   0D30D2E5           LDRB     R3,[R2, #+13]
   \   00000008   000053E3           CMP      R3,#+0
   \   0000000C   1EFF2F11           BXNE     LR
   \   00000010   103092E5           LDR      R3,[R2, #+16]
   \   00000014   030051E1           CMP      R1,R3
   \   00000018   082092A5           LDRGE    R2,[R2, #+8]
   \   0000001C   0200A0B1           MOVLT    R0,R2
   \   00000020   002092B5           LDRLT    R2,[R2, #+0]
   \   00000024   F6FFFFEA           B        ??_Ubound_5

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs set<TankState>::~set()
   \                     `?~set_1`:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   041094E5           LDR      R1,[R4, #+4]
   \   0000000C   ........           _BLF     ??_Erase_3,??_Erase??rA_3
   \   00000010   0400A0E1           MOV      R0,R4
   \   00000014   ........           _BLF     ??_Clear,??_Clear??rA
   \   00000018   1040BDE8           POP      {R4,LR}
   \   0000001C   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs set<PROXRefObject *>::~set()
   \                     `?~set`:
   \   00000000   00402DE9           PUSH     {LR}
   \   00000004   ........           _BLF     ??clear,??clear??rA
   \   00000008   0040BDE8           POP      {LR}
   \   0000000C   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs set<TankState>::set()
   \                     ??set:
   \   00000000   11402DE9           PUSH     {R0,R4,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0110A0E3           MOV      R1,#+1
   \   0000000C   0D00A0E1           MOV      R0,SP
   \   00000010   ........           _BLF     __data_memzero,??__data_memzero??rA
   \   00000014   0400A0E1           MOV      R0,R4
   \   00000018   ........           _BLF     ??_Clear,??_Clear??rA
   \   0000001C   0000DDE5           LDRB     R0,[SP, #+0]
   \   00000020   1400C4E5           STRB     R0,[R4, #+20]
   \   00000024   0400A0E1           MOV      R0,R4
   \   00000028   1240BDE8           POP      {R1,R4,LR}
   \   0000002C   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs map<int, PROXRefObject *>::~map()
   \                     `?~map`:
   \   00000000   00402DE9           PUSH     {LR}
   \   00000004   ........           _BLF     ??clear_1,??clear??rA_1
   \   00000008   0040BDE8           POP      {LR}
   \   0000000C   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs multimap<int, PROXRefObject *>::~multimap()
   \                     `?~multimap`:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   041094E5           LDR      R1,[R4, #+4]
   \   0000000C   ........           _BLF     ??_Erase_4,??_Erase??rA_4
   \   00000010   0400A0E1           MOV      R0,R4
   \   00000014   ........           _BLF     ??_Clear,??_Clear??rA
   \   00000018   1040BDE8           POP      {R4,LR}
   \   0000001C   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void _Vector_value<allocator<void>>::_Zero()
   \                     ??_Zero:
   \   00000000   0010A0E3           MOV      R1,#+0
   \   00000004   001080E5           STR      R1,[R0, #+0]
   \   00000008   041080E5           STR      R1,[R0, #+4]
   \   0000000C   081080E5           STR      R1,[R0, #+8]
   \   00000010   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void _Vector_impl<PRogramObjectBase *, allocator<PRogramObjectBase *>>::_Tidy()
   \                     ??_Tidy:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   000094E5           LDR      R0,[R4, #+0]
   \   0000000C   000050E3           CMP      R0,#+0
   \   00000010   0100000A           BEQ      ??_Tidy_2
   \   00000014   040084E5           STR      R0,[R4, #+4]
   \   00000018   ........           _BLF     `??operator delete`,`??operator delete??rA`
   \                     ??_Tidy_2:
   \   0000001C   0400A0E1           MOV      R0,R4
   \   00000020   ........           _BLF     ??_Zero,??_Zero??rA
   \   00000024   1040BDE8           POP      {R4,LR}
   \   00000028   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void _Vector_impl<PRogramObjectBase *, allocator<PRogramObjectBase *>>::_Assign(_Vector_impl<PRogramObjectBase *, allocator<PRogramObjectBase *>> const &)
   \                     ??_Assign:
   \   00000000   71402DE9           PUSH     {R0,R4-R6,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
   \   0000000C   050054E1           CMP      R4,R5
   \   00000010   2E00000A           BEQ      ??_Assign_1
   \   00000014   041095E5           LDR      R1,[R5, #+4]
   \   00000018   000095E5           LDR      R0,[R5, #+0]
   \   0000001C   002041E0           SUB      R2,R1,R0
   \   00000020   2231B0E1           LSRS     R3,R2,#+2
   \   00000024   0200001A           BNE      ??_Assign_2
   \   00000028   0400A0E1           MOV      R0,R4
   \   0000002C   ........           _BLF     ??_Tidy,??_Tidy??rA_1
   \   00000030   260000EA           B        ??_Assign_1
   \                     ??_Assign_2:
   \   00000034   002094E5           LDR      R2,[R4, #+0]
   \   00000038   046094E5           LDR      R6,[R4, #+4]
   \   0000003C   026046E0           SUB      R6,R6,R2
   \   00000040   260153E1           CMP      R3,R6, LSR #+2
   \   00000044   0700008A           BHI      ??_Assign_3
   \   00000048   ........           _BLF     _Copy_a4,??_Copy_a4??rA
   \   0000004C   040095E5           LDR      R0,[R5, #+4]
   \   00000050   001095E5           LDR      R1,[R5, #+0]
   \   00000054   010040E0           SUB      R0,R0,R1
   \   00000058   001094E5           LDR      R1,[R4, #+0]
   \   0000005C   2001A0E1           LSR      R0,R0,#+2
   \   00000060   000181E0           ADD      R0,R1,R0, LSL #+2
   \   00000064   180000EA           B        ??_Assign_4
   \                     ??_Assign_3:
   \   00000068   086094E5           LDR      R6,[R4, #+8]
   \   0000006C   026046E0           SUB      R6,R6,R2
   \   00000070   260153E1           CMP      R3,R6, LSR #+2
   \   00000074   1300009A           BLS      ??_Assign_5
   \                     ??_Assign_6:
   \   00000078   000052E3           CMP      R2,#+0
   \   0000007C   0100000A           BEQ      ??_Assign_7
   \   00000080   0200A0E1           MOV      R0,R2
   \   00000084   ........           _BLF     `??operator delete`,`??operator delete??rA`
   \                     ??_Assign_7:
   \   00000088   040095E5           LDR      R0,[R5, #+4]
   \   0000008C   001095E5           LDR      R1,[R5, #+0]
   \   00000090   016040E0           SUB      R6,R0,R1
   \   00000094   0400A0E1           MOV      R0,R4
   \   00000098   ........           _BLF     ??_Zero,??_Zero??rA
   \   0000009C   000056E3           CMP      R6,#+0
   \   000000A0   0A00000A           BEQ      ??_Assign_1
   \   000000A4   0600A0E1           MOV      R0,R6
   \   000000A8   ........           _BLF     `??operator new`,`??operator new??rA`
   \   000000AC   000084E5           STR      R0,[R4, #+0]
   \   000000B0   0020A0E1           MOV      R2,R0
   \   000000B4   042084E5           STR      R2,[R4, #+4]
   \   000000B8   020086E0           ADD      R0,R6,R2
   \   000000BC   080084E5           STR      R0,[R4, #+8]
   \   000000C0   041095E5           LDR      R1,[R5, #+4]
   \   000000C4   000095E5           LDR      R0,[R5, #+0]
   \                     ??_Assign_5:
   \   000000C8   ........           _BLF     _Copy_a4,??_Copy_a4??rA
   \                     ??_Assign_4:
   \   000000CC   040084E5           STR      R0,[R4, #+4]
   \                     ??_Assign_1:
   \   000000D0   7140BDE8           POP      {R0,R4-R6,LR}
   \   000000D4   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs bool vector<PRogramObjectBase *>::empty() const
   \                     ??empty:
   \   00000000   041090E5           LDR      R1,[R0, #+4]
   \   00000004   000090E5           LDR      R0,[R0, #+0]
   \   00000008   000041E0           SUB      R0,R1,R0
   \   0000000C   2001B0E1           LSRS     R0,R0,#+2
   \   00000010   0100A003           MOVEQ    R0,#+1
   \   00000014   1EFF2F01           BXEQ     LR
   \   00000018   0000A0E3           MOV      R0,#+0
   \   0000001C   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void operator+(string const &, string const &)
   \                     `??operator+`:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   1CD04DE2           SUB      SP,SP,#+28
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   0250A0E1           MOV      R5,R2
   \   00000010   0D00A0E1           MOV      R0,SP
   \   00000014   ........           _BLF     ??string,??string??rA
   \   00000018   34109FE5           LDR      R1,`??operator+_2`  ;; ??npos
   \   0000001C   0020A0E3           MOV      R2,#+0
   \   00000020   003091E5           LDR      R3,[R1, #+0]
   \   00000024   0510A0E1           MOV      R1,R5
   \   00000028   ........           _BLF     ??append,??append??rA
   \   0000002C   0010A0E1           MOV      R1,R0
   \   00000030   0400A0E1           MOV      R0,R4
   \   00000034   ........           _BLF     ??string,??string??rA
   \   00000038   0020A0E3           MOV      R2,#+0
   \   0000003C   0110A0E3           MOV      R1,#+1
   \   00000040   0D00A0E1           MOV      R0,SP
   \   00000044   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   00000048   1CD08DE2           ADD      SP,SP,#+28
   \   0000004C   3040BDE8           POP      {R4,R5,LR}
   \   00000050   1EFF2FE1           BX       LR               ;; return
   \                     `??operator+_2`:
   \   00000054   ........           DC32     ??npos

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void operator+(string const &, char const *)
   \                     `??operator+_1`:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   1CD04DE2           SUB      SP,SP,#+28
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   0250A0E1           MOV      R5,R2
   \   00000010   0D00A0E1           MOV      R0,SP
   \   00000014   ........           _BLF     ??string,??string??rA
   \   00000018   0060A0E1           MOV      R6,R0
   \   0000001C   0500A0E1           MOV      R0,R5
   \   00000020   ........           _BLF     strlen,??strlen??rA
   \   00000024   0020A0E1           MOV      R2,R0
   \   00000028   0510A0E1           MOV      R1,R5
   \   0000002C   0600A0E1           MOV      R0,R6
   \   00000030   ........           _BLF     ??append_1,??append??rA_1
   \   00000034   0010A0E1           MOV      R1,R0
   \   00000038   0400A0E1           MOV      R0,R4
   \   0000003C   ........           _BLF     ??string,??string??rA
   \   00000040   0020A0E3           MOV      R2,#+0
   \   00000044   0110A0E3           MOV      R1,#+1
   \   00000048   0D00A0E1           MOV      R0,SP
   \   0000004C   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   00000050   1CD08DE2           ADD      SP,SP,#+28
   \   00000054   7040BDE8           POP      {R4-R6,LR}
   \   00000058   1EFF2FE1           BX       LR               ;; return
      2          #pragma hdrstop
      3          #ifdef BORLAND
      4              #pragma package(smart_init)
      5          #endif
      6          
      7          //---------------------------------------------------------------------------
      8          

   \                                 In segment DATA_C, align 4, align-sorted
      9          map<int, PROXRefObject*>PROXRefObject::SaabXRefList  ;
   \                     ?_0:
   \   00000000   ............       DC32 ?_1, ??SaabXRefList, `?~map`
   \              ............
   \   0000000C   ............       DC32 ?_3, ??ANPro3XRefList, `?~multimap`
   \              ............
   \   00000018   ............       DC32 ?_5, ??ObjectSet, `?~set`
   \              ............

   \                                 In segment DATA_I, align 4, align-sorted
   \                     ??SaabXRefList:
   \   00000000                      DS8 24
   \   00000018                      REQUIRE `?<Initializer for SaabXRefList>`
     10          multimap<int, PROXRefObject*>PROXRefObject::ANPro3XRefList;
   \                     ??ANPro3XRefList:
   \   00000018                      DS8 24
   \   00000030                      REQUIRE `?<Initializer for ANPro3XRefList>`
     11          set<PROXRefObject*>PROXRefObject::ObjectSet;
   \                     ??ObjectSet:
   \   00000030                      DS8 24
   \   00000048                      REQUIRE `?<Initializer for ObjectSet>`
     12          bool PROXRefObject::IsSetTonline = true;
   \                     ??IsSetTonline:
   \   00000048                      DS8 1
   \   00000049                      REQUIRE `?<Initializer for IsSetTonline>`

   \                                 In segment CODE, align 4, keep-with-next
     13          PROXRefObject::PROXRefObject(bool AddToList):PRogramObject(AddToList)
   \                     ??PROXRefObject:
   \   00000000   33402DE9           PUSH     {R0,R1,R4,R5,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
     14          {
   \   0000000C   ........           _BLF     ??PRogramObject,??PRogramObject??rA
   \   00000010   ........           LDR      R0,??DataTable2  ;; ??__vtbl
     15              //PROPtr          = this;
     16              SaabId          = -1;
     17              ANPro3Id        = -1;
     18              State           = tUndefined;
     19              ExcludeState    = false;
   \   00000014   0010A0E3           MOV      R1,#+0
   \   00000018   A40084E5           STR      R0,[R4, #+164]
   \   0000001C   0000E0E3           MVN      R0,#+0
   \   00000020   4C0184E5           STR      R0,[R4, #+332]
   \   00000024   500184E5           STR      R0,[R4, #+336]
   \   00000028   0400A0E3           MOV      R0,#+4
   \   0000002C   4801C4E5           STRB     R0,[R4, #+328]
   \   00000030   0000A0E3           MOV      R0,#+0
   \   00000034   4911C4E5           STRB     R1,[R4, #+329]
     20              IsOnline        = true;
   \   00000038   0110A0E3           MOV      R1,#+1
   \   0000003C   4A11C4E5           STRB     R1,[R4, #+330]
     21              TankType        = TANKTYPE_NONE;
   \   00000040   540184E5           STR      R0,[R4, #+340]
     22              if (AddToList) {
   \   00000044   000055E3           CMP      R5,#+0
   \   00000048   0300000A           BEQ      ??PROXRefObject_1
     23                  ObjectSet.insert(this);
   \   0000004C   10109FE5           LDR      R1,??PROXRefObject_2  ;; ??SaabXRefList + 48
   \   00000050   0420A0E1           MOV      R2,R4
   \   00000054   0D00A0E1           MOV      R0,SP
   \   00000058   ........           _BLF     ??insert_3,??insert??rA
     24              }
     25          }
   \                     ??PROXRefObject_1:
   \   0000005C   0400A0E1           MOV      R0,R4
   \   00000060   ........           B        ?Subroutine30
   \                     ??PROXRefObject_2:
   \   00000064   ........           DC32     ??SaabXRefList + 48

   \                                 In segment CODE, align 4, keep-with-next
   \                     ?Subroutine30:
   \   00000000   3640BDE8           POP      {R1,R2,R4,R5,LR}
   \   00000004   1EFF2FE1           BX       LR               ;; return
     26          
     27          

   \                                 In segment CODE, align 4, keep-with-next
     28          PROXRefObject::~PROXRefObject()
     29          {
   \                     `?~PROXRefObject`:
   \   00000000   F3412DE9           PUSH     {R0,R1,R4-R8,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
   \   0000000C   000054E3           CMP      R4,#+0
   \   00000010   3A00000A           BEQ      `?~PROXRefObject_2`
   \   00000014   ........           LDR      R0,??DataTable2  ;; ??__vtbl
     30              if ( SaabId != -1 ) {
   \   00000018   ........           LDR      R6,??DataTable9  ;; ??SaabXRefList
   \   0000001C   A40084E5           STR      R0,[R4, #+164]
   \   00000020   4C1194E5           LDR      R1,[R4, #+332]
   \   00000024   0000E0E3           MVN      R0,#+0
   \   00000028   000051E1           CMP      R1,R0
   \   0000002C   0200000A           BEQ      `?~PROXRefObject_3`
     31                  SaabXRefList.erase(SaabId);
   \   00000030   0600A0E1           MOV      R0,R6
   \   00000034   ........           _BLF     ??erase_3,??erase??rA_2
   \   00000038   260000EA           B        `?~PROXRefObject_4`
     32              } else if ( ANPro3Id != -1 ) {
   \                     `?~PROXRefObject_3`:
   \   0000003C   502194E5           LDR      R2,[R4, #+336]
   \   00000040   000052E1           CMP      R2,R0
   \   00000044   2300000A           BEQ      `?~PROXRefObject_4`
     33                  bool Erased = false;
   \   00000048   0070A0E3           MOV      R7,#+0
     34                  multimap<int,PROXRefObject*>::iterator it;
     35                  pair<multimap<int,PROXRefObject*>::iterator,multimap<int,PROXRefObject*>::iterator> ObjMapIterator;
     36                  ObjMapIterator = ANPro3XRefList.equal_range(ANPro3Id);
   \   0000004C   181086E2           ADD      R1,R6,#+24
   \   00000050   0D00A0E1           MOV      R0,SP
   \   00000054   ........           _BLF     ??equal_range,??equal_range??rA_2
     37                  for ( it=ObjMapIterator.first; !Erased && it!=ObjMapIterator.second; ++it ) {
   \   00000058   00809DE5           LDR      R8,[SP, #+0]
   \                     `?~PROXRefObject_5`:
   \   0000005C   04009DE5           LDR      R0,[SP, #+4]
   \   00000060   000058E1           CMP      R8,R0
   \   00000064   1B00000A           BEQ      `?~PROXRefObject_4`
     38                      PROXRefObject *TmpPtr = (*it).second;
   \   00000068   140098E5           LDR      R0,[R8, #+20]
     39                      int tmpType;
     40                      switch ( TmpPtr->Type ) {
   \   0000006C   A00090E5           LDR      R0,[R0, #+160]
   \   00000070   1B1040E2           SUB      R1,R0,#+27
   \   00000074   401E41E2           SUB      R1,R1,#+1024
   \   00000078   060051E3           CMP      R1,#+6
   \   0000007C   0600008A           BHI      `?~PROXRefObject_6`
   \   00000080   012F8FE2           ADR      R2,`?~PROXRefObject_1`
   \   00000084   0120D2E7           LDRB     R2,[R2, R1]
   \   00000088   02F18FE0           ADD      PC,PC,R2, LSL #+2
   \                     `?~PROXRefObject_1`:
   \   0000008C   01010101           DC8      +1,+1,+1,+1
   \   00000090   01010100           DC8      +1,+1,+1,+0
     41                      case C_PRO_CARGO  :
     42                      case C_PRO_BALLAST:
     43                      case C_PRO_HFO    :
     44                      case C_PRO_DO     :
     45                      case C_PRO_LUB    :
     46                      case C_PRO_FW     :
     47                      case C_PRO_MISC   :
     48                          tmpType = C_PRO_TANK;
   \                     `?~PROXRefObject_7`:
   \   00000094   1A00A0E3           MOV      R0,#+26
   \   00000098   400E80E3           ORR      R0,R0,#0x400
     49                          break;
     50                      default:
     51                          tmpType = TmpPtr->Type;
     52                      }
     53                      if ( tmpType == Type ) {
   \                     `?~PROXRefObject_6`:
   \   0000009C   A01094E5           LDR      R1,[R4, #+160]
   \   000000A0   010050E1           CMP      R0,R1
   \   000000A4   0600001A           BNE      `?~PROXRefObject_8`
     54                          ANPro3XRefList.erase(it);
   \   000000A8   0800A0E1           MOV      R0,R8
   \   000000AC   ........           _BLF     ??_IncP,??_IncP??rA
   \   000000B0   0810A0E1           MOV      R1,R8
   \   000000B4   180086E2           ADD      R0,R6,#+24
   \   000000B8   ........           _BLF     ??_Erase,??_Erase??rA
   \   000000BC   ........           _BLF     `??operator delete`,`??operator delete??rA`
     55                          Erased = true;
   \   000000C0   0170A0E3           MOV      R7,#+1
     56                      }
     57                  }
   \                     `?~PROXRefObject_8`:
   \   000000C4   0800A0E1           MOV      R0,R8
   \   000000C8   ........           _BLF     ??_IncP,??_IncP??rA
   \   000000CC   0080A0E1           MOV      R8,R0
   \   000000D0   000057E3           CMP      R7,#+0
   \   000000D4   E0FFFF0A           BEQ      `?~PROXRefObject_5`
     58              }
     59              ObjectSet.erase(this);
   \                     `?~PROXRefObject_4`:
   \   000000D8   0410A0E1           MOV      R1,R4
   \   000000DC   300086E2           ADD      R0,R6,#+48
   \   000000E0   ........           _BLF     ??erase_2,??erase??rA_3
     60          
     61          }
   \   000000E4   0010A0E3           MOV      R1,#+0
   \   000000E8   0400A0E1           MOV      R0,R4
   \   000000EC   ........           _BLF     `?~PRogramObject`,`?~PRogramObject??rA`
   \   000000F0   010015E3           TST      R5,#0x1
   \   000000F4   0100000A           BEQ      `?~PROXRefObject_2`
   \   000000F8   0400A0E1           MOV      R0,R4
   \   000000FC   ........           _BLF     `??operator delete`,`??operator delete??rA`
   \                     `?~PROXRefObject_2`:
   \   00000100   F341BDE8           POP      {R0,R1,R4-R8,LR}
   \   00000104   1EFF2FE1           BX       LR               ;; return
     62          ///////////////////////////////////////////////////////////////
     63          //
     64          // Routines for the Configuration
     65          //
     66          ///////////////////////////////////////////////////////////////
     67          

   \                                 In segment CODE, align 4, keep-with-next
     68          AnsiString PROXRefObject::MakeConfigString(int ExtraTabs)
     69          {
   \                     ??MakeConfigString:
   \   00000000   F04F2DE9           PUSH     {R4-R11,LR}
   \   00000004   54DF4DE2           SUB      SP,SP,#+336
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   0150A0E1           MOV      R5,R1
     70              AnsiString LocalString;
   \   00000010   0500A0E1           MOV      R0,R5
   \   00000014   ........           _BLF     ??AnsiString,??AnsiString??rA
     71              LocalString += PRogramObject::MakeConfigString();
   \   00000018   0020A0E3           MOV      R2,#+0
   \   0000001C   8C108DE2           ADD      R1,SP,#+140
   \   00000020   0400A0E1           MOV      R0,R4
   \   00000024   ........           _BLF     ??MakeConfigString_1,??MakeConfigString??rA
   \   00000028   ........           LDR      R0,??DataTable6  ;; ??npos
   \   0000002C   0020A0E3           MOV      R2,#+0
   \   00000030   006090E5           LDR      R6,[R0, #+0]
   \   00000034   8C108DE2           ADD      R1,SP,#+140
   \   00000038   0630A0E1           MOV      R3,R6
   \   0000003C   0500A0E1           MOV      R0,R5
   \   00000040   ........           _BLF     ??append,??append??rA
   \   00000044   0020A0E3           MOV      R2,#+0
   \   00000048   0110A0E3           MOV      R1,#+1
   \   0000004C   8C008DE2           ADD      R0,SP,#+140
   \   00000050   ........           _BLF     ??_Tidy_1,??_Tidy??rA
     72              if ( (ANPro3Id != -1 )||(SaabId != -1 ) ) {
   \   00000054   500194E5           LDR      R0,[R4, #+336]
   \   00000058   0070E0E3           MVN      R7,#+0
   \   0000005C   070050E1           CMP      R0,R7
   \   00000060   4C019405           LDREQ    R0,[R4, #+332]
   \   00000064   07005001           CMPEQ    R0,R7
   \   00000068   BF00000A           BEQ      ??MakeConfigString_2
     73                  LocalString +=TabStr1+KeyWord(C_XREF_START)+CrLfStr;
   \   0000006C   00839FE5           LDR      R8,??MakeConfigString_3  ;; TabStr1
   \   00000070   00939FE5           LDR      R9,??MakeConfigString_3+0x4  ;; CrLfStr
   \   00000074   3410A0E3           MOV      R1,#+52
   \   00000078   841D81E3           ORR      R1,R1,#0x2100
     74                  if ( ANPro3Id != -1 ) {
   \   0000007C   F8A29FE5           LDR      R10,??MakeConfigString_3+0x8  ;; TabStr2
   \   00000080   E0008DE2           ADD      R0,SP,#+224
   \   00000084   ........           _BLF     ??KeyWord,??KeyWord??rA
   \   00000088   E0208DE2           ADD      R2,SP,#+224
   \   0000008C   0810A0E1           MOV      R1,R8
   \   00000090   C4008DE2           ADD      R0,SP,#+196
   \   00000094   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000098   0920A0E1           MOV      R2,R9
   \   0000009C   C4108DE2           ADD      R1,SP,#+196
   \   000000A0   A8008DE2           ADD      R0,SP,#+168
   \   000000A4   ........           _BLF     `??operator+`,`??operator+??rA`
   \   000000A8   0630A0E1           MOV      R3,R6
   \   000000AC   0020A0E3           MOV      R2,#+0
   \   000000B0   A8108DE2           ADD      R1,SP,#+168
   \   000000B4   0500A0E1           MOV      R0,R5
   \   000000B8   ........           _BLF     ??append,??append??rA
   \   000000BC   0020A0E3           MOV      R2,#+0
   \   000000C0   0110A0E3           MOV      R1,#+1
   \   000000C4   A8008DE2           ADD      R0,SP,#+168
   \   000000C8   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   000000CC   0020A0E3           MOV      R2,#+0
   \   000000D0   0110A0E3           MOV      R1,#+1
   \   000000D4   C4008DE2           ADD      R0,SP,#+196
   \   000000D8   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   000000DC   0020A0E3           MOV      R2,#+0
   \   000000E0   0110A0E3           MOV      R1,#+1
   \   000000E4   E0008DE2           ADD      R0,SP,#+224
   \   000000E8   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   000000EC   501194E5           LDR      R1,[R4, #+336]
   \   000000F0   070051E1           CMP      R1,R7
   \   000000F4   2B00000A           BEQ      ??MakeConfigString_4
     75                      LocalString +=TabStr2+KeyWord(C_XREF_ANPRO3)+(AnsiString)ANPro3Id+CrLfStr;
   \   000000F8   70008DE2           ADD      R0,SP,#+112
   \   000000FC   ........           _BLF     ??AnsiString_1,??AnsiString??rA_1
   \   00000100   00B0A0E1           MOV      R11,R0
   \   00000104   3610A0E3           MOV      R1,#+54
   \   00000108   841D81E3           ORR      R1,R1,#0x2100
   \   0000010C   54008DE2           ADD      R0,SP,#+84
   \   00000110   ........           _BLF     ??KeyWord,??KeyWord??rA
   \   00000114   54208DE2           ADD      R2,SP,#+84
   \   00000118   0A10A0E1           MOV      R1,R10
   \   0000011C   38008DE2           ADD      R0,SP,#+56
   \   00000120   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000124   0B20A0E1           MOV      R2,R11
   \   00000128   38108DE2           ADD      R1,SP,#+56
   \   0000012C   1C008DE2           ADD      R0,SP,#+28
   \   00000130   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000134   0920A0E1           MOV      R2,R9
   \   00000138   1C108DE2           ADD      R1,SP,#+28
   \   0000013C   0D00A0E1           MOV      R0,SP
   \   00000140   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000144   0630A0E1           MOV      R3,R6
   \   00000148   0020A0E3           MOV      R2,#+0
   \   0000014C   0D10A0E1           MOV      R1,SP
   \   00000150   0500A0E1           MOV      R0,R5
   \   00000154   ........           _BLF     ??append,??append??rA
   \   00000158   0020A0E3           MOV      R2,#+0
   \   0000015C   0110A0E3           MOV      R1,#+1
   \   00000160   0D00A0E1           MOV      R0,SP
   \   00000164   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   00000168   0020A0E3           MOV      R2,#+0
   \   0000016C   0110A0E3           MOV      R1,#+1
   \   00000170   1C008DE2           ADD      R0,SP,#+28
   \   00000174   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   00000178   0020A0E3           MOV      R2,#+0
   \   0000017C   0110A0E3           MOV      R1,#+1
   \   00000180   70008DE2           ADD      R0,SP,#+112
   \   00000184   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   00000188   0020A0E3           MOV      R2,#+0
   \   0000018C   0110A0E3           MOV      R1,#+1
   \   00000190   38008DE2           ADD      R0,SP,#+56
   \   00000194   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   00000198   0020A0E3           MOV      R2,#+0
   \   0000019C   0110A0E3           MOV      R1,#+1
   \   000001A0   54008DE2           ADD      R0,SP,#+84
   \   000001A4   ........           _BLF     ??_Tidy_1,??_Tidy??rA
     76                  }
     77                  if ( SaabId != -1 ) {
   \                     ??MakeConfigString_4:
   \   000001A8   4C1194E5           LDR      R1,[R4, #+332]
   \   000001AC   070051E1           CMP      R1,R7
   \   000001B0   2B00000A           BEQ      ??MakeConfigString_5
     78                      LocalString +=TabStr3+KeyWord(C_XREF_SAAB)+(AnsiString)SaabId+CrLfStr;
   \   000001B4   70008DE2           ADD      R0,SP,#+112
   \   000001B8   ........           _BLF     ??AnsiString_1,??AnsiString??rA_1
   \   000001BC   0070A0E1           MOV      R7,R0
   \   000001C0   3710A0E3           MOV      R1,#+55
   \   000001C4   841D81E3           ORR      R1,R1,#0x2100
   \   000001C8   0D00A0E1           MOV      R0,SP
   \   000001CC   ........           _BLF     ??KeyWord,??KeyWord??rA
   \   000001D0   A8119FE5           LDR      R1,??MakeConfigString_3+0xC  ;; TabStr3
   \   000001D4   0D20A0E1           MOV      R2,SP
   \   000001D8   1C008DE2           ADD      R0,SP,#+28
   \   000001DC   ........           _BLF     `??operator+`,`??operator+??rA`
   \   000001E0   0720A0E1           MOV      R2,R7
   \   000001E4   1C108DE2           ADD      R1,SP,#+28
   \   000001E8   38008DE2           ADD      R0,SP,#+56
   \   000001EC   ........           _BLF     `??operator+`,`??operator+??rA`
   \   000001F0   0920A0E1           MOV      R2,R9
   \   000001F4   38108DE2           ADD      R1,SP,#+56
   \   000001F8   54008DE2           ADD      R0,SP,#+84
   \   000001FC   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000200   0630A0E1           MOV      R3,R6
   \   00000204   0020A0E3           MOV      R2,#+0
   \   00000208   54108DE2           ADD      R1,SP,#+84
   \   0000020C   0500A0E1           MOV      R0,R5
   \   00000210   ........           _BLF     ??append,??append??rA
   \   00000214   0020A0E3           MOV      R2,#+0
   \   00000218   0110A0E3           MOV      R1,#+1
   \   0000021C   54008DE2           ADD      R0,SP,#+84
   \   00000220   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   00000224   0020A0E3           MOV      R2,#+0
   \   00000228   0110A0E3           MOV      R1,#+1
   \   0000022C   38008DE2           ADD      R0,SP,#+56
   \   00000230   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   00000234   0020A0E3           MOV      R2,#+0
   \   00000238   0110A0E3           MOV      R1,#+1
   \   0000023C   70008DE2           ADD      R0,SP,#+112
   \   00000240   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   00000244   0020A0E3           MOV      R2,#+0
   \   00000248   0110A0E3           MOV      R1,#+1
   \   0000024C   1C008DE2           ADD      R0,SP,#+28
   \   00000250   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   00000254   0020A0E3           MOV      R2,#+0
   \   00000258   0110A0E3           MOV      R1,#+1
   \   0000025C   0D00A0E1           MOV      R0,SP
   \   00000260   ........           _BLF     ??_Tidy_1,??_Tidy??rA
     79                  }
     80                  if ( ExcludeState ) {
   \                     ??MakeConfigString_5:
   \   00000264   4901D4E5           LDRB     R0,[R4, #+329]
   \   00000268   000050E3           CMP      R0,#+0
   \   0000026C   1C00000A           BEQ      ??MakeConfigString_6
     81                      LocalString +=TabStr2+KeyWord(C_XREF_EXCLUDE_STATE)+CrLfStr;
   \   00000270   3810A0E3           MOV      R1,#+56
   \   00000274   841D81E3           ORR      R1,R1,#0x2100
   \   00000278   38008DE2           ADD      R0,SP,#+56
   \   0000027C   ........           _BLF     ??KeyWord,??KeyWord??rA
   \   00000280   38208DE2           ADD      R2,SP,#+56
   \   00000284   0A10A0E1           MOV      R1,R10
   \   00000288   1C008DE2           ADD      R0,SP,#+28
   \   0000028C   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000290   0920A0E1           MOV      R2,R9
   \   00000294   1C108DE2           ADD      R1,SP,#+28
   \   00000298   0D00A0E1           MOV      R0,SP
   \   0000029C   ........           _BLF     `??operator+`,`??operator+??rA`
   \   000002A0   0630A0E1           MOV      R3,R6
   \   000002A4   0020A0E3           MOV      R2,#+0
   \   000002A8   0D10A0E1           MOV      R1,SP
   \   000002AC   0500A0E1           MOV      R0,R5
   \   000002B0   ........           _BLF     ??append,??append??rA
   \   000002B4   0020A0E3           MOV      R2,#+0
   \   000002B8   0110A0E3           MOV      R1,#+1
   \   000002BC   0D00A0E1           MOV      R0,SP
   \   000002C0   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   000002C4   0020A0E3           MOV      R2,#+0
   \   000002C8   0110A0E3           MOV      R1,#+1
   \   000002CC   1C008DE2           ADD      R0,SP,#+28
   \   000002D0   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   000002D4   0020A0E3           MOV      R2,#+0
   \   000002D8   0110A0E3           MOV      R1,#+1
   \   000002DC   38008DE2           ADD      R0,SP,#+56
   \   000002E0   ........           _BLF     ??_Tidy_1,??_Tidy??rA
     82                  }
     83                  LocalString +=TabStr1+KeyWord(C_XREF_END)+CrLfStr;
   \                     ??MakeConfigString_6:
   \   000002E4   3510A0E3           MOV      R1,#+53
   \   000002E8   841D81E3           ORR      R1,R1,#0x2100
   \   000002EC   4D0F8DE2           ADD      R0,SP,#+308
   \   000002F0   ........           _BLF     ??KeyWord,??KeyWord??rA
   \   000002F4   4D2F8DE2           ADD      R2,SP,#+308
   \   000002F8   0810A0E1           MOV      R1,R8
   \   000002FC   460F8DE2           ADD      R0,SP,#+280
   \   00000300   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000304   0920A0E1           MOV      R2,R9
   \   00000308   461F8DE2           ADD      R1,SP,#+280
   \   0000030C   FC008DE2           ADD      R0,SP,#+252
   \   00000310   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000314   0630A0E1           MOV      R3,R6
   \   00000318   0020A0E3           MOV      R2,#+0
   \   0000031C   FC108DE2           ADD      R1,SP,#+252
   \   00000320   0500A0E1           MOV      R0,R5
   \   00000324   ........           _BLF     ??append,??append??rA
   \   00000328   0020A0E3           MOV      R2,#+0
   \   0000032C   0110A0E3           MOV      R1,#+1
   \   00000330   FC008DE2           ADD      R0,SP,#+252
   \   00000334   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   00000338   0020A0E3           MOV      R2,#+0
   \   0000033C   0110A0E3           MOV      R1,#+1
   \   00000340   460F8DE2           ADD      R0,SP,#+280
   \   00000344   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   00000348   0020A0E3           MOV      R2,#+0
   \   0000034C   0110A0E3           MOV      R1,#+1
   \   00000350   4D0F8DE2           ADD      R0,SP,#+308
   \   00000354   ........           _BLF     ??_Tidy_1,??_Tidy??rA
     84                  LocalString += CrLfStr;
   \   00000358   0630A0E1           MOV      R3,R6
   \   0000035C   0020A0E3           MOV      R2,#+0
   \   00000360   0910A0E1           MOV      R1,R9
   \   00000364   0500A0E1           MOV      R0,R5
   \   00000368   ........           _BLF     ??append,??append??rA
     85              }
     86              return(LocalString);
   \                     ??MakeConfigString_2:
   \   0000036C   54DF8DE2           ADD      SP,SP,#+336
   \   00000370   ........           B        ?Subroutine31
   \                     ??MakeConfigString_3:
   \   00000374   ........           DC32     TabStr1
   \   00000378   ........           DC32     CrLfStr
   \   0000037C   ........           DC32     TabStr2
   \   00000380   ........           DC32     TabStr3
     87          }

   \                                 In segment CODE, align 4, keep-with-next
   \                     ?Subroutine31:
   \   00000000   F04FBDE8           POP      {R4-R11,LR}
   \   00000004   1EFF2FE1           BX       LR               ;; return
   \                     ??Subroutine31_0:
   \   00000008   30000000           DC8      "0",+0,+0
   \   0000000C   ........           DC32     `?<Constant "PRogram object ">`
   \   00000010   ........           DC32     NewLineStr
     88          //---------------------------------------------------------------------------
     89          

   \                                 In segment CODE, align 4, keep-with-next
     90          bool PROXRefObject::LoadConfigString(TSNConfigString &ConfigString)
     91          {
   \                     ??LoadConfigString:
   \   00000000   F04F2DE9           PUSH     {R4-R11,LR}
     92              bool NoError = true;
     93              int ErrorLine=0;
     94              bool MoreData = true;
   \   00000004   ........           LDR      R9,??Subroutine31_0+0x4  ;; `?<Constant "PRogram object ">`
   \   00000008   8DDF4DE2           SUB      SP,SP,#+564
   \   0000000C   0040A0E1           MOV      R4,R0
   \   00000010   0150A0E1           MOV      R5,R1
   \   00000014   0160A0E3           MOV      R6,#+1
   \   00000018   0010A0E3           MOV      R1,#+0
   \   0000001C   00108DE5           STR      R1,[SP, #+0]
   \   00000020   0170A0E3           MOV      R7,#+1
   \   00000024   0180E0E1           MVN      R8,R1
     95              int Key;
     96              do {
     97                  AnsiString InputKeyWord= ConfigString.NextWord(ErrorLine);
   \                     ??LoadConfigString_1:
   \   00000028   0030A0E3           MOV      R3,#+0
   \   0000002C   0D20A0E1           MOV      R2,SP
   \   00000030   74108DE2           ADD      R1,SP,#+116
   \   00000034   0500A0E1           MOV      R0,R5
   \   00000038   ........           _BLF     ??NextWord,??NextWord??rA
     98                  if ( ErrorLine ) {
   \   0000003C   00009DE5           LDR      R0,[SP, #+0]
   \   00000040   000050E3           CMP      R0,#+0
   \   00000044   1A00000A           BEQ      ??LoadConfigString_2
     99                      if ( ErrorLine != EOF ) {
   \   00000048   080050E1           CMP      R0,R8
   \   0000004C   E300000A           BEQ      ??LoadConfigString_3
    100                          GiveConfigWarning((AnsiString)"PRogram object "+Name,ErrorLine);
   \   00000050   0910A0E1           MOV      R1,R9
   \   00000054   20008DE2           ADD      R0,SP,#+32
   \   00000058   ........           _BLF     ??AnsiString_2,??AnsiString??rA_2
   \   0000005C   442084E2           ADD      R2,R4,#+68
   \   00000060   0010A0E1           MOV      R1,R0
   \   00000064   04008DE2           ADD      R0,SP,#+4
   \   00000068   ........           _BLF     `??operator+`,`??operator+??rA`
   \   0000006C   04108DE2           ADD      R1,SP,#+4
   \   00000070   3C008DE2           ADD      R0,SP,#+60
   \   00000074   ........           _BLF     ??AnsiString_3,??AnsiString??rA_3
   \   00000078   00109DE5           LDR      R1,[SP, #+0]
   \   0000007C   ........           _BLF     ??GiveConfigWarning,??GiveConfigWarning??rA
   \   00000080   0020A0E3           MOV      R2,#+0
   \   00000084   0110A0E3           MOV      R1,#+1
   \   00000088   3C008DE2           ADD      R0,SP,#+60
   \   0000008C   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   00000090   0020A0E3           MOV      R2,#+0
   \   00000094   0110A0E3           MOV      R1,#+1
   \   00000098   04008DE2           ADD      R0,SP,#+4
   \   0000009C   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   000000A0   0020A0E3           MOV      R2,#+0
   \   000000A4   0110A0E3           MOV      R1,#+1
   \   000000A8   20008DE2           ADD      R0,SP,#+32
   \                     ??LoadConfigString_4:
   \   000000AC   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   000000B0   CA0000EA           B        ??LoadConfigString_3
    101                      }
    102                  } else {
    103                      Key = FindConfigKey(InputKeyWord);
   \                     ??LoadConfigString_2:
   \   000000B4   74108DE2           ADD      R1,SP,#+116
   \   000000B8   58008DE2           ADD      R0,SP,#+88
   \   000000BC   ........           _BLF     ??string,??string??rA
   \   000000C0   58008DE2           ADD      R0,SP,#+88
   \   000000C4   ........           _BLF     ??FindConfigKey,??FindConfigKey??rA
   \   000000C8   00B0A0E1           MOV      R11,R0
   \   000000CC   0020A0E3           MOV      R2,#+0
   \   000000D0   0110A0E3           MOV      R1,#+1
   \   000000D4   58008DE2           ADD      R0,SP,#+88
   \   000000D8   ........           _BLF     ??_Tidy_1,??_Tidy??rA
    104                      switch ( Key ) {
   \   000000DC   EA00A0E3           MOV      R0,#+234
   \   000000E0   C00F80E3           ORR      R0,R0,#0x300
   \   000000E4   00005BE1           CMP      R11,R0
   \   000000E8   FB0F5B13           CMPNE    R11,#+1004
   \   000000EC   2C00000A           BEQ      ??LoadConfigString_5
   \   000000F0   3500A0E3           MOV      R0,#+53
   \   000000F4   840D80E3           ORR      R0,R0,#0x2100
   \   000000F8   00005BE1           CMP      R11,R0
   \   000000FC   6F00000A           BEQ      ??LoadConfigString_6
   \   00000100   010080E2           ADD      R0,R0,#+1
   \   00000104   00005BE1           CMP      R11,R0
   \   00000108   6E00000A           BEQ      ??LoadConfigString_7
   \   0000010C   010080E3           ORR      R0,R0,#0x1
   \   00000110   00005BE1           CMP      R11,R0
   \   00000114   7900000A           BEQ      ??LoadConfigString_8
   \   00000118   010080E2           ADD      R0,R0,#+1
   \   0000011C   00005BE1           CMP      R11,R0
   \   00000120   AC00000A           BEQ      ??LoadConfigString_9
    105                      default:
    106                          GiveConfigWarning((AnsiString)"PRogram object "+Name,InputKeyWord,ConfigString.LineCount);
   \   00000124   74108DE2           ADD      R1,SP,#+116
   \   00000128   C8008DE2           ADD      R0,SP,#+200
   \   0000012C   ........           _BLF     ??string,??string??rA
   \   00000130   0910A0E1           MOV      R1,R9
   \   00000134   470F8DE2           ADD      R0,SP,#+284
   \   00000138   ........           _BLF     ??AnsiString_2,??AnsiString??rA_2
   \   0000013C   0010A0E1           MOV      R1,R0
   \   00000140   442084E2           ADD      R2,R4,#+68
   \   00000144   400F8DE2           ADD      R0,SP,#+256
   \   00000148   ........           _BLF     `??operator+`,`??operator+??rA`
   \   0000014C   401F8DE2           ADD      R1,SP,#+256
   \   00000150   E4008DE2           ADD      R0,SP,#+228
   \   00000154   ........           _BLF     ??AnsiString_3,??AnsiString??rA_3
   \   00000158   1C2095E5           LDR      R2,[R5, #+28]
   \   0000015C   C8108DE2           ADD      R1,SP,#+200
   \   00000160   ........           _BLF     ??GiveConfigWarning_1,??GiveConfigWarning??rA_1
   \   00000164   0020A0E3           MOV      R2,#+0
   \   00000168   0110A0E3           MOV      R1,#+1
   \   0000016C   C8008DE2           ADD      R0,SP,#+200
   \   00000170   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   00000174   0020A0E3           MOV      R2,#+0
   \   00000178   0110A0E3           MOV      R1,#+1
   \   0000017C   E4008DE2           ADD      R0,SP,#+228
   \   00000180   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   00000184   0020A0E3           MOV      R2,#+0
   \   00000188   0110A0E3           MOV      R1,#+1
   \   0000018C   400F8DE2           ADD      R0,SP,#+256
   \   00000190   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   00000194   0020A0E3           MOV      R2,#+0
   \   00000198   0110A0E3           MOV      R1,#+1
   \   0000019C   470F8DE2           ADD      R0,SP,#+284
   \   000001A0   C1FFFFEA           B        ??LoadConfigString_4
    107                          break;
    108                      case C_PRO_END_PRO:
    109                      case C_PRO_END_COMMON:
    110                          GiveConfigWarning((AnsiString)"PRogram object "+Name+":\nUnexpected End This " + InputKeyWord +" is not allowed here!! Line:"+(AnsiString)ConfigString.LineCount+NewLineStr);
   \                     ??LoadConfigString_5:
   \   000001A4   1C1095E5           LDR      R1,[R5, #+28]
   \   000001A8   860F8DE2           ADD      R0,SP,#+536
   \   000001AC   ........           _BLF     ??AnsiString_1,??AnsiString??rA_1
   \   000001B0   00A0A0E1           MOV      R10,R0
   \   000001B4   0910A0E1           MOV      R1,R9
   \   000001B8   7F0F8DE2           ADD      R0,SP,#+508
   \   000001BC   ........           _BLF     ??AnsiString_2,??AnsiString??rA_2
   \   000001C0   442084E2           ADD      R2,R4,#+68
   \   000001C4   0010A0E1           MOV      R1,R0
   \   000001C8   780F8DE2           ADD      R0,SP,#+480
   \   000001CC   ........           _BLF     `??operator+`,`??operator+??rA`
   \   000001D0   102089E2           ADD      R2,R9,#+16
   \   000001D4   781F8DE2           ADD      R1,SP,#+480
   \   000001D8   710F8DE2           ADD      R0,SP,#+452
   \   000001DC   ........           _BLF     `??operator+_1`,`??operator+??rA_1`
   \   000001E0   74208DE2           ADD      R2,SP,#+116
   \   000001E4   711F8DE2           ADD      R1,SP,#+452
   \   000001E8   6A0F8DE2           ADD      R0,SP,#+424
   \   000001EC   ........           _BLF     `??operator+`,`??operator+??rA`
   \   000001F0   282089E2           ADD      R2,R9,#+40
   \   000001F4   6A1F8DE2           ADD      R1,SP,#+424
   \   000001F8   630F8DE2           ADD      R0,SP,#+396
   \   000001FC   ........           _BLF     `??operator+_1`,`??operator+??rA_1`
   \   00000200   0A20A0E1           MOV      R2,R10
   \   00000204   631F8DE2           ADD      R1,SP,#+396
   \   00000208   5C0F8DE2           ADD      R0,SP,#+368
   \   0000020C   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000210   ........           LDR      R2,??Subroutine31_0+0x8  ;; NewLineStr
   \   00000214   5C1F8DE2           ADD      R1,SP,#+368
   \   00000218   550F8DE2           ADD      R0,SP,#+340
   \   0000021C   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000220   551F8DE2           ADD      R1,SP,#+340
   \   00000224   4E0F8DE2           ADD      R0,SP,#+312
   \   00000228   ........           _BLF     ??AnsiString_3,??AnsiString??rA_3
   \   0000022C   ........           _BLF     ??GiveConfigWarning_2,??GiveConfigWarning??rA_2
   \   00000230   0020A0E3           MOV      R2,#+0
   \   00000234   0110A0E3           MOV      R1,#+1
   \   00000238   4E0F8DE2           ADD      R0,SP,#+312
   \   0000023C   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   00000240   0020A0E3           MOV      R2,#+0
   \   00000244   0110A0E3           MOV      R1,#+1
   \   00000248   550F8DE2           ADD      R0,SP,#+340
   \   0000024C   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   00000250   0020A0E3           MOV      R2,#+0
   \   00000254   0110A0E3           MOV      R1,#+1
   \   00000258   5C0F8DE2           ADD      R0,SP,#+368
   \   0000025C   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   00000260   0020A0E3           MOV      R2,#+0
   \   00000264   0110A0E3           MOV      R1,#+1
   \   00000268   860F8DE2           ADD      R0,SP,#+536
   \   0000026C   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   00000270   0020A0E3           MOV      R2,#+0
   \   00000274   0110A0E3           MOV      R1,#+1
   \   00000278   630F8DE2           ADD      R0,SP,#+396
   \   0000027C   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   00000280   0020A0E3           MOV      R2,#+0
   \   00000284   0110A0E3           MOV      R1,#+1
   \   00000288   6A0F8DE2           ADD      R0,SP,#+424
   \   0000028C   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   00000290   0020A0E3           MOV      R2,#+0
   \   00000294   0110A0E3           MOV      R1,#+1
   \   00000298   710F8DE2           ADD      R0,SP,#+452
   \   0000029C   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   000002A0   0020A0E3           MOV      R2,#+0
   \   000002A4   0110A0E3           MOV      R1,#+1
   \   000002A8   780F8DE2           ADD      R0,SP,#+480
   \   000002AC   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   000002B0   0020A0E3           MOV      R2,#+0
   \   000002B4   0110A0E3           MOV      R1,#+1
   \   000002B8   7F0F8DE2           ADD      R0,SP,#+508
   \   000002BC   7AFFFFEA           B        ??LoadConfigString_4
    111                          break;
    112                      case C_XREF_END:
    113                          MoreData = false;
   \                     ??LoadConfigString_6:
   \   000002C0   0070A0E3           MOV      R7,#+0
   \   000002C4   450000EA           B        ??LoadConfigString_3
    114                          break;
    115                      case C_XREF_ANPRO3:
    116                          {
    117                              int TmpANPro3Id = ConfigString.ReadInteger(ErrorLine);
   \                     ??LoadConfigString_7:
   \   000002C8   0020A0E3           MOV      R2,#+0
   \   000002CC   0D10A0E1           MOV      R1,SP
   \   000002D0   0500A0E1           MOV      R0,R5
   \   000002D4   ........           _BLF     ??ReadInteger,??ReadInteger??rA
    118                              NoError = !ErrorLine;
   \   000002D8   00109DE5           LDR      R1,[SP, #+0]
   \   000002DC   000051E3           CMP      R1,#+0
   \   000002E0   0400001A           BNE      ??LoadConfigString_10
   \   000002E4   0160A0E3           MOV      R6,#+1
    119                              if ( NoError ) {
    120                                  SetANPro3Xref(TmpANPro3Id);
   \   000002E8   0010A0E1           MOV      R1,R0
   \   000002EC   0400A0E1           MOV      R0,R4
   \   000002F0   ........           BL       ??SetANPro3Xref
   \   000002F4   390000EA           B        ??LoadConfigString_3
    121                              }
   \                     ??LoadConfigString_10:
   \   000002F8   0060A0E3           MOV      R6,#+0
   \   000002FC   370000EA           B        ??LoadConfigString_3
    122                          }
    123                          break;
    124                      case C_XREF_SAAB:
    125                          {
    126                              int TmpSaabId = ConfigString.ReadInteger(ErrorLine);
   \                     ??LoadConfigString_8:
   \   00000300   0020A0E3           MOV      R2,#+0
   \   00000304   0D10A0E1           MOV      R1,SP
   \   00000308   0500A0E1           MOV      R0,R5
   \   0000030C   ........           _BLF     ??ReadInteger,??ReadInteger??rA
   \   00000310   00B0A0E1           MOV      R11,R0
    127                              NoError = !ErrorLine;
   \   00000314   00009DE5           LDR      R0,[SP, #+0]
   \   00000318   000050E3           CMP      R0,#+0
   \   0000031C   F5FFFF1A           BNE      ??LoadConfigString_10
   \   00000320   0160A0E3           MOV      R6,#+1
    128                              if ( NoError ) {
    129                                  if ( !SetSaabXref(TmpSaabId) ) {
   \   00000324   0B10A0E1           MOV      R1,R11
   \   00000328   0400A0E1           MOV      R0,R4
   \   0000032C   ........           BL       ??SetSaabXref
   \   00000330   000050E3           CMP      R0,#+0
   \   00000334   2900001A           BNE      ??LoadConfigString_3
    130                                      GiveConfigWarning((AnsiString)"Duplicate Saab Id for "+Name+(AnsiString)TmpSaabId,ErrorLine);
   \   00000338   0B10A0E1           MOV      R1,R11
   \   0000033C   AC008DE2           ADD      R0,SP,#+172
   \   00000340   ........           _BLF     ??AnsiString_1,??AnsiString??rA_1
   \   00000344   00A0A0E1           MOV      R10,R0
   \   00000348   481089E2           ADD      R1,R9,#+72
   \   0000034C   90008DE2           ADD      R0,SP,#+144
   \   00000350   ........           _BLF     ??AnsiString_2,??AnsiString??rA_2
   \   00000354   442084E2           ADD      R2,R4,#+68
   \   00000358   0010A0E1           MOV      R1,R0
   \   0000035C   3C008DE2           ADD      R0,SP,#+60
   \   00000360   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000364   0A20A0E1           MOV      R2,R10
   \   00000368   3C108DE2           ADD      R1,SP,#+60
   \   0000036C   20008DE2           ADD      R0,SP,#+32
   \   00000370   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000374   20108DE2           ADD      R1,SP,#+32
   \   00000378   04008DE2           ADD      R0,SP,#+4
   \   0000037C   ........           _BLF     ??AnsiString_3,??AnsiString??rA_3
   \   00000380   00109DE5           LDR      R1,[SP, #+0]
   \   00000384   ........           _BLF     ??GiveConfigWarning,??GiveConfigWarning??rA
   \   00000388   0020A0E3           MOV      R2,#+0
   \   0000038C   0110A0E3           MOV      R1,#+1
   \   00000390   04008DE2           ADD      R0,SP,#+4
   \   00000394   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   00000398   0020A0E3           MOV      R2,#+0
   \   0000039C   0610A0E1           MOV      R1,R6
   \   000003A0   20008DE2           ADD      R0,SP,#+32
   \   000003A4   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   000003A8   0020A0E3           MOV      R2,#+0
   \   000003AC   0610A0E1           MOV      R1,R6
   \   000003B0   AC008DE2           ADD      R0,SP,#+172
   \   000003B4   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   000003B8   0020A0E3           MOV      R2,#+0
   \   000003BC   0610A0E1           MOV      R1,R6
   \   000003C0   3C008DE2           ADD      R0,SP,#+60
   \   000003C4   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   000003C8   0020A0E3           MOV      R2,#+0
   \   000003CC   0610A0E1           MOV      R1,R6
   \   000003D0   90008DE2           ADD      R0,SP,#+144
   \   000003D4   34FFFFEA           B        ??LoadConfigString_4
    131                                  }
    132                              }
    133                          }
    134                          break;
    135                      case C_XREF_EXCLUDE_STATE:
    136                          ExcludeState = true;
   \                     ??LoadConfigString_9:
   \   000003D8   0100A0E3           MOV      R0,#+1
   \   000003DC   4901C4E5           STRB     R0,[R4, #+329]
    137                          break;
    138                      }
    139                  }
    140              }while ( NoError && ( ErrorLine != EOF )&& ( MoreData ) );
   \                     ??LoadConfigString_3:
   \   000003E0   0020A0E3           MOV      R2,#+0
   \   000003E4   0110A0E3           MOV      R1,#+1
   \   000003E8   74008DE2           ADD      R0,SP,#+116
   \   000003EC   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   000003F0   000056E3           CMP      R6,#+0
   \   000003F4   00009D15           LDRNE    R0,[SP, #+0]
   \   000003F8   08005011           CMPNE    R0,R8
   \   000003FC   00005713           CMPNE    R7,#+0
   \   00000400   08FFFF1A           BNE      ??LoadConfigString_1
    141          
    142              if ( LongName.IsEmpty() || (LongName=="0") ) {
   \   00000404   C40084E2           ADD      R0,R4,#+196
   \   00000408   ........           _BLF     ??IsEmpty,??IsEmpty??rA
   \   0000040C   000050E3           CMP      R0,#+0
   \   00000410   0C00001A           BNE      ??LoadConfigString_11
   \   00000414   ........           ADR      R5,??Subroutine31_0  ;; "0"
   \   00000418   C47084E2           ADD      R7,R4,#+196
   \   0000041C   0500A0E1           MOV      R0,R5
   \   00000420   ........           _BLF     strlen,??strlen??rA
   \   00000424   01002DE9           PUSH     {R0}
   \   00000428   142097E5           LDR      R2,[R7, #+20]
   \   0000042C   0530A0E1           MOV      R3,R5
   \   00000430   0010A0E3           MOV      R1,#+0
   \   00000434   0700A0E1           MOV      R0,R7
   \   00000438   ........           _BLF     ??compare,??compare??rA
   \   0000043C   000050E3           CMP      R0,#+0
   \   00000440   04D08DE2           ADD      SP,SP,#+4
   \   00000444   0500001A           BNE      ??LoadConfigString_12
    143                  LongName = Name;
   \                     ??LoadConfigString_11:
   \   00000448   ........           LDR      R0,??DataTable6  ;; ??npos
   \   0000044C   0020A0E3           MOV      R2,#+0
   \   00000450   003090E5           LDR      R3,[R0, #+0]
   \   00000454   441084E2           ADD      R1,R4,#+68
   \   00000458   C40084E2           ADD      R0,R4,#+196
   \   0000045C   ........           _BLF     ??assign,??assign??rA
    144              }
    145              return(NoError);
   \                     ??LoadConfigString_12:
   \   00000460   0600A0E1           MOV      R0,R6
   \   00000464   8DDF8DE2           ADD      SP,SP,#+564
   \   00000468                      REQUIRE ?Subroutine31
   \   00000468                      ;; // Fall through to label ?Subroutine31
    146          }
    147          

   \                                 In segment CODE, align 4, keep-with-next
    148          int PROXRefObject::GetValue(int ValueId, int Index, float & MyValue, int &DecPnt, int &Unit)
    149          {
   \                     ??GetValue:
   \   00000000   F0402DE9           PUSH     {R4-R7,LR}
   \   00000004   14509DE5           LDR      R5,[SP, #+20]
   \   00000008   18609DE5           LDR      R6,[SP, #+24]
   \   0000000C   0340A0E1           MOV      R4,R3
    150              int Status=E_NO_ERR;
   \   00000010   0070A0E3           MOV      R7,#+0
    151              switch ( ValueId ) {
   \   00000014   C6C0A0E3           MOV      R12,#+198
   \   00000018   50CE8CE3           ORR      R12,R12,#0x500
   \   0000001C   0C0051E1           CMP      R1,R12
   \   00000020   0600001A           BNE      ??GetValue_2
    152              case SVT_TANK_STATE :
    153                  MyValue = (float)State;
   \   00000024   4801D0E5           LDRB     R0,[R0, #+328]
   \   00000028   ........           _BLF     __ulongToFloat,??__ulongToFloat??rA
   \   0000002C   000084E5           STR      R0,[R4, #+0]
    154                  DecPnt = 0;
   \   00000030   0000A0E3           MOV      R0,#+0
   \   00000034   000085E5           STR      R0,[R5, #+0]
    155                  Unit   = NO_UNIT;
   \   00000038   000086E5           STR      R0,[R6, #+0]
   \   0000003C   040000EA           B        ??GetValue_3
    156                  break;
    157              default:
    158                  Status = PRogramObject::GetValue(ValueId, Index, MyValue,  DecPnt,Unit);
   \                     ??GetValue_2:
   \   00000040   40002DE9           PUSH     {R6}
   \   00000044   20002DE9           PUSH     {R5}
   \   00000048   ........           _BLF     ??GetValue_1,??GetValue??rA
   \   0000004C   0070A0E1           MOV      R7,R0
   \   00000050   08D08DE2           ADD      SP,SP,#+8
    159                  break;
    160              }
    161              return(Status);
   \                     ??GetValue_3:
   \   00000054   0700A0E1           MOV      R0,R7
   \   00000058   ........           B        ?Subroutine32
    162          }

   \                                 In segment CODE, align 4, keep-with-next
   \                     ?Subroutine32:
   \   00000000   F040BDE8           POP      {R4-R7,LR}
   \   00000004   1EFF2FE1           BX       LR               ;; return
    163          
    164          

   \                                 In segment CODE, align 4, keep-with-next
    165          int PROXRefObject::GetStringValue(int ValueId, int Index, AnsiString &MyString)
    166          {
   \                     ??GetStringValue:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   1CD04DE2           SUB      SP,SP,#+28
   \   00000008   0340A0E1           MOV      R4,R3
    167              int Status = GETVAL_NO_ERR;
   \   0000000C   0050A0E3           MOV      R5,#+0
    168              switch ( ValueId ) {
   \   00000010   C7C0A0E3           MOV      R12,#+199
   \   00000014   50CE8CE3           ORR      R12,R12,#0x500
   \   00000018   0C0051E1           CMP      R1,R12
   \   0000001C   0D00001A           BNE      ??GetStringValue_2
    169              case SVT_TANK_STATE_STR:
    170                  MyString = GetStateString(State);
   \   00000020   4811D0E5           LDRB     R1,[R0, #+328]
   \   00000024   0D00A0E1           MOV      R0,SP
   \   00000028   ........           BL       ??GetStateString
   \   0000002C   ........           LDR      R0,??DataTable6  ;; ??npos
   \   00000030   0020A0E3           MOV      R2,#+0
   \   00000034   003090E5           LDR      R3,[R0, #+0]
   \   00000038   0D10A0E1           MOV      R1,SP
   \   0000003C   0400A0E1           MOV      R0,R4
   \   00000040   ........           _BLF     ??assign,??assign??rA
   \   00000044   0520A0E1           MOV      R2,R5
   \   00000048   0110A0E3           MOV      R1,#+1
   \   0000004C   0D00A0E1           MOV      R0,SP
   \   00000050   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   00000054   010000EA           B        ??GetStringValue_3
    171                  break;
    172              default:
    173                  Status = PRogramObject::GetStringValue(ValueId, Index, MyString);
   \                     ??GetStringValue_2:
   \   00000058   ........           _BLF     ??GetStringValue_1,??GetStringValue??rA
   \   0000005C   0050A0E1           MOV      R5,R0
    174                  break;
    175          
    176              }
    177              return(Status);
   \                     ??GetStringValue_3:
   \   00000060   0500A0E1           MOV      R0,R5
   \   00000064   1CD08DE2           ADD      SP,SP,#+28
   \   00000068   ........           B        ?Subroutine33
    178          }

   \                                 In segment CODE, align 4, keep-with-next
   \                     ?Subroutine33:
   \   00000000   3040BDE8           POP      {R4,R5,LR}
   \   00000004   1EFF2FE1           BX       LR               ;; return
    179          

   \                                 In segment CODE, align 4, keep-with-next
    180          int PROXRefObject::PutValue( int ValueId, int Index, AnsiString NewValue,bool Local, int *UnitId)
    181          {
   \                     ??PutValue:
   \   00000000   F0432DE9           PUSH     {R4-R9,LR}
   \   00000004   5CD04DE2           SUB      SP,SP,#+92
   \   00000008   7890DDE5           LDRB     R9,[SP, #+120]
   \   0000000C   7C809DE5           LDR      R8,[SP, #+124]
   \   00000010   0040A0E1           MOV      R4,R0
   \   00000014   0160A0E1           MOV      R6,R1
   \   00000018   0270A0E1           MOV      R7,R2
   \   0000001C   0350A0E1           MOV      R5,R3
    182              int Status = E_NO_ERR, ValUnitId = NO_UNIT;
   \   00000020   0010A0E3           MOV      R1,#+0
   \   00000024   00108DE5           STR      R1,[SP, #+0]
   \   00000028   04108DE5           STR      R1,[SP, #+4]
    183              switch ( ValueId ) {
   \   0000002C   C60046E2           SUB      R0,R6,#+198
   \   00000030   500E40E2           SUB      R0,R0,#+1280
   \   00000034   010050E3           CMP      R0,#+1
   \   00000038   3400008A           BHI      ??PutValue_3
   \   0000003C   011F8FE2           ADR      R1,??PutValue_1
   \   00000040   0010D1E7           LDRB     R1,[R1, R0]
   \   00000044   01F18FE0           ADD      PC,PC,R1, LSL #+2
   \                     ??PutValue_1:
   \   00000048   21000000           DC8      +33,+0,+0,+0
    184              case SVT_TANK_STATE_STR:
    185                  {
    186                      TankState NewState = GetStateKey(NewValue);
   \                     ??PutValue_4:
   \   0000004C   0510A0E1           MOV      R1,R5
   \   00000050   08008DE2           ADD      R0,SP,#+8
   \   00000054   ........           _BLF     ??string,??string??rA
   \   00000058   08008DE2           ADD      R0,SP,#+8
   \   0000005C   ........           BL       ??GetStateKey
   \   00000060   0060A0E1           MOV      R6,R0
   \   00000064   0020A0E3           MOV      R2,#+0
   \   00000068   0110A0E3           MOV      R1,#+1
   \   0000006C   08008DE2           ADD      R0,SP,#+8
   \   00000070   ........           _BLF     ??_Tidy_1,??_Tidy??rA
    187                      if ( NewState == tUndefined ) {
   \   00000074   040056E3           CMP      R6,#+4
   \   00000078   0A00001A           BNE      ??PutValue_5
    188                          NewState = (TankState)GetInt(NewValue,Status);
   \   0000007C   0510A0E1           MOV      R1,R5
   \   00000080   24008DE2           ADD      R0,SP,#+36
   \   00000084   ........           _BLF     ??string,??string??rA
   \   00000088   0D10A0E1           MOV      R1,SP
   \   0000008C   24008DE2           ADD      R0,SP,#+36
   \   00000090   ........           _BLF     ??GetInt,??GetInt??rA
   \   00000094   FF6000E2           AND      R6,R0,#0xFF
   \   00000098   0020A0E3           MOV      R2,#+0
   \   0000009C   0110A0E3           MOV      R1,#+1
   \   000000A0   24008DE2           ADD      R0,SP,#+36
   \   000000A4   ........           _BLF     ??_Tidy_1,??_Tidy??rA
    189                      }
    190                      if ( Status == E_NO_ERR ) {
   \                     ??PutValue_5:
   \   000000A8   00009DE5           LDR      R0,[SP, #+0]
   \   000000AC   000050E3           CMP      R0,#+0
   \   000000B0   2700001A           BNE      ??PutValue_6
    191                          SetState(NewState);
   \   000000B4   0610A0E1           MOV      R1,R6
   \                     ??PutValue_7:
   \   000000B8   A42094E5           LDR      R2,[R4, #+164]
   \   000000BC   0400A0E1           MOV      R0,R4
   \   000000C0   7C2092E5           LDR      R2,[R2, #+124]
   \   000000C4   0FE0A0E1           MOV      LR,PC
   \   000000C8   12FF2FE1           BX       R2
   \   000000CC   200000EA           B        ??PutValue_6
    192                      }
    193                  }
    194                  break;
    195              case SVT_TANK_STATE:
    196                  {
    197                      TankState NewState = (TankState)GetInt(NewValue,Status);
   \                     ??PutValue_8:
   \   000000D0   0510A0E1           MOV      R1,R5
   \   000000D4   08008DE2           ADD      R0,SP,#+8
   \   000000D8   ........           _BLF     ??string,??string??rA
   \   000000DC   0D10A0E1           MOV      R1,SP
   \   000000E0   08008DE2           ADD      R0,SP,#+8
   \   000000E4   ........           _BLF     ??GetInt,??GetInt??rA
   \   000000E8   FF5000E2           AND      R5,R0,#0xFF
   \   000000EC   0020A0E3           MOV      R2,#+0
   \   000000F0   0110A0E3           MOV      R1,#+1
   \   000000F4   08008DE2           ADD      R0,SP,#+8
   \   000000F8   ........           _BLF     ??_Tidy_1,??_Tidy??rA
    198                      if ( Status == E_NO_ERR ) {
   \   000000FC   00009DE5           LDR      R0,[SP, #+0]
   \   00000100   000050E3           CMP      R0,#+0
   \   00000104   1200001A           BNE      ??PutValue_6
    199                          SetState(NewState);
   \   00000108   0510A0E1           MOV      R1,R5
   \   0000010C   E9FFFFEA           B        ??PutValue_7
    200                      }
    201                  }
    202                  break;
    203              default:
    204                  Status = PRogramObject::PutValue( ValueId, Index,NewValue,Local,&ValUnitId);
   \                     ??PutValue_3:
   \   00000110   0510A0E1           MOV      R1,R5
   \   00000114   40008DE2           ADD      R0,SP,#+64
   \   00000118   ........           _BLF     ??string,??string??rA
   \   0000011C   04008DE2           ADD      R0,SP,#+4
   \   00000120   01002DE9           PUSH     {R0}
   \   00000124   00022DE9           PUSH     {R9}
   \   00000128   48308DE2           ADD      R3,SP,#+72
   \   0000012C   0720A0E1           MOV      R2,R7
   \   00000130   0610A0E1           MOV      R1,R6
   \   00000134   0400A0E1           MOV      R0,R4
   \   00000138   ........           _BLF     ??PutValue_2,??PutValue??rA
   \   0000013C   08008DE5           STR      R0,[SP, #+8]
   \   00000140   0020A0E3           MOV      R2,#+0
   \   00000144   0110A0E3           MOV      R1,#+1
   \   00000148   48008DE2           ADD      R0,SP,#+72
   \   0000014C   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   00000150   08D08DE2           ADD      SP,SP,#+8
    205                  break;
    206              }
    207              if ( UnitId ) {
   \                     ??PutValue_6:
   \   00000154   000058E3           CMP      R8,#+0
    208                  *UnitId = ValUnitId;
   \   00000158   04009D15           LDRNE    R0,[SP, #+4]
   \   0000015C   00008815           STRNE    R0,[R8, #+0]
    209              }
    210              return(Status);
   \   00000160   00009DE5           LDR      R0,[SP, #+0]
   \   00000164   5CD08DE2           ADD      SP,SP,#+92
   \   00000168   F043BDE8           POP      {R4-R9,LR}
   \   0000016C   1EFF2FE1           BX       LR               ;; return
    211          }
    212          
    213          //---------------------------------------------------------------------------
    214          

   \                                 In segment CODE, align 4, keep-with-next
    215          bool PROXRefObject::SetSaabXref(int IdNum)
    216          {
   \                     ??SetSaabXref:
   \   00000000   0F402DE9           PUSH     {R0-R3,LR}
    217              SaabId = IdNum;
   \   00000004   4C1180E5           STR      R1,[R0, #+332]
    218              pair<map<int,PROXRefObject*>::iterator,bool> Ret;
    219              Ret = SaabXRefList.insert(pair<int, PROXRefObject*>(SaabId, this));
   \   00000008   0120A0E1           MOV      R2,R1
   \   0000000C   ........           LDR      R1,??DataTable9  ;; ??SaabXRefList
   \   00000010   00208DE5           STR      R2,[SP, #+0]
   \   00000014   04008DE5           STR      R0,[SP, #+4]
   \   00000018   0D20A0E1           MOV      R2,SP
   \   0000001C   08008DE2           ADD      R0,SP,#+8
   \   00000020   ........           _BLF     ??insert_2,??insert??rA_1
    220              return Ret.first->second;
   \   00000024   08009DE5           LDR      R0,[SP, #+8]
   \   00000028   140090E5           LDR      R0,[R0, #+20]
   \   0000002C   10D08DE2           ADD      SP,SP,#+16
   \   00000030   0040BDE8           POP      {LR}
   \   00000034   000050E3           CMP      R0,#+0
   \   00000038   0100A013           MOVNE    R0,#+1
   \   0000003C   1EFF2FE1           BX       LR               ;; return
    221          
    222          }

   \                                 In segment CODE, align 4, keep-with-next
    223          void PROXRefObject::SetANPro3Xref(int IdNum)
    224          {
   \                     ??SetANPro3Xref:
   \   00000000   0F402DE9           PUSH     {R0-R3,LR}
    225              ANPro3Id = IdNum;
   \   00000004   501180E5           STR      R1,[R0, #+336]
    226              ANPro3XRefList.insert(pair<int, PROXRefObject*>(IdNum, this));
   \   00000008   00108DE5           STR      R1,[SP, #+0]
   \   0000000C   ........           LDR      R1,??DataTable10  ;; ??SaabXRefList + 24
   \   00000010   04008DE5           STR      R0,[SP, #+4]
   \   00000014   0D20A0E1           MOV      R2,SP
   \   00000018   08008DE2           ADD      R0,SP,#+8
   \   0000001C   ........           _BLF     ??insert,??insert??rA_2
    227          }
   \   00000020   0F40BDE8           POP      {R0-R3,LR}
   \   00000024   1EFF2FE1           BX       LR               ;; return
    228          
    229          

   \                                 In segment CODE, align 4, keep-with-next
    230          PROXRefObject* PROXRefObject::GetSaabObject(int IdNum)
    231          {
   \                     ??GetSaabObject:
   \   00000000   10402DE9           PUSH     {R4,LR}
    232              map<int, PROXRefObject*>::iterator ObjMapIterator;
    233              ObjMapIterator = SaabXRefList.find(IdNum);
   \   00000004   ........           LDR      R4,??DataTable9  ;; ??SaabXRefList
   \   00000008   0010A0E1           MOV      R1,R0
   \   0000000C   0400A0E1           MOV      R0,R4
   \   00000010   ........           _BLF     ??find,??find??rA
    234              PROXRefObject *ObjPtr = NULL;
   \   00000014   0010A0E3           MOV      R1,#+0
    235              if ( ObjMapIterator != SaabXRefList.end() ) {
   \   00000018   040050E1           CMP      R0,R4
    236                  ObjPtr = ObjMapIterator->second;
   \   0000001C   14109015           LDRNE    R1,[R0, #+20]
    237              }
    238              return(ObjPtr);
   \   00000020   1040BDE8           POP      {R4,LR}
   \   00000024   0100A0E1           MOV      R0,R1
   \   00000028   1EFF2FE1           BX       LR               ;; return
    239          }
    240          

   \                                 In segment CODE, align 4, keep-with-next
    241          PROXRefObject* PROXRefObject::GetANProObject(int IdNum, int Type)
    242          {
   \                     ??GetANProObject:
   \   00000000   33402DE9           PUSH     {R0,R1,R4,R5,LR}
   \   00000004   0140A0E1           MOV      R4,R1
    243              PROXRefObject *PPtr= NULL;
    244              multimap<int,PROXRefObject*>::iterator it;
    245              pair<multimap<int,PROXRefObject*>::iterator,multimap<int,PROXRefObject*>::iterator> ObjMapIterator;
    246          
    247              ObjMapIterator = ANPro3XRefList.equal_range(IdNum);
   \   00000008   ........           LDR      R1,??DataTable10  ;; ??SaabXRefList + 24
   \   0000000C   0020A0E1           MOV      R2,R0
   \   00000010   0050A0E3           MOV      R5,#+0
   \   00000014   0D00A0E1           MOV      R0,SP
   \   00000018   ........           _BLF     ??equal_range,??equal_range??rA_2
    248              for ( it=ObjMapIterator.first; !PPtr && it!=ObjMapIterator.second; ++it ) {
   \   0000001C   00009DE5           LDR      R0,[SP, #+0]
   \                     ??GetANProObject_2:
   \   00000020   04109DE5           LDR      R1,[SP, #+4]
   \   00000024   010050E1           CMP      R0,R1
   \   00000028   1100000A           BEQ      ??GetANProObject_3
    249                  PROXRefObject *TmpPtr = (*it).second;
   \   0000002C   141090E5           LDR      R1,[R0, #+20]
    250                  int tmpType;
    251                  switch ( TmpPtr->Type ) {
   \   00000030   A02091E5           LDR      R2,[R1, #+160]
   \   00000034   1B3042E2           SUB      R3,R2,#+27
   \   00000038   403E43E2           SUB      R3,R3,#+1024
   \   0000003C   060053E3           CMP      R3,#+6
   \   00000040   0600008A           BHI      ??GetANProObject_4
   \   00000044   01CF8FE2           ADR      R12,??GetANProObject_1
   \   00000048   03C0DCE7           LDRB     R12,[R12, R3]
   \   0000004C   0CF18FE0           ADD      PC,PC,R12, LSL #+2
   \                     ??GetANProObject_1:
   \   00000050   01010101           DC8      +1,+1,+1,+1
   \   00000054   01010100           DC8      +1,+1,+1,+0
    252                  case C_PRO_CARGO  :
    253                  case C_PRO_BALLAST:
    254                  case C_PRO_HFO    :
    255                  case C_PRO_DO     :
    256                  case C_PRO_LUB    :
    257                  case C_PRO_FW     :
    258                  case C_PRO_MISC   :
    259                      tmpType = C_PRO_TANK;
   \                     ??GetANProObject_5:
   \   00000058   1A20A0E3           MOV      R2,#+26
   \   0000005C   402E82E3           ORR      R2,R2,#0x400
    260                      break;
    261                  default:
    262                      tmpType = TmpPtr->Type;
    263                  }
    264                  if ( tmpType == Type ) {
   \                     ??GetANProObject_4:
   \   00000060   040052E1           CMP      R2,R4
    265                      PPtr = TmpPtr;
   \   00000064   0150A001           MOVEQ    R5,R1
    266                  }
    267              }
   \   00000068   ........           _BLF     ??_IncP,??_IncP??rA
   \   0000006C   000055E3           CMP      R5,#+0
   \   00000070   EAFFFF0A           BEQ      ??GetANProObject_2
    268              return(PPtr);
   \                     ??GetANProObject_3:
   \   00000074   0500A0E1           MOV      R0,R5
   \   00000078                      REQUIRE ?Subroutine30
   \   00000078                      ;; // Fall through to label ?Subroutine30
    269          }
    270          

   \                                 In segment CODE, align 4, keep-with-next
    271          void PROXRefObject::SetState(TankState newState)
    272          {
    273          }
   \                     ??SetState:
   \   00000000   1EFF2FE1           BX       LR               ;; return
    274          

   \                                 In segment CODE, align 4, keep-with-next
    275          TankState PROXRefObject::GetState(void)
    276          {
    277              if ( ExcludeState ) {
   \                     ??GetState:
   \   00000000   4911D0E5           LDRB     R1,[R0, #+329]
   \   00000004   000051E3           CMP      R1,#+0
    278                  return tUndefined;
   \   00000008   0400A013           MOVNE    R0,#+4
   \   0000000C   1EFF2F11           BXNE     LR
    279              }
    280              return State;
   \   00000010   4801D0E5           LDRB     R0,[R0, #+328]
   \   00000014   1EFF2FE1           BX       LR               ;; return
    281          }
    282          
    283          

   \                                 In segment CODE, align 4, keep-with-next
    284          void PROXRefObject::SetStateAll(TankState newState)
    285          {
   \                     ??SetStateAll:
   \   00000000   00402DE9           PUSH     {LR}
   \   00000004   24D04DE2           SUB      SP,SP,#+36
    286              switch ( newState ) {
   \   00000008   000050E3           CMP      R0,#+0
   \   0000000C   1D00001A           BNE      ??SetStateAll_1
    287              case tLoad         :
    288              case tDischarge    :
    289              case tTankCleaning :
    290                  break;
    291              case tSeaGoing     :
    292                  VectorSetState(PROCargoTank::AllObjVector    ,tSeaGoing);
   \   00000010   0D00A0E1           MOV      R0,SP
   \   00000014   ........           _BLF     ??_Zero,??_Zero??rA
   \   00000018   ........           LDR      R1,??DataTable14  ;; ??AllObjVector
   \   0000001C   0D00A0E1           MOV      R0,SP
   \   00000020   ........           _BLF     ??_Assign,??_Assign??rA
   \   00000024   0010A0E3           MOV      R1,#+0
   \   00000028   0D00A0E1           MOV      R0,SP
   \   0000002C   ........           BL       ??VectorSetState
   \   00000030   0D00A0E1           MOV      R0,SP
   \   00000034   ........           _BLF     ??_Tidy,??_Tidy??rA_1
    293                  VectorSetState(PROBallastTank::AllObjVector  ,tSeaGoing);
   \   00000038   0C008DE2           ADD      R0,SP,#+12
   \   0000003C   ........           _BLF     ??_Zero,??_Zero??rA
   \   00000040   ........           LDR      R1,??DataTable15  ;; ??AllObjVector_1
   \   00000044   0C008DE2           ADD      R0,SP,#+12
   \   00000048   ........           _BLF     ??_Assign,??_Assign??rA
   \   0000004C   0010A0E3           MOV      R1,#+0
   \   00000050   0C008DE2           ADD      R0,SP,#+12
   \   00000054   ........           BL       ??VectorSetState
   \   00000058   0C008DE2           ADD      R0,SP,#+12
   \   0000005C   ........           _BLF     ??_Tidy,??_Tidy??rA_1
    294                  VectorSetState(PROTankPressure::AllObjVector,tSeaGoing);
   \   00000060   18008DE2           ADD      R0,SP,#+24
   \   00000064   ........           _BLF     ??_Zero,??_Zero??rA
   \   00000068   ........           LDR      R1,??DataTable16  ;; ??AllObjVector_2
   \   0000006C   18008DE2           ADD      R0,SP,#+24
   \   00000070   ........           _BLF     ??_Assign,??_Assign??rA
   \   00000074   0010A0E3           MOV      R1,#+0
   \   00000078   18008DE2           ADD      R0,SP,#+24
   \   0000007C   ........           BL       ??VectorSetState
   \   00000080   18008DE2           ADD      R0,SP,#+24
   \   00000084   ........           _BLF     ??_Tidy,??_Tidy??rA_1
    295                  break;
    296              case tUndefined    :
    297                  break;
    298              }
    299          }
   \                     ??SetStateAll_1:
   \   00000088   24D08DE2           ADD      SP,SP,#+36
   \   0000008C   0040BDE8           POP      {LR}
   \   00000090   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
    300          TankState PROXRefObject::GetStateAll(void)
    301          {
   \                     ??GetStateAll:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
    302              TankState tmpState = tUndefined;
    303              set<TankState>StateSet;
    304              if ( !PROCargoTank::AllObjVector.empty() ) {
   \   00000004   ........           LDR      R5,??DataTable14  ;; ??AllObjVector
   \   00000008   2CD04DE2           SUB      SP,SP,#+44
   \   0000000C   0440A0E3           MOV      R4,#+4
   \   00000010   14008DE2           ADD      R0,SP,#+20
   \   00000014   ........           _BLF     ??set,??set??rA
   \   00000018   0500A0E1           MOV      R0,R5
   \   0000001C   ........           _BLF     ??empty,??empty??rA
   \   00000020   000050E3           CMP      R0,#+0
   \   00000024   0D00001A           BNE      ??GetStateAll_1
    305                  tmpState = VectorGetState(PROCargoTank::AllObjVector);
   \   00000028   0D00A0E1           MOV      R0,SP
   \   0000002C   ........           _BLF     ??_Zero,??_Zero??rA
   \   00000030   0510A0E1           MOV      R1,R5
   \   00000034   0D00A0E1           MOV      R0,SP
   \   00000038   ........           _BLF     ??_Assign,??_Assign??rA
   \   0000003C   0D00A0E1           MOV      R0,SP
   \   00000040   ........           BL       ??VectorGetState
   \   00000044   0040A0E1           MOV      R4,R0
   \   00000048   0D00A0E1           MOV      R0,SP
   \   0000004C   ........           _BLF     ??_Tidy,??_Tidy??rA_1
    306                  StateSet.insert(tmpState);
   \   00000050   0420A0E1           MOV      R2,R4
   \   00000054   14108DE2           ADD      R1,SP,#+20
   \   00000058   0C008DE2           ADD      R0,SP,#+12
   \   0000005C   ........           _BLF     ??insert_1,??insert??rA_3
    307              }
    308              if ( !PROBallastTank::AllObjVector.empty() ) {
   \                     ??GetStateAll_1:
   \   00000060   ........           LDR      R5,??DataTable15  ;; ??AllObjVector_1
   \   00000064   0500A0E1           MOV      R0,R5
   \   00000068   ........           _BLF     ??empty,??empty??rA
   \   0000006C   000050E3           CMP      R0,#+0
   \   00000070   0D00001A           BNE      ??GetStateAll_2
    309                  tmpState = VectorGetState(PROBallastTank::AllObjVector );
   \   00000074   0D00A0E1           MOV      R0,SP
   \   00000078   ........           _BLF     ??_Zero,??_Zero??rA
   \   0000007C   0510A0E1           MOV      R1,R5
   \   00000080   0D00A0E1           MOV      R0,SP
   \   00000084   ........           _BLF     ??_Assign,??_Assign??rA
   \   00000088   0D00A0E1           MOV      R0,SP
   \   0000008C   ........           BL       ??VectorGetState
   \   00000090   0040A0E1           MOV      R4,R0
   \   00000094   0D00A0E1           MOV      R0,SP
   \   00000098   ........           _BLF     ??_Tidy,??_Tidy??rA_1
    310                  StateSet.insert(tmpState);
   \   0000009C   0420A0E1           MOV      R2,R4
   \   000000A0   14108DE2           ADD      R1,SP,#+20
   \   000000A4   0C008DE2           ADD      R0,SP,#+12
   \   000000A8   ........           _BLF     ??insert_1,??insert??rA_3
    311              }
    312              if ( !PROTankPressure::AllObjVector.empty() ) {
   \                     ??GetStateAll_2:
   \   000000AC   ........           LDR      R5,??DataTable16  ;; ??AllObjVector_2
   \   000000B0   0500A0E1           MOV      R0,R5
   \   000000B4   ........           _BLF     ??empty,??empty??rA
   \   000000B8   000050E3           CMP      R0,#+0
   \   000000BC   0D00001A           BNE      ??GetStateAll_3
    313                  tmpState = VectorGetState(PROTankPressure::AllObjVector);
   \   000000C0   0D00A0E1           MOV      R0,SP
   \   000000C4   ........           _BLF     ??_Zero,??_Zero??rA
   \   000000C8   0510A0E1           MOV      R1,R5
   \   000000CC   0D00A0E1           MOV      R0,SP
   \   000000D0   ........           _BLF     ??_Assign,??_Assign??rA
   \   000000D4   0D00A0E1           MOV      R0,SP
   \   000000D8   ........           BL       ??VectorGetState
   \   000000DC   0040A0E1           MOV      R4,R0
   \   000000E0   0D00A0E1           MOV      R0,SP
   \   000000E4   ........           _BLF     ??_Tidy,??_Tidy??rA_1
    314                  StateSet.insert(tmpState);
   \   000000E8   0420A0E1           MOV      R2,R4
   \   000000EC   14108DE2           ADD      R1,SP,#+20
   \   000000F0   0C008DE2           ADD      R0,SP,#+12
   \   000000F4   ........           _BLF     ??insert_1,??insert??rA_3
    315              }
    316              if ( StateSet.size()==1 ) {
   \                     ??GetStateAll_3:
   \   000000F8   24009DE5           LDR      R0,[SP, #+36]
   \   000000FC   010050E3           CMP      R0,#+1
    317                  tmpState = tmpState;
    318                  if ( tmpState != tSeaGoing ) {
   \   00000100   00005403           CMPEQ    R4,#+0
    319                      tmpState = tUndefined;
    320                  }
    321              } else {
    322                  tmpState = tUndefined;
   \   00000104   0440A013           MOVNE    R4,#+4
    323              }
    324              return tmpState;
   \   00000108   14008DE2           ADD      R0,SP,#+20
   \   0000010C   ........           _BLF     `?~set_1`,`?~set??rA`
   \   00000110   0400A0E1           MOV      R0,R4
   \   00000114   2CD08DE2           ADD      SP,SP,#+44
   \   00000118                      REQUIRE ?Subroutine33
   \   00000118                      ;; // Fall through to label ?Subroutine33
    325          }
    326          
    327          

   \                                 In segment CODE, align 4, keep-with-next
    328          void PROXRefObject::VectorSetState(vector<PRogramObjectBase*>MyVect, TankState newState)
    329          {
   \                     ??VectorSetState:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
    330              for ( unsigned i=0; i < MyVect.size(); i++ ) {
   \   0000000C   0060A0E3           MOV      R6,#+0
   \   00000010   070000EA           B        ??VectorSetState_1
    331                  ((PROXRefObject*)MyVect[i])->SetState(newState);
   \                     ??VectorSetState_2:
   \   00000014   062190E7           LDR      R2,[R0, +R6, LSL #+2]
   \   00000018   0510A0E1           MOV      R1,R5
   \   0000001C   0200A0E1           MOV      R0,R2
   \   00000020   A42092E5           LDR      R2,[R2, #+164]
    332              }
   \   00000024   016086E2           ADD      R6,R6,#+1
   \   00000028   7C2092E5           LDR      R2,[R2, #+124]
   \   0000002C   0FE0A0E1           MOV      LR,PC
   \   00000030   12FF2FE1           BX       R2
   \                     ??VectorSetState_1:
   \   00000034   000094E5           LDR      R0,[R4, #+0]
   \   00000038   041094E5           LDR      R1,[R4, #+4]
   \   0000003C   001041E0           SUB      R1,R1,R0
   \   00000040   210156E1           CMP      R6,R1, LSR #+2
   \   00000044   F2FFFF3A           BCC      ??VectorSetState_2
    333          }
   \   00000048   7040BDE8           POP      {R4-R6,LR}
   \   0000004C   1EFF2FE1           BX       LR               ;; return
    334          

   \                                 In segment CODE, align 4, keep-with-next
    335          TankState PROXRefObject::VectorGetState(vector<PRogramObjectBase*>MyVect)
    336          {
   \                     ??VectorGetState:
   \   00000000   F0402DE9           PUSH     {R4-R7,LR}
   \   00000004   20D04DE2           SUB      SP,SP,#+32
   \   00000008   0040A0E1           MOV      R4,R0
    337              TankState tmpState;
    338              if ( MyVect.empty() ) {
   \   0000000C   ........           _BLF     ??empty,??empty??rA
   \   00000010   000050E3           CMP      R0,#+0
    339                  tmpState = tUndefined;   // Default to Normal if no objects in Set. Anyway something wrong
   \   00000014   0470A013           MOVNE    R7,#+4
   \   00000018   1F00001A           BNE      ??VectorGetState_1
    340              } else {
    341                  set<TankState>StateSet;
   \   0000001C   0D00A0E1           MOV      R0,SP
   \   00000020   ........           _BLF     ??set,??set??rA
    342                  for ( unsigned i=0; i < MyVect.size(); i++ ) {
   \   00000024   0060A0E3           MOV      R6,#+0
   \   00000028   110000EA           B        ??VectorGetState_2
    343                      PROXRefObject *tmpPtr = (PROXRefObject*)MyVect[i];
   \                     ??VectorGetState_3:
   \   0000002C   061190E7           LDR      R1,[R0, +R6, LSL #+2]
    344                      switch ( tmpPtr->TankType ) {
   \   00000030   540191E5           LDR      R0,[R1, #+340]
   \   00000034   010040E2           SUB      R0,R0,#+1
   \   00000038   010050E3           CMP      R0,#+1
   \   0000003C   0A004082           SUBHI    R0,R0,#+10
   \   00000040   01005083           CMPHI    R0,#+1
   \   00000044   0900008A           BHI      ??VectorGetState_4
    345                      case TANKTYPE_TANK_PRESS    :
    346                      case TANKTYPE_LEVEL_SWITCH  :
    347                      case TANKTYPE_CARGO         :
    348                      case TANKTYPE_BALLAST       :
    349                          tmpState = tmpPtr->GetState();
   \   00000048   0100A0E1           MOV      R0,R1
   \   0000004C   A41091E5           LDR      R1,[R1, #+164]
   \   00000050   801091E5           LDR      R1,[R1, #+128]
   \   00000054   0FE0A0E1           MOV      LR,PC
   \   00000058   11FF2FE1           BX       R1
   \   0000005C   0070A0E1           MOV      R7,R0
    350                          StateSet.insert(tmpState);
   \   00000060   0720A0E1           MOV      R2,R7
   \   00000064   0D10A0E1           MOV      R1,SP
   \   00000068   18008DE2           ADD      R0,SP,#+24
   \   0000006C   ........           _BLF     ??insert_1,??insert??rA_3
    351                          break;
    352                      case TANKTYPE_HFO     :
    353                      case TANKTYPE_DO      :
    354                      case TANKTYPE_LUB     :
    355                      case TANKTYPE_FW      :
    356                      case TANKTYPE_MISC    :
    357                      case TANKTYPE_NONE    :
    358                      default:
    359                          break;
    360                      }
    361                  }
   \                     ??VectorGetState_4:
   \   00000070   016086E2           ADD      R6,R6,#+1
   \                     ??VectorGetState_2:
   \   00000074   000094E5           LDR      R0,[R4, #+0]
   \   00000078   041094E5           LDR      R1,[R4, #+4]
   \   0000007C   001041E0           SUB      R1,R1,R0
   \   00000080   210156E1           CMP      R6,R1, LSR #+2
   \   00000084   E8FFFF3A           BCC      ??VectorGetState_3
    362                  if ( StateSet.size()==1 ) {
   \   00000088   10009DE5           LDR      R0,[SP, #+16]
   \   0000008C   010050E3           CMP      R0,#+1
    363                      tmpState = tmpState;
    364                  } else {
    365                      tmpState = tUndefined;
   \   00000090   0470A013           MOVNE    R7,#+4
    366                  }
    367              }
   \   00000094   0D00A0E1           MOV      R0,SP
   \   00000098   ........           _BLF     `?~set_1`,`?~set??rA`
    368              return tmpState;
   \                     ??VectorGetState_1:
   \   0000009C   FF0007E2           AND      R0,R7,#0xFF
   \   000000A0   20D08DE2           ADD      SP,SP,#+32
   \   000000A4                      REQUIRE ?Subroutine32
   \   000000A4                      ;; // Fall through to label ?Subroutine32
    369          }
    370          

   \                                 In segment CODE, align 4, keep-with-next
    371          AnsiString PROXRefObject::GetStateString(TankState tState)
    372          {
   \                     ??GetStateString:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   8CD04DE2           SUB      SP,SP,#+140
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   0150A0E1           MOV      R5,R1
    373              AnsiString StatsStr;
   \   00000010   ........           _BLF     ??AnsiString,??AnsiString??rA
    374              switch ( tState ) {
   \   00000014   030055E3           CMP      R5,#+3
   \   00000018   3A00008A           BHI      ??GetStateString_2
   \   0000001C   010F8FE2           ADR      R0,??GetStateString_1
   \   00000020   0500D0E7           LDRB     R0,[R0, R5]
   \   00000024   00F18FE0           ADD      PC,PC,R0, LSL #+2
   \                     ??GetStateString_1:
   \   00000028   1B000D29           DC8      +27,+0,+13,+41
    375              case tLoad        :
    376                  StatsStr = FindDictionaryWord(L_WORD860);
   \                     ??GetStateString_3:
   \   0000002C   D71FA0E3           MOV      R1,#+860
   \   00000030   0D00A0E1           MOV      R0,SP
   \   00000034   ........           _BLF     ??FindDictionaryWord,??FindDictionaryWord??rA
   \   00000038   ........           LDR      R0,??DataTable21  ;; ??npos
   \   0000003C   0020A0E3           MOV      R2,#+0
   \   00000040   003090E5           LDR      R3,[R0, #+0]
   \   00000044   0D10A0E1           MOV      R1,SP
   \   00000048   0400A0E1           MOV      R0,R4
   \   0000004C   ........           _BLF     ??assign,??assign??rA
   \   00000050   0020A0E3           MOV      R2,#+0
   \   00000054   0110A0E3           MOV      R1,#+1
   \   00000058   0D00A0E1           MOV      R0,SP
   \   0000005C   360000EA           B        ??GetStateString_4
    377                  break;
    378              case tDischarge        :
    379                  StatsStr = FindDictionaryWord(L_WORD861);
   \                     ??GetStateString_5:
   \   00000060   5D10A0E3           MOV      R1,#+93
   \   00000064   C01F81E3           ORR      R1,R1,#0x300
   \   00000068   1C008DE2           ADD      R0,SP,#+28
   \   0000006C   ........           _BLF     ??FindDictionaryWord,??FindDictionaryWord??rA
   \   00000070   ........           LDR      R0,??DataTable21  ;; ??npos
   \   00000074   0020A0E3           MOV      R2,#+0
   \   00000078   003090E5           LDR      R3,[R0, #+0]
   \   0000007C   1C108DE2           ADD      R1,SP,#+28
   \   00000080   0400A0E1           MOV      R0,R4
   \   00000084   ........           _BLF     ??assign,??assign??rA
   \   00000088   0020A0E3           MOV      R2,#+0
   \   0000008C   0110A0E3           MOV      R1,#+1
   \   00000090   1C008DE2           ADD      R0,SP,#+28
   \   00000094   280000EA           B        ??GetStateString_4
    380                  break;
    381              case tSeaGoing      :
    382                  StatsStr = FindDictionaryWord(L_WORD854);
   \                     ??GetStateString_6:
   \   00000098   5610A0E3           MOV      R1,#+86
   \   0000009C   C01F81E3           ORR      R1,R1,#0x300
   \   000000A0   38008DE2           ADD      R0,SP,#+56
   \   000000A4   ........           _BLF     ??FindDictionaryWord,??FindDictionaryWord??rA
   \   000000A8   ........           LDR      R0,??DataTable21  ;; ??npos
   \   000000AC   0020A0E3           MOV      R2,#+0
   \   000000B0   003090E5           LDR      R3,[R0, #+0]
   \   000000B4   38108DE2           ADD      R1,SP,#+56
   \   000000B8   0400A0E1           MOV      R0,R4
   \   000000BC   ........           _BLF     ??assign,??assign??rA
   \   000000C0   0020A0E3           MOV      R2,#+0
   \   000000C4   0110A0E3           MOV      R1,#+1
   \   000000C8   38008DE2           ADD      R0,SP,#+56
   \   000000CC   1A0000EA           B        ??GetStateString_4
    383                  break;
    384              case tTankCleaning  :
    385                  StatsStr = FindDictionaryWord(L_WORD859);
   \                     ??GetStateString_7:
   \   000000D0   5B10A0E3           MOV      R1,#+91
   \   000000D4   C01F81E3           ORR      R1,R1,#0x300
   \   000000D8   54008DE2           ADD      R0,SP,#+84
   \   000000DC   ........           _BLF     ??FindDictionaryWord,??FindDictionaryWord??rA
   \   000000E0   ........           LDR      R0,??DataTable21  ;; ??npos
   \   000000E4   0020A0E3           MOV      R2,#+0
   \   000000E8   003090E5           LDR      R3,[R0, #+0]
   \   000000EC   54108DE2           ADD      R1,SP,#+84
   \   000000F0   0400A0E1           MOV      R0,R4
   \   000000F4   ........           _BLF     ??assign,??assign??rA
   \   000000F8   0020A0E3           MOV      R2,#+0
   \   000000FC   0110A0E3           MOV      R1,#+1
   \   00000100   54008DE2           ADD      R0,SP,#+84
   \   00000104   0C0000EA           B        ??GetStateString_4
    386                  break;
    387              default:
    388              case tUndefined  :
    389                  StatsStr = FindDictionaryWord(L_WORD863);  //Blank, Was L_WORD858
   \                     ??GetStateString_2:
   \   00000108   5F10A0E3           MOV      R1,#+95
   \   0000010C   C01F81E3           ORR      R1,R1,#0x300
   \   00000110   70008DE2           ADD      R0,SP,#+112
   \   00000114   ........           _BLF     ??FindDictionaryWord,??FindDictionaryWord??rA
   \   00000118   ........           LDR      R0,??DataTable21  ;; ??npos
   \   0000011C   0020A0E3           MOV      R2,#+0
   \   00000120   003090E5           LDR      R3,[R0, #+0]
   \   00000124   70108DE2           ADD      R1,SP,#+112
   \   00000128   0400A0E1           MOV      R0,R4
   \   0000012C   ........           _BLF     ??assign,??assign??rA
   \   00000130   0020A0E3           MOV      R2,#+0
   \   00000134   0110A0E3           MOV      R1,#+1
   \   00000138   70008DE2           ADD      R0,SP,#+112
   \                     ??GetStateString_4:
   \   0000013C   ........           _BLF     ??_Tidy_1,??_Tidy??rA
    390                  break;
    391              }
    392              return StatsStr;
   \   00000140   8CD08DE2           ADD      SP,SP,#+140
   \   00000144   ........           B        ?Subroutine33
    393          }
    394          

   \                                 In segment CODE, align 4, keep-with-next
    395          TankState PROXRefObject::GetStateKey(AnsiString KeyWord)
    396          {
   \                     ??GetStateKey:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   1CD04DE2           SUB      SP,SP,#+28
    397              TankState tState;
    398              switch ( FindDictionaryKey(KeyWord) ) {
   \   00000008   0010A0E1           MOV      R1,R0
   \   0000000C   0D00A0E1           MOV      R0,SP
   \   00000010   ........           _BLF     ??string,??string??rA
   \   00000014   0D00A0E1           MOV      R0,SP
   \   00000018   ........           _BLF     ??FindDictionaryKey,??FindDictionaryKey??rA
   \   0000001C   0040A0E1           MOV      R4,R0
   \   00000020   0020A0E3           MOV      R2,#+0
   \   00000024   0110A0E3           MOV      R1,#+1
   \   00000028   0D00A0E1           MOV      R0,SP
   \   0000002C   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   00000030   564044E2           SUB      R4,R4,#+86
   \   00000034   C04F44E2           SUB      R4,R4,#+768
   \   00000038   070054E3           CMP      R4,#+7
   \   0000003C   0C00008A           BHI      ??GetStateKey_2
   \   00000040   010F8FE2           ADR      R0,??GetStateKey_1
   \   00000044   0400D0E7           LDRB     R0,[R0, R4]
   \   00000048   00F18FE0           ADD      PC,PC,R0, LSL #+2
   \                     ??GetStateKey_1:
   \   0000004C   05090909           DC8      +5,+9,+9,+9
   \   00000050   09070103           DC8      +9,+7,+1,+3
    399              case L_WORD860:
    400                  tState = tLoad;
   \                     ??GetStateKey_3:
   \   00000054   0100A0E3           MOV      R0,#+1
   \   00000058   060000EA           B        ??GetStateKey_4
    401                  break;
    402              case L_WORD861:
    403                  tState = tDischarge;
   \                     ??GetStateKey_5:
   \   0000005C   0200A0E3           MOV      R0,#+2
   \   00000060   040000EA           B        ??GetStateKey_4
    404                  break;
    405              case L_WORD854:
    406                  tState = tSeaGoing;
   \                     ??GetStateKey_6:
   \   00000064   0000A0E3           MOV      R0,#+0
   \   00000068   020000EA           B        ??GetStateKey_4
    407                  break;
    408              case L_WORD859:
    409                  tState = tTankCleaning;
   \                     ??GetStateKey_7:
   \   0000006C   0300A0E3           MOV      R0,#+3
   \   00000070   000000EA           B        ??GetStateKey_4
    410                  break;
    411              case L_WORD858:
    412              default:
    413                  tState = tUndefined;
   \                     ??GetStateKey_2:
   \   00000074   0400A0E3           MOV      R0,#+4
    414                  break;
    415              }
    416              return tState;
   \                     ??GetStateKey_4:
   \   00000078   1CD08DE2           ADD      SP,SP,#+28
   \   0000007C   ........           B        ??Subroutine29_0
    417          }

   \                                 In segment CODE, align 4, keep-with-next
   \                     ?Subroutine29:
   \   00000000   4810C4E5           STRB     R1,[R4, #+72]
   \                     ??Subroutine29_0:
   \   00000004   1040BDE8           POP      {R4,LR}
   \   00000008   1EFF2FE1           BX       LR               ;; return
    418          
    419          

   \                                 In segment CODE, align 4, keep-with-next
    420          float PROXRefObject::GetTemperature(void)
    421          {
    422              return 0.0;
   \                     ??GetTemperature:
   \   00000000   ........           B        ?Subroutine34
    423          }

   \                                 In segment CODE, align 4, keep-with-next
   \                     ?Subroutine34:
   \   00000000   0000A0E3           MOV      R0,#+0
   \   00000004   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
    424          void PROXRefObject::SetTemperature(float NewTemp)
    425          {
    426          }
   \                     ??SetTemperature:
   \   00000000   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
    427          float PROXRefObject::GetPressure(void)
    428          {
    429              return 0.0;
   \                     ??GetPressure:
   \   00000000                      REQUIRE ?Subroutine34
   \   00000000                      ;; // Fall through to label ?Subroutine34
    430          }
    431          

   \                                 In segment CODE, align 4, keep-with-next
    432          void PROXRefObject::SetPressure(float NewTemp)
    433          {
    434          }
   \                     ??SetPressure:
   \   00000000   1EFF2FE1           BX       LR               ;; return
    435          

   \                                 In segment CODE, align 4, keep-with-next
    436          bool PROXRefObject::GetIsOnline(void)
    437          {
    438              return IsOnline;
   \                     ??GetIsOnline:
   \   00000000   4A01D0E5           LDRB     R0,[R0, #+330]
   \   00000004   1EFF2FE1           BX       LR               ;; return
    439          }
    440          

   \                                 In segment CODE, align 4, keep-with-next
    441          void PROXRefObject::SetToOnline(void)
    442          {
   \                     ??SetToOnline:
   \   00000000   10402DE9           PUSH     {R4,LR}
    443              set<PROXRefObject *>::iterator pBIt;
    444              for (pBIt = ObjectSet.begin(); pBIt != ObjectSet.end(); pBIt++) {
   \   00000004   ........           LDR      R4,??DataTable23  ;; ??SaabXRefList
   \   00000008   300094E5           LDR      R0,[R4, #+48]
   \   0000000C   020000EA           B        ??SetToOnline_1
    445                  (*pBIt)->IsOnline = true;
   \                     ??SetToOnline_2:
   \   00000010   102090E5           LDR      R2,[R0, #+16]
   \   00000014   4A11C2E5           STRB     R1,[R2, #+330]
    446              }
   \   00000018   ........           _BLF     ??_IncP,??_IncP??rA
   \                     ??SetToOnline_1:
   \   0000001C   302084E2           ADD      R2,R4,#+48
   \   00000020   0110A0E3           MOV      R1,#+1
   \   00000024   020050E1           CMP      R0,R2
   \   00000028   F8FFFF1A           BNE      ??SetToOnline_2
    447              IsSetTonline = true;
   \   0000002C   ........           B        ?Subroutine29
    448          
    449          }
    450          
    451          

   \                                 In segment CODE, align 4, keep-with-next
    452          void PROXRefObject::SetToOffline(void)
    453          {
   \                     ??SetToOffline:
   \   00000000   10402DE9           PUSH     {R4,LR}
    454              set<PROXRefObject *>::iterator pBIt;
    455              for (pBIt = ObjectSet.begin(); pBIt != ObjectSet.end(); pBIt++) {
   \   00000004   ........           LDR      R4,??DataTable23  ;; ??SaabXRefList
   \   00000008   300094E5           LDR      R0,[R4, #+48]
   \   0000000C   020000EA           B        ??SetToOffline_1
    456                  (*pBIt)->IsOnline = false;
   \                     ??SetToOffline_2:
   \   00000010   102090E5           LDR      R2,[R0, #+16]
   \   00000014   4A11C2E5           STRB     R1,[R2, #+330]
    457              }
   \   00000018   ........           _BLF     ??_IncP,??_IncP??rA
   \                     ??SetToOffline_1:
   \   0000001C   302084E2           ADD      R2,R4,#+48
   \   00000020   0010A0E3           MOV      R1,#+0
   \   00000024   020050E1           CMP      R0,R2
   \   00000028   F8FFFF1A           BNE      ??SetToOffline_2
    458              IsSetTonline = false;
   \   0000002C                      REQUIRE ?Subroutine29
   \   0000002C                      ;; // Fall through to label ?Subroutine29
    459          
    460          }
    461          
    462          

   \                                 In segment CODE, align 4, keep-with-next
    463          bool PROXRefObject::GetIsSetToOnline(void)
    464          {
    465              return IsSetTonline;
   \                     ??GetIsSetToOnline:
   \   00000000   04009FE5           LDR      R0,??GetIsSetToOnline_1  ;; ??SaabXRefList + 72
   \   00000004   0000D0E5           LDRB     R0,[R0, #+0]
   \   00000008   1EFF2FE1           BX       LR               ;; return
   \                     ??GetIsSetToOnline_1:
   \   0000000C   ........           DC32     ??SaabXRefList + 72
    466          }

   \                                 In segment DATA_ID, align 4, align-sorted
   \                     `?<Initializer for SaabXRefList>`:
   \   00000000   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000010   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0
   \              0000        
   \                     `?<Initializer for ANPro3XRefList>`:
   \   00000018   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000028   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0
   \              0000        
   \                     `?<Initializer for ObjectSet>`:
   \   00000030   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000040   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0
   \              0000        
   \                     `?<Initializer for IsSetTonline>`:
   \   00000048   01                 DC8 1

   \                                 In segment DIFUNCT, align 4, keep-with-next, root
   \   00000000                      REQUIRE ?call_ctors
   \   00000000   ........           DC32    ??__sti__routine

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "PRogram object ">`:
   \   00000000   50526F677261       DC8 "PRogram object "
   \              6D206F626A65
   \              63742000    
   \   00000010   3A0A556E6578       DC8 ":\012Unexpected End This "
   \              706563746564
   \              20456E642054
   \              6869732000  
   \   00000027   00                 DC8 0
   \   00000028   206973206E6F       DC8 " is not allowed here!! Line:"
   \              7420616C6C6F
   \              776564206865
   \              72652121204C
   \              696E653A00  
   \   00000045   000000             DC8 0, 0, 0
   \   00000048   4475706C6963       DC8 "Duplicate Saab Id for "
   \              617465205361
   \              616220496420
   \              666F722000  
   \   0000005F   00                 DC8 0

   \                                 In segment DATA_C, align 1, align-sorted
   \   00000000   3000               DC8 "0"

   \                                 In segment CODE, align 4, keep-with-next
   \   static __??Code32?? __intrinsic __code __interwork __atpcs void __sti__routine()
   \                     ??__sti__routine:
   \   00000000   31402DE9           PUSH     {R0,R4,R5,LR}
   \   00000004   ........           LDR      R4,??DataTable9  ;; ??SaabXRefList
   \   00000008   0110A0E3           MOV      R1,#+1
   \   0000000C   6C509FE5           LDR      R5,??__sti__routine_1  ;; ?_0
   \   00000010   0D00A0E1           MOV      R0,SP
   \   00000014   ........           _BLF     __data_memzero,??__data_memzero??rA
   \   00000018   0400A0E1           MOV      R0,R4
   \   0000001C   ........           _BLF     ??_Clear,??_Clear??rA
   \   00000020   0000DDE5           LDRB     R0,[SP, #+0]
   \   00000024   1400C4E5           STRB     R0,[R4, #+20]
   \   00000028   0500A0E1           MOV      R0,R5
   \   0000002C   ........           _BLF     __record_needed_destruction,??__record_needed_destruction??rA
   \   00000030   0110A0E3           MOV      R1,#+1
   \   00000034   0D00A0E1           MOV      R0,SP
   \   00000038   ........           _BLF     __data_memzero,??__data_memzero??rA
   \   0000003C   180084E2           ADD      R0,R4,#+24
   \   00000040   ........           _BLF     ??_Clear,??_Clear??rA
   \   00000044   0000DDE5           LDRB     R0,[SP, #+0]
   \   00000048   2C00C4E5           STRB     R0,[R4, #+44]
   \   0000004C   0C0085E2           ADD      R0,R5,#+12
   \   00000050   ........           _BLF     __record_needed_destruction,??__record_needed_destruction??rA
   \   00000054   0110A0E3           MOV      R1,#+1
   \   00000058   0D00A0E1           MOV      R0,SP
   \   0000005C   ........           _BLF     __data_memzero,??__data_memzero??rA
   \   00000060   300084E2           ADD      R0,R4,#+48
   \   00000064   ........           _BLF     ??_Clear,??_Clear??rA
   \   00000068   0000DDE5           LDRB     R0,[SP, #+0]
   \   0000006C   4400C4E5           STRB     R0,[R4, #+68]
   \   00000070   180085E2           ADD      R0,R5,#+24
   \   00000074   ........           _BLF     __record_needed_destruction,??__record_needed_destruction??rA
   \   00000078   3140BDE8           POP      {R0,R4,R5,LR}
   \   0000007C   1EFF2FE1           BX       LR               ;; return
   \                     ??__sti__routine_1:
   \   00000080   ........           DC32     ?_0

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs PROXRefObject &PROXRefObject::new PROXRefObject(bool)
   \                     `??new PROXRefObject`:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   560FA0E3           MOV      R0,#+344
   \   0000000C   ........           _BLF     `??operator new`,`??operator new??rA`
   \   00000010   000050E3           CMP      R0,#+0
   \   00000014   0100000A           BEQ      `??new PROXRefObject_1`
   \   00000018   0410A0E1           MOV      R1,R4
   \   0000001C   ........           BL       ??PROXRefObject
   \                     `??new PROXRefObject_1`:
   \   00000020   ........           B        ??Subroutine29_0

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable2:
   \   00000000   ........           DC32     ??__vtbl

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable6:
   \   00000000   ........           DC32     ??npos

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable9:
   \   00000000   ........           DC32     ??SaabXRefList

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable10:
   \   00000000   ........           DC32     ??SaabXRefList + 24

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable14:
   \   00000000   ........           DC32     ??AllObjVector

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable15:
   \   00000000   ........           DC32     ??AllObjVector_1

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable16:
   \   00000000   ........           DC32     ??AllObjVector_2

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable21:
   \   00000000   ........           DC32     ??npos

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable23:
   \   00000000   ........           DC32     ??SaabXRefList

   Maximum stack usage in bytes:

     Function                       CSTACK
     --------                       ------
     PROXRefObject::GetANProObject(int, int)
                                       20
     PROXRefObject::GetIsOnline()       0
     PROXRefObject::GetIsSetToOnline()
                                        0
     PROXRefObject::GetPressure()       0
     PROXRefObject::GetSaabObject(int)
                                        8
     PROXRefObject::GetState()          0
     PROXRefObject::GetStateAll()      56
     PROXRefObject::GetStateKey(AnsiString)
                                       36
     PROXRefObject::GetStateString(TankState)
                                      152
     PROXRefObject::GetStringValue(int, int, AnsiString &)
                                       40
     PROXRefObject::GetTemperature()
                                        0
     PROXRefObject::GetValue(int, int, float &, int &, int &)
                                       28
     PROXRefObject::LoadConfigString(TSNConfigString &)
                                      604
     PROXRefObject::MakeConfigString(int)
                                      372
     PROXRefObject::PROXRefObject(bool)
                                       20
     PROXRefObject::PutValue(int, int, AnsiString, bool, int *)
                                      128
     PROXRefObject::SetANPro3Xref(int)
                                       20
     PROXRefObject::SetPressure(float)
                                        0
     PROXRefObject::SetSaabXref(int)
                                       20
     PROXRefObject::SetState(TankState)
                                        0
     PROXRefObject::SetStateAll(TankState)
                                       40
     PROXRefObject::SetTemperature(float)
                                        0
     PROXRefObject::SetToOffline()      8
     PROXRefObject::SetToOnline()       8
     PROXRefObject::VectorGetState(vector<PRogramObjectBase *>)
                                       52
     PROXRefObject::VectorSetState(vector<PRogramObjectBase *>, TankState)
                                       16
     PROXRefObject::new PROXRefObject(bool)
                                        8
     PROXRefObject::~PROXRefObject()
                                       32
     _Tree<_Tmap_traits<int, PROXRefObject *, less<int>, allocator<pair<int const, PROXRefObject *>>, false>>::_Erase(_Tree<_Tmap_traits<int, PROXRefObject *, less<int>, allocator<pair<int const, PROXRefObject *>>, false>>::_Nodeptr)
                                       16
     _Tree<_Tmap_traits<int, PROXRefObject *, less<int>, allocator<pair<int const, PROXRefObject *>>, false>>::_Insert(bool, _Tree<_Tmap_traits<int, PROXRefObject *, less<int>, allocator<pair<int const, PROXRefObject *>>, false>>::_Nodeptr, pair<int const, PROXRefObject *> const &)
                                       24
     _Tree<_Tmap_traits<int, PROXRefObject *, less<int>, allocator<pair<int const, PROXRefObject *>>, false>>::_Lbound(int) const
                                        0
     _Tree<_Tmap_traits<int, PROXRefObject *, less<int>, allocator<pair<int const, PROXRefObject *>>, false>>::_Ubound(int) const
                                        0
     _Tree<_Tmap_traits<int, PROXRefObject *, less<int>, allocator<pair<int const, PROXRefObject *>>, false>>::clear()
                                        8
     _Tree<_Tmap_traits<int, PROXRefObject *, less<int>, allocator<pair<int const, PROXRefObject *>>, false>>::equal_range(int)
                                       28
     _Tree<_Tmap_traits<int, PROXRefObject *, less<int>, allocator<pair<int const, PROXRefObject *>>, false>>::erase(_Tree<_Tmap_traits<int, PROXRefObject *, less<int>, allocator<pair<int const, PROXRefObject *>>, false>>::iterator, _Tree<_Tmap_traits<int, PROXRefObject *, less<int>, allocator<pair<int const, PROXRefObject *>>, false>>::iterator)
                                       20
     _Tree<_Tmap_traits<int, PROXRefObject *, less<int>, allocator<pair<int const, PROXRefObject *>>, false>>::erase(int)
                                       24
     _Tree<_Tmap_traits<int, PROXRefObject *, less<int>, allocator<pair<int const, PROXRefObject *>>, false>>::find(int)
                                       12
     _Tree<_Tmap_traits<int, PROXRefObject *, less<int>, allocator<pair<int const, PROXRefObject *>>, false>>::insert(pair<int const, PROXRefObject *> const &)
                                       40
     _Tree<_Tmap_traits<int, PROXRefObject *, less<int>, allocator<pair<int const, PROXRefObject *>>, true>>::_Erase(_Tree<_Tmap_traits<int, PROXRefObject *, less<int>, allocator<pair<int const, PROXRefObject *>>, true>>::_Nodeptr)
                                       16
     _Tree<_Tmap_traits<int, PROXRefObject *, less<int>, allocator<pair<int const, PROXRefObject *>>, true>>::_Insert(bool, _Tree<_Tmap_traits<int, PROXRefObject *, less<int>, allocator<pair<int const, PROXRefObject *>>, true>>::_Nodeptr, pair<int const, PROXRefObject *> const &)
                                       24
     _Tree<_Tmap_traits<int, PROXRefObject *, less<int>, allocator<pair<int const, PROXRefObject *>>, true>>::_Lbound(int) const
                                        0
     _Tree<_Tmap_traits<int, PROXRefObject *, less<int>, allocator<pair<int const, PROXRefObject *>>, true>>::_Ubound(int) const
                                        0
     _Tree<_Tmap_traits<int, PROXRefObject *, less<int>, allocator<pair<int const, PROXRefObject *>>, true>>::equal_range(int)
                                       28
     _Tree<_Tmap_traits<int, PROXRefObject *, less<int>, allocator<pair<int const, PROXRefObject *>>, true>>::insert(pair<int const, PROXRefObject *> const &)
                                       16
     _Tree<_Tset_traits<PROXRefObject *, less<PROXRefObject *>, allocator<PROXRefObject *>, false>>::_Erase(_Tree<_Tset_traits<PROXRefObject *, less<PROXRefObject *>, allocator<PROXRefObject *>, false>>::_Nodeptr)
                                       16
     _Tree<_Tset_traits<PROXRefObject *, less<PROXRefObject *>, allocator<PROXRefObject *>, false>>::_Insert(bool, _Tree<_Tset_traits<PROXRefObject *, less<PROXRefObject *>, allocator<PROXRefObject *>, false>>::_Nodeptr, PROXRefObject *)
                                       24
     _Tree<_Tset_traits<PROXRefObject *, less<PROXRefObject *>, allocator<PROXRefObject *>, false>>::_Lbound(PROXRefObject *) const
                                        0
     _Tree<_Tset_traits<PROXRefObject *, less<PROXRefObject *>, allocator<PROXRefObject *>, false>>::_Ubound(PROXRefObject *) const
                                        0
     _Tree<_Tset_traits<PROXRefObject *, less<PROXRefObject *>, allocator<PROXRefObject *>, false>>::clear()
                                        8
     _Tree<_Tset_traits<PROXRefObject *, less<PROXRefObject *>, allocator<PROXRefObject *>, false>>::equal_range(PROXRefObject *)
                                       28
     _Tree<_Tset_traits<PROXRefObject *, less<PROXRefObject *>, allocator<PROXRefObject *>, false>>::erase(PROXRefObject *)
                                       24
     _Tree<_Tset_traits<PROXRefObject *, less<PROXRefObject *>, allocator<PROXRefObject *>, false>>::erase(_Tree<_Tset_traits<PROXRefObject *, less<PROXRefObject *>, allocator<PROXRefObject *>, false>>::iterator, _Tree<_Tset_traits<PROXRefObject *, less<PROXRefObject *>, allocator<PROXRefObject *>, false>>::iterator)
                                       20
     _Tree<_Tset_traits<PROXRefObject *, less<PROXRefObject *>, allocator<PROXRefObject *>, false>>::insert(PROXRefObject *)
                                       44
     _Tree<_Tset_traits<TankState, less<TankState>, allocator<TankState>, false>>::_Erase(_Tree<_Tset_traits<TankState, less<TankState>, allocator<TankState>, false>>::_Nodeptr)
                                       16
     _Tree<_Tset_traits<TankState, less<TankState>, allocator<TankState>, false>>::_Insert(bool, _Tree<_Tset_traits<TankState, less<TankState>, allocator<TankState>, false>>::_Nodeptr, TankState)
                                       24
     _Tree<_Tset_traits<TankState, less<TankState>, allocator<TankState>, false>>::insert(TankState)
                                       40
     _Tree_algobase<allocator<void>>::_Clear()
                                        0
     _Tree_algobase<allocator<void>>::_DecP(_Tree_algobase<allocator<void>>::_Genptr)
                                        0
     _Tree_algobase<allocator<void>>::_Erase(_Tree_algobase<allocator<void>>::_Genptr)
                                       32
     _Tree_algobase<allocator<void>>::_IncP(_Tree_algobase<allocator<void>>::_Genptr)
                                        0
     _Tree_algobase<allocator<void>>::_Insert(bool, _Tree_algobase<allocator<void>>::_Genptr, _Tree_algobase<allocator<void>>::_Genptr)
                                       20
     _Tree_algobase<allocator<void>>::_Lrotate(_Tree_algobase<allocator<void>>::_Genptr)
                                        0
     _Tree_algobase<allocator<void>>::_Rrotate(_Tree_algobase<allocator<void>>::_Genptr)
                                        0
     _Vector_impl<PRogramObjectBase *, allocator<PRogramObjectBase *>>::_Assign(_Vector_impl<PRogramObjectBase *, allocator<PRogramObjectBase *>> const &)
                                       20
     _Vector_impl<PRogramObjectBase *, allocator<PRogramObjectBase *>>::_Tidy()
                                        8
     _Vector_value<allocator<void>>::_Zero()
                                        0
     __sti__routine()                  16
     map<int, PROXRefObject *>::~map()
                                        4
     multimap<int, PROXRefObject *>::~multimap()
                                        8
     operator+(string const &, char const *)
                                       44
     operator+(string const &, string const &)
                                       40
     set<PROXRefObject *>::~set()       4
     set<TankState>::set()             12
     set<TankState>::~set()             8
     string::string(string const &)    12
     vector<PRogramObjectBase *>::empty() const
                                        0


   Segment part sizes:

     Function/Label                 Bytes
     --------------                 -----
     string::string(string const &)   64
     _Tree_algobase<allocator<void>>::_DecP(_Tree_algobase<allocator<void>>::_Genptr)
                                     100
     _Tree_algobase<allocator<void>>::_IncP(_Tree_algobase<allocator<void>>::_Genptr)
                                      92
     _Tree_algobase<allocator<void>>::_Clear()
                                      36
     _Tree_algobase<allocator<void>>::_Rrotate(_Tree_algobase<allocator<void>>::_Genptr)
                                      84
     _Tree_algobase<allocator<void>>::_Lrotate(_Tree_algobase<allocator<void>>::_Genptr)
                                      84
     _Tree_algobase<allocator<void>>::_Erase(_Tree_algobase<allocator<void>>::_Genptr)
                                     804
     _Tree_algobase<allocator<void>>::_Insert(bool, _Tree_algobase<allocator<void>>::_Genptr, _Tree_algobase<allocator<void>>::_Genptr)
                                     356
     _Tree<_Tmap_traits<int, PROXRefObject *, less<int>, allocator<pair<int const, PROXRefObject *>>, true>>::insert(pair<int const, PROXRefObject *> const &)
                                     120
     _Tree<_Tset_traits<TankState, less<TankState>, allocator<TankState>, false>>::insert(TankState)
                                     200
     _Tree<_Tmap_traits<int, PROXRefObject *, less<int>, allocator<pair<int const, PROXRefObject *>>, false>>::insert(pair<int const, PROXRefObject *> const &)
                                     208
     _Tree<_Tset_traits<PROXRefObject *, less<PROXRefObject *>, allocator<PROXRefObject *>, false>>::insert(PROXRefObject *)
                                     200
     _Tree<_Tset_traits<PROXRefObject *, less<PROXRefObject *>, allocator<PROXRefObject *>, false>>::erase(_Tree<_Tset_traits<PROXRefObject *, less<PROXRefObject *>, allocator<PROXRefObject *>, false>>::iterator, _Tree<_Tset_traits<PROXRefObject *, less<PROXRefObject *>, allocator<PROXRefObject *>, false>>::iterator)
                                     108
     _Tree<_Tmap_traits<int, PROXRefObject *, less<int>, allocator<pair<int const, PROXRefObject *>>, false>>::erase(_Tree<_Tmap_traits<int, PROXRefObject *, less<int>, allocator<pair<int const, PROXRefObject *>>, false>>::iterator, _Tree<_Tmap_traits<int, PROXRefObject *, less<int>, allocator<pair<int const, PROXRefObject *>>, false>>::iterator)
                                     108
     _Tree<_Tset_traits<PROXRefObject *, less<PROXRefObject *>, allocator<PROXRefObject *>, false>>::erase(PROXRefObject *)
                                      84
     _Tree<_Tmap_traits<int, PROXRefObject *, less<int>, allocator<pair<int const, PROXRefObject *>>, false>>::erase(int)
                                      84
     _Tree<_Tset_traits<PROXRefObject *, less<PROXRefObject *>, allocator<PROXRefObject *>, false>>::clear()
                                      32
     _Tree<_Tmap_traits<int, PROXRefObject *, less<int>, allocator<pair<int const, PROXRefObject *>>, false>>::clear()
                                      32
     _Tree<_Tmap_traits<int, PROXRefObject *, less<int>, allocator<pair<int const, PROXRefObject *>>, false>>::find(int)
                                      48
     _Tree<_Tmap_traits<int, PROXRefObject *, less<int>, allocator<pair<int const, PROXRefObject *>>, true>>::equal_range(int)
                                      76
     _Tree<_Tmap_traits<int, PROXRefObject *, less<int>, allocator<pair<int const, PROXRefObject *>>, false>>::equal_range(int)
                                      76
     _Tree<_Tset_traits<PROXRefObject *, less<PROXRefObject *>, allocator<PROXRefObject *>, false>>::equal_range(PROXRefObject *)
                                      76
     _Tree<_Tset_traits<PROXRefObject *, less<PROXRefObject *>, allocator<PROXRefObject *>, false>>::_Erase(_Tree<_Tset_traits<PROXRefObject *, less<PROXRefObject *>, allocator<PROXRefObject *>, false>>::_Nodeptr)
                                      68
     _Tree<_Tmap_traits<int, PROXRefObject *, less<int>, allocator<pair<int const, PROXRefObject *>>, false>>::_Erase(_Tree<_Tmap_traits<int, PROXRefObject *, less<int>, allocator<pair<int const, PROXRefObject *>>, false>>::_Nodeptr)
                                      68
     _Tree<_Tset_traits<TankState, less<TankState>, allocator<TankState>, false>>::_Erase(_Tree<_Tset_traits<TankState, less<TankState>, allocator<TankState>, false>>::_Nodeptr)
                                      68
     _Tree<_Tmap_traits<int, PROXRefObject *, less<int>, allocator<pair<int const, PROXRefObject *>>, true>>::_Erase(_Tree<_Tmap_traits<int, PROXRefObject *, less<int>, allocator<pair<int const, PROXRefObject *>>, true>>::_Nodeptr)
                                      68
     _Tree<_Tset_traits<TankState, less<TankState>, allocator<TankState>, false>>::_Insert(bool, _Tree<_Tset_traits<TankState, less<TankState>, allocator<TankState>, false>>::_Nodeptr, TankState)
                                      96
     _Tree<_Tmap_traits<int, PROXRefObject *, less<int>, allocator<pair<int const, PROXRefObject *>>, true>>::_Insert(bool, _Tree<_Tmap_traits<int, PROXRefObject *, less<int>, allocator<pair<int const, PROXRefObject *>>, true>>::_Nodeptr, pair<int const, PROXRefObject *> const &)
                                     112
     _Tree<_Tmap_traits<int, PROXRefObject *, less<int>, allocator<pair<int const, PROXRefObject *>>, false>>::_Insert(bool, _Tree<_Tmap_traits<int, PROXRefObject *, less<int>, allocator<pair<int const, PROXRefObject *>>, false>>::_Nodeptr, pair<int const, PROXRefObject *> const &)
                                     112
     _Tree<_Tset_traits<PROXRefObject *, less<PROXRefObject *>, allocator<PROXRefObject *>, false>>::_Insert(bool, _Tree<_Tset_traits<PROXRefObject *, less<PROXRefObject *>, allocator<PROXRefObject *>, false>>::_Nodeptr, PROXRefObject *)
                                      96
     _Tree<_Tmap_traits<int, PROXRefObject *, less<int>, allocator<pair<int const, PROXRefObject *>>, true>>::_Lbound(int) const
                                      40
     _Tree<_Tset_traits<PROXRefObject *, less<PROXRefObject *>, allocator<PROXRefObject *>, false>>::_Lbound(PROXRefObject *) const
                                      40
     _Tree<_Tmap_traits<int, PROXRefObject *, less<int>, allocator<pair<int const, PROXRefObject *>>, false>>::_Lbound(int) const
                                      40
     _Tree<_Tmap_traits<int, PROXRefObject *, less<int>, allocator<pair<int const, PROXRefObject *>>, true>>::_Ubound(int) const
                                      40
     _Tree<_Tset_traits<PROXRefObject *, less<PROXRefObject *>, allocator<PROXRefObject *>, false>>::_Ubound(PROXRefObject *) const
                                      40
     _Tree<_Tmap_traits<int, PROXRefObject *, less<int>, allocator<pair<int const, PROXRefObject *>>, false>>::_Ubound(int) const
                                      40
     set<TankState>::~set()           32
     set<PROXRefObject *>::~set()     16
     set<TankState>::set()            48
     map<int, PROXRefObject *>::~map()
                                      16
     multimap<int, PROXRefObject *>::~multimap()
                                      32
     _Vector_value<allocator<void>>::_Zero()
                                      20
     _Vector_impl<PRogramObjectBase *, allocator<PRogramObjectBase *>>::_Tidy()
                                      44
     _Vector_impl<PRogramObjectBase *, allocator<PRogramObjectBase *>>::_Assign(_Vector_impl<PRogramObjectBase *, allocator<PRogramObjectBase *>> const &)
                                     216
     vector<PRogramObjectBase *>::empty() const
                                      32
     operator+(string const &, string const &)
                                      88
     operator+(string const &, char const *)
                                      92
     ?_0                              36
     PROXRefObject::SaabXRefList      73
     PROXRefObject::PROXRefObject(bool)
                                     104
     ?Subroutine30                     8
     PROXRefObject::~PROXRefObject()
                                     264
     PROXRefObject::MakeConfigString(int)
                                     900
     ?Subroutine31                    20
     PROXRefObject::LoadConfigString(TSNConfigString &)
                                    1128
     PROXRefObject::GetValue(int, int, float &, int &, int &)
                                      92
     ?Subroutine32                     8
     PROXRefObject::GetStringValue(int, int, AnsiString &)
                                     108
     ?Subroutine33                     8
     PROXRefObject::PutValue(int, int, AnsiString, bool, int *)
                                     368
     PROXRefObject::SetSaabXref(int)
                                      64
     PROXRefObject::SetANPro3Xref(int)
                                      40
     PROXRefObject::GetSaabObject(int)
                                      44
     PROXRefObject::GetANProObject(int, int)
                                     120
     PROXRefObject::SetState(TankState)
                                       4
     PROXRefObject::GetState()        24
     PROXRefObject::SetStateAll(TankState)
                                     148
     PROXRefObject::GetStateAll()    280
     PROXRefObject::VectorSetState(vector<PRogramObjectBase *>, TankState)
                                      80
     PROXRefObject::VectorGetState(vector<PRogramObjectBase *>)
                                     164
     PROXRefObject::GetStateString(TankState)
                                     328
     PROXRefObject::GetStateKey(AnsiString)
                                     128
     ?Subroutine29                    12
     PROXRefObject::GetTemperature()
                                       4
     ?Subroutine34                     8
     PROXRefObject::SetTemperature(float)
                                       4
     PROXRefObject::GetPressure()      0
     PROXRefObject::SetPressure(float)
                                       4
     PROXRefObject::GetIsOnline()      8
     PROXRefObject::SetToOnline()     48
     PROXRefObject::SetToOffline()    44
     PROXRefObject::GetIsSetToOnline()
                                      16
     ?<Initializer for SaabXRefList>
                                      73
     ?<Constant "PRogram object ">    96
     ?<Constant "0">                   2
     __sti__routine()                132
     PROXRefObject::new PROXRefObject(bool)
                                      36
     ??DataTable2                      4
     ??DataTable6                      4
     ??DataTable9                      4
     ??DataTable10                     4
     ??DataTable14                     4
     ??DataTable15                     4
     ??DataTable16                     4
     ??DataTable21                     4
     ??DataTable23                     4
      Others                        1228

 
 10 460 bytes in segment CODE
    282 bytes in segment DATA_C
     73 bytes in segment DATA_I
     73 bytes in segment DATA_ID
     12 bytes in segment DATA_Z
      4 bytes in segment DIFUNCT
     24 bytes in segment INITTAB
 
 4 788 bytes of CODE  memory (+ 5 700 bytes shared)
   355 bytes of CONST memory
    85 bytes of DATA  memory

Errors: none
Warnings: none
