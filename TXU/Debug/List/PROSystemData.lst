##############################################################################
#                                                                            #
# IAR ARM ANSI C/C++ Compiler V4.42A/W32               14/Sep/2022  15:15:59 #
# Copyright 1999-2005 IAR Systems. All rights reserved.                      #
#                                                                            #
#    Cpu mode        =  interwork                                            #
#    Endian          =  little                                               #
#    Stack alignment =  4                                                    #
#    Source file     =  D:\S2Prog\Shared\Src\PROSystemData.Cpp               #
#    Command line    =  D:\S2Prog\Shared\Src\PROSystemData.Cpp --fpu None    #
#                       -D OS_LIBMODE_SP -D CPU_S3C2410 -D OS_RAMVECT=0 -D   #
#                       OS_UART=-1 -D S2TXU -D USE_LZO=1 -D __ARM_LIBRARY__  #
#                       -D WATCHDOG=1 -D NETWORK=1 -lCN                      #
#                       D:\S2Prog\TXU\Debug\List\ -o                         #
#                       D:\S2Prog\TXU\Debug\Obj\ -z9 --debug --cpu_mode arm  #
#                       --endian little --cpu ARM920T --stack_align 4        #
#                       --interwork -e --enable_multibytes --eec++           #
#                       --dlib_config "C:\Program Files (x86)\IAR            #
#                       Systems\Embedded Workbench                           #
#                       4.0\arm\LIB\dl4tpainl8n.h" -I                        #
#                       D:\S2Prog\TXU\GUI\CORE\ -I D:\S2Prog\TXU\GUI\WM\ -I  #
#                       D:\S2Prog\TXU\GUI\WIDGET\ -I D:\S2Prog\TXU\CONFIG\   #
#                       -I D:\S2Prog\TXU\INC\ -I D:\S2Prog\TXU\..\SHARED\INC #
#                       \ -I D:\S2Prog\TXU\..\SHARED\SRC\ -I                 #
#                       D:\S2Prog\TXU\..\SHARED\LZO\minilzo.210\ -I          #
#                       D:\S2Prog\TXU\lwip-1.4.1\src\include\ -I             #
#                       D:\S2Prog\TXU\lwip-1.4.1\src\include\ipv4\ -I        #
#                       D:\S2Prog\TXU\lwip-1.4.1\src\ -I                     #
#                       D:\S2Prog\TXU\..\SHARED\Database\ -I                 #
#                       D:\S2Prog\TXU\src\ -I "C:\Program Files (x86)\IAR    #
#                       Systems\Embedded Workbench 4.0\arm\INC\"             #
#                       --inline_threshold=2                                 #
#    List file       =  D:\S2Prog\TXU\Debug\List\PROSystemData.lst           #
#    Object file     =  D:\S2Prog\TXU\Debug\Obj\PROSystemData.r79            #
#                                                                            #
#                                                                            #
##############################################################################

D:\S2Prog\Shared\Src\PROSystemData.Cpp
      1          #include "TSNIncludes.h"

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs string::string(string const &)
   \                     ??string:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
   \   0000000C   0020A0E3           MOV      R2,#+0
   \   00000010   0010A0E3           MOV      R1,#+0
   \   00000014   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   00000018   1C009FE5           LDR      R0,??string_1    ;; ??npos
   \   0000001C   0020A0E3           MOV      R2,#+0
   \   00000020   003090E5           LDR      R3,[R0, #+0]
   \   00000024   0510A0E1           MOV      R1,R5
   \   00000028   0400A0E1           MOV      R0,R4
   \   0000002C   ........           _BLF     ??assign,??assign??rA
   \   00000030   0400A0E1           MOV      R0,R4
   \   00000034   3040BDE8           POP      {R4,R5,LR}
   \   00000038   1EFF2FE1           BX       LR               ;; return
   \                     ??string_1:
   \   0000003C   ........           DC32     ??npos

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void _Vector_value<allocator<void>>::_Zero()
   \                     ??_Zero:
   \   00000000   0010A0E3           MOV      R1,#+0
   \   00000004   001080E5           STR      R1,[R0, #+0]
   \   00000008   041080E5           STR      R1,[R0, #+4]
   \   0000000C   081080E5           STR      R1,[R0, #+8]
   \   00000010   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void _Vector_impl<PRogramObjectBase *, allocator<PRogramObjectBase *>>::_Tidy()
   \                     ??_Tidy:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   000094E5           LDR      R0,[R4, #+0]
   \   0000000C   000050E3           CMP      R0,#+0
   \   00000010   0100000A           BEQ      ??_Tidy_2
   \   00000014   040084E5           STR      R0,[R4, #+4]
   \   00000018   ........           _BLF     `??operator delete`,`??operator delete??rA`
   \                     ??_Tidy_2:
   \   0000001C   0400A0E1           MOV      R0,R4
   \   00000020   ........           _BLF     ??_Zero,??_Zero??rA
   \   00000024   1040BDE8           POP      {R4,LR}
   \   00000028   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void _Vector_impl<PRogramObjectBase *, allocator<PRogramObjectBase *>>::_Assign(_Vector_impl<PRogramObjectBase *, allocator<PRogramObjectBase *>> const &)
   \                     ??_Assign:
   \   00000000   71402DE9           PUSH     {R0,R4-R6,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
   \   0000000C   050054E1           CMP      R4,R5
   \   00000010   2E00000A           BEQ      ??_Assign_1
   \   00000014   041095E5           LDR      R1,[R5, #+4]
   \   00000018   000095E5           LDR      R0,[R5, #+0]
   \   0000001C   002041E0           SUB      R2,R1,R0
   \   00000020   2231B0E1           LSRS     R3,R2,#+2
   \   00000024   0200001A           BNE      ??_Assign_2
   \   00000028   0400A0E1           MOV      R0,R4
   \   0000002C   ........           _BLF     ??_Tidy,??_Tidy??rA_1
   \   00000030   260000EA           B        ??_Assign_1
   \                     ??_Assign_2:
   \   00000034   002094E5           LDR      R2,[R4, #+0]
   \   00000038   046094E5           LDR      R6,[R4, #+4]
   \   0000003C   026046E0           SUB      R6,R6,R2
   \   00000040   260153E1           CMP      R3,R6, LSR #+2
   \   00000044   0700008A           BHI      ??_Assign_3
   \   00000048   ........           _BLF     _Copy_a4,??_Copy_a4??rA
   \   0000004C   040095E5           LDR      R0,[R5, #+4]
   \   00000050   001095E5           LDR      R1,[R5, #+0]
   \   00000054   010040E0           SUB      R0,R0,R1
   \   00000058   001094E5           LDR      R1,[R4, #+0]
   \   0000005C   2001A0E1           LSR      R0,R0,#+2
   \   00000060   000181E0           ADD      R0,R1,R0, LSL #+2
   \   00000064   180000EA           B        ??_Assign_4
   \                     ??_Assign_3:
   \   00000068   086094E5           LDR      R6,[R4, #+8]
   \   0000006C   026046E0           SUB      R6,R6,R2
   \   00000070   260153E1           CMP      R3,R6, LSR #+2
   \   00000074   1300009A           BLS      ??_Assign_5
   \                     ??_Assign_6:
   \   00000078   000052E3           CMP      R2,#+0
   \   0000007C   0100000A           BEQ      ??_Assign_7
   \   00000080   0200A0E1           MOV      R0,R2
   \   00000084   ........           _BLF     `??operator delete`,`??operator delete??rA`
   \                     ??_Assign_7:
   \   00000088   040095E5           LDR      R0,[R5, #+4]
   \   0000008C   001095E5           LDR      R1,[R5, #+0]
   \   00000090   016040E0           SUB      R6,R0,R1
   \   00000094   0400A0E1           MOV      R0,R4
   \   00000098   ........           _BLF     ??_Zero,??_Zero??rA
   \   0000009C   000056E3           CMP      R6,#+0
   \   000000A0   0A00000A           BEQ      ??_Assign_1
   \   000000A4   0600A0E1           MOV      R0,R6
   \   000000A8   ........           _BLF     `??operator new`,`??operator new??rA`
   \   000000AC   000084E5           STR      R0,[R4, #+0]
   \   000000B0   0020A0E1           MOV      R2,R0
   \   000000B4   042084E5           STR      R2,[R4, #+4]
   \   000000B8   020086E0           ADD      R0,R6,R2
   \   000000BC   080084E5           STR      R0,[R4, #+8]
   \   000000C0   041095E5           LDR      R1,[R5, #+4]
   \   000000C4   000095E5           LDR      R0,[R5, #+0]
   \                     ??_Assign_5:
   \   000000C8   ........           _BLF     _Copy_a4,??_Copy_a4??rA
   \                     ??_Assign_4:
   \   000000CC   040084E5           STR      R0,[R4, #+4]
   \                     ??_Assign_1:
   \   000000D0   7140BDE8           POP      {R0,R4-R6,LR}
   \   000000D4   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs bool vector<PRogramObjectBase *>::empty() const
   \                     ??empty:
   \   00000000   041090E5           LDR      R1,[R0, #+4]
   \   00000004   000090E5           LDR      R0,[R0, #+0]
   \   00000008   000041E0           SUB      R0,R1,R0
   \   0000000C   2001B0E1           LSRS     R0,R0,#+2
   \   00000010   0100A003           MOVEQ    R0,#+1
   \   00000014   1EFF2F01           BXEQ     LR
   \   00000018   0000A0E3           MOV      R0,#+0
   \   0000001C   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void operator+(string const &, string const &)
   \                     `??operator+`:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   1CD04DE2           SUB      SP,SP,#+28
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   0250A0E1           MOV      R5,R2
   \   00000010   0D00A0E1           MOV      R0,SP
   \   00000014   ........           _BLF     ??string,??string??rA
   \   00000018   34109FE5           LDR      R1,`??operator+_2`  ;; ??npos
   \   0000001C   0020A0E3           MOV      R2,#+0
   \   00000020   003091E5           LDR      R3,[R1, #+0]
   \   00000024   0510A0E1           MOV      R1,R5
   \   00000028   ........           _BLF     ??append,??append??rA
   \   0000002C   0010A0E1           MOV      R1,R0
   \   00000030   0400A0E1           MOV      R0,R4
   \   00000034   ........           _BLF     ??string,??string??rA
   \   00000038   0020A0E3           MOV      R2,#+0
   \   0000003C   0110A0E3           MOV      R1,#+1
   \   00000040   0D00A0E1           MOV      R0,SP
   \   00000044   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   00000048   1CD08DE2           ADD      SP,SP,#+28
   \   0000004C   3040BDE8           POP      {R4,R5,LR}
   \   00000050   1EFF2FE1           BX       LR               ;; return
   \                     `??operator+_2`:
   \   00000054   ........           DC32     ??npos

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void operator+(string const &, char const *)
   \                     `??operator+_1`:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   1CD04DE2           SUB      SP,SP,#+28
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   0250A0E1           MOV      R5,R2
   \   00000010   0D00A0E1           MOV      R0,SP
   \   00000014   ........           _BLF     ??string,??string??rA
   \   00000018   0060A0E1           MOV      R6,R0
   \   0000001C   0500A0E1           MOV      R0,R5
   \   00000020   ........           _BLF     strlen,??strlen??rA
   \   00000024   0020A0E1           MOV      R2,R0
   \   00000028   0510A0E1           MOV      R1,R5
   \   0000002C   0600A0E1           MOV      R0,R6
   \   00000030   ........           _BLF     ??append_1,??append??rA_1
   \   00000034   0010A0E1           MOV      R1,R0
   \   00000038   0400A0E1           MOV      R0,R4
   \   0000003C   ........           _BLF     ??string,??string??rA
   \   00000040   0020A0E3           MOV      R2,#+0
   \   00000044   0110A0E3           MOV      R1,#+1
   \   00000048   0D00A0E1           MOV      R0,SP
   \   0000004C   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   00000050   1CD08DE2           ADD      SP,SP,#+28
   \   00000054   7040BDE8           POP      {R4-R6,LR}
   \   00000058   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs PROSystemData::~PROSystemData()
   \                     `?~PROSystemData`:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
   \   0000000C   000054E3           CMP      R4,#+0
   \   00000010   0A00000A           BEQ      `?~PROSystemData_1`
   \   00000014   0020A0E3           MOV      R2,#+0
   \   00000018   0110A0E3           MOV      R1,#+1
   \   0000001C   620F84E2           ADD      R0,R4,#+392
   \   00000020   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   00000024   0010A0E3           MOV      R1,#+0
   \   00000028   0400A0E1           MOV      R0,R4
   \   0000002C   ........           _BLF     `?~PRogramObject`,`?~PRogramObject??rA`
   \   00000030   010015E3           TST      R5,#0x1
   \   00000034   0100000A           BEQ      `?~PROSystemData_1`
   \   00000038   0400A0E1           MOV      R0,R4
   \   0000003C   ........           _BLF     `??operator delete`,`??operator delete??rA`
   \                     `?~PROSystemData_1`:
   \   00000040   3040BDE8           POP      {R4,R5,LR}
   \   00000044   1EFF2FE1           BX       LR               ;; return
      2          #pragma hdrstop
      3          #ifdef BORLAND
      4              #pragma package(smart_init)
      5          	#include "MainUnit.h"
      6          #endif
      7          
      8          #ifdef S2TXU
      9              #include "GUITouchConf.h"
     10          extern int TouchScreenTimeOut;
     11          extern OS_TIMER AlarmSilenceTimer;
     12          #else
     13          int                                               TouchScreenTimeOut             = 30000;
     14          #endif
     15          
     16          

   \                                 In segment DATA_I, align 4, align-sorted
     17          ValueList PROSystemData                           ::ServiceReportSystemValueList[] =  {
   \                     ??ServiceReportSystemValueList:
   \   00000000                      DS8 84
   \   00000054                      REQUIRE `?<Initializer for ServiceReportSystemValueList`
     18              { L_WORD304 , L_WORD237, SVT_BLANK },                                         //  {"Unused"           ,"",SVT_BLANK},
     19              { L_WORD404 , L_WORD237, SVT_ATM_PRESSURE },                                  //  {"AtmPress"         ,"",SVT_ATM_PRESSURE},
     20              { L_WORD460 , L_WORD237, SVT_TRIM_M },                                        //  {"Trim"             ,"",SVT_TRIM_M},
     21              { L_WORD461 , L_WORD237, SVT_LIST_ANGLE },                                    //  {"List"             ,"",SVT_LIST_ANGLE},
     22              { L_WORD448 , L_WORD237, SVT_LATITUDE },                                      //  {"Latitude"         ,"",SVT_LATITUDE},
     23              { L_WORD1097, L_WORD237, SVT_SEAWATER_TEMP   },                               //  {"Seawater temp"    ,"",SVT_SEAWATER_TEMP   },
     24              { L_WORD1098, L_WORD237, SVT_AMBIENT_TEMP},                               //  {"Environment temp" ,"",SVT_AMBIENT_TEMP},
     25          };
     26          
     27          

   \                                 In segment DATA_I, align 4, align-sorted
     28          PROSystemData *PROSystemData::TXUSystemData                = NULL;
   \                     ??TXUSystemData:
   \   00000000                      DS8 4
   \   00000004                      REQUIRE `?<Initializer for TXUSystemData>`
     29          volatile bool  PROSystemData::HasConfigWritePermission     = false;
     30          
     31          float PROSystemData::Latitude                     = 51.0;
   \                     ??Latitude:
   \   00000004                      DS8 4
   \   00000008                      REQUIRE `?<Initializer for Latitude>`
     32          
     33          int   PROSystemData::CurrentUnitSystem            = UNIT_SYS_SI;
   \                     ??CurrentUnitSystem:
   \   00000008                      DS8 4
   \   0000000C                      REQUIRE `?<Initializer for CurrentUnitSystem>`
     34          int   PROSystemData::CurrentLanguage              = L_ENGLISH;
   \                     ??CurrentLanguage:
   \   0000000C                      DS8 4
   \   00000010                      REQUIRE `?<Initializer for CurrentLanguage>`
     35          
     36          int   PROSystemData::AlarmOffDelay                = DEFAULT_ALARM_OFF_DELAY;
   \                     ??AlarmOffDelay:
   \   00000010                      DS8 4
   \   00000014                      REQUIRE `?<Initializer for AlarmOffDelay>`
     37          int   PROSystemData::AlarmOnDelay                 = DEFAULT_ALARM_ON_DELAY;
     38          int   PROSystemData::TrimSource                   = C_SD_INC_SOURCE;
   \                     ??TrimSource:
   \   00000014                      DS8 4
   \   00000018                      REQUIRE `?<Initializer for TrimSource>`
     39          int   PROSystemData::ListSource                   = C_SD_INC_SOURCE;
   \                     ??ListSource:
   \   00000018                      DS8 4
   \   0000001C                      REQUIRE `?<Initializer for ListSource>`
     40          float PROSystemData::ManualTrim                   = 0.0;
   \                     ??ManualTrim:
   \   0000001C                      DS8 4
   \   00000020                      REQUIRE `?<Initializer for ManualTrim>`
     41          float PROSystemData::ManualList                   = 0.0;
   \                     ??ManualList:
   \   00000020                      DS8 4
   \   00000024                      REQUIRE `?<Initializer for ManualList>`
     42          float PROSystemData::TrimValue                    = 0.0;
   \                     ??TrimValue:
   \   00000024                      DS8 4
   \   00000028                      REQUIRE `?<Initializer for TrimValue>`
     43          float PROSystemData::ListValue                    = 0.0;
   \                     ??ListValue:
   \   00000028                      DS8 4
   \   0000002C                      REQUIRE `?<Initializer for ListValue>`
     44          
     45          float PROSystemData::BallastDensity               = DNS_SEA_WATER;
   \                     ??BallastDensity:
   \   0000002C                      DS8 4
   \   00000030                      REQUIRE `?<Initializer for BallastDensity>`
     46          float PROSystemData::SeaWaterDensity              = DNS_SEA_WATER;
   \                     ??SeaWaterDensity:
   \   00000030                      DS8 4
   \   00000034                      REQUIRE `?<Initializer for SeaWaterDensity>`
     47          float PROSystemData::FreshWaterDensity            = DNS_FRESH_WATER;
   \                     ??FreshWaterDensity:
   \   00000034                      DS8 4
   \   00000038                      REQUIRE `?<Initializer for FreshWaterDensity>`
     48          float PROSystemData::HeavyFuelDensity             = DNS_HEAVY_FUEL_OIL;
   \                     ??HeavyFuelDensity:
   \   00000038                      DS8 4
   \   0000003C                      REQUIRE `?<Initializer for HeavyFuelDensity>`
     49          float PROSystemData::DieselDensity                = DNS_DIESEL_OIL;
   \                     ??DieselDensity:
   \   0000003C                      DS8 4
   \   00000040                      REQUIRE `?<Initializer for DieselDensity>`
     50          float PROSystemData::LubricantsDensity            = DNS_LUBRICANTS;
   \                     ??LubricantsDensity:
   \   00000040                      DS8 4
   \   00000044                      REQUIRE `?<Initializer for LubricantsDensity>`
     51          float PROSystemData::SeaWaterTemp                 = DEFAULT_SEA_TEMP;
   \                     ??SeaWaterTemp:
   \   00000044                      DS8 4
   \   00000048                      REQUIRE `?<Initializer for SeaWaterTemp>`
     52          float PROSystemData::AmbientTemp                  = DEFAULT_SEA_TEMP;
   \                     ??AmbientTemp:
   \   00000048                      DS8 4
   \   0000004C                      REQUIRE `?<Initializer for AmbientTemp>`
     53          
     54          int   PROSystemData::TimeFromGMT                  = 0;
   \                     ??TimeFromGMT:
   \   0000004C                      DS8 4
   \   00000050                      REQUIRE `?<Initializer for TimeFromGMT>`
     55          int   PROSystemData::DaylightSaving               = 0;
   \                     ??DaylightSaving:
   \   00000050                      DS8 4
   \   00000054                      REQUIRE `?<Initializer for DaylightSaving>`
     56          
     57          int   PROSystemData::LogTime                      = 0;
   \                     ??LogTime:
   \   00000054                      DS8 4
   \   00000058                      REQUIRE `?<Initializer for LogTime>`
   \                     ??HasConfigWritePermission:
   \   00000058                      DS8 1
   \   00000059                      REQUIRE `?<Initializer for HasConfigWritePermission>`
     58          bool  PROSystemData::LogToFile                    = false;
   \                     ??LogToFile:
   \   00000059                      DS8 1
   \   0000005A                      REQUIRE `?<Initializer for LogToFile>`
     59          bool  PROSystemData::LogAlarms                    = false;
   \                     ??LogAlarms:
   \   0000005A                      DS8 1
   \   0000005B                      REQUIRE `?<Initializer for LogAlarms>`
     60          bool  PROSystemData::LogBallastExchange           = false;
   \                     ??LogBallastExchange:
   \   0000005B                      DS8 1
   \   0000005C                      REQUIRE `?<Initializer for LogBallastExchange>`
     61          bool  PROSystemData::LogCargo                     = false;
   \                     ??LogCargo:
   \   0000005C                      DS8 1
   \   0000005D                      REQUIRE `?<Initializer for LogCargo>`
     62          bool  PROSystemData::LogService                   = false;
   \                     ??LogService:
   \   0000005D                      DS8 1
   \   0000005E                      REQUIRE `?<Initializer for LogService>`
     63          bool  PROSystemData::LogTemperature               = false;
   \                     ??LogTemperature:
   \   0000005E                      DS8 1
   \   0000005F                      REQUIRE `?<Initializer for LogTemperature>`
     64          bool  PROSystemData::LogTankPressure              = false;
   \                     ??LogTankPressure:
   \   0000005F                      DS8 1
   \   00000060                      REQUIRE `?<Initializer for LogTankPressure>`
     65          bool  PROSystemData::PrinterOnThisTXU             = false;
   \                     ??PrinterOnThisTXU:
   \   00000060                      DS8 1
   \   00000061                      REQUIRE `?<Initializer for PrinterOnThisTXU>`
     66          bool  PROSystemData::ReceiveWeightVolume          = false;
   \                     ??ReceiveWeightVolume:
   \   00000061                      DS8 1
   \   00000062                      REQUIRE `?<Initializer for ReceiveWeightVolume>`

   \                                 In segment DATA_I, align 4, align-sorted
   \                     ??AlarmOnDelay:
   \   00000000                      DS8 4
   \   00000004                      REQUIRE `?<Initializer for AlarmOnDelay>`
     67          
     68          

   \                                 In segment CODE, align 4, keep-with-next
     69          PROSystemData::PROSystemData(void) {
   \                     ??PROSystemData:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   34619FE5           LDR      R6,??PROSystemData_1  ;; ??__vtbl
   \   00000008   38D04DE2           SUB      SP,SP,#+56
   \   0000000C   0040A0E1           MOV      R4,R0
   \   00000010   0110A0E3           MOV      R1,#+1
   \   00000014   ........           _BLF     ??PRogramObject,??PRogramObject??rA
   \   00000018   A46084E5           STR      R6,[R4, #+164]
   \   0000001C   625FA0E3           MOV      R5,#+392
   \   00000020   040085E0           ADD      R0,R5,R4
   \   00000024   ........           _BLF     ??AnsiString,??AnsiString??rA
     70              Name = "SystemData";
   \   00000028   7C1086E2           ADD      R1,R6,#+124
   \   0000002C   0D00A0E1           MOV      R0,SP
   \   00000030   ........           _BLF     ??AnsiString_1,??AnsiString??rA_1
   \   00000034   ........           LDR      R1,??DataTable0  ;; ??npos
   \   00000038   0020A0E3           MOV      R2,#+0
   \   0000003C   006091E5           LDR      R6,[R1, #+0]
   \   00000040   0010A0E1           MOV      R1,R0
   \   00000044   0630A0E1           MOV      R3,R6
   \   00000048   440084E2           ADD      R0,R4,#+68
   \   0000004C   ........           _BLF     ??assign,??assign??rA
   \   00000050   0020A0E3           MOV      R2,#+0
   \   00000054   0110A0E3           MOV      R1,#+1
   \   00000058   0D00A0E1           MOV      R0,SP
   \   0000005C   ........           _BLF     ??_Tidy_1,??_Tidy??rA
     71              PROSystemData::TXUSystemData = this;
   \   00000060   ........           LDR      R0,??DataTable1  ;; ??TXUSystemData
   \   00000064   004080E5           STR      R4,[R0, #+0]
     72              switch (CurrentDeviceId) {
   \   00000068   D4009FE5           LDR      R0,??PROSystemData_1+0x4  ;; CurrentDeviceId
   \   0000006C   F000D0E1           LDRSH    R0,[R0, #+0]
   \   00000070   000050E3           CMP      R0,#+0
   \   00000074   0200000A           BEQ      ??PROSystemData_2
   \   00000078   010050E2           SUBS     R0,R0,#+1
   \   0000007C   0200000A           BEQ      ??PROSystemData_3
   \   00000080   030000EA           B        ??PROSystemData_4
     73              case 0: //TCU
     74                  MyTypeId = 0x20;
   \                     ??PROSystemData_2:
   \   00000084   2000A0E3           MOV      R0,#+32
     75                  MyAddress = 0; // Should be set later
   \   00000088   020000EA           B        ??PROSystemData_5
     76                  break;
     77              case 1: //TDU
     78                  MyTypeId = 0x30;
   \                     ??PROSystemData_3:
   \   0000008C   3000A0E3           MOV      R0,#+48
     79                  MyAddress = 0;
   \   00000090   000000EA           B        ??PROSystemData_5
     80                  break;
     81              default:
     82                  MyTypeId = 0x40;
   \                     ??PROSystemData_4:
   \   00000094   4000A0E3           MOV      R0,#+64
     83                  MyAddress = 0;   // At the moment 0
   \                     ??PROSystemData_5:
   \   00000098   0010A0E3           MOV      R1,#+0
   \   0000009C   8111C4E5           STRB     R1,[R4, #+385]
   \   000000A0   8001C4E5           STRB     R0,[R4, #+384]
     84                  break;
     85              }
     86              IDNumber          = (C_PRO_SYSDATA << 16) + 0;
   \   000000A4   C007A0E3           MOV      R0,#+50331648
   \   000000A8   F70880E3           ORR      R0,R0,#0xF70000
   \   000000AC   9C0084E5           STR      R0,[R4, #+156]
     87              Type              = C_PRO_SYSDATA;
   \   000000B0   2008A0E1           MOV      R0,R0, LSR #+16
   \   000000B4   A00084E5           STR      R0,[R4, #+160]
     88              LastTimeModified  = time(NULL);
   \   000000B8   0000A0E3           MOV      R0,#+0
   \   000000BC   ........           _BLF     time,??time??rA
   \   000000C0   840184E5           STR      R0,[R4, #+388]
     89              UserPinCode       = AnsiString(DEFAULT_PIN_CODE);
   \   000000C4   5710A0E3           MOV      R1,#+87
   \   000000C8   401E81E3           ORR      R1,R1,#0x400
   \   000000CC   1C008DE2           ADD      R0,SP,#+28
   \   000000D0   ........           _BLF     ??AnsiString_2,??AnsiString??rA_2
   \   000000D4   0010A0E1           MOV      R1,R0
   \   000000D8   0630A0E1           MOV      R3,R6
   \   000000DC   0020A0E3           MOV      R2,#+0
   \   000000E0   040085E0           ADD      R0,R5,R4
   \   000000E4   ........           _BLF     ??assign,??assign??rA
   \   000000E8   0020A0E3           MOV      R2,#+0
   \   000000EC   0110A0E3           MOV      R1,#+1
   \   000000F0   1C008DE2           ADD      R0,SP,#+28
   \   000000F4   ........           _BLF     ??_Tidy_1,??_Tidy??rA
     90              CargoVolume       = 0.0;
   \   000000F8   0000A0E3           MOV      R0,#+0
   \   000000FC   480184E5           STR      R0,[R4, #+328]
     91              CargoWeight       = 0.0;
   \   00000100   640184E5           STR      R0,[R4, #+356]
     92              BallastVolume     = 0.0;
   \   00000104   4C0184E5           STR      R0,[R4, #+332]
     93              BallastWeight     = 0.0;
   \   00000108   680184E5           STR      R0,[R4, #+360]
     94              HeavyFuelVolume   = 0.0;
   \   0000010C   500184E5           STR      R0,[R4, #+336]
     95              HeavyFuelWeight   = 0.0;
   \   00000110   6C0184E5           STR      R0,[R4, #+364]
     96              DieselOilVolume   = 0.0;
   \   00000114   540184E5           STR      R0,[R4, #+340]
     97              DieselOilWeight   = 0.0;
   \   00000118   700184E5           STR      R0,[R4, #+368]
     98              LubricantsVolume  = 0.0;
   \   0000011C   580184E5           STR      R0,[R4, #+344]
     99              LubricantsWeight  = 0.0;
   \   00000120   740184E5           STR      R0,[R4, #+372]
    100              FreshWaterVolume  = 0.0;
   \   00000124   5C0184E5           STR      R0,[R4, #+348]
    101              FreshWaterWeight  = 0.0;
   \   00000128   780184E5           STR      R0,[R4, #+376]
    102              MiscVolume        = 0.0;
   \   0000012C   600184E5           STR      R0,[R4, #+352]
    103              MiscWeight        = 0.0;
   \   00000130   7C0184E5           STR      R0,[R4, #+380]
    104          }
   \   00000134   0400A0E1           MOV      R0,R4
   \   00000138   38D08DE2           ADD      SP,SP,#+56
   \   0000013C   ........           B        ?Subroutine27
   \                     ??PROSystemData_1:
   \   00000140   ........           DC32     ??__vtbl
   \   00000144   ........           DC32     CurrentDeviceId

   \                                 In segment CODE, align 4, keep-with-next
   \                     ?Subroutine27:
   \   00000000   7040BDE8           POP      {R4-R6,LR}
   \   00000004   1EFF2FE1           BX       LR               ;; return
    105          
    106          ///////////////////////////////////////////////////////////////
    107          //
    108          // Routines for Saving of Settings
    109          //
    110          ///////////////////////////////////////////////////////////////
    111          

   \                                 In segment CODE, align 4, keep-with-next
    112          void PROSystemData::SaveSettings(TSNConfigString *SettingsString) {
   \                     ??SaveSettings:
   \   00000000   F34F2DE9           PUSH     {R0,R1,R4-R11,LR}
   \   00000004   BFDF4DE2           SUB      SP,SP,#+764
   \   00000008   C0DE4DE2           SUB      SP,SP,#+3072
    113              if (IsModified || WriteAll) {
   \   0000000C   0000D0E5           LDRB     R0,[R0, #+0]
   \   00000010   000050E3           CMP      R0,#+0
   \   00000014   800F9F05           LDREQ    R0,??SaveSettings_1  ;; ??WriteAll
   \   00000018   0000D005           LDRBEQ   R0,[R0, #+0]
   \   0000001C   00005003           CMPEQ    R0,#+0
   \   00000020   8905000A           BEQ      ??SaveSettings_2
    114                  IsModified = false;
   \   00000024   FC0E9DE5           LDR      R0,[SP, #+3836]
    115                  AnsiString LocalString;
    116                  LocalString += KeyWord(C_PRO_SYSDATA) + CrLfStr;
   \   00000028   704F9FE5           LDR      R4,??SaveSettings_1+0x4  ;; CrLfStr
    117                  LocalString += TabStr1 + KeyWord(C_MOD_SYSTEM) + TabStr2 + (AnsiString)((int)time(NULL)) + CrLfStr;
   \   0000002C   706F9FE5           LDR      R6,??SaveSettings_1+0x8  ;; TabStr1
   \   00000030   708F9FE5           LDR      R8,??SaveSettings_1+0xC  ;; TabStr2
   \   00000034   0010A0E3           MOV      R1,#+0
   \   00000038   0010C0E5           STRB     R1,[R0, #+0]
   \   0000003C   0D00A0E1           MOV      R0,SP
   \   00000040   ........           _BLF     ??AnsiString,??AnsiString??rA
   \   00000044   F710A0E3           MOV      R1,#+247
   \   00000048   C01F81E3           ORR      R1,R1,#0x300
   \   0000004C   4D0E8DE2           ADD      R0,SP,#+1232
   \   00000050   ........           _BLF     ??KeyWord,??KeyWord??rA
   \   00000054   0420A0E1           MOV      R2,R4
   \   00000058   4D1E8DE2           ADD      R1,SP,#+1232
   \   0000005C   B4008DE2           ADD      R0,SP,#+180
   \   00000060   400E80E2           ADD      R0,R0,#+1024
   \   00000064   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000068   3C0F9FE5           LDR      R0,??SaveSettings_1+0x10  ;; ??npos
   \   0000006C   0020A0E3           MOV      R2,#+0
   \   00000070   005090E5           LDR      R5,[R0, #+0]
   \   00000074   B4108DE2           ADD      R1,SP,#+180
   \   00000078   0530A0E1           MOV      R3,R5
   \   0000007C   401E81E2           ADD      R1,R1,#+1024
   \   00000080   0D00A0E1           MOV      R0,SP
   \   00000084   ........           _BLF     ??append,??append??rA
   \   00000088   0020A0E3           MOV      R2,#+0
   \   0000008C   0110A0E3           MOV      R1,#+1
   \   00000090   B4008DE2           ADD      R0,SP,#+180
   \   00000094   400E80E2           ADD      R0,R0,#+1024
   \   00000098   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   0000009C   0020A0E3           MOV      R2,#+0
   \   000000A0   0110A0E3           MOV      R1,#+1
   \   000000A4   4D0E8DE2           ADD      R0,SP,#+1232
   \   000000A8   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   000000AC   0000A0E3           MOV      R0,#+0
   \   000000B0   ........           _BLF     time,??time??rA
   \   000000B4   0010A0E1           MOV      R1,R0
   \   000000B8   E00E8DE2           ADD      R0,SP,#+3584
   \   000000BC   ........           _BLF     ??AnsiString_2,??AnsiString??rA_2
   \   000000C0   0070A0E1           MOV      R7,R0
   \   000000C4   CC10A0E3           MOV      R1,#+204
   \   000000C8   801E81E3           ORR      R1,R1,#0x800
   \   000000CC   570F8DE2           ADD      R0,SP,#+348
   \   000000D0   400E80E2           ADD      R0,R0,#+1024
   \   000000D4   ........           _BLF     ??KeyWord,??KeyWord??rA
   \   000000D8   572F8DE2           ADD      R2,SP,#+348
   \   000000DC   402E82E2           ADD      R2,R2,#+1024
   \   000000E0   0610A0E1           MOV      R1,R6
   \   000000E4   540E8DE2           ADD      R0,SP,#+1344
   \   000000E8   ........           _BLF     `??operator+`,`??operator+??rA`
   \   000000EC   0820A0E1           MOV      R2,R8
   \   000000F0   541E8DE2           ADD      R1,SP,#+1344
   \   000000F4   490F8DE2           ADD      R0,SP,#+292
   \   000000F8   400E80E2           ADD      R0,R0,#+1024
   \   000000FC   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000100   0720A0E1           MOV      R2,R7
   \   00000104   491F8DE2           ADD      R1,SP,#+292
   \   00000108   401E81E2           ADD      R1,R1,#+1024
   \   0000010C   9C7E9FE5           LDR      R7,??SaveSettings_1+0x14  ;; ??TXUSystemData
   \   00000110   420F8DE2           ADD      R0,SP,#+264
   \   00000114   400E80E2           ADD      R0,R0,#+1024
   \   00000118   ........           _BLF     `??operator+`,`??operator+??rA`
   \   0000011C   0420A0E1           MOV      R2,R4
   \   00000120   421F8DE2           ADD      R1,SP,#+264
   \   00000124   401E81E2           ADD      R1,R1,#+1024
   \   00000128   EC008DE2           ADD      R0,SP,#+236
   \   0000012C   400E80E2           ADD      R0,R0,#+1024
   \   00000130   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000134   0530A0E1           MOV      R3,R5
   \   00000138   0020A0E3           MOV      R2,#+0
   \   0000013C   EC108DE2           ADD      R1,SP,#+236
   \   00000140   401E81E2           ADD      R1,R1,#+1024
   \   00000144   0D00A0E1           MOV      R0,SP
   \   00000148   ........           _BLF     ??append,??append??rA
   \   0000014C   0020A0E3           MOV      R2,#+0
   \   00000150   0110A0E3           MOV      R1,#+1
   \   00000154   EC008DE2           ADD      R0,SP,#+236
   \   00000158   400E80E2           ADD      R0,R0,#+1024
   \   0000015C   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   00000160   0020A0E3           MOV      R2,#+0
   \   00000164   0110A0E3           MOV      R1,#+1
   \   00000168   420F8DE2           ADD      R0,SP,#+264
   \   0000016C   400E80E2           ADD      R0,R0,#+1024
   \   00000170   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   00000174   0020A0E3           MOV      R2,#+0
   \   00000178   0110A0E3           MOV      R1,#+1
   \   0000017C   E00E8DE2           ADD      R0,SP,#+3584
   \   00000180   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   00000184   0020A0E3           MOV      R2,#+0
   \   00000188   0110A0E3           MOV      R1,#+1
   \   0000018C   490F8DE2           ADD      R0,SP,#+292
   \   00000190   400E80E2           ADD      R0,R0,#+1024
   \   00000194   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   00000198   0020A0E3           MOV      R2,#+0
   \   0000019C   0110A0E3           MOV      R1,#+1
   \   000001A0   540E8DE2           ADD      R0,SP,#+1344
   \   000001A4   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   000001A8   0020A0E3           MOV      R2,#+0
   \   000001AC   0110A0E3           MOV      R1,#+1
   \   000001B0   570F8DE2           ADD      R0,SP,#+348
   \   000001B4   400E80E2           ADD      R0,R0,#+1024
   \   000001B8   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   000001BC   F00D9FE5           LDR      R0,??SaveSettings_1+0x18  ;; ??ObjectSet + 16
   \   000001C0   E190A0E3           MOV      R9,#+225
   \   000001C4   000090E5           LDR      R0,[R0, #+0]
   \   000001C8   809D89E3           ORR      R9,R9,#0x2000
   \   000001CC   000050E3           CMP      R0,#+0
   \   000001D0   E00D9F05           LDREQ    R0,??SaveSettings_1+0x1C  ;; ??ObjectSet_1 + 16
   \   000001D4   03A089E2           ADD      R10,R9,#+3
   \   000001D8   00009005           LDREQ    R0,[R0, #+0]
   \   000001DC   01B0C9E3           BIC      R11,R9,#0x1
   \   000001E0   00005003           CMPEQ    R0,#+0
   \   000001E4   D00D9F05           LDREQ    R0,??SaveSettings_1+0x20  ;; ??ObjectSet_2 + 16
   \   000001E8   00009005           LDREQ    R0,[R0, #+0]
   \   000001EC   00005003           CMPEQ    R0,#+0
   \   000001F0   1805001A           BNE      ??SaveSettings_3
    118                  if (!PROCargoTank::ObjectSet.empty() || !PROBallastTank::ObjectSet.empty() || !PROServiceTank::ObjectSet.empty()) {
    119                      LocalString += TabStr1 + KeyWord(C_SD_TRIM_SOURCE)      + TabStr2 + KeyWord(TrimSource) + CrLfStr;
    120                      LocalString += TabStr1 + KeyWord(C_SD_MANUAL_TRIM)      + TabStr2 + FloatToAnsiString(ManualTrim) + CrLfStr;
    121                      LocalString += TabStr1 + KeyWord(C_SD_LIST_SOURCE)      + TabStr2 + KeyWord(ListSource) + CrLfStr;
    122                      LocalString += TabStr1 + KeyWord(C_SD_MANUAL_LIST)      + TabStr2 + FloatToAnsiString(ManualList) + CrLfStr;
    123                      LocalString += TabStr1 + KeyWord(C_SD_BALLAST_DNS)      + TabStr2 + FloatToAnsiString(BallastDensity) + CrLfStr;
    124                      LocalString += TabStr1 + KeyWord(C_SD_FRESHWATER_DNS)   + TabStr1 + FloatToAnsiString(FreshWaterDensity) + CrLfStr;
    125                      LocalString += TabStr1 + KeyWord(C_SD_HEAVY_FUEL_DNS)   + TabStr1 + FloatToAnsiString(HeavyFuelDensity) + CrLfStr;
    126                      LocalString += TabStr1 + KeyWord(C_SD_DIESEL_DNS)       + TabStr2 + FloatToAnsiString(DieselDensity) + CrLfStr;
    127                      LocalString += TabStr1 + KeyWord(C_SD_LUBRICANTS_DNS)   + TabStr1 + FloatToAnsiString(LubricantsDensity) + CrLfStr;
    128                      if (PRODraftSystem::PRODraftSysPtr) {
    129                          LocalString += TabStr1 + KeyWord(C_SD_SEAWATER_TEMP) + TabStr2 + FloatToAnsiString(SeaWaterTemp) + CrLfStr;
    130                          LocalString += TabStr1 + KeyWord(C_SD_SEAWATER_DNS) + TabStr2 + FloatToAnsiString(SeaWaterDensity) + CrLfStr;
    131                          LocalString += TabStr1 + KeyWord(C_SD_AMBIENT_TEMP) + TabStr2 + FloatToAnsiString(AmbientTemp) + CrLfStr;
    132                      }
    133                  } else if (PRODraftSystem::PRODraftSysPtr) {
   \   000001F4   C40D9FE5           LDR      R0,??SaveSettings_1+0x24  ;; ??PRODraftSysPtr
   \   000001F8   000090E5           LDR      R0,[R0, #+0]
   \   000001FC   000050E3           CMP      R0,#+0
   \   00000200   7D01000A           BEQ      ??SaveSettings_4
    134                      LocalString += TabStr1 + KeyWord(C_SD_TRIM_SOURCE)      + TabStr2 + KeyWord(TrimSource) + CrLfStr;
   \   00000204   141097E5           LDR      R1,[R7, #+20]
   \   00000208   0C008DE2           ADD      R0,SP,#+12
   \   0000020C   400E80E2           ADD      R0,R0,#+1024
   \   00000210   ........           _BLF     ??KeyWord,??KeyWord??rA
   \   00000214   0B10A0E1           MOV      R1,R11
   \   00000218   28008DE2           ADD      R0,SP,#+40
   \   0000021C   400E80E2           ADD      R0,R0,#+1024
   \   00000220   ........           _BLF     ??KeyWord,??KeyWord??rA
   \   00000224   28208DE2           ADD      R2,SP,#+40
   \   00000228   402E82E2           ADD      R2,R2,#+1024
   \   0000022C   0610A0E1           MOV      R1,R6
   \   00000230   44008DE2           ADD      R0,SP,#+68
   \   00000234   400E80E2           ADD      R0,R0,#+1024
   \   00000238   ........           _BLF     `??operator+`,`??operator+??rA`
   \   0000023C   0820A0E1           MOV      R2,R8
   \   00000240   44108DE2           ADD      R1,SP,#+68
   \   00000244   401E81E2           ADD      R1,R1,#+1024
   \   00000248   460E8DE2           ADD      R0,SP,#+1120
   \   0000024C   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000250   0C208DE2           ADD      R2,SP,#+12
   \   00000254   402E82E2           ADD      R2,R2,#+1024
   \   00000258   461E8DE2           ADD      R1,SP,#+1120
   \   0000025C   7C008DE2           ADD      R0,SP,#+124
   \   00000260   400E80E2           ADD      R0,R0,#+1024
   \   00000264   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000268   0420A0E1           MOV      R2,R4
   \   0000026C   7C108DE2           ADD      R1,SP,#+124
   \   00000270   401E81E2           ADD      R1,R1,#+1024
   \   00000274   98008DE2           ADD      R0,SP,#+152
   \   00000278   400E80E2           ADD      R0,R0,#+1024
   \   0000027C   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000280   0530A0E1           MOV      R3,R5
   \   00000284   0020A0E3           MOV      R2,#+0
   \   00000288   98108DE2           ADD      R1,SP,#+152
   \   0000028C   401E81E2           ADD      R1,R1,#+1024
   \   00000290   0D00A0E1           MOV      R0,SP
   \   00000294   ........           _BLF     ??append,??append??rA
   \   00000298   0020A0E3           MOV      R2,#+0
   \   0000029C   0110A0E3           MOV      R1,#+1
   \   000002A0   98008DE2           ADD      R0,SP,#+152
   \   000002A4   400E80E2           ADD      R0,R0,#+1024
   \   000002A8   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   000002AC   0020A0E3           MOV      R2,#+0
   \   000002B0   0110A0E3           MOV      R1,#+1
   \   000002B4   7C008DE2           ADD      R0,SP,#+124
   \   000002B8   400E80E2           ADD      R0,R0,#+1024
   \   000002BC   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   000002C0   0020A0E3           MOV      R2,#+0
   \   000002C4   0110A0E3           MOV      R1,#+1
   \   000002C8   0C008DE2           ADD      R0,SP,#+12
   \   000002CC   400E80E2           ADD      R0,R0,#+1024
   \   000002D0   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   000002D4   0020A0E3           MOV      R2,#+0
   \   000002D8   0110A0E3           MOV      R1,#+1
   \   000002DC   460E8DE2           ADD      R0,SP,#+1120
   \   000002E0   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   000002E4   0020A0E3           MOV      R2,#+0
   \   000002E8   0110A0E3           MOV      R1,#+1
   \   000002EC   44008DE2           ADD      R0,SP,#+68
   \   000002F0   400E80E2           ADD      R0,R0,#+1024
   \   000002F4   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   000002F8   0020A0E3           MOV      R2,#+0
   \   000002FC   0110A0E3           MOV      R1,#+1
   \   00000300   28008DE2           ADD      R0,SP,#+40
   \   00000304   400E80E2           ADD      R0,R0,#+1024
   \   00000308   ........           _BLF     ??_Tidy_1,??_Tidy??rA
    135                      LocalString += TabStr1 + KeyWord(C_SD_MANUAL_TRIM)      + TabStr2 + FloatToAnsiString(ManualTrim) + CrLfStr;
   \   0000030C   1C1097E5           LDR      R1,[R7, #+28]
   \   00000310   0330A0E3           MOV      R3,#+3
   \   00000314   0720A0E3           MOV      R2,#+7
   \   00000318   D90F8DE2           ADD      R0,SP,#+868
   \   0000031C   ........           _BLF     ??FloatToAnsiString,??FloatToAnsiString??rA
   \   00000320   0A10A0E1           MOV      R1,R10
   \   00000324   E00F8DE2           ADD      R0,SP,#+896
   \   00000328   ........           _BLF     ??KeyWord,??KeyWord??rA
   \   0000032C   E02F8DE2           ADD      R2,SP,#+896
   \   00000330   0610A0E1           MOV      R1,R6
   \   00000334   E70F8DE2           ADD      R0,SP,#+924
   \   00000338   ........           _BLF     `??operator+`,`??operator+??rA`
   \   0000033C   0820A0E1           MOV      R2,R8
   \   00000340   E71F8DE2           ADD      R1,SP,#+924
   \   00000344   EE0F8DE2           ADD      R0,SP,#+952
   \   00000348   ........           _BLF     `??operator+`,`??operator+??rA`
   \   0000034C   D92F8DE2           ADD      R2,SP,#+868
   \   00000350   EE1F8DE2           ADD      R1,SP,#+952
   \   00000354   F50F8DE2           ADD      R0,SP,#+980
   \   00000358   ........           _BLF     `??operator+`,`??operator+??rA`
   \   0000035C   0420A0E1           MOV      R2,R4
   \   00000360   F51F8DE2           ADD      R1,SP,#+980
   \   00000364   FC0F8DE2           ADD      R0,SP,#+1008
   \   00000368   ........           _BLF     `??operator+`,`??operator+??rA`
   \   0000036C   0530A0E1           MOV      R3,R5
   \   00000370   0020A0E3           MOV      R2,#+0
   \   00000374   FC1F8DE2           ADD      R1,SP,#+1008
   \   00000378   0D00A0E1           MOV      R0,SP
   \   0000037C   ........           _BLF     ??append,??append??rA
   \   00000380   0020A0E3           MOV      R2,#+0
   \   00000384   0110A0E3           MOV      R1,#+1
   \   00000388   FC0F8DE2           ADD      R0,SP,#+1008
   \   0000038C   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   00000390   0020A0E3           MOV      R2,#+0
   \   00000394   0110A0E3           MOV      R1,#+1
   \   00000398   F50F8DE2           ADD      R0,SP,#+980
   \   0000039C   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   000003A0   0020A0E3           MOV      R2,#+0
   \   000003A4   0110A0E3           MOV      R1,#+1
   \   000003A8   D90F8DE2           ADD      R0,SP,#+868
   \   000003AC   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   000003B0   0020A0E3           MOV      R2,#+0
   \   000003B4   0110A0E3           MOV      R1,#+1
   \   000003B8   EE0F8DE2           ADD      R0,SP,#+952
   \   000003BC   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   000003C0   0020A0E3           MOV      R2,#+0
   \   000003C4   0110A0E3           MOV      R1,#+1
   \   000003C8   E70F8DE2           ADD      R0,SP,#+924
   \   000003CC   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   000003D0   0020A0E3           MOV      R2,#+0
   \   000003D4   0110A0E3           MOV      R1,#+1
   \   000003D8   E00F8DE2           ADD      R0,SP,#+896
   \   000003DC   ........           _BLF     ??_Tidy_1,??_Tidy??rA
    136                      LocalString += TabStr1 + KeyWord(C_SD_LIST_SOURCE)      + TabStr2 + KeyWord(ListSource) + CrLfStr;
   \   000003E0   181097E5           LDR      R1,[R7, #+24]
   \   000003E4   AF0F8DE2           ADD      R0,SP,#+700
   \   000003E8   ........           _BLF     ??KeyWord,??KeyWord??rA
   \   000003EC   0910A0E1           MOV      R1,R9
   \   000003F0   B60F8DE2           ADD      R0,SP,#+728
   \   000003F4   ........           _BLF     ??KeyWord,??KeyWord??rA
   \   000003F8   B62F8DE2           ADD      R2,SP,#+728
   \   000003FC   0610A0E1           MOV      R1,R6
   \   00000400   BD0F8DE2           ADD      R0,SP,#+756
   \   00000404   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000408   0820A0E1           MOV      R2,R8
   \   0000040C   BD1F8DE2           ADD      R1,SP,#+756
   \   00000410   C40F8DE2           ADD      R0,SP,#+784
   \   00000414   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000418   AF2F8DE2           ADD      R2,SP,#+700
   \   0000041C   C41F8DE2           ADD      R1,SP,#+784
   \   00000420   CB0F8DE2           ADD      R0,SP,#+812
   \   00000424   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000428   0420A0E1           MOV      R2,R4
   \   0000042C   CB1F8DE2           ADD      R1,SP,#+812
   \   00000430   D20F8DE2           ADD      R0,SP,#+840
   \   00000434   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000438   0530A0E1           MOV      R3,R5
   \   0000043C   0020A0E3           MOV      R2,#+0
   \   00000440   D21F8DE2           ADD      R1,SP,#+840
   \   00000444   0D00A0E1           MOV      R0,SP
   \   00000448   ........           _BLF     ??append,??append??rA
   \   0000044C   0020A0E3           MOV      R2,#+0
   \   00000450   0110A0E3           MOV      R1,#+1
   \   00000454   D20F8DE2           ADD      R0,SP,#+840
   \   00000458   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   0000045C   0020A0E3           MOV      R2,#+0
   \   00000460   0110A0E3           MOV      R1,#+1
   \   00000464   CB0F8DE2           ADD      R0,SP,#+812
   \   00000468   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   0000046C   0020A0E3           MOV      R2,#+0
   \   00000470   0110A0E3           MOV      R1,#+1
   \   00000474   AF0F8DE2           ADD      R0,SP,#+700
   \   00000478   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   0000047C   0020A0E3           MOV      R2,#+0
   \   00000480   0110A0E3           MOV      R1,#+1
   \   00000484   C40F8DE2           ADD      R0,SP,#+784
   \   00000488   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   0000048C   0020A0E3           MOV      R2,#+0
   \   00000490   0110A0E3           MOV      R1,#+1
   \   00000494   BD0F8DE2           ADD      R0,SP,#+756
   \   00000498   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   0000049C   0020A0E3           MOV      R2,#+0
   \   000004A0   0110A0E3           MOV      R1,#+1
   \   000004A4   B60F8DE2           ADD      R0,SP,#+728
   \   000004A8   ........           _BLF     ??_Tidy_1,??_Tidy??rA
    137                      LocalString += TabStr1 + KeyWord(C_SD_MANUAL_LIST)      + TabStr2 + FloatToAnsiString(ManualList) + CrLfStr;
   \   000004AC   201097E5           LDR      R1,[R7, #+32]
   \   000004B0   0330A0E3           MOV      R3,#+3
   \   000004B4   0720A0E3           MOV      R2,#+7
   \   000004B8   850F8DE2           ADD      R0,SP,#+532
   \   000004BC   ........           _BLF     ??FloatToAnsiString,??FloatToAnsiString??rA
   \   000004C0   041089E3           ORR      R1,R9,#0x4
   \   000004C4   8C0F8DE2           ADD      R0,SP,#+560
   \   000004C8   ........           _BLF     ??KeyWord,??KeyWord??rA
   \   000004CC   8C2F8DE2           ADD      R2,SP,#+560
   \   000004D0   0610A0E1           MOV      R1,R6
   \   000004D4   930F8DE2           ADD      R0,SP,#+588
   \   000004D8   ........           _BLF     `??operator+`,`??operator+??rA`
   \   000004DC   0820A0E1           MOV      R2,R8
   \   000004E0   931F8DE2           ADD      R1,SP,#+588
   \   000004E4   9A0F8DE2           ADD      R0,SP,#+616
   \   000004E8   ........           _BLF     `??operator+`,`??operator+??rA`
   \   000004EC   852F8DE2           ADD      R2,SP,#+532
   \   000004F0   9A1F8DE2           ADD      R1,SP,#+616
   \   000004F4   A10F8DE2           ADD      R0,SP,#+644
   \   000004F8   ........           _BLF     `??operator+`,`??operator+??rA`
   \   000004FC   0420A0E1           MOV      R2,R4
   \   00000500   A11F8DE2           ADD      R1,SP,#+644
   \   00000504   A80F8DE2           ADD      R0,SP,#+672
   \   00000508   ........           _BLF     `??operator+`,`??operator+??rA`
   \   0000050C   0530A0E1           MOV      R3,R5
   \   00000510   0020A0E3           MOV      R2,#+0
   \   00000514   A81F8DE2           ADD      R1,SP,#+672
   \   00000518   0D00A0E1           MOV      R0,SP
   \   0000051C   ........           _BLF     ??append,??append??rA
   \   00000520   0020A0E3           MOV      R2,#+0
   \   00000524   0110A0E3           MOV      R1,#+1
   \   00000528   A80F8DE2           ADD      R0,SP,#+672
   \   0000052C   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   00000530   0020A0E3           MOV      R2,#+0
   \   00000534   0110A0E3           MOV      R1,#+1
   \   00000538   A10F8DE2           ADD      R0,SP,#+644
   \   0000053C   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   00000540   0020A0E3           MOV      R2,#+0
   \   00000544   0110A0E3           MOV      R1,#+1
   \   00000548   850F8DE2           ADD      R0,SP,#+532
   \   0000054C   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   00000550   0020A0E3           MOV      R2,#+0
   \   00000554   0110A0E3           MOV      R1,#+1
   \   00000558   9A0F8DE2           ADD      R0,SP,#+616
   \   0000055C   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   00000560   0020A0E3           MOV      R2,#+0
   \   00000564   0110A0E3           MOV      R1,#+1
   \   00000568   930F8DE2           ADD      R0,SP,#+588
   \   0000056C   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   00000570   0020A0E3           MOV      R2,#+0
   \   00000574   0110A0E3           MOV      R1,#+1
   \   00000578   8C0F8DE2           ADD      R0,SP,#+560
   \   0000057C   ........           _BLF     ??_Tidy_1,??_Tidy??rA
    138                      LocalString += TabStr1 + KeyWord(C_SD_SEAWATER_TEMP)    + TabStr2 + FloatToAnsiString(SeaWaterTemp) + CrLfStr;
   \   00000580   441097E5           LDR      R1,[R7, #+68]
   \   00000584   0330A0E3           MOV      R3,#+3
   \   00000588   0720A0E3           MOV      R2,#+7
   \   0000058C   5B0F8DE2           ADD      R0,SP,#+364
   \   00000590   ........           _BLF     ??FloatToAnsiString,??FloatToAnsiString??rA
   \   00000594   051089E2           ADD      R1,R9,#+5
   \   00000598   620F8DE2           ADD      R0,SP,#+392
   \   0000059C   ........           _BLF     ??KeyWord,??KeyWord??rA
   \   000005A0   622F8DE2           ADD      R2,SP,#+392
   \   000005A4   0610A0E1           MOV      R1,R6
   \   000005A8   690F8DE2           ADD      R0,SP,#+420
   \   000005AC   ........           _BLF     `??operator+`,`??operator+??rA`
   \   000005B0   0820A0E1           MOV      R2,R8
   \   000005B4   691F8DE2           ADD      R1,SP,#+420
   \   000005B8   700F8DE2           ADD      R0,SP,#+448
   \   000005BC   ........           _BLF     `??operator+`,`??operator+??rA`
   \   000005C0   5B2F8DE2           ADD      R2,SP,#+364
   \   000005C4   701F8DE2           ADD      R1,SP,#+448
   \   000005C8   770F8DE2           ADD      R0,SP,#+476
   \   000005CC   ........           _BLF     `??operator+`,`??operator+??rA`
   \   000005D0   0420A0E1           MOV      R2,R4
   \   000005D4   771F8DE2           ADD      R1,SP,#+476
   \   000005D8   7E0F8DE2           ADD      R0,SP,#+504
   \   000005DC   ........           _BLF     `??operator+`,`??operator+??rA`
   \   000005E0   0530A0E1           MOV      R3,R5
   \   000005E4   0020A0E3           MOV      R2,#+0
   \   000005E8   7E1F8DE2           ADD      R1,SP,#+504
   \   000005EC   0D00A0E1           MOV      R0,SP
   \   000005F0   ........           _BLF     ??append,??append??rA
   \   000005F4   0020A0E3           MOV      R2,#+0
   \   000005F8   0110A0E3           MOV      R1,#+1
   \   000005FC   7E0F8DE2           ADD      R0,SP,#+504
   \   00000600   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   00000604   0020A0E3           MOV      R2,#+0
   \   00000608   0110A0E3           MOV      R1,#+1
   \   0000060C   770F8DE2           ADD      R0,SP,#+476
   \   00000610   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   00000614   0020A0E3           MOV      R2,#+0
   \   00000618   0110A0E3           MOV      R1,#+1
   \   0000061C   5B0F8DE2           ADD      R0,SP,#+364
   \   00000620   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   00000624   0020A0E3           MOV      R2,#+0
   \   00000628   0110A0E3           MOV      R1,#+1
   \   0000062C   700F8DE2           ADD      R0,SP,#+448
   \   00000630   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   00000634   0020A0E3           MOV      R2,#+0
   \   00000638   0110A0E3           MOV      R1,#+1
   \   0000063C   690F8DE2           ADD      R0,SP,#+420
   \   00000640   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   00000644   0020A0E3           MOV      R2,#+0
   \   00000648   0110A0E3           MOV      R1,#+1
   \   0000064C   620F8DE2           ADD      R0,SP,#+392
   \   00000650   ........           _BLF     ??_Tidy_1,??_Tidy??rA
    139                      LocalString += TabStr1 + KeyWord(C_SD_SEAWATER_DNS)     + TabStr2 + FloatToAnsiString(SeaWaterDensity) + CrLfStr;
   \   00000654   301097E5           LDR      R1,[R7, #+48]
   \   00000658   0330A0E3           MOV      R3,#+3
   \   0000065C   0720A0E3           MOV      R2,#+7
   \   00000660   C4008DE2           ADD      R0,SP,#+196
   \   00000664   ........           _BLF     ??FloatToAnsiString,??FloatToAnsiString??rA
   \   00000668   061089E3           ORR      R1,R9,#0x6
   \   0000066C   E0008DE2           ADD      R0,SP,#+224
   \   00000670   ........           _BLF     ??KeyWord,??KeyWord??rA
   \   00000674   E0208DE2           ADD      R2,SP,#+224
   \   00000678   0610A0E1           MOV      R1,R6
   \   0000067C   FC008DE2           ADD      R0,SP,#+252
   \   00000680   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000684   0820A0E1           MOV      R2,R8
   \   00000688   FC108DE2           ADD      R1,SP,#+252
   \   0000068C   460F8DE2           ADD      R0,SP,#+280
   \   00000690   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000694   C4208DE2           ADD      R2,SP,#+196
   \   00000698   461F8DE2           ADD      R1,SP,#+280
   \   0000069C   4D0F8DE2           ADD      R0,SP,#+308
   \   000006A0   ........           _BLF     `??operator+`,`??operator+??rA`
   \   000006A4   0420A0E1           MOV      R2,R4
   \   000006A8   4D1F8DE2           ADD      R1,SP,#+308
   \   000006AC   540F8DE2           ADD      R0,SP,#+336
   \   000006B0   ........           _BLF     `??operator+`,`??operator+??rA`
   \   000006B4   0530A0E1           MOV      R3,R5
   \   000006B8   0020A0E3           MOV      R2,#+0
   \   000006BC   541F8DE2           ADD      R1,SP,#+336
   \   000006C0   0D00A0E1           MOV      R0,SP
   \   000006C4   ........           _BLF     ??append,??append??rA
   \   000006C8   0020A0E3           MOV      R2,#+0
   \   000006CC   0110A0E3           MOV      R1,#+1
   \   000006D0   540F8DE2           ADD      R0,SP,#+336
   \   000006D4   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   000006D8   0020A0E3           MOV      R2,#+0
   \   000006DC   0110A0E3           MOV      R1,#+1
   \   000006E0   4D0F8DE2           ADD      R0,SP,#+308
   \   000006E4   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   000006E8   0020A0E3           MOV      R2,#+0
   \   000006EC   0110A0E3           MOV      R1,#+1
   \   000006F0   C4008DE2           ADD      R0,SP,#+196
   \   000006F4   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   000006F8   0020A0E3           MOV      R2,#+0
   \   000006FC   0110A0E3           MOV      R1,#+1
   \   00000700   460F8DE2           ADD      R0,SP,#+280
   \   00000704   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   00000708   0020A0E3           MOV      R2,#+0
   \   0000070C   0110A0E3           MOV      R1,#+1
   \   00000710   FC008DE2           ADD      R0,SP,#+252
   \   00000714   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   00000718   0020A0E3           MOV      R2,#+0
   \   0000071C   0110A0E3           MOV      R1,#+1
   \   00000720   E0008DE2           ADD      R0,SP,#+224
   \   00000724   ........           _BLF     ??_Tidy_1,??_Tidy??rA
    140                      LocalString += TabStr1 + KeyWord(C_SD_AMBIENT_TEMP) + TabStr2 + FloatToAnsiString(AmbientTemp) + CrLfStr;
   \   00000728   481097E5           LDR      R1,[R7, #+72]
   \   0000072C   0330A0E3           MOV      R3,#+3
   \   00000730   0720A0E3           MOV      R2,#+7
   \   00000734   54008DE2           ADD      R0,SP,#+84
   \   00000738   ........           _BLF     ??FloatToAnsiString,??FloatToAnsiString??rA
   \   0000073C   071089E2           ADD      R1,R9,#+7
   \   00000740   38008DE2           ADD      R0,SP,#+56
   \   00000744   ........           _BLF     ??KeyWord,??KeyWord??rA
   \   00000748   38208DE2           ADD      R2,SP,#+56
   \   0000074C   0610A0E1           MOV      R1,R6
   \   00000750   1C008DE2           ADD      R0,SP,#+28
   \   00000754   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000758   0820A0E1           MOV      R2,R8
   \   0000075C   1C108DE2           ADD      R1,SP,#+28
   \   00000760   70008DE2           ADD      R0,SP,#+112
   \   00000764   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000768   54208DE2           ADD      R2,SP,#+84
   \   0000076C   70108DE2           ADD      R1,SP,#+112
   \   00000770   8C008DE2           ADD      R0,SP,#+140
   \   00000774   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000778   0420A0E1           MOV      R2,R4
   \   0000077C   8C108DE2           ADD      R1,SP,#+140
   \   00000780   A8008DE2           ADD      R0,SP,#+168
   \   00000784   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000788   0530A0E1           MOV      R3,R5
   \   0000078C   0020A0E3           MOV      R2,#+0
   \   00000790   A8108DE2           ADD      R1,SP,#+168
   \   00000794   0D00A0E1           MOV      R0,SP
   \   00000798   ........           _BLF     ??append,??append??rA
   \   0000079C   0020A0E3           MOV      R2,#+0
   \   000007A0   0110A0E3           MOV      R1,#+1
   \   000007A4   A8008DE2           ADD      R0,SP,#+168
   \   000007A8   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   000007AC   0020A0E3           MOV      R2,#+0
   \   000007B0   0110A0E3           MOV      R1,#+1
   \   000007B4   8C008DE2           ADD      R0,SP,#+140
   \   000007B8   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   000007BC   0020A0E3           MOV      R2,#+0
   \   000007C0   0110A0E3           MOV      R1,#+1
   \   000007C4   54008DE2           ADD      R0,SP,#+84
   \   000007C8   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   000007CC   0020A0E3           MOV      R2,#+0
   \   000007D0   0110A0E3           MOV      R1,#+1
   \   000007D4   70008DE2           ADD      R0,SP,#+112
   \   000007D8   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   000007DC   0020A0E3           MOV      R2,#+0
   \   000007E0   0110A0E3           MOV      R1,#+1
   \   000007E4   1C008DE2           ADD      R0,SP,#+28
   \   000007E8   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   000007EC   0020A0E3           MOV      R2,#+0
   \   000007F0   0110A0E3           MOV      R1,#+1
   \   000007F4   38008DE2           ADD      R0,SP,#+56
   \                     ??SaveSettings_5:
   \   000007F8   ........           _BLF     ??_Tidy_1,??_Tidy??rA
    141                  }
    142                  LocalString += TabStr1 + KeyWord(C_SD_TIME_GMT) + TabStr2 + (AnsiString)TimeFromGMT + CrLfStr;
   \                     ??SaveSettings_4:
   \   000007FC   4C1097E5           LDR      R1,[R7, #+76]
   \   00000800   870F8DE2           ADD      R0,SP,#+540
   \   00000804   C00E80E2           ADD      R0,R0,#+3072
   \   00000808   ........           _BLF     ??AnsiString_2,??AnsiString??rA_2
   \   0000080C   0090A0E1           MOV      R9,R0
   \   00000810   0E104AE2           SUB      R1,R10,#+14
   \   00000814   7A0F8DE2           ADD      R0,SP,#+488
   \   00000818   400E80E2           ADD      R0,R0,#+1024
   \   0000081C   ........           _BLF     ??KeyWord,??KeyWord??rA
   \   00000820   7A2F8DE2           ADD      R2,SP,#+488
   \   00000824   402E82E2           ADD      R2,R2,#+1024
   \   00000828   0610A0E1           MOV      R1,R6
   \   0000082C   730F8DE2           ADD      R0,SP,#+460
   \   00000830   400E80E2           ADD      R0,R0,#+1024
   \   00000834   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000838   0820A0E1           MOV      R2,R8
   \   0000083C   731F8DE2           ADD      R1,SP,#+460
   \   00000840   401E81E2           ADD      R1,R1,#+1024
   \   00000844   5B0E8DE2           ADD      R0,SP,#+1456
   \   00000848   ........           _BLF     `??operator+`,`??operator+??rA`
   \   0000084C   0920A0E1           MOV      R2,R9
   \   00000850   5B1E8DE2           ADD      R1,SP,#+1456
   \   00000854   650F8DE2           ADD      R0,SP,#+404
   \   00000858   400E80E2           ADD      R0,R0,#+1024
   \   0000085C   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000860   0420A0E1           MOV      R2,R4
   \   00000864   651F8DE2           ADD      R1,SP,#+404
   \   00000868   401E81E2           ADD      R1,R1,#+1024
   \   0000086C   5E0F8DE2           ADD      R0,SP,#+376
   \   00000870   400E80E2           ADD      R0,R0,#+1024
   \   00000874   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000878   0530A0E1           MOV      R3,R5
   \   0000087C   0020A0E3           MOV      R2,#+0
   \   00000880   5E1F8DE2           ADD      R1,SP,#+376
   \   00000884   401E81E2           ADD      R1,R1,#+1024
   \   00000888   0D00A0E1           MOV      R0,SP
   \   0000088C   ........           _BLF     ??append,??append??rA
   \   00000890   0020A0E3           MOV      R2,#+0
   \   00000894   0110A0E3           MOV      R1,#+1
   \   00000898   5E0F8DE2           ADD      R0,SP,#+376
   \   0000089C   400E80E2           ADD      R0,R0,#+1024
   \   000008A0   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   000008A4   0020A0E3           MOV      R2,#+0
   \   000008A8   0110A0E3           MOV      R1,#+1
   \   000008AC   650F8DE2           ADD      R0,SP,#+404
   \   000008B0   400E80E2           ADD      R0,R0,#+1024
   \   000008B4   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   000008B8   0020A0E3           MOV      R2,#+0
   \   000008BC   0110A0E3           MOV      R1,#+1
   \   000008C0   870F8DE2           ADD      R0,SP,#+540
   \   000008C4   C00E80E2           ADD      R0,R0,#+3072
   \   000008C8   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   000008CC   0020A0E3           MOV      R2,#+0
   \   000008D0   0110A0E3           MOV      R1,#+1
   \   000008D4   5B0E8DE2           ADD      R0,SP,#+1456
   \   000008D8   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   000008DC   0020A0E3           MOV      R2,#+0
   \   000008E0   0110A0E3           MOV      R1,#+1
   \   000008E4   730F8DE2           ADD      R0,SP,#+460
   \   000008E8   400E80E2           ADD      R0,R0,#+1024
   \   000008EC   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   000008F0   0020A0E3           MOV      R2,#+0
   \   000008F4   0110A0E3           MOV      R1,#+1
   \   000008F8   7A0F8DE2           ADD      R0,SP,#+488
   \   000008FC   400E80E2           ADD      R0,R0,#+1024
   \   00000900   ........           _BLF     ??_Tidy_1,??_Tidy??rA
    143                  LocalString += TabStr1 + KeyWord(C_SD_DAYLIGH_SAVING) + TabStr1 + (AnsiString)DaylightSaving + CrLfStr;
   \   00000904   501097E5           LDR      R1,[R7, #+80]
   \   00000908   8E0F8DE2           ADD      R0,SP,#+568
   \   0000090C   C00E80E2           ADD      R0,R0,#+3072
   \   00000910   ........           _BLF     ??AnsiString_2,??AnsiString??rA_2
   \   00000914   0090A0E1           MOV      R9,R0
   \   00000918   0D104AE2           SUB      R1,R10,#+13
   \   0000091C   9D0F8DE2           ADD      R0,SP,#+628
   \   00000920   400E80E2           ADD      R0,R0,#+1024
   \   00000924   ........           _BLF     ??KeyWord,??KeyWord??rA
   \   00000928   9D2F8DE2           ADD      R2,SP,#+628
   \   0000092C   402E82E2           ADD      R2,R2,#+1024
   \   00000930   0610A0E1           MOV      R1,R6
   \   00000934   960F8DE2           ADD      R0,SP,#+600
   \   00000938   400E80E2           ADD      R0,R0,#+1024
   \   0000093C   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000940   0620A0E1           MOV      R2,R6
   \   00000944   961F8DE2           ADD      R1,SP,#+600
   \   00000948   401E81E2           ADD      R1,R1,#+1024
   \   0000094C   8F0F8DE2           ADD      R0,SP,#+572
   \   00000950   400E80E2           ADD      R0,R0,#+1024
   \   00000954   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000958   0920A0E1           MOV      R2,R9
   \   0000095C   8F1F8DE2           ADD      R1,SP,#+572
   \   00000960   401E81E2           ADD      R1,R1,#+1024
   \   00000964   620E8DE2           ADD      R0,SP,#+1568
   \   00000968   ........           _BLF     `??operator+`,`??operator+??rA`
   \   0000096C   0420A0E1           MOV      R2,R4
   \   00000970   621E8DE2           ADD      R1,SP,#+1568
   \   00000974   810F8DE2           ADD      R0,SP,#+516
   \   00000978   400E80E2           ADD      R0,R0,#+1024
   \   0000097C   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000980   0530A0E1           MOV      R3,R5
   \   00000984   0020A0E3           MOV      R2,#+0
   \   00000988   811F8DE2           ADD      R1,SP,#+516
   \   0000098C   401E81E2           ADD      R1,R1,#+1024
   \   00000990   0D00A0E1           MOV      R0,SP
   \   00000994   ........           _BLF     ??append,??append??rA
   \   00000998   0020A0E3           MOV      R2,#+0
   \   0000099C   0110A0E3           MOV      R1,#+1
   \   000009A0   810F8DE2           ADD      R0,SP,#+516
   \   000009A4   400E80E2           ADD      R0,R0,#+1024
   \   000009A8   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   000009AC   0020A0E3           MOV      R2,#+0
   \   000009B0   0110A0E3           MOV      R1,#+1
   \   000009B4   620E8DE2           ADD      R0,SP,#+1568
   \   000009B8   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   000009BC   0020A0E3           MOV      R2,#+0
   \   000009C0   0110A0E3           MOV      R1,#+1
   \   000009C4   8E0F8DE2           ADD      R0,SP,#+568
   \   000009C8   C00E80E2           ADD      R0,R0,#+3072
   \   000009CC   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   000009D0   0020A0E3           MOV      R2,#+0
   \   000009D4   0110A0E3           MOV      R1,#+1
   \   000009D8   8F0F8DE2           ADD      R0,SP,#+572
   \   000009DC   400E80E2           ADD      R0,R0,#+1024
   \   000009E0   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   000009E4   0020A0E3           MOV      R2,#+0
   \   000009E8   0110A0E3           MOV      R1,#+1
   \   000009EC   960F8DE2           ADD      R0,SP,#+600
   \   000009F0   400E80E2           ADD      R0,R0,#+1024
   \   000009F4   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   000009F8   0020A0E3           MOV      R2,#+0
   \   000009FC   0110A0E3           MOV      R1,#+1
   \   00000A00   9D0F8DE2           ADD      R0,SP,#+628
   \   00000A04   400E80E2           ADD      R0,R0,#+1024
   \   00000A08   ........           _BLF     ??_Tidy_1,??_Tidy??rA
    144          
    145                  LocalString += TabStr1 + KeyWord(C_SD_SCREEN_OFF_TIME) + TabStr2 + (AnsiString)TouchScreenTimeOut + CrLfStr;
   \   00000A0C   B0059FE5           LDR      R0,??SaveSettings_1+0x28  ;; TouchScreenTimeOut
   \   00000A10   001090E5           LDR      R1,[R0, #+0]
   \   00000A14   950F8DE2           ADD      R0,SP,#+596
   \   00000A18   C00E80E2           ADD      R0,R0,#+3072
   \   00000A1C   ........           _BLF     ??AnsiString_2,??AnsiString??rA_2
   \   00000A20   0090A0E1           MOV      R9,R0
   \   00000A24   13104AE2           SUB      R1,R10,#+19
   \   00000A28   700E8DE2           ADD      R0,SP,#+1792
   \   00000A2C   ........           _BLF     ??KeyWord,??KeyWord??rA
   \   00000A30   702E8DE2           ADD      R2,SP,#+1792
   \   00000A34   0610A0E1           MOV      R1,R6
   \   00000A38   B90F8DE2           ADD      R0,SP,#+740
   \   00000A3C   400E80E2           ADD      R0,R0,#+1024
   \   00000A40   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000A44   0820A0E1           MOV      R2,R8
   \   00000A48   B91F8DE2           ADD      R1,SP,#+740
   \   00000A4C   401E81E2           ADD      R1,R1,#+1024
   \   00000A50   B20F8DE2           ADD      R0,SP,#+712
   \   00000A54   400E80E2           ADD      R0,R0,#+1024
   \   00000A58   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000A5C   0920A0E1           MOV      R2,R9
   \   00000A60   B21F8DE2           ADD      R1,SP,#+712
   \   00000A64   401E81E2           ADD      R1,R1,#+1024
   \   00000A68   AB0F8DE2           ADD      R0,SP,#+684
   \   00000A6C   400E80E2           ADD      R0,R0,#+1024
   \   00000A70   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000A74   0420A0E1           MOV      R2,R4
   \   00000A78   AB1F8DE2           ADD      R1,SP,#+684
   \   00000A7C   401E81E2           ADD      R1,R1,#+1024
   \   00000A80   690E8DE2           ADD      R0,SP,#+1680
   \   00000A84   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000A88   0530A0E1           MOV      R3,R5
   \   00000A8C   0020A0E3           MOV      R2,#+0
   \   00000A90   691E8DE2           ADD      R1,SP,#+1680
   \   00000A94   0D00A0E1           MOV      R0,SP
   \   00000A98   ........           _BLF     ??append,??append??rA
   \   00000A9C   0020A0E3           MOV      R2,#+0
   \   00000AA0   0110A0E3           MOV      R1,#+1
   \   00000AA4   690E8DE2           ADD      R0,SP,#+1680
   \   00000AA8   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   00000AAC   0020A0E3           MOV      R2,#+0
   \   00000AB0   0110A0E3           MOV      R1,#+1
   \   00000AB4   AB0F8DE2           ADD      R0,SP,#+684
   \   00000AB8   400E80E2           ADD      R0,R0,#+1024
   \   00000ABC   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   00000AC0   0020A0E3           MOV      R2,#+0
   \   00000AC4   0110A0E3           MOV      R1,#+1
   \   00000AC8   950F8DE2           ADD      R0,SP,#+596
   \   00000ACC   C00E80E2           ADD      R0,R0,#+3072
   \   00000AD0   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   00000AD4   0020A0E3           MOV      R2,#+0
   \   00000AD8   0110A0E3           MOV      R1,#+1
   \   00000ADC   B20F8DE2           ADD      R0,SP,#+712
   \   00000AE0   400E80E2           ADD      R0,R0,#+1024
   \   00000AE4   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   00000AE8   0020A0E3           MOV      R2,#+0
   \   00000AEC   0110A0E3           MOV      R1,#+1
   \   00000AF0   B90F8DE2           ADD      R0,SP,#+740
   \   00000AF4   400E80E2           ADD      R0,R0,#+1024
   \   00000AF8   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   00000AFC   0020A0E3           MOV      R2,#+0
   \   00000B00   0110A0E3           MOV      R1,#+1
   \   00000B04   700E8DE2           ADD      R0,SP,#+1792
   \   00000B08   ........           _BLF     ??_Tidy_1,??_Tidy??rA
    146                  LocalString += TabStr1 + KeyWord(C_SD_ALARM_OFF_DELAY) + TabStr2 + (AnsiString)AlarmOffDelay + CrLfStr;
   \   00000B0C   101097E5           LDR      R1,[R7, #+16]
   \   00000B10   E70E8DE2           ADD      R0,SP,#+3696
   \   00000B14   ........           _BLF     ??AnsiString_2,??AnsiString??rA_2
   \   00000B18   0090A0E1           MOV      R9,R0
   \   00000B1C   12104AE2           SUB      R1,R10,#+18
   \   00000B20   E30F8DE2           ADD      R0,SP,#+908
   \   00000B24   400E80E2           ADD      R0,R0,#+1024
   \   00000B28   ........           _BLF     ??KeyWord,??KeyWord??rA
   \   00000B2C   E32F8DE2           ADD      R2,SP,#+908
   \   00000B30   402E82E2           ADD      R2,R2,#+1024
   \   00000B34   0610A0E1           MOV      R1,R6
   \   00000B38   770E8DE2           ADD      R0,SP,#+1904
   \   00000B3C   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000B40   0820A0E1           MOV      R2,R8
   \   00000B44   771E8DE2           ADD      R1,SP,#+1904
   \   00000B48   D50F8DE2           ADD      R0,SP,#+852
   \   00000B4C   400E80E2           ADD      R0,R0,#+1024
   \   00000B50   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000B54   0920A0E1           MOV      R2,R9
   \   00000B58   D51F8DE2           ADD      R1,SP,#+852
   \   00000B5C   401E81E2           ADD      R1,R1,#+1024
   \   00000B60   CE0F8DE2           ADD      R0,SP,#+824
   \   00000B64   400E80E2           ADD      R0,R0,#+1024
   \   00000B68   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000B6C   0420A0E1           MOV      R2,R4
   \   00000B70   CE1F8DE2           ADD      R1,SP,#+824
   \   00000B74   401E81E2           ADD      R1,R1,#+1024
   \   00000B78   C70F8DE2           ADD      R0,SP,#+796
   \   00000B7C   400E80E2           ADD      R0,R0,#+1024
   \   00000B80   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000B84   0530A0E1           MOV      R3,R5
   \   00000B88   0020A0E3           MOV      R2,#+0
   \   00000B8C   C71F8DE2           ADD      R1,SP,#+796
   \   00000B90   401E81E2           ADD      R1,R1,#+1024
   \   00000B94   0D00A0E1           MOV      R0,SP
   \   00000B98   ........           _BLF     ??append,??append??rA
   \   00000B9C   0020A0E3           MOV      R2,#+0
   \   00000BA0   0110A0E3           MOV      R1,#+1
   \   00000BA4   C70F8DE2           ADD      R0,SP,#+796
   \   00000BA8   400E80E2           ADD      R0,R0,#+1024
   \   00000BAC   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   00000BB0   0020A0E3           MOV      R2,#+0
   \   00000BB4   0110A0E3           MOV      R1,#+1
   \   00000BB8   CE0F8DE2           ADD      R0,SP,#+824
   \   00000BBC   400E80E2           ADD      R0,R0,#+1024
   \   00000BC0   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   00000BC4   0020A0E3           MOV      R2,#+0
   \   00000BC8   0110A0E3           MOV      R1,#+1
   \   00000BCC   E70E8DE2           ADD      R0,SP,#+3696
   \   00000BD0   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   00000BD4   0020A0E3           MOV      R2,#+0
   \   00000BD8   0110A0E3           MOV      R1,#+1
   \   00000BDC   D50F8DE2           ADD      R0,SP,#+852
   \   00000BE0   400E80E2           ADD      R0,R0,#+1024
   \   00000BE4   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   00000BE8   0020A0E3           MOV      R2,#+0
   \   00000BEC   0110A0E3           MOV      R1,#+1
   \   00000BF0   770E8DE2           ADD      R0,SP,#+1904
   \   00000BF4   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   00000BF8   0020A0E3           MOV      R2,#+0
   \   00000BFC   0110A0E3           MOV      R1,#+1
   \   00000C00   E30F8DE2           ADD      R0,SP,#+908
   \   00000C04   400E80E2           ADD      R0,R0,#+1024
   \   00000C08   ........           _BLF     ??_Tidy_1,??_Tidy??rA
    147          
    148                  /*
    149          #ifdef S2TXU
    150                  switch ( GlobalDeviceHWId ) {
    151                      case TCU_R1://TCU
    152                      case TCU_R2://TCU CurrentDeviceId should be 0x21
    153                          break;
    154                      case TDU_R1://TCU
    155                      case TDU_R2://TCU CurrentDeviceId should be 0x21
    156                          {
    157                              int xMin,xMax,yMin,yMax;
    158                              GUI_TOUCH_GetCalData(0,&xMin,&xMax);
    159                              GUI_TOUCH_GetCalData(1,&yMin,&yMax);
    160                              char Buf[BUF_SIZE];
    161                              sprintf(Buf,"\t%s\t\t%5i %5i %5i% 5i\n",KeyWord(C_SD_SCREEN_CAL).c_str(),xMin,xMax,yMin,yMax);
    162                              LocalString += Buf;
    163                          }
    164                          break;
    165                  }
    166          #endif
    167          */
    168                  LocalString += TabStr1 + KeyWord(C_SD_UNITSYSTEM) + TabStr2 + (AnsiString)CurrentUnitSystem + CrLfStr;
   \   00000C0C   081097E5           LDR      R1,[R7, #+8]
   \   00000C10   A30F8DE2           ADD      R0,SP,#+652
   \   00000C14   C00E80E2           ADD      R0,R0,#+3072
   \   00000C18   ........           _BLF     ??AnsiString_2,??AnsiString??rA_2
   \   00000C1C   0090A0E1           MOV      R9,R0
   \   00000C20   10104AE2           SUB      R1,R10,#+16
   \   00000C24   18008DE2           ADD      R0,SP,#+24
   \   00000C28   800E80E2           ADD      R0,R0,#+2048
   \   00000C2C   ........           _BLF     ??KeyWord,??KeyWord??rA
   \   00000C30   18208DE2           ADD      R2,SP,#+24
   \   00000C34   802E82E2           ADD      R2,R2,#+2048
   \   00000C38   0610A0E1           MOV      R1,R6
   \   00000C3C   FF0F8DE2           ADD      R0,SP,#+1020
   \   00000C40   400E80E2           ADD      R0,R0,#+1024
   \   00000C44   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000C48   0820A0E1           MOV      R2,R8
   \   00000C4C   FF1F8DE2           ADD      R1,SP,#+1020
   \   00000C50   401E81E2           ADD      R1,R1,#+1024
   \   00000C54   7E0E8DE2           ADD      R0,SP,#+2016
   \   00000C58   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000C5C   0920A0E1           MOV      R2,R9
   \   00000C60   7E1E8DE2           ADD      R1,SP,#+2016
   \   00000C64   F10F8DE2           ADD      R0,SP,#+964
   \   00000C68   400E80E2           ADD      R0,R0,#+1024
   \   00000C6C   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000C70   0420A0E1           MOV      R2,R4
   \   00000C74   F11F8DE2           ADD      R1,SP,#+964
   \   00000C78   401E81E2           ADD      R1,R1,#+1024
   \   00000C7C   EA0F8DE2           ADD      R0,SP,#+936
   \   00000C80   400E80E2           ADD      R0,R0,#+1024
   \   00000C84   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000C88   0530A0E1           MOV      R3,R5
   \   00000C8C   0020A0E3           MOV      R2,#+0
   \   00000C90   EA1F8DE2           ADD      R1,SP,#+936
   \   00000C94   401E81E2           ADD      R1,R1,#+1024
   \   00000C98   0D00A0E1           MOV      R0,SP
   \   00000C9C   ........           _BLF     ??append,??append??rA
   \   00000CA0   0020A0E3           MOV      R2,#+0
   \   00000CA4   0110A0E3           MOV      R1,#+1
   \   00000CA8   EA0F8DE2           ADD      R0,SP,#+936
   \   00000CAC   400E80E2           ADD      R0,R0,#+1024
   \   00000CB0   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   00000CB4   0020A0E3           MOV      R2,#+0
   \   00000CB8   0110A0E3           MOV      R1,#+1
   \   00000CBC   F10F8DE2           ADD      R0,SP,#+964
   \   00000CC0   400E80E2           ADD      R0,R0,#+1024
   \   00000CC4   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   00000CC8   0020A0E3           MOV      R2,#+0
   \   00000CCC   0110A0E3           MOV      R1,#+1
   \   00000CD0   A30F8DE2           ADD      R0,SP,#+652
   \   00000CD4   C00E80E2           ADD      R0,R0,#+3072
   \   00000CD8   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   00000CDC   0020A0E3           MOV      R2,#+0
   \   00000CE0   0110A0E3           MOV      R1,#+1
   \   00000CE4   7E0E8DE2           ADD      R0,SP,#+2016
   \   00000CE8   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   00000CEC   0020A0E3           MOV      R2,#+0
   \   00000CF0   0110A0E3           MOV      R1,#+1
   \   00000CF4   FF0F8DE2           ADD      R0,SP,#+1020
   \   00000CF8   400E80E2           ADD      R0,R0,#+1024
   \   00000CFC   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   00000D00   0020A0E3           MOV      R2,#+0
   \   00000D04   0110A0E3           MOV      R1,#+1
   \   00000D08   18008DE2           ADD      R0,SP,#+24
   \   00000D0C   800E80E2           ADD      R0,R0,#+2048
   \   00000D10   ........           _BLF     ??_Tidy_1,??_Tidy??rA
    169                  LocalString += TabStr1 + KeyWord(C_SD_LANGUAGE) + TabStr2 + (AnsiString)CurrentLanguage + CrLfStr;
   \   00000D14   0C1097E5           LDR      R1,[R7, #+12]
   \   00000D18   AA0F8DE2           ADD      R0,SP,#+680
   \   00000D1C   C00E80E2           ADD      R0,R0,#+3072
   \   00000D20   ........           _BLF     ??AnsiString_2,??AnsiString??rA_2
   \   00000D24   0090A0E1           MOV      R9,R0
   \   00000D28   0F104AE2           SUB      R1,R10,#+15
   \   00000D2C   A4008DE2           ADD      R0,SP,#+164
   \   00000D30   800E80E2           ADD      R0,R0,#+2048
   \   00000D34   ........           _BLF     ??KeyWord,??KeyWord??rA
   \   00000D38   A4208DE2           ADD      R2,SP,#+164
   \   00000D3C   802E82E2           ADD      R2,R2,#+2048
   \   00000D40   0610A0E1           MOV      R1,R6
   \   00000D44   88008DE2           ADD      R0,SP,#+136
   \   00000D48   800E80E2           ADD      R0,R0,#+2048
   \   00000D4C   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000D50   0820A0E1           MOV      R2,R8
   \   00000D54   88108DE2           ADD      R1,SP,#+136
   \   00000D58   801E81E2           ADD      R1,R1,#+2048
   \   00000D5C   6C008DE2           ADD      R0,SP,#+108
   \   00000D60   800E80E2           ADD      R0,R0,#+2048
   \   00000D64   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000D68   0920A0E1           MOV      R2,R9
   \   00000D6C   6C108DE2           ADD      R1,SP,#+108
   \   00000D70   801E81E2           ADD      R1,R1,#+2048
   \   00000D74   850E8DE2           ADD      R0,SP,#+2128
   \   00000D78   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000D7C   0420A0E1           MOV      R2,R4
   \   00000D80   851E8DE2           ADD      R1,SP,#+2128
   \   00000D84   34008DE2           ADD      R0,SP,#+52
   \   00000D88   800E80E2           ADD      R0,R0,#+2048
   \   00000D8C   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000D90   0530A0E1           MOV      R3,R5
   \   00000D94   0020A0E3           MOV      R2,#+0
   \   00000D98   34108DE2           ADD      R1,SP,#+52
   \   00000D9C   801E81E2           ADD      R1,R1,#+2048
   \   00000DA0   0D00A0E1           MOV      R0,SP
   \   00000DA4   ........           _BLF     ??append,??append??rA
   \   00000DA8   0020A0E3           MOV      R2,#+0
   \   00000DAC   0110A0E3           MOV      R1,#+1
   \   00000DB0   34008DE2           ADD      R0,SP,#+52
   \   00000DB4   800E80E2           ADD      R0,R0,#+2048
   \   00000DB8   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   00000DBC   0020A0E3           MOV      R2,#+0
   \   00000DC0   0110A0E3           MOV      R1,#+1
   \   00000DC4   850E8DE2           ADD      R0,SP,#+2128
   \   00000DC8   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   00000DCC   0020A0E3           MOV      R2,#+0
   \   00000DD0   0110A0E3           MOV      R1,#+1
   \   00000DD4   AA0F8DE2           ADD      R0,SP,#+680
   \   00000DD8   C00E80E2           ADD      R0,R0,#+3072
   \   00000DDC   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   00000DE0   0020A0E3           MOV      R2,#+0
   \   00000DE4   0110A0E3           MOV      R1,#+1
   \   00000DE8   6C008DE2           ADD      R0,SP,#+108
   \   00000DEC   800E80E2           ADD      R0,R0,#+2048
   \   00000DF0   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   00000DF4   0020A0E3           MOV      R2,#+0
   \   00000DF8   0110A0E3           MOV      R1,#+1
   \   00000DFC   88008DE2           ADD      R0,SP,#+136
   \   00000E00   800E80E2           ADD      R0,R0,#+2048
   \   00000E04   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   00000E08   0020A0E3           MOV      R2,#+0
   \   00000E0C   0110A0E3           MOV      R1,#+1
   \   00000E10   A4008DE2           ADD      R0,SP,#+164
   \   00000E14   800E80E2           ADD      R0,R0,#+2048
   \   00000E18   ........           _BLF     ??_Tidy_1,??_Tidy??rA
    170          
    171                  LocalString += TabStr1 + KeyWord(C_SD_USER_PIN_CODE) + TabStr2 + UserPinCode + CrLfStr;
   \   00000E1C   11104AE2           SUB      R1,R10,#+17
   \   00000E20   930E8DE2           ADD      R0,SP,#+2352
   \   00000E24   ........           _BLF     ??KeyWord,??KeyWord??rA
   \   00000E28   932E8DE2           ADD      R2,SP,#+2352
   \   00000E2C   0610A0E1           MOV      R1,R6
   \   00000E30   450F8DE2           ADD      R0,SP,#+276
   \   00000E34   800E80E2           ADD      R0,R0,#+2048
   \   00000E38   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000E3C   0820A0E1           MOV      R2,R8
   \   00000E40   451F8DE2           ADD      R1,SP,#+276
   \   00000E44   801E81E2           ADD      R1,R1,#+2048
    172                  //AnsiString LogTimeStr   = FloatToAnsiString(LogTime,,8,5);
    173                  LocalString += TabStr1 + KeyWord(C_SD_LOG_TIME) + TabStr3 + (AnsiString)LogTime + CrLfStr;
   \   00000E48   78819FE5           LDR      R8,??SaveSettings_1+0x2C  ;; TabStr3
   \   00000E4C   F8008DE2           ADD      R0,SP,#+248
   \   00000E50   800E80E2           ADD      R0,R0,#+2048
   \   00000E54   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000E58   FC0E9DE5           LDR      R0,[SP, #+3836]
   \   00000E5C   F8108DE2           ADD      R1,SP,#+248
   \   00000E60   622F80E2           ADD      R2,R0,#+392
   \   00000E64   801E81E2           ADD      R1,R1,#+2048
   \   00000E68   DC008DE2           ADD      R0,SP,#+220
   \   00000E6C   800E80E2           ADD      R0,R0,#+2048
   \   00000E70   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000E74   0420A0E1           MOV      R2,R4
   \   00000E78   DC108DE2           ADD      R1,SP,#+220
   \   00000E7C   801E81E2           ADD      R1,R1,#+2048
   \   00000E80   8C0E8DE2           ADD      R0,SP,#+2240
   \   00000E84   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000E88   0530A0E1           MOV      R3,R5
   \   00000E8C   0020A0E3           MOV      R2,#+0
   \   00000E90   8C1E8DE2           ADD      R1,SP,#+2240
   \   00000E94   0D00A0E1           MOV      R0,SP
   \   00000E98   ........           _BLF     ??append,??append??rA
   \   00000E9C   0020A0E3           MOV      R2,#+0
   \   00000EA0   0110A0E3           MOV      R1,#+1
   \   00000EA4   8C0E8DE2           ADD      R0,SP,#+2240
   \   00000EA8   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   00000EAC   0020A0E3           MOV      R2,#+0
   \   00000EB0   0110A0E3           MOV      R1,#+1
   \   00000EB4   DC008DE2           ADD      R0,SP,#+220
   \   00000EB8   800E80E2           ADD      R0,R0,#+2048
   \   00000EBC   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   00000EC0   0020A0E3           MOV      R2,#+0
   \   00000EC4   0110A0E3           MOV      R1,#+1
   \   00000EC8   F8008DE2           ADD      R0,SP,#+248
   \   00000ECC   800E80E2           ADD      R0,R0,#+2048
   \   00000ED0   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   00000ED4   0020A0E3           MOV      R2,#+0
   \   00000ED8   0110A0E3           MOV      R1,#+1
   \   00000EDC   450F8DE2           ADD      R0,SP,#+276
   \   00000EE0   800E80E2           ADD      R0,R0,#+2048
   \   00000EE4   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   00000EE8   0020A0E3           MOV      R2,#+0
   \   00000EEC   0110A0E3           MOV      R1,#+1
   \   00000EF0   930E8DE2           ADD      R0,SP,#+2352
   \   00000EF4   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   00000EF8   541097E5           LDR      R1,[R7, #+84]
   \   00000EFC   B10F8DE2           ADD      R0,SP,#+708
   \   00000F00   C00E80E2           ADD      R0,R0,#+3072
   \   00000F04   ........           _BLF     ??AnsiString_2,??AnsiString??rA_2
   \   00000F08   0090A0E1           MOV      R9,R0
   \   00000F0C   0B108AE3           ORR      R1,R10,#0xB
   \   00000F10   6F0F8DE2           ADD      R0,SP,#+444
   \   00000F14   800E80E2           ADD      R0,R0,#+2048
   \   00000F18   ........           _BLF     ??KeyWord,??KeyWord??rA
   \   00000F1C   6F2F8DE2           ADD      R2,SP,#+444
   \   00000F20   802E82E2           ADD      R2,R2,#+2048
   \   00000F24   0610A0E1           MOV      R1,R6
   \   00000F28   9A0E8DE2           ADD      R0,SP,#+2464
   \   00000F2C   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000F30   0820A0E1           MOV      R2,R8
   \   00000F34   9A1E8DE2           ADD      R1,SP,#+2464
   \   00000F38   610F8DE2           ADD      R0,SP,#+388
   \   00000F3C   800E80E2           ADD      R0,R0,#+2048
   \   00000F40   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000F44   0920A0E1           MOV      R2,R9
   \   00000F48   611F8DE2           ADD      R1,SP,#+388
   \   00000F4C   801E81E2           ADD      R1,R1,#+2048
   \   00000F50   5A0F8DE2           ADD      R0,SP,#+360
   \   00000F54   800E80E2           ADD      R0,R0,#+2048
   \   00000F58   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000F5C   0420A0E1           MOV      R2,R4
   \   00000F60   5A1F8DE2           ADD      R1,SP,#+360
   \   00000F64   801E81E2           ADD      R1,R1,#+2048
   \   00000F68   530F8DE2           ADD      R0,SP,#+332
   \   00000F6C   800E80E2           ADD      R0,R0,#+2048
   \   00000F70   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000F74   0530A0E1           MOV      R3,R5
   \   00000F78   0020A0E3           MOV      R2,#+0
   \   00000F7C   531F8DE2           ADD      R1,SP,#+332
   \   00000F80   801E81E2           ADD      R1,R1,#+2048
   \   00000F84   0D00A0E1           MOV      R0,SP
   \   00000F88   ........           _BLF     ??append,??append??rA
   \   00000F8C   0020A0E3           MOV      R2,#+0
   \   00000F90   0110A0E3           MOV      R1,#+1
   \   00000F94   530F8DE2           ADD      R0,SP,#+332
   \   00000F98   0B0000EA           B        ??SaveSettings_6
   \                     ??SaveSettings_1:
   \   00000F9C   ........           DC32     ??WriteAll
   \   00000FA0   ........           DC32     CrLfStr
   \   00000FA4   ........           DC32     TabStr1
   \   00000FA8   ........           DC32     TabStr2
   \   00000FAC   ........           DC32     ??npos
   \   00000FB0   ........           DC32     ??TXUSystemData
   \   00000FB4   ........           DC32     ??ObjectSet + 16
   \   00000FB8   ........           DC32     ??ObjectSet_1 + 16
   \   00000FBC   ........           DC32     ??ObjectSet_2 + 16
   \   00000FC0   ........           DC32     ??PRODraftSysPtr
   \   00000FC4   ........           DC32     TouchScreenTimeOut
   \   00000FC8   ........           DC32     TabStr3
   \                     ??SaveSettings_6:
   \   00000FCC   800E80E2           ADD      R0,R0,#+2048
   \   00000FD0   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   00000FD4   0020A0E3           MOV      R2,#+0
   \   00000FD8   0110A0E3           MOV      R1,#+1
   \   00000FDC   5A0F8DE2           ADD      R0,SP,#+360
   \   00000FE0   800E80E2           ADD      R0,R0,#+2048
   \   00000FE4   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   00000FE8   0020A0E3           MOV      R2,#+0
   \   00000FEC   0110A0E3           MOV      R1,#+1
   \   00000FF0   B10F8DE2           ADD      R0,SP,#+708
   \   00000FF4   C00E80E2           ADD      R0,R0,#+3072
   \   00000FF8   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   00000FFC   0020A0E3           MOV      R2,#+0
   \   00001000   0110A0E3           MOV      R1,#+1
   \   00001004   610F8DE2           ADD      R0,SP,#+388
   \   00001008   800E80E2           ADD      R0,R0,#+2048
   \   0000100C   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   00001010   0020A0E3           MOV      R2,#+0
   \   00001014   0110A0E3           MOV      R1,#+1
   \   00001018   9A0E8DE2           ADD      R0,SP,#+2464
   \   0000101C   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   00001020   0020A0E3           MOV      R2,#+0
   \   00001024   0110A0E3           MOV      R1,#+1
   \   00001028   6F0F8DE2           ADD      R0,SP,#+444
   \   0000102C   800E80E2           ADD      R0,R0,#+2048
   \   00001030   ........           _BLF     ??_Tidy_1,??_Tidy??rA
    174                  if (LogToFile)          LocalString += TabStr1 + KeyWord(C_SD_LOG_TO_FILE) + CrLfStr;
   \   00001034   5900D7E5           LDRB     R0,[R7, #+89]
   \   00001038   000050E3           CMP      R0,#+0
   \   0000103C   1B00000A           BEQ      ??SaveSettings_7
   \   00001040   0C108AE2           ADD      R1,R10,#+12
   \   00001044   1C008DE2           ADD      R0,SP,#+28
   \   00001048   ........           _BLF     ??KeyWord,??KeyWord??rA
   \   0000104C   1C208DE2           ADD      R2,SP,#+28
   \   00001050   0610A0E1           MOV      R1,R6
   \   00001054   38008DE2           ADD      R0,SP,#+56
   \   00001058   ........           _BLF     `??operator+`,`??operator+??rA`
   \   0000105C   0420A0E1           MOV      R2,R4
   \   00001060   38108DE2           ADD      R1,SP,#+56
   \   00001064   54008DE2           ADD      R0,SP,#+84
   \   00001068   ........           _BLF     `??operator+`,`??operator+??rA`
   \   0000106C   0530A0E1           MOV      R3,R5
   \   00001070   0020A0E3           MOV      R2,#+0
   \   00001074   54108DE2           ADD      R1,SP,#+84
   \   00001078   0D00A0E1           MOV      R0,SP
   \   0000107C   ........           _BLF     ??append,??append??rA
   \   00001080   0020A0E3           MOV      R2,#+0
   \   00001084   0110A0E3           MOV      R1,#+1
   \   00001088   54008DE2           ADD      R0,SP,#+84
   \   0000108C   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   00001090   0020A0E3           MOV      R2,#+0
   \   00001094   0110A0E3           MOV      R1,#+1
   \   00001098   38008DE2           ADD      R0,SP,#+56
   \   0000109C   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   000010A0   0020A0E3           MOV      R2,#+0
   \   000010A4   0110A0E3           MOV      R1,#+1
   \   000010A8   1C008DE2           ADD      R0,SP,#+28
   \   000010AC   ........           _BLF     ??_Tidy_1,??_Tidy??rA
    175                  if (LogAlarms)          LocalString += TabStr1 + KeyWord(C_SD_LOG_ALARMS) + CrLfStr;
   \                     ??SaveSettings_7:
   \   000010B0   5A00D7E5           LDRB     R0,[R7, #+90]
   \   000010B4   000050E3           CMP      R0,#+0
   \   000010B8   1B00000A           BEQ      ??SaveSettings_8
   \   000010BC   0D108AE2           ADD      R1,R10,#+13
   \   000010C0   54008DE2           ADD      R0,SP,#+84
   \   000010C4   ........           _BLF     ??KeyWord,??KeyWord??rA
   \   000010C8   54208DE2           ADD      R2,SP,#+84
   \   000010CC   0610A0E1           MOV      R1,R6
   \   000010D0   38008DE2           ADD      R0,SP,#+56
   \   000010D4   ........           _BLF     `??operator+`,`??operator+??rA`
   \   000010D8   0420A0E1           MOV      R2,R4
   \   000010DC   38108DE2           ADD      R1,SP,#+56
   \   000010E0   1C008DE2           ADD      R0,SP,#+28
   \   000010E4   ........           _BLF     `??operator+`,`??operator+??rA`
   \   000010E8   0530A0E1           MOV      R3,R5
   \   000010EC   0020A0E3           MOV      R2,#+0
   \   000010F0   1C108DE2           ADD      R1,SP,#+28
   \   000010F4   0D00A0E1           MOV      R0,SP
   \   000010F8   ........           _BLF     ??append,??append??rA
   \   000010FC   0020A0E3           MOV      R2,#+0
   \   00001100   0110A0E3           MOV      R1,#+1
   \   00001104   1C008DE2           ADD      R0,SP,#+28
   \   00001108   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   0000110C   0020A0E3           MOV      R2,#+0
   \   00001110   0110A0E3           MOV      R1,#+1
   \   00001114   38008DE2           ADD      R0,SP,#+56
   \   00001118   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   0000111C   0020A0E3           MOV      R2,#+0
   \   00001120   0110A0E3           MOV      R1,#+1
   \   00001124   54008DE2           ADD      R0,SP,#+84
   \   00001128   ........           _BLF     ??_Tidy_1,??_Tidy??rA
    176                  if (LogBallastExchange) LocalString += TabStr1 + KeyWord(C_SD_LOG_BALLAST_EXCH) + CrLfStr;
   \                     ??SaveSettings_8:
   \   0000112C   5B00D7E5           LDRB     R0,[R7, #+91]
   \   00001130   000050E3           CMP      R0,#+0
   \   00001134   1B00000A           BEQ      ??SaveSettings_9
   \   00001138   0E108AE2           ADD      R1,R10,#+14
   \   0000113C   1C008DE2           ADD      R0,SP,#+28
   \   00001140   ........           _BLF     ??KeyWord,??KeyWord??rA
   \   00001144   1C208DE2           ADD      R2,SP,#+28
   \   00001148   0610A0E1           MOV      R1,R6
   \   0000114C   38008DE2           ADD      R0,SP,#+56
   \   00001150   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00001154   0420A0E1           MOV      R2,R4
   \   00001158   38108DE2           ADD      R1,SP,#+56
   \   0000115C   54008DE2           ADD      R0,SP,#+84
   \   00001160   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00001164   0530A0E1           MOV      R3,R5
   \   00001168   0020A0E3           MOV      R2,#+0
   \   0000116C   54108DE2           ADD      R1,SP,#+84
   \   00001170   0D00A0E1           MOV      R0,SP
   \   00001174   ........           _BLF     ??append,??append??rA
   \   00001178   0020A0E3           MOV      R2,#+0
   \   0000117C   0110A0E3           MOV      R1,#+1
   \   00001180   54008DE2           ADD      R0,SP,#+84
   \   00001184   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   00001188   0020A0E3           MOV      R2,#+0
   \   0000118C   0110A0E3           MOV      R1,#+1
   \   00001190   38008DE2           ADD      R0,SP,#+56
   \   00001194   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   00001198   0020A0E3           MOV      R2,#+0
   \   0000119C   0110A0E3           MOV      R1,#+1
   \   000011A0   1C008DE2           ADD      R0,SP,#+28
   \   000011A4   ........           _BLF     ??_Tidy_1,??_Tidy??rA
    177                  if (LogCargo)           LocalString += TabStr1 + KeyWord(C_SD_LOG_CARGO) + CrLfStr;
   \                     ??SaveSettings_9:
   \   000011A8   5C00D7E5           LDRB     R0,[R7, #+92]
   \   000011AC   000050E3           CMP      R0,#+0
   \   000011B0   1B00000A           BEQ      ??SaveSettings_10
   \   000011B4   0F108AE2           ADD      R1,R10,#+15
   \   000011B8   54008DE2           ADD      R0,SP,#+84
   \   000011BC   ........           _BLF     ??KeyWord,??KeyWord??rA
   \   000011C0   54208DE2           ADD      R2,SP,#+84
   \   000011C4   0610A0E1           MOV      R1,R6
   \   000011C8   38008DE2           ADD      R0,SP,#+56
   \   000011CC   ........           _BLF     `??operator+`,`??operator+??rA`
   \   000011D0   0420A0E1           MOV      R2,R4
   \   000011D4   38108DE2           ADD      R1,SP,#+56
   \   000011D8   1C008DE2           ADD      R0,SP,#+28
   \   000011DC   ........           _BLF     `??operator+`,`??operator+??rA`
   \   000011E0   0530A0E1           MOV      R3,R5
   \   000011E4   0020A0E3           MOV      R2,#+0
   \   000011E8   1C108DE2           ADD      R1,SP,#+28
   \   000011EC   0D00A0E1           MOV      R0,SP
   \   000011F0   ........           _BLF     ??append,??append??rA
   \   000011F4   0020A0E3           MOV      R2,#+0
   \   000011F8   0110A0E3           MOV      R1,#+1
   \   000011FC   1C008DE2           ADD      R0,SP,#+28
   \   00001200   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   00001204   0020A0E3           MOV      R2,#+0
   \   00001208   0110A0E3           MOV      R1,#+1
   \   0000120C   38008DE2           ADD      R0,SP,#+56
   \   00001210   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   00001214   0020A0E3           MOV      R2,#+0
   \   00001218   0110A0E3           MOV      R1,#+1
   \   0000121C   54008DE2           ADD      R0,SP,#+84
   \   00001220   ........           _BLF     ??_Tidy_1,??_Tidy??rA
    178                  if (LogService)         LocalString += TabStr1 + KeyWord(C_SD_LOG_SERVICE) + CrLfStr;
   \                     ??SaveSettings_10:
   \   00001224   5D00D7E5           LDRB     R0,[R7, #+93]
   \   00001228   000050E3           CMP      R0,#+0
   \   0000122C   1B00000A           BEQ      ??SaveSettings_11
   \   00001230   10108AE3           ORR      R1,R10,#0x10
   \   00001234   1C008DE2           ADD      R0,SP,#+28
   \   00001238   ........           _BLF     ??KeyWord,??KeyWord??rA
   \   0000123C   1C208DE2           ADD      R2,SP,#+28
   \   00001240   0610A0E1           MOV      R1,R6
   \   00001244   38008DE2           ADD      R0,SP,#+56
   \   00001248   ........           _BLF     `??operator+`,`??operator+??rA`
   \   0000124C   0420A0E1           MOV      R2,R4
   \   00001250   38108DE2           ADD      R1,SP,#+56
   \   00001254   54008DE2           ADD      R0,SP,#+84
   \   00001258   ........           _BLF     `??operator+`,`??operator+??rA`
   \   0000125C   0530A0E1           MOV      R3,R5
   \   00001260   0020A0E3           MOV      R2,#+0
   \   00001264   54108DE2           ADD      R1,SP,#+84
   \   00001268   0D00A0E1           MOV      R0,SP
   \   0000126C   ........           _BLF     ??append,??append??rA
   \   00001270   0020A0E3           MOV      R2,#+0
   \   00001274   0110A0E3           MOV      R1,#+1
   \   00001278   54008DE2           ADD      R0,SP,#+84
   \   0000127C   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   00001280   0020A0E3           MOV      R2,#+0
   \   00001284   0110A0E3           MOV      R1,#+1
   \   00001288   38008DE2           ADD      R0,SP,#+56
   \   0000128C   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   00001290   0020A0E3           MOV      R2,#+0
   \   00001294   0110A0E3           MOV      R1,#+1
   \   00001298   1C008DE2           ADD      R0,SP,#+28
   \   0000129C   ........           _BLF     ??_Tidy_1,??_Tidy??rA
    179                  if (LogTemperature)     LocalString += TabStr1 + KeyWord(C_SD_LOG_TEMPERATURE) + CrLfStr;
   \                     ??SaveSettings_11:
   \   000012A0   5E00D7E5           LDRB     R0,[R7, #+94]
   \   000012A4   000050E3           CMP      R0,#+0
   \   000012A8   1B00000A           BEQ      ??SaveSettings_12
   \   000012AC   11108AE3           ORR      R1,R10,#0x11
   \   000012B0   54008DE2           ADD      R0,SP,#+84
   \   000012B4   ........           _BLF     ??KeyWord,??KeyWord??rA
   \   000012B8   54208DE2           ADD      R2,SP,#+84
   \   000012BC   0610A0E1           MOV      R1,R6
   \   000012C0   38008DE2           ADD      R0,SP,#+56
   \   000012C4   ........           _BLF     `??operator+`,`??operator+??rA`
   \   000012C8   0420A0E1           MOV      R2,R4
   \   000012CC   38108DE2           ADD      R1,SP,#+56
   \   000012D0   1C008DE2           ADD      R0,SP,#+28
   \   000012D4   ........           _BLF     `??operator+`,`??operator+??rA`
   \   000012D8   0530A0E1           MOV      R3,R5
   \   000012DC   0020A0E3           MOV      R2,#+0
   \   000012E0   1C108DE2           ADD      R1,SP,#+28
   \   000012E4   0D00A0E1           MOV      R0,SP
   \   000012E8   ........           _BLF     ??append,??append??rA
   \   000012EC   0020A0E3           MOV      R2,#+0
   \   000012F0   0110A0E3           MOV      R1,#+1
   \   000012F4   1C008DE2           ADD      R0,SP,#+28
   \   000012F8   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   000012FC   0020A0E3           MOV      R2,#+0
   \   00001300   0110A0E3           MOV      R1,#+1
   \   00001304   38008DE2           ADD      R0,SP,#+56
   \   00001308   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   0000130C   0020A0E3           MOV      R2,#+0
   \   00001310   0110A0E3           MOV      R1,#+1
   \   00001314   54008DE2           ADD      R0,SP,#+84
   \   00001318   ........           _BLF     ??_Tidy_1,??_Tidy??rA
    180                  if (LogTankPressure)    LocalString += TabStr1 + KeyWord(C_SD_LOG_TANK_PRESSURE) + CrLfStr;
   \                     ??SaveSettings_12:
   \   0000131C   5F00D7E5           LDRB     R0,[R7, #+95]
   \   00001320   000050E3           CMP      R0,#+0
   \   00001324   1B00000A           BEQ      ??SaveSettings_13
   \   00001328   12108AE3           ORR      R1,R10,#0x12
   \   0000132C   1C008DE2           ADD      R0,SP,#+28
   \   00001330   ........           _BLF     ??KeyWord,??KeyWord??rA
   \   00001334   1C208DE2           ADD      R2,SP,#+28
   \   00001338   0610A0E1           MOV      R1,R6
   \   0000133C   38008DE2           ADD      R0,SP,#+56
   \   00001340   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00001344   0420A0E1           MOV      R2,R4
   \   00001348   38108DE2           ADD      R1,SP,#+56
   \   0000134C   54008DE2           ADD      R0,SP,#+84
   \   00001350   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00001354   0530A0E1           MOV      R3,R5
   \   00001358   0020A0E3           MOV      R2,#+0
   \   0000135C   54108DE2           ADD      R1,SP,#+84
   \   00001360   0D00A0E1           MOV      R0,SP
   \   00001364   ........           _BLF     ??append,??append??rA
   \   00001368   0020A0E3           MOV      R2,#+0
   \   0000136C   0110A0E3           MOV      R1,#+1
   \   00001370   54008DE2           ADD      R0,SP,#+84
   \   00001374   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   00001378   0020A0E3           MOV      R2,#+0
   \   0000137C   0110A0E3           MOV      R1,#+1
   \   00001380   38008DE2           ADD      R0,SP,#+56
   \   00001384   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   00001388   0020A0E3           MOV      R2,#+0
   \   0000138C   0110A0E3           MOV      R1,#+1
   \   00001390   1C008DE2           ADD      R0,SP,#+28
   \   00001394   ........           _BLF     ??_Tidy_1,??_Tidy??rA
    181                  if (PrinterOnThisTXU)   LocalString += TabStr1 + KeyWord(C_SD_PRINTER_ON_TDU) + CrLfStr;
   \                     ??SaveSettings_13:
   \   00001398   6000D7E5           LDRB     R0,[R7, #+96]
   \   0000139C   000050E3           CMP      R0,#+0
   \   000013A0   1B00000A           BEQ      ??SaveSettings_14
   \   000013A4   13108AE3           ORR      R1,R10,#0x13
   \   000013A8   54008DE2           ADD      R0,SP,#+84
   \   000013AC   ........           _BLF     ??KeyWord,??KeyWord??rA
   \   000013B0   54208DE2           ADD      R2,SP,#+84
   \   000013B4   0610A0E1           MOV      R1,R6
   \   000013B8   38008DE2           ADD      R0,SP,#+56
   \   000013BC   ........           _BLF     `??operator+`,`??operator+??rA`
   \   000013C0   0420A0E1           MOV      R2,R4
   \   000013C4   38108DE2           ADD      R1,SP,#+56
   \   000013C8   1C008DE2           ADD      R0,SP,#+28
   \   000013CC   ........           _BLF     `??operator+`,`??operator+??rA`
   \   000013D0   0530A0E1           MOV      R3,R5
   \   000013D4   0020A0E3           MOV      R2,#+0
   \   000013D8   1C108DE2           ADD      R1,SP,#+28
   \   000013DC   0D00A0E1           MOV      R0,SP
   \   000013E0   ........           _BLF     ??append,??append??rA
   \   000013E4   0020A0E3           MOV      R2,#+0
   \   000013E8   0110A0E3           MOV      R1,#+1
   \   000013EC   1C008DE2           ADD      R0,SP,#+28
   \   000013F0   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   000013F4   0020A0E3           MOV      R2,#+0
   \   000013F8   0110A0E3           MOV      R1,#+1
   \   000013FC   38008DE2           ADD      R0,SP,#+56
   \   00001400   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   00001404   0020A0E3           MOV      R2,#+0
   \   00001408   0110A0E3           MOV      R1,#+1
   \   0000140C   54008DE2           ADD      R0,SP,#+84
   \   00001410   ........           _BLF     ??_Tidy_1,??_Tidy??rA
    182                  if (ReceiveWeightVolume)LocalString += TabStr1 + KeyWord(C_SD_RECEIVE_VOL_WGT) + CrLfStr;
   \                     ??SaveSettings_14:
   \   00001414   6100D7E5           LDRB     R0,[R7, #+97]
   \   00001418   000050E3           CMP      R0,#+0
   \   0000141C   1B00000A           BEQ      ??SaveSettings_15
   \   00001420   14108AE2           ADD      R1,R10,#+20
   \   00001424   1C008DE2           ADD      R0,SP,#+28
   \   00001428   ........           _BLF     ??KeyWord,??KeyWord??rA
   \   0000142C   1C208DE2           ADD      R2,SP,#+28
   \   00001430   0610A0E1           MOV      R1,R6
   \   00001434   38008DE2           ADD      R0,SP,#+56
   \   00001438   ........           _BLF     `??operator+`,`??operator+??rA`
   \   0000143C   0420A0E1           MOV      R2,R4
   \   00001440   38108DE2           ADD      R1,SP,#+56
   \   00001444   54008DE2           ADD      R0,SP,#+84
   \   00001448   ........           _BLF     `??operator+`,`??operator+??rA`
   \   0000144C   0530A0E1           MOV      R3,R5
   \   00001450   0020A0E3           MOV      R2,#+0
   \   00001454   54108DE2           ADD      R1,SP,#+84
   \   00001458   0D00A0E1           MOV      R0,SP
   \   0000145C   ........           _BLF     ??append,??append??rA
   \   00001460   0020A0E3           MOV      R2,#+0
   \   00001464   0110A0E3           MOV      R1,#+1
   \   00001468   54008DE2           ADD      R0,SP,#+84
   \   0000146C   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   00001470   0020A0E3           MOV      R2,#+0
   \   00001474   0110A0E3           MOV      R1,#+1
   \   00001478   38008DE2           ADD      R0,SP,#+56
   \   0000147C   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   00001480   0020A0E3           MOV      R2,#+0
   \   00001484   0110A0E3           MOV      R1,#+1
   \   00001488   1C008DE2           ADD      R0,SP,#+28
   \   0000148C   ........           _BLF     ??_Tidy_1,??_Tidy??rA
    183          
    184                  LocalString += TabStr1 + KeyWord(C_MOD_USER) + TabStr3 + AnsiString((unsigned)LastTimeModified) + CrLfStr;
   \                     ??SaveSettings_15:
   \   00001490   FC0E9DE5           LDR      R0,[SP, #+3836]
   \   00001494   841190E5           LDR      R1,[R0, #+388]
   \   00001498   EE0E8DE2           ADD      R0,SP,#+3808
   \   0000149C   ........           _BLF     ??AnsiString_3,??AnsiString??rA_3
   \   000014A0   0070A0E1           MOV      R7,R0
   \   000014A4   CD10A0E3           MOV      R1,#+205
   \   000014A8   801E81E3           ORR      R1,R1,#0x800
   \   000014AC   920F8DE2           ADD      R0,SP,#+584
   \   000014B0   800E80E2           ADD      R0,R0,#+2048
   \   000014B4   ........           _BLF     ??KeyWord,??KeyWord??rA
   \   000014B8   922F8DE2           ADD      R2,SP,#+584
   \   000014BC   802E82E2           ADD      R2,R2,#+2048
   \   000014C0   0610A0E1           MOV      R1,R6
   \   000014C4   8B0F8DE2           ADD      R0,SP,#+556
   \   000014C8   800E80E2           ADD      R0,R0,#+2048
   \   000014CC   ........           _BLF     `??operator+`,`??operator+??rA`
   \   000014D0   0820A0E1           MOV      R2,R8
   \   000014D4   8B1F8DE2           ADD      R1,SP,#+556
   \   000014D8   801E81E2           ADD      R1,R1,#+2048
   \   000014DC   A10E8DE2           ADD      R0,SP,#+2576
   \   000014E0   ........           _BLF     `??operator+`,`??operator+??rA`
   \   000014E4   0720A0E1           MOV      R2,R7
   \   000014E8   A11E8DE2           ADD      R1,SP,#+2576
   \   000014EC   7D0F8DE2           ADD      R0,SP,#+500
   \   000014F0   800E80E2           ADD      R0,R0,#+2048
   \   000014F4   ........           _BLF     `??operator+`,`??operator+??rA`
   \   000014F8   0420A0E1           MOV      R2,R4
   \   000014FC   7D1F8DE2           ADD      R1,SP,#+500
   \   00001500   801E81E2           ADD      R1,R1,#+2048
   \   00001504   760F8DE2           ADD      R0,SP,#+472
   \   00001508   800E80E2           ADD      R0,R0,#+2048
   \   0000150C   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00001510   0530A0E1           MOV      R3,R5
   \   00001514   0020A0E3           MOV      R2,#+0
   \   00001518   761F8DE2           ADD      R1,SP,#+472
   \   0000151C   801E81E2           ADD      R1,R1,#+2048
   \   00001520   0D00A0E1           MOV      R0,SP
   \   00001524   ........           _BLF     ??append,??append??rA
   \   00001528   0020A0E3           MOV      R2,#+0
   \   0000152C   0110A0E3           MOV      R1,#+1
   \   00001530   760F8DE2           ADD      R0,SP,#+472
   \   00001534   800E80E2           ADD      R0,R0,#+2048
   \   00001538   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   0000153C   0020A0E3           MOV      R2,#+0
   \   00001540   0110A0E3           MOV      R1,#+1
   \   00001544   7D0F8DE2           ADD      R0,SP,#+500
   \   00001548   800E80E2           ADD      R0,R0,#+2048
   \   0000154C   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   00001550   0020A0E3           MOV      R2,#+0
   \   00001554   0110A0E3           MOV      R1,#+1
   \   00001558   EE0E8DE2           ADD      R0,SP,#+3808
   \   0000155C   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   00001560   0020A0E3           MOV      R2,#+0
   \   00001564   0110A0E3           MOV      R1,#+1
   \   00001568   A10E8DE2           ADD      R0,SP,#+2576
   \   0000156C   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   00001570   0020A0E3           MOV      R2,#+0
   \   00001574   0110A0E3           MOV      R1,#+1
   \   00001578   8B0F8DE2           ADD      R0,SP,#+556
   \   0000157C   800E80E2           ADD      R0,R0,#+2048
   \   00001580   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   00001584   0020A0E3           MOV      R2,#+0
   \   00001588   0110A0E3           MOV      R1,#+1
   \   0000158C   920F8DE2           ADD      R0,SP,#+584
   \   00001590   800E80E2           ADD      R0,R0,#+2048
   \   00001594   ........           _BLF     ??_Tidy_1,??_Tidy??rA
    185                  LocalString += KeyWord(C_PRO_END) + CrLfStr;
   \   00001598   FA1FA0E3           MOV      R1,#+1000
   \   0000159C   A80E8DE2           ADD      R0,SP,#+2688
   \   000015A0   ........           _BLF     ??KeyWord,??KeyWord??rA
   \   000015A4   0420A0E1           MOV      R2,R4
   \   000015A8   A81E8DE2           ADD      R1,SP,#+2688
   \   000015AC   990F8DE2           ADD      R0,SP,#+612
   \   000015B0   800E80E2           ADD      R0,R0,#+2048
   \   000015B4   ........           _BLF     `??operator+`,`??operator+??rA`
   \   000015B8   0530A0E1           MOV      R3,R5
   \   000015BC   0020A0E3           MOV      R2,#+0
   \   000015C0   991F8DE2           ADD      R1,SP,#+612
   \   000015C4   801E81E2           ADD      R1,R1,#+2048
   \   000015C8   0D00A0E1           MOV      R0,SP
   \   000015CC   ........           _BLF     ??append,??append??rA
   \   000015D0   0020A0E3           MOV      R2,#+0
   \   000015D4   0110A0E3           MOV      R1,#+1
   \   000015D8   990F8DE2           ADD      R0,SP,#+612
   \   000015DC   800E80E2           ADD      R0,R0,#+2048
   \   000015E0   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   000015E4   0020A0E3           MOV      R2,#+0
   \   000015E8   0110A0E3           MOV      R1,#+1
   \   000015EC   A80E8DE2           ADD      R0,SP,#+2688
   \   000015F0   ........           _BLF     ??_Tidy_1,??_Tidy??rA
    186                  LocalString += CrLfStr;
   \   000015F4   0530A0E1           MOV      R3,R5
   \   000015F8   0020A0E3           MOV      R2,#+0
   \   000015FC   0410A0E1           MOV      R1,R4
   \   00001600   0D00A0E1           MOV      R0,SP
   \   00001604   ........           _BLF     ??append,??append??rA
    187                  SettingsString->AddString(LocalString);
   \   00001608   0D10A0E1           MOV      R1,SP
   \   0000160C   A70F8DE2           ADD      R0,SP,#+668
   \   00001610   800E80E2           ADD      R0,R0,#+2048
   \   00001614   ........           _BLF     ??string,??string??rA
   \   00001618   000F9DE5           LDR      R0,[SP, #+3840]
   \   0000161C   A71F8DE2           ADD      R1,SP,#+668
   \   00001620   801E81E2           ADD      R1,R1,#+2048
   \   00001624   ........           _BLF     ??AddString,??AddString??rA
   \   00001628   0020A0E3           MOV      R2,#+0
   \   0000162C   0110A0E3           MOV      R1,#+1
   \   00001630   A70F8DE2           ADD      R0,SP,#+668
   \   00001634   800E80E2           ADD      R0,R0,#+2048
   \   00001638   ........           _BLF     ??_Tidy_1,??_Tidy??rA
    188              }
   \   0000163C   0020A0E3           MOV      R2,#+0
   \   00001640   0110A0E3           MOV      R1,#+1
   \   00001644   0D00A0E1           MOV      R0,SP
   \   00001648   ........           _BLF     ??_Tidy_1,??_Tidy??rA
    189          }
   \                     ??SaveSettings_2:
   \   0000164C   C1DF8DE2           ADD      SP,SP,#+772
   \   00001650   C0DE8DE2           ADD      SP,SP,#+3072
   \   00001654   ........           B        ??Subroutine25_0
   \                     ??SaveSettings_3:
   \   00001658   141097E5           LDR      R1,[R7, #+20]
   \   0000165C   A8008DE2           ADD      R0,SP,#+168
   \   00001660   ........           _BLF     ??KeyWord,??KeyWord??rA
   \   00001664   0B10A0E1           MOV      R1,R11
   \   00001668   8C008DE2           ADD      R0,SP,#+140
   \   0000166C   ........           _BLF     ??KeyWord,??KeyWord??rA
   \   00001670   8C208DE2           ADD      R2,SP,#+140
   \   00001674   0610A0E1           MOV      R1,R6
   \   00001678   70008DE2           ADD      R0,SP,#+112
   \   0000167C   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00001680   0820A0E1           MOV      R2,R8
   \   00001684   70108DE2           ADD      R1,SP,#+112
   \   00001688   54008DE2           ADD      R0,SP,#+84
   \   0000168C   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00001690   A8208DE2           ADD      R2,SP,#+168
   \   00001694   54108DE2           ADD      R1,SP,#+84
   \   00001698   38008DE2           ADD      R0,SP,#+56
   \   0000169C   ........           _BLF     `??operator+`,`??operator+??rA`
   \   000016A0   0420A0E1           MOV      R2,R4
   \   000016A4   38108DE2           ADD      R1,SP,#+56
   \   000016A8   1C008DE2           ADD      R0,SP,#+28
   \   000016AC   ........           _BLF     `??operator+`,`??operator+??rA`
   \   000016B0   0530A0E1           MOV      R3,R5
   \   000016B4   0020A0E3           MOV      R2,#+0
   \   000016B8   1C108DE2           ADD      R1,SP,#+28
   \   000016BC   0D00A0E1           MOV      R0,SP
   \   000016C0   ........           _BLF     ??append,??append??rA
   \   000016C4   0020A0E3           MOV      R2,#+0
   \   000016C8   0110A0E3           MOV      R1,#+1
   \   000016CC   1C008DE2           ADD      R0,SP,#+28
   \   000016D0   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   000016D4   0020A0E3           MOV      R2,#+0
   \   000016D8   0110A0E3           MOV      R1,#+1
   \   000016DC   38008DE2           ADD      R0,SP,#+56
   \   000016E0   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   000016E4   0020A0E3           MOV      R2,#+0
   \   000016E8   0110A0E3           MOV      R1,#+1
   \   000016EC   A8008DE2           ADD      R0,SP,#+168
   \   000016F0   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   000016F4   0020A0E3           MOV      R2,#+0
   \   000016F8   0110A0E3           MOV      R1,#+1
   \   000016FC   54008DE2           ADD      R0,SP,#+84
   \   00001700   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   00001704   0020A0E3           MOV      R2,#+0
   \   00001708   0110A0E3           MOV      R1,#+1
   \   0000170C   70008DE2           ADD      R0,SP,#+112
   \   00001710   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   00001714   0020A0E3           MOV      R2,#+0
   \   00001718   0110A0E3           MOV      R1,#+1
   \   0000171C   8C008DE2           ADD      R0,SP,#+140
   \   00001720   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   00001724   1C1097E5           LDR      R1,[R7, #+28]
   \   00001728   0330A0E3           MOV      R3,#+3
   \   0000172C   0720A0E3           MOV      R2,#+7
   \   00001730   540F8DE2           ADD      R0,SP,#+336
   \   00001734   ........           _BLF     ??FloatToAnsiString,??FloatToAnsiString??rA
   \   00001738   0A10A0E1           MOV      R1,R10
   \   0000173C   4D0F8DE2           ADD      R0,SP,#+308
   \   00001740   ........           _BLF     ??KeyWord,??KeyWord??rA
   \   00001744   4D2F8DE2           ADD      R2,SP,#+308
   \   00001748   0610A0E1           MOV      R1,R6
   \   0000174C   460F8DE2           ADD      R0,SP,#+280
   \   00001750   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00001754   0820A0E1           MOV      R2,R8
   \   00001758   461F8DE2           ADD      R1,SP,#+280
   \   0000175C   FC008DE2           ADD      R0,SP,#+252
   \   00001760   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00001764   542F8DE2           ADD      R2,SP,#+336
   \   00001768   FC108DE2           ADD      R1,SP,#+252
   \   0000176C   E0008DE2           ADD      R0,SP,#+224
   \   00001770   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00001774   0420A0E1           MOV      R2,R4
   \   00001778   E0108DE2           ADD      R1,SP,#+224
   \   0000177C   C4008DE2           ADD      R0,SP,#+196
   \   00001780   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00001784   0530A0E1           MOV      R3,R5
   \   00001788   0020A0E3           MOV      R2,#+0
   \   0000178C   C4108DE2           ADD      R1,SP,#+196
   \   00001790   0D00A0E1           MOV      R0,SP
   \   00001794   ........           _BLF     ??append,??append??rA
   \   00001798   0020A0E3           MOV      R2,#+0
   \   0000179C   0110A0E3           MOV      R1,#+1
   \   000017A0   C4008DE2           ADD      R0,SP,#+196
   \   000017A4   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   000017A8   0020A0E3           MOV      R2,#+0
   \   000017AC   0110A0E3           MOV      R1,#+1
   \   000017B0   E0008DE2           ADD      R0,SP,#+224
   \   000017B4   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   000017B8   0020A0E3           MOV      R2,#+0
   \   000017BC   0110A0E3           MOV      R1,#+1
   \   000017C0   540F8DE2           ADD      R0,SP,#+336
   \   000017C4   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   000017C8   0020A0E3           MOV      R2,#+0
   \   000017CC   0110A0E3           MOV      R1,#+1
   \   000017D0   FC008DE2           ADD      R0,SP,#+252
   \   000017D4   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   000017D8   0020A0E3           MOV      R2,#+0
   \   000017DC   0110A0E3           MOV      R1,#+1
   \   000017E0   460F8DE2           ADD      R0,SP,#+280
   \   000017E4   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   000017E8   0020A0E3           MOV      R2,#+0
   \   000017EC   0110A0E3           MOV      R1,#+1
   \   000017F0   4D0F8DE2           ADD      R0,SP,#+308
   \   000017F4   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   000017F8   181097E5           LDR      R1,[R7, #+24]
   \   000017FC   7E0F8DE2           ADD      R0,SP,#+504
   \   00001800   ........           _BLF     ??KeyWord,??KeyWord??rA
   \   00001804   0910A0E1           MOV      R1,R9
   \   00001808   770F8DE2           ADD      R0,SP,#+476
   \   0000180C   ........           _BLF     ??KeyWord,??KeyWord??rA
   \   00001810   772F8DE2           ADD      R2,SP,#+476
   \   00001814   0610A0E1           MOV      R1,R6
   \   00001818   700F8DE2           ADD      R0,SP,#+448
   \   0000181C   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00001820   0820A0E1           MOV      R2,R8
   \   00001824   701F8DE2           ADD      R1,SP,#+448
   \   00001828   690F8DE2           ADD      R0,SP,#+420
   \   0000182C   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00001830   7E2F8DE2           ADD      R2,SP,#+504
   \   00001834   691F8DE2           ADD      R1,SP,#+420
   \   00001838   620F8DE2           ADD      R0,SP,#+392
   \   0000183C   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00001840   0420A0E1           MOV      R2,R4
   \   00001844   621F8DE2           ADD      R1,SP,#+392
   \   00001848   5B0F8DE2           ADD      R0,SP,#+364
   \   0000184C   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00001850   0530A0E1           MOV      R3,R5
   \   00001854   0020A0E3           MOV      R2,#+0
   \   00001858   5B1F8DE2           ADD      R1,SP,#+364
   \   0000185C   0D00A0E1           MOV      R0,SP
   \   00001860   ........           _BLF     ??append,??append??rA
   \   00001864   0020A0E3           MOV      R2,#+0
   \   00001868   0110A0E3           MOV      R1,#+1
   \   0000186C   5B0F8DE2           ADD      R0,SP,#+364
   \   00001870   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   00001874   0020A0E3           MOV      R2,#+0
   \   00001878   0110A0E3           MOV      R1,#+1
   \   0000187C   620F8DE2           ADD      R0,SP,#+392
   \   00001880   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   00001884   0020A0E3           MOV      R2,#+0
   \   00001888   0110A0E3           MOV      R1,#+1
   \   0000188C   7E0F8DE2           ADD      R0,SP,#+504
   \   00001890   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   00001894   0020A0E3           MOV      R2,#+0
   \   00001898   0110A0E3           MOV      R1,#+1
   \   0000189C   690F8DE2           ADD      R0,SP,#+420
   \   000018A0   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   000018A4   0020A0E3           MOV      R2,#+0
   \   000018A8   0110A0E3           MOV      R1,#+1
   \   000018AC   700F8DE2           ADD      R0,SP,#+448
   \   000018B0   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   000018B4   0020A0E3           MOV      R2,#+0
   \   000018B8   0110A0E3           MOV      R1,#+1
   \   000018BC   770F8DE2           ADD      R0,SP,#+476
   \   000018C0   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   000018C4   201097E5           LDR      R1,[R7, #+32]
   \   000018C8   0330A0E3           MOV      R3,#+3
   \   000018CC   0720A0E3           MOV      R2,#+7
   \   000018D0   A80F8DE2           ADD      R0,SP,#+672
   \   000018D4   ........           _BLF     ??FloatToAnsiString,??FloatToAnsiString??rA
   \   000018D8   041089E3           ORR      R1,R9,#0x4
   \   000018DC   A10F8DE2           ADD      R0,SP,#+644
   \   000018E0   ........           _BLF     ??KeyWord,??KeyWord??rA
   \   000018E4   A12F8DE2           ADD      R2,SP,#+644
   \   000018E8   0610A0E1           MOV      R1,R6
   \   000018EC   9A0F8DE2           ADD      R0,SP,#+616
   \   000018F0   ........           _BLF     `??operator+`,`??operator+??rA`
   \   000018F4   0820A0E1           MOV      R2,R8
   \   000018F8   9A1F8DE2           ADD      R1,SP,#+616
   \   000018FC   930F8DE2           ADD      R0,SP,#+588
   \   00001900   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00001904   A82F8DE2           ADD      R2,SP,#+672
   \   00001908   931F8DE2           ADD      R1,SP,#+588
   \   0000190C   8C0F8DE2           ADD      R0,SP,#+560
   \   00001910   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00001914   0420A0E1           MOV      R2,R4
   \   00001918   8C1F8DE2           ADD      R1,SP,#+560
   \   0000191C   850F8DE2           ADD      R0,SP,#+532
   \   00001920   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00001924   0530A0E1           MOV      R3,R5
   \   00001928   0020A0E3           MOV      R2,#+0
   \   0000192C   851F8DE2           ADD      R1,SP,#+532
   \   00001930   0D00A0E1           MOV      R0,SP
   \   00001934   ........           _BLF     ??append,??append??rA
   \   00001938   0020A0E3           MOV      R2,#+0
   \   0000193C   0110A0E3           MOV      R1,#+1
   \   00001940   850F8DE2           ADD      R0,SP,#+532
   \   00001944   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   00001948   0020A0E3           MOV      R2,#+0
   \   0000194C   0110A0E3           MOV      R1,#+1
   \   00001950   8C0F8DE2           ADD      R0,SP,#+560
   \   00001954   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   00001958   0020A0E3           MOV      R2,#+0
   \   0000195C   0110A0E3           MOV      R1,#+1
   \   00001960   A80F8DE2           ADD      R0,SP,#+672
   \   00001964   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   00001968   0020A0E3           MOV      R2,#+0
   \   0000196C   0110A0E3           MOV      R1,#+1
   \   00001970   930F8DE2           ADD      R0,SP,#+588
   \   00001974   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   00001978   0020A0E3           MOV      R2,#+0
   \   0000197C   0110A0E3           MOV      R1,#+1
   \   00001980   9A0F8DE2           ADD      R0,SP,#+616
   \   00001984   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   00001988   0020A0E3           MOV      R2,#+0
   \   0000198C   0110A0E3           MOV      R1,#+1
   \   00001990   A10F8DE2           ADD      R0,SP,#+644
   \   00001994   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   00001998   2C1097E5           LDR      R1,[R7, #+44]
   \   0000199C   0330A0E3           MOV      R3,#+3
   \   000019A0   0720A0E3           MOV      R2,#+7
   \   000019A4   D20F8DE2           ADD      R0,SP,#+840
   \   000019A8   ........           _BLF     ??FloatToAnsiString,??FloatToAnsiString??rA
   \   000019AC   081089E3           ORR      R1,R9,#0x8
   \   000019B0   CB0F8DE2           ADD      R0,SP,#+812
   \   000019B4   ........           _BLF     ??KeyWord,??KeyWord??rA
   \   000019B8   CB2F8DE2           ADD      R2,SP,#+812
   \   000019BC   0610A0E1           MOV      R1,R6
   \   000019C0   C40F8DE2           ADD      R0,SP,#+784
   \   000019C4   ........           _BLF     `??operator+`,`??operator+??rA`
   \   000019C8   0820A0E1           MOV      R2,R8
   \   000019CC   C41F8DE2           ADD      R1,SP,#+784
   \   000019D0   BD0F8DE2           ADD      R0,SP,#+756
   \   000019D4   ........           _BLF     `??operator+`,`??operator+??rA`
   \   000019D8   D22F8DE2           ADD      R2,SP,#+840
   \   000019DC   BD1F8DE2           ADD      R1,SP,#+756
   \   000019E0   B60F8DE2           ADD      R0,SP,#+728
   \   000019E4   ........           _BLF     `??operator+`,`??operator+??rA`
   \   000019E8   0420A0E1           MOV      R2,R4
   \   000019EC   B61F8DE2           ADD      R1,SP,#+728
   \   000019F0   AF0F8DE2           ADD      R0,SP,#+700
   \   000019F4   ........           _BLF     `??operator+`,`??operator+??rA`
   \   000019F8   0530A0E1           MOV      R3,R5
   \   000019FC   0020A0E3           MOV      R2,#+0
   \   00001A00   AF1F8DE2           ADD      R1,SP,#+700
   \   00001A04   0D00A0E1           MOV      R0,SP
   \   00001A08   ........           _BLF     ??append,??append??rA
   \   00001A0C   0020A0E3           MOV      R2,#+0
   \   00001A10   0110A0E3           MOV      R1,#+1
   \   00001A14   AF0F8DE2           ADD      R0,SP,#+700
   \   00001A18   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   00001A1C   0020A0E3           MOV      R2,#+0
   \   00001A20   0110A0E3           MOV      R1,#+1
   \   00001A24   B60F8DE2           ADD      R0,SP,#+728
   \   00001A28   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   00001A2C   0020A0E3           MOV      R2,#+0
   \   00001A30   0110A0E3           MOV      R1,#+1
   \   00001A34   D20F8DE2           ADD      R0,SP,#+840
   \   00001A38   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   00001A3C   0020A0E3           MOV      R2,#+0
   \   00001A40   0110A0E3           MOV      R1,#+1
   \   00001A44   BD0F8DE2           ADD      R0,SP,#+756
   \   00001A48   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   00001A4C   0020A0E3           MOV      R2,#+0
   \   00001A50   0110A0E3           MOV      R1,#+1
   \   00001A54   C40F8DE2           ADD      R0,SP,#+784
   \   00001A58   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   00001A5C   0020A0E3           MOV      R2,#+0
   \   00001A60   0110A0E3           MOV      R1,#+1
   \   00001A64   CB0F8DE2           ADD      R0,SP,#+812
   \   00001A68   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   00001A6C   341097E5           LDR      R1,[R7, #+52]
   \   00001A70   0330A0E3           MOV      R3,#+3
   \   00001A74   0720A0E3           MOV      R2,#+7
   \   00001A78   FC0F8DE2           ADD      R0,SP,#+1008
   \   00001A7C   ........           _BLF     ??FloatToAnsiString,??FloatToAnsiString??rA
   \   00001A80   091089E2           ADD      R1,R9,#+9
   \   00001A84   F50F8DE2           ADD      R0,SP,#+980
   \   00001A88   ........           _BLF     ??KeyWord,??KeyWord??rA
   \   00001A8C   F52F8DE2           ADD      R2,SP,#+980
   \   00001A90   0610A0E1           MOV      R1,R6
   \   00001A94   EE0F8DE2           ADD      R0,SP,#+952
   \   00001A98   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00001A9C   0620A0E1           MOV      R2,R6
   \   00001AA0   EE1F8DE2           ADD      R1,SP,#+952
   \   00001AA4   E70F8DE2           ADD      R0,SP,#+924
   \   00001AA8   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00001AAC   FC2F8DE2           ADD      R2,SP,#+1008
   \   00001AB0   E71F8DE2           ADD      R1,SP,#+924
   \   00001AB4   E00F8DE2           ADD      R0,SP,#+896
   \   00001AB8   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00001ABC   0420A0E1           MOV      R2,R4
   \   00001AC0   E01F8DE2           ADD      R1,SP,#+896
   \   00001AC4   D90F8DE2           ADD      R0,SP,#+868
   \   00001AC8   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00001ACC   0530A0E1           MOV      R3,R5
   \   00001AD0   0020A0E3           MOV      R2,#+0
   \   00001AD4   D91F8DE2           ADD      R1,SP,#+868
   \   00001AD8   0D00A0E1           MOV      R0,SP
   \   00001ADC   ........           _BLF     ??append,??append??rA
   \   00001AE0   0020A0E3           MOV      R2,#+0
   \   00001AE4   0110A0E3           MOV      R1,#+1
   \   00001AE8   D90F8DE2           ADD      R0,SP,#+868
   \   00001AEC   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   00001AF0   0020A0E3           MOV      R2,#+0
   \   00001AF4   0110A0E3           MOV      R1,#+1
   \   00001AF8   E00F8DE2           ADD      R0,SP,#+896
   \   00001AFC   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   00001B00   0020A0E3           MOV      R2,#+0
   \   00001B04   0110A0E3           MOV      R1,#+1
   \   00001B08   FC0F8DE2           ADD      R0,SP,#+1008
   \   00001B0C   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   00001B10   0020A0E3           MOV      R2,#+0
   \   00001B14   0110A0E3           MOV      R1,#+1
   \   00001B18   E70F8DE2           ADD      R0,SP,#+924
   \   00001B1C   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   00001B20   0020A0E3           MOV      R2,#+0
   \   00001B24   0110A0E3           MOV      R1,#+1
   \   00001B28   EE0F8DE2           ADD      R0,SP,#+952
   \   00001B2C   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   00001B30   0020A0E3           MOV      R2,#+0
   \   00001B34   0110A0E3           MOV      R1,#+1
   \   00001B38   F50F8DE2           ADD      R0,SP,#+980
   \   00001B3C   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   00001B40   381097E5           LDR      R1,[R7, #+56]
   \   00001B44   0330A0E3           MOV      R3,#+3
   \   00001B48   0720A0E3           MOV      R2,#+7
   \   00001B4C   98008DE2           ADD      R0,SP,#+152
   \   00001B50   400E80E2           ADD      R0,R0,#+1024
   \   00001B54   ........           _BLF     ??FloatToAnsiString,??FloatToAnsiString??rA
   \   00001B58   0A1089E3           ORR      R1,R9,#0xA
   \   00001B5C   7C008DE2           ADD      R0,SP,#+124
   \   00001B60   400E80E2           ADD      R0,R0,#+1024
   \   00001B64   ........           _BLF     ??KeyWord,??KeyWord??rA
   \   00001B68   7C208DE2           ADD      R2,SP,#+124
   \   00001B6C   402E82E2           ADD      R2,R2,#+1024
   \   00001B70   0610A0E1           MOV      R1,R6
   \   00001B74   460E8DE2           ADD      R0,SP,#+1120
   \   00001B78   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00001B7C   0620A0E1           MOV      R2,R6
   \   00001B80   461E8DE2           ADD      R1,SP,#+1120
   \   00001B84   44008DE2           ADD      R0,SP,#+68
   \   00001B88   400E80E2           ADD      R0,R0,#+1024
   \   00001B8C   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00001B90   98208DE2           ADD      R2,SP,#+152
   \   00001B94   402E82E2           ADD      R2,R2,#+1024
   \   00001B98   44108DE2           ADD      R1,SP,#+68
   \   00001B9C   401E81E2           ADD      R1,R1,#+1024
   \   00001BA0   28008DE2           ADD      R0,SP,#+40
   \   00001BA4   400E80E2           ADD      R0,R0,#+1024
   \   00001BA8   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00001BAC   0420A0E1           MOV      R2,R4
   \   00001BB0   28108DE2           ADD      R1,SP,#+40
   \   00001BB4   401E81E2           ADD      R1,R1,#+1024
   \   00001BB8   0C008DE2           ADD      R0,SP,#+12
   \   00001BBC   400E80E2           ADD      R0,R0,#+1024
   \   00001BC0   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00001BC4   0530A0E1           MOV      R3,R5
   \   00001BC8   0020A0E3           MOV      R2,#+0
   \   00001BCC   0C108DE2           ADD      R1,SP,#+12
   \   00001BD0   401E81E2           ADD      R1,R1,#+1024
   \   00001BD4   0D00A0E1           MOV      R0,SP
   \   00001BD8   ........           _BLF     ??append,??append??rA
   \   00001BDC   0020A0E3           MOV      R2,#+0
   \   00001BE0   0110A0E3           MOV      R1,#+1
   \   00001BE4   0C008DE2           ADD      R0,SP,#+12
   \   00001BE8   400E80E2           ADD      R0,R0,#+1024
   \   00001BEC   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   00001BF0   0020A0E3           MOV      R2,#+0
   \   00001BF4   0110A0E3           MOV      R1,#+1
   \   00001BF8   28008DE2           ADD      R0,SP,#+40
   \   00001BFC   400E80E2           ADD      R0,R0,#+1024
   \   00001C00   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   00001C04   0020A0E3           MOV      R2,#+0
   \   00001C08   0110A0E3           MOV      R1,#+1
   \   00001C0C   98008DE2           ADD      R0,SP,#+152
   \   00001C10   400E80E2           ADD      R0,R0,#+1024
   \   00001C14   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   00001C18   0020A0E3           MOV      R2,#+0
   \   00001C1C   0110A0E3           MOV      R1,#+1
   \   00001C20   44008DE2           ADD      R0,SP,#+68
   \   00001C24   400E80E2           ADD      R0,R0,#+1024
   \   00001C28   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   00001C2C   0020A0E3           MOV      R2,#+0
   \   00001C30   0110A0E3           MOV      R1,#+1
   \   00001C34   460E8DE2           ADD      R0,SP,#+1120
   \   00001C38   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   00001C3C   0020A0E3           MOV      R2,#+0
   \   00001C40   0110A0E3           MOV      R1,#+1
   \   00001C44   7C008DE2           ADD      R0,SP,#+124
   \   00001C48   400E80E2           ADD      R0,R0,#+1024
   \   00001C4C   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   00001C50   0330A0E3           MOV      R3,#+3
   \   00001C54   0720A0E3           MOV      R2,#+7
   \   00001C58   3C1097E5           LDR      R1,[R7, #+60]
   \   00001C5C   D10F8DE2           ADD      R0,SP,#+836
   \   00001C60   800E80E2           ADD      R0,R0,#+2048
   \   00001C64   ........           _BLF     ??FloatToAnsiString,??FloatToAnsiString??rA
   \   00001C68   0B1089E2           ADD      R1,R9,#+11
   \   00001C6C   CA0F8DE2           ADD      R0,SP,#+808
   \   00001C70   800E80E2           ADD      R0,R0,#+2048
   \   00001C74   ........           _BLF     ??KeyWord,??KeyWord??rA
   \   00001C78   CA2F8DE2           ADD      R2,SP,#+808
   \   00001C7C   802E82E2           ADD      R2,R2,#+2048
   \   00001C80   0610A0E1           MOV      R1,R6
   \   00001C84   C30F8DE2           ADD      R0,SP,#+780
   \   00001C88   800E80E2           ADD      R0,R0,#+2048
   \   00001C8C   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00001C90   0820A0E1           MOV      R2,R8
   \   00001C94   C31F8DE2           ADD      R1,SP,#+780
   \   00001C98   801E81E2           ADD      R1,R1,#+2048
   \   00001C9C   AF0E8DE2           ADD      R0,SP,#+2800
   \   00001CA0   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00001CA4   D12F8DE2           ADD      R2,SP,#+836
   \   00001CA8   802E82E2           ADD      R2,R2,#+2048
   \   00001CAC   AF1E8DE2           ADD      R1,SP,#+2800
   \   00001CB0   B50F8DE2           ADD      R0,SP,#+724
   \   00001CB4   800E80E2           ADD      R0,R0,#+2048
   \   00001CB8   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00001CBC   0420A0E1           MOV      R2,R4
   \   00001CC0   B51F8DE2           ADD      R1,SP,#+724
   \   00001CC4   801E81E2           ADD      R1,R1,#+2048
   \   00001CC8   AE0F8DE2           ADD      R0,SP,#+696
   \   00001CCC   800E80E2           ADD      R0,R0,#+2048
   \   00001CD0   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00001CD4   0530A0E1           MOV      R3,R5
   \   00001CD8   0020A0E3           MOV      R2,#+0
   \   00001CDC   AE1F8DE2           ADD      R1,SP,#+696
   \   00001CE0   801E81E2           ADD      R1,R1,#+2048
   \   00001CE4   0D00A0E1           MOV      R0,SP
   \   00001CE8   ........           _BLF     ??append,??append??rA
   \   00001CEC   0020A0E3           MOV      R2,#+0
   \   00001CF0   0110A0E3           MOV      R1,#+1
   \   00001CF4   AE0F8DE2           ADD      R0,SP,#+696
   \   00001CF8   800E80E2           ADD      R0,R0,#+2048
   \   00001CFC   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   00001D00   0020A0E3           MOV      R2,#+0
   \   00001D04   0110A0E3           MOV      R1,#+1
   \   00001D08   B50F8DE2           ADD      R0,SP,#+724
   \   00001D0C   800E80E2           ADD      R0,R0,#+2048
   \   00001D10   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   00001D14   0020A0E3           MOV      R2,#+0
   \   00001D18   0110A0E3           MOV      R1,#+1
   \   00001D1C   D10F8DE2           ADD      R0,SP,#+836
   \   00001D20   800E80E2           ADD      R0,R0,#+2048
   \   00001D24   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   00001D28   0020A0E3           MOV      R2,#+0
   \   00001D2C   0110A0E3           MOV      R1,#+1
   \   00001D30   AF0E8DE2           ADD      R0,SP,#+2800
   \   00001D34   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   00001D38   0020A0E3           MOV      R2,#+0
   \   00001D3C   0110A0E3           MOV      R1,#+1
   \   00001D40   C30F8DE2           ADD      R0,SP,#+780
   \   00001D44   800E80E2           ADD      R0,R0,#+2048
   \   00001D48   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   00001D4C   0020A0E3           MOV      R2,#+0
   \   00001D50   0110A0E3           MOV      R1,#+1
   \   00001D54   CA0F8DE2           ADD      R0,SP,#+808
   \   00001D58   800E80E2           ADD      R0,R0,#+2048
   \   00001D5C   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   00001D60   401097E5           LDR      R1,[R7, #+64]
   \   00001D64   0330A0E3           MOV      R3,#+3
   \   00001D68   0720A0E3           MOV      R2,#+7
   \   00001D6C   FB0F8DE2           ADD      R0,SP,#+1004
   \   00001D70   800E80E2           ADD      R0,R0,#+2048
   \   00001D74   ........           _BLF     ??FloatToAnsiString,??FloatToAnsiString??rA
   \   00001D78   0C1089E3           ORR      R1,R9,#0xC
   \   00001D7C   BD0E8DE2           ADD      R0,SP,#+3024
   \   00001D80   ........           _BLF     ??KeyWord,??KeyWord??rA
   \   00001D84   BD2E8DE2           ADD      R2,SP,#+3024
   \   00001D88   0610A0E1           MOV      R1,R6
   \   00001D8C   ED0F8DE2           ADD      R0,SP,#+948
   \   00001D90   800E80E2           ADD      R0,R0,#+2048
   \   00001D94   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00001D98   0620A0E1           MOV      R2,R6
   \   00001D9C   ED1F8DE2           ADD      R1,SP,#+948
   \   00001DA0   801E81E2           ADD      R1,R1,#+2048
   \   00001DA4   E60F8DE2           ADD      R0,SP,#+920
   \   00001DA8   800E80E2           ADD      R0,R0,#+2048
   \   00001DAC   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00001DB0   FB2F8DE2           ADD      R2,SP,#+1004
   \   00001DB4   802E82E2           ADD      R2,R2,#+2048
   \   00001DB8   E61F8DE2           ADD      R1,SP,#+920
   \   00001DBC   801E81E2           ADD      R1,R1,#+2048
   \   00001DC0   DF0F8DE2           ADD      R0,SP,#+892
   \   00001DC4   800E80E2           ADD      R0,R0,#+2048
   \   00001DC8   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00001DCC   0420A0E1           MOV      R2,R4
   \   00001DD0   DF1F8DE2           ADD      R1,SP,#+892
   \   00001DD4   801E81E2           ADD      R1,R1,#+2048
   \   00001DD8   B60E8DE2           ADD      R0,SP,#+2912
   \   00001DDC   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00001DE0   0530A0E1           MOV      R3,R5
   \   00001DE4   0020A0E3           MOV      R2,#+0
   \   00001DE8   B61E8DE2           ADD      R1,SP,#+2912
   \   00001DEC   0D00A0E1           MOV      R0,SP
   \   00001DF0   ........           _BLF     ??append,??append??rA
   \   00001DF4   0020A0E3           MOV      R2,#+0
   \   00001DF8   0110A0E3           MOV      R1,#+1
   \   00001DFC   B60E8DE2           ADD      R0,SP,#+2912
   \   00001E00   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   00001E04   0020A0E3           MOV      R2,#+0
   \   00001E08   0110A0E3           MOV      R1,#+1
   \   00001E0C   DF0F8DE2           ADD      R0,SP,#+892
   \   00001E10   800E80E2           ADD      R0,R0,#+2048
   \   00001E14   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   00001E18   0020A0E3           MOV      R2,#+0
   \   00001E1C   0110A0E3           MOV      R1,#+1
   \   00001E20   FB0F8DE2           ADD      R0,SP,#+1004
   \   00001E24   800E80E2           ADD      R0,R0,#+2048
   \   00001E28   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   00001E2C   0020A0E3           MOV      R2,#+0
   \   00001E30   0110A0E3           MOV      R1,#+1
   \   00001E34   E60F8DE2           ADD      R0,SP,#+920
   \   00001E38   800E80E2           ADD      R0,R0,#+2048
   \   00001E3C   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   00001E40   0020A0E3           MOV      R2,#+0
   \   00001E44   0110A0E3           MOV      R1,#+1
   \   00001E48   ED0F8DE2           ADD      R0,SP,#+948
   \   00001E4C   800E80E2           ADD      R0,R0,#+2048
   \   00001E50   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   00001E54   0020A0E3           MOV      R2,#+0
   \   00001E58   0110A0E3           MOV      R1,#+1
   \   00001E5C   BD0E8DE2           ADD      R0,SP,#+3024
   \   00001E60   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   00001E64   ........           LDR      R0,??DataTable9  ;; ??PRODraftSysPtr
   \   00001E68   000090E5           LDR      R0,[R0, #+0]
   \   00001E6C   000050E3           CMP      R0,#+0
   \   00001E70   61FAFF0A           BEQ      ??SaveSettings_4
   \   00001E74   441097E5           LDR      R1,[R7, #+68]
   \   00001E78   0330A0E3           MOV      R3,#+3
   \   00001E7C   0720A0E3           MOV      R2,#+7
   \   00001E80   94008DE2           ADD      R0,SP,#+148
   \   00001E84   C00E80E2           ADD      R0,R0,#+3072
   \   00001E88   ........           _BLF     ??FloatToAnsiString,??FloatToAnsiString??rA
   \   00001E8C   051089E2           ADD      R1,R9,#+5
   \   00001E90   78008DE2           ADD      R0,SP,#+120
   \   00001E94   C00E80E2           ADD      R0,R0,#+3072
   \   00001E98   ........           _BLF     ??KeyWord,??KeyWord??rA
   \   00001E9C   78208DE2           ADD      R2,SP,#+120
   \   00001EA0   C02E82E2           ADD      R2,R2,#+3072
   \   00001EA4   0610A0E1           MOV      R1,R6
   \   00001EA8   5C008DE2           ADD      R0,SP,#+92
   \   00001EAC   C00E80E2           ADD      R0,R0,#+3072
   \   00001EB0   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00001EB4   0820A0E1           MOV      R2,R8
   \   00001EB8   5C108DE2           ADD      R1,SP,#+92
   \   00001EBC   C01E81E2           ADD      R1,R1,#+3072
   \   00001EC0   C40E8DE2           ADD      R0,SP,#+3136
   \   00001EC4   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00001EC8   94208DE2           ADD      R2,SP,#+148
   \   00001ECC   C02E82E2           ADD      R2,R2,#+3072
   \   00001ED0   C41E8DE2           ADD      R1,SP,#+3136
   \   00001ED4   24008DE2           ADD      R0,SP,#+36
   \   00001ED8   C00E80E2           ADD      R0,R0,#+3072
   \   00001EDC   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00001EE0   0420A0E1           MOV      R2,R4
   \   00001EE4   24108DE2           ADD      R1,SP,#+36
   \   00001EE8   C01E81E2           ADD      R1,R1,#+3072
   \   00001EEC   08008DE2           ADD      R0,SP,#+8
   \   00001EF0   C00E80E2           ADD      R0,R0,#+3072
   \   00001EF4   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00001EF8   0530A0E1           MOV      R3,R5
   \   00001EFC   0020A0E3           MOV      R2,#+0
   \   00001F00   08108DE2           ADD      R1,SP,#+8
   \   00001F04   C01E81E2           ADD      R1,R1,#+3072
   \   00001F08   0D00A0E1           MOV      R0,SP
   \   00001F0C   ........           _BLF     ??append,??append??rA
   \   00001F10   0020A0E3           MOV      R2,#+0
   \   00001F14   0110A0E3           MOV      R1,#+1
   \   00001F18   08008DE2           ADD      R0,SP,#+8
   \   00001F1C   C00E80E2           ADD      R0,R0,#+3072
   \   00001F20   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   00001F24   0020A0E3           MOV      R2,#+0
   \   00001F28   0110A0E3           MOV      R1,#+1
   \   00001F2C   24008DE2           ADD      R0,SP,#+36
   \   00001F30   C00E80E2           ADD      R0,R0,#+3072
   \   00001F34   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   00001F38   0020A0E3           MOV      R2,#+0
   \   00001F3C   0110A0E3           MOV      R1,#+1
   \   00001F40   94008DE2           ADD      R0,SP,#+148
   \   00001F44   C00E80E2           ADD      R0,R0,#+3072
   \   00001F48   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   00001F4C   0020A0E3           MOV      R2,#+0
   \   00001F50   0110A0E3           MOV      R1,#+1
   \   00001F54   C40E8DE2           ADD      R0,SP,#+3136
   \   00001F58   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   00001F5C   0020A0E3           MOV      R2,#+0
   \   00001F60   0110A0E3           MOV      R1,#+1
   \   00001F64   5C008DE2           ADD      R0,SP,#+92
   \   00001F68   C00E80E2           ADD      R0,R0,#+3072
   \   00001F6C   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   00001F70   0020A0E3           MOV      R2,#+0
   \   00001F74   0110A0E3           MOV      R1,#+1
   \   00001F78   78008DE2           ADD      R0,SP,#+120
   \   00001F7C   C00E80E2           ADD      R0,R0,#+3072
   \   00001F80   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   00001F84   301097E5           LDR      R1,[R7, #+48]
   \   00001F88   0330A0E3           MOV      R3,#+3
   \   00001F8C   0720A0E3           MOV      R2,#+7
   \   00001F90   4F0F8DE2           ADD      R0,SP,#+316
   \   00001F94   C00E80E2           ADD      R0,R0,#+3072
   \   00001F98   ........           _BLF     ??FloatToAnsiString,??FloatToAnsiString??rA
   \   00001F9C   061089E3           ORR      R1,R9,#0x6
   \   00001FA0   D20E8DE2           ADD      R0,SP,#+3360
   \   00001FA4   ........           _BLF     ??KeyWord,??KeyWord??rA
   \   00001FA8   D22E8DE2           ADD      R2,SP,#+3360
   \   00001FAC   0610A0E1           MOV      R1,R6
   \   00001FB0   410F8DE2           ADD      R0,SP,#+260
   \   00001FB4   C00E80E2           ADD      R0,R0,#+3072
   \   00001FB8   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00001FBC   0820A0E1           MOV      R2,R8
   \   00001FC0   411F8DE2           ADD      R1,SP,#+260
   \   00001FC4   C01E81E2           ADD      R1,R1,#+3072
   \   00001FC8   E8008DE2           ADD      R0,SP,#+232
   \   00001FCC   C00E80E2           ADD      R0,R0,#+3072
   \   00001FD0   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00001FD4   4F2F8DE2           ADD      R2,SP,#+316
   \   00001FD8   C02E82E2           ADD      R2,R2,#+3072
   \   00001FDC   E8108DE2           ADD      R1,SP,#+232
   \   00001FE0   C01E81E2           ADD      R1,R1,#+3072
   \   00001FE4   CC008DE2           ADD      R0,SP,#+204
   \   00001FE8   C00E80E2           ADD      R0,R0,#+3072
   \   00001FEC   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00001FF0   0420A0E1           MOV      R2,R4
   \   00001FF4   CC108DE2           ADD      R1,SP,#+204
   \   00001FF8   C01E81E2           ADD      R1,R1,#+3072
   \   00001FFC   CB0E8DE2           ADD      R0,SP,#+3248
   \   00002000   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00002004   0530A0E1           MOV      R3,R5
   \   00002008   0020A0E3           MOV      R2,#+0
   \   0000200C   CB1E8DE2           ADD      R1,SP,#+3248
   \   00002010   0D00A0E1           MOV      R0,SP
   \   00002014   ........           _BLF     ??append,??append??rA
   \   00002018   0020A0E3           MOV      R2,#+0
   \   0000201C   0110A0E3           MOV      R1,#+1
   \   00002020   CB0E8DE2           ADD      R0,SP,#+3248
   \   00002024   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   00002028   0020A0E3           MOV      R2,#+0
   \   0000202C   0110A0E3           MOV      R1,#+1
   \   00002030   CC008DE2           ADD      R0,SP,#+204
   \   00002034   C00E80E2           ADD      R0,R0,#+3072
   \   00002038   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   0000203C   0020A0E3           MOV      R2,#+0
   \   00002040   0110A0E3           MOV      R1,#+1
   \   00002044   4F0F8DE2           ADD      R0,SP,#+316
   \   00002048   C00E80E2           ADD      R0,R0,#+3072
   \   0000204C   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   00002050   0020A0E3           MOV      R2,#+0
   \   00002054   0110A0E3           MOV      R1,#+1
   \   00002058   E8008DE2           ADD      R0,SP,#+232
   \   0000205C   C00E80E2           ADD      R0,R0,#+3072
   \   00002060   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   00002064   0020A0E3           MOV      R2,#+0
   \   00002068   0110A0E3           MOV      R1,#+1
   \   0000206C   410F8DE2           ADD      R0,SP,#+260
   \   00002070   C00E80E2           ADD      R0,R0,#+3072
   \   00002074   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   00002078   0020A0E3           MOV      R2,#+0
   \   0000207C   0110A0E3           MOV      R1,#+1
   \   00002080   D20E8DE2           ADD      R0,SP,#+3360
   \   00002084   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   00002088   481097E5           LDR      R1,[R7, #+72]
   \   0000208C   0330A0E3           MOV      R3,#+3
   \   00002090   0720A0E3           MOV      R2,#+7
   \   00002094   790F8DE2           ADD      R0,SP,#+484
   \   00002098   C00E80E2           ADD      R0,R0,#+3072
   \   0000209C   ........           _BLF     ??FloatToAnsiString,??FloatToAnsiString??rA
   \   000020A0   071089E2           ADD      R1,R9,#+7
   \   000020A4   720F8DE2           ADD      R0,SP,#+456
   \   000020A8   C00E80E2           ADD      R0,R0,#+3072
   \   000020AC   ........           _BLF     ??KeyWord,??KeyWord??rA
   \   000020B0   722F8DE2           ADD      R2,SP,#+456
   \   000020B4   C02E82E2           ADD      R2,R2,#+3072
   \   000020B8   0610A0E1           MOV      R1,R6
   \   000020BC   6B0F8DE2           ADD      R0,SP,#+428
   \   000020C0   C00E80E2           ADD      R0,R0,#+3072
   \   000020C4   ........           _BLF     `??operator+`,`??operator+??rA`
   \   000020C8   0820A0E1           MOV      R2,R8
   \   000020CC   6B1F8DE2           ADD      R1,SP,#+428
   \   000020D0   C01E81E2           ADD      R1,R1,#+3072
   \   000020D4   D90E8DE2           ADD      R0,SP,#+3472
   \   000020D8   ........           _BLF     `??operator+`,`??operator+??rA`
   \   000020DC   792F8DE2           ADD      R2,SP,#+484
   \   000020E0   C02E82E2           ADD      R2,R2,#+3072
   \   000020E4   D91E8DE2           ADD      R1,SP,#+3472
   \   000020E8   5D0F8DE2           ADD      R0,SP,#+372
   \   000020EC   C00E80E2           ADD      R0,R0,#+3072
   \   000020F0   ........           _BLF     `??operator+`,`??operator+??rA`
   \   000020F4   0420A0E1           MOV      R2,R4
   \   000020F8   5D1F8DE2           ADD      R1,SP,#+372
   \   000020FC   C01E81E2           ADD      R1,R1,#+3072
   \   00002100   560F8DE2           ADD      R0,SP,#+344
   \   00002104   C00E80E2           ADD      R0,R0,#+3072
   \   00002108   ........           _BLF     `??operator+`,`??operator+??rA`
   \   0000210C   0530A0E1           MOV      R3,R5
   \   00002110   0020A0E3           MOV      R2,#+0
   \   00002114   561F8DE2           ADD      R1,SP,#+344
   \   00002118   C01E81E2           ADD      R1,R1,#+3072
   \   0000211C   0D00A0E1           MOV      R0,SP
   \   00002120   ........           _BLF     ??append,??append??rA
   \   00002124   0020A0E3           MOV      R2,#+0
   \   00002128   0110A0E3           MOV      R1,#+1
   \   0000212C   560F8DE2           ADD      R0,SP,#+344
   \   00002130   C00E80E2           ADD      R0,R0,#+3072
   \   00002134   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   00002138   0020A0E3           MOV      R2,#+0
   \   0000213C   0110A0E3           MOV      R1,#+1
   \   00002140   5D0F8DE2           ADD      R0,SP,#+372
   \   00002144   C00E80E2           ADD      R0,R0,#+3072
   \   00002148   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   0000214C   0020A0E3           MOV      R2,#+0
   \   00002150   0110A0E3           MOV      R1,#+1
   \   00002154   790F8DE2           ADD      R0,SP,#+484
   \   00002158   C00E80E2           ADD      R0,R0,#+3072
   \   0000215C   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   00002160   0020A0E3           MOV      R2,#+0
   \   00002164   0110A0E3           MOV      R1,#+1
   \   00002168   D90E8DE2           ADD      R0,SP,#+3472
   \   0000216C   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   00002170   0020A0E3           MOV      R2,#+0
   \   00002174   0110A0E3           MOV      R1,#+1
   \   00002178   6B0F8DE2           ADD      R0,SP,#+428
   \   0000217C   C00E80E2           ADD      R0,R0,#+3072
   \   00002180   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   00002184   0020A0E3           MOV      R2,#+0
   \   00002188   0110A0E3           MOV      R1,#+1
   \   0000218C   720F8DE2           ADD      R0,SP,#+456
   \   00002190   C00E80E2           ADD      R0,R0,#+3072
   \   00002194   97F9FFEA           B        ??SaveSettings_5

   \                                 In segment CODE, align 4, keep-with-next
   \                     ?Subroutine25:
   \   00000000   0500A0E1           MOV      R0,R5
   \                     ??Subroutine25_0:
   \   00000004   F04FBDE8           POP      {R4-R11,LR}
   \   00000008   1EFF2FE1           BX       LR               ;; return
    190          

   \                                 In segment CODE, align 4, keep-with-next
    191          bool PROSystemData::RestoreSettings(TSNConfigString *SettingsString) {
   \                     ??RestoreSettings:
   \   00000000   F14F2DE9           PUSH     {R0,R4-R11,LR}
    192              bool NoError   = true;
    193              int  ErrorLine = 0;
    194              int  Key;
    195              TrimSource =  C_SD_INC_SOURCE;
   \   00000004   ........           LDR      R6,??DataTable10  ;; ??TXUSystemData
   \   00000008   88DF4DE2           SUB      SP,SP,#+544
   \   0000000C   0140A0E1           MOV      R4,R1
   \   00000010   0010A0E3           MOV      R1,#+0
   \   00000014   00108DE5           STR      R1,[SP, #+0]
   \   00000018   DB00A0E3           MOV      R0,#+219
   \   0000001C   800D80E3           ORR      R0,R0,#0x2000
   \   00000020   140086E5           STR      R0,[R6, #+20]
    196              ListSource =  C_SD_INC_SOURCE;  // DRAFT_SOURSE ;
   \   00000024   180086E5           STR      R0,[R6, #+24]
    197                                              //TouchScreenTimeOut = DEFAULT_SCREEN_OFF_DELAY; // Allready initialized
    198              CurrentUnitSystem = UNIT_SYS_SI;
   \   00000028   0170A0E1           MOV      R7,R1
   \   0000002C   087086E5           STR      R7,[R6, #+8]
    199              UserPinCode       = (AnsiString)DEFAULT_PIN_CODE;
   \   00000030   5710A0E3           MOV      R1,#+87
   \   00000034   401E81E3           ORR      R1,R1,#0x400
   \   00000038   810F8DE2           ADD      R0,SP,#+516
   \   0000003C   ........           _BLF     ??AnsiString_2,??AnsiString??rA_2
   \   00000040   ........           LDR      R2,??DataTable4  ;; ??npos
   \   00000044   0010A0E1           MOV      R1,R0
   \   00000048   002092E5           LDR      R2,[R2, #+0]
   \   0000004C   0150A0E3           MOV      R5,#+1
   \   00000050   08208DE5           STR      R2,[SP, #+8]
   \   00000054   20029DE5           LDR      R0,[SP, #+544]
   \   00000058   0180A0E3           MOV      R8,#+1
   \   0000005C   0230A0E1           MOV      R3,R2
   \   00000060   0720A0E1           MOV      R2,R7
   \   00000064   620F80E2           ADD      R0,R0,#+392
   \   00000068   ........           _BLF     ??assign,??assign??rA
   \   0000006C   0720A0E1           MOV      R2,R7
   \   00000070   0510A0E1           MOV      R1,R5
   \   00000074   810F8DE2           ADD      R0,SP,#+516
   \   00000078   ........           _BLF     ??_Tidy_1,??_Tidy??rA
    200              ManualTrim        = 0.0;
   \   0000007C   0700A0E1           MOV      R0,R7
   \   00000080   1C0086E5           STR      R0,[R6, #+28]
    201              ManualList        = 0.0;
   \   00000084   200086E5           STR      R0,[R6, #+32]
    202          
    203              do {
    204                  AnsiString InputKeyWord = SettingsString->NextWord(ErrorLine);
   \                     ??RestoreSettings_1:
   \   00000088   0030A0E3           MOV      R3,#+0
   \   0000008C   0D20A0E1           MOV      R2,SP
   \   00000090   7C108DE2           ADD      R1,SP,#+124
    205                  if (ErrorLine) {
   \   00000094   DC989FE5           LDR      R9,??RestoreSettings_2  ;; NewLineStr
   \   00000098   DCA89FE5           LDR      R10,??RestoreSettings_2+0x4  ;; `?<Constant " is not allowed here!...">`
   \   0000009C   0400A0E1           MOV      R0,R4
   \   000000A0   ........           _BLF     ??NextWord,??NextWord??rA
   \   000000A4   00009DE5           LDR      R0,[SP, #+0]
   \   000000A8   000050E3           CMP      R0,#+0
   \   000000AC   3A00000A           BEQ      ??RestoreSettings_3
    206                      if (ErrorLine != EOF) {
   \   000000B0   010070E3           CMN      R0,#+1
   \   000000B4   1802000A           BEQ      ??RestoreSettings_4
    207                          RestoreSettingsWarning((AnsiString)"System Data " + Name + ":\nUnknown error started at line:" + (AnsiString)ErrorLine + NewLineStr);
   \   000000B8   0010A0E1           MOV      R1,R0
   \   000000BC   D0008DE2           ADD      R0,SP,#+208
   \   000000C0   ........           _BLF     ??AnsiString_2,??AnsiString??rA_2
   \   000000C4   00B0A0E1           MOV      R11,R0
   \   000000C8   54108AE2           ADD      R1,R10,#+84
   \   000000CC   B4008DE2           ADD      R0,SP,#+180
   \   000000D0   ........           _BLF     ??AnsiString_1,??AnsiString??rA_1
   \   000000D4   20129DE5           LDR      R1,[SP, #+544]
   \   000000D8   442081E2           ADD      R2,R1,#+68
   \   000000DC   0010A0E1           MOV      R1,R0
   \   000000E0   28008DE2           ADD      R0,SP,#+40
   \   000000E4   ........           _BLF     `??operator+`,`??operator+??rA`
   \   000000E8   30208AE2           ADD      R2,R10,#+48
   \   000000EC   28108DE2           ADD      R1,SP,#+40
   \   000000F0   0C008DE2           ADD      R0,SP,#+12
   \   000000F4   ........           _BLF     `??operator+_1`,`??operator+??rA_1`
   \   000000F8   0B20A0E1           MOV      R2,R11
   \   000000FC   0C108DE2           ADD      R1,SP,#+12
   \   00000100   44008DE2           ADD      R0,SP,#+68
   \   00000104   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000108   0920A0E1           MOV      R2,R9
   \   0000010C   44108DE2           ADD      R1,SP,#+68
   \   00000110   60008DE2           ADD      R0,SP,#+96
   \   00000114   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000118   60108DE2           ADD      R1,SP,#+96
   \   0000011C   98008DE2           ADD      R0,SP,#+152
   \   00000120   ........           _BLF     ??AnsiString_4,??AnsiString??rA_4
   \   00000124   ........           _BLF     ??RestoreSettingsWarning,??RestoreSettingsWarning??rA
   \   00000128   0020A0E3           MOV      R2,#+0
   \   0000012C   0510A0E1           MOV      R1,R5
   \   00000130   98008DE2           ADD      R0,SP,#+152
   \   00000134   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   00000138   0720A0E1           MOV      R2,R7
   \   0000013C   0510A0E1           MOV      R1,R5
   \   00000140   60008DE2           ADD      R0,SP,#+96
   \   00000144   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   00000148   0720A0E1           MOV      R2,R7
   \   0000014C   0510A0E1           MOV      R1,R5
   \   00000150   44008DE2           ADD      R0,SP,#+68
   \   00000154   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   00000158   0720A0E1           MOV      R2,R7
   \   0000015C   0510A0E1           MOV      R1,R5
   \   00000160   D0008DE2           ADD      R0,SP,#+208
   \   00000164   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   00000168   0720A0E1           MOV      R2,R7
   \   0000016C   0510A0E1           MOV      R1,R5
   \   00000170   0C008DE2           ADD      R0,SP,#+12
   \   00000174   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   00000178   0720A0E1           MOV      R2,R7
   \   0000017C   0510A0E1           MOV      R1,R5
   \   00000180   28008DE2           ADD      R0,SP,#+40
   \   00000184   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   00000188   0720A0E1           MOV      R2,R7
   \   0000018C   0510A0E1           MOV      R1,R5
   \   00000190   B4008DE2           ADD      R0,SP,#+180
   \                     ??RestoreSettings_5:
   \   00000194   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   00000198   DF0100EA           B        ??RestoreSettings_4
    208                      }
    209                  } else {
    210                      Key = FindConfigKey(InputKeyWord);
   \                     ??RestoreSettings_3:
   \   0000019C   7C108DE2           ADD      R1,SP,#+124
   \   000001A0   44008DE2           ADD      R0,SP,#+68
   \   000001A4   ........           _BLF     ??string,??string??rA
   \   000001A8   44008DE2           ADD      R0,SP,#+68
   \   000001AC   ........           _BLF     ??FindConfigKey,??FindConfigKey??rA
   \   000001B0   04008DE5           STR      R0,[SP, #+4]
   \   000001B4   0020A0E3           MOV      R2,#+0
   \   000001B8   0510A0E1           MOV      R1,R5
   \   000001BC   44008DE2           ADD      R0,SP,#+68
   \   000001C0   ........           _BLF     ??_Tidy_1,??_Tidy??rA
    211                      switch (Key) {
   \   000001C4   04009DE5           LDR      R0,[SP, #+4]
   \   000001C8   FA0F50E3           CMP      R0,#+1000
   \   000001CC   EA10A013           MOVNE    R1,#+234
   \   000001D0   C01F8113           ORRNE    R1,R1,#0x300
   \   000001D4   01005011           CMPNE    R0,R1
   \   000001D8   FB0F5013           CMPNE    R0,#+1004
   \   000001DC   AF10A013           MOVNE    R1,#+175
   \   000001E0   501E8113           ORRNE    R1,R1,#0x500
   \   000001E4   01005011           CMPNE    R0,R1
   \   000001E8   9810A013           MOVNE    R1,#+152
   \   000001EC   801E8113           ORRNE    R1,R1,#0x800
   \   000001F0   01005011           CMPNE    R0,R1
   \   000001F4   AD00000A           BEQ      ??RestoreSettings_6
   \   000001F8   331081E2           ADD      R1,R1,#+51
   \   000001FC   010050E1           CMP      R0,R1
   \   00000200   01108112           ADDNE    R1,R1,#+1
   \   00000204   01005011           CMPNE    R0,R1
   \   00000208   01108113           ORRNE    R1,R1,#0x1
   \   0000020C   01005011           CMPNE    R0,R1
   \   00000210   A900000A           BEQ      ??RestoreSettings_7
   \   00000214   BB1F81E2           ADD      R1,R1,#+748
   \   00000218   010050E1           CMP      R0,R1
   \   0000021C   A300000A           BEQ      ??RestoreSettings_6
   \   00000220   D110A0E3           MOV      R1,#+209
   \   00000224   801D81E3           ORR      R1,R1,#0x2000
   \   00000228   010050E1           CMP      R0,R1
   \   0000022C   3101000A           BEQ      ??RestoreSettings_8
   \   00000230   011081E2           ADD      R1,R1,#+1
   \   00000234   010050E1           CMP      R0,R1
   \   00000238   5D01000A           BEQ      ??RestoreSettings_9
   \   0000023C   011081E3           ORR      R1,R1,#0x1
   \   00000240   010050E1           CMP      R0,R1
   \   00000244   8501000A           BEQ      ??RestoreSettings_10
   \   00000248   011081E2           ADD      R1,R1,#+1
   \   0000024C   010050E1           CMP      R0,R1
   \   00000250   5D01000A           BEQ      ??RestoreSettings_11
   \   00000254   011081E3           ORR      R1,R1,#0x1
   \   00000258   010050E1           CMP      R0,R1
   \   0000025C   7501000A           BEQ      ??RestoreSettings_12
   \   00000260   011081E2           ADD      R1,R1,#+1
   \   00000264   010050E1           CMP      R0,R1
   \   00000268   6001000A           BEQ      ??RestoreSettings_13
   \   0000026C   011081E3           ORR      R1,R1,#0x1
   \   00000270   010050E1           CMP      R0,R1
   \   00000274   6901000A           BEQ      ??RestoreSettings_14
   \   00000278   091081E2           ADD      R1,R1,#+9
   \   0000027C   010050E1           CMP      R0,R1
   \   00000280   9A00000A           BEQ      ??RestoreSettings_15
   \   00000284   011081E3           ORR      R1,R1,#0x1
   \   00000288   010050E1           CMP      R0,R1
   \   0000028C   B700000A           BEQ      ??RestoreSettings_16
   \   00000290   031081E2           ADD      R1,R1,#+3
   \   00000294   010050E1           CMP      R0,R1
   \   00000298   AA00000A           BEQ      ??RestoreSettings_17
   \   0000029C   011081E3           ORR      R1,R1,#0x1
   \   000002A0   010050E1           CMP      R0,R1
   \   000002A4   C700000A           BEQ      ??RestoreSettings_18
   \   000002A8   011081E2           ADD      R1,R1,#+1
   \   000002AC   010050E1           CMP      R0,R1
   \   000002B0   FF00000A           BEQ      ??RestoreSettings_19
   \   000002B4   011081E3           ORR      R1,R1,#0x1
   \   000002B8   010050E1           CMP      R0,R1
   \   000002BC   CB00000A           BEQ      ??RestoreSettings_20
   \   000002C0   011081E2           ADD      R1,R1,#+1
   \   000002C4   010050E1           CMP      R0,R1
   \   000002C8   0001000A           BEQ      ??RestoreSettings_21
   \   000002CC   011081E3           ORR      R1,R1,#0x1
   \   000002D0   010050E1           CMP      R0,R1
   \   000002D4   CC00000A           BEQ      ??RestoreSettings_22
   \   000002D8   011081E2           ADD      R1,R1,#+1
   \   000002DC   010050E1           CMP      R0,R1
   \   000002E0   D300000A           BEQ      ??RestoreSettings_23
   \   000002E4   011081E3           ORR      R1,R1,#0x1
   \   000002E8   010050E1           CMP      R0,R1
   \   000002EC   D700000A           BEQ      ??RestoreSettings_24
   \   000002F0   011081E2           ADD      R1,R1,#+1
   \   000002F4   010050E1           CMP      R0,R1
   \   000002F8   DF00000A           BEQ      ??RestoreSettings_25
   \   000002FC   011081E3           ORR      R1,R1,#0x1
   \   00000300   010050E1           CMP      R0,R1
   \   00000304   E300000A           BEQ      ??RestoreSettings_26
   \   00000308   011081E2           ADD      R1,R1,#+1
   \   0000030C   010050E1           CMP      R0,R1
   \   00000310   FF00000A           BEQ      ??RestoreSettings_27
   \   00000314   011081E3           ORR      R1,R1,#0x1
   \   00000318   010050E1           CMP      R0,R1
   \   0000031C   6201000A           BEQ      ??RestoreSettings_28
   \   00000320   011081E2           ADD      R1,R1,#+1
   \   00000324   010050E1           CMP      R0,R1
   \   00000328   6501000A           BEQ      ??RestoreSettings_29
   \   0000032C   011081E3           ORR      R1,R1,#0x1
   \   00000330   010050E1           CMP      R0,R1
   \   00000334   6401000A           BEQ      ??RestoreSettings_30
   \   00000338   011081E2           ADD      R1,R1,#+1
   \   0000033C   010050E1           CMP      R0,R1
   \   00000340   6301000A           BEQ      ??RestoreSettings_31
   \   00000344   011081E3           ORR      R1,R1,#0x1
   \   00000348   010050E1           CMP      R0,R1
   \   0000034C   6201000A           BEQ      ??RestoreSettings_32
   \   00000350   011081E2           ADD      R1,R1,#+1
   \   00000354   010050E1           CMP      R0,R1
   \   00000358   6101000A           BEQ      ??RestoreSettings_33
   \   0000035C   011081E3           ORR      R1,R1,#0x1
   \   00000360   010050E1           CMP      R0,R1
   \   00000364   6001000A           BEQ      ??RestoreSettings_34
   \   00000368   011081E2           ADD      R1,R1,#+1
   \   0000036C   010050E1           CMP      R0,R1
   \   00000370   5F01000A           BEQ      ??RestoreSettings_35
   \   00000374   011081E3           ORR      R1,R1,#0x1
   \   00000378   010050E1           CMP      R0,R1
   \   0000037C   6001000A           BEQ      ??RestoreSettings_36
   \   00000380   011081E2           ADD      R1,R1,#+1
   \   00000384   010050E1           CMP      R0,R1
   \   00000388   5B01000A           BEQ      ??RestoreSettings_37
    212                      default:
    213                          NoError = false;
    214                          RestoreSettingsWarning((AnsiString)"System Data " + Name + ":\nThe keyword " + InputKeyWord + " is not allowed here!! Line:" + (AnsiString)SettingsString->LineCount + NewLineStr);
   \   0000038C   1C1094E5           LDR      R1,[R4, #+28]
   \   00000390   730F8DE2           ADD      R0,SP,#+460
   \   00000394   ........           _BLF     ??AnsiString_2,??AnsiString??rA_2
   \   00000398   00B0A0E1           MOV      R11,R0
   \   0000039C   54108AE2           ADD      R1,R10,#+84
   \   000003A0   6C0F8DE2           ADD      R0,SP,#+432
   \   000003A4   ........           _BLF     ??AnsiString_1,??AnsiString??rA_1
   \   000003A8   0010A0E1           MOV      R1,R0
   \   000003AC   20029DE5           LDR      R0,[SP, #+544]
   \   000003B0   0080A0E3           MOV      R8,#+0
   \   000003B4   442080E2           ADD      R2,R0,#+68
   \   000003B8   650F8DE2           ADD      R0,SP,#+404
   \   000003BC   ........           _BLF     `??operator+`,`??operator+??rA`
   \   000003C0   20208AE2           ADD      R2,R10,#+32
   \   000003C4   651F8DE2           ADD      R1,SP,#+404
   \   000003C8   5E0F8DE2           ADD      R0,SP,#+376
   \   000003CC   ........           _BLF     `??operator+_1`,`??operator+??rA_1`
   \   000003D0   7C208DE2           ADD      R2,SP,#+124
   \   000003D4   5E1F8DE2           ADD      R1,SP,#+376
   \   000003D8   570F8DE2           ADD      R0,SP,#+348
   \   000003DC   ........           _BLF     `??operator+`,`??operator+??rA`
   \   000003E0   0A20A0E1           MOV      R2,R10
   \   000003E4   571F8DE2           ADD      R1,SP,#+348
   \   000003E8   500F8DE2           ADD      R0,SP,#+320
   \   000003EC   ........           _BLF     `??operator+_1`,`??operator+??rA_1`
   \   000003F0   0B20A0E1           MOV      R2,R11
   \   000003F4   501F8DE2           ADD      R1,SP,#+320
   \   000003F8   490F8DE2           ADD      R0,SP,#+292
   \   000003FC   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000400   0920A0E1           MOV      R2,R9
   \   00000404   491F8DE2           ADD      R1,SP,#+292
   \   00000408   420F8DE2           ADD      R0,SP,#+264
   \   0000040C   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000410   421F8DE2           ADD      R1,SP,#+264
   \   00000414   EC008DE2           ADD      R0,SP,#+236
   \   00000418   ........           _BLF     ??AnsiString_4,??AnsiString??rA_4
   \   0000041C   ........           _BLF     ??RestoreSettingsWarning,??RestoreSettingsWarning??rA
   \   00000420   0720A0E1           MOV      R2,R7
   \   00000424   0510A0E1           MOV      R1,R5
   \   00000428   EC008DE2           ADD      R0,SP,#+236
   \   0000042C   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   00000430   0720A0E1           MOV      R2,R7
   \   00000434   0510A0E1           MOV      R1,R5
   \   00000438   420F8DE2           ADD      R0,SP,#+264
   \   0000043C   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   00000440   0720A0E1           MOV      R2,R7
   \   00000444   0510A0E1           MOV      R1,R5
   \   00000448   490F8DE2           ADD      R0,SP,#+292
   \   0000044C   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   00000450   0720A0E1           MOV      R2,R7
   \   00000454   0510A0E1           MOV      R1,R5
   \   00000458   730F8DE2           ADD      R0,SP,#+460
   \   0000045C   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   00000460   0720A0E1           MOV      R2,R7
   \   00000464   0510A0E1           MOV      R1,R5
   \   00000468   500F8DE2           ADD      R0,SP,#+320
   \   0000046C   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   00000470   0720A0E1           MOV      R2,R7
   \   00000474   0510A0E1           MOV      R1,R5
   \   00000478   570F8DE2           ADD      R0,SP,#+348
   \   0000047C   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   00000480   0720A0E1           MOV      R2,R7
   \   00000484   0510A0E1           MOV      R1,R5
   \   00000488   5E0F8DE2           ADD      R0,SP,#+376
   \   0000048C   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   00000490   0720A0E1           MOV      R2,R7
   \   00000494   0510A0E1           MOV      R1,R5
   \   00000498   650F8DE2           ADD      R0,SP,#+404
   \   0000049C   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   000004A0   0720A0E1           MOV      R2,R7
   \   000004A4   0510A0E1           MOV      R1,R5
   \   000004A8   6C0F8DE2           ADD      R0,SP,#+432
   \   000004AC   38FFFFEA           B        ??RestoreSettings_5
    215                          break;
    216                      case C_AI_END:          // If AI type not found can continue with this
    217                      case C_AL_END:
    218                      case C_CT_END:
    219                      case C_PRO_END:
    220                      case C_PRO_END_COMMON:
    221                      case C_PRO_END_PRO:
    222                          Key = C_PRO_END;
   \                     ??RestoreSettings_6:
   \   000004B0   FA1FA0E3           MOV      R1,#+1000
   \   000004B4   04108DE5           STR      R1,[SP, #+4]
   \   000004B8   170100EA           B        ??RestoreSettings_4
    223                          break;
    224                      case C_MOD_CONFIG:
    225                      case C_MOD_SYSTEM:
    226                      case C_MOD_USER  :
    227          //            ModifiedBy = Key;
    228                          LastTimeModified = SettingsString->ReadLong(ErrorLine);
   \                     ??RestoreSettings_7:
   \   000004BC   0020A0E3           MOV      R2,#+0
   \   000004C0   0D10A0E1           MOV      R1,SP
   \   000004C4   0400A0E1           MOV      R0,R4
   \   000004C8   ........           _BLF     ??ReadLong,??ReadLong??rA
   \   000004CC   20129DE5           LDR      R1,[SP, #+544]
   \   000004D0   840181E5           STR      R0,[R1, #+388]
    229                          NoError = !ErrorLine;
   \   000004D4   00009DE5           LDR      R0,[SP, #+0]
   \   000004D8   000050E3           CMP      R0,#+0
   \   000004DC   0100001A           BNE      ??RestoreSettings_38
   \                     ??RestoreSettings_39:
   \   000004E0   0180A0E3           MOV      R8,#+1
   \   000004E4   0C0100EA           B        ??RestoreSettings_4
   \                     ??RestoreSettings_38:
   \   000004E8   0080A0E3           MOV      R8,#+0
   \   000004EC   0A0100EA           B        ??RestoreSettings_4
    230                          break;
    231                      case C_SD_TRIM_SOURCE:
    232                          {
    233                              AnsiString SettingsKWord = SettingsString->NextWord(ErrorLine);
   \                     ??RestoreSettings_15:
   \   000004F0   0030A0E3           MOV      R3,#+0
   \   000004F4   0D20A0E1           MOV      R2,SP
   \   000004F8   0C108DE2           ADD      R1,SP,#+12
   \   000004FC   0400A0E1           MOV      R0,R4
   \   00000500   ........           _BLF     ??NextWord,??NextWord??rA
    234                              if (!ErrorLine) {
   \   00000504   00009DE5           LDR      R0,[SP, #+0]
   \   00000508   000050E3           CMP      R0,#+0
   \   0000050C   0900001A           BNE      ??RestoreSettings_40
    235                                  TrimSource = FindConfigKey(SettingsKWord);
   \   00000510   0C108DE2           ADD      R1,SP,#+12
   \   00000514   28008DE2           ADD      R0,SP,#+40
   \   00000518   ........           _BLF     ??string,??string??rA
   \   0000051C   28008DE2           ADD      R0,SP,#+40
   \   00000520   ........           _BLF     ??FindConfigKey,??FindConfigKey??rA
   \   00000524   140086E5           STR      R0,[R6, #+20]
   \   00000528   0020A0E3           MOV      R2,#+0
   \   0000052C   0510A0E1           MOV      R1,R5
   \   00000530   28008DE2           ADD      R0,SP,#+40
   \   00000534   ........           _BLF     ??_Tidy_1,??_Tidy??rA
    236                              }
    237                          }
   \                     ??RestoreSettings_40:
   \   00000538   0020A0E3           MOV      R2,#+0
   \   0000053C   0510A0E1           MOV      R1,R5
   \   00000540   0C008DE2           ADD      R0,SP,#+12
   \   00000544   12FFFFEA           B        ??RestoreSettings_5
    238                          break;
    239                      case C_SD_MANUAL_TRIM:
    240                          ManualTrim = SettingsString->ReadDouble(ErrorLine);
   \                     ??RestoreSettings_17:
   \   00000548   0020A0E3           MOV      R2,#+0
   \   0000054C   0D10A0E1           MOV      R1,SP
   \   00000550   0400A0E1           MOV      R0,R4
   \   00000554   ........           _BLF     ??ReadDouble,??ReadDouble??rA
   \   00000558   ........           _BLF     __doubleToFloat,??__doubleToFloat??rA
   \   0000055C   1C0086E5           STR      R0,[R6, #+28]
    241                          NoError = !ErrorLine;
   \                     ??RestoreSettings_41:
   \   00000560   00009DE5           LDR      R0,[SP, #+0]
   \   00000564   000050E3           CMP      R0,#+0
   \   00000568   DEFFFF1A           BNE      ??RestoreSettings_38
   \   0000056C   DBFFFFEA           B        ??RestoreSettings_39
    242                          break;
    243                      case C_SD_LIST_SOURCE:
    244                          {
    245                              AnsiString SettingsKWord = SettingsString->NextWord(ErrorLine);
   \                     ??RestoreSettings_16:
   \   00000570   0030A0E3           MOV      R3,#+0
   \   00000574   0D20A0E1           MOV      R2,SP
   \   00000578   28108DE2           ADD      R1,SP,#+40
   \   0000057C   0400A0E1           MOV      R0,R4
   \   00000580   ........           _BLF     ??NextWord,??NextWord??rA
    246                              if (!ErrorLine) {
   \   00000584   00009DE5           LDR      R0,[SP, #+0]
   \   00000588   000050E3           CMP      R0,#+0
   \   0000058C   0900001A           BNE      ??RestoreSettings_42
    247                                  ListSource = FindConfigKey(SettingsKWord);
   \   00000590   28108DE2           ADD      R1,SP,#+40
   \   00000594   0C008DE2           ADD      R0,SP,#+12
   \   00000598   ........           _BLF     ??string,??string??rA
   \   0000059C   0C008DE2           ADD      R0,SP,#+12
   \   000005A0   ........           _BLF     ??FindConfigKey,??FindConfigKey??rA
   \   000005A4   180086E5           STR      R0,[R6, #+24]
   \   000005A8   0020A0E3           MOV      R2,#+0
   \   000005AC   0510A0E1           MOV      R1,R5
   \   000005B0   0C008DE2           ADD      R0,SP,#+12
   \   000005B4   ........           _BLF     ??_Tidy_1,??_Tidy??rA
    248                              }
    249                          }
   \                     ??RestoreSettings_42:
   \   000005B8   0020A0E3           MOV      R2,#+0
   \   000005BC   0510A0E1           MOV      R1,R5
   \   000005C0   28008DE2           ADD      R0,SP,#+40
   \   000005C4   F2FEFFEA           B        ??RestoreSettings_5
    250                          break;
    251                      case C_SD_MANUAL_LIST:
    252                          ManualList = SettingsString->ReadDouble(ErrorLine);
   \                     ??RestoreSettings_18:
   \   000005C8   0020A0E3           MOV      R2,#+0
   \   000005CC   0D10A0E1           MOV      R1,SP
   \   000005D0   0400A0E1           MOV      R0,R4
   \   000005D4   ........           _BLF     ??ReadDouble,??ReadDouble??rA
   \   000005D8   ........           _BLF     __doubleToFloat,??__doubleToFloat??rA
   \   000005DC   200086E5           STR      R0,[R6, #+32]
    253                          NoError = !ErrorLine;
   \   000005E0   00009DE5           LDR      R0,[SP, #+0]
   \   000005E4   000050E3           CMP      R0,#+0
   \   000005E8   BCFFFF0A           BEQ      ??RestoreSettings_39
   \   000005EC   BDFFFFEA           B        ??RestoreSettings_38
    254                          break;
    255                      case C_SD_SEAWATER_DNS:
    256                          SeaWaterDensity = SettingsString->ReadDouble(ErrorLine);
   \                     ??RestoreSettings_20:
   \   000005F0   0020A0E3           MOV      R2,#+0
   \   000005F4   0D10A0E1           MOV      R1,SP
   \   000005F8   0400A0E1           MOV      R0,R4
   \   000005FC   ........           _BLF     ??ReadDouble,??ReadDouble??rA
   \   00000600   ........           _BLF     __doubleToFloat,??__doubleToFloat??rA
   \   00000604   300086E5           STR      R0,[R6, #+48]
    257                          NoError = !ErrorLine;
   \   00000608   D4FFFFEA           B        ??RestoreSettings_41
    258                          break;
    259                      case C_SD_BALLAST_DNS    :
    260                          BallastDensity = SettingsString->ReadDouble(ErrorLine);
   \                     ??RestoreSettings_22:
   \   0000060C   0020A0E3           MOV      R2,#+0
   \   00000610   0D10A0E1           MOV      R1,SP
   \   00000614   0400A0E1           MOV      R0,R4
   \   00000618   ........           _BLF     ??ReadDouble,??ReadDouble??rA
   \   0000061C   ........           _BLF     __doubleToFloat,??__doubleToFloat??rA
   \   00000620   2C0086E5           STR      R0,[R6, #+44]
    261                          NoError = !ErrorLine;
   \                     ??RestoreSettings_43:
   \   00000624   00009DE5           LDR      R0,[SP, #+0]
   \   00000628   000050E3           CMP      R0,#+0
   \   0000062C   ADFFFF1A           BNE      ??RestoreSettings_38
   \   00000630   AAFFFFEA           B        ??RestoreSettings_39
    262                          break;
    263                      case C_SD_FRESHWATER_DNS :
    264                          FreshWaterDensity = SettingsString->ReadDouble(ErrorLine);
   \                     ??RestoreSettings_23:
   \   00000634   0020A0E3           MOV      R2,#+0
   \   00000638   0D10A0E1           MOV      R1,SP
   \   0000063C   0400A0E1           MOV      R0,R4
   \   00000640   ........           _BLF     ??ReadDouble,??ReadDouble??rA
   \   00000644   ........           _BLF     __doubleToFloat,??__doubleToFloat??rA
   \   00000648   340086E5           STR      R0,[R6, #+52]
    265                          NoError = !ErrorLine;
   \   0000064C   C3FFFFEA           B        ??RestoreSettings_41
    266                          break;
    267                      case C_SD_HEAVY_FUEL_DNS :
    268                          HeavyFuelDensity = SettingsString->ReadDouble(ErrorLine);
   \                     ??RestoreSettings_24:
   \   00000650   0020A0E3           MOV      R2,#+0
   \   00000654   0D10A0E1           MOV      R1,SP
   \   00000658   0400A0E1           MOV      R0,R4
   \   0000065C   ........           _BLF     ??ReadDouble,??ReadDouble??rA
   \   00000660   ........           _BLF     __doubleToFloat,??__doubleToFloat??rA
   \   00000664   380086E5           STR      R0,[R6, #+56]
    269                          NoError = !ErrorLine;
   \   00000668   00009DE5           LDR      R0,[SP, #+0]
   \   0000066C   000050E3           CMP      R0,#+0
   \   00000670   9AFFFF0A           BEQ      ??RestoreSettings_39
   \                     ??RestoreSettings_44:
   \   00000674   0080A0E3           MOV      R8,#+0
   \   00000678   A70000EA           B        ??RestoreSettings_4
    270                          break;
    271                      case C_SD_DIESEL_DNS     :
    272                          DieselDensity = SettingsString->ReadDouble(ErrorLine);
   \                     ??RestoreSettings_25:
   \   0000067C   0020A0E3           MOV      R2,#+0
   \   00000680   0D10A0E1           MOV      R1,SP
   \   00000684   0400A0E1           MOV      R0,R4
   \   00000688   ........           _BLF     ??ReadDouble,??ReadDouble??rA
   \   0000068C   ........           _BLF     __doubleToFloat,??__doubleToFloat??rA
   \   00000690   3C0086E5           STR      R0,[R6, #+60]
    273                          NoError = !ErrorLine;
   \   00000694   B1FFFFEA           B        ??RestoreSettings_41
    274                          break;
    275                      case C_SD_LUBRICANTS_DNS :
    276                          LubricantsDensity = SettingsString->ReadDouble(ErrorLine);
   \                     ??RestoreSettings_26:
   \   00000698   0020A0E3           MOV      R2,#+0
   \   0000069C   0D10A0E1           MOV      R1,SP
   \   000006A0   0400A0E1           MOV      R0,R4
   \   000006A4   ........           _BLF     ??ReadDouble,??ReadDouble??rA
   \   000006A8   ........           _BLF     __doubleToFloat,??__doubleToFloat??rA
   \   000006AC   400086E5           STR      R0,[R6, #+64]
    277                          NoError = !ErrorLine;
   \   000006B0   DBFFFFEA           B        ??RestoreSettings_43
    278                          break;
    279                      case C_SD_SEAWATER_TEMP:
    280                          SeaWaterTemp = SettingsString->ReadDouble(ErrorLine);
   \                     ??RestoreSettings_19:
   \   000006B4   0020A0E3           MOV      R2,#+0
   \   000006B8   0D10A0E1           MOV      R1,SP
   \   000006BC   0400A0E1           MOV      R0,R4
   \   000006C0   ........           _BLF     ??ReadDouble,??ReadDouble??rA
   \   000006C4   ........           _BLF     __doubleToFloat,??__doubleToFloat??rA
   \   000006C8   440086E5           STR      R0,[R6, #+68]
    281                          NoError = !ErrorLine;
   \   000006CC   A3FFFFEA           B        ??RestoreSettings_41
    282                          break;
    283                      case C_SD_AMBIENT_TEMP:
    284                          AmbientTemp = SettingsString->ReadDouble(ErrorLine);
   \                     ??RestoreSettings_21:
   \   000006D0   0020A0E3           MOV      R2,#+0
   \   000006D4   0D10A0E1           MOV      R1,SP
   \   000006D8   0400A0E1           MOV      R0,R4
   \   000006DC   ........           _BLF     ??ReadDouble,??ReadDouble??rA
   \   000006E0   ........           _BLF     __doubleToFloat,??__doubleToFloat??rA
   \   000006E4   480086E5           STR      R0,[R6, #+72]
    285                          NoError = !ErrorLine;
   \   000006E8   00009DE5           LDR      R0,[SP, #+0]
   \   000006EC   000050E3           CMP      R0,#+0
   \   000006F0   DFFFFF1A           BNE      ??RestoreSettings_44
   \   000006F4   79FFFFEA           B        ??RestoreSettings_39
    286                          break;
    287                      case C_SD_SCREEN_OFF_TIME:
    288                          TouchScreenTimeOut = SettingsString->ReadLong(ErrorLine);
   \                     ??RestoreSettings_8:
   \   000006F8   0020A0E3           MOV      R2,#+0
   \   000006FC   0D10A0E1           MOV      R1,SP
   \   00000700   0400A0E1           MOV      R0,R4
   \   00000704   ........           _BLF     ??ReadLong,??ReadLong??rA
   \   00000708   ........           LDR      R1,??DataTable24  ;; TouchScreenTimeOut
   \   0000070C   000081E5           STR      R0,[R1, #+0]
    289                          NoError = !ErrorLine;
   \   00000710   92FFFFEA           B        ??RestoreSettings_41
    290                          break;
    291                      case C_SD_SCREEN_CAL:
    292          #ifdef S2TXU
    293                          {
    294                              U32 xMin = SettingsString->ReadLong(ErrorLine);
   \                     ??RestoreSettings_27:
   \   00000714   0020A0E3           MOV      R2,#+0
   \   00000718   0D10A0E1           MOV      R1,SP
   \   0000071C   0400A0E1           MOV      R0,R4
   \   00000720   ........           _BLF     ??ReadLong,??ReadLong??rA
   \   00000724   0080A0E1           MOV      R8,R0
    295                              if (!ErrorLine) {
   \   00000728   00009DE5           LDR      R0,[SP, #+0]
   \   0000072C   000050E3           CMP      R0,#+0
   \   00000730   BBFFFF1A           BNE      ??RestoreSettings_43
    296                                  U32 xMax = SettingsString->ReadLong(ErrorLine);
   \   00000734   0020A0E3           MOV      R2,#+0
   \   00000738   0D10A0E1           MOV      R1,SP
   \   0000073C   0400A0E1           MOV      R0,R4
   \   00000740   ........           _BLF     ??ReadLong,??ReadLong??rA
   \   00000744   0090A0E1           MOV      R9,R0
    297                                  if (!ErrorLine) {
   \   00000748   00009DE5           LDR      R0,[SP, #+0]
   \   0000074C   000050E3           CMP      R0,#+0
   \   00000750   B3FFFF1A           BNE      ??RestoreSettings_43
    298                                      U32 yMin = SettingsString->ReadLong(ErrorLine);
   \   00000754   0020A0E3           MOV      R2,#+0
   \   00000758   0D10A0E1           MOV      R1,SP
   \   0000075C   0400A0E1           MOV      R0,R4
   \   00000760   ........           _BLF     ??ReadLong,??ReadLong??rA
   \   00000764   00A0A0E1           MOV      R10,R0
    299                                      if (!ErrorLine) {
   \   00000768   00009DE5           LDR      R0,[SP, #+0]
   \   0000076C   000050E3           CMP      R0,#+0
   \   00000770   ABFFFF1A           BNE      ??RestoreSettings_43
    300                                          U32 yMax = SettingsString->ReadLong(ErrorLine);
   \   00000774   0020A0E3           MOV      R2,#+0
   \   00000778   0D10A0E1           MOV      R1,SP
   \   0000077C   0400A0E1           MOV      R0,R4
   \   00000780   ........           _BLF     ??ReadLong,??ReadLong??rA
   \   00000784   00B0A0E1           MOV      R11,R0
    301                                          if (!ErrorLine) {
   \   00000788   00009DE5           LDR      R0,[SP, #+0]
   \   0000078C   000050E3           CMP      R0,#+0
   \   00000790   A3FFFF1A           BNE      ??RestoreSettings_43
    302                                              GUI_TOUCH_SetCalData(0, xMin, xMax);
   \   00000794   0920A0E1           MOV      R2,R9
   \   00000798   0810A0E1           MOV      R1,R8
   \   0000079C   ........           _BLF     GUI_TOUCH_SetCalData,??GUI_TOUCH_SetCalData??rA
    303                                              GUI_TOUCH_SetCalData(1, yMin, yMax);
   \   000007A0   0B20A0E1           MOV      R2,R11
   \   000007A4   0A10A0E1           MOV      R1,R10
   \   000007A8   0100A0E3           MOV      R0,#+1
   \   000007AC   ........           _BLF     GUI_TOUCH_SetCalData,??GUI_TOUCH_SetCalData??rA
    304                                          }
    305                                      }
    306                                  }
    307                              }
    308                          }
    309                          NoError = !ErrorLine;
   \   000007B0   9BFFFFEA           B        ??RestoreSettings_43
    310          #endif
    311                          break;
    312                      case C_SD_ALARM_OFF_DELAY:
    313                          AlarmOffDelay = SettingsString->ReadLong(ErrorLine);
   \                     ??RestoreSettings_9:
   \   000007B4   0020A0E3           MOV      R2,#+0
   \   000007B8   0D10A0E1           MOV      R1,SP
   \   000007BC   0400A0E1           MOV      R0,R4
   \   000007C0   ........           _BLF     ??ReadLong,??ReadLong??rA
   \   000007C4   100086E5           STR      R0,[R6, #+16]
    314                          NoError = !ErrorLine;
   \   000007C8   64FFFFEA           B        ??RestoreSettings_41
    315                          break;
    316          			case C_SD_UNITSYSTEM:
    317                          CurrentUnitSystem = SettingsString->ReadLong(ErrorLine);
   \                     ??RestoreSettings_11:
   \   000007CC   0020A0E3           MOV      R2,#+0
   \   000007D0   0D10A0E1           MOV      R1,SP
   \   000007D4   0400A0E1           MOV      R0,R4
   \   000007D8   ........           _BLF     ??ReadLong,??ReadLong??rA
   \   000007DC   080086E5           STR      R0,[R6, #+8]
    318                          NoError = !ErrorLine;
   \   000007E0   00009DE5           LDR      R0,[SP, #+0]
   \   000007E4   000050E3           CMP      R0,#+0
   \   000007E8   3CFFFF0A           BEQ      ??RestoreSettings_39
   \   000007EC   3DFFFFEA           B        ??RestoreSettings_38
    319                          break;
    320                      case C_SD_TIME_GMT:
    321                          {
    322                              TimeFromGMT = SettingsString->ReadLong(ErrorLine);
   \                     ??RestoreSettings_13:
   \   000007F0   0020A0E3           MOV      R2,#+0
   \   000007F4   0D10A0E1           MOV      R1,SP
   \   000007F8   0400A0E1           MOV      R0,R4
   \   000007FC   ........           _BLF     ??ReadLong,??ReadLong??rA
   \   00000800   4C0086E5           STR      R0,[R6, #+76]
    323                              NoError = !ErrorLine;
   \   00000804   00009DE5           LDR      R0,[SP, #+0]
   \   00000808   000050E3           CMP      R0,#+0
   \   0000080C   35FFFF1A           BNE      ??RestoreSettings_38
    324                              if (NoError) {
    325                                  TSNSetTimeZone(TimeFromGMT);
   \   00000810   4C0096E5           LDR      R0,[R6, #+76]
   \   00000814   0180A0E3           MOV      R8,#+1
   \   00000818   ........           _BLF     ??TSNSetTimeZone,??TSNSetTimeZone??rA
   \   0000081C   3E0000EA           B        ??RestoreSettings_4
    326                              }
    327                          }
    328                          break;
    329          			case C_SD_DAYLIGH_SAVING:
    330          				{
    331          					int tmpDaylightSaving = SettingsString->ReadLong(ErrorLine);
   \                     ??RestoreSettings_14:
   \   00000820   0020A0E3           MOV      R2,#+0
   \   00000824   0D10A0E1           MOV      R1,SP
   \   00000828   0400A0E1           MOV      R0,R4
   \   0000082C   ........           _BLF     ??ReadLong,??ReadLong??rA
    332          					SetDaylightSaving( tmpDaylightSaving);
   \   00000830   ........           _BLF     ??SetDaylightSaving,??SetDaylightSaving??rA
    333          					NoError = !ErrorLine;
   \   00000834   7AFFFFEA           B        ??RestoreSettings_43
    334          				}
    335                          break;
    336                      case C_SD_LANGUAGE:
    337                          {
    338                              int CLanguage = SettingsString->ReadLong(ErrorLine);
   \                     ??RestoreSettings_12:
   \   00000838   0020A0E3           MOV      R2,#+0
   \   0000083C   0D10A0E1           MOV      R1,SP
   \   00000840   0400A0E1           MOV      R0,R4
   \   00000844   ........           _BLF     ??ReadLong,??ReadLong??rA
    339                              NoError = !ErrorLine;
   \   00000848   00109DE5           LDR      R1,[SP, #+0]
   \   0000084C   000051E3           CMP      R1,#+0
   \   00000850   24FFFF1A           BNE      ??RestoreSettings_38
   \   00000854   0180A0E3           MOV      R8,#+1
    340                              if (NoError) {
    341                                  SetCurrentLanguage(CLanguage);
   \   00000858   ........           _BLF     ??SetCurrentLanguage,??SetCurrentLanguage??rA
   \   0000085C   2E0000EA           B        ??RestoreSettings_4
    342                              }
    343                          }
    344                          break;
    345                      case C_SD_USER_PIN_CODE:
    346                          UserPinCode = SettingsString->NextWord(ErrorLine);
   \                     ??RestoreSettings_10:
   \   00000860   0030A0E3           MOV      R3,#+0
   \   00000864   0D20A0E1           MOV      R2,SP
   \   00000868   7A1F8DE2           ADD      R1,SP,#+488
   \   0000086C   0400A0E1           MOV      R0,R4
   \   00000870   ........           _BLF     ??NextWord,??NextWord??rA
   \   00000874   08309DE5           LDR      R3,[SP, #+8]
   \   00000878   20029DE5           LDR      R0,[SP, #+544]
   \   0000087C   0720A0E1           MOV      R2,R7
   \   00000880   7A1F8DE2           ADD      R1,SP,#+488
   \   00000884   620F80E2           ADD      R0,R0,#+392
   \   00000888   ........           _BLF     ??assign,??assign??rA
   \   0000088C   0720A0E1           MOV      R2,R7
   \   00000890   0510A0E1           MOV      R1,R5
   \   00000894   7A0F8DE2           ADD      R0,SP,#+488
   \   00000898   ........           _BLF     ??_Tidy_1,??_Tidy??rA
    347                          NoError = !ErrorLine;
   \   0000089C   00009DE5           LDR      R0,[SP, #+0]
   \   000008A0   000050E3           CMP      R0,#+0
   \   000008A4   0FFFFF1A           BNE      ??RestoreSettings_38
   \   000008A8   0CFFFFEA           B        ??RestoreSettings_39
    348                          break;
    349                      case C_SD_LOG_TIME:
    350                          LogTime = SettingsString->ReadLong(ErrorLine);
   \                     ??RestoreSettings_28:
   \   000008AC   0020A0E3           MOV      R2,#+0
   \   000008B0   0D10A0E1           MOV      R1,SP
   \   000008B4   0400A0E1           MOV      R0,R4
   \   000008B8   ........           _BLF     ??ReadLong,??ReadLong??rA
   \   000008BC   540086E5           STR      R0,[R6, #+84]
    351                          NoError = !ErrorLine;
   \   000008C0   26FFFFEA           B        ??RestoreSettings_41
    352                          break;
    353                      case C_SD_LOG_TO_FILE       :
    354                          LogToFile          = true; break;
   \                     ??RestoreSettings_29:
   \   000008C4   5950C6E5           STRB     R5,[R6, #+89]
   \   000008C8   130000EA           B        ??RestoreSettings_4
    355                      case C_SD_LOG_ALARMS        :
    356                          LogAlarms          = true; break;
   \                     ??RestoreSettings_30:
   \   000008CC   5A50C6E5           STRB     R5,[R6, #+90]
   \   000008D0   110000EA           B        ??RestoreSettings_4
    357                      case C_SD_LOG_BALLAST_EXCH  :
    358                          LogBallastExchange = true; break;
   \                     ??RestoreSettings_31:
   \   000008D4   5B50C6E5           STRB     R5,[R6, #+91]
   \   000008D8   0F0000EA           B        ??RestoreSettings_4
    359                      case C_SD_LOG_CARGO         :
    360                          LogCargo           = true; break;
   \                     ??RestoreSettings_32:
   \   000008DC   5C50C6E5           STRB     R5,[R6, #+92]
   \   000008E0   0D0000EA           B        ??RestoreSettings_4
    361                      case C_SD_LOG_SERVICE       :
    362                          LogService         = true; break;
   \                     ??RestoreSettings_33:
   \   000008E4   5D50C6E5           STRB     R5,[R6, #+93]
   \   000008E8   0B0000EA           B        ??RestoreSettings_4
    363                      case C_SD_LOG_TEMPERATURE   :
    364                          LogTemperature     = true; break;
   \                     ??RestoreSettings_34:
   \   000008EC   5E50C6E5           STRB     R5,[R6, #+94]
   \   000008F0   090000EA           B        ??RestoreSettings_4
    365                      case C_SD_LOG_TANK_PRESSURE :
    366                          LogTankPressure    = true; break;
   \                     ??RestoreSettings_35:
   \   000008F4   5F50C6E5           STRB     R5,[R6, #+95]
   \   000008F8   070000EA           B        ??RestoreSettings_4
    367                      case C_SD_RECEIVE_VOL_WGT   :
    368                          ReceiveWeightVolume = true; break;
   \                     ??RestoreSettings_37:
   \   000008FC   6150C6E5           STRB     R5,[R6, #+97]
   \   00000900   050000EA           B        ??RestoreSettings_4
    369                      case C_SD_PRINTER_ON_TDU    :
    370                          PrinterOnThisTXU   = true;
    371                          if (PrinterOnThisTXU) {
    372                              PROPrinter::CurPrinterId = PROPrinter::LastDefPrinter->IDNumber;
   \                     ??RestoreSettings_36:
   \   00000904   ........           LDR      R1,??DataTable6  ;; ??LastDefPrinter
   \   00000908   ........           LDR      R0,??DataTable7  ;; ??CurPrinterId
   \   0000090C   001091E5           LDR      R1,[R1, #+0]
   \   00000910   6050C6E5           STRB     R5,[R6, #+96]
   \   00000914   9C1091E5           LDR      R1,[R1, #+156]
   \   00000918   001080E5           STR      R1,[R0, #+0]
    373                          }
    374                          break;
    375                      }
    376                  }
    377              }while (NoError && (ErrorLine != EOF) && (Key != C_PRO_END));
   \                     ??RestoreSettings_4:
   \   0000091C   0020A0E3           MOV      R2,#+0
   \   00000920   0510A0E1           MOV      R1,R5
   \   00000924   7C008DE2           ADD      R0,SP,#+124
   \   00000928   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   0000092C   000058E3           CMP      R8,#+0
   \   00000930   00009D15           LDRNE    R0,[SP, #+0]
   \   00000934   01007013           CMNNE    R0,#+1
   \   00000938   04009D15           LDRNE    R0,[SP, #+4]
   \   0000093C   FA0F5013           CMPNE    R0,#+1000
   \   00000940   D0FDFF1A           BNE      ??RestoreSettings_1
    378              if (Master && NoError) {
   \   00000944   ........           LDR      R0,??DataTable8  ;; Master
   \   00000948   0000D0E5           LDRB     R0,[R0, #+0]
   \   0000094C   000018E1           TST      R8,R0
   \   00000950   0500000A           BEQ      ??RestoreSettings_45
    379                  SendData(CMD_GENERIC_STATIC_DATA);
   \   00000954   20029DE5           LDR      R0,[SP, #+544]
   \   00000958   6610A0E3           MOV      R1,#+102
   \   0000095C   A42090E5           LDR      R2,[R0, #+164]
   \   00000960   402092E5           LDR      R2,[R2, #+64]
   \   00000964   0FE0A0E1           MOV      LR,PC
   \   00000968   12FF2FE1           BX       R2
    380              }
    381              return (NoError);
   \                     ??RestoreSettings_45:
   \   0000096C   0800A0E1           MOV      R0,R8
   \   00000970   89DF8DE2           ADD      SP,SP,#+548
   \   00000974   ........           B        ??Subroutine25_0
   \                     ??RestoreSettings_2:
   \   00000978   ........           DC32     NewLineStr
   \   0000097C   ........           DC32     `?<Constant " is not allowed here!...">`
    382          }
    383          
    384          

   \                                 In segment CODE, align 4, keep-with-next
    385          ValueList* PROSystemData::GetValueInfoTable(int &Entries, int Index) {
    386              return GetValueInfoTableStatic(Entries, Index);
   \                     ??GetValueInfoTable:
   \   00000000   0500A0E3           MOV      R0,#+5
   \   00000004   000081E5           STR      R0,[R1, #+0]
   \   00000008   ........           B        ?Subroutine28
    387          }

   \                                 In segment CODE, align 4, keep-with-next
   \                     ?Subroutine28:
   \   00000000   00009FE5           LDR      R0,??Subroutine28_0  ;; ??SelectSystemValueList
   \   00000004   1EFF2FE1           BX       LR               ;; return
   \                     ??Subroutine28_0:
   \   00000008   ........           DC32     ??SelectSystemValueList
    388          

   \                                 In segment DATA_I, align 4, align-sorted
    389          ValueList PROSystemData::SelectSystemValueList[] = {
   \                     ??SelectSystemValueList:
   \   00000000                      DS8 60
   \   0000003C                      REQUIRE `?<Initializer for SelectSystemValueList>`
    390              { L_WORD404, L_WORD237, SVT_ATM_PRESSURE },                               // {"AtmPress"         ,"",SVT_ATM_PRESSURE},
    391              { L_WORD425, L_WORD237, SVT_TRIM_ANGLE_NOSIGN },                               // {"Trim in deg"      ,"",SVT_TRIM_ANGLE},
    392              { L_WORD426, L_WORD237, SVT_TRIM_M_NOSIGN },                                   // {"Trim in meter"    ,"",SVT_TRIM_M},
    393          	{ L_WORD427, L_WORD237, SVT_LIST_ANGLE_NOSIGN },                               // {"List in deg"      ,"",SVT_LIST_ANGLE},
    394              { L_WORD447, L_WORD237, SVT_LIST_M_NOSIGN },                                   // {"List in meter"    ,"",SVT_LIST_M},
    395          };
    396          
    397          

   \                                 In segment CODE, align 4, keep-with-next
    398          ValueList* PROSystemData::GetValueInfoTableStatic(int &Entries, int Index) {
    399              Entries = NELEMENTS(SelectSystemValueList);
   \                     ??GetValueInfoTableStatic:
   \   00000000   0510A0E3           MOV      R1,#+5
   \   00000004   001080E5           STR      R1,[R0, #+0]
    400              return (SelectSystemValueList);
   \   00000008                      REQUIRE ?Subroutine28
   \   00000008                      ;; // Fall through to label ?Subroutine28
    401          }
    402          

   \                                 In segment CODE, align 4, keep-with-next
    403          void PROSystemData::CalcTotals(vector<PRogramObjectBase *> &ObjectVector, float *Volume, float *Weight) {
   \                     ??CalcTotals:
   \   00000000   F04F2DE9           PUSH     {R4-R11,LR}
   \   00000004   0140A0E1           MOV      R4,R1
    404              float                              TmpVol = 0.0;
    405              float                              TmpWgt = 0.0;
    406              set<PRogramObjectBase *>::iterator pBIt;
    407              for (unsigned i = 0; i < ObjectVector.size(); i++) {
   \   00000008   007094E5           LDR      R7,[R4, #+0]
   \   0000000C   0250A0E1           MOV      R5,R2
   \   00000010   0360A0E1           MOV      R6,R3
   \   00000014   0080A0E3           MOV      R8,#+0
   \   00000018   0090A0E3           MOV      R9,#+0
   \   0000001C   08A0A0E1           MOV      R10,R8
   \   00000020   090000EA           B        ??CalcTotals_1
    408                  PROTank *TankPtr = (PROTank *)ObjectVector[i];
   \                     ??CalcTotals_2:
   \   00000024   0AB197E7           LDR      R11,[R7, +R10, LSL #+2]
    409                  TmpVol += TankPtr->Volume;
   \   00000028   0810A0E1           MOV      R1,R8
   \   0000002C   B4029BE5           LDR      R0,[R11, #+692]
    410                  TmpWgt += TankPtr->Weight;
    411              }
   \   00000030   01A08AE2           ADD      R10,R10,#+1
   \   00000034   ........           _BLF     __fAdd,??__fAdd??rA
   \   00000038   0080A0E1           MOV      R8,R0
   \   0000003C   BC029BE5           LDR      R0,[R11, #+700]
   \   00000040   0910A0E1           MOV      R1,R9
   \   00000044   ........           _BLF     __fAdd,??__fAdd??rA
   \   00000048   0090A0E1           MOV      R9,R0
   \                     ??CalcTotals_1:
   \   0000004C   040094E5           LDR      R0,[R4, #+4]
   \   00000050   070040E0           SUB      R0,R0,R7
   \   00000054   20015AE1           CMP      R10,R0, LSR #+2
   \   00000058   F1FFFF3A           BCC      ??CalcTotals_2
    412              *Volume = TmpVol;
   \   0000005C   008085E5           STR      R8,[R5, #+0]
    413              *Weight = TmpWgt;
   \   00000060   009086E5           STR      R9,[R6, #+0]
    414          
    415          
    416          }
   \   00000064   ........           B        ??Subroutine25_0
    417          

   \                                 In segment CODE, align 4, keep-with-next
    418          void PROSystemData::Calculate(void) {
    419              // Trim
    420              switch (TrimSource) {
   \                     ??Calculate:
   \   00000000   ........           LDR      R1,??DataTable9  ;; ??PRODraftSysPtr
   \   00000004   74319FE5           LDR      R3,??Calculate_3  ;; ??TrimValue_1
   \   00000008   10402DE9           PUSH     {R4,LR}
   \   0000000C   001091E5           LDR      R1,[R1, #+0]
   \   00000010   003093E5           LDR      R3,[R3, #+0]
   \   00000014   0040A0E1           MOV      R4,R0
   \   00000018   ........           LDR      R0,??DataTable10  ;; ??TXUSystemData
   \   0000001C   1C2090E5           LDR      R2,[R0, #+28]
   \   00000020   14C090E5           LDR      R12,[R0, #+20]
   \   00000024   DAC04CE2           SUB      R12,R12,#+218
   \   00000028   80CD4CE2           SUB      R12,R12,#+8192
   \   0000002C   02005CE3           CMP      R12,#+2
   \   00000030   0F00008A           BHI      ??Calculate_4
   \   00000034   01EF8FE2           ADR      LR,??Calculate_1
   \   00000038   0CE0DEE7           LDRB     LR,[LR, R12]
   \   0000003C   0EF18FE0           ADD      PC,PC,LR, LSL #+2
   \                     ??Calculate_1:
   \   00000040   000B0200           DC8      +0,+11,+2,+0
    421              case C_SD_MAN_SOURCE  :
    422                  TrimValue = ManualTrim;
   \                     ??Calculate_5:
   \   00000044   242080E5           STR      R2,[R0, #+36]
   \   00000048   090000EA           B        ??Calculate_4
    423                  break;
    424          	case C_SD_DRAFT_SOURCE:
    425                  if (PRODraftSystem::PRODraftSysPtr && PRODraftSystem::PRODraftSysPtr->HasTrimValue) {
   \                     ??Calculate_6:
   \   0000004C   000051E3           CMP      R1,#+0
   \   00000050   A9C1D115           LDRBNE   R12,[R1, #+425]
   \   00000054   00005C13           CMPNE    R12,#+0
    426                      TrimValue = PRODraftSystem::PRODraftSysPtr->TrimValue;
   \   00000058   AC219115           LDRNE    R2,[R1, #+428]
   \   0000005C   F8FFFF1A           BNE      ??Calculate_5
    427                  } else if (PROInclinometer::HasTrimValue) {
   \   00000060   1CC19FE5           LDR      R12,??Calculate_3+0x4  ;; ??HasTrimValue
   \   00000064   00C0DCE5           LDRB     R12,[R12, #+0]
   \   00000068   00005CE3           CMP      R12,#+0
   \   0000006C   F4FFFF0A           BEQ      ??Calculate_5
    428                      TrimValue = PROInclinometer::PROInclinPtr->TrimValue;
    429                  } else {
    430                      TrimValue = ManualTrim;
    431                  }
    432                  break;
    433              case C_SD_INC_SOURCE  :
    434                  TrimValue = PROInclinometer::TrimValue;
   \                     ??Calculate_7:
   \   00000070   243080E5           STR      R3,[R0, #+36]
    435                  break;
    436              }
    437              switch (ListSource) {
   \                     ??Calculate_4:
   \   00000074   0C319FE5           LDR      R3,??Calculate_3+0x8  ;; ??ListValue_1
   \   00000078   18C090E5           LDR      R12,[R0, #+24]
   \   0000007C   202090E5           LDR      R2,[R0, #+32]
   \   00000080   003093E5           LDR      R3,[R3, #+0]
   \   00000084   DAC04CE2           SUB      R12,R12,#+218
   \   00000088   80CD4CE2           SUB      R12,R12,#+8192
   \   0000008C   02005CE3           CMP      R12,#+2
   \   00000090   1000008A           BHI      ??Calculate_8
   \   00000094   01EF8FE2           ADR      LR,??Calculate_2
   \   00000098   0CE0DEE7           LDRB     LR,[LR, R12]
   \   0000009C   0EF18FE0           ADD      PC,PC,LR, LSL #+2
   \                     ??Calculate_2:
   \   000000A0   000C0200           DC8      +0,+12,+2,+0
    438              case C_SD_MAN_SOURCE  :
    439                  ListValue = ManualList;
   \                     ??Calculate_9:
   \   000000A4   282080E5           STR      R2,[R0, #+40]
   \   000000A8   0A0000EA           B        ??Calculate_8
    440                  break;
    441              case C_SD_DRAFT_SOURCE:
    442                  if (PRODraftSystem::PRODraftSysPtr && PRODraftSystem::PRODraftSysPtr->HasListValue) {
   \                     ??Calculate_10:
   \   000000AC   000051E3           CMP      R1,#+0
   \   000000B0   AAC1D115           LDRBNE   R12,[R1, #+426]
   \   000000B4   00005C13           CMPNE    R12,#+0
    443                      ListValue = PRODraftSystem::PRODraftSysPtr->ListValue;
   \   000000B8   B0119115           LDRNE    R1,[R1, #+432]
   \   000000BC   28108015           STRNE    R1,[R0, #+40]
   \   000000C0   0400001A           BNE      ??Calculate_8
    444                  } else if (PROInclinometer::HasListValue) {
   \   000000C4   C0109FE5           LDR      R1,??Calculate_3+0xC  ;; ??HasListValue
   \   000000C8   0010D1E5           LDRB     R1,[R1, #+0]
   \   000000CC   000051E3           CMP      R1,#+0
   \   000000D0   F3FFFF0A           BEQ      ??Calculate_9
    445                      ListValue = PROInclinometer::ListValue;
    446                  } else {
    447                      ListValue = ManualList;
    448                  }
    449          		break;
    450              case C_SD_INC_SOURCE  :
    451                  ListValue = PROInclinometer::ListValue;
   \                     ??Calculate_11:
   \   000000D4   283080E5           STR      R3,[R0, #+40]
    452                  break;
    453              }
    454              CalcTotals(PROCargoTank::AllObjVector, &CargoVolume, &CargoWeight);
   \                     ??Calculate_8:
   \   000000D8   ........           LDR      R1,??DataTable11  ;; ??AllObjVector
   \   000000DC   593F84E2           ADD      R3,R4,#+356
   \   000000E0   522F84E2           ADD      R2,R4,#+328
   \   000000E4   0400A0E1           MOV      R0,R4
   \   000000E8   ........           BL       ??CalcTotals
    455              CalcTotals(PROBallastTank::AllObjVector, &BallastVolume, &BallastWeight);
   \   000000EC   ........           LDR      R1,??DataTable12  ;; ??AllObjVector_1
   \   000000F0   5A3F84E2           ADD      R3,R4,#+360
   \   000000F4   532F84E2           ADD      R2,R4,#+332
   \   000000F8   0400A0E1           MOV      R0,R4
   \   000000FC   ........           BL       ??CalcTotals
    456              CalcTotals(PROServiceTank::AllHeavyFuelOilVector, &HeavyFuelVolume, &HeavyFuelWeight);
   \   00000100   ........           LDR      R1,??DataTable13  ;; ??AllHeavyFuelOilVector
   \   00000104   5B3F84E2           ADD      R3,R4,#+364
   \   00000108   542F84E2           ADD      R2,R4,#+336
   \   0000010C   0400A0E1           MOV      R0,R4
   \   00000110   ........           BL       ??CalcTotals
    457              CalcTotals(PROServiceTank::AllDieselVector, &DieselOilVolume, &DieselOilWeight);
   \   00000114   ........           LDR      R1,??DataTable14  ;; ??AllDieselVector
   \   00000118   5C3F84E2           ADD      R3,R4,#+368
   \   0000011C   552F84E2           ADD      R2,R4,#+340
   \   00000120   0400A0E1           MOV      R0,R4
   \   00000124   ........           BL       ??CalcTotals
    458              CalcTotals(PROServiceTank::AllLubricantsVector, &LubricantsVolume, &LubricantsWeight);
   \   00000128   ........           LDR      R1,??DataTable15  ;; ??AllLubricantsVector
   \   0000012C   5D3F84E2           ADD      R3,R4,#+372
   \   00000130   562F84E2           ADD      R2,R4,#+344
   \   00000134   0400A0E1           MOV      R0,R4
   \   00000138   ........           BL       ??CalcTotals
    459              CalcTotals(PROServiceTank::MiscVector, &MiscVolume, &MiscWeight);
   \   0000013C   4C109FE5           LDR      R1,??Calculate_3+0x10  ;; ??MiscVector
   \   00000140   5F3F84E2           ADD      R3,R4,#+380
   \   00000144   582F84E2           ADD      R2,R4,#+352
   \   00000148   0400A0E1           MOV      R0,R4
   \   0000014C   ........           BL       ??CalcTotals
    460              CalcTotals(PROServiceTank::FreshWaterVector, &FreshWaterVolume, &FreshWaterWeight);
   \   00000150   3C109FE5           LDR      R1,??Calculate_3+0x14  ;; ??FreshWaterVector
   \   00000154   5E3F84E2           ADD      R3,R4,#+376
   \   00000158   572F84E2           ADD      R2,R4,#+348
   \   0000015C   0400A0E1           MOV      R0,R4
   \   00000160   ........           BL       ??CalcTotals
    461              SendData();
   \   00000164   A42094E5           LDR      R2,[R4, #+164]
   \   00000168   6510A0E3           MOV      R1,#+101
   \   0000016C   402092E5           LDR      R2,[R2, #+64]
   \   00000170   0400A0E1           MOV      R0,R4
   \   00000174   0FE0A0E1           MOV      LR,PC
   \   00000178   12FF2FE1           BX       R2
    462          }
   \   0000017C   ........           B        ?Subroutine29
   \                     ??Calculate_3:
   \   00000180   ........           DC32     ??TrimValue_1
   \   00000184   ........           DC32     ??HasTrimValue
   \   00000188   ........           DC32     ??ListValue_1
   \   0000018C   ........           DC32     ??HasListValue
   \   00000190   ........           DC32     ??MiscVector
   \   00000194   ........           DC32     ??FreshWaterVector

   \                                 In segment CODE, align 4, keep-with-next
   \                     ?Subroutine29:
   \   00000000   1040BDE8           POP      {R4,LR}
   \   00000004   1EFF2FE1           BX       LR               ;; return
    463          

   \                                 In segment CODE, align 4, keep-with-next
    464          int PROSystemData::GetValue(int ValueId, int Index, float &MyRetValue,  int &DecPnt, int &Unit) {
   \                     ??GetValue:
   \   00000000   F04F2DE9           PUSH     {R4-R11,LR}
   \   00000004   24709DE5           LDR      R7,[SP, #+36]
   \   00000008   28809DE5           LDR      R8,[SP, #+40]
    465              int Status = GETVAL_NO_ERR;
    466              switch (ValueId) {
   \   0000000C   ........           LDR      R9,??DataTable29  ;; ??TXUSystemData
   \   00000010   0060A0E1           MOV      R6,R0
   \   00000014   60079FE5           LDR      R0,??GetValue_5  ;; ??IsInlandVessel
   \   00000018   0340A0E1           MOV      R4,R3
   \   0000001C   0000D0E5           LDRB     R0,[R0, #+0]
   \   00000020   0050A0E3           MOV      R5,#+0
   \   00000024   0A30A0E3           MOV      R3,#+10
   \   00000028   01A0A0E3           MOV      R10,#+1
   \   0000002C   00C0A0E3           MOV      R12,#+0
   \   00000030   FE0F51E3           CMP      R1,#+1016
   \   00000034   C101000A           BEQ      ??GetValue_6
   \   00000038   47B0A0E3           MOV      R11,#+71
   \   0000003C   50BE8BE3           ORR      R11,R11,#0x500
   \   00000040   0B0051E1           CMP      R1,R11
   \   00000044   E500000A           BEQ      ??GetValue_7
   \   00000048   04B08BE2           ADD      R11,R11,#+4
   \   0000004C   0B0051E1           CMP      R1,R11
   \   00000050   9D00000A           BEQ      ??GetValue_8
   \   00000054   01B08BE2           ADD      R11,R11,#+1
   \   00000058   0B0051E1           CMP      R1,R11
   \   0000005C   A400000A           BEQ      ??GetValue_9
   \   00000060   01B08BE3           ORR      R11,R11,#0x1
   \   00000064   0B0051E1           CMP      R1,R11
   \   00000068   B700000A           BEQ      ??GetValue_10
   \   0000006C   01B08BE2           ADD      R11,R11,#+1
   \   00000070   0B0051E1           CMP      R1,R11
   \   00000074   9300000A           BEQ      ??GetValue_11
   \   00000078   01B08BE3           ORR      R11,R11,#0x1
   \   0000007C   0B0051E1           CMP      R1,R11
   \   00000080   B000000A           BEQ      ??GetValue_12
   \   00000084   550E51E3           CMP      R1,#+1360
   \   00000088   BC00000A           BEQ      ??GetValue_13
   \   0000008C   55BE8AE3           ORR      R11,R10,#0x550
   \   00000090   0B0051E1           CMP      R1,R11
   \   00000094   BF00000A           BEQ      ??GetValue_14
   \   00000098   01B08BE2           ADD      R11,R11,#+1
   \   0000009C   0B0051E1           CMP      R1,R11
   \   000000A0   C500000A           BEQ      ??GetValue_15
   \   000000A4   01B08BE3           ORR      R11,R11,#0x1
   \   000000A8   0B0051E1           CMP      R1,R11
   \   000000AC   B800000A           BEQ      ??GetValue_16
   \   000000B0   01B08BE2           ADD      R11,R11,#+1
   \   000000B4   0B0051E1           CMP      R1,R11
   \   000000B8   BE00000A           BEQ      ??GetValue_17
   \   000000BC   01B08BE3           ORR      R11,R11,#0x1
   \   000000C0   0B0051E1           CMP      R1,R11
   \   000000C4   A400000A           BEQ      ??GetValue_18
   \   000000C8   01B08BE2           ADD      R11,R11,#+1
   \   000000CC   0B0051E1           CMP      R1,R11
   \   000000D0   BE00000A           BEQ      ??GetValue_19
   \   000000D4   02B08BE2           ADD      R11,R11,#+2
   \   000000D8   0B0051E1           CMP      R1,R11
   \   000000DC   01B08B13           ORRNE    R11,R11,#0x1
   \   000000E0   0B005111           CMPNE    R1,R11
   \   000000E4   55BE8313           ORRNE    R11,R3,#0x550
   \   000000E8   0B005111           CMPNE    R1,R11
   \   000000EC   01B08B13           ORRNE    R11,R11,#0x1
   \   000000F0   0B005111           CMPNE    R1,R11
   \   000000F4   01B08B12           ADDNE    R11,R11,#+1
   \   000000F8   0B005111           CMPNE    R1,R11
   \   000000FC   01B08B13           ORRNE    R11,R11,#0x1
   \   00000100   0B005111           CMPNE    R1,R11
   \   00000104   01B08B12           ADDNE    R11,R11,#+1
   \   00000108   0B005111           CMPNE    R1,R11
   \   0000010C   7C01000A           BEQ      ??GetValue_20
   \   00000110   29B08BE2           ADD      R11,R11,#+41
   \   00000114   0B0051E1           CMP      R1,R11
   \   00000118   B600000A           BEQ      ??GetValue_21
   \   0000011C   05B08BE2           ADD      R11,R11,#+5
   \   00000120   0B0051E1           CMP      R1,R11
   \   00000124   B800000A           BEQ      ??GetValue_22
   \   00000128   02B08BE3           ORR      R11,R11,#0x2
   \   0000012C   0B0051E1           CMP      R1,R11
   \   00000130   BA00000A           BEQ      ??GetValue_23
   \   00000134   590E51E3           CMP      R1,#+1424
   \   00000138   C100000A           BEQ      ??GetValue_24
   \   0000013C   11B08BE3           ORR      R11,R11,#0x11
   \   00000140   0B0051E1           CMP      R1,R11
   \   00000144   CB00000A           BEQ      ??GetValue_25
   \   00000148   5A0E51E3           CMP      R1,#+1440
   \   0000014C   C400000A           BEQ      ??GetValue_26
   \   00000150   5ABE8AE3           ORR      R11,R10,#0x5A0
   \   00000154   0B0051E1           CMP      R1,R11
   \   00000158   01B08B12           ADDNE    R11,R11,#+1
   \   0000015C   0B005111           CMPNE    R1,R11
   \   00000160   01B08B13           ORRNE    R11,R11,#0x1
   \   00000164   0B005111           CMPNE    R1,R11
   \   00000168   01B08B12           ADDNE    R11,R11,#+1
   \   0000016C   0B005111           CMPNE    R1,R11
   \   00000170   01B08B13           ORRNE    R11,R11,#0x1
   \   00000174   0B005111           CMPNE    R1,R11
   \   00000178   01B08B12           ADDNE    R11,R11,#+1
   \   0000017C   0B005111           CMPNE    R1,R11
   \   00000180   C100000A           BEQ      ??GetValue_27
   \   00000184   5ABE83E3           ORR      R11,R3,#0x5A0
   \   00000188   0B0051E1           CMP      R1,R11
   \   0000018C   0701000A           BEQ      ??GetValue_28
   \   00000190   01B08BE3           ORR      R11,R11,#0x1
   \   00000194   0B0051E1           CMP      R1,R11
   \   00000198   2F01000A           BEQ      ??GetValue_29
   \   0000019C   01B08BE2           ADD      R11,R11,#+1
   \   000001A0   0B0051E1           CMP      R1,R11
   \   000001A4   0101000A           BEQ      ??GetValue_28
   \   000001A8   01B08BE3           ORR      R11,R11,#0x1
   \   000001AC   0B0051E1           CMP      R1,R11
   \   000001B0   2901000A           BEQ      ??GetValue_29
   \   000001B4   01B08BE2           ADD      R11,R11,#+1
   \   000001B8   0B0051E1           CMP      R1,R11
   \   000001BC   FB00000A           BEQ      ??GetValue_28
   \   000001C0   01B08BE3           ORR      R11,R11,#0x1
   \   000001C4   0B0051E1           CMP      R1,R11
   \   000001C8   2301000A           BEQ      ??GetValue_29
   \   000001CC   5B0E51E3           CMP      R1,#+1456
   \   000001D0   F600000A           BEQ      ??GetValue_28
   \   000001D4   5BBE8AE3           ORR      R11,R10,#0x5B0
   \   000001D8   0B0051E1           CMP      R1,R11
   \   000001DC   1E01000A           BEQ      ??GetValue_29
   \   000001E0   01B08BE2           ADD      R11,R11,#+1
   \   000001E4   0B0051E1           CMP      R1,R11
   \   000001E8   F000000A           BEQ      ??GetValue_28
   \   000001EC   01B08BE3           ORR      R11,R11,#0x1
   \   000001F0   0B0051E1           CMP      R1,R11
   \   000001F4   1801000A           BEQ      ??GetValue_29
   \   000001F8   01B08BE2           ADD      R11,R11,#+1
   \   000001FC   0B0051E1           CMP      R1,R11
   \   00000200   EA00000A           BEQ      ??GetValue_28
   \   00000204   01B08BE3           ORR      R11,R11,#0x1
   \   00000208   0B0051E1           CMP      R1,R11
   \   0000020C   1201000A           BEQ      ??GetValue_29
   \   00000210   01B08BE2           ADD      R11,R11,#+1
   \   00000214   0B0051E1           CMP      R1,R11
   \   00000218   E400000A           BEQ      ??GetValue_28
   \   0000021C   01B08BE3           ORR      R11,R11,#0x1
   \   00000220   0B0051E1           CMP      R1,R11
   \   00000224   0C01000A           BEQ      ??GetValue_29
   \   00000228   04B08BE2           ADD      R11,R11,#+4
   \   0000022C   0B0051E1           CMP      R1,R11
   \   00000230   DE00000A           BEQ      ??GetValue_28
   \   00000234   01B08BE2           ADD      R11,R11,#+1
   \   00000238   0B0051E1           CMP      R1,R11
   \   0000023C   0601000A           BEQ      ??GetValue_29
   \   00000240   01B08BE3           ORR      R11,R11,#0x1
   \   00000244   0B0051E1           CMP      R1,R11
   \   00000248   B300000A           BEQ      ??GetValue_30
   \   0000024C   01B08BE2           ADD      R11,R11,#+1
   \   00000250   0B0051E1           CMP      R1,R11
   \   00000254   A500000A           BEQ      ??GetValue_31
   \   00000258   01B08BE3           ORR      R11,R11,#0x1
   \   0000025C   0B0051E1           CMP      R1,R11
   \   00000260   B200000A           BEQ      ??GetValue_32
   \   00000264   5C0E51E3           CMP      R1,#+1472
   \   00000268   B500000A           BEQ      ??GetValue_33
   \   0000026C   5CBE8AE3           ORR      R11,R10,#0x5C0
   \   00000270   0B0051E1           CMP      R1,R11
   \   00000274   B700000A           BEQ      ??GetValue_34
   \   00000278   01B08BE2           ADD      R11,R11,#+1
   \   0000027C   0B0051E1           CMP      R1,R11
   \   00000280   B800000A           BEQ      ??GetValue_35
   \   00000284   01B08BE3           ORR      R11,R11,#0x1
   \   00000288   0B0051E1           CMP      R1,R11
   \   0000028C   BA00000A           BEQ      ??GetValue_36
   \   00000290   01B08BE2           ADD      R11,R11,#+1
   \   00000294   0B0051E1           CMP      R1,R11
   \   00000298   BC00000A           BEQ      ??GetValue_37
   \   0000029C   01B08BE3           ORR      R11,R11,#0x1
   \   000002A0   0B0051E1           CMP      R1,R11
   \   000002A4   BD00000A           BEQ      ??GetValue_38
   \   000002A8   5FBE83E3           ORR      R11,R3,#0x5F0
   \   000002AC   0B0051E1           CMP      R1,R11
   \   000002B0   2901001A           BNE      ??GetValue_39
    467              case SVT_LATITUDE:
    468                  DecPnt     = 1;
   \   000002B4   00A087E5           STR      R10,[R7, #+0]
    469                  Unit       = ANGLE_UNIT;
   \   000002B8   003088E5           STR      R3,[R8, #+0]
    470          		MyRetValue = Latitude;
   \   000002BC   040099E5           LDR      R0,[R9, #+4]
   \                     ??GetValue_40:
   \   000002C0   000084E5           STR      R0,[R4, #+0]
   \   000002C4   2B0100EA           B        ??GetValue_41
    471                  break;
    472          	case SVT_TRIM_M_NOSIGN:
    473                  Status     = GETVAL_FWD_AFT;
   \                     ??GetValue_11:
   \   000002C8   0A50A0E3           MOV      R5,#+10
    474              case SVT_TRIM_M:
    475                  if (PROProjectInfo::IsInlandVessel) {
   \                     ??GetValue_8:
   \   000002CC   000050E3           CMP      R0,#+0
    476                      DecPnt     = 2;
   \   000002D0   0200A013           MOVNE    R0,#+2
    477                  } else {
    478                      DecPnt     = 1;
   \   000002D4   0100A003           MOVEQ    R0,#+1
   \   000002D8   000087E5           STR      R0,[R7, #+0]
    479                  }
    480                  Unit       = LENGTH_UNIT;
    481          		MyRetValue = TrimValue * PROProjectInfo::LengthBetweenPP;
   \   000002DC   ........           LDR      R0,??DataTable30  ;; ??LengthBetweenPP
   \                     ??GetValue_42:
   \   000002E0   00A088E5           STR      R10,[R8, #+0]
   \   000002E4   241099E5           LDR      R1,[R9, #+36]
   \                     ??GetValue_43:
   \   000002E8   000090E5           LDR      R0,[R0, #+0]
   \   000002EC   ........           _BLF     __fMul,??__fMul??rA
   \   000002F0   F2FFFFEA           B        ??GetValue_40
    482          		break;
    483              case SVT_TRIM_MARKS_M:
    484                  if (PRODraftSystem::PRODraftSysPtr) {
   \                     ??GetValue_9:
   \   000002F4   ........           LDR      R0,??DataTable18  ;; ??PRODraftSysPtr
   \   000002F8   006090E5           LDR      R6,[R0, #+0]
   \   000002FC   000056E3           CMP      R6,#+0
   \   00000300   0D00000A           BEQ      ??GetValue_44
    485          			Status = PRODraftSystem::PRODraftSysPtr->GetValue(ValueId,Index, MyRetValue,DecPnt,Unit);
   \   00000304   0800A0E1           MOV      R0,R8
   \   00000308   01002DE9           PUSH     {R0}
   \   0000030C   0700A0E1           MOV      R0,R7
   \   00000310   01002DE9           PUSH     {R0}
   \   00000314   A45096E5           LDR      R5,[R6, #+164]
   \   00000318   0430A0E1           MOV      R3,R4
   \   0000031C   245095E5           LDR      R5,[R5, #+36]
   \   00000320   0600A0E1           MOV      R0,R6
   \   00000324   0FE0A0E1           MOV      LR,PC
   \   00000328   15FF2FE1           BX       R5
   \   0000032C   0050B0E1           MOVS     R5,R0
    486          			if ( Status != GETVAL_NO_ERR){
   \   00000330   08D08DE2           ADD      SP,SP,#+8
   \   00000334   0F01000A           BEQ      ??GetValue_41
    487          	            Status 	   = GETVAL_NO_ERR;
   \   00000338   0050A0E3           MOV      R5,#+0
    488          				DecPnt     = 1;
    489          				Unit       = LENGTH_UNIT;
    490          				MyRetValue = TrimValue * PROProjectInfo::LengthBetweenMarks;
    491          			}
    492          		} else {
    493          			DecPnt     = 1;
    494          			Unit       = LENGTH_UNIT;
    495          			MyRetValue = TrimValue * PROProjectInfo::LengthBetweenMarks;
   \                     ??GetValue_44:
   \   0000033C   ........           LDR      R0,??DataTable31  ;; ??LengthBetweenMarks
   \   00000340   00A087E5           STR      R10,[R7, #+0]
   \   00000344   E5FFFFEA           B        ??GetValue_42
    496          		}
    497          		break;
    498              case SVT_TRIM_ANGLE_NOSIGN:
    499                  Status     = GETVAL_FWD_AFT;
   \                     ??GetValue_12:
   \   00000348   0A50A0E3           MOV      R5,#+10
    500              case SVT_TRIM_ANGLE:
    501                  DecPnt     = 1;
   \                     ??GetValue_10:
   \   0000034C   00A087E5           STR      R10,[R7, #+0]
    502                  Unit       = ANGLE_UNIT;
   \   00000350   003088E5           STR      R3,[R8, #+0]
    503                  MyRetValue = TrimValue;
   \   00000354   240099E5           LDR      R0,[R9, #+36]
   \   00000358   D8FFFFEA           B        ??GetValue_40
    504                  break;
    505              case SVT_TRIM_DEG:
    506                  DecPnt     = 1;
   \                     ??GetValue_18:
   \   0000035C   00A087E5           STR      R10,[R7, #+0]
    507                  Unit       = NO_UNIT;
   \   00000360   00C088E5           STR      R12,[R8, #+0]
    508                  MyRetValue = TrimValue * RAD_FACTOR;
   \   00000364   240099E5           LDR      R0,[R9, #+36]
   \                     ??GetValue_45:
   \   00000368   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   0000036C   ........           LDR      R2,??DataTable35  ;; 0x1a63c1f8
   \   00000370   ........           LDR      R3,??DataTable36  ;; 0x404ca5dc
   \   00000374   ........           _BLF     __dMul,??__dMul??rA
   \                     ??GetValue_46:
   \   00000378   ........           _BLF     __doubleToFloat,??__doubleToFloat??rA
   \   0000037C   CFFFFFEA           B        ??GetValue_40
    509                  break;
    510              case SVT_TRIM_SOURCE:
    511                  DecPnt      = 0;
   \                     ??GetValue_13:
   \   00000380   00C087E5           STR      R12,[R7, #+0]
    512                  Unit        = NO_UNIT;
   \   00000384   00C088E5           STR      R12,[R8, #+0]
    513                  MyRetValue  = TrimSource;
   \   00000388   140099E5           LDR      R0,[R9, #+20]
   \   0000038C   ........           _BLF     __longToFloat,??__longToFloat??rA
   \   00000390   CAFFFFEA           B        ??GetValue_40
    514                  break;
    515              case SVT_LIST_M_NOSIGN:
    516                  Status      = GETVAL_PORT_STBD;
   \                     ??GetValue_16:
   \   00000394   0B50A0E3           MOV      R5,#+11
    517              case SVT_LIST_M:
    518                  if (PROProjectInfo::IsInlandVessel) {
   \                     ??GetValue_14:
   \   00000398   000050E3           CMP      R0,#+0
    519                      DecPnt     = 2;
   \   0000039C   0200A013           MOVNE    R0,#+2
    520                  } else {
    521                      DecPnt     = 1;
   \   000003A0   0100A003           MOVEQ    R0,#+1
   \   000003A4   000087E5           STR      R0,[R7, #+0]
    522                  }
    523                  Unit        = LENGTH_UNIT;
    524                  MyRetValue  = ListValue * PROProjectInfo::PROProjectInfoPtr->Width;
   \   000003A8   ........           LDR      R0,??DataTable34  ;; ??Width
   \   000003AC   00A088E5           STR      R10,[R8, #+0]
   \   000003B0   281099E5           LDR      R1,[R9, #+40]
   \   000003B4   CBFFFFEA           B        ??GetValue_43
    525                  break;
    526              case SVT_LIST_ANGLE_NOSIGN :
    527                  Status      = GETVAL_PORT_STBD;
   \                     ??GetValue_17:
   \   000003B8   0B50A0E3           MOV      R5,#+11
    528              case SVT_LIST_ANGLE :
    529                  DecPnt      = 1;
   \                     ??GetValue_15:
   \   000003BC   00A087E5           STR      R10,[R7, #+0]
    530                  Unit        = ANGLE_UNIT;
   \   000003C0   003088E5           STR      R3,[R8, #+0]
    531                  MyRetValue  = ListValue;
   \   000003C4   280099E5           LDR      R0,[R9, #+40]
   \                     ??GetValue_47:
   \   000003C8   000084E5           STR      R0,[R4, #+0]
   \   000003CC   E90000EA           B        ??GetValue_41
    532                  break;
    533              case SVT_LIST_DEG:
    534                  DecPnt     = 1;
   \                     ??GetValue_19:
   \   000003D0   00A087E5           STR      R10,[R7, #+0]
    535                  Unit       = NO_UNIT;
   \   000003D4   00C088E5           STR      R12,[R8, #+0]
    536                  MyRetValue = ListValue * RAD_FACTOR;
   \   000003D8   280099E5           LDR      R0,[R9, #+40]
   \   000003DC   E1FFFFEA           B        ??GetValue_45
    537                  break;
    538              case SVT_ATM_PRESSURE :
    539                  DecPnt     = 1;
   \                     ??GetValue_7:
   \   000003E0   00A087E5           STR      R10,[R7, #+0]
    540                  Unit = PRESSURE_UNIT1;
   \   000003E4   0600A0E3           MOV      R0,#+6
   \   000003E8   000088E5           STR      R0,[R8, #+0]
    541                  MyRetValue = AIPressSensor::AtmPressure;
   \   000003EC   ........           LDR      R0,??DataTable37  ;; ??AtmPressure
   \   000003F0   000090E5           LDR      R0,[R0, #+0]
   \   000003F4   B1FFFFEA           B        ??GetValue_40
    542                  break;
    543              case SVT_LIST_SOURCE:
    544                  DecPnt      = 0;
   \                     ??GetValue_21:
   \   000003F8   00C087E5           STR      R12,[R7, #+0]
    545                  Unit        = NO_UNIT;
   \   000003FC   00C088E5           STR      R12,[R8, #+0]
    546                  MyRetValue  = ListSource;
   \   00000400   180099E5           LDR      R0,[R9, #+24]
   \                     ??GetValue_48:
   \   00000404   ........           _BLF     __longToFloat,??__longToFloat??rA
   \   00000408   ACFFFFEA           B        ??GetValue_40
    547                  break;
    548              case SVT_CURRENT_UNIT_SYSTEM:
    549                  DecPnt      = 0;
   \                     ??GetValue_22:
   \   0000040C   00C087E5           STR      R12,[R7, #+0]
    550                  Unit        = NO_UNIT;
   \   00000410   00C088E5           STR      R12,[R8, #+0]
    551                  MyRetValue  = (float)CurrentUnitSystem;
   \   00000414   080099E5           LDR      R0,[R9, #+8]
   \   00000418   ........           _BLF     __longToFloat,??__longToFloat??rA
   \   0000041C   E9FFFFEA           B        ??GetValue_47
    552                  break;
    553              case SVT_ALARM_OFF_DELAY  :
    554                  DecPnt      = 0;
   \                     ??GetValue_23:
   \   00000420   00C087E5           STR      R12,[R7, #+0]
    555                  Unit        = SECOND_UNIT;
   \   00000424   1600A0E3           MOV      R0,#+22
   \   00000428   000088E5           STR      R0,[R8, #+0]
    556                  MyRetValue  = (float)AlarmOffDelay / 1000;
   \   0000042C   100099E5           LDR      R0,[R9, #+16]
   \   00000430   ........           _BLF     __longToFloat,??__longToFloat??rA
   \   00000434   4414A0E3           MOV      R1,#+1140850688
   \   00000438   7A1881E3           ORR      R1,R1,#0x7A0000
   \   0000043C   ........           _BLF     __fDiv,??__fDiv??rA
   \   00000440   9EFFFFEA           B        ??GetValue_40
    557                  break;
    558              case SVT_TOUCH_SCREEN_TIMEOUT  :
    559                  DecPnt      = 0;
    560                  Unit        = NO_UNIT;
    561                  MyRetValue  = (float)TouchScreenTimeOut / 60000;
   \                     ??GetValue_24:
   \   00000444   ........           LDR      R0,??DataTable24  ;; TouchScreenTimeOut
   \   00000448   00C087E5           STR      R12,[R7, #+0]
   \   0000044C   00C088E5           STR      R12,[R8, #+0]
   \   00000450   000090E5           LDR      R0,[R0, #+0]
   \   00000454   ........           _BLF     __longToFloat,??__longToFloat??rA
   \   00000458   20139FE5           LDR      R1,??GetValue_5+0x4  ;; 0x476a6000
   \   0000045C   ........           _BLF     __fDiv,??__fDiv??rA
   \   00000460   96FFFFEA           B        ??GetValue_40
    562                  break;
    563              case SVT_SEAWATER_TEMP :
    564                  DecPnt      = 1;
   \                     ??GetValue_26:
   \   00000464   00A087E5           STR      R10,[R7, #+0]
    565                  Unit        = TEMP_UNIT;
   \   00000468   0500A0E3           MOV      R0,#+5
   \   0000046C   000088E5           STR      R0,[R8, #+0]
    566                  MyRetValue  = SeaWaterTemp;
   \   00000470   440099E5           LDR      R0,[R9, #+68]
   \   00000474   91FFFFEA           B        ??GetValue_40
    567                  break;
    568              case SVT_AMBIENT_TEMP :
    569                  DecPnt      = 1;
   \                     ??GetValue_25:
   \   00000478   00A087E5           STR      R10,[R7, #+0]
    570                  Unit        = TEMP_UNIT;
   \   0000047C   0500A0E3           MOV      R0,#+5
   \   00000480   000088E5           STR      R0,[R8, #+0]
    571                  MyRetValue  = AmbientTemp;
   \   00000484   480099E5           LDR      R0,[R9, #+72]
   \   00000488   8CFFFFEA           B        ??GetValue_40
    572                  break;
    573              case SVT_SEAWATER_DNS  :
    574              case SVT_BALLAST_DNS   :
    575              case SVT_FRESHWATER_DNS:
    576              case SVT_HEAVY_FUEL_DNS:
    577              case SVT_DIESEL_DNS    :
    578              case SVT_LUBRICANTS_DNS:
    579                  DecPnt = 4;
   \                     ??GetValue_27:
   \   0000048C   0400A0E3           MOV      R0,#+4
   \   00000490   000087E5           STR      R0,[R7, #+0]
    580                  Unit   = DENSITY_UNIT;
   \   00000494   0900A0E3           MOV      R0,#+9
   \   00000498   000088E5           STR      R0,[R8, #+0]
    581                  {
    582                      switch (ValueId) {
   \   0000049C   A11041E2           SUB      R1,R1,#+161
   \   000004A0   501E41E2           SUB      R1,R1,#+1280
   \   000004A4   050051E3           CMP      R1,#+5
   \   000004A8   B200008A           BHI      ??GetValue_41
   \   000004AC   010F8FE2           ADR      R0,??GetValue_1
   \   000004B0   0100D0E7           LDRB     R0,[R0, R1]
   \   000004B4   00F18FE0           ADD      PC,PC,R0, LSL #+2
   \                     ??GetValue_1:
   \   000004B8   01030507           DC8      +1,+3,+5,+7
   \   000004BC   090B0000           DC8      +9,+11,+0,+0
    583                      case SVT_SEAWATER_DNS  :
    584                          MyRetValue = SeaWaterDensity; break;
   \                     ??GetValue_49:
   \   000004C0   300099E5           LDR      R0,[R9, #+48]
   \   000004C4   7DFFFFEA           B        ??GetValue_40
    585                      case SVT_BALLAST_DNS   :
    586                          MyRetValue = BallastDensity; break;
   \                     ??GetValue_50:
   \   000004C8   2C0099E5           LDR      R0,[R9, #+44]
   \   000004CC   7BFFFFEA           B        ??GetValue_40
    587                      case SVT_FRESHWATER_DNS:
    588                          MyRetValue = FreshWaterDensity; break;
   \                     ??GetValue_51:
   \   000004D0   340099E5           LDR      R0,[R9, #+52]
   \   000004D4   79FFFFEA           B        ??GetValue_40
    589                      case SVT_HEAVY_FUEL_DNS:
    590                          MyRetValue = HeavyFuelDensity; break;
   \                     ??GetValue_52:
   \   000004D8   380099E5           LDR      R0,[R9, #+56]
   \   000004DC   B9FFFFEA           B        ??GetValue_47
    591                      case SVT_DIESEL_DNS    :
    592                          MyRetValue = DieselDensity; break;
   \                     ??GetValue_53:
   \   000004E0   3C0099E5           LDR      R0,[R9, #+60]
   \   000004E4   75FFFFEA           B        ??GetValue_40
    593                      case SVT_LUBRICANTS_DNS:
    594                          MyRetValue = LubricantsDensity; break;
   \                     ??GetValue_54:
   \   000004E8   400099E5           LDR      R0,[R9, #+64]
   \   000004EC   73FFFFEA           B        ??GetValue_40
    595                      }
    596                  }
    597                  break;
    598              case SVT_LOG_TIME            :
    599                  DecPnt = 2;
   \                     ??GetValue_31:
   \   000004F0   0200A0E3           MOV      R0,#+2
   \   000004F4   000087E5           STR      R0,[R7, #+0]
    600                  Unit   = TIME_UNIT;
   \   000004F8   1400A0E3           MOV      R0,#+20
   \   000004FC   000088E5           STR      R0,[R8, #+0]
    601                  MyRetValue = ((float)LogTime) / (MSEC_TO_SEC * SEC_TO_HOURS);
   \   00000500   540099E5           LDR      R0,[R9, #+84]
   \   00000504   ........           _BLF     __longToFloat,??__longToFloat??rA
   \   00000508   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   0000050C   ........           LDR      R3,??DataTable25  ;; 0x414b7740
   \   00000510   0020A0E3           MOV      R2,#+0
   \   00000514   ........           _BLF     __dDiv,??__dDiv??rA
   \   00000518   96FFFFEA           B        ??GetValue_46
    602                  break;
    603              case SVT_LOG_TO_FILE          :
    604                  DecPnt = 0;
   \                     ??GetValue_30:
   \   0000051C   00C087E5           STR      R12,[R7, #+0]
    605                  Unit   = NO_UNIT;
   \   00000520   00C088E5           STR      R12,[R8, #+0]
    606                  MyRetValue = (float)LogToFile;
   \   00000524   5900D9E5           LDRB     R0,[R9, #+89]
   \   00000528   ........           _BLF     __ulongToFloat,??__ulongToFloat??rA
   \   0000052C   63FFFFEA           B        ??GetValue_40
    607                  break;
    608              case SVT_LOG_ALARMS          :
    609                  DecPnt = 0;
   \                     ??GetValue_32:
   \   00000530   00C087E5           STR      R12,[R7, #+0]
    610                  Unit   = NO_UNIT;
   \   00000534   00C088E5           STR      R12,[R8, #+0]
    611                  MyRetValue = (float)LogAlarms;
   \   00000538   5A00D9E5           LDRB     R0,[R9, #+90]
   \                     ??GetValue_55:
   \   0000053C   ........           _BLF     __ulongToFloat,??__ulongToFloat??rA
   \   00000540   5EFFFFEA           B        ??GetValue_40
    612                  break;
    613              case SVT_LOG_BALLAST_EXCH    :
    614                  DecPnt = 0;
   \                     ??GetValue_33:
   \   00000544   00C087E5           STR      R12,[R7, #+0]
    615                  Unit   = NO_UNIT;
   \   00000548   00C088E5           STR      R12,[R8, #+0]
    616                  MyRetValue = (float)LogBallastExchange;
   \   0000054C   5B00D9E5           LDRB     R0,[R9, #+91]
   \                     ??GetValue_56:
   \   00000550   ........           _BLF     __ulongToFloat,??__ulongToFloat??rA
   \   00000554   59FFFFEA           B        ??GetValue_40
    617                  break;
    618              case SVT_LOG_CARGO           :
    619                  DecPnt = 0;
   \                     ??GetValue_34:
   \   00000558   00C087E5           STR      R12,[R7, #+0]
    620                  Unit   = NO_UNIT;
   \   0000055C   00C088E5           STR      R12,[R8, #+0]
    621                  MyRetValue = (float)LogCargo;
   \   00000560   5C00D9E5           LDRB     R0,[R9, #+92]
   \   00000564   F4FFFFEA           B        ??GetValue_55
    622                  break;
    623              case SVT_LOG_SERVICE:
    624                  DecPnt = 0;
   \                     ??GetValue_35:
   \   00000568   00C087E5           STR      R12,[R7, #+0]
    625                  Unit   = NO_UNIT;
   \   0000056C   00C088E5           STR      R12,[R8, #+0]
    626                  MyRetValue = (float)LogService;
   \   00000570   5D00D9E5           LDRB     R0,[R9, #+93]
   \   00000574   ........           _BLF     __ulongToFloat,??__ulongToFloat??rA
   \   00000578   92FFFFEA           B        ??GetValue_47
    627                  break;
    628              case SVT_LOG_TEMPERATURE     :
    629                  DecPnt = 0;
   \                     ??GetValue_36:
   \   0000057C   00C087E5           STR      R12,[R7, #+0]
    630                  Unit   = NO_UNIT;
   \   00000580   00C088E5           STR      R12,[R8, #+0]
    631                  MyRetValue = (float)LogTemperature;
   \   00000584   5E00D9E5           LDRB     R0,[R9, #+94]
   \   00000588   ........           _BLF     __ulongToFloat,??__ulongToFloat??rA
   \   0000058C   4BFFFFEA           B        ??GetValue_40
    632                  break;
    633              case SVT_LOG_TANK_PRESSURE   :
    634                  DecPnt = 0;
   \                     ??GetValue_37:
   \   00000590   00C087E5           STR      R12,[R7, #+0]
    635                  Unit   = NO_UNIT;
   \   00000594   00C088E5           STR      R12,[R8, #+0]
    636                  MyRetValue = (float)LogTankPressure;
   \   00000598   5F00D9E5           LDRB     R0,[R9, #+95]
   \   0000059C   EBFFFFEA           B        ??GetValue_56
    637                  break;
    638              case SVT_PRINTER_ON_TXU      :
    639                  DecPnt = 0;
   \                     ??GetValue_38:
   \   000005A0   00C087E5           STR      R12,[R7, #+0]
    640                  Unit   = NO_UNIT;
   \   000005A4   00C088E5           STR      R12,[R8, #+0]
    641                  MyRetValue = (float)PrinterOnThisTXU;
   \   000005A8   6000D9E5           LDRB     R0,[R9, #+96]
   \   000005AC   E2FFFFEA           B        ??GetValue_55
    642                  break;
    643              case SVT_CARGO_VOLUME      :
    644              case SVT_BALLAST_VOLUME    :
    645              case SVT_HEAVY_FUEL_VOLUME :
    646              case SVT_DIESEL_OIL_VOLUME :
    647              case SVT_LUBRICANTS_VOLUME :
    648              case SVT_FRESH_WATER_VOLUME:
    649              case SVT_MISC_VOLUME       :
    650              case SVT_TOTAL_VOLUME      :
    651                  DecPnt = 1;
   \                     ??GetValue_28:
   \   000005B0   00A087E5           STR      R10,[R7, #+0]
    652                  Unit   = VOLUME_UNIT;
   \   000005B4   0200A0E3           MOV      R0,#+2
   \   000005B8   000088E5           STR      R0,[R8, #+0]
    653                  switch (ValueId) {
   \   000005BC   AA1041E2           SUB      R1,R1,#+170
   \   000005C0   501E41E2           SUB      R1,R1,#+1280
   \   000005C4   110051E3           CMP      R1,#+17
   \   000005C8   6A00008A           BHI      ??GetValue_41
   \   000005CC   010F8FE2           ADR      R0,??GetValue_2
   \   000005D0   0100D0E7           LDRB     R0,[R0, R1]
   \   000005D4   00F18FE0           ADD      PC,PC,R0, LSL #+2
   \                     ??GetValue_2:
   \   000005D8   04670667           DC8      +4,+103,+6,+103
   \   000005DC   08670A67           DC8      +8,+103,+10,+103
   \   000005E0   0C670E67           DC8      +12,+103,+14,+103
   \   000005E4   10676767           DC8      +16,+103,+103,+103
   \   000005E8   67120000           DC8      +103,+18,+0,+0
    654                  case SVT_CARGO_VOLUME      :
    655                      MyRetValue = CargoVolume;
   \                     ??GetValue_57:
   \   000005EC   480196E5           LDR      R0,[R6, #+328]
   \   000005F0   32FFFFEA           B        ??GetValue_40
    656                      break;
    657                  case SVT_BALLAST_VOLUME    :
    658                      MyRetValue = BallastVolume;
   \                     ??GetValue_58:
   \   000005F4   4C0196E5           LDR      R0,[R6, #+332]
   \   000005F8   30FFFFEA           B        ??GetValue_40
    659                      break;
    660                  case SVT_HEAVY_FUEL_VOLUME :
    661                      MyRetValue = HeavyFuelVolume;
   \                     ??GetValue_59:
   \   000005FC   500196E5           LDR      R0,[R6, #+336]
   \   00000600   2EFFFFEA           B        ??GetValue_40
    662                      break;
    663                  case SVT_DIESEL_OIL_VOLUME :
    664                      MyRetValue = DieselOilVolume;
   \                     ??GetValue_60:
   \   00000604   540196E5           LDR      R0,[R6, #+340]
   \   00000608   6EFFFFEA           B        ??GetValue_47
    665                      break;
    666                  case SVT_LUBRICANTS_VOLUME :
    667                      MyRetValue = LubricantsVolume;
   \                     ??GetValue_61:
   \   0000060C   580196E5           LDR      R0,[R6, #+344]
   \   00000610   2AFFFFEA           B        ??GetValue_40
    668                      break;
    669                  case SVT_FRESH_WATER_VOLUME:
    670                      MyRetValue = FreshWaterVolume;
   \                     ??GetValue_62:
   \   00000614   5C0196E5           LDR      R0,[R6, #+348]
   \   00000618   28FFFFEA           B        ??GetValue_40
    671                      break;
    672                  case SVT_MISC_VOLUME       :
    673                      MyRetValue = MiscVolume;
   \                     ??GetValue_63:
   \   0000061C   600196E5           LDR      R0,[R6, #+352]
   \   00000620   26FFFFEA           B        ??GetValue_40
    674                      break;
    675                  case SVT_TOTAL_VOLUME      :
    676                      MyRetValue =   CargoVolume + BallastVolume + FreshWaterVolume
    677                          + HeavyFuelVolume + DieselOilVolume + LubricantsVolume
    678                          + MiscVolume;
   \                     ??GetValue_64:
   \   00000624   481196E5           LDR      R1,[R6, #+328]
   \   00000628   4C0196E5           LDR      R0,[R6, #+332]
   \   0000062C   ........           _BLF     __fAdd,??__fAdd??rA
   \   00000630   5C1196E5           LDR      R1,[R6, #+348]
   \   00000634   ........           _BLF     __fAdd,??__fAdd??rA
   \   00000638   501196E5           LDR      R1,[R6, #+336]
   \   0000063C   ........           _BLF     __fAdd,??__fAdd??rA
   \   00000640   541196E5           LDR      R1,[R6, #+340]
   \   00000644   ........           _BLF     __fAdd,??__fAdd??rA
   \   00000648   581196E5           LDR      R1,[R6, #+344]
   \   0000064C   ........           _BLF     __fAdd,??__fAdd??rA
   \   00000650   601196E5           LDR      R1,[R6, #+352]
   \                     ??GetValue_65:
   \   00000654   ........           _BLF     __fAdd,??__fAdd??rA
   \   00000658   18FFFFEA           B        ??GetValue_40
    679                      break;
    680                  }
    681                  break;
    682          
    683              case SVT_CARGO_WEIGHT      :
    684              case SVT_BALLAST_WEIGHT    :
    685              case SVT_HEAVY_FUEL_WEIGHT :
    686              case SVT_DIESEL_OIL_WEIGHT :
    687              case SVT_LUBRICANTS_WEIGHT :
    688              case SVT_FRESH_WATER_WEIGHT:
    689              case SVT_MISC_WEIGHT       :
    690              case SVT_TOTAL_WEIGHT      :
    691                  DecPnt = 1;
   \                     ??GetValue_29:
   \   0000065C   00A087E5           STR      R10,[R7, #+0]
    692                  Unit   = WEIGHT_UNIT;
   \   00000660   0300A0E3           MOV      R0,#+3
   \   00000664   000088E5           STR      R0,[R8, #+0]
    693                  switch (ValueId) {
   \   00000668   AB1041E2           SUB      R1,R1,#+171
   \   0000066C   501E41E2           SUB      R1,R1,#+1280
   \   00000670   110051E3           CMP      R1,#+17
   \   00000674   3F00008A           BHI      ??GetValue_41
   \   00000678   010F8FE2           ADR      R0,??GetValue_3
   \   0000067C   0100D0E7           LDRB     R0,[R0, R1]
   \   00000680   00F18FE0           ADD      PC,PC,R0, LSL #+2
   \                     ??GetValue_3:
   \   00000684   043C063C           DC8      +4,+60,+6,+60
   \   00000688   083C0A3C           DC8      +8,+60,+10,+60
   \   0000068C   0C3C0E3C           DC8      +12,+60,+14,+60
   \   00000690   103C3C3C           DC8      +16,+60,+60,+60
   \   00000694   3C120000           DC8      +60,+18,+0,+0
    694                  case SVT_CARGO_WEIGHT      :
    695                      MyRetValue = CargoWeight;
   \                     ??GetValue_66:
   \   00000698   640196E5           LDR      R0,[R6, #+356]
   \   0000069C   07FFFFEA           B        ??GetValue_40
    696                      break;
    697                  case SVT_BALLAST_WEIGHT    :
    698                      MyRetValue = BallastWeight;
   \                     ??GetValue_67:
   \   000006A0   680196E5           LDR      R0,[R6, #+360]
   \   000006A4   05FFFFEA           B        ??GetValue_40
    699                      break;
    700                  case SVT_HEAVY_FUEL_WEIGHT :
    701                      MyRetValue = HeavyFuelWeight;
   \                     ??GetValue_68:
   \   000006A8   6C0196E5           LDR      R0,[R6, #+364]
   \   000006AC   03FFFFEA           B        ??GetValue_40
    702                      break;
    703                  case SVT_DIESEL_OIL_WEIGHT :
    704                      MyRetValue = DieselOilWeight;
   \                     ??GetValue_69:
   \   000006B0   700196E5           LDR      R0,[R6, #+368]
   \   000006B4   43FFFFEA           B        ??GetValue_47
    705                      break;
    706                  case SVT_LUBRICANTS_WEIGHT :
    707                      MyRetValue = LubricantsWeight;
   \                     ??GetValue_70:
   \   000006B8   740196E5           LDR      R0,[R6, #+372]
   \   000006BC   FFFEFFEA           B        ??GetValue_40
    708                      break;
    709                  case SVT_FRESH_WATER_WEIGHT:
    710                      MyRetValue = FreshWaterWeight;
   \                     ??GetValue_71:
   \   000006C0   780196E5           LDR      R0,[R6, #+376]
   \   000006C4   FDFEFFEA           B        ??GetValue_40
    711                      break;
    712                  case SVT_MISC_WEIGHT       :
    713                      MyRetValue = MiscWeight;
   \                     ??GetValue_72:
   \   000006C8   7C0196E5           LDR      R0,[R6, #+380]
   \   000006CC   FBFEFFEA           B        ??GetValue_40
    714                      break;
    715                  case SVT_TOTAL_WEIGHT      :
    716                      MyRetValue = CargoWeight + BallastWeight + FreshWaterWeight
    717                          + HeavyFuelWeight + DieselOilWeight + LubricantsWeight
    718                          + MiscWeight;
   \                     ??GetValue_73:
   \   000006D0   641196E5           LDR      R1,[R6, #+356]
   \   000006D4   680196E5           LDR      R0,[R6, #+360]
   \   000006D8   ........           _BLF     __fAdd,??__fAdd??rA
   \   000006DC   781196E5           LDR      R1,[R6, #+376]
   \   000006E0   ........           _BLF     __fAdd,??__fAdd??rA
   \   000006E4   6C1196E5           LDR      R1,[R6, #+364]
   \   000006E8   ........           _BLF     __fAdd,??__fAdd??rA
   \   000006EC   701196E5           LDR      R1,[R6, #+368]
   \   000006F0   ........           _BLF     __fAdd,??__fAdd??rA
   \   000006F4   741196E5           LDR      R1,[R6, #+372]
   \   000006F8   ........           _BLF     __fAdd,??__fAdd??rA
   \   000006FC   7C1196E5           LDR      R1,[R6, #+380]
   \   00000700   D3FFFFEA           B        ??GetValue_65
    719                      break;
    720          
    721                  }
    722                  break;
    723              case SVT_ROLLING_PERIOD     :
    724              case SVT_ROLLING_FREQUENCY  :
    725              case SVT_LIST_MAX_P         :
    726              case SVT_LIST_MAX_S         :
    727              case SVT_LIST_BUF_MAX_P     :
    728              case SVT_LIST_BUF_MAX_S     :
    729              case SVT_RESET_MAX_LIST     :
    730                  if (PROInclinometer::PROInclinPtr) {
   \                     ??GetValue_20:
   \   00000704   ........           LDR      R0,??DataTable38  ;; ??PROInclinPtr
   \   00000708   005090E5           LDR      R5,[R0, #+0]
   \   0000070C   000055E3           CMP      R5,#+0
   \   00000710   0800000A           BEQ      ??GetValue_74
    731                      Status = PROInclinometer::PROInclinPtr->GetValue(ValueId, Index, MyRetValue,  DecPnt, Unit);
   \   00000714   00012DE9           PUSH     {R8}
   \   00000718   80002DE9           PUSH     {R7}
   \   0000071C   0430A0E1           MOV      R3,R4
   \   00000720   A44095E5           LDR      R4,[R5, #+164]
   \   00000724   0500A0E1           MOV      R0,R5
   \   00000728   244094E5           LDR      R4,[R4, #+36]
   \   0000072C   0FE0A0E1           MOV      LR,PC
   \   00000730   14FF2FE1           BX       R4
   \   00000734   0D0000EA           B        ??GetValue_75
    732                  } else {
    733                      Status = GETVAL_NOT_AVAILABLE;
   \                     ??GetValue_74:
   \   00000738   0150A0E3           MOV      R5,#+1
   \   0000073C   0D0000EA           B        ??GetValue_41
    734                  }
    735                  break;
    736              case SVT_SECONDS:
    737                  DecPnt = 0;
   \                     ??GetValue_6:
   \   00000740   00C087E5           STR      R12,[R7, #+0]
    738                  Unit   = NO_UNIT;
   \   00000744   00C088E5           STR      R12,[R8, #+0]
    739                  MyRetValue = (float)(time(NULL) & 0xffff);
   \   00000748   0000A0E3           MOV      R0,#+0
   \   0000074C   ........           _BLF     time,??time??rA
   \   00000750   0008A0E1           LSL      R0,R0,#+16
   \   00000754   2008A0E1           LSR      R0,R0,#+16
   \   00000758   29FFFFEA           B        ??GetValue_48
    740                  break;
    741              default:
    742                  Status = PRogramObject::GetValue(ValueId, Index, MyRetValue,  DecPnt, Unit);
   \                     ??GetValue_39:
   \   0000075C   00012DE9           PUSH     {R8}
   \   00000760   80002DE9           PUSH     {R7}
   \   00000764   0430A0E1           MOV      R3,R4
   \   00000768   0600A0E1           MOV      R0,R6
   \   0000076C   ........           _BLF     ??GetValue_4,??GetValue??rA
   \                     ??GetValue_75:
   \   00000770   0050A0E1           MOV      R5,R0
   \   00000774   08D08DE2           ADD      SP,SP,#+8
    743                  break;
    744          
    745              }
    746              return (Status);
   \                     ??GetValue_41:
   \   00000778   ........           B        ?Subroutine25
   \                     ??GetValue_5:
   \   0000077C   ........           DC32     ??IsInlandVessel
   \   00000780   00606A47           DC32     0x476a6000
    747          }
    748          
    749          

   \                                 In segment CODE, align 4, keep-with-next
    750          int PROSystemData::GetStringValue(int ValueId, int Index, AnsiString &MyString) {
    751              int Status = GETVAL_NO_ERR;
    752              switch (ValueId) {
   \                     ??GetStringValue:
   \   00000000   9CC39FE5           LDR      R12,??GetStringValue_3+0xC  ;; `?<Constant "%i.%i.%i.%i">`
   \   00000004   F0402DE9           PUSH     {R4-R7,LR}
   \   00000008   0350A0E1           MOV      R5,R3
   \   0000000C   ........           LDR      R3,??DataTable27  ;; ??npos
   \   00000010   F8D04DE2           SUB      SP,SP,#+248
   \   00000014   006093E5           LDR      R6,[R3, #+0]
   \   00000018   ........           LDR      R3,??DataTable29  ;; ??TXUSystemData
   \   0000001C   0040A0E3           MOV      R4,#+0
   \   00000020   8C70A0E3           MOV      R7,#+140
   \   00000024   507E87E3           ORR      R7,R7,#0x500
   \   00000028   070051E1           CMP      R1,R7
   \   0000002C   2D00000A           BEQ      ??GetStringValue_4
   \   00000030   017087E3           ORR      R7,R7,#0x1
   \   00000034   070051E1           CMP      R1,R7
   \   00000038   6300000A           BEQ      ??GetStringValue_5
   \   0000003C   047087E2           ADD      R7,R7,#+4
   \   00000040   070051E1           CMP      R1,R7
   \   00000044   A500000A           BEQ      ??GetStringValue_6
   \   00000048   017087E2           ADD      R7,R7,#+1
   \   0000004C   070051E1           CMP      R1,R7
   \   00000050   A600000A           BEQ      ??GetStringValue_7
   \   00000054   357087E2           ADD      R7,R7,#+53
   \   00000058   070051E1           CMP      R1,R7
   \   0000005C   01708712           ADDNE    R7,R7,#+1
   \   00000060   07005111           CMPNE    R1,R7
   \   00000064   01708713           ORRNE    R7,R7,#0x1
   \   00000068   07005111           CMPNE    R1,R7
   \   0000006C   01708712           ADDNE    R7,R7,#+1
   \   00000070   07005111           CMPNE    R1,R7
   \   00000074   01708713           ORRNE    R7,R7,#0x1
   \   00000078   07005111           CMPNE    R1,R7
   \   0000007C   01708712           ADDNE    R7,R7,#+1
   \   00000080   07005111           CMPNE    R1,R7
   \   00000084   AE00000A           BEQ      ??GetStringValue_8
   \   00000088   1D70A0E3           MOV      R7,#+29
   \   0000008C   C07E87E3           ORR      R7,R7,#0xC00
   \   00000090   070051E1           CMP      R1,R7
   \   00000094   7900000A           BEQ      ??GetStringValue_9
   \   00000098   017087E2           ADD      R7,R7,#+1
   \   0000009C   070051E1           CMP      R1,R7
   \   000000A0   5C00000A           BEQ      ??GetStringValue_10
   \   000000A4   017087E3           ORR      R7,R7,#0x1
   \   000000A8   070051E1           CMP      R1,R7
   \   000000AC   5700000A           BEQ      ??GetStringValue_11
   \   000000B0   037087E2           ADD      R7,R7,#+3
   \   000000B4   070051E1           CMP      R1,R7
   \   000000B8   6200000A           BEQ      ??GetStringValue_12
   \   000000BC   017087E3           ORR      R7,R7,#0x1
   \   000000C0   070051E1           CMP      R1,R7
   \   000000C4   5B00000A           BEQ      ??GetStringValue_13
   \   000000C8   017087E2           ADD      R7,R7,#+1
   \   000000CC   070051E1           CMP      R1,R7
   \   000000D0   4800000A           BEQ      ??GetStringValue_14
   \   000000D4   7570A0E3           MOV      R7,#+117
   \   000000D8   9C7D87E3           ORR      R7,R7,#0x2700
   \   000000DC   070051E1           CMP      R1,R7
   \   000000E0   A400000A           BEQ      ??GetStringValue_15
   \   000000E4   A50000EA           B        ??GetStringValue_16
    753              case SVT_CURRENT_UNIT_SYSTEM:
    754                  {
    755                      switch (CurrentUnitSystem) {
   \                     ??GetStringValue_4:
   \   000000E8   080093E5           LDR      R0,[R3, #+8]
   \   000000EC   A91F8FE2           ADR      R1,??GetStringValue_3  ;; "SI"
   \   000000F0   020050E3           CMP      R0,#+2
   \   000000F4   2700008A           BHI      ??GetStringValue_17
   \   000000F8   012F8FE2           ADR      R2,??GetStringValue_1
   \   000000FC   0020D2E7           LDRB     R2,[R2, R0]
   \   00000100   02F18FE0           ADD      PC,PC,R2, LSL #+2
   \                     ??GetStringValue_1:
   \   00000104   000C1800           DC8      +0,+12,+24,+0
    756                      case UNIT_SYS_SI:
    757                          MyString = "SI";
   \                     ??GetStringValue_18:
   \   00000108   6C008DE2           ADD      R0,SP,#+108
   \   0000010C   ........           _BLF     ??AnsiString_1,??AnsiString??rA_1
   \   00000110   0630A0E1           MOV      R3,R6
   \   00000114   0020A0E3           MOV      R2,#+0
   \   00000118   0010A0E1           MOV      R1,R0
   \   0000011C   0500A0E1           MOV      R0,R5
   \   00000120   ........           _BLF     ??assign,??assign??rA
   \   00000124   0420A0E1           MOV      R2,R4
   \   00000128   0110A0E3           MOV      R1,#+1
   \   0000012C   6C008DE2           ADD      R0,SP,#+108
   \                     ??GetStringValue_19:
   \   00000130   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   00000134   940000EA           B        ??GetStringValue_20
    758                          break;
    759                      case UNIT_SYS_US:
    760                          MyString = "US";
   \                     ??GetStringValue_21:
   \   00000138   971F8FE2           ADR      R1,??GetStringValue_3+0x4  ;; "US"
   \   0000013C   88008DE2           ADD      R0,SP,#+136
   \   00000140   ........           _BLF     ??AnsiString_1,??AnsiString??rA_1
   \   00000144   0010A0E1           MOV      R1,R0
   \   00000148   0630A0E1           MOV      R3,R6
   \   0000014C   0020A0E3           MOV      R2,#+0
   \   00000150   0500A0E1           MOV      R0,R5
   \   00000154   ........           _BLF     ??assign,??assign??rA
   \   00000158   0420A0E1           MOV      R2,R4
   \   0000015C   0110A0E3           MOV      R1,#+1
   \   00000160   88008DE2           ADD      R0,SP,#+136
   \   00000164   F1FFFFEA           B        ??GetStringValue_19
    761                          break;
    762                      case UNIT_SYS_USER:
    763                          MyString = "User";
   \                     ??GetStringValue_22:
   \   00000168   0C108CE2           ADD      R1,R12,#+12
   \   0000016C   A4008DE2           ADD      R0,SP,#+164
   \   00000170   ........           _BLF     ??AnsiString_1,??AnsiString??rA_1
   \   00000174   0630A0E1           MOV      R3,R6
   \   00000178   0020A0E3           MOV      R2,#+0
   \   0000017C   0010A0E1           MOV      R1,R0
   \   00000180   0500A0E1           MOV      R0,R5
   \   00000184   ........           _BLF     ??assign,??assign??rA
   \   00000188   0420A0E1           MOV      R2,R4
   \   0000018C   0110A0E3           MOV      R1,#+1
   \   00000190   A4008DE2           ADD      R0,SP,#+164
   \   00000194   E5FFFFEA           B        ??GetStringValue_19
    764                          break;
    765                      default:
    766                          CurrentUnitSystem = UNIT_SYS_SI;
   \                     ??GetStringValue_17:
   \   00000198   0000A0E3           MOV      R0,#+0
   \   0000019C   080083E5           STR      R0,[R3, #+8]
    767                          MyString = "SI";
   \   000001A0   0D00A0E1           MOV      R0,SP
   \   000001A4   ........           _BLF     ??AnsiString_1,??AnsiString??rA_1
   \   000001A8   0630A0E1           MOV      R3,R6
   \   000001AC   0420A0E1           MOV      R2,R4
   \                     ??GetStringValue_23:
   \   000001B0   0010A0E1           MOV      R1,R0
   \   000001B4   0500A0E1           MOV      R0,R5
   \   000001B8   ........           _BLF     ??assign,??assign??rA
   \   000001BC   0420A0E1           MOV      R2,R4
   \   000001C0   0110A0E3           MOV      R1,#+1
   \   000001C4   0D00A0E1           MOV      R0,SP
   \   000001C8   D8FFFFEA           B        ??GetStringValue_19
    768                          break;
    769                      }
    770                  }
    771                  break;
    772              case SVT_CURRENT_LANGUAGE:
    773                  MyString = GetCurrentLanguage();
   \                     ??GetStringValue_5:
   \   000001CC   C0008DE2           ADD      R0,SP,#+192
   \   000001D0   ........           _BLF     ??GetCurrentLanguage,??GetCurrentLanguage??rA
   \   000001D4   0630A0E1           MOV      R3,R6
   \   000001D8   0020A0E3           MOV      R2,#+0
   \   000001DC   C0108DE2           ADD      R1,SP,#+192
   \   000001E0   0500A0E1           MOV      R0,R5
   \   000001E4   ........           _BLF     ??assign,??assign??rA
   \   000001E8   0420A0E1           MOV      R2,R4
   \   000001EC   0110A0E3           MOV      R1,#+1
   \   000001F0   C0008DE2           ADD      R0,SP,#+192
   \   000001F4   CDFFFFEA           B        ??GetStringValue_19
    774                  break;
    775              case SVT_CALL_SIGN   :
    776                  MyString = PROProjectInfo::CallSign;
   \                     ??GetStringValue_14:
   \   000001F8   A8119FE5           LDR      R1,??GetStringValue_3+0x10  ;; ??CallSign
   \                     ??GetStringValue_24:
   \   000001FC   0630A0E1           MOV      R3,R6
   \   00000200   0020A0E3           MOV      R2,#+0
   \                     ??GetStringValue_25:
   \   00000204   0500A0E1           MOV      R0,R5
   \   00000208   ........           _BLF     ??assign,??assign??rA
   \   0000020C   5E0000EA           B        ??GetStringValue_20
    777                  break;
    778              case SVT_SHIP_OWNER  :
    779                  MyString = PROProjectInfo::ProjOwner;
   \                     ??GetStringValue_11:
   \   00000210   94119FE5           LDR      R1,??GetStringValue_3+0x14  ;; ??ProjOwner
   \   00000214   F8FFFFEA           B        ??GetStringValue_24
    780                  break;
    781              case SVT_SHIP_NAME   :
    782                  if (PROProjectInfo::PROProjectInfoPtr) MyString = PROProjectInfo::PROProjectInfoPtr->Name;
   \                     ??GetStringValue_10:
   \   00000218   90019FE5           LDR      R0,??GetStringValue_3+0x18  ;; ??PROProjectInfoPtr
   \   0000021C   000090E5           LDR      R0,[R0, #+0]
   \   00000220   000050E3           CMP      R0,#+0
   \   00000224   5800000A           BEQ      ??GetStringValue_20
   \   00000228   0630A0E1           MOV      R3,R6
   \   0000022C   0020A0E3           MOV      R2,#+0
   \   00000230   441080E2           ADD      R1,R0,#+68
   \   00000234   F2FFFFEA           B        ??GetStringValue_25
    783                  break;
    784              case SVT_SYSTEM_ID   :
    785                  MyString = PROProjectInfo::ProjectName;
   \                     ??GetStringValue_13:
   \   00000238   74119FE5           LDR      R1,??GetStringValue_3+0x1C  ;; ??ProjectName
   \   0000023C   0630A0E1           MOV      R3,R6
   \   00000240   0020A0E3           MOV      R2,#+0
   \   00000244   EEFFFFEA           B        ??GetStringValue_25
    786                  break;
    787              case SVT_DATA_VERSION:
    788                  {
    789                      char Buf[BUF_SIZE];
    790                      if (TSNConfigInfo::ConfigInfoPtr) sprintf(Buf, "%i", TSNConfigInfo::ConfigInfoPtr->PrevConfigDataRevision);
   \                     ??GetStringValue_12:
   \   00000248   68019FE5           LDR      R0,??GetStringValue_3+0x20  ;; ??ConfigInfoPtr
   \   0000024C   000090E5           LDR      R0,[R0, #+0]
   \   00000250   000050E3           CMP      R0,#+0
   \   00000254   0300000A           BEQ      ??GetStringValue_26
   \   00000258   3C2190E5           LDR      R2,[R0, #+316]
   \   0000025C   4F1F8FE2           ADR      R1,??GetStringValue_3+0x8  ;; "%i"
   \   00000260   1C008DE2           ADD      R0,SP,#+28
   \   00000264   ........           _BLF     sprintf,??sprintf??rA
    791                      MyString = Buf;
   \                     ??GetStringValue_26:
   \   00000268   1C108DE2           ADD      R1,SP,#+28
   \   0000026C   0D00A0E1           MOV      R0,SP
   \   00000270   ........           _BLF     ??AnsiString_1,??AnsiString??rA_1
   \   00000274   0630A0E1           MOV      R3,R6
   \   00000278   0020A0E3           MOV      R2,#+0
   \   0000027C   CBFFFFEA           B        ??GetStringValue_23
    792                  }
    793                  break;
    794              case SVT_PROG_VERSION:
    795                  {
    796                      char Buf[BUF_SIZE];
    797                      sprintf(Buf, "%i.%i.%i.%i", MyProgramVersion.ProdNo, MyProgramVersion.PacketFormat,
    798                              MyProgramVersion.NewFunctions, MyProgramVersion.Build);
   \                     ??GetStringValue_9:
   \   00000280   34019FE5           LDR      R0,??GetStringValue_3+0x24  ;; MyProgramVersion
   \   00000284   0310D0E5           LDRB     R1,[R0, #+3]
   \   00000288   02002DE9           PUSH     {R1}
   \   0000028C   0210D0E5           LDRB     R1,[R0, #+2]
   \   00000290   02002DE9           PUSH     {R1}
   \   00000294   0130D0E5           LDRB     R3,[R0, #+1]
   \   00000298   0020D0E5           LDRB     R2,[R0, #+0]
   \   0000029C   0C10A0E1           MOV      R1,R12
   \   000002A0   24008DE2           ADD      R0,SP,#+36
   \   000002A4   ........           _BLF     sprintf,??sprintf??rA
    799                      MyString = Buf;
   \   000002A8   24108DE2           ADD      R1,SP,#+36
   \   000002AC   08008DE2           ADD      R0,SP,#+8
   \   000002B0   ........           _BLF     ??AnsiString_1,??AnsiString??rA_1
   \   000002B4   0630A0E1           MOV      R3,R6
   \   000002B8   0020A0E3           MOV      R2,#+0
   \   000002BC   0010A0E1           MOV      R1,R0
   \   000002C0   0500A0E1           MOV      R0,R5
   \   000002C4   ........           _BLF     ??assign,??assign??rA
   \   000002C8   0420A0E1           MOV      R2,R4
   \   000002CC   0110A0E3           MOV      R1,#+1
   \   000002D0   08008DE2           ADD      R0,SP,#+8
   \   000002D4   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   000002D8   08D08DE2           ADD      SP,SP,#+8
   \   000002DC   2A0000EA           B        ??GetStringValue_20
    800                  }
    801                  break;
    802              case SVT_USER_PIN_CODE    :
    803                  MyString = UserPinCode;
   \                     ??GetStringValue_6:
   \   000002E0   0630A0E1           MOV      R3,R6
   \   000002E4   0020A0E3           MOV      R2,#+0
   \   000002E8   621F80E2           ADD      R1,R0,#+392
   \   000002EC   C4FFFFEA           B        ??GetStringValue_25
    804                  break;
    805              case SVT_FORCE_WRITE_CONFIG:
    806                  if (HasConfigWritePermission) {
   \                     ??GetStringValue_7:
   \   000002F0   5800D3E5           LDRB     R0,[R3, #+88]
   \                     ??GetStringValue_27:
   \   000002F4   000050E3           CMP      R0,#+0
    807                      MyString = FindKeyWord(C_ENABLE);
   \   000002F8   6410A013           MOVNE    R1,#+100
    808                  } else {
    809                      MyString = FindKeyWord(C_DISABLE);
   \   000002FC   6510A003           MOVEQ    R1,#+101
   \   00000300   0D00A0E1           MOV      R0,SP
   \   00000304   ........           _BLF     ??FindKeyWord,??FindKeyWord??rA
   \   00000308   0630A0E1           MOV      R3,R6
   \   0000030C   0020A0E3           MOV      R2,#+0
   \   00000310   0D10A0E1           MOV      R1,SP
   \   00000314   0500A0E1           MOV      R0,R5
   \   00000318   ........           _BLF     ??assign,??assign??rA
   \   0000031C   0420A0E1           MOV      R2,R4
   \   00000320   0110A0E3           MOV      R1,#+1
   \   00000324   0D00A0E1           MOV      R0,SP
   \   00000328   ........           _BLF     ??_Tidy_1,??_Tidy??rA
    810                  }
    811                  if (MyString.IsEmpty())   Status = GETVAL_ERROR;
   \   0000032C   0500A0E1           MOV      R0,R5
   \   00000330   ........           _BLF     ??IsEmpty,??IsEmpty??rA
   \   00000334   000050E3           CMP      R0,#+0
   \   00000338   1300000A           BEQ      ??GetStringValue_20
   \   0000033C   0440A0E3           MOV      R4,#+4
   \   00000340   110000EA           B        ??GetStringValue_20
    812                  break;
    813              case SVT_TANK_STATE_STR    :
    814              case SVT_TANK_STATE_STR_CGO:
    815              case SVT_TANK_STATE_STR_BAL:
    816              case SVT_TANK_STATE_STR_SER:
    817              case SVT_TANK_STATE_STR_LSW:
    818              case SVT_TANK_STATE_STR_PRE:
    819                  MyString = PROXRefObject::GetStateString(GetOpModeState(ValueId));
   \                     ??GetStringValue_8:
   \   00000344   ........           BL       ??GetOpModeState
   \   00000348   0010A0E1           MOV      R1,R0
   \   0000034C   DC008DE2           ADD      R0,SP,#+220
   \   00000350   ........           _BLF     ??GetStateString,??GetStateString??rA
   \   00000354   0630A0E1           MOV      R3,R6
   \   00000358   0020A0E3           MOV      R2,#+0
   \   0000035C   DC108DE2           ADD      R1,SP,#+220
   \   00000360   0500A0E1           MOV      R0,R5
   \   00000364   ........           _BLF     ??assign,??assign??rA
   \   00000368   0420A0E1           MOV      R2,R4
   \   0000036C   0110A0E3           MOV      R1,#+1
   \   00000370   DC008DE2           ADD      R0,SP,#+220
   \   00000374   6DFFFFEA           B        ??GetStringValue_19
    820                  break;
    821              case SVT_IGNORE_VOL_VGT_MESSAGE:
    822                  if (PROSystemData::ReceiveWeightVolume) {
   \                     ??GetStringValue_15:
   \   00000378   6100D3E5           LDRB     R0,[R3, #+97]
   \   0000037C   DCFFFFEA           B        ??GetStringValue_27
    823                      MyString = FindKeyWord(C_ENABLE);
    824                  } else {
    825                      MyString = FindKeyWord(C_DISABLE);
    826                  }
    827                  if (MyString.IsEmpty())   Status = GETVAL_ERROR;
    828                  break;
    829              default:
    830                  Status = PRogramObject::GetStringValue(ValueId, Index, MyString);
   \                     ??GetStringValue_16:
   \   00000380   0530A0E1           MOV      R3,R5
   \   00000384   ........           _BLF     ??GetStringValue_2,??GetStringValue??rA
   \   00000388   0040A0E1           MOV      R4,R0
    831                  break;
    832              }
    833              return (Status);
   \                     ??GetStringValue_20:
   \   0000038C   0400A0E1           MOV      R0,R4
   \   00000390   F8D08DE2           ADD      SP,SP,#+248
   \   00000394   ........           B        ?Subroutine30
   \                     ??GetStringValue_3:
   \   00000398   53490000           DC8      "SI",+0
   \   0000039C   55530000           DC8      "US",+0
   \   000003A0   25690000           DC8      "%i",+0
   \   000003A4   ........           DC32     `?<Constant "%i.%i.%i.%i">`
   \   000003A8   ........           DC32     ??CallSign
   \   000003AC   ........           DC32     ??ProjOwner
   \   000003B0   ........           DC32     ??PROProjectInfoPtr
   \   000003B4   ........           DC32     ??ProjectName
   \   000003B8   ........           DC32     ??ConfigInfoPtr
   \   000003BC   ........           DC32     MyProgramVersion
    834          }

   \                                 In segment CODE, align 4, keep-with-next
   \                     ?Subroutine30:
   \   00000000   F040BDE8           POP      {R4-R7,LR}
   \   00000004   1EFF2FE1           BX       LR               ;; return
    835          
    836          

   \                                 In segment CODE, align 4, keep-with-next
    837          int PROSystemData::GetFloatValue(int ValueId, int Index, float &MyValue) {
   \                     ??GetFloatValue:
   \   00000000   F04F2DE9           PUSH     {R4-R11,LR}
    838              int Status        = GETVAL_NO_ERR;
    839              switch (ValueId) {
   \   00000004   ........           LDR      R9,??DataTable29  ;; ??TXUSystemData
   \   00000008   0060A0E1           MOV      R6,R0
   \   0000000C   240099E5           LDR      R0,[R9, #+36]
   \   00000010   4C8196E5           LDR      R8,[R6, #+332]
   \   00000014   487196E5           LDR      R7,[R6, #+328]
   \   00000018   68E196E5           LDR      LR,[R6, #+360]
   \   0000001C   64C196E5           LDR      R12,[R6, #+356]
   \   00000020   0340A0E1           MOV      R4,R3
   \   00000024   283099E5           LDR      R3,[R9, #+40]
   \   00000028   0050A0E3           MOV      R5,#+0
   \   0000002C   47A041E2           SUB      R10,R1,#+71
   \   00000030   50AE4AE2           SUB      R10,R10,#+1280
   \   00000034   B3005AE3           CMP      R10,#+179
   \   00000038   A900008A           BHI      ??GetFloatValue_3
   \   0000003C   01BF8FE2           ADR      R11,??GetFloatValue_1
   \   00000040   0AB0DBE7           LDRB     R11,[R11, R10]
   \   00000044   0BF18FE0           ADD      PC,PC,R11, LSL #+2
   \                     ??GetFloatValue_1:
   \   00000048   4FA6A6A6           DC8      +79,+166,+166,+166
   \   0000004C   30342D2F           DC8      +48,+52,+45,+47
   \   00000050   38A64146           DC8      +56,+166,+65,+70
   \   00000054   40453A48           DC8      +64,+69,+58,+72
   \   00000058   A6999999           DC8      +166,+153,+153,+153
   \   0000005C   99999999           DC8      +153,+153,+153,+153
   \   00000060   A6A6A6A6           DC8      +166,+166,+166,+166
   \   00000064   A6A6A6A6           DC8      +166,+166,+166,+166
   \   00000068   A6A6A6A6           DC8      +166,+166,+166,+166
   \   0000006C   A6A6A6A6           DC8      +166,+166,+166,+166
   \   00000070   A6A6A6A6           DC8      +166,+166,+166,+166
   \   00000074   A6A6A6A6           DC8      +166,+166,+166,+166
   \   00000078   A6A6A6A6           DC8      +166,+166,+166,+166
   \   0000007C   A6A6A6A6           DC8      +166,+166,+166,+166
   \   00000080   A6A6A6A6           DC8      +166,+166,+166,+166
   \   00000084   A6A6A6A6           DC8      +166,+166,+166,+166
   \   00000088   A6A6A6A6           DC8      +166,+166,+166,+166
   \   0000008C   A6A6A6A6           DC8      +166,+166,+166,+166
   \   00000090   A6A6A6A6           DC8      +166,+166,+166,+166
   \   00000094   A6A6A6A6           DC8      +166,+166,+166,+166
   \   00000098   A6A6A6A6           DC8      +166,+166,+166,+166
   \   0000009C   A6A6A6A6           DC8      +166,+166,+166,+166
   \   000000A0   54525658           DC8      +84,+82,+86,+88
   \   000000A4   5A5C5E60           DC8      +90,+92,+94,+96
   \   000000A8   A6A6A662           DC8      +166,+166,+166,+98
   \   000000AC   7E648066           DC8      +126,+100,+128,+102
   \   000000B0   8268846A           DC8      +130,+104,+132,+106
   \   000000B4   866C886E           DC8      +134,+108,+136,+110
   \   000000B8   8AA6A6A6           DC8      +138,+166,+166,+166
   \   000000BC   708CA6A6           DC8      +112,+140,+166,+166
   \   000000C0   A6A6A6A6           DC8      +166,+166,+166,+166
   \   000000C4   A6A6A6A6           DC8      +166,+166,+166,+166
   \   000000C8   A6A6A6A6           DC8      +166,+166,+166,+166
   \   000000CC   A6A6A6A6           DC8      +166,+166,+166,+166
   \   000000D0   A6A6A6A6           DC8      +166,+166,+166,+166
   \   000000D4   A6A6A6A6           DC8      +166,+166,+166,+166
   \   000000D8   A6A6A6A6           DC8      +166,+166,+166,+166
   \   000000DC   A6A6A6A6           DC8      +166,+166,+166,+166
   \   000000E0   A6A6A6A6           DC8      +166,+166,+166,+166
   \   000000E4   A6A6A6A6           DC8      +166,+166,+166,+166
   \   000000E8   A6A6A6A6           DC8      +166,+166,+166,+166
   \   000000EC   A6A6A6A6           DC8      +166,+166,+166,+166
   \   000000F0   A6A6A6A6           DC8      +166,+166,+166,+166
   \   000000F4   A6A6A6A6           DC8      +166,+166,+166,+166
   \   000000F8   A6A6A62C           DC8      +166,+166,+166,+44
    840              case SVT_LATITUDE:
    841                  MyValue = Latitude;
   \                     ??GetFloatValue_4:
   \   000000FC   040099E5           LDR      R0,[R9, #+4]
   \                     ??GetFloatValue_5:
   \   00000100   000084E5           STR      R0,[R4, #+0]
   \   00000104   7A0000EA           B        ??GetFloatValue_6
    842                  break;
    843              case SVT_TRIM_M_NOSIGN:
    844                  Status     = GETVAL_FWD_AFT;
   \                     ??GetFloatValue_7:
   \   00000108   0A50A0E3           MOV      R5,#+10
    845              case SVT_TRIM_M:
    846                  MyValue = TrimValue * PROProjectInfo::LengthBetweenPP;
   \                     ??GetFloatValue_8:
   \   0000010C   ........           LDR      R1,??DataTable30  ;; ??LengthBetweenPP
   \   00000110   001091E5           LDR      R1,[R1, #+0]
   \                     ??GetFloatValue_9:
   \   00000114   ........           _BLF     __fMul,??__fMul??rA
   \   00000118   F8FFFFEA           B        ??GetFloatValue_5
    847                  break;
    848              case SVT_TRIM_MARKS_M:
    849                  MyValue = TrimValue * PROProjectInfo::LengthBetweenMarks;
   \                     ??GetFloatValue_10:
   \   0000011C   ........           LDR      R1,??DataTable31  ;; ??LengthBetweenMarks
   \   00000120   001091E5           LDR      R1,[R1, #+0]
   \   00000124   ........           _BLF     __fMul,??__fMul??rA
   \   00000128   F4FFFFEA           B        ??GetFloatValue_5
    850                  break;
    851              case SVT_TRIM_ANGLE_NOSIGN:
    852                  Status     = GETVAL_FWD_AFT;
   \                     ??GetFloatValue_11:
   \   0000012C   0A50A0E3           MOV      R5,#+10
    853              case SVT_TRIM_ANGLE:
    854                  MyValue = TrimValue;
   \   00000130   F2FFFFEA           B        ??GetFloatValue_5
    855                  break;
    856              case SVT_TRIM_DEG:
    857                  MyValue = TrimValue * RAD_FACTOR;
   \                     ??GetFloatValue_12:
   \   00000134   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   00000138   ........           LDR      R2,??DataTable35  ;; 0x1a63c1f8
   \   0000013C   ........           LDR      R3,??DataTable36  ;; 0x404ca5dc
   \   00000140   ........           _BLF     __dMul,??__dMul??rA
   \   00000144   ........           _BLF     __doubleToFloat,??__doubleToFloat??rA
   \   00000148   ECFFFFEA           B        ??GetFloatValue_5
    858                  break;
    859              case SVT_LIST_M_NOSIGN:
    860                  Status      = GETVAL_PORT_STBD;
   \                     ??GetFloatValue_13:
   \   0000014C   0B50A0E3           MOV      R5,#+11
    861              case SVT_LIST_M:
    862                  MyValue  = ListValue * PROProjectInfo::PROProjectInfoPtr->Width;
   \                     ??GetFloatValue_14:
   \   00000150   ........           LDR      R0,??DataTable34  ;; ??Width
   \   00000154   0310A0E1           MOV      R1,R3
   \   00000158   000090E5           LDR      R0,[R0, #+0]
   \   0000015C   ECFFFFEA           B        ??GetFloatValue_9
    863                  break;
    864              case SVT_LIST_ANGLE_NOSIGN :
    865                  Status      = GETVAL_PORT_STBD;
   \                     ??GetFloatValue_15:
   \   00000160   0B50A0E3           MOV      R5,#+11
    866              case SVT_LIST_ANGLE :
    867                  MyValue  = ListValue;
   \                     ??GetFloatValue_16:
   \   00000164   003084E5           STR      R3,[R4, #+0]
   \   00000168   610000EA           B        ??GetFloatValue_6
    868                  break;
    869              case SVT_LIST_DEG:
    870                  MyValue = ListValue * RAD_FACTOR;
   \                     ??GetFloatValue_17:
   \   0000016C   0300A0E1           MOV      R0,R3
   \   00000170   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   00000174   ........           LDR      R2,??DataTable35  ;; 0x1a63c1f8
   \   00000178   ........           LDR      R3,??DataTable36  ;; 0x404ca5dc
   \   0000017C   ........           _BLF     __dMul,??__dMul??rA
   \   00000180   ........           _BLF     __doubleToFloat,??__doubleToFloat??rA
   \   00000184   DDFFFFEA           B        ??GetFloatValue_5
    871                  break;
    872              case SVT_ATM_PRESSURE :
    873                  MyValue = AIPressSensor::AtmPressure;
   \                     ??GetFloatValue_18:
   \   00000188   ........           LDR      R0,??DataTable37  ;; ??AtmPressure
   \   0000018C   000090E5           LDR      R0,[R0, #+0]
   \   00000190   DAFFFFEA           B        ??GetFloatValue_5
    874                  break;
    875              case SVT_SEAWATER_TEMP :
    876                  MyValue  = SeaWaterTemp;
   \                     ??GetFloatValue_19:
   \   00000194   440099E5           LDR      R0,[R9, #+68]
   \   00000198   D8FFFFEA           B        ??GetFloatValue_5
    877                  break;
    878              case SVT_AMBIENT_TEMP :
    879                  MyValue  = AmbientTemp;
   \                     ??GetFloatValue_20:
   \   0000019C   480099E5           LDR      R0,[R9, #+72]
   \   000001A0   D6FFFFEA           B        ??GetFloatValue_5
    880                  break;
    881              case SVT_SEAWATER_DNS  :
    882                  MyValue = SeaWaterDensity; break;
   \                     ??GetFloatValue_21:
   \   000001A4   300099E5           LDR      R0,[R9, #+48]
   \   000001A8   D4FFFFEA           B        ??GetFloatValue_5
    883              case SVT_BALLAST_DNS   :
    884                  MyValue = BallastDensity; break;
   \                     ??GetFloatValue_22:
   \   000001AC   2C0099E5           LDR      R0,[R9, #+44]
   \   000001B0   D2FFFFEA           B        ??GetFloatValue_5
    885              case SVT_FRESHWATER_DNS:
    886                  MyValue = FreshWaterDensity; break;
   \                     ??GetFloatValue_23:
   \   000001B4   340099E5           LDR      R0,[R9, #+52]
   \   000001B8   D0FFFFEA           B        ??GetFloatValue_5
    887              case SVT_HEAVY_FUEL_DNS:
    888                  MyValue = HeavyFuelDensity; break;
   \                     ??GetFloatValue_24:
   \   000001BC   380099E5           LDR      R0,[R9, #+56]
   \   000001C0   CEFFFFEA           B        ??GetFloatValue_5
    889              case SVT_DIESEL_DNS    :
    890                  MyValue = DieselDensity; break;
   \                     ??GetFloatValue_25:
   \   000001C4   3C0099E5           LDR      R0,[R9, #+60]
   \   000001C8   CCFFFFEA           B        ??GetFloatValue_5
    891              case SVT_LUBRICANTS_DNS:
    892                  MyValue = LubricantsDensity; break;
   \                     ??GetFloatValue_26:
   \   000001CC   400099E5           LDR      R0,[R9, #+64]
   \   000001D0   CAFFFFEA           B        ??GetFloatValue_5
    893              case SVT_CARGO_VOLUME      :
    894                  MyValue = CargoVolume;
   \                     ??GetFloatValue_27:
   \   000001D4   007084E5           STR      R7,[R4, #+0]
   \   000001D8   450000EA           B        ??GetFloatValue_6
    895                  break;
    896              case SVT_BALLAST_VOLUME    :
    897                  MyValue = BallastVolume;
   \                     ??GetFloatValue_28:
   \   000001DC   008084E5           STR      R8,[R4, #+0]
   \   000001E0   430000EA           B        ??GetFloatValue_6
    898                  break;
    899              case SVT_HEAVY_FUEL_VOLUME :
    900                  MyValue = HeavyFuelVolume;
   \                     ??GetFloatValue_29:
   \   000001E4   500196E5           LDR      R0,[R6, #+336]
   \   000001E8   C4FFFFEA           B        ??GetFloatValue_5
    901                  break;
    902              case SVT_DIESEL_OIL_VOLUME :
    903                  MyValue = DieselOilVolume;
   \                     ??GetFloatValue_30:
   \   000001EC   540196E5           LDR      R0,[R6, #+340]
   \   000001F0   C2FFFFEA           B        ??GetFloatValue_5
    904                  break;
    905              case SVT_LUBRICANTS_VOLUME :
    906                  MyValue = LubricantsVolume;
   \                     ??GetFloatValue_31:
   \   000001F4   580196E5           LDR      R0,[R6, #+344]
   \   000001F8   C0FFFFEA           B        ??GetFloatValue_5
    907                  break;
    908              case SVT_FRESH_WATER_VOLUME:
    909                  MyValue = FreshWaterVolume;
   \                     ??GetFloatValue_32:
   \   000001FC   5C0196E5           LDR      R0,[R6, #+348]
   \   00000200   BEFFFFEA           B        ??GetFloatValue_5
    910                  break;
    911              case SVT_MISC_VOLUME       :
    912                  MyValue = MiscVolume;
   \                     ??GetFloatValue_33:
   \   00000204   600196E5           LDR      R0,[R6, #+352]
   \   00000208   BCFFFFEA           B        ??GetFloatValue_5
    913                  break;
    914              case SVT_TOTAL_VOLUME      :
    915                  MyValue =   CargoVolume + BallastVolume + FreshWaterVolume
    916                      + HeavyFuelVolume + DieselOilVolume + LubricantsVolume
    917                      + MiscVolume;
   \                     ??GetFloatValue_34:
   \   0000020C   0700A0E1           MOV      R0,R7
   \   00000210   0810A0E1           MOV      R1,R8
   \   00000214   ........           _BLF     __fAdd,??__fAdd??rA
   \   00000218   5C1196E5           LDR      R1,[R6, #+348]
   \   0000021C   ........           _BLF     __fAdd,??__fAdd??rA
   \   00000220   501196E5           LDR      R1,[R6, #+336]
   \   00000224   ........           _BLF     __fAdd,??__fAdd??rA
   \   00000228   541196E5           LDR      R1,[R6, #+340]
   \   0000022C   ........           _BLF     __fAdd,??__fAdd??rA
   \   00000230   581196E5           LDR      R1,[R6, #+344]
   \   00000234   ........           _BLF     __fAdd,??__fAdd??rA
   \   00000238   601196E5           LDR      R1,[R6, #+352]
   \                     ??GetFloatValue_35:
   \   0000023C   ........           _BLF     __fAdd,??__fAdd??rA
   \   00000240   AEFFFFEA           B        ??GetFloatValue_5
    918                  break;
    919              case SVT_CARGO_WEIGHT      :
    920                  MyValue = CargoWeight;
   \                     ??GetFloatValue_36:
   \   00000244   00C084E5           STR      R12,[R4, #+0]
   \   00000248   290000EA           B        ??GetFloatValue_6
    921                  break;
    922              case SVT_BALLAST_WEIGHT    :
    923                  MyValue = BallastWeight;
   \                     ??GetFloatValue_37:
   \   0000024C   00E084E5           STR      LR,[R4, #+0]
   \   00000250   270000EA           B        ??GetFloatValue_6
    924                  break;
    925              case SVT_HEAVY_FUEL_WEIGHT :
    926                  MyValue = HeavyFuelWeight;
   \                     ??GetFloatValue_38:
   \   00000254   6C0196E5           LDR      R0,[R6, #+364]
   \   00000258   A8FFFFEA           B        ??GetFloatValue_5
    927                  break;
    928              case SVT_DIESEL_OIL_WEIGHT :
    929                  MyValue = DieselOilWeight;
   \                     ??GetFloatValue_39:
   \   0000025C   700196E5           LDR      R0,[R6, #+368]
   \   00000260   A6FFFFEA           B        ??GetFloatValue_5
    930                  break;
    931              case SVT_LUBRICANTS_WEIGHT :
    932                  MyValue = LubricantsWeight;
   \                     ??GetFloatValue_40:
   \   00000264   740196E5           LDR      R0,[R6, #+372]
   \   00000268   A4FFFFEA           B        ??GetFloatValue_5
    933                  break;
    934              case SVT_FRESH_WATER_WEIGHT:
    935                  MyValue = FreshWaterWeight;
   \                     ??GetFloatValue_41:
   \   0000026C   780196E5           LDR      R0,[R6, #+376]
   \   00000270   A2FFFFEA           B        ??GetFloatValue_5
    936                  break;
    937              case SVT_MISC_WEIGHT       :
    938                  MyValue = MiscWeight;
   \                     ??GetFloatValue_42:
   \   00000274   7C0196E5           LDR      R0,[R6, #+380]
   \   00000278   A0FFFFEA           B        ??GetFloatValue_5
    939                  break;
    940              case SVT_TOTAL_WEIGHT      :
    941                  MyValue = CargoWeight + BallastWeight + FreshWaterWeight
    942                      + HeavyFuelWeight + DieselOilWeight + LubricantsWeight
    943                      + MiscWeight;
   \                     ??GetFloatValue_43:
   \   0000027C   0C00A0E1           MOV      R0,R12
   \   00000280   0E10A0E1           MOV      R1,LR
   \   00000284   ........           _BLF     __fAdd,??__fAdd??rA
   \   00000288   781196E5           LDR      R1,[R6, #+376]
   \   0000028C   ........           _BLF     __fAdd,??__fAdd??rA
   \   00000290   6C1196E5           LDR      R1,[R6, #+364]
   \   00000294   ........           _BLF     __fAdd,??__fAdd??rA
   \   00000298   701196E5           LDR      R1,[R6, #+368]
   \   0000029C   ........           _BLF     __fAdd,??__fAdd??rA
   \   000002A0   741196E5           LDR      R1,[R6, #+372]
   \   000002A4   ........           _BLF     __fAdd,??__fAdd??rA
   \   000002A8   7C1196E5           LDR      R1,[R6, #+380]
   \   000002AC   E2FFFFEA           B        ??GetFloatValue_35
    944                  break;
    945              case SVT_ROLLING_PERIOD     :
    946              case SVT_ROLLING_FREQUENCY  :
    947              case SVT_LIST_MAX_P         :
    948              case SVT_LIST_MAX_S         :
    949              case SVT_LIST_BUF_MAX_P     :
    950              case SVT_LIST_BUF_MAX_S     :
    951              case SVT_RESET_MAX_LIST     :
    952                  if (PROInclinometer::PROInclinPtr) {
   \                     ??GetFloatValue_44:
   \   000002B0   ........           LDR      R0,??DataTable38  ;; ??PROInclinPtr
   \   000002B4   005090E5           LDR      R5,[R0, #+0]
   \   000002B8   000055E3           CMP      R5,#+0
   \   000002BC   0600000A           BEQ      ??GetFloatValue_45
    953                      Status = PROInclinometer::PROInclinPtr->GetFloatValue(ValueId, Index, MyValue);
   \   000002C0   0430A0E1           MOV      R3,R4
   \   000002C4   A44095E5           LDR      R4,[R5, #+164]
   \   000002C8   0500A0E1           MOV      R0,R5
   \   000002CC   204094E5           LDR      R4,[R4, #+32]
   \   000002D0   0FE0A0E1           MOV      LR,PC
   \   000002D4   14FF2FE1           BX       R4
   \   000002D8   040000EA           B        ??GetFloatValue_46
    954                  } else {
    955                      Status = GETVAL_NOT_AVAILABLE;
   \                     ??GetFloatValue_45:
   \   000002DC   0150A0E3           MOV      R5,#+1
   \   000002E0   030000EA           B        ??GetFloatValue_6
    956                  }
    957                  break;
    958              default:
    959                  Status = PRogramObject::GetFloatValue(ValueId, Index, MyValue);
   \                     ??GetFloatValue_3:
   \   000002E4   0430A0E1           MOV      R3,R4
   \   000002E8   0600A0E1           MOV      R0,R6
   \   000002EC   ........           _BLF     ??GetFloatValue_2,??GetFloatValue??rA
   \                     ??GetFloatValue_46:
   \   000002F0   0050A0E1           MOV      R5,R0
    960                  break;
    961          
    962              }
    963              return Status;
   \                     ??GetFloatValue_6:
   \   000002F4                      REQUIRE ?Subroutine25
   \   000002F4                      ;; // Fall through to label ?Subroutine25
    964          }
    965          ///////////////////////////////////////////////////////////////
    966          //
    967          // Routines for the librarian for input/output
    968          //
    969          ///////////////////////////////////////////////////////////////
    970          
    971          

   \                                 In segment CODE, align 4, keep-with-next
    972          int PROSystemData::GetTimeZone(void) {
    973              return TimeFromGMT;
   \                     ??GetTimeZone:
   \   00000000   04009FE5           LDR      R0,??GetTimeZone_1  ;; ??TXUSystemData + 76
   \   00000004   000090E5           LDR      R0,[R0, #+0]
   \   00000008   1EFF2FE1           BX       LR               ;; return
   \                     ??GetTimeZone_1:
   \   0000000C   ........           DC32     ??TXUSystemData + 76
    974          }
    975          

   \                                 In segment CODE, align 4, keep-with-next
    976          void PROSystemData::SetTimeZone(int NewZone) {
    977              if (TimeFromGMT != NewZone) {
   \                     ??SetTimeZone:
   \   00000000   ........           LDR      R1,??DataTable40  ;; ??TXUSystemData
   \   00000004   00402DE9           PUSH     {LR}
   \   00000008   4C2091E5           LDR      R2,[R1, #+76]
   \   0000000C   000052E1           CMP      R2,R0
   \   00000010   0600000A           BEQ      ??SetTimeZone_1
    978                  TimeFromGMT = NewZone;
   \   00000014   4C0081E5           STR      R0,[R1, #+76]
    979                  PROSystemData::TXUSystemData->SetModifiedFlag();
   \   00000018   001091E5           LDR      R1,[R1, #+0]
   \   0000001C   0100A0E1           MOV      R0,R1
   \   00000020   A41091E5           LDR      R1,[R1, #+164]
   \   00000024   541091E5           LDR      R1,[R1, #+84]
   \   00000028   0FE0A0E1           MOV      LR,PC
   \   0000002C   11FF2FE1           BX       R1
    980              }
    981          }
   \                     ??SetTimeZone_1:
   \   00000030                      REQUIRE ?Subroutine26
   \   00000030                      ;; // Fall through to label ?Subroutine26

   \                                 In segment CODE, align 4, keep-with-next
   \                     ?Subroutine26:
   \   00000000   0040BDE8           POP      {LR}
   \   00000004   1EFF2FE1           BX       LR               ;; return
    982          

   \                                 In segment CODE, align 4, keep-with-next
    983          void PROSystemData::SetDST(int NewDST) {
    984              if (DaylightSaving != NewDST) {
   \                     ??SetDST:
   \   00000000   ........           LDR      R1,??DataTable40  ;; ??TXUSystemData
   \   00000004   00402DE9           PUSH     {LR}
   \   00000008   502091E5           LDR      R2,[R1, #+80]
   \   0000000C   000052E1           CMP      R2,R0
   \   00000010   0600000A           BEQ      ??SetDST_1
    985                  DaylightSaving = NewDST;
   \   00000014   500081E5           STR      R0,[R1, #+80]
    986                  PROSystemData::TXUSystemData->SetModifiedFlag();
   \   00000018   001091E5           LDR      R1,[R1, #+0]
   \   0000001C   0100A0E1           MOV      R0,R1
   \   00000020   A41091E5           LDR      R1,[R1, #+164]
   \   00000024   541091E5           LDR      R1,[R1, #+84]
   \   00000028   0FE0A0E1           MOV      LR,PC
   \   0000002C   11FF2FE1           BX       R1
    987              }
    988          }
   \                     ??SetDST_1:
   \   00000030   ........           B        ?Subroutine26
    989          

   \                                 In segment CODE, align 4, keep-with-next
    990          int PROSystemData::PutValue(int ValueId, int Index, AnsiString NewValue, bool Local, int *UnitId) {
   \                     ??PutValue:
   \   00000000   F54F2DE9           PUSH     {R0,R2,R4-R11,LR}
    991              int Status    = E_NO_ERR,
    992                  ValUnitId = NO_UNIT;
   \   00000004   507F9FE5           LDR      R7,??PutValue_9  ;; ??AllObjVector_2
   \   00000008   50AF9FE5           LDR      R10,??PutValue_9+0x4  ;; ??AllObjVector_1
   \   0000000C   50BF9FE5           LDR      R11,??PutValue_9+0x8  ;; ??AllObjVector
   \   00000010   505F9FE5           LDR      R5,??PutValue_9+0xC  ;; ??TXUSystemData
   \   00000014   50DF4DE2           SUB      SP,SP,#+320
   \   00000018   0180A0E1           MOV      R8,R1
   \   0000001C   0390A0E1           MOV      R9,R3
   \   00000020   0010A0E3           MOV      R1,#+0
   \   00000024   00108DE5           STR      R1,[SP, #+0]
   \   00000028   04108DE5           STR      R1,[SP, #+4]
   \   0000002C   0140A0E3           MOV      R4,#+1
   \   00000030   0060A0E3           MOV      R6,#+0
   \   00000034   4B10A0E3           MOV      R1,#+75
   \   00000038   501E81E3           ORR      R1,R1,#0x500
   \   0000003C   010058E1           CMP      R8,R1
   \   00000040   01108112           ADDNE    R1,R1,#+1
   \   00000044   01005811           CMPNE    R8,R1
   \   00000048   01108113           ORRNE    R1,R1,#0x1
   \   0000004C   01005811           CMPNE    R8,R1
   \   00000050   01108112           ADDNE    R1,R1,#+1
   \   00000054   01005811           CMPNE    R8,R1
   \   00000058   01108113           ORRNE    R1,R1,#0x1
   \   0000005C   01005811           CMPNE    R8,R1
   \   00000060   9500000A           BEQ      ??PutValue_10
   \   00000064   550E58E3           CMP      R8,#+1360
   \   00000068   6701000A           BEQ      ??PutValue_11
   \   0000006C   021081E2           ADD      R1,R1,#+2
   \   00000070   010058E1           CMP      R8,R1
   \   00000074   01108112           ADDNE    R1,R1,#+1
   \   00000078   01005811           CMPNE    R8,R1
   \   0000007C   01108113           ORRNE    R1,R1,#0x1
   \   00000080   01005811           CMPNE    R8,R1
   \   00000084   01108112           ADDNE    R1,R1,#+1
   \   00000088   01005811           CMPNE    R8,R1
   \   0000008C   1001000A           BEQ      ??PutValue_12
   \   00000090   331081E2           ADD      R1,R1,#+51
   \   00000094   010058E1           CMP      R8,R1
   \   00000098   6601000A           BEQ      ??PutValue_13
   \   0000009C   051081E2           ADD      R1,R1,#+5
   \   000000A0   010058E1           CMP      R8,R1
   \   000000A4   6B00000A           BEQ      ??PutValue_14
   \   000000A8   011081E3           ORR      R1,R1,#0x1
   \   000000AC   010058E1           CMP      R8,R1
   \   000000B0   6A01000A           BEQ      ??PutValue_15
   \   000000B4   011081E2           ADD      R1,R1,#+1
   \   000000B8   010058E1           CMP      R8,R1
   \   000000BC   7401000A           BEQ      ??PutValue_16
   \   000000C0   011081E3           ORR      R1,R1,#0x1
   \   000000C4   010058E1           CMP      R8,R1
   \   000000C8   9301000A           BEQ      ??PutValue_17
   \   000000CC   590E58E3           CMP      R8,#+1424
   \   000000D0   BF01000A           BEQ      ??PutValue_18
   \   000000D4   021081E2           ADD      R1,R1,#+2
   \   000000D8   010058E1           CMP      R8,R1
   \   000000DC   D401000A           BEQ      ??PutValue_19
   \   000000E0   011081E2           ADD      R1,R1,#+1
   \   000000E4   010058E1           CMP      R8,R1
   \   000000E8   D901000A           BEQ      ??PutValue_20
   \   000000EC   0D1081E3           ORR      R1,R1,#0xD
   \   000000F0   010058E1           CMP      R8,R1
   \   000000F4   1C02000A           BEQ      ??PutValue_21
   \   000000F8   5A0E58E3           CMP      R8,#+1440
   \   000000FC   FD01000A           BEQ      ??PutValue_22
   \   00000100   021081E2           ADD      R1,R1,#+2
   \   00000104   010058E1           CMP      R8,R1
   \   00000108   3402000A           BEQ      ??PutValue_23
   \   0000010C   011081E2           ADD      R1,R1,#+1
   \   00000110   010058E1           CMP      R8,R1
   \   00000114   7F02000A           BEQ      ??PutValue_24
   \   00000118   011081E3           ORR      R1,R1,#0x1
   \   0000011C   010058E1           CMP      R8,R1
   \   00000120   CB02000A           BEQ      ??PutValue_25
   \   00000124   011081E2           ADD      R1,R1,#+1
   \   00000128   010058E1           CMP      R8,R1
   \   0000012C   2903000A           BEQ      ??PutValue_26
   \   00000130   011081E3           ORR      R1,R1,#0x1
   \   00000134   010058E1           CMP      R8,R1
   \   00000138   9003000A           BEQ      ??PutValue_27
   \   0000013C   011081E2           ADD      R1,R1,#+1
   \   00000140   010058E1           CMP      R8,R1
   \   00000144   EE03000A           BEQ      ??PutValue_28
   \   00000148   171081E2           ADD      R1,R1,#+23
   \   0000014C   010058E1           CMP      R8,R1
   \   00000150   7D04000A           BEQ      ??PutValue_29
   \   00000154   011081E2           ADD      R1,R1,#+1
   \   00000158   010058E1           CMP      R8,R1
   \   0000015C   4904000A           BEQ      ??PutValue_30
   \   00000160   011081E3           ORR      R1,R1,#0x1
   \   00000164   010058E1           CMP      R8,R1
   \   00000168   5C0E5813           CMPNE    R8,#+1472
   \   0000016C   02108112           ADDNE    R1,R1,#+2
   \   00000170   01005811           CMPNE    R8,R1
   \   00000174   01108112           ADDNE    R1,R1,#+1
   \   00000178   01005811           CMPNE    R8,R1
   \   0000017C   01108113           ORRNE    R1,R1,#0x1
   \   00000180   01005811           CMPNE    R8,R1
   \   00000184   01108112           ADDNE    R1,R1,#+1
   \   00000188   01005811           CMPNE    R8,R1
   \   0000018C   01108113           ORRNE    R1,R1,#0x1
   \   00000190   01005811           CMPNE    R8,R1
   \   00000194   6C04000A           BEQ      ??PutValue_29
   \   00000198   021081E3           ORR      R1,R1,#0x2
   \   0000019C   010058E1           CMP      R8,R1
   \   000001A0   01108112           ADDNE    R1,R1,#+1
   \   000001A4   01005811           CMPNE    R8,R1
   \   000001A8   01108113           ORRNE    R1,R1,#0x1
   \   000001AC   01005811           CMPNE    R8,R1
   \   000001B0   01108112           ADDNE    R1,R1,#+1
   \   000001B4   01005811           CMPNE    R8,R1
   \   000001B8   01108113           ORRNE    R1,R1,#0x1
   \   000001BC   01005811           CMPNE    R8,R1
   \   000001C0   01108112           ADDNE    R1,R1,#+1
   \   000001C4   01005811           CMPNE    R8,R1
   \   000001C8   A704000A           BEQ      ??PutValue_31
   \   000001CC   2E1081E2           ADD      R1,R1,#+46
   \   000001D0   010058E1           CMP      R8,R1
   \   000001D4   0400000A           BEQ      ??PutValue_32
   \   000001D8   7510A0E3           MOV      R1,#+117
   \   000001DC   9C1D81E3           ORR      R1,R1,#0x2700
   \   000001E0   010058E1           CMP      R8,R1
   \   000001E4   C004000A           BEQ      ??PutValue_33
   \   000001E8   E70400EA           B        ??PutValue_34
    993              switch (ValueId) {
    994              case SVT_LATITUDE:
    995                  InputLatitude(ConvertToSi(NewValue, ValUnitId = ANGLE_UNIT, Status, -90.0, 90.0, Latitude));
   \                     ??PutValue_32:
   \   000001EC   0A10A0E3           MOV      R1,#+10
   \   000001F0   04108DE5           STR      R1,[SP, #+4]
   \   000001F4   0910A0E1           MOV      R1,R9
   \   000001F8   B4008DE2           ADD      R0,SP,#+180
   \   000001FC   ........           _BLF     ??string,??string??rA
   \   00000200   040095E5           LDR      R0,[R5, #+4]
   \   00000204   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   00000208   03002DE9           PUSH     {R0,R1}
   \   0000020C   581D9FE5           LDR      R1,??PutValue_9+0x10  ;; 0x40568000
   \   00000210   0000A0E3           MOV      R0,#+0
   \   00000214   03002DE9           PUSH     {R0,R1}
   \   00000218   801481E3           ORR      R1,R1,#0x80000000
   \   0000021C   03002DE9           PUSH     {R0,R1}
   \   00000220   18208DE2           ADD      R2,SP,#+24
   \   00000224   CC008DE2           ADD      R0,SP,#+204
   \   00000228   0800BDE8           POP      {R3}
   \   0000022C   0A10A0E3           MOV      R1,#+10
   \   00000230   ........           _BLF     ??ConvertToSi,??ConvertToSi??rA
   \   00000234   0010A0E1           MOV      R1,R0
   \   00000238   54019DE5           LDR      R0,[SP, #+340]
   \   0000023C   ........           BL       ??InputLatitude
   \   00000240   0620A0E1           MOV      R2,R6
   \   00000244   0410A0E1           MOV      R1,R4
   \   00000248   C8008DE2           ADD      R0,SP,#+200
   \   0000024C   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   00000250   14D08DE2           ADD      SP,SP,#+20
   \   00000254   DE0400EA           B        ??PutValue_35
    996                  break;
    997              case SVT_CURRENT_UNIT_SYSTEM:
    998                  {
    999                      int NewUnitSystem = atoi(NewValue.c_str());
   \                     ??PutValue_14:
   \   00000258   180099E5           LDR      R0,[R9, #+24]
   \   0000025C   0A20A0E3           MOV      R2,#+10
   \   00000260   100050E3           CMP      R0,#+16
   \   00000264   04009925           LDRCS    R0,[R9, #+4]
   \   00000268   0010A0E3           MOV      R1,#+0
   \   0000026C   04008932           ADDCC    R0,R9,#+4
   \   00000270   ........           _BLF     _Stoul,??_Stoul??rA
   1000                      switch (NewUnitSystem) {
   \   00000274   0010A0E1           MOV      R1,R0
   \   00000278   020051E3           CMP      R1,#+2
   \   0000027C   0B00008A           BHI      ??PutValue_36
   \   00000280   012F8FE2           ADR      R2,??PutValue_1
   \   00000284   0120D2E7           LDRB     R2,[R2, R1]
   \   00000288   02F18FE0           ADD      PC,PC,R2, LSL #+2
   \                     ??PutValue_1:
   \   0000028C   00030600           DC8      +0,+3,+6,+0
   1001                      case UNIT_SYS_SI:
   1002                          CurrentUnitSystem = NewUnitSystem;
   \                     ??PutValue_37:
   \   00000290   080085E5           STR      R0,[R5, #+8]
   1003                          SetStdSIUnits();
   \   00000294   ........           _BLF     ??SetStdSIUnits,??SetStdSIUnits??rA
   \   00000298   CD0400EA           B        ??PutValue_35
   1004                          break;
   1005                      case UNIT_SYS_US:
   1006                          CurrentUnitSystem = NewUnitSystem;
   \                     ??PutValue_38:
   \   0000029C   080085E5           STR      R0,[R5, #+8]
   1007                          SetStdUSUnits();
   \   000002A0   ........           _BLF     ??SetStdUSUnits,??SetStdUSUnits??rA
   \   000002A4   CA0400EA           B        ??PutValue_35
   1008                          break;
   1009                      case UNIT_SYS_USER:
   1010                          CurrentUnitSystem = NewUnitSystem;
   \                     ??PutValue_39:
   \   000002A8   080085E5           STR      R0,[R5, #+8]
   \   000002AC   C80400EA           B        ??PutValue_35
   1011                          break;
   1012                      default:
   1013                          Status = E_INPUT_ERR;
   \                     ??PutValue_36:
   \   000002B0   0110A0E3           MOV      R1,#+1
   \                     ??PutValue_40:
   \   000002B4   00108DE5           STR      R1,[SP, #+0]
   \   000002B8   CE0400EA           B        ??PutValue_41
   1014                          break;
   1015                      }
   1016                  }
   1017                  break;
   1018          
   1019              case SVT_TRIM_M_NOSIGN      :
   1020              case SVT_TRIM_ANGLE_NOSIGN  :
   1021              case SVT_TRIM_M             :
   1022              case SVT_TRIM_MARKS_M       :
   1023              case SVT_TRIM_ANGLE         :
   1024                  switch (TrimSource) {
   \                     ??PutValue_10:
   \   000002BC   140095E5           LDR      R0,[R5, #+20]
   \   000002C0   DA0040E2           SUB      R0,R0,#+218
   \   000002C4   800D40E2           SUB      R0,R0,#+8192
   \   000002C8   020050E3           CMP      R0,#+2
   \   000002CC   C004008A           BHI      ??PutValue_35
   \   000002D0   021F8FE2           ADR      R1,??PutValue_2
   \   000002D4   8000A0E1           MOV      R0,R0, LSL #+1
   \   000002D8   B01091E1           LDRH     R1,[R1, R0]
   \   000002DC   01F18FE0           ADD      PC,PC,R1, LSL #+2
   \                     ??PutValue_2:
   \   000002E0   1D0001001B00       DC16     +29,+1,+27,+0
   \              0000        
   1025                  case C_SD_INC_SOURCE   :
   1026                      if (PROInclinometer::PROInclinPtr) {
   \                     ??PutValue_42:
   \   000002E8   800C9FE5           LDR      R0,??PutValue_9+0x14  ;; ??PROInclinPtr
   \   000002EC   000090E5           LDR      R0,[R0, #+0]
   \   000002F0   000050E3           CMP      R0,#+0
   \   000002F4   BA04000A           BEQ      ??PutValue_43
   1027                          Status = PROInclinometer::PROInclinPtr->PutValue(ValueId, 0, NewValue, Local, &ValUnitId);
   \   000002F8   A40090E5           LDR      R0,[R0, #+164]
   \   000002FC   0910A0E1           MOV      R1,R9
   \   00000300   304080E2           ADD      R4,R0,#+48
   \   00000304   0C008DE2           ADD      R0,SP,#+12
   \   00000308   ........           _BLF     ??string,??string??rA
   \   0000030C   04008DE2           ADD      R0,SP,#+4
   \   00000310   01002DE9           PUSH     {R0}
   \   00000314   7001DDE5           LDRB     R0,[SP, #+368]
   \   00000318   0020A0E3           MOV      R2,#+0
   \   0000031C   0810A0E1           MOV      R1,R8
   \   00000320   01002DE9           PUSH     {R0}
   \   00000324   440C9FE5           LDR      R0,??PutValue_9+0x14  ;; ??PROInclinPtr
   \   00000328   004094E5           LDR      R4,[R4, #+0]
   \   0000032C   000090E5           LDR      R0,[R0, #+0]
   \   00000330   14308DE2           ADD      R3,SP,#+20
   \   00000334   0FE0A0E1           MOV      LR,PC
   \   00000338   14FF2FE1           BX       R4
   \   0000033C   08008DE5           STR      R0,[SP, #+8]
   \   00000340   0620A0E1           MOV      R2,R6
   \   00000344   0110A0E3           MOV      R1,#+1
   \   00000348   14008DE2           ADD      R0,SP,#+20
   \   0000034C   9E0400EA           B        ??PutValue_44
   1028                      }
   1029                      break;
   1030                  case C_SD_DRAFT_SOURCE :
   1031                      Status = E_NO_INPUT_PERMISSION;
   \                     ??PutValue_45:
   \   00000350   2A10A0E3           MOV      R1,#+42
   \   00000354   D6FFFFEA           B        ??PutValue_40
   1032                      break;
   1033                  case C_SD_MAN_SOURCE   :
   1034                      {
   1035                          float NewTrim;
   1036                          switch (ValueId) {
   \                     ??PutValue_46:
   \   00000358   4B8048E2           SUB      R8,R8,#+75
   \   0000035C   508E48E2           SUB      R8,R8,#+1280
   \   00000360   020058E3           CMP      R8,#+2
   \   00000364   5400008A           BHI      ??PutValue_47
   \   00000368   010F8FE2           ADR      R0,??PutValue_3
   \   0000036C   0800D0E7           LDRB     R0,[R0, R8]
   \   00000370   00F18FE0           ADD      PC,PC,R0, LSL #+2
   \                     ??PutValue_3:
   \   00000374   19330000           DC8      +25,+51,+0,+0
   1037                          case SVT_TRIM_ANGLE:
   1038                              NewTrim = ConvertToSi(NewValue, ValUnitId = ANGLE_UNIT, Status, -10.0, 5.0, 0.0);
   \                     ??PutValue_48:
   \   00000378   0A10A0E3           MOV      R1,#+10
   \   0000037C   04108DE5           STR      R1,[SP, #+4]
   \   00000380   0910A0E1           MOV      R1,R9
   \   00000384   44008DE2           ADD      R0,SP,#+68
   \   00000388   ........           _BLF     ??string,??string??rA
   \   0000038C   0000A0E3           MOV      R0,#+0
   \   00000390   0010A0E1           MOV      R1,R0
   \   00000394   03002DE9           PUSH     {R0,R1}
   \   00000398   4014A0E3           MOV      R1,#+1073741824
   \   0000039C   501981E3           ORR      R1,R1,#0x140000
   \   000003A0   03002DE9           PUSH     {R0,R1}
   \   000003A4   C014A0E3           MOV      R1,#-1073741824
   \   000003A8   901981E3           ORR      R1,R1,#0x240000
   \   000003AC   03002DE9           PUSH     {R0,R1}
   \   000003B0   18208DE2           ADD      R2,SP,#+24
   \   000003B4   5C008DE2           ADD      R0,SP,#+92
   \   000003B8   0800BDE8           POP      {R3}
   \   000003BC   0A10A0E3           MOV      R1,#+10
   \   000003C0   ........           _BLF     ??ConvertToSi,??ConvertToSi??rA
   \   000003C4   0040A0E1           MOV      R4,R0
   \   000003C8   0620A0E1           MOV      R2,R6
   \   000003CC   0110A0E3           MOV      R1,#+1
   \   000003D0   58008DE2           ADD      R0,SP,#+88
   \   000003D4   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   000003D8   360000EA           B        ??PutValue_49
   1039                              break;
   1040                          case SVT_TRIM_M:
   1041                              NewTrim = ConvertToSi(NewValue, ValUnitId = LENGTH_UNIT, Status, -15.0, 5.0, 0.0);
   \                     ??PutValue_50:
   \   000003DC   0110A0E3           MOV      R1,#+1
   \   000003E0   04108DE5           STR      R1,[SP, #+4]
   \   000003E4   0910A0E1           MOV      R1,R9
   \   000003E8   60008DE2           ADD      R0,SP,#+96
   \   000003EC   ........           _BLF     ??string,??string??rA
   \   000003F0   0600A0E1           MOV      R0,R6
   \   000003F4   0010A0E1           MOV      R1,R0
   \   000003F8   03002DE9           PUSH     {R0,R1}
   \   000003FC   4014A0E3           MOV      R1,#+1073741824
   \   00000400   501981E3           ORR      R1,R1,#0x140000
   \   00000404   03002DE9           PUSH     {R0,R1}
   \   00000408   C014A0E3           MOV      R1,#-1073741824
   \   0000040C   B81981E3           ORR      R1,R1,#0x2E0000
   \   00000410   03002DE9           PUSH     {R0,R1}
   \   00000414   18208DE2           ADD      R2,SP,#+24
   \   00000418   78008DE2           ADD      R0,SP,#+120
   \   0000041C   0800BDE8           POP      {R3}
   \   00000420   0410A0E1           MOV      R1,R4
   \   00000424   ........           _BLF     ??ConvertToSi,??ConvertToSi??rA
   \   00000428   0040A0E1           MOV      R4,R0
   \   0000042C   0620A0E1           MOV      R2,R6
   \   00000430   0110A0E3           MOV      R1,#+1
   \   00000434   74008DE2           ADD      R0,SP,#+116
   \   00000438   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   1042                              NewTrim /= PROProjectInfo::LengthBetweenPP;
   \   0000043C   301B9FE5           LDR      R1,??PutValue_9+0x18  ;; ??LengthBetweenPP
   \   00000440   180000EA           B        ??PutValue_51
   1043                              break;
   1044                          case SVT_TRIM_MARKS_M:
   1045                              NewTrim = ConvertToSi(NewValue, ValUnitId = LENGTH_UNIT, Status, -15.0, 5.0, 0.0);
   \                     ??PutValue_52:
   \   00000444   0110A0E3           MOV      R1,#+1
   \   00000448   04108DE5           STR      R1,[SP, #+4]
   \   0000044C   0910A0E1           MOV      R1,R9
   \   00000450   7C008DE2           ADD      R0,SP,#+124
   \   00000454   ........           _BLF     ??string,??string??rA
   \   00000458   0600A0E1           MOV      R0,R6
   \   0000045C   0010A0E1           MOV      R1,R0
   \   00000460   03002DE9           PUSH     {R0,R1}
   \   00000464   4014A0E3           MOV      R1,#+1073741824
   \   00000468   501981E3           ORR      R1,R1,#0x140000
   \   0000046C   03002DE9           PUSH     {R0,R1}
   \   00000470   C014A0E3           MOV      R1,#-1073741824
   \   00000474   B81981E3           ORR      R1,R1,#0x2E0000
   \   00000478   03002DE9           PUSH     {R0,R1}
   \   0000047C   18208DE2           ADD      R2,SP,#+24
   \   00000480   94008DE2           ADD      R0,SP,#+148
   \   00000484   0800BDE8           POP      {R3}
   \   00000488   0410A0E1           MOV      R1,R4
   \   0000048C   ........           _BLF     ??ConvertToSi,??ConvertToSi??rA
   \   00000490   0040A0E1           MOV      R4,R0
   \   00000494   0620A0E1           MOV      R2,R6
   \   00000498   0110A0E3           MOV      R1,#+1
   \   0000049C   90008DE2           ADD      R0,SP,#+144
   \   000004A0   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   1046                              NewTrim /= PROProjectInfo::LengthBetweenMarks;
   \   000004A4   CC1A9FE5           LDR      R1,??PutValue_9+0x1C  ;; ??LengthBetweenMarks
   \                     ??PutValue_51:
   \   000004A8   0400A0E1           MOV      R0,R4
   \   000004AC   001091E5           LDR      R1,[R1, #+0]
   \   000004B0   ........           _BLF     __fDiv,??__fDiv??rA
   \   000004B4   0040A0E1           MOV      R4,R0
   \                     ??PutValue_49:
   \   000004B8   14D08DE2           ADD      SP,SP,#+20       ;; stack cleaning
   1047                              break;
   1048                          }
   1049                          if (Status == E_NO_ERR) {
   \                     ??PutValue_47:
   \   000004BC   00009DE5           LDR      R0,[SP, #+0]
   \   000004C0   000050E3           CMP      R0,#+0
   \   000004C4   4204001A           BNE      ??PutValue_35
   1050                              ManualTrim = NewTrim;
   \   000004C8   1C4085E5           STR      R4,[R5, #+28]
   1051                              TrimValue  = NewTrim;
   \   000004CC   244085E5           STR      R4,[R5, #+36]
   \   000004D0   430400EA           B        ??PutValue_43
   1052                          }
   1053          
   1054                      }
   1055                      break;
   1056                  }
   1057                  break;
   1058          
   1059              case SVT_LIST_M_NOSIGN:
   1060              case SVT_LIST_ANGLE_NOSIGN:
   1061              case SVT_LIST_M:
   1062              case SVT_LIST_ANGLE:
   1063                  switch (ListSource) {
   \                     ??PutValue_12:
   \   000004D4   180095E5           LDR      R0,[R5, #+24]
   \   000004D8   DA0040E2           SUB      R0,R0,#+218
   \   000004DC   800D40E2           SUB      R0,R0,#+8192
   \   000004E0   020050E3           CMP      R0,#+2
   \   000004E4   3A04008A           BHI      ??PutValue_35
   \   000004E8   021F8FE2           ADR      R1,??PutValue_4
   \   000004EC   8000A0E1           MOV      R0,R0, LSL #+1
   \   000004F0   F01091E1           LDRSH    R1,[R1, R0]
   \   000004F4   01F18FE0           ADD      PC,PC,R1, LSL #+2
   \                     ??PutValue_4:
   \   000004F8   01007BFF95FF       DC16     +1,+65403,+65429,+0
   \              0000        
   1064                  case C_SD_INC_SOURCE   :
   1065                      if (PROInclinometer::PROInclinPtr) {
   1066                          Status = PROInclinometer::PROInclinPtr->PutValue(ValueId, 0, NewValue, Local, &ValUnitId);
   1067                      }
   1068                      break;
   1069                  case C_SD_DRAFT_SOURCE :
   1070                      Status = E_NO_INPUT_PERMISSION;
   1071                      break;
   1072                  case C_SD_MAN_SOURCE   :
   1073                      {
   1074                          float NewList;
   1075                          switch (ValueId) {
   \                     ??PutValue_53:
   \   00000500   518048E2           SUB      R8,R8,#+81
   \   00000504   508E48E2           SUB      R8,R8,#+1280
   \   00000508   010058E3           CMP      R8,#+1
   \   0000050C   3800008A           BHI      ??PutValue_54
   \   00000510   010F8FE2           ADR      R0,??PutValue_5
   \   00000514   0800D0E7           LDRB     R0,[R0, R8]
   \   00000518   00F18FE0           ADD      PC,PC,R0, LSL #+2
   \                     ??PutValue_5:
   \   0000051C   18000000           DC8      +24,+0,+0,+0
   1076                          case SVT_LIST_ANGLE:
   1077                              ValUnitId = ANGLE_UNIT;
   1078                              NewList = ConvertToSi(NewValue, ValUnitId = ANGLE_UNIT, Status, -15.0, 15.0, 0.0);
   \                     ??PutValue_55:
   \   00000520   0A10A0E3           MOV      R1,#+10
   \   00000524   04108DE5           STR      R1,[SP, #+4]
   \   00000528   0910A0E1           MOV      R1,R9
   \   0000052C   98008DE2           ADD      R0,SP,#+152
   \   00000530   ........           _BLF     ??string,??string??rA
   \   00000534   0000A0E3           MOV      R0,#+0
   \   00000538   0010A0E1           MOV      R1,R0
   \   0000053C   03002DE9           PUSH     {R0,R1}
   \   00000540   4014A0E3           MOV      R1,#+1073741824
   \   00000544   B81981E3           ORR      R1,R1,#0x2E0000
   \   00000548   03002DE9           PUSH     {R0,R1}
   \   0000054C   801481E3           ORR      R1,R1,#0x80000000
   \   00000550   03002DE9           PUSH     {R0,R1}
   \   00000554   18208DE2           ADD      R2,SP,#+24
   \   00000558   B0008DE2           ADD      R0,SP,#+176
   \   0000055C   0800BDE8           POP      {R3}
   \   00000560   0A10A0E3           MOV      R1,#+10
   \   00000564   ........           _BLF     ??ConvertToSi,??ConvertToSi??rA
   \   00000568   0040A0E1           MOV      R4,R0
   \   0000056C   0620A0E1           MOV      R2,R6
   \   00000570   0110A0E3           MOV      R1,#+1
   \   00000574   AC008DE2           ADD      R0,SP,#+172
   \   00000578   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   0000057C   1B0000EA           B        ??PutValue_56
   1079                              break;
   1080                          case SVT_LIST_M:
   1081                              ValUnitId = LENGTH_UNIT;
   1082                              NewList = ConvertToSi(NewValue, ValUnitId = LENGTH_UNIT, Status, -5.0, 5.0, 0.0);
   \                     ??PutValue_57:
   \   00000580   0110A0E3           MOV      R1,#+1
   \   00000584   04108DE5           STR      R1,[SP, #+4]
   \   00000588   0910A0E1           MOV      R1,R9
   \   0000058C   28008DE2           ADD      R0,SP,#+40
   \   00000590   ........           _BLF     ??string,??string??rA
   \   00000594   0600A0E1           MOV      R0,R6
   \   00000598   0010A0E1           MOV      R1,R0
   \   0000059C   03002DE9           PUSH     {R0,R1}
   \   000005A0   4014A0E3           MOV      R1,#+1073741824
   \   000005A4   501981E3           ORR      R1,R1,#0x140000
   \   000005A8   03002DE9           PUSH     {R0,R1}
   \   000005AC   801481E3           ORR      R1,R1,#0x80000000
   \   000005B0   03002DE9           PUSH     {R0,R1}
   \   000005B4   18208DE2           ADD      R2,SP,#+24
   \   000005B8   40008DE2           ADD      R0,SP,#+64
   \   000005BC   0800BDE8           POP      {R3}
   \   000005C0   0410A0E1           MOV      R1,R4
   \   000005C4   ........           _BLF     ??ConvertToSi,??ConvertToSi??rA
   \   000005C8   0040A0E1           MOV      R4,R0
   \   000005CC   0620A0E1           MOV      R2,R6
   \   000005D0   0110A0E3           MOV      R1,#+1
   \   000005D4   3C008DE2           ADD      R0,SP,#+60
   \   000005D8   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   1083                              NewList /= PROProjectInfo::Width;
   \   000005DC   98199FE5           LDR      R1,??PutValue_9+0x20  ;; ??Width
   \   000005E0   0400A0E1           MOV      R0,R4
   \   000005E4   001091E5           LDR      R1,[R1, #+0]
   \   000005E8   ........           _BLF     __fDiv,??__fDiv??rA
   \   000005EC   0040A0E1           MOV      R4,R0
   \                     ??PutValue_56:
   \   000005F0   14D08DE2           ADD      SP,SP,#+20       ;; stack cleaning
   1084                              break;
   1085                          }
   1086                          if (Status == E_NO_ERR) {
   \                     ??PutValue_54:
   \   000005F4   00009DE5           LDR      R0,[SP, #+0]
   \   000005F8   000050E3           CMP      R0,#+0
   \   000005FC   F403001A           BNE      ??PutValue_35
   1087                              ManualList = NewList;
   \   00000600   204085E5           STR      R4,[R5, #+32]
   1088                              ListValue  = NewList;
   \   00000604   284085E5           STR      R4,[R5, #+40]
   \   00000608   F50300EA           B        ??PutValue_43
   1089                          }
   1090          
   1091                      }
   1092                      break;
   1093                  }
   1094                  break;
   1095          
   1096              case SVT_TRIM_SOURCE:
   1097                  ConvertToInt(&TrimSource, NewValue);
   \                     ??PutValue_11:
   \   0000060C   0910A0E1           MOV      R1,R9
   \   00000610   D0008DE2           ADD      R0,SP,#+208
   \   00000614   ........           _BLF     ??string,??string??rA
   \   00000618   D0108DE2           ADD      R1,SP,#+208
   \   0000061C   140085E2           ADD      R0,R5,#+20
   \   00000620   ........           _BLF     ??ConvertToInt,??ConvertToInt??rA
   \   00000624   0020A0E3           MOV      R2,#+0
   \   00000628   0410A0E1           MOV      R1,R4
   \   0000062C   D0008DE2           ADD      R0,SP,#+208
   \                     ??PutValue_58:
   \   00000630   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   00000634   E60300EA           B        ??PutValue_35
   1098                  break;
   1099              case SVT_LIST_SOURCE:
   1100                  ConvertToInt(&ListSource, NewValue);
   \                     ??PutValue_13:
   \   00000638   0910A0E1           MOV      R1,R9
   \   0000063C   EC008DE2           ADD      R0,SP,#+236
   \   00000640   ........           _BLF     ??string,??string??rA
   \   00000644   EC108DE2           ADD      R1,SP,#+236
   \   00000648   180085E2           ADD      R0,R5,#+24
   \   0000064C   ........           _BLF     ??ConvertToInt,??ConvertToInt??rA
   \   00000650   0020A0E3           MOV      R2,#+0
   \   00000654   0410A0E1           MOV      R1,R4
   \   00000658   EC008DE2           ADD      R0,SP,#+236
   \   0000065C   F3FFFFEA           B        ??PutValue_58
   1101                  break;
   1102              case SVT_CURRENT_LANGUAGE :
   1103                  ConvertToInt(&CurrentLanguage, NewValue);
   \                     ??PutValue_15:
   \   00000660   0910A0E1           MOV      R1,R9
   \   00000664   420F8DE2           ADD      R0,SP,#+264
   \   00000668   ........           _BLF     ??string,??string??rA
   \   0000066C   421F8DE2           ADD      R1,SP,#+264
   \   00000670   0C0085E2           ADD      R0,R5,#+12
   \   00000674   ........           _BLF     ??ConvertToInt,??ConvertToInt??rA
   \   00000678   0020A0E3           MOV      R2,#+0
   \   0000067C   0410A0E1           MOV      R1,R4
   \   00000680   420F8DE2           ADD      R0,SP,#+264
   \   00000684   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   1104                  SetCurrentLanguage(CurrentLanguage);
   \   00000688   0C0095E5           LDR      R0,[R5, #+12]
   \   0000068C   ........           _BLF     ??SetCurrentLanguage,??SetCurrentLanguage??rA
   \   00000690   CF0300EA           B        ??PutValue_35
   1105                  break;
   1106              case SVT_ALARM_OFF_DELAY  :
   1107                  {
   1108                      float AlDelay;
   1109                      ConvertToFloat(&AlDelay, NewValue);
   \                     ??PutValue_16:
   \   00000694   0910A0E1           MOV      R1,R9
   \   00000698   0C008DE2           ADD      R0,SP,#+12
   \   0000069C   ........           _BLF     ??string,??string??rA
   \   000006A0   0C108DE2           ADD      R1,SP,#+12
   \   000006A4   08008DE2           ADD      R0,SP,#+8
   \   000006A8   ........           _BLF     ??ConvertToFloat,??ConvertToFloat??rA
   \   000006AC   0020A0E3           MOV      R2,#+0
   \   000006B0   0410A0E1           MOV      R1,R4
   \   000006B4   0C008DE2           ADD      R0,SP,#+12
   \   000006B8   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   1110                      AlDelay = AlDelay * MSEC_TO_SEC;
   \   000006BC   08009DE5           LDR      R0,[SP, #+8]
   \   000006C0   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   000006C4   483F9FE5           LDR      R3,??PutValue_59  ;; 0x408f4000
   \   000006C8   0620A0E1           MOV      R2,R6
   \   000006CC   ........           _BLF     __dMul,??__dMul??rA
   \   000006D0   ........           _BLF     __doubleToFloat,??__doubleToFloat??rA
   \   000006D4   08008DE5           STR      R0,[SP, #+8]
   1111                      if (AlDelay < MIN_ALARM_OFF_DELAY) {
   \   000006D8   4414A0E3           MOV      R1,#+1140850688
   \   000006DC   7A1881E3           ORR      R1,R1,#0x7A0000
   \   000006E0   ........           _BLF     __fLess,??__fLess??rA
   \   000006E4   000050E3           CMP      R0,#+0
   \   000006E8   0100000A           BEQ      ??PutValue_60
   1112                          Status = E_LOW;
   \                     ??PutValue_61:
   \   000006EC   0710A0E3           MOV      R1,#+7
   \   000006F0   EFFEFFEA           B        ??PutValue_40
   1113                      } else if (AlDelay > MAX_ALARM_OFF_DELAY) {
   \                     ??PutValue_60:
   \   000006F4   08009DE5           LDR      R0,[SP, #+8]
   \   000006F8   181F9FE5           LDR      R1,??PutValue_59+0x4  ;; 0x49127c01
   \   000006FC   ........           _BLF     __fGreaterEqual,??__fGreaterEqual??rA
   \   00000700   000050E3           CMP      R0,#+0
   1114                          Status = E_HIGH;
   \   00000704   0610A013           MOVNE    R1,#+6
   \   00000708   E9FEFF1A           BNE      ??PutValue_40
   1115                      } else {
   1116                          AlarmOffDelay = int(AlDelay);
   \   0000070C   08009DE5           LDR      R0,[SP, #+8]
   \   00000710   ........           _BLF     __floatToLong,??__floatToLong??rA
   \   00000714   100085E5           STR      R0,[R5, #+16]
   \   00000718   AD0300EA           B        ??PutValue_35
   1117                      }
   1118                  }
   1119                  break;
   1120              case SVT_ALARM_SOUND_SLEEP     :
   1121                  {
   1122          
   1123                      int NewStatus = FindConfigKey(NewValue);
   1124                      switch (NewStatus) {
   \                     ??PutValue_17:
   \   0000071C   F85E9FE5           LDR      R5,??PutValue_59+0x8  ;; AlarmSilenceTimer
   \   00000720   F87E9FE5           LDR      R7,??PutValue_59+0xC  ;; ??AlarmSound
   \   00000724   0910A0E1           MOV      R1,R9
   \   00000728   0C008DE2           ADD      R0,SP,#+12
   \   0000072C   ........           _BLF     ??string,??string??rA
   \   00000730   0C008DE2           ADD      R0,SP,#+12
   \   00000734   ........           _BLF     ??FindConfigKey,??FindConfigKey??rA
   \   00000738   0080A0E1           MOV      R8,R0
   \   0000073C   0020A0E3           MOV      R2,#+0
   \   00000740   0410A0E1           MOV      R1,R4
   \   00000744   0C008DE2           ADD      R0,SP,#+12
   \   00000748   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   0000074C   648058E2           SUBS     R8,R8,#+100
   \   00000750   0200000A           BEQ      ??PutValue_62
   \   00000754   018058E2           SUBS     R8,R8,#+1
   \   00000758   0200000A           BEQ      ??PutValue_63
   \   0000075C   060000EA           B        ??PutValue_64
   1125                      case C_ENABLE:
   1126                          AlarmBasic::AlarmSound = true;
   \                     ??PutValue_62:
   \   00000760   0040C7E5           STRB     R4,[R7, #+0]
   \   00000764   9A0300EA           B        ??PutValue_35
   1127                          break;
   1128                      case C_DISABLE:
   1129                          AlarmBasic::AlarmSound = false;
   \                     ??PutValue_63:
   \   00000768   0000A0E3           MOV      R0,#+0
   \   0000076C   0000C7E5           STRB     R0,[R7, #+0]
   1130          #ifdef S2TXU
   1131                          OS_RetriggerTimer(&AlarmSilenceTimer);
   \   00000770   0500A0E1           MOV      R0,R5
   \   00000774   ........           _BLF     OS_RetriggerTimer,??OS_RetriggerTimer??rA
   \   00000778   950300EA           B        ??PutValue_35
   1132          #endif
   1133                          break;
   1134                      default:
   1135          				{
   1136          					unsigned Value = GetUnsigned(NewValue, Status);
   \                     ??PutValue_64:
   \   0000077C   0910A0E1           MOV      R1,R9
   \   00000780   28008DE2           ADD      R0,SP,#+40
   \   00000784   ........           _BLF     ??string,??string??rA
   \   00000788   0D10A0E1           MOV      R1,SP
   \   0000078C   28008DE2           ADD      R0,SP,#+40
   \   00000790   ........           _BLF     ??GetUnsigned,??GetUnsigned??rA
   \   00000794   0080A0E1           MOV      R8,R0
   \   00000798   0020A0E3           MOV      R2,#+0
   \   0000079C   0410A0E1           MOV      R1,R4
   \   000007A0   28008DE2           ADD      R0,SP,#+40
   \   000007A4   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   1137                              if (Status == E_NO_ERR) {
   \   000007A8   00009DE5           LDR      R0,[SP, #+0]
   \   000007AC   000050E3           CMP      R0,#+0
   \   000007B0   8703001A           BNE      ??PutValue_35
   1138                                  if (Value) {
   \   000007B4   000058E3           CMP      R8,#+0
   1139          							AlarmBasic::AlarmSound = true;
   \   000007B8   0040C715           STRBNE   R4,[R7, #+0]
   \   000007BC   8803001A           BNE      ??PutValue_43
   1140          						} else {
   1141          #ifdef S2TXU
   1142                                      OS_RetriggerTimer(&AlarmSilenceTimer);
   \   000007C0   0500A0E1           MOV      R0,R5
   \   000007C4   ........           _BLF     OS_RetriggerTimer,??OS_RetriggerTimer??rA
   1143          #endif
   1144                                      AlarmBasic::AlarmSound = false;
   \   000007C8   0000A0E3           MOV      R0,#+0
   \   000007CC   0000C7E5           STRB     R0,[R7, #+0]
   \   000007D0   7F0300EA           B        ??PutValue_35
   1145                                  }
   1146                              }
   1147                          }
   1148                          break;
   1149                      }
   1150          		}
   1151                  break;
   1152              case SVT_TOUCH_SCREEN_TIMEOUT  :
   1153                  {
   1154                      int ScrOffDelay;
   1155                      ConvertToInt(&ScrOffDelay, NewValue);
   \                     ??PutValue_18:
   \   000007D4   0910A0E1           MOV      R1,R9
   \   000007D8   0C008DE2           ADD      R0,SP,#+12
   \   000007DC   ........           _BLF     ??string,??string??rA
   \   000007E0   0C108DE2           ADD      R1,SP,#+12
   \   000007E4   08008DE2           ADD      R0,SP,#+8
   \   000007E8   ........           _BLF     ??ConvertToInt,??ConvertToInt??rA
   \   000007EC   0020A0E3           MOV      R2,#+0
   \   000007F0   0410A0E1           MOV      R1,R4
   \   000007F4   0C008DE2           ADD      R0,SP,#+12
   \   000007F8   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   1156                      if (ScrOffDelay < TOUCH_MIN_TIMEOUT) {
   \   000007FC   08009DE5           LDR      R0,[SP, #+8]
   \   00000800   010050E3           CMP      R0,#+1
   \   00000804   B8FFFFBA           BLT      ??PutValue_61
   1157                          Status = E_LOW;
   1158                      } else if (ScrOffDelay > TOUCH_MAX_TIMEOUT) {
   \   00000808   790050E3           CMP      R0,#+121
   1159                          Status = E_HIGH;
   \   0000080C   0610A0A3           MOVGE    R1,#+6
   \   00000810   A7FEFFAA           BGE      ??PutValue_40
   1160                      } else {
   1161                          TouchScreenTimeOut = int (ScrOffDelay *MIN_TO_MSEC);
   \   00000814   ........           LDR      R4,??DataTable41  ;; TouchScreenTimeOut
   \   00000818   ........           _BLF     __longToDouble,??__longToDouble??rA
   \   0000081C   003E9FE5           LDR      R3,??PutValue_59+0x10  ;; 0x40ed4c00
   \   00000820   0020A0E3           MOV      R2,#+0
   \   00000824   ........           _BLF     __dMul,??__dMul??rA
   \   00000828   ........           _BLF     __doubleToLong,??__doubleToLong??rA
   \   0000082C   000084E5           STR      R0,[R4, #+0]
   \   00000830   670300EA           B        ??PutValue_35
   1162                      }
   1163                  }
   1164                  break;
   1165              case SVT_USER_PIN_CODE    :
   1166                  UserPinCode = NewValue;
   \                     ??PutValue_19:
   \   00000834   ........           LDR      R0,??DataTable42  ;; ??npos
   \   00000838   0020A0E3           MOV      R2,#+0
   \   0000083C   003090E5           LDR      R3,[R0, #+0]
   \   00000840   40019DE5           LDR      R0,[SP, #+320]
   \   00000844   0910A0E1           MOV      R1,R9
   \   00000848   620F80E2           ADD      R0,R0,#+392
   \   0000084C   ........           _BLF     ??assign,??assign??rA
   \   00000850   5F0300EA           B        ??PutValue_35
   1167                  break;
   1168              case SVT_FORCE_WRITE_CONFIG:
   1169                  {
   1170                      int  NewStatus = FindConfigKey(NewValue);
   \                     ??PutValue_20:
   \   00000854   0910A0E1           MOV      R1,R9
   \   00000858   0C008DE2           ADD      R0,SP,#+12
   \   0000085C   ........           _BLF     ??string,??string??rA
   \   00000860   0C008DE2           ADD      R0,SP,#+12
   \   00000864   ........           _BLF     ??FindConfigKey,??FindConfigKey??rA
   \   00000868   0080A0E1           MOV      R8,R0
   \   0000086C   0020A0E3           MOV      R2,#+0
   \   00000870   0410A0E1           MOV      R1,R4
   \   00000874   0C008DE2           ADD      R0,SP,#+12
   \   00000878   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   1171                      bool tmpEnable = false;
   \   0000087C   0670A0E1           MOV      R7,R6
   1172                      switch (NewStatus) {
   \   00000880   648058E2           SUBS     R8,R8,#+100
   \   00000884   1000000A           BEQ      ??PutValue_65
   \   00000888   018058E2           SUBS     R8,R8,#+1
   \   0000088C   0F00000A           BEQ      ??PutValue_66
   1173                      case C_ENABLE:
   1174                          tmpEnable = true;
   1175                          break;
   1176                      case C_DISABLE:
   1177                          break;
   1178                      default:
   1179                          {
   1180                              bool Value = (bool)GetUnsigned(NewValue, Status);
   \   00000890   0910A0E1           MOV      R1,R9
   \   00000894   28008DE2           ADD      R0,SP,#+40
   \   00000898   ........           _BLF     ??string,??string??rA
   \   0000089C   0D10A0E1           MOV      R1,SP
   \   000008A0   28008DE2           ADD      R0,SP,#+40
   \   000008A4   ........           _BLF     ??GetUnsigned,??GetUnsigned??rA
   \   000008A8   000050E3           CMP      R0,#+0
   \   000008AC   0040A003           MOVEQ    R4,#+0
   \   000008B0   0020A0E3           MOV      R2,#+0
   \   000008B4   0110A0E3           MOV      R1,#+1
   \   000008B8   28008DE2           ADD      R0,SP,#+40
   \   000008BC   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   1181                              if (Status == E_NO_ERR) {
   \   000008C0   00009DE5           LDR      R0,[SP, #+0]
   \   000008C4   000050E3           CMP      R0,#+0
   \   000008C8   0000001A           BNE      ??PutValue_66
   1182                                  tmpEnable = Value;
   \                     ??PutValue_65:
   \   000008CC   0470A0E1           MOV      R7,R4
   1183                              }
   1184                          }
   1185                          break;
   1186                      }
   1187                      HasConfigWritePermission = tmpEnable;
   1188                  }
   1189          #ifdef S2TXU
   1190                  // Not required to check HasConfigWritePermission as the receiver task will check it
   1191                  if (OS_IsTask(&SaveConfigTaskHandle)) {
   \                     ??PutValue_66:
   \   000008D0   504D9FE5           LDR      R4,??PutValue_59+0x14  ;; SaveConfigTaskHandle
   \   000008D4   5870C5E5           STRB     R7,[R5, #+88]
   \   000008D8   0400A0E1           MOV      R0,R4
   \   000008DC   ........           _BLF     OS_IsTask,??OS_IsTask??rA
   \   000008E0   000050E3           CMP      R0,#+0
   \   000008E4   3A03000A           BEQ      ??PutValue_35
   1192                      OS_SignalEvent(FLASH_WRITE_CONFIG_NO_DELAY, &SaveConfigTaskHandle);
   \   000008E8   0410A0E1           MOV      R1,R4
   \   000008EC   0200A0E3           MOV      R0,#+2
   \   000008F0   ........           _BLF     OS_SignalEvent,??OS_SignalEvent??rA
   \   000008F4   360300EA           B        ??PutValue_35
   1193                  }
   1194          #endif
   1195                  break;
   1196              case SVT_SEAWATER_TEMP :
   1197                  {
   1198                      float TVal = ConvertToSi(NewValue, ValUnitId = TEMP_UNIT, Status, MIN_WATER_TEMP, MAX_WATER_TEMP, 0.0);
   \                     ??PutValue_22:
   \   000008F8   0510A0E3           MOV      R1,#+5
   \   000008FC   04108DE5           STR      R1,[SP, #+4]
   \   00000900   0910A0E1           MOV      R1,R9
   \   00000904   0C008DE2           ADD      R0,SP,#+12
   \   00000908   ........           _BLF     ??string,??string??rA
   \   0000090C   0000A0E3           MOV      R0,#+0
   \   00000910   0010A0E1           MOV      R1,R0
   \   00000914   03002DE9           PUSH     {R0,R1}
   \   00000918   0C1D9FE5           LDR      R1,??PutValue_59+0x18  ;; 0x40468000
   \   0000091C   03002DE9           PUSH     {R0,R1}
   \   00000920   C014A0E3           MOV      R1,#-1073741824
   \   00000924   501981E3           ORR      R1,R1,#0x140000
   \   00000928   03002DE9           PUSH     {R0,R1}
   \   0000092C   18208DE2           ADD      R2,SP,#+24
   \   00000930   24008DE2           ADD      R0,SP,#+36
   \   00000934   0800BDE8           POP      {R3}
   \   00000938   0510A0E3           MOV      R1,#+5
   \   0000093C   ........           _BLF     ??ConvertToSi,??ConvertToSi??rA
   \   00000940   0040A0E1           MOV      R4,R0
   \   00000944   0620A0E1           MOV      R2,R6
   \   00000948   0110A0E3           MOV      R1,#+1
   \   0000094C   20008DE2           ADD      R0,SP,#+32
   \   00000950   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   1199                      if (Status == E_NO_ERR) {
   \   00000954   14009DE5           LDR      R0,[SP, #+20]
   \   00000958   14D08DE2           ADD      SP,SP,#+20
   \   0000095C   000050E3           CMP      R0,#+0
   \   00000960   1B03001A           BNE      ??PutValue_35
   1200                          SeaWaterTemp = TVal;
   \   00000964   444085E5           STR      R4,[R5, #+68]
   \   00000968   1D0300EA           B        ??PutValue_43
   1201                      }
   1202                  }
   1203                  break;
   1204              case SVT_AMBIENT_TEMP :
   1205                  {
   1206                      float TVal = ConvertToSi(NewValue, ValUnitId = TEMP_UNIT, Status, MIN_ENVIRONMENT_TEMP, MAX_ENVIRONMENT_TEMP, 0.0);
   \                     ??PutValue_21:
   \   0000096C   0510A0E3           MOV      R1,#+5
   \   00000970   04108DE5           STR      R1,[SP, #+4]
   \   00000974   0910A0E1           MOV      R1,R9
   \   00000978   0C008DE2           ADD      R0,SP,#+12
   \   0000097C   ........           _BLF     ??string,??string??rA
   \   00000980   0000A0E3           MOV      R0,#+0
   \   00000984   0010A0E1           MOV      R1,R0
   \   00000988   03002DE9           PUSH     {R0,R1}
   \   0000098C   9C1C9FE5           LDR      R1,??PutValue_59+0x1C  ;; 0x40518000
   \   00000990   03002DE9           PUSH     {R0,R1}
   \   00000994   C014A0E3           MOV      R1,#-1073741824
   \   00000998   441881E3           ORR      R1,R1,#0x440000
   \   0000099C   03002DE9           PUSH     {R0,R1}
   \   000009A0   18208DE2           ADD      R2,SP,#+24
   \   000009A4   24008DE2           ADD      R0,SP,#+36
   \   000009A8   0800BDE8           POP      {R3}
   \   000009AC   0510A0E3           MOV      R1,#+5
   \   000009B0   ........           _BLF     ??ConvertToSi,??ConvertToSi??rA
   \   000009B4   0040A0E1           MOV      R4,R0
   \   000009B8   0620A0E1           MOV      R2,R6
   \   000009BC   0110A0E3           MOV      R1,#+1
   \   000009C0   20008DE2           ADD      R0,SP,#+32
   \   000009C4   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   1207                      if (Status == E_NO_ERR) {
   \   000009C8   14009DE5           LDR      R0,[SP, #+20]
   \   000009CC   14D08DE2           ADD      SP,SP,#+20
   \   000009D0   000050E3           CMP      R0,#+0
   \   000009D4   FE02001A           BNE      ??PutValue_35
   1208                          AmbientTemp = TVal;
   \   000009D8   484085E5           STR      R4,[R5, #+72]
   \   000009DC   000300EA           B        ??PutValue_43
   1209                      }
   1210                  }
   1211                  break;
   1212              case SVT_SEAWATER_DNS  :
   1213                  {
   1214                      float TVal = ConvertToSi(NewValue, ValUnitId = DENSITY_UNIT, Status, MIN_DENSITY, MAX_DENSITY, 0.0);
   \                     ??PutValue_23:
   \   000009E0   0910A0E3           MOV      R1,#+9
   \   000009E4   04108DE5           STR      R1,[SP, #+4]
   \   000009E8   0910A0E1           MOV      R1,R9
   \   000009EC   0C008DE2           ADD      R0,SP,#+12
   \   000009F0   ........           _BLF     ??string,??string??rA
   \   000009F4   0000A0E3           MOV      R0,#+0
   \   000009F8   0010A0E1           MOV      R1,R0
   \   000009FC   03002DE9           PUSH     {R0,R1}
   \   00000A00   2C0C9FE5           LDR      R0,??PutValue_59+0x20  ;; 0xffffffff9999999a
   \   00000A04   2C1C9FE5           LDR      R1,??PutValue_59+0x24  ;; 0x40099999
   \   00000A08   03002DE9           PUSH     {R0,R1}
   \   00000A0C   C01941E2           SUB      R1,R1,#+3145728
   \   00000A10   03002DE9           PUSH     {R0,R1}
   \   00000A14   18208DE2           ADD      R2,SP,#+24
   \   00000A18   24008DE2           ADD      R0,SP,#+36
   \   00000A1C   0800BDE8           POP      {R3}
   \   00000A20   0910A0E3           MOV      R1,#+9
   \   00000A24   ........           _BLF     ??ConvertToSi,??ConvertToSi??rA
   \   00000A28   0040A0E1           MOV      R4,R0
   \   00000A2C   0620A0E1           MOV      R2,R6
   \   00000A30   0110A0E3           MOV      R1,#+1
   \   00000A34   20008DE2           ADD      R0,SP,#+32
   \   00000A38   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   1215                      if (Status == E_NO_ERR) {
   \   00000A3C   14009DE5           LDR      R0,[SP, #+20]
   \   00000A40   14D08DE2           ADD      SP,SP,#+20
   \   00000A44   000050E3           CMP      R0,#+0
   \   00000A48   E102001A           BNE      ??PutValue_35
   1216                          SeaWaterDensity = TVal;
   \   00000A4C   304085E5           STR      R4,[R5, #+48]
   1217                          if (!PROCargoTank::AllObjVector.empty()) {
   \   00000A50   0B00A0E1           MOV      R0,R11
   \   00000A54   ........           _BLF     ??empty,??empty??rA
   \   00000A58   000050E3           CMP      R0,#+0
   \   00000A5C   0C00001A           BNE      ??PutValue_67
   1218                              for (unsigned i = 0; i < PROCargoTank::AllObjVector.size(); i++) {
   \   00000A60   0040A0E3           MOV      R4,#+0
   \   00000A64   050000EA           B        ??PutValue_68
   1219                                  PROTank *TElement = (PROTank *)PROCargoTank::AllObjVector[i];
   \                     ??PutValue_69:
   \   00000A68   040190E7           LDR      R0,[R0, +R4, LSL #+2]
   1220                                  if (TElement) TElement->CargoType->Update_Density();
   \   00000A6C   000050E3           CMP      R0,#+0
   \   00000A70   0100000A           BEQ      ??PutValue_70
   \   00000A74   040390E5           LDR      R0,[R0, #+772]
   \   00000A78   ........           _BLF     ??Update_Density,??Update_Density??rA
   1221                              }
   \                     ??PutValue_70:
   \   00000A7C   014084E2           ADD      R4,R4,#+1
   \                     ??PutValue_68:
   \   00000A80   00009BE5           LDR      R0,[R11, #+0]
   \   00000A84   04109BE5           LDR      R1,[R11, #+4]
   \   00000A88   001041E0           SUB      R1,R1,R0
   \   00000A8C   210154E1           CMP      R4,R1, LSR #+2
   \   00000A90   F4FFFF3A           BCC      ??PutValue_69
   1222                          }
   1223                          if (!PROBallastTank::AllObjVector.empty()) {
   \                     ??PutValue_67:
   \   00000A94   0A00A0E1           MOV      R0,R10
   \   00000A98   ........           _BLF     ??empty,??empty??rA
   \   00000A9C   000050E3           CMP      R0,#+0
   \   00000AA0   0C00001A           BNE      ??PutValue_71
   1224                              for (unsigned i = 0; i < PROBallastTank::AllObjVector.size(); i++) {
   \   00000AA4   0040A0E3           MOV      R4,#+0
   \   00000AA8   050000EA           B        ??PutValue_72
   1225                                  PROTank *TElement = (PROTank *)PROBallastTank::AllObjVector[i];
   \                     ??PutValue_73:
   \   00000AAC   040190E7           LDR      R0,[R0, +R4, LSL #+2]
   1226                                  if (TElement) TElement->CargoType->Update_Density();
   \   00000AB0   000050E3           CMP      R0,#+0
   \   00000AB4   0100000A           BEQ      ??PutValue_74
   \   00000AB8   040390E5           LDR      R0,[R0, #+772]
   \   00000ABC   ........           _BLF     ??Update_Density,??Update_Density??rA
   1227                              }
   \                     ??PutValue_74:
   \   00000AC0   014084E2           ADD      R4,R4,#+1
   \                     ??PutValue_72:
   \   00000AC4   00009AE5           LDR      R0,[R10, #+0]
   \   00000AC8   04109AE5           LDR      R1,[R10, #+4]
   \   00000ACC   001041E0           SUB      R1,R1,R0
   \   00000AD0   210154E1           CMP      R4,R1, LSR #+2
   \   00000AD4   F4FFFF3A           BCC      ??PutValue_73
   1228                          }
   1229                          if (!PROServiceTank::AllObjVector.empty()) {
   \                     ??PutValue_71:
   \   00000AD8   0700A0E1           MOV      R0,R7
   \   00000ADC   ........           _BLF     ??empty,??empty??rA
   \   00000AE0   000050E3           CMP      R0,#+0
   \   00000AE4   BA02001A           BNE      ??PutValue_35
   1230                              for (unsigned i = 0; i < PROServiceTank::AllObjVector.size(); i++) {
   \                     ??PutValue_75:
   \   00000AE8   000097E5           LDR      R0,[R7, #+0]
   \   00000AEC   041097E5           LDR      R1,[R7, #+4]
   \   00000AF0   001041E0           SUB      R1,R1,R0
   \   00000AF4   210156E1           CMP      R6,R1, LSR #+2
   \   00000AF8   B502002A           BCS      ??PutValue_35
   1231                                  PROTank *TElement = (PROTank *)PROServiceTank::AllObjVector[i];
   \   00000AFC   060190E7           LDR      R0,[R0, +R6, LSL #+2]
   1232                                  if (TElement) TElement->CargoType->Update_Density();
   \   00000B00   000050E3           CMP      R0,#+0
   \   00000B04   0100000A           BEQ      ??PutValue_76
   \   00000B08   040390E5           LDR      R0,[R0, #+772]
   \   00000B0C   ........           _BLF     ??Update_Density,??Update_Density??rA
   1233                              }
   \                     ??PutValue_76:
   \   00000B10   016086E2           ADD      R6,R6,#+1
   \   00000B14   F3FFFFEA           B        ??PutValue_75
   1234                          }
   1235                      }
   1236                  }
   1237                  break;
   1238              case SVT_BALLAST_DNS   :
   1239                  {
   1240                      float TVal = ConvertToSi(NewValue, ValUnitId = DENSITY_UNIT, Status, MIN_DENSITY, MAX_DENSITY, 0.0);
   \                     ??PutValue_24:
   \   00000B18   0910A0E3           MOV      R1,#+9
   \   00000B1C   04108DE5           STR      R1,[SP, #+4]
   \   00000B20   0910A0E1           MOV      R1,R9
   \   00000B24   0C008DE2           ADD      R0,SP,#+12
   \   00000B28   ........           _BLF     ??string,??string??rA
   \   00000B2C   0000A0E3           MOV      R0,#+0
   \   00000B30   0010A0E1           MOV      R1,R0
   \   00000B34   03002DE9           PUSH     {R0,R1}
   \   00000B38   F40A9FE5           LDR      R0,??PutValue_59+0x20  ;; 0xffffffff9999999a
   \   00000B3C   F41A9FE5           LDR      R1,??PutValue_59+0x24  ;; 0x40099999
   \   00000B40   03002DE9           PUSH     {R0,R1}
   \   00000B44   C01941E2           SUB      R1,R1,#+3145728
   \   00000B48   03002DE9           PUSH     {R0,R1}
   \   00000B4C   18208DE2           ADD      R2,SP,#+24
   \   00000B50   24008DE2           ADD      R0,SP,#+36
   \   00000B54   0800BDE8           POP      {R3}
   \   00000B58   0910A0E3           MOV      R1,#+9
   \   00000B5C   ........           _BLF     ??ConvertToSi,??ConvertToSi??rA
   \   00000B60   0040A0E1           MOV      R4,R0
   \   00000B64   0620A0E1           MOV      R2,R6
   \   00000B68   0110A0E3           MOV      R1,#+1
   \   00000B6C   20008DE2           ADD      R0,SP,#+32
   \   00000B70   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   1241                      if (Status == E_NO_ERR) {
   \   00000B74   14009DE5           LDR      R0,[SP, #+20]
   \   00000B78   14D08DE2           ADD      SP,SP,#+20
   \   00000B7C   000050E3           CMP      R0,#+0
   \   00000B80   9302001A           BNE      ??PutValue_35
   1242                          BallastDensity = TVal;
   \   00000B84   2C4085E5           STR      R4,[R5, #+44]
   1243                          if (!PROCargoTank::AllObjVector.empty()) {
   \   00000B88   0B00A0E1           MOV      R0,R11
   \   00000B8C   ........           _BLF     ??empty,??empty??rA
   \   00000B90   000050E3           CMP      R0,#+0
   \   00000B94   0C00001A           BNE      ??PutValue_77
   1244                              for (unsigned i = 0; i < PROCargoTank::AllObjVector.size(); i++) {
   \   00000B98   0040A0E3           MOV      R4,#+0
   \   00000B9C   050000EA           B        ??PutValue_78
   1245                                  PROTank *TElement = (PROTank *)PROCargoTank::AllObjVector[i];
   \                     ??PutValue_79:
   \   00000BA0   040190E7           LDR      R0,[R0, +R4, LSL #+2]
   1246                                  if (TElement) TElement->CargoType->Update_Density();
   \   00000BA4   000050E3           CMP      R0,#+0
   \   00000BA8   0100000A           BEQ      ??PutValue_80
   \   00000BAC   040390E5           LDR      R0,[R0, #+772]
   \   00000BB0   ........           _BLF     ??Update_Density,??Update_Density??rA
   1247                              }
   \                     ??PutValue_80:
   \   00000BB4   014084E2           ADD      R4,R4,#+1
   \                     ??PutValue_78:
   \   00000BB8   00009BE5           LDR      R0,[R11, #+0]
   \   00000BBC   04109BE5           LDR      R1,[R11, #+4]
   \   00000BC0   001041E0           SUB      R1,R1,R0
   \   00000BC4   210154E1           CMP      R4,R1, LSR #+2
   \   00000BC8   F4FFFF3A           BCC      ??PutValue_79
   1248                          }
   1249                          if (!PROBallastTank::AllObjVector.empty()) {
   \                     ??PutValue_77:
   \   00000BCC   0A00A0E1           MOV      R0,R10
   \   00000BD0   ........           _BLF     ??empty,??empty??rA
   \   00000BD4   000050E3           CMP      R0,#+0
   \   00000BD8   0D00001A           BNE      ??PutValue_81
   1250                              for (unsigned i = 0; i < PROBallastTank::AllObjVector.size(); i++) {
   \   00000BDC   0040A0E3           MOV      R4,#+0
   \   00000BE0   060000EA           B        ??PutValue_82
   1251                                  PROTank *TElement = (PROTank *)PROBallastTank::AllObjVector[i];
   \                     ??PutValue_83:
   \   00000BE4   040190E7           LDR      R0,[R0, +R4, LSL #+2]
   1252                                  if (TElement) TElement->CargoType->InputBasicCargoType(CTY_BALLAST);
   \   00000BE8   000050E3           CMP      R0,#+0
   \   00000BEC   0200000A           BEQ      ??PutValue_84
   \   00000BF0   040390E5           LDR      R0,[R0, #+772]
   \   00000BF4   0210A0E3           MOV      R1,#+2
   \   00000BF8   ........           _BLF     ??InputBasicCargoType,??InputBasicCargoType??rA
   1253                              }
   \                     ??PutValue_84:
   \   00000BFC   014084E2           ADD      R4,R4,#+1
   \                     ??PutValue_82:
   \   00000C00   00009AE5           LDR      R0,[R10, #+0]
   \   00000C04   04109AE5           LDR      R1,[R10, #+4]
   \   00000C08   001041E0           SUB      R1,R1,R0
   \   00000C0C   210154E1           CMP      R4,R1, LSR #+2
   \   00000C10   F3FFFF3A           BCC      ??PutValue_83
   1254                          }
   1255                          if (!PROServiceTank::AllObjVector.empty()) {
   \                     ??PutValue_81:
   \   00000C14   0700A0E1           MOV      R0,R7
   \   00000C18   ........           _BLF     ??empty,??empty??rA
   \   00000C1C   000050E3           CMP      R0,#+0
   \   00000C20   6B02001A           BNE      ??PutValue_35
   1256                              for (unsigned i = 0; i < PROServiceTank::AllObjVector.size(); i++) {
   \                     ??PutValue_85:
   \   00000C24   000097E5           LDR      R0,[R7, #+0]
   \   00000C28   041097E5           LDR      R1,[R7, #+4]
   \   00000C2C   001041E0           SUB      R1,R1,R0
   \   00000C30   210156E1           CMP      R6,R1, LSR #+2
   \   00000C34   6602002A           BCS      ??PutValue_35
   1257                                  PROTank *TElement = (PROTank *)PROServiceTank::AllObjVector[i];
   \   00000C38   060190E7           LDR      R0,[R0, +R6, LSL #+2]
   1258                                  if (TElement) TElement->CargoType->Update_Density();
   \   00000C3C   000050E3           CMP      R0,#+0
   \   00000C40   0100000A           BEQ      ??PutValue_86
   \   00000C44   040390E5           LDR      R0,[R0, #+772]
   \   00000C48   ........           _BLF     ??Update_Density,??Update_Density??rA
   1259                              }
   \                     ??PutValue_86:
   \   00000C4C   016086E2           ADD      R6,R6,#+1
   \   00000C50   F3FFFFEA           B        ??PutValue_85
   1260                          }
   1261                      }
   1262                  }
   1263                  break;
   1264              case SVT_FRESHWATER_DNS:
   1265                  {
   1266                      float TVal = ConvertToSi(NewValue, ValUnitId = DENSITY_UNIT, Status, MIN_DENSITY, MAX_DENSITY, 0.0);
   \                     ??PutValue_25:
   \   00000C54   0910A0E3           MOV      R1,#+9
   \   00000C58   04108DE5           STR      R1,[SP, #+4]
   \   00000C5C   0910A0E1           MOV      R1,R9
   \   00000C60   0C008DE2           ADD      R0,SP,#+12
   \   00000C64   ........           _BLF     ??string,??string??rA
   \   00000C68   0000A0E3           MOV      R0,#+0
   \   00000C6C   0010A0E1           MOV      R1,R0
   \   00000C70   03002DE9           PUSH     {R0,R1}
   \   00000C74   B8099FE5           LDR      R0,??PutValue_59+0x20  ;; 0xffffffff9999999a
   \   00000C78   B8199FE5           LDR      R1,??PutValue_59+0x24  ;; 0x40099999
   \   00000C7C   03002DE9           PUSH     {R0,R1}
   \   00000C80   C01941E2           SUB      R1,R1,#+3145728
   \   00000C84   03002DE9           PUSH     {R0,R1}
   \   00000C88   18208DE2           ADD      R2,SP,#+24
   \   00000C8C   24008DE2           ADD      R0,SP,#+36
   \   00000C90   0800BDE8           POP      {R3}
   \   00000C94   0910A0E3           MOV      R1,#+9
   \   00000C98   ........           _BLF     ??ConvertToSi,??ConvertToSi??rA
   \   00000C9C   0040A0E1           MOV      R4,R0
   \   00000CA0   0620A0E1           MOV      R2,R6
   \   00000CA4   0110A0E3           MOV      R1,#+1
   \   00000CA8   20008DE2           ADD      R0,SP,#+32
   \   00000CAC   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   1267                      if (Status == E_NO_ERR) {
   \   00000CB0   14009DE5           LDR      R0,[SP, #+20]
   \   00000CB4   14D08DE2           ADD      SP,SP,#+20
   \   00000CB8   000050E3           CMP      R0,#+0
   \   00000CBC   4402001A           BNE      ??PutValue_35
   1268                          FreshWaterDensity = TVal;
   \   00000CC0   344085E5           STR      R4,[R5, #+52]
   1269                          if (!PROCargoTank::AllObjVector.empty()) {
   \   00000CC4   0B00A0E1           MOV      R0,R11
   \   00000CC8   ........           _BLF     ??empty,??empty??rA
   \   00000CCC   000050E3           CMP      R0,#+0
   \   00000CD0   0C00001A           BNE      ??PutValue_87
   1270                              for (unsigned i = 0; i < PROCargoTank::AllObjVector.size(); i++) {
   \   00000CD4   0040A0E3           MOV      R4,#+0
   \   00000CD8   050000EA           B        ??PutValue_88
   1271                                  PROTank *TElement = (PROTank *)PROCargoTank::AllObjVector[i];
   \                     ??PutValue_89:
   \   00000CDC   040190E7           LDR      R0,[R0, +R4, LSL #+2]
   1272                                  if (TElement) TElement->CargoType->Update_Density();
   \   00000CE0   000050E3           CMP      R0,#+0
   \   00000CE4   0100000A           BEQ      ??PutValue_90
   \   00000CE8   040390E5           LDR      R0,[R0, #+772]
   \   00000CEC   ........           _BLF     ??Update_Density,??Update_Density??rA
   1273                              }
   \                     ??PutValue_90:
   \   00000CF0   014084E2           ADD      R4,R4,#+1
   \                     ??PutValue_88:
   \   00000CF4   00009BE5           LDR      R0,[R11, #+0]
   \   00000CF8   04109BE5           LDR      R1,[R11, #+4]
   \   00000CFC   001041E0           SUB      R1,R1,R0
   \   00000D00   210154E1           CMP      R4,R1, LSR #+2
   \   00000D04   F4FFFF3A           BCC      ??PutValue_89
   1274                          }
   1275                          if (!PROBallastTank::AllObjVector.empty()) {
   \                     ??PutValue_87:
   \   00000D08   0A00A0E1           MOV      R0,R10
   \   00000D0C   ........           _BLF     ??empty,??empty??rA
   \   00000D10   000050E3           CMP      R0,#+0
   \   00000D14   0C00001A           BNE      ??PutValue_91
   1276                              for (unsigned i = 0; i < PROBallastTank::AllObjVector.size(); i++) {
   \   00000D18   0040A0E3           MOV      R4,#+0
   \   00000D1C   050000EA           B        ??PutValue_92
   1277                                  PROTank *TElement = (PROTank *)PROBallastTank::AllObjVector[i];
   \                     ??PutValue_93:
   \   00000D20   040190E7           LDR      R0,[R0, +R4, LSL #+2]
   1278                                  if (TElement) TElement->CargoType->Update_Density();
   \   00000D24   000050E3           CMP      R0,#+0
   \   00000D28   0100000A           BEQ      ??PutValue_94
   \   00000D2C   040390E5           LDR      R0,[R0, #+772]
   \   00000D30   ........           _BLF     ??Update_Density,??Update_Density??rA
   1279                              }
   \                     ??PutValue_94:
   \   00000D34   014084E2           ADD      R4,R4,#+1
   \                     ??PutValue_92:
   \   00000D38   00009AE5           LDR      R0,[R10, #+0]
   \   00000D3C   04109AE5           LDR      R1,[R10, #+4]
   \   00000D40   001041E0           SUB      R1,R1,R0
   \   00000D44   210154E1           CMP      R4,R1, LSR #+2
   \   00000D48   F4FFFF3A           BCC      ??PutValue_93
   1280                          }
   1281                          if (!PROServiceTank::AllObjVector.empty()) {
   \                     ??PutValue_91:
   \   00000D4C   0700A0E1           MOV      R0,R7
   \   00000D50   ........           _BLF     ??empty,??empty??rA
   \   00000D54   000050E3           CMP      R0,#+0
   \   00000D58   0C00001A           BNE      ??PutValue_95
   1282                              for (unsigned i = 0; i < PROServiceTank::AllObjVector.size(); i++) {
   \   00000D5C   0040A0E3           MOV      R4,#+0
   \   00000D60   050000EA           B        ??PutValue_96
   1283                                  PROTank *TElement = (PROTank *)PROServiceTank::AllObjVector[i];
   \                     ??PutValue_97:
   \   00000D64   040190E7           LDR      R0,[R0, +R4, LSL #+2]
   1284                                  if (TElement) TElement->CargoType->Update_Density();
   \   00000D68   000050E3           CMP      R0,#+0
   \   00000D6C   0100000A           BEQ      ??PutValue_98
   \   00000D70   040390E5           LDR      R0,[R0, #+772]
   \   00000D74   ........           _BLF     ??Update_Density,??Update_Density??rA
   1285                              }
   \                     ??PutValue_98:
   \   00000D78   014084E2           ADD      R4,R4,#+1
   \                     ??PutValue_96:
   \   00000D7C   000097E5           LDR      R0,[R7, #+0]
   \   00000D80   041097E5           LDR      R1,[R7, #+4]
   \   00000D84   001041E0           SUB      R1,R1,R0
   \   00000D88   210154E1           CMP      R4,R1, LSR #+2
   \   00000D8C   F4FFFF3A           BCC      ??PutValue_97
   1286                          }
   1287                          if (!PROServiceTank::AllFreshWaterVector.empty()) {
   \                     ??PutValue_95:
   \   00000D90   A4489FE5           LDR      R4,??PutValue_59+0x28  ;; ??AllFreshWaterVector
   \   00000D94   0400A0E1           MOV      R0,R4
   \   00000D98   ........           _BLF     ??empty,??empty??rA
   \   00000D9C   000050E3           CMP      R0,#+0
   \   00000DA0   0B02001A           BNE      ??PutValue_35
   1288                              for (unsigned i = 0; i < PROServiceTank::AllFreshWaterVector.size(); i++) {
   \                     ??PutValue_99:
   \   00000DA4   000094E5           LDR      R0,[R4, #+0]
   \   00000DA8   041094E5           LDR      R1,[R4, #+4]
   \   00000DAC   001041E0           SUB      R1,R1,R0
   \   00000DB0   210156E1           CMP      R6,R1, LSR #+2
   \   00000DB4   0602002A           BCS      ??PutValue_35
   1289                                  PROTank *TElement = (PROTank *)PROServiceTank::AllFreshWaterVector[i];
   \   00000DB8   060190E7           LDR      R0,[R0, +R6, LSL #+2]
   1290                                  if (TElement) TElement->CargoType->InputBasicCargoType(CTY_FW);
   \   00000DBC   000050E3           CMP      R0,#+0
   \   00000DC0   0200000A           BEQ      ??PutValue_100
   \   00000DC4   040390E5           LDR      R0,[R0, #+772]
   \   00000DC8   0610A0E3           MOV      R1,#+6
   \   00000DCC   ........           _BLF     ??InputBasicCargoType,??InputBasicCargoType??rA
   1291                              }
   \                     ??PutValue_100:
   \   00000DD0   016086E2           ADD      R6,R6,#+1
   \   00000DD4   F2FFFFEA           B        ??PutValue_99
   1292                          }
   1293                      }
   1294                  }
   1295                  break;
   1296              case SVT_HEAVY_FUEL_DNS:
   1297                  {
   1298                      float TVal = ConvertToSi(NewValue, ValUnitId = DENSITY_UNIT, Status, MIN_DENSITY, MAX_DENSITY, 0.0);
   \                     ??PutValue_26:
   \   00000DD8   0910A0E3           MOV      R1,#+9
   \   00000DDC   04108DE5           STR      R1,[SP, #+4]
   \   00000DE0   0910A0E1           MOV      R1,R9
   \   00000DE4   0C008DE2           ADD      R0,SP,#+12
   \   00000DE8   ........           _BLF     ??string,??string??rA
   \   00000DEC   0000A0E3           MOV      R0,#+0
   \   00000DF0   0010A0E1           MOV      R1,R0
   \   00000DF4   03002DE9           PUSH     {R0,R1}
   \   00000DF8   34089FE5           LDR      R0,??PutValue_59+0x20  ;; 0xffffffff9999999a
   \   00000DFC   34189FE5           LDR      R1,??PutValue_59+0x24  ;; 0x40099999
   \   00000E00   03002DE9           PUSH     {R0,R1}
   \   00000E04   C01941E2           SUB      R1,R1,#+3145728
   \   00000E08   03002DE9           PUSH     {R0,R1}
   \   00000E0C   18208DE2           ADD      R2,SP,#+24
   \   00000E10   24008DE2           ADD      R0,SP,#+36
   \   00000E14   0800BDE8           POP      {R3}
   \   00000E18   0910A0E3           MOV      R1,#+9
   \   00000E1C   ........           _BLF     ??ConvertToSi,??ConvertToSi??rA
   \   00000E20   0040A0E1           MOV      R4,R0
   \   00000E24   0620A0E1           MOV      R2,R6
   \   00000E28   0110A0E3           MOV      R1,#+1
   \   00000E2C   20008DE2           ADD      R0,SP,#+32
   \   00000E30   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   1299                      if (Status == E_NO_ERR) {
   \   00000E34   14009DE5           LDR      R0,[SP, #+20]
   \   00000E38   14D08DE2           ADD      SP,SP,#+20
   \   00000E3C   000050E3           CMP      R0,#+0
   \   00000E40   E301001A           BNE      ??PutValue_35
   1300                          HeavyFuelDensity = TVal;
   \   00000E44   384085E5           STR      R4,[R5, #+56]
   1301                          if (!PROCargoTank::AllObjVector.empty()) {
   \   00000E48   0B00A0E1           MOV      R0,R11
   \   00000E4C   ........           _BLF     ??empty,??empty??rA
   \   00000E50   000050E3           CMP      R0,#+0
   \   00000E54   0C00001A           BNE      ??PutValue_101
   1302                              for (unsigned i = 0; i < PROCargoTank::AllObjVector.size(); i++) {
   \   00000E58   0040A0E3           MOV      R4,#+0
   \   00000E5C   050000EA           B        ??PutValue_102
   1303                                  PROTank *TElement = (PROTank *)PROCargoTank::AllObjVector[i];
   \                     ??PutValue_103:
   \   00000E60   040190E7           LDR      R0,[R0, +R4, LSL #+2]
   1304                                  if (TElement) TElement->CargoType->Update_Density();
   \   00000E64   000050E3           CMP      R0,#+0
   \   00000E68   0100000A           BEQ      ??PutValue_104
   \   00000E6C   040390E5           LDR      R0,[R0, #+772]
   \   00000E70   ........           _BLF     ??Update_Density,??Update_Density??rA
   1305                              }
   \                     ??PutValue_104:
   \   00000E74   014084E2           ADD      R4,R4,#+1
   \                     ??PutValue_102:
   \   00000E78   00009BE5           LDR      R0,[R11, #+0]
   \   00000E7C   04109BE5           LDR      R1,[R11, #+4]
   \   00000E80   001041E0           SUB      R1,R1,R0
   \   00000E84   210154E1           CMP      R4,R1, LSR #+2
   \   00000E88   F4FFFF3A           BCC      ??PutValue_103
   1306                          }
   1307                          if (!PROBallastTank::AllObjVector.empty()) {
   \                     ??PutValue_101:
   \   00000E8C   0A00A0E1           MOV      R0,R10
   \   00000E90   ........           _BLF     ??empty,??empty??rA
   \   00000E94   000050E3           CMP      R0,#+0
   \   00000E98   0C00001A           BNE      ??PutValue_105
   1308                              for (unsigned i = 0; i < PROBallastTank::AllObjVector.size(); i++) {
   \   00000E9C   0040A0E3           MOV      R4,#+0
   \   00000EA0   050000EA           B        ??PutValue_106
   1309                                  PROTank *TElement = (PROTank *)PROBallastTank::AllObjVector[i];
   \                     ??PutValue_107:
   \   00000EA4   040190E7           LDR      R0,[R0, +R4, LSL #+2]
   1310                                  if (TElement) TElement->CargoType->Update_Density();
   \   00000EA8   000050E3           CMP      R0,#+0
   \   00000EAC   0100000A           BEQ      ??PutValue_108
   \   00000EB0   040390E5           LDR      R0,[R0, #+772]
   \   00000EB4   ........           _BLF     ??Update_Density,??Update_Density??rA
   1311                              }
   \                     ??PutValue_108:
   \   00000EB8   014084E2           ADD      R4,R4,#+1
   \                     ??PutValue_106:
   \   00000EBC   00009AE5           LDR      R0,[R10, #+0]
   \   00000EC0   04109AE5           LDR      R1,[R10, #+4]
   \   00000EC4   001041E0           SUB      R1,R1,R0
   \   00000EC8   210154E1           CMP      R4,R1, LSR #+2
   \   00000ECC   F4FFFF3A           BCC      ??PutValue_107
   1312                          }
   1313                          if (!PROServiceTank::AllObjVector.empty()) {
   \                     ??PutValue_105:
   \   00000ED0   0700A0E1           MOV      R0,R7
   \   00000ED4   ........           _BLF     ??empty,??empty??rA
   \   00000ED8   000050E3           CMP      R0,#+0
   \   00000EDC   0C00001A           BNE      ??PutValue_109
   1314                              for (unsigned i = 0; i < PROServiceTank::AllObjVector.size(); i++) {
   \   00000EE0   0040A0E3           MOV      R4,#+0
   \   00000EE4   050000EA           B        ??PutValue_110
   1315                                  PROTank *TElement = (PROTank *)PROServiceTank::AllObjVector[i];
   \                     ??PutValue_111:
   \   00000EE8   040190E7           LDR      R0,[R0, +R4, LSL #+2]
   1316                                  if (TElement) TElement->CargoType->Update_Density();
   \   00000EEC   000050E3           CMP      R0,#+0
   \   00000EF0   0100000A           BEQ      ??PutValue_112
   \   00000EF4   040390E5           LDR      R0,[R0, #+772]
   \   00000EF8   ........           _BLF     ??Update_Density,??Update_Density??rA
   1317                              }
   \                     ??PutValue_112:
   \   00000EFC   014084E2           ADD      R4,R4,#+1
   \                     ??PutValue_110:
   \   00000F00   000097E5           LDR      R0,[R7, #+0]
   \   00000F04   041097E5           LDR      R1,[R7, #+4]
   \   00000F08   001041E0           SUB      R1,R1,R0
   \   00000F0C   210154E1           CMP      R4,R1, LSR #+2
   \   00000F10   F4FFFF3A           BCC      ??PutValue_111
   1318                          }
   1319                          if (!PROServiceTank::AllHeavyFuelOilVector.empty()) {
   \                     ??PutValue_109:
   \   00000F14   ........           LDR      R4,??DataTable43  ;; ??AllHeavyFuelOilVector
   \   00000F18   0400A0E1           MOV      R0,R4
   \   00000F1C   ........           _BLF     ??empty,??empty??rA
   \   00000F20   000050E3           CMP      R0,#+0
   \   00000F24   AA01001A           BNE      ??PutValue_35
   1320                              for (unsigned i = 0; i < PROServiceTank::AllHeavyFuelOilVector.size(); i++) {
   \                     ??PutValue_113:
   \   00000F28   000094E5           LDR      R0,[R4, #+0]
   \   00000F2C   041094E5           LDR      R1,[R4, #+4]
   \   00000F30   001041E0           SUB      R1,R1,R0
   \   00000F34   210156E1           CMP      R6,R1, LSR #+2
   \   00000F38   A501002A           BCS      ??PutValue_35
   1321                                  PROTank *TElement = (PROTank *)PROServiceTank::AllHeavyFuelOilVector[i];
   \   00000F3C   060190E7           LDR      R0,[R0, +R6, LSL #+2]
   1322                                  if (TElement) TElement->CargoType->InputBasicCargoType(CTY_HFO);
   \   00000F40   000050E3           CMP      R0,#+0
   \   00000F44   0200000A           BEQ      ??PutValue_114
   \   00000F48   040390E5           LDR      R0,[R0, #+772]
   \   00000F4C   0310A0E3           MOV      R1,#+3
   \   00000F50   ........           _BLF     ??InputBasicCargoType,??InputBasicCargoType??rA
   1323                              }
   \                     ??PutValue_114:
   \   00000F54   016086E2           ADD      R6,R6,#+1
   \   00000F58   F2FFFFEA           B        ??PutValue_113
   \                     ??PutValue_9:
   \   00000F5C   ........           DC32     ??AllObjVector_2
   \   00000F60   ........           DC32     ??AllObjVector_1
   \   00000F64   ........           DC32     ??AllObjVector
   \   00000F68   ........           DC32     ??TXUSystemData
   \   00000F6C   00805640           DC32     0x40568000
   \   00000F70   ........           DC32     ??PROInclinPtr
   \   00000F74   ........           DC32     ??LengthBetweenPP
   \   00000F78   ........           DC32     ??LengthBetweenMarks
   \   00000F7C   ........           DC32     ??Width
   1324                          }
   1325                      }
   1326                  }
   1327                  break;
   1328              case SVT_DIESEL_DNS    :
   1329                  {
   1330                      float TVal = ConvertToSi(NewValue, ValUnitId = DENSITY_UNIT, Status, MIN_DENSITY, MAX_DENSITY, 0.0);
   \                     ??PutValue_27:
   \   00000F80   0910A0E3           MOV      R1,#+9
   \   00000F84   04108DE5           STR      R1,[SP, #+4]
   \   00000F88   0910A0E1           MOV      R1,R9
   \   00000F8C   0C008DE2           ADD      R0,SP,#+12
   \   00000F90   ........           _BLF     ??string,??string??rA
   \   00000F94   0000A0E3           MOV      R0,#+0
   \   00000F98   0010A0E1           MOV      R1,R0
   \   00000F9C   03002DE9           PUSH     {R0,R1}
   \   00000FA0   8C069FE5           LDR      R0,??PutValue_59+0x20  ;; 0xffffffff9999999a
   \   00000FA4   8C169FE5           LDR      R1,??PutValue_59+0x24  ;; 0x40099999
   \   00000FA8   03002DE9           PUSH     {R0,R1}
   \   00000FAC   C01941E2           SUB      R1,R1,#+3145728
   \   00000FB0   03002DE9           PUSH     {R0,R1}
   \   00000FB4   18208DE2           ADD      R2,SP,#+24
   \   00000FB8   24008DE2           ADD      R0,SP,#+36
   \   00000FBC   0800BDE8           POP      {R3}
   \   00000FC0   0910A0E3           MOV      R1,#+9
   \   00000FC4   ........           _BLF     ??ConvertToSi,??ConvertToSi??rA
   \   00000FC8   0040A0E1           MOV      R4,R0
   \   00000FCC   0620A0E1           MOV      R2,R6
   \   00000FD0   0110A0E3           MOV      R1,#+1
   \   00000FD4   20008DE2           ADD      R0,SP,#+32
   \   00000FD8   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   1331                      if (Status == E_NO_ERR) {
   \   00000FDC   14009DE5           LDR      R0,[SP, #+20]
   \   00000FE0   14D08DE2           ADD      SP,SP,#+20
   \   00000FE4   000050E3           CMP      R0,#+0
   \   00000FE8   7901001A           BNE      ??PutValue_35
   1332                          DieselDensity = TVal;
   \   00000FEC   3C4085E5           STR      R4,[R5, #+60]
   1333                          if (!PROCargoTank::AllObjVector.empty()) {
   \   00000FF0   0B00A0E1           MOV      R0,R11
   \   00000FF4   ........           _BLF     ??empty,??empty??rA
   \   00000FF8   000050E3           CMP      R0,#+0
   \   00000FFC   0C00001A           BNE      ??PutValue_115
   1334                              for (unsigned i = 0; i < PROCargoTank::AllObjVector.size(); i++) {
   \   00001000   0040A0E3           MOV      R4,#+0
   \   00001004   050000EA           B        ??PutValue_116
   1335                                  PROTank *TElement = (PROTank *)PROCargoTank::AllObjVector[i];
   \                     ??PutValue_117:
   \   00001008   040190E7           LDR      R0,[R0, +R4, LSL #+2]
   1336                                  if (TElement) TElement->CargoType->Update_Density();
   \   0000100C   000050E3           CMP      R0,#+0
   \   00001010   0100000A           BEQ      ??PutValue_118
   \   00001014   040390E5           LDR      R0,[R0, #+772]
   \   00001018   ........           _BLF     ??Update_Density,??Update_Density??rA
   1337                              }
   \                     ??PutValue_118:
   \   0000101C   014084E2           ADD      R4,R4,#+1
   \                     ??PutValue_116:
   \   00001020   00009BE5           LDR      R0,[R11, #+0]
   \   00001024   04109BE5           LDR      R1,[R11, #+4]
   \   00001028   001041E0           SUB      R1,R1,R0
   \   0000102C   210154E1           CMP      R4,R1, LSR #+2
   \   00001030   F4FFFF3A           BCC      ??PutValue_117
   1338                          }
   1339                          if (!PROBallastTank::AllObjVector.empty()) {
   \                     ??PutValue_115:
   \   00001034   0A00A0E1           MOV      R0,R10
   \   00001038   ........           _BLF     ??empty,??empty??rA
   \   0000103C   000050E3           CMP      R0,#+0
   \   00001040   0C00001A           BNE      ??PutValue_119
   1340                              for (unsigned i = 0; i < PROBallastTank::AllObjVector.size(); i++) {
   \   00001044   0040A0E3           MOV      R4,#+0
   \   00001048   050000EA           B        ??PutValue_120
   1341                                  PROTank *TElement = (PROTank *)PROBallastTank::AllObjVector[i];
   \                     ??PutValue_121:
   \   0000104C   040190E7           LDR      R0,[R0, +R4, LSL #+2]
   1342                                  if (TElement) TElement->CargoType->Update_Density();
   \   00001050   000050E3           CMP      R0,#+0
   \   00001054   0100000A           BEQ      ??PutValue_122
   \   00001058   040390E5           LDR      R0,[R0, #+772]
   \   0000105C   ........           _BLF     ??Update_Density,??Update_Density??rA
   1343                              }
   \                     ??PutValue_122:
   \   00001060   014084E2           ADD      R4,R4,#+1
   \                     ??PutValue_120:
   \   00001064   00009AE5           LDR      R0,[R10, #+0]
   \   00001068   04109AE5           LDR      R1,[R10, #+4]
   \   0000106C   001041E0           SUB      R1,R1,R0
   \   00001070   210154E1           CMP      R4,R1, LSR #+2
   \   00001074   F4FFFF3A           BCC      ??PutValue_121
   1344                          }
   1345                          if (!PROServiceTank::AllObjVector.empty()) {
   \                     ??PutValue_119:
   \   00001078   0700A0E1           MOV      R0,R7
   \   0000107C   ........           _BLF     ??empty,??empty??rA
   \   00001080   000050E3           CMP      R0,#+0
   \   00001084   0C00001A           BNE      ??PutValue_123
   1346                              for (unsigned i = 0; i < PROServiceTank::AllObjVector.size(); i++) {
   \   00001088   0040A0E3           MOV      R4,#+0
   \   0000108C   050000EA           B        ??PutValue_124
   1347                                  PROTank *TElement = (PROTank *)PROServiceTank::AllObjVector[i];
   \                     ??PutValue_125:
   \   00001090   040190E7           LDR      R0,[R0, +R4, LSL #+2]
   1348                                  if (TElement) TElement->CargoType->Update_Density();
   \   00001094   000050E3           CMP      R0,#+0
   \   00001098   0100000A           BEQ      ??PutValue_126
   \   0000109C   040390E5           LDR      R0,[R0, #+772]
   \   000010A0   ........           _BLF     ??Update_Density,??Update_Density??rA
   1349                              }
   \                     ??PutValue_126:
   \   000010A4   014084E2           ADD      R4,R4,#+1
   \                     ??PutValue_124:
   \   000010A8   000097E5           LDR      R0,[R7, #+0]
   \   000010AC   041097E5           LDR      R1,[R7, #+4]
   \   000010B0   001041E0           SUB      R1,R1,R0
   \   000010B4   210154E1           CMP      R4,R1, LSR #+2
   \   000010B8   F4FFFF3A           BCC      ??PutValue_125
   1350                          }
   1351                          if (!PROServiceTank::AllDieselVector.empty()) {
   \                     ??PutValue_123:
   \   000010BC   ........           LDR      R4,??DataTable44  ;; ??AllDieselVector
   \   000010C0   0400A0E1           MOV      R0,R4
   \   000010C4   ........           _BLF     ??empty,??empty??rA
   \   000010C8   000050E3           CMP      R0,#+0
   \   000010CC   4001001A           BNE      ??PutValue_35
   1352                              for (unsigned i = 0; i < PROServiceTank::AllDieselVector.size(); i++) {
   \                     ??PutValue_127:
   \   000010D0   000094E5           LDR      R0,[R4, #+0]
   \   000010D4   041094E5           LDR      R1,[R4, #+4]
   \   000010D8   001041E0           SUB      R1,R1,R0
   \   000010DC   210156E1           CMP      R6,R1, LSR #+2
   \   000010E0   3B01002A           BCS      ??PutValue_35
   1353                                  PROTank *TElement = (PROTank *)PROServiceTank::AllDieselVector[i];
   \   000010E4   060190E7           LDR      R0,[R0, +R6, LSL #+2]
   1354                                  if (TElement) TElement->CargoType->InputBasicCargoType(CTY_DO);
   \   000010E8   000050E3           CMP      R0,#+0
   \   000010EC   0200000A           BEQ      ??PutValue_128
   \   000010F0   040390E5           LDR      R0,[R0, #+772]
   \   000010F4   0410A0E3           MOV      R1,#+4
   \   000010F8   ........           _BLF     ??InputBasicCargoType,??InputBasicCargoType??rA
   1355                              }
   \                     ??PutValue_128:
   \   000010FC   016086E2           ADD      R6,R6,#+1
   \   00001100   F2FFFFEA           B        ??PutValue_127
   1356                          }
   1357                      }
   1358                  }
   1359                  break;
   1360              case SVT_LUBRICANTS_DNS:
   1361                  {
   1362                      float TVal = ConvertToSi(NewValue, ValUnitId = DENSITY_UNIT, Status, MIN_DENSITY, MAX_DENSITY, 0.0);
   \                     ??PutValue_28:
   \   00001104   0910A0E3           MOV      R1,#+9
   \   00001108   04108DE5           STR      R1,[SP, #+4]
   \   0000110C   0910A0E1           MOV      R1,R9
   \   00001110   0C008DE2           ADD      R0,SP,#+12
   \   00001114   ........           _BLF     ??string,??string??rA
   \   00001118   0000A0E3           MOV      R0,#+0
   \   0000111C   0010A0E1           MOV      R1,R0
   \   00001120   03002DE9           PUSH     {R0,R1}
   \   00001124   08059FE5           LDR      R0,??PutValue_59+0x20  ;; 0xffffffff9999999a
   \   00001128   08159FE5           LDR      R1,??PutValue_59+0x24  ;; 0x40099999
   \   0000112C   03002DE9           PUSH     {R0,R1}
   \   00001130   C01941E2           SUB      R1,R1,#+3145728
   \   00001134   03002DE9           PUSH     {R0,R1}
   \   00001138   18208DE2           ADD      R2,SP,#+24
   \   0000113C   24008DE2           ADD      R0,SP,#+36
   \   00001140   0800BDE8           POP      {R3}
   \   00001144   0910A0E3           MOV      R1,#+9
   \   00001148   ........           _BLF     ??ConvertToSi,??ConvertToSi??rA
   \   0000114C   0040A0E1           MOV      R4,R0
   \   00001150   0620A0E1           MOV      R2,R6
   \   00001154   0110A0E3           MOV      R1,#+1
   \   00001158   20008DE2           ADD      R0,SP,#+32
   \   0000115C   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   1363                      if (Status == E_NO_ERR) {
   \   00001160   14009DE5           LDR      R0,[SP, #+20]
   \   00001164   14D08DE2           ADD      SP,SP,#+20
   \   00001168   000050E3           CMP      R0,#+0
   \   0000116C   1801001A           BNE      ??PutValue_35
   1364                          LubricantsDensity = TVal;
   \   00001170   404085E5           STR      R4,[R5, #+64]
   1365                          if (!PROCargoTank::AllObjVector.empty()) {
   \   00001174   0B00A0E1           MOV      R0,R11
   \   00001178   ........           _BLF     ??empty,??empty??rA
   \   0000117C   000050E3           CMP      R0,#+0
   \   00001180   0C00001A           BNE      ??PutValue_129
   1366                              for (unsigned i = 0; i < PROCargoTank::AllObjVector.size(); i++) {
   \   00001184   0040A0E3           MOV      R4,#+0
   \   00001188   050000EA           B        ??PutValue_130
   1367                                  PROTank *TElement = (PROTank *)PROCargoTank::AllObjVector[i];
   \                     ??PutValue_131:
   \   0000118C   040190E7           LDR      R0,[R0, +R4, LSL #+2]
   1368                                  if (TElement) TElement->CargoType->Update_Density();
   \   00001190   000050E3           CMP      R0,#+0
   \   00001194   0100000A           BEQ      ??PutValue_132
   \   00001198   040390E5           LDR      R0,[R0, #+772]
   \   0000119C   ........           _BLF     ??Update_Density,??Update_Density??rA
   1369                              }
   \                     ??PutValue_132:
   \   000011A0   014084E2           ADD      R4,R4,#+1
   \                     ??PutValue_130:
   \   000011A4   00009BE5           LDR      R0,[R11, #+0]
   \   000011A8   04109BE5           LDR      R1,[R11, #+4]
   \   000011AC   001041E0           SUB      R1,R1,R0
   \   000011B0   210154E1           CMP      R4,R1, LSR #+2
   \   000011B4   F4FFFF3A           BCC      ??PutValue_131
   1370                          }
   1371                          if (!PROBallastTank::AllObjVector.empty()) {
   \                     ??PutValue_129:
   \   000011B8   0A00A0E1           MOV      R0,R10
   \   000011BC   ........           _BLF     ??empty,??empty??rA
   \   000011C0   000050E3           CMP      R0,#+0
   \   000011C4   0C00001A           BNE      ??PutValue_133
   1372                              for (unsigned i = 0; i < PROBallastTank::AllObjVector.size(); i++) {
   \   000011C8   0040A0E3           MOV      R4,#+0
   \   000011CC   050000EA           B        ??PutValue_134
   1373                                  PROTank *TElement = (PROTank *)PROBallastTank::AllObjVector[i];
   \                     ??PutValue_135:
   \   000011D0   040190E7           LDR      R0,[R0, +R4, LSL #+2]
   1374                                  if (TElement) TElement->CargoType->Update_Density();
   \   000011D4   000050E3           CMP      R0,#+0
   \   000011D8   0100000A           BEQ      ??PutValue_136
   \   000011DC   040390E5           LDR      R0,[R0, #+772]
   \   000011E0   ........           _BLF     ??Update_Density,??Update_Density??rA
   1375                              }
   \                     ??PutValue_136:
   \   000011E4   014084E2           ADD      R4,R4,#+1
   \                     ??PutValue_134:
   \   000011E8   00009AE5           LDR      R0,[R10, #+0]
   \   000011EC   04109AE5           LDR      R1,[R10, #+4]
   \   000011F0   001041E0           SUB      R1,R1,R0
   \   000011F4   210154E1           CMP      R4,R1, LSR #+2
   \   000011F8   F4FFFF3A           BCC      ??PutValue_135
   1376                          }
   1377                          if (!PROServiceTank::AllObjVector.empty()) {
   \                     ??PutValue_133:
   \   000011FC   0700A0E1           MOV      R0,R7
   \   00001200   ........           _BLF     ??empty,??empty??rA
   \   00001204   000050E3           CMP      R0,#+0
   \   00001208   0C00001A           BNE      ??PutValue_137
   1378                              for (unsigned i = 0; i < PROServiceTank::AllObjVector.size(); i++) {
   \   0000120C   0040A0E3           MOV      R4,#+0
   \   00001210   050000EA           B        ??PutValue_138
   1379                                  PROTank *TElement = (PROTank *)PROServiceTank::AllObjVector[i];
   \                     ??PutValue_139:
   \   00001214   040190E7           LDR      R0,[R0, +R4, LSL #+2]
   1380                                  if (TElement) TElement->CargoType->Update_Density();
   \   00001218   000050E3           CMP      R0,#+0
   \   0000121C   0100000A           BEQ      ??PutValue_140
   \   00001220   040390E5           LDR      R0,[R0, #+772]
   \   00001224   ........           _BLF     ??Update_Density,??Update_Density??rA
   1381                              }
   \                     ??PutValue_140:
   \   00001228   014084E2           ADD      R4,R4,#+1
   \                     ??PutValue_138:
   \   0000122C   000097E5           LDR      R0,[R7, #+0]
   \   00001230   041097E5           LDR      R1,[R7, #+4]
   \   00001234   001041E0           SUB      R1,R1,R0
   \   00001238   210154E1           CMP      R4,R1, LSR #+2
   \   0000123C   F4FFFF3A           BCC      ??PutValue_139
   1382                          }
   1383                          if (!PROServiceTank::AllLubricantsVector.empty()) {
   \                     ??PutValue_137:
   \   00001240   ........           LDR      R4,??DataTable45  ;; ??AllLubricantsVector
   \   00001244   0400A0E1           MOV      R0,R4
   \   00001248   ........           _BLF     ??empty,??empty??rA
   \   0000124C   000050E3           CMP      R0,#+0
   \   00001250   DF00001A           BNE      ??PutValue_35
   1384                              for (unsigned i = 0; i < PROServiceTank::AllLubricantsVector.size(); i++) {
   \                     ??PutValue_141:
   \   00001254   000094E5           LDR      R0,[R4, #+0]
   \   00001258   041094E5           LDR      R1,[R4, #+4]
   \   0000125C   001041E0           SUB      R1,R1,R0
   \   00001260   210156E1           CMP      R6,R1, LSR #+2
   \   00001264   DA00002A           BCS      ??PutValue_35
   1385                                  PROTank *TElement = (PROTank *)PROServiceTank::AllLubricantsVector[i];
   \   00001268   060190E7           LDR      R0,[R0, +R6, LSL #+2]
   1386                                  if (TElement) TElement->CargoType->InputBasicCargoType(CTY_LUB);
   \   0000126C   000050E3           CMP      R0,#+0
   \   00001270   0200000A           BEQ      ??PutValue_142
   \   00001274   040390E5           LDR      R0,[R0, #+772]
   \   00001278   0510A0E3           MOV      R1,#+5
   \   0000127C   ........           _BLF     ??InputBasicCargoType,??InputBasicCargoType??rA
   1387                              }
   \                     ??PutValue_142:
   \   00001280   016086E2           ADD      R6,R6,#+1
   \   00001284   F2FFFFEA           B        ??PutValue_141
   1388                          }
   1389                      }
   1390                  }
   1391                  break;
   1392              case SVT_LOG_TIME            :
   1393                  {
   1394                      float LogDelay;
   1395                      ConvertToFloat(&LogDelay, NewValue);
   \                     ??PutValue_30:
   \   00001288   0910A0E1           MOV      R1,R9
   \   0000128C   0C008DE2           ADD      R0,SP,#+12
   \   00001290   ........           _BLF     ??string,??string??rA
   \   00001294   0C108DE2           ADD      R1,SP,#+12
   \   00001298   08008DE2           ADD      R0,SP,#+8
   \   0000129C   ........           _BLF     ??ConvertToFloat,??ConvertToFloat??rA
   \   000012A0   0020A0E3           MOV      R2,#+0
   \   000012A4   0410A0E1           MOV      R1,R4
   \   000012A8   0C008DE2           ADD      R0,SP,#+12
   \   000012AC   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   1396                      if (LogDelay < LOG_MIN_TIME) {
   \   000012B0   08009DE5           LDR      R0,[SP, #+8]
   \   000012B4   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   000012B8   80239FE5           LDR      R2,??PutValue_59+0x2C  ;; 0x55555555
   \   000012BC   80339FE5           LDR      R3,??PutValue_59+0x30  ;; 0x3fb55555
   \   000012C0   0060A0E1           MOV      R6,R0
   \   000012C4   0170A0E1           MOV      R7,R1
   \   000012C8   ........           _BLF     __dLess,??__dLess??rA
   \   000012CC   000050E3           CMP      R0,#+0
   \   000012D0   0200000A           BEQ      ??PutValue_143
   1397                          Status = E_LOW;
   \   000012D4   0710A0E3           MOV      R1,#+7
   \                     ??PutValue_144:
   \   000012D8   00108DE5           STR      R1,[SP, #+0]
   \   000012DC   0E0000EA           B        ??PutValue_145
   1398                      } else if (LogDelay > LOG_MAX_TIME) {
   \                     ??PutValue_143:
   \   000012E0   0600A0E1           MOV      R0,R6
   \   000012E4   0710A0E1           MOV      R1,R7
   \   000012E8   0120A0E3           MOV      R2,#+1
   \   000012EC   4034A0E3           MOV      R3,#+1073741824
   \   000012F0   E03983E3           ORR      R3,R3,#0x380000
   \   000012F4   ........           _BLF     __dGreaterEqual,??__dGreaterEqual??rA
   \   000012F8   000050E3           CMP      R0,#+0
   1399                          Status = E_HIGH;
   \   000012FC   0610A013           MOVNE    R1,#+6
   \   00001300   F4FFFF1A           BNE      ??PutValue_144
   1400                      } else {
   1401                          LogTime = (int)(LogDelay * (MSEC_TO_SEC * SEC_TO_HOURS));
   \   00001304   ........           LDR      R1,??DataTable46  ;; 0x414b7740
   \   00001308   0620A0E1           MOV      R2,R6
   \   0000130C   0730A0E1           MOV      R3,R7
   \   00001310   ........           _BLF     __dMul,??__dMul??rA
   \   00001314   ........           _BLF     __doubleToLong,??__doubleToLong??rA
   \   00001318   540085E5           STR      R0,[R5, #+84]
   1402                      }
   1403          #ifdef S2TXU
   1404                      if (Master) {
   \                     ??PutValue_145:
   \   0000131C   ........           LDR      R0,??DataTable47  ;; Master
   \   00001320   0000D0E5           LDRB     R0,[R0, #+0]
   \   00001324   000050E3           CMP      R0,#+0
   \   00001328   A900000A           BEQ      ??PutValue_35
   1405                          if (OS_IsTask(&LogTaskHandle)) {
   \   0000132C   14439FE5           LDR      R4,??PutValue_59+0x34  ;; LogTaskHandle
   \   00001330   0400A0E1           MOV      R0,R4
   \   00001334   ........           _BLF     OS_IsTask,??OS_IsTask??rA
   \   00001338   000050E3           CMP      R0,#+0
   \   0000133C   A400000A           BEQ      ??PutValue_35
   1406                              OS_WakeTask(&LogTaskHandle);
   \   00001340   0400A0E1           MOV      R0,R4
   \   00001344   ........           _BLF     OS_WakeTask,??OS_WakeTask??rA
   \   00001348   A10000EA           B        ??PutValue_35
   1407                          }
   1408                      }
   1409          #endif
   1410                  }
   1411                  break;
   1412              case SVT_LOG_TO_FILE         :
   1413              case SVT_LOG_ALARMS          :
   1414              case SVT_LOG_BALLAST_EXCH    :
   1415              case SVT_LOG_CARGO           :
   1416              case SVT_LOG_SERVICE         :
   1417              case SVT_LOG_TEMPERATURE     :
   1418              case SVT_LOG_TANK_PRESSURE   :
   1419              case SVT_PRINTER_ON_TXU      :
   1420                  {
   1421                      int  NewStatus = FindConfigKey(NewValue);
   \                     ??PutValue_29:
   \   0000134C   0910A0E1           MOV      R1,R9
   \   00001350   28008DE2           ADD      R0,SP,#+40
   \   00001354   ........           _BLF     ??string,??string??rA
   \   00001358   28008DE2           ADD      R0,SP,#+40
   \   0000135C   ........           _BLF     ??FindConfigKey,??FindConfigKey??rA
   \   00001360   00A0A0E1           MOV      R10,R0
   \   00001364   0020A0E3           MOV      R2,#+0
   \   00001368   0410A0E1           MOV      R1,R4
   \   0000136C   28008DE2           ADD      R0,SP,#+40
   \   00001370   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   1422                      bool tmpEnable = false;
   \   00001374   0670A0E1           MOV      R7,R6
   1423                      switch (NewStatus) {
   \   00001378   64A05AE2           SUBS     R10,R10,#+100
   \   0000137C   1000000A           BEQ      ??PutValue_146
   \   00001380   01A05AE2           SUBS     R10,R10,#+1
   \   00001384   0F00000A           BEQ      ??PutValue_147
   1424                      case C_ENABLE:
   1425                          tmpEnable = true;
   1426                          break;
   1427                      case C_DISABLE:
   1428                          break;
   1429                      default:
   1430                          {
   1431                              bool Value = (bool)GetUnsigned(NewValue, Status);
   \   00001388   0910A0E1           MOV      R1,R9
   \   0000138C   0C008DE2           ADD      R0,SP,#+12
   \   00001390   ........           _BLF     ??string,??string??rA
   \   00001394   0D10A0E1           MOV      R1,SP
   \   00001398   0C008DE2           ADD      R0,SP,#+12
   \   0000139C   ........           _BLF     ??GetUnsigned,??GetUnsigned??rA
   \   000013A0   000050E3           CMP      R0,#+0
   \   000013A4   0040A003           MOVEQ    R4,#+0
   \   000013A8   0020A0E3           MOV      R2,#+0
   \   000013AC   0110A0E3           MOV      R1,#+1
   \   000013B0   0C008DE2           ADD      R0,SP,#+12
   \   000013B4   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   1432                              if (Status == E_NO_ERR) {
   \   000013B8   00009DE5           LDR      R0,[SP, #+0]
   \   000013BC   000050E3           CMP      R0,#+0
   \   000013C0   0000001A           BNE      ??PutValue_147
   1433                                  tmpEnable = Value;
   \                     ??PutValue_146:
   \   000013C4   0470A0E1           MOV      R7,R4
   1434                              }
   1435                          }
   1436                          break;
   1437                      }
   1438                      switch (ValueId) {
   \                     ??PutValue_147:
   \   000013C8   BD8048E2           SUB      R8,R8,#+189
   \   000013CC   508E48E2           SUB      R8,R8,#+1280
   \   000013D0   080058E3           CMP      R8,#+8
   \   000013D4   7E00008A           BHI      ??PutValue_35
   \   000013D8   010F8FE2           ADR      R0,??PutValue_6
   \   000013DC   0800D0E7           LDRB     R0,[R0, R8]
   \   000013E0   00F18FE0           ADD      PC,PC,R0, LSL #+2
   \                     ??PutValue_6:
   \   000013E4   027B0406           DC8      +2,+123,+4,+6
   \   000013E8   080A0C0E           DC8      +8,+10,+12,+14
   \   000013EC   10000000           DC8      +16,+0,+0,+0
   1439                      case SVT_LOG_TO_FILE         :
   1440                          LogToFile           = tmpEnable; break;
   \                     ??PutValue_148:
   \   000013F0   5970C5E5           STRB     R7,[R5, #+89]
   \   000013F4   760000EA           B        ??PutValue_35
   1441                      case SVT_LOG_ALARMS          :
   1442                          LogAlarms           = tmpEnable; break;
   \                     ??PutValue_149:
   \   000013F8   5A70C5E5           STRB     R7,[R5, #+90]
   \   000013FC   740000EA           B        ??PutValue_35
   1443                      case SVT_LOG_BALLAST_EXCH    :
   1444                          LogBallastExchange  = tmpEnable; break;
   \                     ??PutValue_150:
   \   00001400   5B70C5E5           STRB     R7,[R5, #+91]
   \   00001404   720000EA           B        ??PutValue_35
   1445                      case SVT_LOG_CARGO           :
   1446                          LogCargo            = tmpEnable; break;
   \                     ??PutValue_151:
   \   00001408   5C70C5E5           STRB     R7,[R5, #+92]
   \   0000140C   700000EA           B        ??PutValue_35
   1447                      case SVT_LOG_SERVICE         :
   1448                          LogService          = tmpEnable; break;
   \                     ??PutValue_152:
   \   00001410   5D70C5E5           STRB     R7,[R5, #+93]
   \   00001414   6E0000EA           B        ??PutValue_35
   1449                      case SVT_LOG_TEMPERATURE     :
   1450                          LogTemperature      = tmpEnable; break;
   \                     ??PutValue_153:
   \   00001418   5E70C5E5           STRB     R7,[R5, #+94]
   \   0000141C   6C0000EA           B        ??PutValue_35
   1451                      case SVT_LOG_TANK_PRESSURE   :
   1452                          LogTankPressure     = tmpEnable; break;
   \                     ??PutValue_154:
   \   00001420   5F70C5E5           STRB     R7,[R5, #+95]
   \   00001424   6A0000EA           B        ??PutValue_35
   1453                      case SVT_PRINTER_ON_TXU      :
   1454                          PrinterOnThisTXU    = tmpEnable;
   \                     ??PutValue_155:
   \   00001428   6070C5E5           STRB     R7,[R5, #+96]
   1455                          Status              = E_LOCAL_ONLY;
   1456                          if (PrinterOnThisTXU) {
   \   0000142C   ........           LDR      R0,??DataTable48  ;; ??CurPrinterId
   \   00001430   0610E0E1           MVN      R1,R6
   \   00001434   00108DE5           STR      R1,[SP, #+0]
   \   00001438   6010D5E5           LDRB     R1,[R5, #+96]
   \   0000143C   000051E3           CMP      R1,#+0
   \   00001440   ........           LDR      R1,??DataTable49  ;; ??LastDefPrinter
   \   00001444   001091E5           LDR      R1,[R1, #+0]
   \   00001448   9C1091E5           LDR      R1,[R1, #+156]
   \   0000144C   0100000A           BEQ      ??PutValue_156
   1457                              PROPrinter::CurPrinterId = PROPrinter::LastDefPrinter->IDNumber;
   \                     ??PutValue_157:
   \   00001450   001080E5           STR      R1,[R0, #+0]
   \   00001454   620000EA           B        ??PutValue_43
   1458                          } else {
   1459                              // Assuming that the TCU has the first printer
   1460                              unsigned PNo = PROPrinter::LastDefPrinter->IDNumber & 0xffff;
   1461                              if (PNo >= 1) {
   \                     ??PutValue_156:
   \   00001458   0118B0E1           LSLS     R1,R1,#+16
   \   0000145C   6000000A           BEQ      ??PutValue_43
   1462                                  PROPrinter::CurPrinterId = (C_PRO_PRINTER << 16) | 1;
   \   00001460   4113A0E3           MOV      R1,#+67108865
   \   00001464   7F1881E3           ORR      R1,R1,#0x7F0000
   \   00001468   F8FFFFEA           B        ??PutValue_157
   1463                              }
   1464                          }
   1465                          break;
   1466                      }
   1467                  }
   1468                  break;
   1469              case SVT_TANK_STATE_STR    :
   1470              case SVT_TANK_STATE_STR_CGO:
   1471              case SVT_TANK_STATE_STR_BAL:
   1472              case SVT_TANK_STATE_STR_SER:
   1473              case SVT_TANK_STATE_STR_LSW:
   1474              case SVT_TANK_STATE_STR_PRE:
   1475                  {
   1476                      TankState NewState = PROXRefObject::GetStateKey(NewValue);
   \                     ??PutValue_31:
   \   0000146C   0910A0E1           MOV      R1,R9
   \   00001470   28008DE2           ADD      R0,SP,#+40
   \   00001474   ........           _BLF     ??string,??string??rA
   \   00001478   28008DE2           ADD      R0,SP,#+40
   \   0000147C   ........           _BLF     ??GetStateKey,??GetStateKey??rA
   \   00001480   0040A0E1           MOV      R4,R0
   \   00001484   0020A0E3           MOV      R2,#+0
   \   00001488   0110A0E3           MOV      R1,#+1
   \   0000148C   28008DE2           ADD      R0,SP,#+40
   \   00001490   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   1477                      if (NewState == tUndefined) {
   \   00001494   040054E3           CMP      R4,#+4
   \   00001498   0A00001A           BNE      ??PutValue_158
   1478                          NewState = (TankState)GetInt(NewValue, Status);
   \   0000149C   0910A0E1           MOV      R1,R9
   \   000014A0   0C008DE2           ADD      R0,SP,#+12
   \   000014A4   ........           _BLF     ??string,??string??rA
   \   000014A8   0D10A0E1           MOV      R1,SP
   \   000014AC   0C008DE2           ADD      R0,SP,#+12
   \   000014B0   ........           _BLF     ??GetInt,??GetInt??rA
   \   000014B4   FF4000E2           AND      R4,R0,#0xFF
   \   000014B8   0020A0E3           MOV      R2,#+0
   \   000014BC   0110A0E3           MOV      R1,#+1
   \   000014C0   0C008DE2           ADD      R0,SP,#+12
   \   000014C4   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   1479                      }
   1480                      if (Status == E_NO_ERR) {
   \                     ??PutValue_158:
   \   000014C8   00009DE5           LDR      R0,[SP, #+0]
   \   000014CC   000050E3           CMP      R0,#+0
   \   000014D0   3F00001A           BNE      ??PutValue_35
   1481                          SetOpModeState(NewState, ValueId, Index);
   \   000014D4   44319DE5           LDR      R3,[SP, #+324]
   \   000014D8   40019DE5           LDR      R0,[SP, #+320]
   \   000014DC   0820A0E1           MOV      R2,R8
   \   000014E0   0410A0E1           MOV      R1,R4
   \   000014E4   ........           BL       ??SetOpModeState
   \   000014E8   390000EA           B        ??PutValue_35
   1482                      }
   1483                  }
   1484                  break;
   1485              case SVT_IGNORE_VOL_VGT_MESSAGE:
   1486                  {
   1487                      int Key = FindConfigKey(NewValue);
   \                     ??PutValue_33:
   \   000014EC   0910A0E1           MOV      R1,R9
   \   000014F0   0C008DE2           ADD      R0,SP,#+12
   \   000014F4   ........           _BLF     ??string,??string??rA
   \   000014F8   0C008DE2           ADD      R0,SP,#+12
   \   000014FC   ........           _BLF     ??FindConfigKey,??FindConfigKey??rA
   \   00001500   0070A0E1           MOV      R7,R0
   \   00001504   0020A0E3           MOV      R2,#+0
   \   00001508   0410A0E1           MOV      R1,R4
   \   0000150C   0C008DE2           ADD      R0,SP,#+12
   \   00001510   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   1488                      switch (Key) {
   \   00001514   647047E2           SUB      R7,R7,#+100
   \   00001518   050057E3           CMP      R7,#+5
   \   0000151C   0900008A           BHI      ??PutValue_159
   \   00001520   010F8FE2           ADR      R0,??PutValue_7
   \   00001524   0700D0E7           LDRB     R0,[R0, R7]
   \   00001528   00F18FE0           ADD      PC,PC,R0, LSL #+2
   \                     ??PutValue_7:
   \   0000152C   01030103           DC8      +1,+3,+1,+3
   \   00001530   01030000           DC8      +1,+3,+0,+0
   1489                      case C_ON:
   1490                      case C_OPEN:
   1491                      case C_ENABLE:
   1492                          PROSystemData::ReceiveWeightVolume = true;
   \                     ??PutValue_160:
   \   00001534   6140C5E5           STRB     R4,[R5, #+97]
   \   00001538   250000EA           B        ??PutValue_35
   1493                          break;
   1494                      case C_OFF:
   1495                      case C_CLOSE:
   1496                      case C_DISABLE:
   1497                          PROSystemData::ReceiveWeightVolume = false;
   \                     ??PutValue_161:
   \   0000153C   0000A0E3           MOV      R0,#+0
   \   00001540   6100C5E5           STRB     R0,[R5, #+97]
   \   00001544   220000EA           B        ??PutValue_35
   1498                          break;
   1499                      default:
   1500                          {
   1501                              bool Value = (bool)GetUnsigned(NewValue, Status);
   \                     ??PutValue_159:
   \   00001548   0910A0E1           MOV      R1,R9
   \   0000154C   28008DE2           ADD      R0,SP,#+40
   \   00001550   ........           _BLF     ??string,??string??rA
   \   00001554   0D10A0E1           MOV      R1,SP
   \   00001558   28008DE2           ADD      R0,SP,#+40
   \   0000155C   ........           _BLF     ??GetUnsigned,??GetUnsigned??rA
   \   00001560   000050E3           CMP      R0,#+0
   \   00001564   0040A003           MOVEQ    R4,#+0
   \   00001568   0020A0E3           MOV      R2,#+0
   \   0000156C   0110A0E3           MOV      R1,#+1
   \   00001570   28008DE2           ADD      R0,SP,#+40
   \   00001574   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   1502                              if (Status == E_NO_ERR) {
   \   00001578   00009DE5           LDR      R0,[SP, #+0]
   \   0000157C   000050E3           CMP      R0,#+0
   \   00001580   1300001A           BNE      ??PutValue_35
   1503                                  PROSystemData::ReceiveWeightVolume = Value;
   \   00001584   6140C5E5           STRB     R4,[R5, #+97]
   \   00001588   150000EA           B        ??PutValue_43
   1504                              }
   1505                          }
   1506                          break;
   1507                      }
   1508                  }
   1509                  break;
   1510              default:
   1511                  Status = PRogramObject::PutValue(ValueId, Index, NewValue, Local, &ValUnitId);
   \                     ??PutValue_34:
   \   0000158C   0910A0E1           MOV      R1,R9
   \   00001590   490F8DE2           ADD      R0,SP,#+292
   \   00001594   ........           _BLF     ??string,??string??rA
   \   00001598   04008DE2           ADD      R0,SP,#+4
   \   0000159C   01002DE9           PUSH     {R0}
   \   000015A0   7001DDE5           LDRB     R0,[SP, #+368]
   \   000015A4   0810A0E1           MOV      R1,R8
   \   000015A8   01002DE9           PUSH     {R0}
   \   000015AC   4C219DE5           LDR      R2,[SP, #+332]
   \   000015B0   48019DE5           LDR      R0,[SP, #+328]
   \   000015B4   4B3F8DE2           ADD      R3,SP,#+300
   \   000015B8   ........           _BLF     ??PutValue_8,??PutValue??rA
   \   000015BC   08008DE5           STR      R0,[SP, #+8]
   \   000015C0   0020A0E3           MOV      R2,#+0
   \   000015C4   0410A0E1           MOV      R1,R4
   \   000015C8   4B0F8DE2           ADD      R0,SP,#+300
   \                     ??PutValue_44:
   \   000015CC   ........           _BLF     ??_Tidy_1,??_Tidy??rA
   \   000015D0   08D08DE2           ADD      SP,SP,#+8
   1512                  break;
   1513              }
   1514              switch (Status) {
   \                     ??PutValue_35:
   \   000015D4   00009DE5           LDR      R0,[SP, #+0]
   \   000015D8   000050E3           CMP      R0,#+0
   \   000015DC   01007013           CMNNE    R0,#+1
   \   000015E0   0400001A           BNE      ??PutValue_41
   1515              case E_NO_ERR     :
   1516              case E_LOCAL_ONLY :
   1517                  SetModifiedFlag();
   \                     ??PutValue_43:
   \   000015E4   40019DE5           LDR      R0,[SP, #+320]
   \   000015E8   A41090E5           LDR      R1,[R0, #+164]
   \   000015EC   541091E5           LDR      R1,[R1, #+84]
   \   000015F0   0FE0A0E1           MOV      LR,PC
   \   000015F4   11FF2FE1           BX       R1
   1518                  break;
   1519              default:
   1520                  break;
   1521              }
   1522              if (UnitId) {
   \                     ??PutValue_41:
   \   000015F8   70019DE5           LDR      R0,[SP, #+368]
   \   000015FC   000050E3           CMP      R0,#+0
   1523                  *UnitId = ValUnitId;
   \   00001600   04109D15           LDRNE    R1,[SP, #+4]
   \   00001604   00108015           STRNE    R1,[R0, #+0]
   1524              }
   1525              return (Status);
   \   00001608   00009DE5           LDR      R0,[SP, #+0]
   \   0000160C   52DF8DE2           ADD      SP,SP,#+328
   \   00001610   ........           B        ??Subroutine25_0
   \                     ??PutValue_59:
   \   00001614   00408F40           DC32     0x408f4000
   \   00001618   017C1249           DC32     0x49127c01
   \   0000161C   ........           DC32     AlarmSilenceTimer
   \   00001620   ........           DC32     ??AlarmSound
   \   00001624   004CED40           DC32     0x40ed4c00
   \   00001628   ........           DC32     SaveConfigTaskHandle
   \   0000162C   00804640           DC32     0x40468000
   \   00001630   00805140           DC32     0x40518000
   \   00001634   9A999999           DC32     0xffffffff9999999a
   \   00001638   99990940           DC32     0x40099999
   \   0000163C   ........           DC32     ??AllFreshWaterVector
   \   00001640   55555555           DC32     0x55555555
   \   00001644   5555B53F           DC32     0x3fb55555
   \   00001648   ........           DC32     LogTaskHandle
   1526          }
   1527          

   \                                 In segment CODE, align 4, keep-with-next
   1528          int PROSystemData::PutFloatValue(int ValueId, float NewValue) {
   \                     ??PutFloatValue:
   \   00000000   F0402DE9           PUSH     {R4-R7,LR}
   1529              int Status = E_NO_ERR;
   1530              switch (ValueId) {
   \   00000004   ........           LDR      R7,??DataTable54  ;; ??TXUSystemData
   \   00000008   0050A0E1           MOV      R5,R0
   \   0000000C   0260A0E1           MOV      R6,R2
   \   00000010   0040A0E3           MOV      R4,#+0
   \   00000014   A120A0E3           MOV      R2,#+161
   \   00000018   502E82E3           ORR      R2,R2,#0x500
   \   0000001C   020051E1           CMP      R1,R2
   \   00000020   1800000A           BEQ      ??PutFloatValue_2
   \   00000024   012082E2           ADD      R2,R2,#+1
   \   00000028   020051E1           CMP      R1,R2
   \   0000002C   2200000A           BEQ      ??PutFloatValue_3
   \   00000030   012082E3           ORR      R2,R2,#0x1
   \   00000034   020051E1           CMP      R1,R2
   \   00000038   2600000A           BEQ      ??PutFloatValue_4
   \   0000003C   012082E2           ADD      R2,R2,#+1
   \   00000040   020051E1           CMP      R1,R2
   \   00000044   2A00000A           BEQ      ??PutFloatValue_5
   \   00000048   012082E3           ORR      R2,R2,#0x1
   \   0000004C   020051E1           CMP      R1,R2
   \   00000050   2E00000A           BEQ      ??PutFloatValue_6
   \   00000054   012082E2           ADD      R2,R2,#+1
   \   00000058   020051E1           CMP      R1,R2
   \   0000005C   3200000A           BEQ      ??PutFloatValue_7
   \   00000060   8D0D51E3           CMP      R1,#+9024
   \   00000064   4800000A           BEQ      ??PutFloatValue_8
   \   00000068   5420A0E3           MOV      R2,#+84
   \   0000006C   902D82E3           ORR      R2,R2,#0x2400
   \   00000070   020051E1           CMP      R1,R2
   \   00000074   3300000A           BEQ      ??PutFloatValue_9
   \   00000078   012082E3           ORR      R2,R2,#0x1
   \   0000007C   020051E1           CMP      R1,R2
   \   00000080   3700000A           BEQ      ??PutFloatValue_10
   \   00000084   3D0000EA           B        ??PutFloatValue_11
   1531              case SVT_SEAWATER_DNS  :
   1532                  if (PROSystemData::SeaWaterDensity != NewValue) {
   \                     ??PutFloatValue_2:
   \   00000088   300097E5           LDR      R0,[R7, #+48]
   \   0000008C   0610A0E1           MOV      R1,R6
   \   00000090   ........           _BLF     __fNotEqual,??__fNotEqual??rA
   \   00000094   000050E3           CMP      R0,#+0
   \   00000098   3B00000A           BEQ      ??PutFloatValue_8
   1533                      PROSystemData::SeaWaterDensity    = NewValue;
   \   0000009C   306087E5           STR      R6,[R7, #+48]
   1534                      SendData(CMD_GENERIC_STATIC_DATA);
   \                     ??PutFloatValue_12:
   \   000000A0   A42095E5           LDR      R2,[R5, #+164]
   \   000000A4   6610A0E3           MOV      R1,#+102
   \   000000A8   402092E5           LDR      R2,[R2, #+64]
   \   000000AC   0500A0E1           MOV      R0,R5
   \   000000B0   0FE0A0E1           MOV      LR,PC
   \   000000B4   12FF2FE1           BX       R2
   \   000000B8   330000EA           B        ??PutFloatValue_8
   1535                  }
   1536                  break;
   1537              case SVT_BALLAST_DNS   :
   1538                  if (PROSystemData::BallastDensity != NewValue) {
   \                     ??PutFloatValue_3:
   \   000000BC   2C0097E5           LDR      R0,[R7, #+44]
   \   000000C0   0610A0E1           MOV      R1,R6
   \   000000C4   ........           _BLF     __fNotEqual,??__fNotEqual??rA
   \   000000C8   000050E3           CMP      R0,#+0
   \   000000CC   2E00000A           BEQ      ??PutFloatValue_8
   1539                      PROSystemData::BallastDensity     = NewValue;
   \   000000D0   2C6087E5           STR      R6,[R7, #+44]
   1540                      SendData(CMD_GENERIC_STATIC_DATA);
   \   000000D4   F1FFFFEA           B        ??PutFloatValue_12
   1541                  }
   1542                  break;
   1543              case SVT_FRESHWATER_DNS:
   1544                  if (PROSystemData::FreshWaterDensity != NewValue) {
   \                     ??PutFloatValue_4:
   \   000000D8   340097E5           LDR      R0,[R7, #+52]
   \   000000DC   0610A0E1           MOV      R1,R6
   \   000000E0   ........           _BLF     __fNotEqual,??__fNotEqual??rA
   \   000000E4   000050E3           CMP      R0,#+0
   \   000000E8   2700000A           BEQ      ??PutFloatValue_8
   1545                      PROSystemData::FreshWaterDensity    = NewValue;
   \   000000EC   346087E5           STR      R6,[R7, #+52]
   1546                      SendData(CMD_GENERIC_STATIC_DATA);
   \   000000F0   EAFFFFEA           B        ??PutFloatValue_12
   1547                  }
   1548                  break;
   1549              case SVT_HEAVY_FUEL_DNS:
   1550                  if (PROSystemData::HeavyFuelDensity != NewValue) {
   \                     ??PutFloatValue_5:
   \   000000F4   380097E5           LDR      R0,[R7, #+56]
   \   000000F8   0610A0E1           MOV      R1,R6
   \   000000FC   ........           _BLF     __fNotEqual,??__fNotEqual??rA
   \   00000100   000050E3           CMP      R0,#+0
   \   00000104   2000000A           BEQ      ??PutFloatValue_8
   1551                      PROSystemData::HeavyFuelDensity     = NewValue;
   \   00000108   386087E5           STR      R6,[R7, #+56]
   1552                      SendData(CMD_GENERIC_STATIC_DATA);
   \   0000010C   E3FFFFEA           B        ??PutFloatValue_12
   1553                  }
   1554                  break;
   1555              case SVT_DIESEL_DNS    :
   1556                  if (PROSystemData::DieselDensity != NewValue) {
   \                     ??PutFloatValue_6:
   \   00000110   3C0097E5           LDR      R0,[R7, #+60]
   \   00000114   0610A0E1           MOV      R1,R6
   \   00000118   ........           _BLF     __fNotEqual,??__fNotEqual??rA
   \   0000011C   000050E3           CMP      R0,#+0
   \   00000120   1900000A           BEQ      ??PutFloatValue_8
   1557                      PROSystemData::DieselDensity    = NewValue;
   \   00000124   3C6087E5           STR      R6,[R7, #+60]
   1558                      SendData(CMD_GENERIC_STATIC_DATA);
   \   00000128   DCFFFFEA           B        ??PutFloatValue_12
   1559                  }
   1560                  break;
   1561              case SVT_LUBRICANTS_DNS:
   1562                  if (PROSystemData::LubricantsDensity != NewValue) {
   \                     ??PutFloatValue_7:
   \   0000012C   400097E5           LDR      R0,[R7, #+64]
   \   00000130   0610A0E1           MOV      R1,R6
   \   00000134   ........           _BLF     __fNotEqual,??__fNotEqual??rA
   \   00000138   000050E3           CMP      R0,#+0
   \   0000013C   1200000A           BEQ      ??PutFloatValue_8
   1563                      PROSystemData::LubricantsDensity    = NewValue;
   \   00000140   406087E5           STR      R6,[R7, #+64]
   1564                      SendData(CMD_GENERIC_STATIC_DATA);
   \   00000144   D5FFFFEA           B        ??PutFloatValue_12
   1565                  }
   1566                  break;
   1567              case SVT_ALARM_SILENCE  :
   1568                  if ( NewValue ) {
   \                     ??PutFloatValue_9:
   \   00000148   0000A0E3           MOV      R0,#+0
   \   0000014C   0610A0E1           MOV      R1,R6
   \   00000150   ........           _BLF     __fNotEqual,??__fNotEqual??rA
   \   00000154   000050E3           CMP      R0,#+0
   \   00000158   0B00000A           BEQ      ??PutFloatValue_8
   1569                      SendAlarmSilence();
   \   0000015C   ........           _BLF     ??SendAlarmSilence,??SendAlarmSilence??rA
   \   00000160   090000EA           B        ??PutFloatValue_8
   1570                  }
   1571                  break;
   1572              case SVT_AL_ACKNOWLEDGE     :
   1573                  break;
   1574              case SVT_ACKNOWLEGDE_ALL :
   1575                  if ( NewValue ) {
   \                     ??PutFloatValue_10:
   \   00000164   0000A0E3           MOV      R0,#+0
   \   00000168   0610A0E1           MOV      R1,R6
   \   0000016C   ........           _BLF     __fNotEqual,??__fNotEqual??rA
   \   00000170   000050E3           CMP      R0,#+0
   \   00000174   0400000A           BEQ      ??PutFloatValue_8
   1576                      AlarmBasic::AckAll();
   \   00000178   ........           _BLF     ??AckAll,??AckAll??rA
   \   0000017C   020000EA           B        ??PutFloatValue_8
   1577                  }
   1578                  break;
   1579              default:
   1580                  Status = PRogramObject::PutFloatValue(ValueId, NewValue);
   \                     ??PutFloatValue_11:
   \   00000180   0620A0E1           MOV      R2,R6
   \   00000184   ........           _BLF     ??PutFloatValue_1,??PutFloatValue??rA
   \   00000188   0040A0E1           MOV      R4,R0
   1581                  break;
   1582              }
   1583              return (Status);
   \                     ??PutFloatValue_8:
   \   0000018C   0400A0E1           MOV      R0,R4
   \   00000190                      REQUIRE ?Subroutine30
   \   00000190                      ;; // Fall through to label ?Subroutine30
   1584          
   1585          }
   1586          
   1587          

   \                                 In segment CODE, align 4, keep-with-next
   1588          int PROSystemData::PutBitValue(int ValueId, int Index, bool NewValue) {
   \                     ??PutBitValue:
   \   00000000   10402DE9           PUSH     {R4,LR}
   1589              int Status = E_NO_ERR;
   \   00000004   0040A0E3           MOV      R4,#+0
   1590              switch(ValueId){
   \   00000008   8D1D51E2           SUBS     R1,R1,#+9024
   \   0000000C   0D00000A           BEQ      ??PutBitValue_1
   \   00000010   451F51E2           SUBS     R1,R1,#+276
   \   00000014   0200000A           BEQ      ??PutBitValue_2
   \   00000018   011051E2           SUBS     R1,R1,#+1
   \   0000001C   0400000A           BEQ      ??PutBitValue_3
   \   00000020   070000EA           B        ??PutBitValue_4
   1591              case SVT_ALARM_SILENCE  :
   1592                  if ( NewValue ) {
   \                     ??PutBitValue_2:
   \   00000024   000053E3           CMP      R3,#+0
   \   00000028   0600000A           BEQ      ??PutBitValue_1
   1593                      SendAlarmSilence();
   \   0000002C   ........           _BLF     ??SendAlarmSilence,??SendAlarmSilence??rA
   \   00000030   040000EA           B        ??PutBitValue_1
   1594                  }
   1595                  break;
   1596              case SVT_AL_ACKNOWLEDGE     :
   1597                  break;
   1598              case SVT_ACKNOWLEGDE_ALL :
   1599                  if ( NewValue ) {
   \                     ??PutBitValue_3:
   \   00000034   000053E3           CMP      R3,#+0
   \   00000038   0200000A           BEQ      ??PutBitValue_1
   1600                      AlarmBasic::AckAll();
   \   0000003C   ........           _BLF     ??AckAll,??AckAll??rA
   \   00000040   000000EA           B        ??PutBitValue_1
   1601                  }
   1602                  break;
   1603              default                 :
   1604                  Status = E_INPUT_ERR;
   \                     ??PutBitValue_4:
   \   00000044   0140A0E3           MOV      R4,#+1
   1605                  break;
   1606              }
   1607              return (Status);
   \                     ??PutBitValue_1:
   \   00000048   0400A0E1           MOV      R0,R4
   \   0000004C                      REQUIRE ?Subroutine29
   \   0000004C                      ;; // Fall through to label ?Subroutine29
   1608          }
   1609          
   1610          

   \                                 In segment CODE, align 4, keep-with-next
   1611          float PROSystemData::TrimListCorrection(float LongitudinalDist, float TransverceDist) {
   \                     ??TrimListCorrection:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   1612              return TrimValue * LongitudinalDist + ListValue * TransverceDist;
   \   00000004   ........           LDR      R5,??DataTable54  ;; ??TXUSystemData
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   0100A0E1           MOV      R0,R1
   \   00000010   281095E5           LDR      R1,[R5, #+40]
   \   00000014   ........           _BLF     __fMul,??__fMul??rA
   \   00000018   0060A0E1           MOV      R6,R0
   \   0000001C   240095E5           LDR      R0,[R5, #+36]
   \   00000020   0410A0E1           MOV      R1,R4
   \   00000024   ........           _BLF     __fMul,??__fMul??rA
   \   00000028   0610A0E1           MOV      R1,R6
   \   0000002C   ........           _BLF     __fAdd,??__fAdd??rA
   \   00000030                      REQUIRE ?Subroutine27
   \   00000030                      ;; // Fall through to label ?Subroutine27
   1613          }
   1614          
   1615          
   1616          

   \                                 In segment CODE, align 4, keep-with-next
   1617          int PROSystemData::ReceiveData(U8 *data) {
   \                     ??ReceiveData:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   6CD04DE2           SUB      SP,SP,#+108
   1618              int                    ErrorStatus = E_OK;
   1619              ANPRO10_CommandHeading *pCH        = (ANPRO10_CommandHeading *)data;
   1620              switch (pCH->CommandNo) {
   \   00000008   ........           LDR      R6,??DataTable54  ;; ??TXUSystemData
   \   0000000C   0140A0E1           MOV      R4,R1
   \   00000010   0110D4E5           LDRB     R1,[R4, #+1]
   \   00000014   0020D4E5           LDRB     R2,[R4, #+0]
   \   00000018   011482E1           ORR      R1,R2,R1, LSL #+8
   \   0000001C   651051E2           SUBS     R1,R1,#+101
   \   00000020   0200000A           BEQ      ??ReceiveData_1
   \   00000024   011051E2           SUBS     R1,R1,#+1
   \   00000028   A200000A           BEQ      ??ReceiveData_2
   \   0000002C   500100EA           B        ??ReceiveData_3
   1621              case CMD_GENERIC_REALTIME_DATA:
   1622                  {
   1623                      ANPRO10_COMMAND_2720  *pData = (ANPRO10_COMMAND_2720 *)data;
   1624                      ErrorStatus       =  E_OK;
   \                     ??ReceiveData_1:
   \   00000030   0050A0E3           MOV      R5,#+0
   1625                      TrimValue         = pData->Trim;
   \   00000034   0010A0E3           MOV      R1,#+0
   \   00000038   0D20A0E1           MOV      R2,SP
   \                     ??ReceiveData_4:
   \   0000003C   083084E2           ADD      R3,R4,#+8
   \   00000040   0330D1E7           LDRB     R3,[R1, +R3]
   \   00000044   0230C1E7           STRB     R3,[R1, +R2]
   \   00000048   011081E2           ADD      R1,R1,#+1
   \   0000004C   040051E3           CMP      R1,#+4
   \   00000050   F9FFFFBA           BLT      ??ReceiveData_4
   \   00000054   00109DE5           LDR      R1,[SP, #+0]
   1626                      ListValue         = pData->List;
   \   00000058   04208DE2           ADD      R2,SP,#+4
   \   0000005C   241086E5           STR      R1,[R6, #+36]
   \   00000060   0010A0E3           MOV      R1,#+0
   \                     ??ReceiveData_5:
   \   00000064   0C3084E2           ADD      R3,R4,#+12
   \   00000068   0330D1E7           LDRB     R3,[R1, +R3]
   \   0000006C   0230C1E7           STRB     R3,[R1, +R2]
   \   00000070   011081E2           ADD      R1,R1,#+1
   \   00000074   040051E3           CMP      R1,#+4
   \   00000078   F9FFFFBA           BLT      ??ReceiveData_5
   \   0000007C   04109DE5           LDR      R1,[SP, #+4]
   1627                      CargoVolume       = pData->CargoVolume;
   \   00000080   08208DE2           ADD      R2,SP,#+8
   \   00000084   281086E5           STR      R1,[R6, #+40]
   \   00000088   0010A0E3           MOV      R1,#+0
   \                     ??ReceiveData_6:
   \   0000008C   103084E2           ADD      R3,R4,#+16
   \   00000090   0330D1E7           LDRB     R3,[R1, +R3]
   \   00000094   0230C1E7           STRB     R3,[R1, +R2]
   \   00000098   011081E2           ADD      R1,R1,#+1
   \   0000009C   040051E3           CMP      R1,#+4
   \   000000A0   F9FFFFBA           BLT      ??ReceiveData_6
   \   000000A4   08109DE5           LDR      R1,[SP, #+8]
   1628                      CargoWeight       = pData->CargoWeight;
   \   000000A8   0C208DE2           ADD      R2,SP,#+12
   \   000000AC   481180E5           STR      R1,[R0, #+328]
   \   000000B0   0010A0E3           MOV      R1,#+0
   \                     ??ReceiveData_7:
   \   000000B4   143084E2           ADD      R3,R4,#+20
   \   000000B8   0330D1E7           LDRB     R3,[R1, +R3]
   \   000000BC   0230C1E7           STRB     R3,[R1, +R2]
   \   000000C0   011081E2           ADD      R1,R1,#+1
   \   000000C4   040051E3           CMP      R1,#+4
   \   000000C8   F9FFFFBA           BLT      ??ReceiveData_7
   \   000000CC   0C109DE5           LDR      R1,[SP, #+12]
   1629                      BallastVolume     = pData->BallastVolume;
   \   000000D0   10208DE2           ADD      R2,SP,#+16
   \   000000D4   641180E5           STR      R1,[R0, #+356]
   \   000000D8   0010A0E3           MOV      R1,#+0
   \                     ??ReceiveData_8:
   \   000000DC   183084E2           ADD      R3,R4,#+24
   \   000000E0   0330D1E7           LDRB     R3,[R1, +R3]
   \   000000E4   0230C1E7           STRB     R3,[R1, +R2]
   \   000000E8   011081E2           ADD      R1,R1,#+1
   \   000000EC   040051E3           CMP      R1,#+4
   \   000000F0   F9FFFFBA           BLT      ??ReceiveData_8
   \   000000F4   10109DE5           LDR      R1,[SP, #+16]
   1630                      BallastWeight     = pData->BallastWeight;
   \   000000F8   14208DE2           ADD      R2,SP,#+20
   \   000000FC   4C1180E5           STR      R1,[R0, #+332]
   \   00000100   0010A0E3           MOV      R1,#+0
   \                     ??ReceiveData_9:
   \   00000104   1C3084E2           ADD      R3,R4,#+28
   \   00000108   0330D1E7           LDRB     R3,[R1, +R3]
   \   0000010C   0230C1E7           STRB     R3,[R1, +R2]
   \   00000110   011081E2           ADD      R1,R1,#+1
   \   00000114   040051E3           CMP      R1,#+4
   \   00000118   F9FFFFBA           BLT      ??ReceiveData_9
   \   0000011C   14109DE5           LDR      R1,[SP, #+20]
   1631                      HeavyFuelVolume   = pData->HeavyFuelVolume;
   \   00000120   18208DE2           ADD      R2,SP,#+24
   \   00000124   681180E5           STR      R1,[R0, #+360]
   \   00000128   0010A0E3           MOV      R1,#+0
   \                     ??ReceiveData_10:
   \   0000012C   203084E2           ADD      R3,R4,#+32
   \   00000130   0330D1E7           LDRB     R3,[R1, +R3]
   \   00000134   0230C1E7           STRB     R3,[R1, +R2]
   \   00000138   011081E2           ADD      R1,R1,#+1
   \   0000013C   040051E3           CMP      R1,#+4
   \   00000140   F9FFFFBA           BLT      ??ReceiveData_10
   \   00000144   18109DE5           LDR      R1,[SP, #+24]
   1632                      HeavyFuelWeight   = pData->HeavyFuelWeight;
   \   00000148   1C208DE2           ADD      R2,SP,#+28
   \   0000014C   501180E5           STR      R1,[R0, #+336]
   \   00000150   0010A0E3           MOV      R1,#+0
   \                     ??ReceiveData_11:
   \   00000154   243084E2           ADD      R3,R4,#+36
   \   00000158   0330D1E7           LDRB     R3,[R1, +R3]
   \   0000015C   0230C1E7           STRB     R3,[R1, +R2]
   \   00000160   011081E2           ADD      R1,R1,#+1
   \   00000164   040051E3           CMP      R1,#+4
   \   00000168   F9FFFFBA           BLT      ??ReceiveData_11
   \   0000016C   1C109DE5           LDR      R1,[SP, #+28]
   1633                      DieselOilVolume   = pData->DieselOilVolume;
   \   00000170   20208DE2           ADD      R2,SP,#+32
   \   00000174   6C1180E5           STR      R1,[R0, #+364]
   \   00000178   0010A0E3           MOV      R1,#+0
   \                     ??ReceiveData_12:
   \   0000017C   283084E2           ADD      R3,R4,#+40
   \   00000180   0330D1E7           LDRB     R3,[R1, +R3]
   \   00000184   0230C1E7           STRB     R3,[R1, +R2]
   \   00000188   011081E2           ADD      R1,R1,#+1
   \   0000018C   040051E3           CMP      R1,#+4
   \   00000190   F9FFFFBA           BLT      ??ReceiveData_12
   \   00000194   20109DE5           LDR      R1,[SP, #+32]
   1634                      DieselOilWeight   = pData->DieselOilWeight;
   \   00000198   24208DE2           ADD      R2,SP,#+36
   \   0000019C   541180E5           STR      R1,[R0, #+340]
   \   000001A0   0010A0E3           MOV      R1,#+0
   \                     ??ReceiveData_13:
   \   000001A4   2C3084E2           ADD      R3,R4,#+44
   \   000001A8   0330D1E7           LDRB     R3,[R1, +R3]
   \   000001AC   0230C1E7           STRB     R3,[R1, +R2]
   \   000001B0   011081E2           ADD      R1,R1,#+1
   \   000001B4   040051E3           CMP      R1,#+4
   \   000001B8   F9FFFFBA           BLT      ??ReceiveData_13
   \   000001BC   24109DE5           LDR      R1,[SP, #+36]
   1635                      LubricantsVolume  = pData->LubricantsVolume;
   \   000001C0   28208DE2           ADD      R2,SP,#+40
   \   000001C4   701180E5           STR      R1,[R0, #+368]
   \   000001C8   0010A0E3           MOV      R1,#+0
   \                     ??ReceiveData_14:
   \   000001CC   303084E2           ADD      R3,R4,#+48
   \   000001D0   0330D1E7           LDRB     R3,[R1, +R3]
   \   000001D4   0230C1E7           STRB     R3,[R1, +R2]
   \   000001D8   011081E2           ADD      R1,R1,#+1
   \   000001DC   040051E3           CMP      R1,#+4
   \   000001E0   F9FFFFBA           BLT      ??ReceiveData_14
   \   000001E4   28109DE5           LDR      R1,[SP, #+40]
   1636                      LubricantsWeight  = pData->LubricantsWeight;
   \   000001E8   2C208DE2           ADD      R2,SP,#+44
   \   000001EC   581180E5           STR      R1,[R0, #+344]
   \   000001F0   0010A0E3           MOV      R1,#+0
   \                     ??ReceiveData_15:
   \   000001F4   343084E2           ADD      R3,R4,#+52
   \   000001F8   0330D1E7           LDRB     R3,[R1, +R3]
   \   000001FC   0230C1E7           STRB     R3,[R1, +R2]
   \   00000200   011081E2           ADD      R1,R1,#+1
   \   00000204   040051E3           CMP      R1,#+4
   \   00000208   F9FFFFBA           BLT      ??ReceiveData_15
   \   0000020C   2C109DE5           LDR      R1,[SP, #+44]
   1637                      FreshWaterVolume  = pData->FreshWaterVolume;
   \   00000210   30208DE2           ADD      R2,SP,#+48
   \   00000214   741180E5           STR      R1,[R0, #+372]
   \   00000218   0010A0E3           MOV      R1,#+0
   \                     ??ReceiveData_16:
   \   0000021C   383084E2           ADD      R3,R4,#+56
   \   00000220   0330D1E7           LDRB     R3,[R1, +R3]
   \   00000224   0230C1E7           STRB     R3,[R1, +R2]
   \   00000228   011081E2           ADD      R1,R1,#+1
   \   0000022C   040051E3           CMP      R1,#+4
   \   00000230   F9FFFFBA           BLT      ??ReceiveData_16
   \   00000234   30109DE5           LDR      R1,[SP, #+48]
   1638                      FreshWaterWeight  = pData->FreshWaterWeight;
   \   00000238   34208DE2           ADD      R2,SP,#+52
   \   0000023C   5C1180E5           STR      R1,[R0, #+348]
   \   00000240   0010A0E3           MOV      R1,#+0
   \                     ??ReceiveData_17:
   \   00000244   3C3084E2           ADD      R3,R4,#+60
   \   00000248   0330D1E7           LDRB     R3,[R1, +R3]
   \   0000024C   0230C1E7           STRB     R3,[R1, +R2]
   \   00000250   011081E2           ADD      R1,R1,#+1
   \   00000254   040051E3           CMP      R1,#+4
   \   00000258   F9FFFFBA           BLT      ??ReceiveData_17
   \   0000025C   34109DE5           LDR      R1,[SP, #+52]
   1639                      MiscVolume        = pData->MiscVolume;
   \   00000260   38208DE2           ADD      R2,SP,#+56
   \   00000264   781180E5           STR      R1,[R0, #+376]
   \   00000268   0010A0E3           MOV      R1,#+0
   \                     ??ReceiveData_18:
   \   0000026C   403084E2           ADD      R3,R4,#+64
   \   00000270   0330D1E7           LDRB     R3,[R1, +R3]
   \   00000274   0230C1E7           STRB     R3,[R1, +R2]
   \   00000278   011081E2           ADD      R1,R1,#+1
   \   0000027C   040051E3           CMP      R1,#+4
   \   00000280   F9FFFFBA           BLT      ??ReceiveData_18
   \   00000284   38109DE5           LDR      R1,[SP, #+56]
   1640                      MiscWeight        = pData->MiscWeight;
   \   00000288   3C208DE2           ADD      R2,SP,#+60
   \   0000028C   601180E5           STR      R1,[R0, #+352]
   \   00000290   0010A0E3           MOV      R1,#+0
   \                     ??ReceiveData_19:
   \   00000294   443084E2           ADD      R3,R4,#+68
   \   00000298   0330D1E7           LDRB     R3,[R1, +R3]
   \   0000029C   0230C1E7           STRB     R3,[R1, +R2]
   \   000002A0   011081E2           ADD      R1,R1,#+1
   \   000002A4   040051E3           CMP      R1,#+4
   \   000002A8   F9FFFFBA           BLT      ??ReceiveData_19
   \   000002AC   3C109DE5           LDR      R1,[SP, #+60]
   \   000002B0   7C1180E5           STR      R1,[R0, #+380]
   \   000002B4   AF0000EA           B        ??ReceiveData_20
   1641                  }
   1642                  break;
   1643              case CMD_GENERIC_STATIC_DATA:
   1644                  {
   1645                      ANPRO10_COMMAND_2721  *pData = (ANPRO10_COMMAND_2721 *)data;
   1646                      ErrorStatus         = E_OK;
   \                     ??ReceiveData_2:
   \   000002B8   0050A0E3           MOV      R5,#+0
   1647                      ManualTrim          = pData->ManualTrim;
   \   000002BC   0000A0E3           MOV      R0,#+0
   \   000002C0   40108DE2           ADD      R1,SP,#+64
   \                     ??ReceiveData_21:
   \   000002C4   082084E2           ADD      R2,R4,#+8
   \   000002C8   0220D0E7           LDRB     R2,[R0, +R2]
   \   000002CC   0120C0E7           STRB     R2,[R0, +R1]
   \   000002D0   010080E2           ADD      R0,R0,#+1
   \   000002D4   040050E3           CMP      R0,#+4
   \   000002D8   F9FFFFBA           BLT      ??ReceiveData_21
   \   000002DC   40009DE5           LDR      R0,[SP, #+64]
   1648                      ManualList          = pData->ManualList;
   \   000002E0   44108DE2           ADD      R1,SP,#+68
   \   000002E4   1C0086E5           STR      R0,[R6, #+28]
   \   000002E8   0000A0E3           MOV      R0,#+0
   \                     ??ReceiveData_22:
   \   000002EC   0C2084E2           ADD      R2,R4,#+12
   \   000002F0   0220D0E7           LDRB     R2,[R0, +R2]
   \   000002F4   0120C0E7           STRB     R2,[R0, +R1]
   \   000002F8   010080E2           ADD      R0,R0,#+1
   \   000002FC   040050E3           CMP      R0,#+4
   \   00000300   F9FFFFBA           BLT      ??ReceiveData_22
   \   00000304   44009DE5           LDR      R0,[SP, #+68]
   1649                      BallastDensity      = pData->BallastDensity;
   \   00000308   48108DE2           ADD      R1,SP,#+72
   \   0000030C   200086E5           STR      R0,[R6, #+32]
   \   00000310   0000A0E3           MOV      R0,#+0
   \                     ??ReceiveData_23:
   \   00000314   102084E2           ADD      R2,R4,#+16
   \   00000318   0220D0E7           LDRB     R2,[R0, +R2]
   \   0000031C   0120C0E7           STRB     R2,[R0, +R1]
   \   00000320   010080E2           ADD      R0,R0,#+1
   \   00000324   040050E3           CMP      R0,#+4
   \   00000328   F9FFFFBA           BLT      ??ReceiveData_23
   \   0000032C   48009DE5           LDR      R0,[SP, #+72]
   1650                      SeaWaterDensity     = pData->SeaWaterDensity;
   \   00000330   4C108DE2           ADD      R1,SP,#+76
   \   00000334   2C0086E5           STR      R0,[R6, #+44]
   \   00000338   0000A0E3           MOV      R0,#+0
   \                     ??ReceiveData_24:
   \   0000033C   142084E2           ADD      R2,R4,#+20
   \   00000340   0220D0E7           LDRB     R2,[R0, +R2]
   \   00000344   0120C0E7           STRB     R2,[R0, +R1]
   \   00000348   010080E2           ADD      R0,R0,#+1
   \   0000034C   040050E3           CMP      R0,#+4
   \   00000350   F9FFFFBA           BLT      ??ReceiveData_24
   \   00000354   4C009DE5           LDR      R0,[SP, #+76]
   1651                      FreshWaterDensity   = pData->FreshWaterDensity;
   \   00000358   50108DE2           ADD      R1,SP,#+80
   \   0000035C   300086E5           STR      R0,[R6, #+48]
   \   00000360   0000A0E3           MOV      R0,#+0
   \                     ??ReceiveData_25:
   \   00000364   182084E2           ADD      R2,R4,#+24
   \   00000368   0220D0E7           LDRB     R2,[R0, +R2]
   \   0000036C   0120C0E7           STRB     R2,[R0, +R1]
   \   00000370   010080E2           ADD      R0,R0,#+1
   \   00000374   040050E3           CMP      R0,#+4
   \   00000378   F9FFFFBA           BLT      ??ReceiveData_25
   \   0000037C   50009DE5           LDR      R0,[SP, #+80]
   1652                      HeavyFuelDensity    = pData->HeavyFuelDensity;
   \   00000380   54108DE2           ADD      R1,SP,#+84
   \   00000384   340086E5           STR      R0,[R6, #+52]
   \   00000388   0000A0E3           MOV      R0,#+0
   \                     ??ReceiveData_26:
   \   0000038C   1C2084E2           ADD      R2,R4,#+28
   \   00000390   0220D0E7           LDRB     R2,[R0, +R2]
   \   00000394   0120C0E7           STRB     R2,[R0, +R1]
   \   00000398   010080E2           ADD      R0,R0,#+1
   \   0000039C   040050E3           CMP      R0,#+4
   \   000003A0   F9FFFFBA           BLT      ??ReceiveData_26
   \   000003A4   54009DE5           LDR      R0,[SP, #+84]
   1653                      DieselDensity       = pData->DieselDensity;
   \   000003A8   58108DE2           ADD      R1,SP,#+88
   \   000003AC   380086E5           STR      R0,[R6, #+56]
   \   000003B0   0000A0E3           MOV      R0,#+0
   \                     ??ReceiveData_27:
   \   000003B4   202084E2           ADD      R2,R4,#+32
   \   000003B8   0220D0E7           LDRB     R2,[R0, +R2]
   \   000003BC   0120C0E7           STRB     R2,[R0, +R1]
   \   000003C0   010080E2           ADD      R0,R0,#+1
   \   000003C4   040050E3           CMP      R0,#+4
   \   000003C8   F9FFFFBA           BLT      ??ReceiveData_27
   \   000003CC   58009DE5           LDR      R0,[SP, #+88]
   1654                      LubricantsDensity   = pData->LubricantsDensity;
   \   000003D0   5C108DE2           ADD      R1,SP,#+92
   \   000003D4   3C0086E5           STR      R0,[R6, #+60]
   \   000003D8   0000A0E3           MOV      R0,#+0
   \                     ??ReceiveData_28:
   \   000003DC   242084E2           ADD      R2,R4,#+36
   \   000003E0   0220D0E7           LDRB     R2,[R0, +R2]
   \   000003E4   0120C0E7           STRB     R2,[R0, +R1]
   \   000003E8   010080E2           ADD      R0,R0,#+1
   \   000003EC   040050E3           CMP      R0,#+4
   \   000003F0   F9FFFFBA           BLT      ??ReceiveData_28
   \   000003F4   5C009DE5           LDR      R0,[SP, #+92]
   1655                      SeaWaterTemp        = pData->SeaWaterTemp;
   \   000003F8   60108DE2           ADD      R1,SP,#+96
   \   000003FC   400086E5           STR      R0,[R6, #+64]
   \   00000400   0000A0E3           MOV      R0,#+0
   \                     ??ReceiveData_29:
   \   00000404   282084E2           ADD      R2,R4,#+40
   \   00000408   0220D0E7           LDRB     R2,[R0, +R2]
   \   0000040C   0120C0E7           STRB     R2,[R0, +R1]
   \   00000410   010080E2           ADD      R0,R0,#+1
   \   00000414   040050E3           CMP      R0,#+4
   \   00000418   F9FFFFBA           BLT      ??ReceiveData_29
   \   0000041C   60009DE5           LDR      R0,[SP, #+96]
   1656                      AmbientTemp     = pData->AmbientTemp;
   \   00000420   64108DE2           ADD      R1,SP,#+100
   \   00000424   440086E5           STR      R0,[R6, #+68]
   \   00000428   0000A0E3           MOV      R0,#+0
   \                     ??ReceiveData_30:
   \   0000042C   4A2084E2           ADD      R2,R4,#+74
   \   00000430   0220D0E7           LDRB     R2,[R0, +R2]
   \   00000434   0120C0E7           STRB     R2,[R0, +R1]
   \   00000438   010080E2           ADD      R0,R0,#+1
   \   0000043C   040050E3           CMP      R0,#+4
   \   00000440   F9FFFFBA           BLT      ??ReceiveData_30
   \   00000444   64009DE5           LDR      R0,[SP, #+100]
   \   00000448   480086E5           STR      R0,[R6, #+72]
   1657                      TrimSource          = pData->TrimSource;
   \   0000044C   2F00D4E5           LDRB     R0,[R4, #+47]
   \   00000450   2E10D4E5           LDRB     R1,[R4, #+46]
   \   00000454   000481E1           ORR      R0,R1,R0, LSL #+8
   \   00000458   2D10D4E5           LDRB     R1,[R4, #+45]
   \   0000045C   000481E1           ORR      R0,R1,R0, LSL #+8
   \   00000460   2C10D4E5           LDRB     R1,[R4, #+44]
   \   00000464   000481E1           ORR      R0,R1,R0, LSL #+8
   \   00000468   140086E5           STR      R0,[R6, #+20]
   1658                      ListSource          = pData->ListSource;
   \   0000046C   3300D4E5           LDRB     R0,[R4, #+51]
   \   00000470   3210D4E5           LDRB     R1,[R4, #+50]
   \   00000474   000481E1           ORR      R0,R1,R0, LSL #+8
   \   00000478   3110D4E5           LDRB     R1,[R4, #+49]
   \   0000047C   000481E1           ORR      R0,R1,R0, LSL #+8
   \   00000480   3010D4E5           LDRB     R1,[R4, #+48]
   \   00000484   000481E1           ORR      R0,R1,R0, LSL #+8
   \   00000488   180086E5           STR      R0,[R6, #+24]
   1659                      LogTime             = pData->Logtime;
   \   0000048C   3700D4E5           LDRB     R0,[R4, #+55]
   \   00000490   3610D4E5           LDRB     R1,[R4, #+54]
   \   00000494   000481E1           ORR      R0,R1,R0, LSL #+8
   \   00000498   3510D4E5           LDRB     R1,[R4, #+53]
   \   0000049C   000481E1           ORR      R0,R1,R0, LSL #+8
   \   000004A0   3410D4E5           LDRB     R1,[R4, #+52]
   \   000004A4   000481E1           ORR      R0,R1,R0, LSL #+8
   \   000004A8   540086E5           STR      R0,[R6, #+84]
   1660                      LogToFile           = pData->LogToFile;
   \   000004AC   4200D4E5           LDRB     R0,[R4, #+66]
   \   000004B0   5900C6E5           STRB     R0,[R6, #+89]
   1661                      LogAlarms           = pData->LogAlarms;
   \   000004B4   3800D4E5           LDRB     R0,[R4, #+56]
   \   000004B8   5A00C6E5           STRB     R0,[R6, #+90]
   1662                      LogBallastExchange  = pData->LogBallastExchange;
   \   000004BC   3900D4E5           LDRB     R0,[R4, #+57]
   \   000004C0   5B00C6E5           STRB     R0,[R6, #+91]
   1663                      LogCargo            = pData->LogCargo;
   \   000004C4   3A00D4E5           LDRB     R0,[R4, #+58]
   \   000004C8   5C00C6E5           STRB     R0,[R6, #+92]
   1664                      LogService          = pData->LogService;
   \   000004CC   3B00D4E5           LDRB     R0,[R4, #+59]
   \   000004D0   5D00C6E5           STRB     R0,[R6, #+93]
   1665                      LogTemperature      = pData->LogTemperature;
   \   000004D4   3C00D4E5           LDRB     R0,[R4, #+60]
   \   000004D8   5E00C6E5           STRB     R0,[R6, #+94]
   1666                      LogTankPressure     = pData->LogTankPressure;
   \   000004DC   3D00D4E5           LDRB     R0,[R4, #+61]
   \   000004E0   5F00C6E5           STRB     R0,[R6, #+95]
   1667                      if (CurrentLanguage != pData->CurrentLanguage) {
   \   000004E4   4110D4E5           LDRB     R1,[R4, #+65]
   \   000004E8   4020D4E5           LDRB     R2,[R4, #+64]
   \   000004EC   0C0096E5           LDR      R0,[R6, #+12]
   \   000004F0   011482E1           ORR      R1,R2,R1, LSL #+8
   \   000004F4   3F20D4E5           LDRB     R2,[R4, #+63]
   \   000004F8   011482E1           ORR      R1,R2,R1, LSL #+8
   \   000004FC   3E20D4E5           LDRB     R2,[R4, #+62]
   \   00000500   011482E1           ORR      R1,R2,R1, LSL #+8
   \   00000504   010050E1           CMP      R0,R1
   \   00000508   0700000A           BEQ      ??ReceiveData_31
   1668                          SetCurrentLanguage(pData->CurrentLanguage);
   \   0000050C   4100D4E5           LDRB     R0,[R4, #+65]
   \   00000510   4010D4E5           LDRB     R1,[R4, #+64]
   \   00000514   000481E1           ORR      R0,R1,R0, LSL #+8
   \   00000518   3F10D4E5           LDRB     R1,[R4, #+63]
   \   0000051C   000481E1           ORR      R0,R1,R0, LSL #+8
   \   00000520   3E10D4E5           LDRB     R1,[R4, #+62]
   \   00000524   000481E1           ORR      R0,R1,R0, LSL #+8
   \   00000528   ........           _BLF     ??SetCurrentLanguage,??SetCurrentLanguage??rA
   1669                      }
   1670                      ReceiveWeightVolume = pData->ReceiveWeightVolume;
   \                     ??ReceiveData_31:
   \   0000052C   4300D4E5           LDRB     R0,[R4, #+67]
   1671                      Latitude            = pData->Latitude;
   \   00000530   68108DE2           ADD      R1,SP,#+104
   \   00000534   6100C6E5           STRB     R0,[R6, #+97]
   \   00000538   0000A0E3           MOV      R0,#+0
   \                     ??ReceiveData_32:
   \   0000053C   442084E2           ADD      R2,R4,#+68
   \   00000540   0220D0E7           LDRB     R2,[R0, +R2]
   \   00000544   0120C0E7           STRB     R2,[R0, +R1]
   \   00000548   010080E2           ADD      R0,R0,#+1
   \   0000054C   040050E3           CMP      R0,#+4
   \   00000550   F9FFFFBA           BLT      ??ReceiveData_32
   \   00000554   68009DE5           LDR      R0,[SP, #+104]
   \   00000558   040086E5           STR      R0,[R6, #+4]
   1672                      HasConfigWritePermission  = pData->HasConfigWritePermission;
   \   0000055C   4800D4E5           LDRB     R0,[R4, #+72]
   \   00000560   5800C6E5           STRB     R0,[R6, #+88]
   1673                      AlarmBasic::AlarmSound    = pData->AlarmSoundSleep;
   \   00000564   4910D4E5           LDRB     R1,[R4, #+73]
   \   00000568   ........           LDR      R0,??DataTable55  ;; ??AlarmSound
   \   0000056C   0010C0E5           STRB     R1,[R0, #+0]
   \   00000570   000000EA           B        ??ReceiveData_20
   1674                  }
   1675                  break;
   1676              default:
   1677                  ErrorStatus = E_UNKNOWN_COMMAND;
   \                     ??ReceiveData_3:
   \   00000574   0150A0E3           MOV      R5,#+1
   1678                  break;
   1679              }
   1680              return (ErrorStatus);
   \                     ??ReceiveData_20:
   \   00000578   0500A0E1           MOV      R0,R5
   \   0000057C   6CD08DE2           ADD      SP,SP,#+108
   \   00000580   ........           B        ?Subroutine27
   1681          }
   1682          

   \                                 In segment CODE, align 4, keep-with-next
   1683          int PROSystemData::SendData(U16 cmd) {
   1684              int ErrorStatus = E_OK;
   1685              switch (cmd) {
   \                     ??SendData:
   \   00000000   ........           LDR      R2,??DataTable54  ;; ??TXUSystemData
   \   00000004   10402DE9           PUSH     {R4,LR}
   \   00000008   A4D04DE2           SUB      SP,SP,#+164
   \   0000000C   0E30A0E3           MOV      R3,#+14
   \   00000010   FFC0A0E3           MOV      R12,#+255
   \   00000014   0040A0E3           MOV      R4,#+0
   \   00000018   651051E2           SUBS     R1,R1,#+101
   \   0000001C   0200000A           BEQ      ??SendData_1
   \   00000020   011051E2           SUBS     R1,R1,#+1
   \   00000024   9700000A           BEQ      ??SendData_2
   \   00000028   2B0100EA           B        ??SendData_3
   1686              case CMD_GENERIC_REALTIME_DATA:
   1687                  {
   1688                      QueueANPRO10_COMMAND_2720 Cmd;
   1689                      Cmd.TxInfo.Port             = NULL;
   \                     ??SendData_1:
   \   0000002C   54408DE5           STR      R4,[SP, #+84]
   1690                      Cmd.TxInfo.rxAddr           = DEVICE_BROADCAST_ADDR;
   \   00000030   58C0CDE5           STRB     R12,[SP, #+88]
   1691                      Cmd.TxInfo.rxId             = DEVICE_BROADCAST_TXU;
   \   00000034   5930CDE5           STRB     R3,[SP, #+89]
   1692          
   1693                      Cmd.Data.ObjectId           = IDNumber;
   \   00000038   9C1090E5           LDR      R1,[R0, #+156]
   1694                      Cmd.Data.ndb                = sizeof(Cmd) - sizeof(QueueANPRO10_CommandHeading);
   \   0000003C   4430A0E3           MOV      R3,#+68
   \   00000040   5E10CDE5           STRB     R1,[SP, #+94]
   \   00000044   2114A0E1           LSR      R1,R1,#+8
   \   00000048   5F10CDE5           STRB     R1,[SP, #+95]
   \   0000004C   2114A0E1           LSR      R1,R1,#+8
   \   00000050   6010CDE5           STRB     R1,[SP, #+96]
   \   00000054   2114A0E1           LSR      R1,R1,#+8
   \   00000058   6110CDE5           STRB     R1,[SP, #+97]
   \   0000005C   BC35CDE1           STRH     R3,[SP, #+92]
   1695                      Cmd.Data.CommandNo          = CMD_GENERIC_REALTIME_DATA;
   \   00000060   6530A0E3           MOV      R3,#+101
   \   00000064   BA35CDE1           STRH     R3,[SP, #+90]
   1696                      Cmd.Data.Trim               = TrimValue;
   \   00000068   0010A0E3           MOV      R1,#+0
   \   0000006C   62308DE2           ADD      R3,SP,#+98
   \                     ??SendData_4:
   \   00000070   024081E0           ADD      R4,R1,R2
   \   00000074   2440D4E5           LDRB     R4,[R4, #+36]
   \   00000078   0340C1E7           STRB     R4,[R1, +R3]
   \   0000007C   011081E2           ADD      R1,R1,#+1
   \   00000080   040051E3           CMP      R1,#+4
   \   00000084   F9FFFFBA           BLT      ??SendData_4
   1697                      Cmd.Data.List               = ListValue;
   \   00000088   0010A0E3           MOV      R1,#+0
   \   0000008C   66308DE2           ADD      R3,SP,#+102
   \                     ??SendData_5:
   \   00000090   024081E0           ADD      R4,R1,R2
   \   00000094   2840D4E5           LDRB     R4,[R4, #+40]
   \   00000098   0340C1E7           STRB     R4,[R1, +R3]
   \   0000009C   011081E2           ADD      R1,R1,#+1
   \   000000A0   040051E3           CMP      R1,#+4
   \   000000A4   F9FFFFBA           BLT      ??SendData_5
   1698                      Cmd.Data.CargoVolume        = CargoVolume;
   \   000000A8   0010A0E3           MOV      R1,#+0
   \   000000AC   6A208DE2           ADD      R2,SP,#+106
   \                     ??SendData_6:
   \   000000B0   523F80E2           ADD      R3,R0,#+328
   \   000000B4   0330D1E7           LDRB     R3,[R1, +R3]
   \   000000B8   0230C1E7           STRB     R3,[R1, +R2]
   \   000000BC   011081E2           ADD      R1,R1,#+1
   \   000000C0   040051E3           CMP      R1,#+4
   \   000000C4   F9FFFFBA           BLT      ??SendData_6
   1699                      Cmd.Data.CargoWeight        = CargoWeight;
   \   000000C8   0010A0E3           MOV      R1,#+0
   \   000000CC   6E208DE2           ADD      R2,SP,#+110
   \                     ??SendData_7:
   \   000000D0   593F80E2           ADD      R3,R0,#+356
   \   000000D4   0330D1E7           LDRB     R3,[R1, +R3]
   \   000000D8   0230C1E7           STRB     R3,[R1, +R2]
   \   000000DC   011081E2           ADD      R1,R1,#+1
   \   000000E0   040051E3           CMP      R1,#+4
   \   000000E4   F9FFFFBA           BLT      ??SendData_7
   1700                      Cmd.Data.BallastVolume      = BallastVolume;
   \   000000E8   0010A0E3           MOV      R1,#+0
   \   000000EC   72208DE2           ADD      R2,SP,#+114
   \                     ??SendData_8:
   \   000000F0   533F80E2           ADD      R3,R0,#+332
   \   000000F4   0330D1E7           LDRB     R3,[R1, +R3]
   \   000000F8   0230C1E7           STRB     R3,[R1, +R2]
   \   000000FC   011081E2           ADD      R1,R1,#+1
   \   00000100   040051E3           CMP      R1,#+4
   \   00000104   F9FFFFBA           BLT      ??SendData_8
   1701                      Cmd.Data.BallastWeight      = BallastWeight;
   \   00000108   0010A0E3           MOV      R1,#+0
   \   0000010C   76208DE2           ADD      R2,SP,#+118
   \                     ??SendData_9:
   \   00000110   5A3F80E2           ADD      R3,R0,#+360
   \   00000114   0330D1E7           LDRB     R3,[R1, +R3]
   \   00000118   0230C1E7           STRB     R3,[R1, +R2]
   \   0000011C   011081E2           ADD      R1,R1,#+1
   \   00000120   040051E3           CMP      R1,#+4
   \   00000124   F9FFFFBA           BLT      ??SendData_9
   1702                      Cmd.Data.HeavyFuelVolume    = HeavyFuelVolume;
   \   00000128   0010A0E3           MOV      R1,#+0
   \   0000012C   7A208DE2           ADD      R2,SP,#+122
   \                     ??SendData_10:
   \   00000130   543F80E2           ADD      R3,R0,#+336
   \   00000134   0330D1E7           LDRB     R3,[R1, +R3]
   \   00000138   0230C1E7           STRB     R3,[R1, +R2]
   \   0000013C   011081E2           ADD      R1,R1,#+1
   \   00000140   040051E3           CMP      R1,#+4
   \   00000144   F9FFFFBA           BLT      ??SendData_10
   1703                      Cmd.Data.HeavyFuelWeight    = HeavyFuelWeight;
   \   00000148   0010A0E3           MOV      R1,#+0
   \   0000014C   7E208DE2           ADD      R2,SP,#+126
   \                     ??SendData_11:
   \   00000150   5B3F80E2           ADD      R3,R0,#+364
   \   00000154   0330D1E7           LDRB     R3,[R1, +R3]
   \   00000158   0230C1E7           STRB     R3,[R1, +R2]
   \   0000015C   011081E2           ADD      R1,R1,#+1
   \   00000160   040051E3           CMP      R1,#+4
   \   00000164   F9FFFFBA           BLT      ??SendData_11
   1704                      Cmd.Data.DieselOilVolume    = DieselOilVolume;
   \   00000168   0010A0E3           MOV      R1,#+0
   \   0000016C   82208DE2           ADD      R2,SP,#+130
   \                     ??SendData_12:
   \   00000170   553F80E2           ADD      R3,R0,#+340
   \   00000174   0330D1E7           LDRB     R3,[R1, +R3]
   \   00000178   0230C1E7           STRB     R3,[R1, +R2]
   \   0000017C   011081E2           ADD      R1,R1,#+1
   \   00000180   040051E3           CMP      R1,#+4
   \   00000184   F9FFFFBA           BLT      ??SendData_12
   1705                      Cmd.Data.DieselOilWeight    = DieselOilWeight;
   \   00000188   0010A0E3           MOV      R1,#+0
   \   0000018C   86208DE2           ADD      R2,SP,#+134
   \                     ??SendData_13:
   \   00000190   5C3F80E2           ADD      R3,R0,#+368
   \   00000194   0330D1E7           LDRB     R3,[R1, +R3]
   \   00000198   0230C1E7           STRB     R3,[R1, +R2]
   \   0000019C   011081E2           ADD      R1,R1,#+1
   \   000001A0   040051E3           CMP      R1,#+4
   \   000001A4   F9FFFFBA           BLT      ??SendData_13
   1706                      Cmd.Data.LubricantsVolume   = LubricantsVolume;
   \   000001A8   0010A0E3           MOV      R1,#+0
   \   000001AC   8A208DE2           ADD      R2,SP,#+138
   \                     ??SendData_14:
   \   000001B0   563F80E2           ADD      R3,R0,#+344
   \   000001B4   0330D1E7           LDRB     R3,[R1, +R3]
   \   000001B8   0230C1E7           STRB     R3,[R1, +R2]
   \   000001BC   011081E2           ADD      R1,R1,#+1
   \   000001C0   040051E3           CMP      R1,#+4
   \   000001C4   F9FFFFBA           BLT      ??SendData_14
   1707                      Cmd.Data.LubricantsWeight   = LubricantsWeight;
   \   000001C8   0010A0E3           MOV      R1,#+0
   \   000001CC   8E208DE2           ADD      R2,SP,#+142
   \                     ??SendData_15:
   \   000001D0   5D3F80E2           ADD      R3,R0,#+372
   \   000001D4   0330D1E7           LDRB     R3,[R1, +R3]
   \   000001D8   0230C1E7           STRB     R3,[R1, +R2]
   \   000001DC   011081E2           ADD      R1,R1,#+1
   \   000001E0   040051E3           CMP      R1,#+4
   \   000001E4   F9FFFFBA           BLT      ??SendData_15
   1708                      Cmd.Data.FreshWaterVolume   = FreshWaterVolume;
   \   000001E8   0010A0E3           MOV      R1,#+0
   \   000001EC   92208DE2           ADD      R2,SP,#+146
   \                     ??SendData_16:
   \   000001F0   573F80E2           ADD      R3,R0,#+348
   \   000001F4   0330D1E7           LDRB     R3,[R1, +R3]
   \   000001F8   0230C1E7           STRB     R3,[R1, +R2]
   \   000001FC   011081E2           ADD      R1,R1,#+1
   \   00000200   040051E3           CMP      R1,#+4
   \   00000204   F9FFFFBA           BLT      ??SendData_16
   1709                      Cmd.Data.FreshWaterWeight   = FreshWaterWeight;
   \   00000208   0010A0E3           MOV      R1,#+0
   \   0000020C   96208DE2           ADD      R2,SP,#+150
   \                     ??SendData_17:
   \   00000210   5E3F80E2           ADD      R3,R0,#+376
   \   00000214   0330D1E7           LDRB     R3,[R1, +R3]
   \   00000218   0230C1E7           STRB     R3,[R1, +R2]
   \   0000021C   011081E2           ADD      R1,R1,#+1
   \   00000220   040051E3           CMP      R1,#+4
   \   00000224   F9FFFFBA           BLT      ??SendData_17
   1710                      Cmd.Data.MiscVolume         = MiscVolume;
   \   00000228   0010A0E3           MOV      R1,#+0
   \   0000022C   9A208DE2           ADD      R2,SP,#+154
   \                     ??SendData_18:
   \   00000230   583F80E2           ADD      R3,R0,#+352
   \   00000234   0330D1E7           LDRB     R3,[R1, +R3]
   \   00000238   0230C1E7           STRB     R3,[R1, +R2]
   \   0000023C   011081E2           ADD      R1,R1,#+1
   \   00000240   040051E3           CMP      R1,#+4
   \   00000244   F9FFFFBA           BLT      ??SendData_18
   1711                      Cmd.Data.MiscWeight         = MiscWeight;
   \   00000248   0010A0E3           MOV      R1,#+0
   \   0000024C   9E208DE2           ADD      R2,SP,#+158
   \                     ??SendData_19:
   \   00000250   5F3F80E2           ADD      R3,R0,#+380
   \   00000254   0330D1E7           LDRB     R3,[R1, +R3]
   \   00000258   0230C1E7           STRB     R3,[R1, +R2]
   \   0000025C   011081E2           ADD      R1,R1,#+1
   \   00000260   040051E3           CMP      R1,#+4
   \   00000264   F9FFFFBA           BLT      ??SendData_19
   1712          
   1713                      bool sent = ANPRO10SendNormal(&Cmd);
   1714                      if (!sent) {
   \   00000268   54008DE2           ADD      R0,SP,#+84
   \   0000026C   ........           _BLF     ??ANPRO10SendNormal,??ANPRO10SendNormal??rA
   \   00000270   000050E3           CMP      R0,#+0
   \   00000274   0100001A           BNE      ??SendData_20
   1715                          ErrorStatus =  E_QUEUE_FULL;
   \                     ??SendData_21:
   \   00000278   0300A0E3           MOV      R0,#+3
   \   0000027C   970000EA           B        ??SendData_22
   1716                      } else {
   1717                          ErrorStatus =  E_OK;
   \                     ??SendData_20:
   \   00000280   0000A0E3           MOV      R0,#+0
   \   00000284   950000EA           B        ??SendData_22
   1718                      }
   1719                  }
   1720                  break;
   1721              case CMD_GENERIC_STATIC_DATA:
   1722                  {
   1723                      QueueANPRO10_COMMAND_2721 Cmd;
   1724          
   1725                      Cmd.TxInfo.Port             = NULL;
   \                     ??SendData_2:
   \   00000288   00408DE5           STR      R4,[SP, #+0]
   1726                      Cmd.TxInfo.rxAddr           = DEVICE_BROADCAST_ADDR;
   \   0000028C   04C0CDE5           STRB     R12,[SP, #+4]
   1727                      Cmd.TxInfo.rxId             = DEVICE_BROADCAST_TXU;
   \   00000290   0530CDE5           STRB     R3,[SP, #+5]
   1728                      Cmd.Data.ObjectId           = IDNumber;
   \   00000294   9C0090E5           LDR      R0,[R0, #+156]
   1729                      Cmd.Data.ndb                = sizeof(Cmd) - sizeof(QueueANPRO10_CommandHeading);
   \   00000298   4A10A0E3           MOV      R1,#+74
   \   0000029C   0A00CDE5           STRB     R0,[SP, #+10]
   \   000002A0   2004A0E1           LSR      R0,R0,#+8
   \   000002A4   0B00CDE5           STRB     R0,[SP, #+11]
   \   000002A8   2004A0E1           LSR      R0,R0,#+8
   \   000002AC   0C00CDE5           STRB     R0,[SP, #+12]
   \   000002B0   2004A0E1           LSR      R0,R0,#+8
   \   000002B4   0D00CDE5           STRB     R0,[SP, #+13]
   \   000002B8   B810CDE1           STRH     R1,[SP, #+8]
   1730                      Cmd.Data.CommandNo          = CMD_GENERIC_STATIC_DATA;
   \   000002BC   6610A0E3           MOV      R1,#+102
   \   000002C0   B610CDE1           STRH     R1,[SP, #+6]
   1731                      Cmd.Data.ManualTrim         = ManualTrim;
   \   000002C4   0000A0E3           MOV      R0,#+0
   \   000002C8   0E108DE2           ADD      R1,SP,#+14
   \                     ??SendData_23:
   \   000002CC   023080E0           ADD      R3,R0,R2
   \   000002D0   1C30D3E5           LDRB     R3,[R3, #+28]
   \   000002D4   0130C0E7           STRB     R3,[R0, +R1]
   \   000002D8   010080E2           ADD      R0,R0,#+1
   \   000002DC   040050E3           CMP      R0,#+4
   \   000002E0   F9FFFFBA           BLT      ??SendData_23
   1732                      Cmd.Data.ManualList         = ManualList;
   \   000002E4   0000A0E3           MOV      R0,#+0
   \   000002E8   12108DE2           ADD      R1,SP,#+18
   \                     ??SendData_24:
   \   000002EC   023080E0           ADD      R3,R0,R2
   \   000002F0   2030D3E5           LDRB     R3,[R3, #+32]
   \   000002F4   0130C0E7           STRB     R3,[R0, +R1]
   \   000002F8   010080E2           ADD      R0,R0,#+1
   \   000002FC   040050E3           CMP      R0,#+4
   \   00000300   F9FFFFBA           BLT      ??SendData_24
   1733                      Cmd.Data.BallastDensity     = BallastDensity;
   \   00000304   0000A0E3           MOV      R0,#+0
   \   00000308   16108DE2           ADD      R1,SP,#+22
   \                     ??SendData_25:
   \   0000030C   023080E0           ADD      R3,R0,R2
   \   00000310   2C30D3E5           LDRB     R3,[R3, #+44]
   \   00000314   0130C0E7           STRB     R3,[R0, +R1]
   \   00000318   010080E2           ADD      R0,R0,#+1
   \   0000031C   040050E3           CMP      R0,#+4
   \   00000320   F9FFFFBA           BLT      ??SendData_25
   1734                      Cmd.Data.SeaWaterDensity    = SeaWaterDensity;
   \   00000324   0000A0E3           MOV      R0,#+0
   \   00000328   1A108DE2           ADD      R1,SP,#+26
   \                     ??SendData_26:
   \   0000032C   023080E0           ADD      R3,R0,R2
   \   00000330   3030D3E5           LDRB     R3,[R3, #+48]
   \   00000334   0130C0E7           STRB     R3,[R0, +R1]
   \   00000338   010080E2           ADD      R0,R0,#+1
   \   0000033C   040050E3           CMP      R0,#+4
   \   00000340   F9FFFFBA           BLT      ??SendData_26
   1735                      Cmd.Data.FreshWaterDensity  = FreshWaterDensity;
   \   00000344   0000A0E3           MOV      R0,#+0
   \   00000348   1E108DE2           ADD      R1,SP,#+30
   \                     ??SendData_27:
   \   0000034C   023080E0           ADD      R3,R0,R2
   \   00000350   3430D3E5           LDRB     R3,[R3, #+52]
   \   00000354   0130C0E7           STRB     R3,[R0, +R1]
   \   00000358   010080E2           ADD      R0,R0,#+1
   \   0000035C   040050E3           CMP      R0,#+4
   \   00000360   F9FFFFBA           BLT      ??SendData_27
   1736                      Cmd.Data.HeavyFuelDensity   = HeavyFuelDensity;
   \   00000364   0000A0E3           MOV      R0,#+0
   \   00000368   22108DE2           ADD      R1,SP,#+34
   \                     ??SendData_28:
   \   0000036C   023080E0           ADD      R3,R0,R2
   \   00000370   3830D3E5           LDRB     R3,[R3, #+56]
   \   00000374   0130C0E7           STRB     R3,[R0, +R1]
   \   00000378   010080E2           ADD      R0,R0,#+1
   \   0000037C   040050E3           CMP      R0,#+4
   \   00000380   F9FFFFBA           BLT      ??SendData_28
   1737                      Cmd.Data.DieselDensity      = DieselDensity;
   \   00000384   0000A0E3           MOV      R0,#+0
   \   00000388   26108DE2           ADD      R1,SP,#+38
   \                     ??SendData_29:
   \   0000038C   023080E0           ADD      R3,R0,R2
   \   00000390   3C30D3E5           LDRB     R3,[R3, #+60]
   \   00000394   0130C0E7           STRB     R3,[R0, +R1]
   \   00000398   010080E2           ADD      R0,R0,#+1
   \   0000039C   040050E3           CMP      R0,#+4
   \   000003A0   F9FFFFBA           BLT      ??SendData_29
   1738                      Cmd.Data.LubricantsDensity  = LubricantsDensity;
   \   000003A4   0000A0E3           MOV      R0,#+0
   \   000003A8   2A108DE2           ADD      R1,SP,#+42
   \                     ??SendData_30:
   \   000003AC   023080E0           ADD      R3,R0,R2
   \   000003B0   4030D3E5           LDRB     R3,[R3, #+64]
   \   000003B4   0130C0E7           STRB     R3,[R0, +R1]
   \   000003B8   010080E2           ADD      R0,R0,#+1
   \   000003BC   040050E3           CMP      R0,#+4
   \   000003C0   F9FFFFBA           BLT      ??SendData_30
   1739                      Cmd.Data.SeaWaterTemp       = SeaWaterTemp;
   \   000003C4   0000A0E3           MOV      R0,#+0
   \   000003C8   2E108DE2           ADD      R1,SP,#+46
   \                     ??SendData_31:
   \   000003CC   023080E0           ADD      R3,R0,R2
   \   000003D0   4430D3E5           LDRB     R3,[R3, #+68]
   \   000003D4   0130C0E7           STRB     R3,[R0, +R1]
   \   000003D8   010080E2           ADD      R0,R0,#+1
   \   000003DC   040050E3           CMP      R0,#+4
   \   000003E0   F9FFFFBA           BLT      ??SendData_31
   1740                      Cmd.Data.AmbientTemp    = AmbientTemp;
   \   000003E4   481092E5           LDR      R1,[R2, #+72]
   1741                      Cmd.Data.TrimSource         = TrimSource;
   \   000003E8   140092E5           LDR      R0,[R2, #+20]
   \   000003EC   50108DE5           STR      R1,[SP, #+80]
   1742                      Cmd.Data.ListSource         = ListSource;
   1743          
   1744                      Cmd.Data.Logtime            = LogTime;
   1745                      Cmd.Data.LogToFile          = LogToFile;
   \   000003F0   5910D2E5           LDRB     R1,[R2, #+89]
   \   000003F4   3200CDE5           STRB     R0,[SP, #+50]
   \   000003F8   2004A0E1           LSR      R0,R0,#+8
   \   000003FC   4810CDE5           STRB     R1,[SP, #+72]
   1746                      Cmd.Data.LogAlarms          = LogAlarms;
   \   00000400   5A10D2E5           LDRB     R1,[R2, #+90]
   \   00000404   3300CDE5           STRB     R0,[SP, #+51]
   \   00000408   2004A0E1           LSR      R0,R0,#+8
   \   0000040C   3E10CDE5           STRB     R1,[SP, #+62]
   1747                      Cmd.Data.LogBallastExchange = LogBallastExchange;
   \   00000410   5B10D2E5           LDRB     R1,[R2, #+91]
   \   00000414   3400CDE5           STRB     R0,[SP, #+52]
   \   00000418   2004A0E1           LSR      R0,R0,#+8
   \   0000041C   3F10CDE5           STRB     R1,[SP, #+63]
   1748                      Cmd.Data.LogCargo           = LogCargo;
   \   00000420   5C10D2E5           LDRB     R1,[R2, #+92]
   \   00000424   3500CDE5           STRB     R0,[SP, #+53]
   \   00000428   180092E5           LDR      R0,[R2, #+24]
   \   0000042C   4010CDE5           STRB     R1,[SP, #+64]
   1749                      Cmd.Data.LogService         = LogService;
   \   00000430   5D10D2E5           LDRB     R1,[R2, #+93]
   \   00000434   3600CDE5           STRB     R0,[SP, #+54]
   \   00000438   2004A0E1           LSR      R0,R0,#+8
   \   0000043C   4110CDE5           STRB     R1,[SP, #+65]
   1750                      Cmd.Data.LogTemperature     = LogTemperature;
   \   00000440   5E10D2E5           LDRB     R1,[R2, #+94]
   \   00000444   3700CDE5           STRB     R0,[SP, #+55]
   \   00000448   2004A0E1           LSR      R0,R0,#+8
   \   0000044C   4210CDE5           STRB     R1,[SP, #+66]
   1751                      Cmd.Data.LogTankPressure    = LogTankPressure;
   \   00000450   5F10D2E5           LDRB     R1,[R2, #+95]
   \   00000454   3800CDE5           STRB     R0,[SP, #+56]
   \   00000458   2004A0E1           LSR      R0,R0,#+8
   \   0000045C   4310CDE5           STRB     R1,[SP, #+67]
   1752                      Cmd.Data.CurrentLanguage    = CurrentLanguage;
   \   00000460   0C1092E5           LDR      R1,[R2, #+12]
   \   00000464   3900CDE5           STRB     R0,[SP, #+57]
   \   00000468   540092E5           LDR      R0,[R2, #+84]
   \   0000046C   44108DE5           STR      R1,[SP, #+68]
   1753                      Cmd.Data.ReceiveWeightVolume = ReceiveWeightVolume;
   \   00000470   6110D2E5           LDRB     R1,[R2, #+97]
   \   00000474   3A00CDE5           STRB     R0,[SP, #+58]
   \   00000478   2004A0E1           LSR      R0,R0,#+8
   \   0000047C   3B00CDE5           STRB     R0,[SP, #+59]
   \   00000480   2004A0E1           LSR      R0,R0,#+8
   \   00000484   3C00CDE5           STRB     R0,[SP, #+60]
   \   00000488   2004A0E1           LSR      R0,R0,#+8
   \   0000048C   3D00CDE5           STRB     R0,[SP, #+61]
   \   00000490   4910CDE5           STRB     R1,[SP, #+73]
   1754                      Cmd.Data.Latitude           = Latitude;
   \   00000494   0000A0E3           MOV      R0,#+0
   \   00000498   4A108DE2           ADD      R1,SP,#+74
   \                     ??SendData_32:
   \   0000049C   023080E0           ADD      R3,R0,R2
   \   000004A0   0430D3E5           LDRB     R3,[R3, #+4]
   \   000004A4   0130C0E7           STRB     R3,[R0, +R1]
   \   000004A8   010080E2           ADD      R0,R0,#+1
   \   000004AC   040050E3           CMP      R0,#+4
   \   000004B0   F9FFFFBA           BLT      ??SendData_32
   1755                      Cmd.Data.HasConfigWritePermission = HasConfigWritePermission;
   \   000004B4   5810D2E5           LDRB     R1,[R2, #+88]
   1756                      Cmd.Data.AlarmSoundSleep    = AlarmBasic::AlarmSound;
   1757                      bool sent = ANPRO10SendNormal(&Cmd);
   1758                      if (!sent) {
   \   000004B8   0D00A0E1           MOV      R0,SP
   \   000004BC   4E10CDE5           STRB     R1,[SP, #+78]
   \   000004C0   ........           LDR      R1,??DataTable55  ;; ??AlarmSound
   \   000004C4   0010D1E5           LDRB     R1,[R1, #+0]
   \   000004C8   4F10CDE5           STRB     R1,[SP, #+79]
   \   000004CC   ........           _BLF     ??ANPRO10SendNormal,??ANPRO10SendNormal??rA
   \   000004D0   000050E3           CMP      R0,#+0
   \   000004D4   67FFFF0A           BEQ      ??SendData_21
   1759                          ErrorStatus =  E_QUEUE_FULL;
   1760                      } else {
   1761                          ErrorStatus =  E_OK;
   \   000004D8   68FFFFEA           B        ??SendData_20
   1762                      }
   1763                  }
   1764                  break;
   1765              default:
   1766                  ErrorStatus =  E_UNKNOWN_COMMAND;
   \                     ??SendData_3:
   \   000004DC   0100A0E3           MOV      R0,#+1
   1767                  break;
   1768              }
   1769              return (ErrorStatus);
   \                     ??SendData_22:
   \   000004E0   A4D08DE2           ADD      SP,SP,#+164
   \   000004E4   ........           B        ?Subroutine29
   1770          }
   1771          

   \                                 In segment CODE, align 4, keep-with-next
   1772          TankState PROSystemData::GetOpModeState(int ValueKey) {
   \                     ??GetOpModeState:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   3CD04DE2           SUB      SP,SP,#+60
   1773              TankState tmpState = tUndefined;
   \   00000008   0440A0E3           MOV      R4,#+4
   1774              switch (ValueKey) {
   \   0000000C   C71041E2           SUB      R1,R1,#+199
   \   00000010   501E41E2           SUB      R1,R1,#+1280
   \   00000014   050051E3           CMP      R1,#+5
   \   00000018   3900008A           BHI      ??GetOpModeState_2
   \   0000001C   010F8FE2           ADR      R0,??GetOpModeState_1
   \   00000020   0100D0E7           LDRB     R0,[R0, R1]
   \   00000024   00F18FE0           ADD      PC,PC,R0, LSL #+2
   \                     ??GetOpModeState_1:
   \   00000028   01040E18           DC8      +1,+4,+14,+24
   \   0000002C   222C0000           DC8      +34,+44,+0,+0
   1775              case SVT_TANK_STATE_STR     :
   1776                  tmpState  = PROXRefObject::GetStateAll();
   \                     ??GetOpModeState_3:
   \   00000030   ........           _BLF     ??GetStateAll,??GetStateAll??rA
   \   00000034   0040A0E1           MOV      R4,R0
   \   00000038   310000EA           B        ??GetOpModeState_2
   1777                  break;
   1778              case SVT_TANK_STATE_STR_CGO :
   1779                  tmpState = PROXRefObject::VectorGetState(PROCargoTank::ObjVector);
   \                     ??GetOpModeState_4:
   \   0000003C   0D00A0E1           MOV      R0,SP
   \   00000040   ........           _BLF     ??_Zero,??_Zero??rA
   \   00000044   ........           LDR      R1,??DataTable61  ;; ??ObjVector
   \   00000048   0D00A0E1           MOV      R0,SP
   \   0000004C   ........           _BLF     ??_Assign,??_Assign??rA
   \   00000050   0D00A0E1           MOV      R0,SP
   \   00000054   ........           _BLF     ??VectorGetState,??VectorGetState??rA
   \   00000058   0040A0E1           MOV      R4,R0
   \   0000005C   0D00A0E1           MOV      R0,SP
   \   00000060   260000EA           B        ??GetOpModeState_5
   1780                  break;
   1781              case SVT_TANK_STATE_STR_BAL :
   1782                  tmpState = PROXRefObject::VectorGetState(PROBallastTank::ObjVector);
   \                     ??GetOpModeState_6:
   \   00000064   0C008DE2           ADD      R0,SP,#+12
   \   00000068   ........           _BLF     ??_Zero,??_Zero??rA
   \   0000006C   ........           LDR      R1,??DataTable62  ;; ??ObjVector_1
   \   00000070   0C008DE2           ADD      R0,SP,#+12
   \   00000074   ........           _BLF     ??_Assign,??_Assign??rA
   \   00000078   0C008DE2           ADD      R0,SP,#+12
   \   0000007C   ........           _BLF     ??VectorGetState,??VectorGetState??rA
   \   00000080   0040A0E1           MOV      R4,R0
   \   00000084   0C008DE2           ADD      R0,SP,#+12
   \   00000088   1C0000EA           B        ??GetOpModeState_5
   1783                  break;
   1784              case SVT_TANK_STATE_STR_SER :
   1785                  tmpState = PROXRefObject::VectorGetState(PROServiceTank::ObjVector);
   \                     ??GetOpModeState_7:
   \   0000008C   18008DE2           ADD      R0,SP,#+24
   \   00000090   ........           _BLF     ??_Zero,??_Zero??rA
   \   00000094   ........           LDR      R1,??DataTable63  ;; ??ObjVector_2
   \   00000098   18008DE2           ADD      R0,SP,#+24
   \   0000009C   ........           _BLF     ??_Assign,??_Assign??rA
   \   000000A0   18008DE2           ADD      R0,SP,#+24
   \   000000A4   ........           _BLF     ??VectorGetState,??VectorGetState??rA
   \   000000A8   0040A0E1           MOV      R4,R0
   \   000000AC   18008DE2           ADD      R0,SP,#+24
   \   000000B0   120000EA           B        ??GetOpModeState_5
   1786                  break;
   1787              case SVT_TANK_STATE_STR_LSW :
   1788                  tmpState = PROXRefObject::VectorGetState(PROLevelSwitch::ObjVector);
   \                     ??GetOpModeState_8:
   \   000000B4   24008DE2           ADD      R0,SP,#+36
   \   000000B8   ........           _BLF     ??_Zero,??_Zero??rA
   \   000000BC   ........           LDR      R1,??DataTable64  ;; ??ObjVector_3
   \   000000C0   24008DE2           ADD      R0,SP,#+36
   \   000000C4   ........           _BLF     ??_Assign,??_Assign??rA
   \   000000C8   24008DE2           ADD      R0,SP,#+36
   \   000000CC   ........           _BLF     ??VectorGetState,??VectorGetState??rA
   \   000000D0   0040A0E1           MOV      R4,R0
   \   000000D4   24008DE2           ADD      R0,SP,#+36
   \   000000D8   080000EA           B        ??GetOpModeState_5
   1789                  break;
   1790              case SVT_TANK_STATE_STR_PRE :
   1791                  tmpState = PROXRefObject::VectorGetState(PROTankPressure::ObjVector);
   \                     ??GetOpModeState_9:
   \   000000DC   30008DE2           ADD      R0,SP,#+48
   \   000000E0   ........           _BLF     ??_Zero,??_Zero??rA
   \   000000E4   ........           LDR      R1,??DataTable65  ;; ??ObjVector_4
   \   000000E8   30008DE2           ADD      R0,SP,#+48
   \   000000EC   ........           _BLF     ??_Assign,??_Assign??rA
   \   000000F0   30008DE2           ADD      R0,SP,#+48
   \   000000F4   ........           _BLF     ??VectorGetState,??VectorGetState??rA
   \   000000F8   0040A0E1           MOV      R4,R0
   \   000000FC   30008DE2           ADD      R0,SP,#+48
   \                     ??GetOpModeState_5:
   \   00000100   ........           _BLF     ??_Tidy,??_Tidy??rA_1
   1792                  break;
   1793              }
   1794              return tmpState;
   \                     ??GetOpModeState_2:
   \   00000104   0400A0E1           MOV      R0,R4
   \   00000108   3CD08DE2           ADD      SP,SP,#+60
   \   0000010C   ........           B        ?Subroutine29
   1795          }
   1796          
   1797          

   \                                 In segment CODE, align 4, keep-with-next
   1798          void PROSystemData::SetOpModeState(TankState newState, int ValueKey, int Index) {
   \                     ??SetOpModeState:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   78D04DE2           SUB      SP,SP,#+120
   \   00000008   0140A0E1           MOV      R4,R1
   \   0000000C   0250A0E1           MOV      R5,R2
   \   00000010   0300A0E1           MOV      R0,R3
   1799              if (newState != tUndefined) {
   \   00000014   040054E3           CMP      R4,#+4
   \   00000018   8100000A           BEQ      ??SetOpModeState_3
   1800                  if (Index) {
   \   0000001C   000050E3           CMP      R0,#+0
   \   00000020   4400000A           BEQ      ??SetOpModeState_4
   1801                      PROTanksystemUnit *UnitPtr = (PROTanksystemUnit *)FindObject(Index);
   \   00000024   ........           _BLF     ??FindObject,??FindObject??rA
   \   00000028   0060B0E1           MOVS     R6,R0
   1802                      if (UnitPtr) {
   \   0000002C   7C00000A           BEQ      ??SetOpModeState_3
   1803                          switch (ValueKey) {
   \   00000030   C75045E2           SUB      R5,R5,#+199
   \   00000034   505E45E2           SUB      R5,R5,#+1280
   \   00000038   050055E3           CMP      R5,#+5
   \   0000003C   7800008A           BHI      ??SetOpModeState_3
   \   00000040   010F8FE2           ADR      R0,??SetOpModeState_1
   \   00000044   0500D0E7           LDRB     R0,[R0, R5]
   \   00000048   00F18FE0           ADD      PC,PC,R0, LSL #+2
   \                     ??SetOpModeState_1:
   \   0000004C   01040E18           DC8      +1,+4,+14,+24
   \   00000050   222E0000           DC8      +34,+46,+0,+0
   1804                          case SVT_TANK_STATE_STR:
   1805                              PROXRefObject::SetStateAll(newState);
   \                     ??SetOpModeState_5:
   \   00000054   0400A0E1           MOV      R0,R4
   \   00000058   ........           _BLF     ??SetStateAll,??SetStateAll??rA
   \   0000005C   700000EA           B        ??SetOpModeState_3
   1806                              break;
   1807                          case SVT_TANK_STATE_STR_CGO:
   1808                              PROXRefObject::VectorSetState(UnitPtr->PROCargoTankVector, newState);
   \                     ??SetOpModeState_6:
   \   00000060   0D00A0E1           MOV      R0,SP
   \   00000064   ........           _BLF     ??_Zero,??_Zero??rA
   \   00000068   E71F86E2           ADD      R1,R6,#+924
   \   0000006C   0D00A0E1           MOV      R0,SP
   \   00000070   ........           _BLF     ??_Assign,??_Assign??rA
   \   00000074   0410A0E1           MOV      R1,R4
   \   00000078   0D00A0E1           MOV      R0,SP
   \   0000007C   ........           _BLF     ??VectorSetState,??VectorSetState??rA
   \   00000080   0D00A0E1           MOV      R0,SP
   \   00000084   650000EA           B        ??SetOpModeState_7
   1809                              break;
   1810                          case SVT_TANK_STATE_STR_BAL:
   1811                              PROXRefObject::VectorSetState(UnitPtr->PROBallastTankVector, newState);
   \                     ??SetOpModeState_8:
   \   00000088   0C008DE2           ADD      R0,SP,#+12
   \   0000008C   ........           _BLF     ??_Zero,??_Zero??rA
   \   00000090   EA1F86E2           ADD      R1,R6,#+936
   \   00000094   0C008DE2           ADD      R0,SP,#+12
   \   00000098   ........           _BLF     ??_Assign,??_Assign??rA
   \   0000009C   0410A0E1           MOV      R1,R4
   \   000000A0   0C008DE2           ADD      R0,SP,#+12
   \   000000A4   ........           _BLF     ??VectorSetState,??VectorSetState??rA
   \   000000A8   0C008DE2           ADD      R0,SP,#+12
   \   000000AC   5B0000EA           B        ??SetOpModeState_7
   1812                              break;
   1813                          case SVT_TANK_STATE_STR_SER:
   1814                              PROXRefObject::VectorSetState(UnitPtr->PROServiceTankVector, newState);
   \                     ??SetOpModeState_9:
   \   000000B0   18008DE2           ADD      R0,SP,#+24
   \   000000B4   ........           _BLF     ??_Zero,??_Zero??rA
   \   000000B8   ED1F86E2           ADD      R1,R6,#+948
   \   000000BC   18008DE2           ADD      R0,SP,#+24
   \   000000C0   ........           _BLF     ??_Assign,??_Assign??rA
   \   000000C4   0410A0E1           MOV      R1,R4
   \   000000C8   18008DE2           ADD      R0,SP,#+24
   \   000000CC   ........           _BLF     ??VectorSetState,??VectorSetState??rA
   \   000000D0   18008DE2           ADD      R0,SP,#+24
   \   000000D4   510000EA           B        ??SetOpModeState_7
   1815                              break;
   1816                          case SVT_TANK_STATE_STR_LSW:
   1817                              PROXRefObject::VectorSetState(UnitPtr->PROLevelSwitchVector, newState);
   \                     ??SetOpModeState_10:
   \   000000D8   24008DE2           ADD      R0,SP,#+36
   \   000000DC   ........           _BLF     ??_Zero,??_Zero??rA
   \   000000E0   3800A0E3           MOV      R0,#+56
   \   000000E4   400E80E3           ORR      R0,R0,#0x400
   \   000000E8   061080E0           ADD      R1,R0,R6
   \   000000EC   24008DE2           ADD      R0,SP,#+36
   \   000000F0   ........           _BLF     ??_Assign,??_Assign??rA
   \   000000F4   0410A0E1           MOV      R1,R4
   \   000000F8   24008DE2           ADD      R0,SP,#+36
   \   000000FC   ........           _BLF     ??VectorSetState,??VectorSetState??rA
   \   00000100   24008DE2           ADD      R0,SP,#+36
   \   00000104   450000EA           B        ??SetOpModeState_7
   1818                              break;
   1819                          case SVT_TANK_STATE_STR_PRE:
   1820                              PROXRefObject::VectorSetState(UnitPtr->PROTankPressureVector, newState);
   \                     ??SetOpModeState_11:
   \   00000108   30008DE2           ADD      R0,SP,#+48
   \   0000010C   ........           _BLF     ??_Zero,??_Zero??rA
   \   00000110   0800A0E3           MOV      R0,#+8
   \   00000114   400E80E3           ORR      R0,R0,#0x400
   \   00000118   061080E0           ADD      R1,R0,R6
   \   0000011C   30008DE2           ADD      R0,SP,#+48
   \   00000120   ........           _BLF     ??_Assign,??_Assign??rA
   \   00000124   0410A0E1           MOV      R1,R4
   \   00000128   30008DE2           ADD      R0,SP,#+48
   \   0000012C   ........           _BLF     ??VectorSetState,??VectorSetState??rA
   \   00000130   30008DE2           ADD      R0,SP,#+48
   \   00000134   390000EA           B        ??SetOpModeState_7
   1821                              break;
   1822                          }
   1823                      }
   1824                  } else {
   1825                      switch (ValueKey) {
   \                     ??SetOpModeState_4:
   \   00000138   C75045E2           SUB      R5,R5,#+199
   \   0000013C   505E45E2           SUB      R5,R5,#+1280
   \   00000140   050055E3           CMP      R5,#+5
   \   00000144   3600008A           BHI      ??SetOpModeState_3
   \   00000148   010F8FE2           ADR      R0,??SetOpModeState_2
   \   0000014C   D50090E1           LDRSB    R0,[R0, R5]
   \   00000150   00F18FE0           ADD      PC,PC,R0, LSL #+2
   \                     ??SetOpModeState_2:
   \   00000154   BF010B15           DC8      +191,+1,+11,+21
   \   00000158   1F290000           DC8      +31,+41,+0,+0
   1826                      case SVT_TANK_STATE_STR:
   1827                          PROXRefObject::SetStateAll(newState);
   1828                          break;
   1829                      case SVT_TANK_STATE_STR_CGO:
   1830                          PROXRefObject::VectorSetState(PROCargoTank::ObjVector, newState);
   \                     ??SetOpModeState_12:
   \   0000015C   3C008DE2           ADD      R0,SP,#+60
   \   00000160   ........           _BLF     ??_Zero,??_Zero??rA
   \   00000164   ........           LDR      R1,??DataTable61  ;; ??ObjVector
   \   00000168   3C008DE2           ADD      R0,SP,#+60
   \   0000016C   ........           _BLF     ??_Assign,??_Assign??rA
   \   00000170   0410A0E1           MOV      R1,R4
   \   00000174   3C008DE2           ADD      R0,SP,#+60
   \   00000178   ........           _BLF     ??VectorSetState,??VectorSetState??rA
   \   0000017C   3C008DE2           ADD      R0,SP,#+60
   \   00000180   260000EA           B        ??SetOpModeState_7
   1831                          break;
   1832                      case SVT_TANK_STATE_STR_BAL:
   1833                          PROXRefObject::VectorSetState(PROBallastTank::ObjVector, newState);
   \                     ??SetOpModeState_13:
   \   00000184   48008DE2           ADD      R0,SP,#+72
   \   00000188   ........           _BLF     ??_Zero,??_Zero??rA
   \   0000018C   ........           LDR      R1,??DataTable62  ;; ??ObjVector_1
   \   00000190   48008DE2           ADD      R0,SP,#+72
   \   00000194   ........           _BLF     ??_Assign,??_Assign??rA
   \   00000198   0410A0E1           MOV      R1,R4
   \   0000019C   48008DE2           ADD      R0,SP,#+72
   \   000001A0   ........           _BLF     ??VectorSetState,??VectorSetState??rA
   \   000001A4   48008DE2           ADD      R0,SP,#+72
   \   000001A8   1C0000EA           B        ??SetOpModeState_7
   1834                          break;
   1835                      case SVT_TANK_STATE_STR_SER:
   1836                          PROXRefObject::VectorSetState(PROServiceTank::ObjVector, newState);
   \                     ??SetOpModeState_14:
   \   000001AC   54008DE2           ADD      R0,SP,#+84
   \   000001B0   ........           _BLF     ??_Zero,??_Zero??rA
   \   000001B4   ........           LDR      R1,??DataTable63  ;; ??ObjVector_2
   \   000001B8   54008DE2           ADD      R0,SP,#+84
   \   000001BC   ........           _BLF     ??_Assign,??_Assign??rA
   \   000001C0   0410A0E1           MOV      R1,R4
   \   000001C4   54008DE2           ADD      R0,SP,#+84
   \   000001C8   ........           _BLF     ??VectorSetState,??VectorSetState??rA
   \   000001CC   54008DE2           ADD      R0,SP,#+84
   \   000001D0   120000EA           B        ??SetOpModeState_7
   1837                          break;
   1838                      case SVT_TANK_STATE_STR_LSW:
   1839                          PROXRefObject::VectorSetState(PROLevelSwitch::ObjVector, newState);
   \                     ??SetOpModeState_15:
   \   000001D4   60008DE2           ADD      R0,SP,#+96
   \   000001D8   ........           _BLF     ??_Zero,??_Zero??rA
   \   000001DC   ........           LDR      R1,??DataTable64  ;; ??ObjVector_3
   \   000001E0   60008DE2           ADD      R0,SP,#+96
   \   000001E4   ........           _BLF     ??_Assign,??_Assign??rA
   \   000001E8   0410A0E1           MOV      R1,R4
   \   000001EC   60008DE2           ADD      R0,SP,#+96
   \   000001F0   ........           _BLF     ??VectorSetState,??VectorSetState??rA
   \   000001F4   60008DE2           ADD      R0,SP,#+96
   \   000001F8   080000EA           B        ??SetOpModeState_7
   1840                          break;
   1841                      case SVT_TANK_STATE_STR_PRE:
   1842                          PROXRefObject::VectorSetState(PROTankPressure::ObjVector, newState);
   \                     ??SetOpModeState_16:
   \   000001FC   6C008DE2           ADD      R0,SP,#+108
   \   00000200   ........           _BLF     ??_Zero,??_Zero??rA
   \   00000204   ........           LDR      R1,??DataTable65  ;; ??ObjVector_4
   \   00000208   6C008DE2           ADD      R0,SP,#+108
   \   0000020C   ........           _BLF     ??_Assign,??_Assign??rA
   \   00000210   0410A0E1           MOV      R1,R4
   \   00000214   6C008DE2           ADD      R0,SP,#+108
   \   00000218   ........           _BLF     ??VectorSetState,??VectorSetState??rA
   \   0000021C   6C008DE2           ADD      R0,SP,#+108
   \                     ??SetOpModeState_7:
   \   00000220   ........           _BLF     ??_Tidy,??_Tidy??rA_1
   1843                          break;
   1844                      }
   1845                  }
   1846              }
   1847          }
   \                     ??SetOpModeState_3:
   \   00000224   78D08DE2           ADD      SP,SP,#+120
   \   00000228   ........           B        ?Subroutine27
   1848          

   \                                 In segment CODE, align 4, keep-with-next
   1849          int PROSystemData::LCWriteXML(char *StrBuf) {
   \                     ??LCWriteXML:
   \   00000000   F0402DE9           PUSH     {R4-R7,LR}
   1850              int  tmpPtr = sprintf(StrBuf, "\t<Packet>\r\n");
   \   00000004   D8509FE5           LDR      R5,??LCWriteXML_1  ;; `?<Constant "    </Packet>\\r\\n">`
   \   00000008   0060A0E1           MOV      R6,R0
   \   0000000C   0140A0E1           MOV      R4,R1
   \   00000010   AC1085E2           ADD      R1,R5,#+172
   \   00000014   0400A0E1           MOV      R0,R4
   \   00000018   ........           _BLF     sprintf,??sprintf??rA
   \   0000001C   0070A0E1           MOV      R7,R0
   1851              tmpPtr += sprintf(&StrBuf[tmpPtr], "\t\t<PacketID>SystemData</PacketID>\r\n");
   \   00000020   881085E2           ADD      R1,R5,#+136
   \   00000024   040087E0           ADD      R0,R7,R4
   \   00000028   ........           _BLF     sprintf,??sprintf??rA
   \   0000002C   077080E0           ADD      R7,R0,R7
   1852              tmpPtr += sprintf(&StrBuf[tmpPtr], "\t\t<TagID>%s</TagID>\r\n", TagName.c_str());
   \   00000030   600086E2           ADD      R0,R6,#+96
   \   00000034   181090E5           LDR      R1,[R0, #+24]
   1853              tmpPtr += sprintf(&StrBuf[tmpPtr], "\t\t<Trim>%0.1f</Trim>\r\n", TrimValue * RAD_FACTOR);
   \   00000038   ........           LDR      R6,??DataTable71  ;; ??TXUSystemData
   \   0000003C   100051E3           CMP      R1,#+16
   \   00000040   04209025           LDRCS    R2,[R0, #+4]
   \   00000044   701085E2           ADD      R1,R5,#+112
   \   00000048   04208032           ADDCC    R2,R0,#+4
   \   0000004C   040087E0           ADD      R0,R7,R4
   \   00000050   ........           _BLF     sprintf,??sprintf??rA
   \   00000054   077080E0           ADD      R7,R0,R7
   \   00000058   240096E5           LDR      R0,[R6, #+36]
   \   0000005C   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   00000060   ........           LDR      R2,??DataTable74  ;; 0x1a63c1f8
   \   00000064   ........           LDR      R3,??DataTable75  ;; 0x404ca5dc
   \   00000068   ........           _BLF     __dMul,??__dMul??rA
   \   0000006C   0020A0E1           MOV      R2,R0
   \   00000070   0130A0E1           MOV      R3,R1
   \   00000074   581085E2           ADD      R1,R5,#+88
   \   00000078   040087E0           ADD      R0,R7,R4
   \   0000007C   ........           _BLF     sprintf,??sprintf??rA
   \   00000080   077080E0           ADD      R7,R0,R7
   1854              tmpPtr += sprintf(&StrBuf[tmpPtr], "\t\t<List>%0.1f</List>\r\n", ListValue * RAD_FACTOR);
   \   00000084   280096E5           LDR      R0,[R6, #+40]
   \   00000088   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   0000008C   ........           LDR      R2,??DataTable74  ;; 0x1a63c1f8
   \   00000090   ........           LDR      R3,??DataTable75  ;; 0x404ca5dc
   \   00000094   ........           _BLF     __dMul,??__dMul??rA
   \   00000098   0020A0E1           MOV      R2,R0
   \   0000009C   0130A0E1           MOV      R3,R1
   \   000000A0   401085E2           ADD      R1,R5,#+64
   \   000000A4   040087E0           ADD      R0,R7,R4
   \   000000A8   ........           _BLF     sprintf,??sprintf??rA
   \   000000AC   077080E0           ADD      R7,R0,R7
   1855              tmpPtr += sprintf(&StrBuf[tmpPtr], "\t\t<SeaWaterDensity>%0.4f</SeaWaterDensity>\r\n", SeaWaterDensity);
   \   000000B0   300096E5           LDR      R0,[R6, #+48]
   \   000000B4   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   000000B8   0020A0E1           MOV      R2,R0
   \   000000BC   0130A0E1           MOV      R3,R1
   \   000000C0   101085E2           ADD      R1,R5,#+16
   \   000000C4   040087E0           ADD      R0,R7,R4
   \   000000C8   ........           _BLF     sprintf,??sprintf??rA
   \   000000CC   076080E0           ADD      R6,R0,R7
   1856              tmpPtr += sprintf(&StrBuf[tmpPtr], "\t</Packet>\r\n");
   \   000000D0   0510A0E1           MOV      R1,R5
   \   000000D4   040086E0           ADD      R0,R6,R4
   \   000000D8   ........           _BLF     sprintf,??sprintf??rA
   \   000000DC   060080E0           ADD      R0,R0,R6
   1857              return tmpPtr;
   \   000000E0   ........           B        ?Subroutine30
   \                     ??LCWriteXML_1:
   \   000000E4   ........           DC32     `?<Constant "  </Packet>\\r\\n">`
   1858          }
   1859          

   \                                 In segment CODE, align 4, keep-with-next
   1860          void PROSystemData::InputLatitude(float NewLatitude) {
   1861              Latitude        = fabs(NewLatitude);                    // NB! Also store Latitude
   \                     ??InputLatitude:
   \   00000000   ........           LDR      R0,??DataTable71  ;; ??TXUSystemData
   \   00000004   F0412DE9           PUSH     {R4-R8,LR}
   1862              const double Ge = 9.780318;
   1863              const double a  = 0.0053024;
   1864              const double b  = -0.0000059;
   1865              double       G  = Ge * (1 + a * sqr(sin(Latitude / RAD_FACTOR)) + b * sqr(sin(2 * Latitude / RAD_FACTOR)));
   1866              PROTank::GravityCorrection = float(G);
   \   00000008   CC809FE5           LDR      R8,??InputLatitude_1  ;; ??GravityCorrection
   \   0000000C   8014C1E3           BIC      R1,R1,#0x80000000
   \   00000010   041080E5           STR      R1,[R0, #+4]
   \   00000014   0160A0E1           MOV      R6,R1
   \   00000018   0600A0E1           MOV      R0,R6
   \   0000001C   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   00000020   ........           LDR      R2,??DataTable74  ;; 0x1a63c1f8
   \   00000024   ........           LDR      R3,??DataTable75  ;; 0x404ca5dc
   \   00000028   0070A0E3           MOV      R7,#+0
   \   0000002C   ........           _BLF     __dDiv,??__dDiv??rA
   \   00000030   0020A0E3           MOV      R2,#+0
   \   00000034   ........           _BLF     _Sin,??_Sin??rA
   \   00000038   0040A0E1           MOV      R4,R0
   \   0000003C   0150A0E1           MOV      R5,R1
   \   00000040   4004A0E3           MOV      R0,#+1073741824
   \   00000044   0610A0E1           MOV      R1,R6
   \   00000048   ........           _BLF     __fMul,??__fMul??rA
   \   0000004C   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   00000050   ........           LDR      R2,??DataTable74  ;; 0x1a63c1f8
   \   00000054   ........           LDR      R3,??DataTable75  ;; 0x404ca5dc
   \   00000058   ........           _BLF     __dDiv,??__dDiv??rA
   \   0000005C   0720A0E1           MOV      R2,R7
   \   00000060   ........           _BLF     _Sin,??_Sin??rA
   \   00000064   0020A0E1           MOV      R2,R0
   \   00000068   0130A0E1           MOV      R3,R1
   \   0000006C   ........           _BLF     __dMul,??__dMul??rA
   \   00000070   68209FE5           LDR      R2,??InputLatitude_1+0x4  ;; 0xffffffffa6a5f197
   \   00000074   68309FE5           LDR      R3,??InputLatitude_1+0x8  ;; 0xffffffffbed8bf13
   \   00000078   ........           _BLF     __dMul,??__dMul??rA
   \   0000007C   0060A0E1           MOV      R6,R0
   \   00000080   0170A0E1           MOV      R7,R1
   \   00000084   0420A0E1           MOV      R2,R4
   \   00000088   0530A0E1           MOV      R3,R5
   \   0000008C   0400A0E1           MOV      R0,R4
   \   00000090   0510A0E1           MOV      R1,R5
   \   00000094   ........           _BLF     __dMul,??__dMul??rA
   \   00000098   48209FE5           LDR      R2,??InputLatitude_1+0xC  ;; 0x2971e951
   \   0000009C   48309FE5           LDR      R3,??InputLatitude_1+0x10  ;; 0x3f75b7f8
   \   000000A0   ........           _BLF     __dMul,??__dMul??rA
   \   000000A4   0020A0E3           MOV      R2,#+0
   \   000000A8   C035A0E3           MOV      R3,#+805306368
   \   000000AC   FF3683E3           ORR      R3,R3,#0xFF00000
   \   000000B0   ........           _BLF     __dAdd,??__dAdd??rA
   \   000000B4   0620A0E1           MOV      R2,R6
   \   000000B8   0730A0E1           MOV      R3,R7
   \   000000BC   ........           _BLF     __dAdd,??__dAdd??rA
   \   000000C0   28209FE5           LDR      R2,??InputLatitude_1+0x14  ;; 0xffffffffd744f5d3
   \   000000C4   28309FE5           LDR      R3,??InputLatitude_1+0x18  ;; 0x40238f85
   \   000000C8   ........           _BLF     __dMul,??__dMul??rA
   \   000000CC   ........           _BLF     __doubleToFloat,??__doubleToFloat??rA
   \   000000D0   000088E5           STR      R0,[R8, #+0]
   1867          }
   \   000000D4   F041BDE8           POP      {R4-R8,LR}
   \   000000D8   1EFF2FE1           BX       LR               ;; return
   \                     ??InputLatitude_1:
   \   000000DC   ........           DC32     ??GravityCorrection
   \   000000E0   97F1A5A6           DC32     0xffffffffa6a5f197
   \   000000E4   13BFD8BE           DC32     0xffffffffbed8bf13
   \   000000E8   51E97129           DC32     0x2971e951
   \   000000EC   F8B7753F           DC32     0x3f75b7f8
   \   000000F0   D3F544D7           DC32     0xffffffffd744f5d3
   \   000000F4   858F2340           DC32     0x40238f85

   \                                 In segment DATA_ID, align 4, align-sorted
   \                     `?<Initializer for ServiceReportSystemValueList`:
   \   00000000   30010000ED00       DC32 304, 237, 1000, 404, 237, 1351, 460, 237, 1355, 461, 237, 1362
   \              0000E8030000
   \              94010000ED00
   \              000047050000
   \              CC010000ED00
   \              00004B050000
   \              CD010000ED00
   \              000052050000
   \   00000030   C0010000ED00       DC32 448, 237, 1530, 1097, 237, 1440, 1098, 237, 1439
   \              0000FA050000
   \              49040000ED00
   \              0000A0050000
   \              4A040000ED00
   \              00009F050000

   \                                 In segment DATA_ID, align 4, align-sorted
   \                     `?<Initializer for TXUSystemData>`:
   \   00000000   00000000           DC32 0H
   \                     `?<Initializer for Latitude>`:
   \   00000004   00004C42           DC32 424C0000H
   \                     `?<Initializer for CurrentUnitSystem>`:
   \   00000008   00000000           DC32 0
   \                     `?<Initializer for CurrentLanguage>`:
   \   0000000C   00000000           DC32 0
   \                     `?<Initializer for AlarmOffDelay>`:
   \   00000010   60EA0000           DC32 60000
   \                     `?<Initializer for TrimSource>`:
   \   00000014   DB200000           DC32 8411
   \                     `?<Initializer for ListSource>`:
   \   00000018   DB200000           DC32 8411
   \                     `?<Initializer for ManualTrim>`:
   \   0000001C   00000000           DC32 0H
   \                     `?<Initializer for ManualList>`:
   \   00000020   00000000           DC32 0H
   \                     `?<Initializer for TrimValue>`:
   \   00000024   00000000           DC32 0H
   \                     `?<Initializer for ListValue>`:
   \   00000028   00000000           DC32 0H
   \                     `?<Initializer for BallastDensity>`:
   \   0000002C   3333833F           DC32 3F833333H
   \                     `?<Initializer for SeaWaterDensity>`:
   \   00000030   3333833F           DC32 3F833333H
   \                     `?<Initializer for FreshWaterDensity>`:
   \   00000034   0000803F           DC32 3F800000H
   \                     `?<Initializer for HeavyFuelDensity>`:
   \   00000038   3333733F           DC32 3F733333H
   \                     `?<Initializer for DieselDensity>`:
   \   0000003C   52B85E3F           DC32 3F5EB852H
   \                     `?<Initializer for LubricantsDensity>`:
   \   00000040   1F856B3F           DC32 3F6B851FH
   \                     `?<Initializer for SeaWaterTemp>`:
   \   00000044   00007041           DC32 41700000H
   \                     `?<Initializer for AmbientTemp>`:
   \   00000048   00007041           DC32 41700000H
   \                     `?<Initializer for TimeFromGMT>`:
   \   0000004C   00000000           DC32 0
   \                     `?<Initializer for DaylightSaving>`:
   \   00000050   00000000           DC32 0
   \                     `?<Initializer for LogTime>`:
   \   00000054   00000000           DC32 0
   \                     `?<Initializer for HasConfigWritePermission>`:
   \   00000058   00                 DC8 0
   \                     `?<Initializer for LogToFile>`:
   \   00000059   00                 DC8 0
   \                     `?<Initializer for LogAlarms>`:
   \   0000005A   00                 DC8 0
   \                     `?<Initializer for LogBallastExchange>`:
   \   0000005B   00                 DC8 0
   \                     `?<Initializer for LogCargo>`:
   \   0000005C   00                 DC8 0
   \                     `?<Initializer for LogService>`:
   \   0000005D   00                 DC8 0
   \                     `?<Initializer for LogTemperature>`:
   \   0000005E   00                 DC8 0
   \                     `?<Initializer for LogTankPressure>`:
   \   0000005F   00                 DC8 0
   \                     `?<Initializer for PrinterOnThisTXU>`:
   \   00000060   00                 DC8 0
   \                     `?<Initializer for ReceiveWeightVolume>`:
   \   00000061   00                 DC8 0

   \                                 In segment DATA_ID, align 4, align-sorted
   \                     `?<Initializer for AlarmOnDelay>`:
   \   00000000   60EA0000           DC32 60000

   \                                 In segment DATA_ID, align 4, align-sorted
   \                     `?<Initializer for SelectSystemValueList>`:
   \   00000000   94010000ED00       DC32 404, 237, 1351, 425, 237, 1359, 426, 237, 1358, 427, 237, 1364
   \              000047050000
   \              A9010000ED00
   \              00004F050000
   \              AA010000ED00
   \              00004E050000
   \              AB010000ED00
   \              000054050000
   \   00000030   BF010000ED00       DC32 447, 237, 1363
   \              000053050000

   \                                 In segment DIFUNCT, align 4, keep-with-next, root
   \   00000000                      REQUIRE ?call_ctors
   \   00000000   ........           DC32    ??__sti__routine

   \                                 In segment DATA_C, align 4, align-sorted
   \   __vtbl_entry const __data PROSystemData::__vtbl[31]
   \                     ??__vtbl:
   \   00000000   ............       DC32 `?~PROSystemData`, ??WriteConfigToFile, ??LoadConfigFromFile
   \              ............
   \   0000000C   ............       DC32 ??MakeConfigString, ??LoadConfigString, ??RestoreSettings
   \              ............
   \   00000018   ............       DC32 ??GetName, ??FindPROStatus, ??GetFloatValue, ??GetValue
   \              ............
   \              ........    
   \   00000028   ............       DC32 ??GetStringValue, ??GetBitValue, ??PutValue, ??PutFloatValue
   \              ............
   \              ........    
   \   00000038   ............       DC32 ??PutBitValue, ??ReceiveData, ??SendData, ??StartTimer
   \              ............
   \              ........    
   \   00000048   ............       DC32 ??InputTimeout, ??GetValueInfoTable, ??GetServiceValueInfoTable
   \              ............
   \   00000054   ............       DC32 ??SetModifiedFlag, ??IsAvailableNewData, ??SortAnalogInputs
   \              ............
   \   00000060   ............       DC32 ??SaveSettings, ??Calculate, ??CreateAlarms, ??WriteXML
   \              ............
   \              ........    
   \   00000070   ............       DC32 ??LCWriteXML, ??RefreshData, ??IsStaticValue
   \              ............
   \   0000007C   53797374656D       DC8 "SystemData"
   \              4461746100  
   \   00000087   00                 DC8 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "%i.%i.%i.%i">`:
   \   00000000   25692E25692E       DC8 "%i.%i.%i.%i"
   \              25692E256900
   \   0000000C   5573657200         DC8 "User"
   \   00000011   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant " is not allowed here!...">`:
   \   00000000   206973206E6F       DC8 " is not allowed here!! Line:"
   \              7420616C6C6F
   \              776564206865
   \              72652121204C
   \              696E653A00  
   \   0000001D   000000             DC8 0, 0, 0
   \   00000020   3A0A54686520       DC8 ":\012The keyword "
   \              6B6579776F72
   \              642000      
   \   0000002F   00                 DC8 0
   \   00000030   3A0A556E6B6E       DC8 ":\012Unknown error started at line:"
   \              6F776E206572
   \              726F72207374
   \              617274656420
   \              6174206C696E
   \              653A00      
   \   00000051   000000             DC8 0, 0, 0
   \   00000054   53797374656D       DC8 "System Data "
   \              204461746120
   \              00          
   \   00000061   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "	</Packet>\\r\\n">`:
   \   00000000   093C2F506163       DC8 "   </Packet>\015\012"
   \              6B65743E0D0A
   \              00          
   \   0000000D   000000             DC8 0, 0, 0
   \   00000010   09093C536561       DC8 "           <SeaWaterDensity>%0.4f</SeaWaterDensity>\015\012"
   \              576174657244
   \              656E73697479
   \              3E25302E3466
   \              3C2F53656157
   \              617465724465
   \              6E736974793E
   \              0D0A00      
   \   0000003D   000000             DC8 0, 0, 0
   \   00000040   09093C4C6973       DC8 "           <List>%0.1f</List>\015\012"
   \              743E25302E31
   \              663C2F4C6973
   \              743E0D0A00  
   \   00000057   00                 DC8 0
   \   00000058   09093C547269       DC8 "           <Trim>%0.1f</Trim>\015\012"
   \              6D3E25302E31
   \              663C2F547269
   \              6D3E0D0A00  
   \   0000006F   00                 DC8 0
   \   00000070   09093C546167       DC8 "           <TagID>%s</TagID>\015\012"
   \              49443E25733C
   \              2F5461674944
   \              3E0D0A00    
   \   00000086   0000               DC8 0, 0
   \   00000088   09093C506163       DC8 "           <PacketID>SystemData</PacketID>\015\012"
   \              6B657449443E
   \              53797374656D
   \              446174613C2F
   \              5061636B6574
   \              49443E0D0A00
   \   000000AC   093C5061636B       DC8 "   <Packet>\015\012"
   \              65743E0D0A00

   \                                 In segment DATA_C, align 1, align-sorted
   \   00000000   256900             DC8 "%i"

   \                                 In segment DATA_C, align 1, align-sorted
   \   00000000   555300             DC8 "US"

   \                                 In segment DATA_C, align 1, align-sorted
   \   00000000   534900             DC8 "SI"

   \                                 In segment CODE, align 4, keep-with-next
   \   static __??Code32?? __intrinsic __code __interwork __atpcs void __sti__routine()
   \                     ??__sti__routine:
   \   00000000   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs PROSystemData &PROSystemData::new PROSystemData()
   \                     `??new PROSystemData`:
   \   00000000   00402DE9           PUSH     {LR}
   \   00000004   690FA0E3           MOV      R0,#+420
   \   00000008   ........           _BLF     `??operator new`,`??operator new??rA`
   \   0000000C   000050E3           CMP      R0,#+0
   \   00000010   0000000A           BEQ      `??new PROSystemData_1`
   \   00000014   ........           BL       ??PROSystemData
   \                     `??new PROSystemData_1`:
   \   00000018   ........           B        ?Subroutine26

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable0:
   \   00000000   ........           DC32     ??npos

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable1:
   \   00000000   ........           DC32     ??TXUSystemData

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable4:
   \   00000000   ........           DC32     ??npos

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable6:
   \   00000000   ........           DC32     ??LastDefPrinter

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable7:
   \   00000000   ........           DC32     ??CurPrinterId

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable8:
   \   00000000   ........           DC32     Master

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable9:
   \   00000000   ........           DC32     ??PRODraftSysPtr

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable10:
   \   00000000   ........           DC32     ??TXUSystemData

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable11:
   \   00000000   ........           DC32     ??AllObjVector

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable12:
   \   00000000   ........           DC32     ??AllObjVector_1

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable13:
   \   00000000   ........           DC32     ??AllHeavyFuelOilVector

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable14:
   \   00000000   ........           DC32     ??AllDieselVector

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable15:
   \   00000000   ........           DC32     ??AllLubricantsVector

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable18:
   \   00000000   ........           DC32     ??PRODraftSysPtr

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable24:
   \   00000000   ........           DC32     TouchScreenTimeOut

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable25:
   \   00000000   40774B41           DC32     0x414b7740

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable27:
   \   00000000   ........           DC32     ??npos

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable29:
   \   00000000   ........           DC32     ??TXUSystemData

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable30:
   \   00000000   ........           DC32     ??LengthBetweenPP

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable31:
   \   00000000   ........           DC32     ??LengthBetweenMarks

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable34:
   \   00000000   ........           DC32     ??Width

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable35:
   \   00000000   F8C1631A           DC32     0x1a63c1f8

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable36:
   \   00000000   DCA54C40           DC32     0x404ca5dc

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable37:
   \   00000000   ........           DC32     ??AtmPressure

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable38:
   \   00000000   ........           DC32     ??PROInclinPtr

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable40:
   \   00000000   ........           DC32     ??TXUSystemData

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable41:
   \   00000000   ........           DC32     TouchScreenTimeOut

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable42:
   \   00000000   ........           DC32     ??npos

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable43:
   \   00000000   ........           DC32     ??AllHeavyFuelOilVector

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable44:
   \   00000000   ........           DC32     ??AllDieselVector

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable45:
   \   00000000   ........           DC32     ??AllLubricantsVector

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable46:
   \   00000000   40774B41           DC32     0x414b7740

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable47:
   \   00000000   ........           DC32     Master

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable48:
   \   00000000   ........           DC32     ??CurPrinterId

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable49:
   \   00000000   ........           DC32     ??LastDefPrinter

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable54:
   \   00000000   ........           DC32     ??TXUSystemData

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable55:
   \   00000000   ........           DC32     ??AlarmSound

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable61:
   \   00000000   ........           DC32     ??ObjVector

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable62:
   \   00000000   ........           DC32     ??ObjVector_1

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable63:
   \   00000000   ........           DC32     ??ObjVector_2

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable64:
   \   00000000   ........           DC32     ??ObjVector_3

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable65:
   \   00000000   ........           DC32     ??ObjVector_4

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable71:
   \   00000000   ........           DC32     ??TXUSystemData

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable74:
   \   00000000   F8C1631A           DC32     0x1a63c1f8

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable75:
   \   00000000   DCA54C40           DC32     0x404ca5dc
   1868          
   1869          
   1870          #ifdef ANWIN
   1871          void PROSystemData::LogData(TLiteQuery *LiteQuery) {
   1872          
   1873          	//PROCargoTank::LogSema.Acquire();
   1874          	//TLiteQuery *LiteQuery = new TLiteQuery(NULL);
   1875           /*
   1876          	time_t rawtime;
   1877          	struct tm * ptm;
   1878          
   1879          	time( &rawtime );
   1880          
   1881          	ptm = gmtime ( &rawtime );
   1882          */
   1883          	time_t rawtime = GetGMT();
   1884          	try {
   1885          		AnsiString MyStatusString;
   1886          		// LiteConnection is either TLiteConnection already set up
   1887          		//LiteQuery->Connection = MainForm->DataLogLiteConnection;
   1888          
   1889          		// retrieve data
   1890          		LiteQuery->SQL->Text = "SELECT * FROM ShipDataLog";
   1891          		LiteQuery->Execute();
   1892          
   1893          		// append record
   1894          		LiteQuery->Append();
   1895          
   1896          		LiteQuery->FieldByName("LogTimeGMT")->AsInteger = rawtime;
   1897          		if ( PROAtmReference::PROAtmRefPtr ) {
   1898          			float AtmPress;
   1899          			if ( PROAtmReference::PROAtmRefPtr->GetFloatValue(SVT_ATM_PRESSURE,0,AtmPress) == GETVAL_NO_ERR){
   1900          				LiteQuery->FieldByName("AtmPress")->AsFloat = AtmPress*MH2O_TO_MBAR ;
   1901          			}
   1902          		}
   1903          		if ( TXUSystemData){
   1904          			{
   1905          				float Trim_m;
   1906          				if ( TXUSystemData->GetFloatValue(SVT_TRIM_M,0,Trim_m) == GETVAL_NO_ERR){
   1907          					LiteQuery->FieldByName("Trim_m")->AsFloat = Trim_m;
   1908          				}
   1909          			}
   1910          			{
   1911          				float List;
   1912          				if ( TXUSystemData->GetFloatValue(SVT_LIST_DEG,0,List) == GETVAL_NO_ERR){
   1913          					LiteQuery->FieldByName("List")->AsFloat = List;
   1914          				}
   1915          			}
   1916          			}
   1917          		if ( PRODraftSystem::PRODraftSysPtr ){
   1918          			float MeanDraft;
   1919          			if ( PRODraftSystem::PRODraftSysPtr->GetFloatValue(SVT_DRAFT_MID,0,MeanDraft) == GETVAL_NO_ERR){
   1920          				LiteQuery->FieldByName("Draft")->AsFloat = MeanDraft;
   1921          			}
   1922          		}
   1923          		if ( PROProjectInfo::IntegratedLoadingComputer ) {
   1924          			float Displacement;
   1925          			if ( LCStabCalc::StabCalc->GetFloatValue(SVT_S_DISPLACEMENT,0,Displacement) == GETVAL_NO_ERR){
   1926          				LiteQuery->FieldByName("Displacement")->AsFloat = Displacement;
   1927          			}
   1928          		}
   1929          		if (PROInclinometer::PROInclinPtr) {
   1930          			float RollPeriod;
   1931          			if ( PROInclinometer::PROInclinPtr->GetFloatValue(SVT_ROLLING_PERIOD,0,RollPeriod) == GETVAL_NO_ERR){
   1932          				LiteQuery->FieldByName("RollPeriod")->AsFloat = RollPeriod;
   1933          			}
   1934          		}
   1935          		LiteQuery->Post();
   1936          	}
   1937          	__finally{
   1938          		//LiteQuery->Free();
   1939          
   1940          	}
   1941          	//PROCargoTank::LogSema.Release();
   1942          }
   1943          void PROSystemData::CleanLogData(TLiteQuery *LiteQuery,int MaxAge) {
   1944          	try {
   1945          		// retrieve data
   1946          		if (MaxAge < 2) {
   1947          			MaxAge = 2;
   1948          		}
   1949          		AnsiString MaxAgeStr = MaxAge;
   1950          		LiteQuery->SQL->Text = "DELETE FROM ShipDataLog WHERE LogTimeGMT < strftime('%s', datetime('now', '-"+MaxAgeStr+" days'))";
   1951          		LiteQuery->Execute();
   1952          		LiteQuery->SQL->Clear();
   1953          	}
   1954          	__finally{
   1955          		//LiteQuery->Free();
   1956          
   1957          	}
   1958          	//PROCargoTank::LogSema.Release();
   1959          
   1960          }
   1961          #endif

   Maximum stack usage in bytes:

     Function                       CSTACK
     --------                       ------
     PROSystemData::CalcTotals(vector<PRogramObjectBase *> &, float *, float *)
                                       36
     PROSystemData::Calculate()         8
     PROSystemData::GetFloatValue(int, int, float &)
                                       36
     PROSystemData::GetOpModeState(int)
                                       68
     PROSystemData::GetStringValue(int, int, AnsiString &)
                                      276
     PROSystemData::GetTimeZone()       0
     PROSystemData::GetValue(int, int, float &, int &, int &)
                                       44
     PROSystemData::GetValueInfoTable(int &, int)
                                        0
     PROSystemData::GetValueInfoTableStatic(int &, int)
                                        0
     PROSystemData::InputLatitude(float)
                                       24
     PROSystemData::LCWriteXML(char *)
                                       20
     PROSystemData::PROSystemData()    72
     PROSystemData::PutBitValue(int, int, bool)
                                        8
     PROSystemData::PutFloatValue(int, float)
                                       20
     PROSystemData::PutValue(int, int, AnsiString, bool, int *)
                                      388
     PROSystemData::ReceiveData(unsigned char *)
                                      124
     PROSystemData::RestoreSettings(TSNConfigString *)
                                      584
     PROSystemData::SaveSettings(TSNConfigString *)
                                     3880
     PROSystemData::SendData(unsigned short)
                                      172
     PROSystemData::SetDST(int)         4
     PROSystemData::SetOpModeState(TankState, int, int)
                                      136
     PROSystemData::SetTimeZone(int)
                                        4
     PROSystemData::TrimListCorrection(float, float)
                                       16
     PROSystemData::new PROSystemData()
                                        4
     PROSystemData::~PROSystemData()
                                       12
     _Vector_impl<PRogramObjectBase *, allocator<PRogramObjectBase *>>::_Assign(_Vector_impl<PRogramObjectBase *, allocator<PRogramObjectBase *>> const &)
                                       20
     _Vector_impl<PRogramObjectBase *, allocator<PRogramObjectBase *>>::_Tidy()
                                        8
     _Vector_value<allocator<void>>::_Zero()
                                        0
     __sti__routine()                   0
     operator+(string const &, char const *)
                                       44
     operator+(string const &, string const &)
                                       40
     string::string(string const &)    12
     vector<PRogramObjectBase *>::empty() const
                                        0


   Segment part sizes:

     Function/Label                 Bytes
     --------------                 -----
     string::string(string const &)   64
     _Vector_value<allocator<void>>::_Zero()
                                      20
     _Vector_impl<PRogramObjectBase *, allocator<PRogramObjectBase *>>::_Tidy()
                                      44
     _Vector_impl<PRogramObjectBase *, allocator<PRogramObjectBase *>>::_Assign(_Vector_impl<PRogramObjectBase *, allocator<PRogramObjectBase *>> const &)
                                     216
     vector<PRogramObjectBase *>::empty() const
                                      32
     operator+(string const &, string const &)
                                      88
     operator+(string const &, char const *)
                                      92
     PROSystemData::~PROSystemData()
                                      72
     PROSystemData::ServiceReportSystemValueList
                                      84
     PROSystemData::TXUSystemData     98
     PROSystemData::AlarmOnDelay       4
     PROSystemData::PROSystemData()  328
     ?Subroutine27                     8
     PROSystemData::SaveSettings(TSNConfigString *)
                                    8600
     ?Subroutine25                    12
     PROSystemData::RestoreSettings(TSNConfigString *)
                                    2432
     PROSystemData::GetValueInfoTable(int &, int)
                                      12
     ?Subroutine28                    12
     PROSystemData::SelectSystemValueList
                                      60
     PROSystemData::GetValueInfoTableStatic(int &, int)
                                       8
     PROSystemData::CalcTotals(vector<PRogramObjectBase *> &, float *, float *)
                                     104
     PROSystemData::Calculate()      408
     ?Subroutine29                     8
     PROSystemData::GetValue(int, int, float &, int &, int &)
                                    1924
     PROSystemData::GetStringValue(int, int, AnsiString &)
                                     960
     ?Subroutine30                     8
     PROSystemData::GetFloatValue(int, int, float &)
                                     756
     PROSystemData::GetTimeZone()     16
     PROSystemData::SetTimeZone(int)
                                      48
     ?Subroutine26                     8
     PROSystemData::SetDST(int)       52
     PROSystemData::PutValue(int, int, AnsiString, bool, int *)
                                    5708
     PROSystemData::PutFloatValue(int, float)
                                     400
     PROSystemData::PutBitValue(int, int, bool)
                                      76
     PROSystemData::TrimListCorrection(float, float)
                                      48
     PROSystemData::ReceiveData(unsigned char *)
                                    1412
     PROSystemData::SendData(unsigned short)
                                    1256
     PROSystemData::GetOpModeState(int)
                                     272
     PROSystemData::SetOpModeState(TankState, int, int)
                                     556
     PROSystemData::LCWriteXML(char *)
                                     232
     PROSystemData::InputLatitude(float)
                                     248
     ?<Initializer for ServiceReportSystemValueList
                                      84
     ?<Initializer for TXUSystemData>
                                      98
     ?<Initializer for AlarmOnDelay>
                                       4
     ?<Initializer for SelectSystemValueList>
                                      60
     PROSystemData::__vtbl           136
     ?<Constant "%i.%i.%i.%i">        20
     ?<Constant " is not allowed here!...">
                                     100
     ?<Constant "	</Packet>\r\n">    184
     ?<Constant "%i">                  3
     ?<Constant "US">                  3
     ?<Constant "SI">                  3
     __sti__routine()                  4
     PROSystemData::new PROSystemData()
                                      28
     ??DataTable0                      4
     ??DataTable1                      4
     ??DataTable4                      4
     ??DataTable6                      4
     ??DataTable7                      4
     ??DataTable8                      4
     ??DataTable9                      4
     ??DataTable10                     4
     ??DataTable11                     4
     ??DataTable12                     4
     ??DataTable13                     4
     ??DataTable14                     4
     ??DataTable15                     4
     ??DataTable18                     4
     ??DataTable24                     4
     ??DataTable25                     4
     ??DataTable27                     4
     ??DataTable29                     4
     ??DataTable30                     4
     ??DataTable31                     4
     ??DataTable34                     4
     ??DataTable35                     4
     ??DataTable36                     4
     ??DataTable37                     4
     ??DataTable38                     4
     ??DataTable40                     4
     ??DataTable41                     4
     ??DataTable42                     4
     ??DataTable43                     4
     ??DataTable44                     4
     ??DataTable45                     4
     ??DataTable46                     4
     ??DataTable47                     4
     ??DataTable48                     4
     ??DataTable49                     4
     ??DataTable54                     4
     ??DataTable55                     4
     ??DataTable61                     4
     ??DataTable62                     4
     ??DataTable63                     4
     ??DataTable64                     4
     ??DataTable65                     4
     ??DataTable71                     4
     ??DataTable74                     4
     ??DataTable75                     4
      Others                        1160

 
 27 896 bytes in segment CODE
    449 bytes in segment DATA_C
    246 bytes in segment DATA_I
    246 bytes in segment DATA_ID
      4 bytes in segment DIFUNCT
     12 bytes in segment INITTAB
 
 26 128 bytes of CODE  memory (+ 1 784 bytes shared)
    695 bytes of CONST memory
    246 bytes of DATA  memory

Errors: none
Warnings: none
