##############################################################################
#                                                                            #
# IAR ARM ANSI C/C++ Compiler V4.42A/W32               14/Sep/2022  15:14:53 #
# Copyright 1999-2005 IAR Systems. All rights reserved.                      #
#                                                                            #
#    Cpu mode        =  interwork                                            #
#    Endian          =  little                                               #
#    Stack alignment =  4                                                    #
#    Source file     =  D:\S2Prog\Shared\Src\PROIOComponent.cpp              #
#    Command line    =  D:\S2Prog\Shared\Src\PROIOComponent.cpp --fpu None   #
#                       -D OS_LIBMODE_SP -D CPU_S3C2410 -D OS_RAMVECT=0 -D   #
#                       OS_UART=-1 -D S2TXU -D USE_LZO=1 -D __ARM_LIBRARY__  #
#                       -D WATCHDOG=1 -D NETWORK=1 -lCN                      #
#                       D:\S2Prog\TXU\Debug\List\ -o                         #
#                       D:\S2Prog\TXU\Debug\Obj\ -z9 --debug --cpu_mode arm  #
#                       --endian little --cpu ARM920T --stack_align 4        #
#                       --interwork -e --enable_multibytes --eec++           #
#                       --dlib_config "C:\Program Files (x86)\IAR            #
#                       Systems\Embedded Workbench                           #
#                       4.0\arm\LIB\dl4tpainl8n.h" -I                        #
#                       D:\S2Prog\TXU\GUI\CORE\ -I D:\S2Prog\TXU\GUI\WM\ -I  #
#                       D:\S2Prog\TXU\GUI\WIDGET\ -I D:\S2Prog\TXU\CONFIG\   #
#                       -I D:\S2Prog\TXU\INC\ -I D:\S2Prog\TXU\..\SHARED\INC #
#                       \ -I D:\S2Prog\TXU\..\SHARED\SRC\ -I                 #
#                       D:\S2Prog\TXU\..\SHARED\LZO\minilzo.210\ -I          #
#                       D:\S2Prog\TXU\lwip-1.4.1\src\include\ -I             #
#                       D:\S2Prog\TXU\lwip-1.4.1\src\include\ipv4\ -I        #
#                       D:\S2Prog\TXU\lwip-1.4.1\src\ -I                     #
#                       D:\S2Prog\TXU\..\SHARED\Database\ -I                 #
#                       D:\S2Prog\TXU\src\ -I "C:\Program Files (x86)\IAR    #
#                       Systems\Embedded Workbench 4.0\arm\INC\"             #
#                       --inline_threshold=2                                 #
#    List file       =  D:\S2Prog\TXU\Debug\List\PROIOComponent.lst          #
#    Object file     =  D:\S2Prog\TXU\Debug\Obj\PROIOComponent.r79           #
#                                                                            #
#                                                                            #
##############################################################################

D:\S2Prog\Shared\Src\PROIOComponent.cpp
      1          #include "TSNIncludes.h"

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs _Tree_algobase<allocator<void>>::_Genptr _Tree_algobase<allocator<void>>::_DecP(_Tree_algobase<allocator<void>>::_Genptr)
   \                     ??_DecP:
   \   00000000   0D10D0E5           LDRB     R1,[R0, #+13]
   \   00000004   000051E3           CMP      R1,#+0
   \   00000008   08009015           LDRNE    R0,[R0, #+8]
   \   0000000C   1EFF2F11           BXNE     LR
   \   00000010   001090E5           LDR      R1,[R0, #+0]
   \   00000014   0D20D1E5           LDRB     R2,[R1, #+13]
   \   00000018   000052E3           CMP      R2,#+0
   \   0000001C   0700001A           BNE      ??_DecP_1
   \   00000020   000000EA           B        ??_DecP_2
   \                     ??_DecP_3:
   \   00000024   0010A0E1           MOV      R1,R0
   \                     ??_DecP_2:
   \   00000028   080091E5           LDR      R0,[R1, #+8]
   \   0000002C   0D20D0E5           LDRB     R2,[R0, #+13]
   \   00000030   000052E3           CMP      R2,#+0
   \   00000034   FAFFFF0A           BEQ      ??_DecP_3
   \   00000038   0100A0E1           MOV      R0,R1
   \   0000003C   1EFF2FE1           BX       LR
   \                     ??_DecP_1:
   \   00000040   041090E5           LDR      R1,[R0, #+4]
   \   00000044   0D20D1E5           LDRB     R2,[R1, #+13]
   \   00000048   000052E3           CMP      R2,#+0
   \   0000004C   1EFF2F11           BXNE     LR
   \   00000050   002091E5           LDR      R2,[R1, #+0]
   \   00000054   020050E1           CMP      R0,R2
   \   00000058   0100A0E1           MOV      R0,R1
   \   0000005C   F7FFFF0A           BEQ      ??_DecP_1
   \   00000060   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs _Tree_algobase<allocator<void>>::_Genptr _Tree_algobase<allocator<void>>::_IncP(_Tree_algobase<allocator<void>>::_Genptr)
   \                     ??_IncP:
   \   00000000   0D10D0E5           LDRB     R1,[R0, #+13]
   \   00000004   000051E3           CMP      R1,#+0
   \   00000008   1EFF2F11           BXNE     LR
   \   0000000C   081090E5           LDR      R1,[R0, #+8]
   \   00000010   0D20D1E5           LDRB     R2,[R1, #+13]
   \   00000014   000052E3           CMP      R2,#+0
   \   00000018   0700001A           BNE      ??_IncP_1
   \   0000001C   000000EA           B        ??_IncP_2
   \                     ??_IncP_3:
   \   00000020   0010A0E1           MOV      R1,R0
   \                     ??_IncP_2:
   \   00000024   000091E5           LDR      R0,[R1, #+0]
   \   00000028   0D20D0E5           LDRB     R2,[R0, #+13]
   \   0000002C   000052E3           CMP      R2,#+0
   \   00000030   FAFFFF0A           BEQ      ??_IncP_3
   \   00000034   060000EA           B        ??_IncP_4
   \                     ??_IncP_5:
   \   00000038   0100A0E1           MOV      R0,R1
   \                     ??_IncP_1:
   \   0000003C   041090E5           LDR      R1,[R0, #+4]
   \   00000040   0D20D1E5           LDRB     R2,[R1, #+13]
   \   00000044   000052E3           CMP      R2,#+0
   \   00000048   08209105           LDREQ    R2,[R1, #+8]
   \   0000004C   02005001           CMPEQ    R0,R2
   \   00000050   F8FFFF0A           BEQ      ??_IncP_5
   \                     ??_IncP_4:
   \   00000054   0100A0E1           MOV      R0,R1
   \   00000058   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void _Tree_algobase<allocator<void>>::_Clear()
   \                     ??_Clear:
   \   00000000   040080E5           STR      R0,[R0, #+4]
   \   00000004   000080E5           STR      R0,[R0, #+0]
   \   00000008   080080E5           STR      R0,[R0, #+8]
   \   0000000C   0110A0E3           MOV      R1,#+1
   \   00000010   0D10C0E5           STRB     R1,[R0, #+13]
   \   00000014   0C10C0E5           STRB     R1,[R0, #+12]
   \   00000018   0010A0E3           MOV      R1,#+0
   \   0000001C   101080E5           STR      R1,[R0, #+16]
   \   00000020   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void _Tree_algobase<allocator<void>>::_Rrotate(_Tree_algobase<allocator<void>>::_Genptr)
   \                     ??_Rrotate:
   \   00000000   002091E5           LDR      R2,[R1, #+0]
   \   00000004   083092E5           LDR      R3,[R2, #+8]
   \   00000008   003081E5           STR      R3,[R1, #+0]
   \   0000000C   083092E5           LDR      R3,[R2, #+8]
   \   00000010   0DC0D3E5           LDRB     R12,[R3, #+13]
   \   00000014   00005CE3           CMP      R12,#+0
   \   00000018   04108305           STREQ    R1,[R3, #+4]
   \   0000001C   043091E5           LDR      R3,[R1, #+4]
   \   00000020   043082E5           STR      R3,[R2, #+4]
   \   00000024   043090E5           LDR      R3,[R0, #+4]
   \   00000028   030051E1           CMP      R1,R3
   \   0000002C   04208005           STREQ    R2,[R0, #+4]
   \   00000030   0400000A           BEQ      ??_Rrotate_1
   \   00000034   040091E5           LDR      R0,[R1, #+4]
   \   00000038   083090E5           LDR      R3,[R0, #+8]
   \   0000003C   030051E1           CMP      R1,R3
   \   00000040   08208005           STREQ    R2,[R0, #+8]
   \   00000044   00208015           STRNE    R2,[R0, #+0]
   \                     ??_Rrotate_1:
   \   00000048   081082E5           STR      R1,[R2, #+8]
   \   0000004C   042081E5           STR      R2,[R1, #+4]
   \   00000050   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void _Tree_algobase<allocator<void>>::_Lrotate(_Tree_algobase<allocator<void>>::_Genptr)
   \                     ??_Lrotate:
   \   00000000   082091E5           LDR      R2,[R1, #+8]
   \   00000004   003092E5           LDR      R3,[R2, #+0]
   \   00000008   083081E5           STR      R3,[R1, #+8]
   \   0000000C   003092E5           LDR      R3,[R2, #+0]
   \   00000010   0DC0D3E5           LDRB     R12,[R3, #+13]
   \   00000014   00005CE3           CMP      R12,#+0
   \   00000018   04108305           STREQ    R1,[R3, #+4]
   \   0000001C   043091E5           LDR      R3,[R1, #+4]
   \   00000020   043082E5           STR      R3,[R2, #+4]
   \   00000024   043090E5           LDR      R3,[R0, #+4]
   \   00000028   030051E1           CMP      R1,R3
   \   0000002C   04208005           STREQ    R2,[R0, #+4]
   \   00000030   0400000A           BEQ      ??_Lrotate_1
   \   00000034   040091E5           LDR      R0,[R1, #+4]
   \   00000038   003090E5           LDR      R3,[R0, #+0]
   \   0000003C   030051E1           CMP      R1,R3
   \   00000040   00208005           STREQ    R2,[R0, #+0]
   \   00000044   08208015           STRNE    R2,[R0, #+8]
   \                     ??_Lrotate_1:
   \   00000048   001082E5           STR      R1,[R2, #+0]
   \   0000004C   042081E5           STR      R2,[R1, #+4]
   \   00000050   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void _Tree_algobase<allocator<void>>::_Insert(bool, _Tree_algobase<allocator<void>>::_Genptr, _Tree_algobase<allocator<void>>::_Genptr)
   \                     ??_Insert:
   \   00000000   F0402DE9           PUSH     {R4-R7,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   100094E5           LDR      R0,[R4, #+16]
   \   0000000C   0350A0E1           MOV      R5,R3
   \   00000010   010080E2           ADD      R0,R0,#+1
   \   00000014   100084E5           STR      R0,[R4, #+16]
   \   00000018   040052E1           CMP      R2,R4
   \   0000001C   0300001A           BNE      ??_Insert_3
   \   00000020   045084E5           STR      R5,[R4, #+4]
   \   00000024   005084E5           STR      R5,[R4, #+0]
   \                     ??_Insert_4:
   \   00000028   085084E5           STR      R5,[R4, #+8]
   \   0000002C   130000EA           B        ??_Insert_5
   \                     ??_Insert_3:
   \   00000030   000051E3           CMP      R1,#+0
   \   00000034   0500000A           BEQ      ??_Insert_6
   \   00000038   005082E5           STR      R5,[R2, #+0]
   \   0000003C   000094E5           LDR      R0,[R4, #+0]
   \   00000040   000052E1           CMP      R2,R0
   \   00000044   0D00001A           BNE      ??_Insert_5
   \   00000048   005084E5           STR      R5,[R4, #+0]
   \   0000004C   0B0000EA           B        ??_Insert_5
   \                     ??_Insert_6:
   \   00000050   085082E5           STR      R5,[R2, #+8]
   \   00000054   080094E5           LDR      R0,[R4, #+8]
   \   00000058   000052E1           CMP      R2,R0
   \   0000005C   0700001A           BNE      ??_Insert_5
   \   00000060   F0FFFFEA           B        ??_Insert_4
   \                     ??_Insert_7:
   \   00000064   0C70C0E5           STRB     R7,[R0, #+12]
   \   00000068   0C70C2E5           STRB     R7,[R2, #+12]
   \   0000006C   040095E5           LDR      R0,[R5, #+4]
   \   00000070   040090E5           LDR      R0,[R0, #+4]
   \   00000074   0C60C0E5           STRB     R6,[R0, #+12]
   \   00000078   040095E5           LDR      R0,[R5, #+4]
   \   0000007C   045090E5           LDR      R5,[R0, #+4]
   \                     ??_Insert_5:
   \   00000080   0170A0E3           MOV      R7,#+1
   \   00000084   040095E5           LDR      R0,[R5, #+4]
   \   00000088   0C10D0E5           LDRB     R1,[R0, #+12]
   \   0000008C   000051E3           CMP      R1,#+0
   \   00000090   2F00001A           BNE      ??_Insert_8
   \   00000094   041090E5           LDR      R1,[R0, #+4]
   \   00000098   0060A0E3           MOV      R6,#+0
   \   0000009C   001091E5           LDR      R1,[R1, #+0]
   \   000000A0   010050E1           CMP      R0,R1
   \   000000A4   041090E5           LDR      R1,[R0, #+4]
   \   000000A8   1400001A           BNE      ??_Insert_9
   \   000000AC   082091E5           LDR      R2,[R1, #+8]
   \   000000B0   0C10D2E5           LDRB     R1,[R2, #+12]
   \   000000B4   000051E3           CMP      R1,#+0
   \   000000B8   E9FFFF0A           BEQ      ??_Insert_7
   \   000000BC   081090E5           LDR      R1,[R0, #+8]
   \   000000C0   010055E1           CMP      R5,R1
   \   000000C4   0300001A           BNE      ??_Insert_10
   \   000000C8   0050A0E1           MOV      R5,R0
   \   000000CC   0510A0E1           MOV      R1,R5
   \   000000D0   0400A0E1           MOV      R0,R4
   \   000000D4   ........           _BLF     ??_Lrotate,??_Lrotate??rA
   \                     ??_Insert_10:
   \   000000D8   040095E5           LDR      R0,[R5, #+4]
   \   000000DC   0C70C0E5           STRB     R7,[R0, #+12]
   \   000000E0   040095E5           LDR      R0,[R5, #+4]
   \   000000E4   040090E5           LDR      R0,[R0, #+4]
   \   000000E8   0C60C0E5           STRB     R6,[R0, #+12]
   \   000000EC   040095E5           LDR      R0,[R5, #+4]
   \   000000F0   041090E5           LDR      R1,[R0, #+4]
   \   000000F4   0400A0E1           MOV      R0,R4
   \   000000F8   ........           _BLF     ??_Rrotate,??_Rrotate??rA
   \   000000FC   DFFFFFEA           B        ??_Insert_5
   \                     ??_Insert_9:
   \   00000100   002091E5           LDR      R2,[R1, #+0]
   \   00000104   0C10D2E5           LDRB     R1,[R2, #+12]
   \   00000108   000051E3           CMP      R1,#+0
   \   0000010C   D4FFFF0A           BEQ      ??_Insert_7
   \   00000110   001090E5           LDR      R1,[R0, #+0]
   \   00000114   010055E1           CMP      R5,R1
   \   00000118   0300001A           BNE      ??_Insert_11
   \   0000011C   0050A0E1           MOV      R5,R0
   \   00000120   0510A0E1           MOV      R1,R5
   \   00000124   0400A0E1           MOV      R0,R4
   \   00000128   ........           _BLF     ??_Rrotate,??_Rrotate??rA
   \                     ??_Insert_11:
   \   0000012C   040095E5           LDR      R0,[R5, #+4]
   \   00000130   0C70C0E5           STRB     R7,[R0, #+12]
   \   00000134   040095E5           LDR      R0,[R5, #+4]
   \   00000138   040090E5           LDR      R0,[R0, #+4]
   \   0000013C   0C60C0E5           STRB     R6,[R0, #+12]
   \   00000140   040095E5           LDR      R0,[R5, #+4]
   \   00000144   041090E5           LDR      R1,[R0, #+4]
   \   00000148   0400A0E1           MOV      R0,R4
   \   0000014C   ........           _BLF     ??_Lrotate,??_Lrotate??rA
   \   00000150   CAFFFFEA           B        ??_Insert_5
   \                     ??_Insert_8:
   \   00000154   040094E5           LDR      R0,[R4, #+4]
   \   00000158   0C70C0E5           STRB     R7,[R0, #+12]
   \   0000015C   F040BDE8           POP      {R4-R7,LR}
   \   00000160   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs _Tree<_Tset_traits<AlarmBasic *, less<AlarmBasic *>, allocator<AlarmBasic *>, false>>::_Pairib _Tree<_Tset_traits<AlarmBasic *, less<AlarmBasic *>, allocator<AlarmBasic *>, false>>::insert(AlarmBasic *)
   \                     ??insert:
   \   00000000   F34C2DE9           PUSH     {R0,R1,R4-R7,R10,R11,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
   \   0000000C   040095E5           LDR      R0,[R5, #+4]
   \   00000010   0260A0E1           MOV      R6,R2
   \   00000014   05B0A0E1           MOV      R11,R5
   \   00000018   0170A0E3           MOV      R7,#+1
   \                     ??insert_2:
   \   0000001C   0D10D0E5           LDRB     R1,[R0, #+13]
   \   00000020   000051E3           CMP      R1,#+0
   \   00000024   0700001A           BNE      ??insert_3
   \   00000028   101090E5           LDR      R1,[R0, #+16]
   \   0000002C   00B0A0E1           MOV      R11,R0
   \   00000030   010056E1           CMP      R6,R1
   \   00000034   00009035           LDRCC    R0,[R0, #+0]
   \   00000038   0170A033           MOVCC    R7,#+1
   \   0000003C   08009025           LDRCS    R0,[R0, #+8]
   \   00000040   0070A023           MOVCS    R7,#+0
   \   00000044   F4FFFFEA           B        ??insert_2
   \                     ??insert_3:
   \   00000048   0B00A0E1           MOV      R0,R11
   \   0000004C   01A0A0E3           MOV      R10,#+1
   \   00000050   000057E3           CMP      R7,#+0
   \   00000054   0B00000A           BEQ      ??insert_4
   \   00000058   001095E5           LDR      R1,[R5, #+0]
   \   0000005C   010050E1           CMP      R0,R1
   \   00000060   0700001A           BNE      ??insert_5
   \   00000064   0630A0E1           MOV      R3,R6
   \   00000068   0B20A0E1           MOV      R2,R11
   \   0000006C   0110A0E3           MOV      R1,#+1
   \                     ??insert_6:
   \   00000070   0500A0E1           MOV      R0,R5
   \   00000074   ........           _BLF     ??_Insert_1,??_Insert??rA
   \   00000078   00008DE5           STR      R0,[SP, #+0]
   \   0000007C   04A0CDE5           STRB     R10,[SP, #+4]
   \   00000080   0A0000EA           B        ??insert_7
   \                     ??insert_5:
   \   00000084   ........           _BLF     ??_DecP,??_DecP??rA
   \                     ??insert_4:
   \   00000088   101090E5           LDR      R1,[R0, #+16]
   \   0000008C   060051E1           CMP      R1,R6
   \   00000090   0300002A           BCS      ??insert_8
   \   00000094   0630A0E1           MOV      R3,R6
   \   00000098   0B20A0E1           MOV      R2,R11
   \   0000009C   0710A0E1           MOV      R1,R7
   \   000000A0   F2FFFFEA           B        ??insert_6
   \                     ??insert_8:
   \   000000A4   00008DE5           STR      R0,[SP, #+0]
   \   000000A8   0010A0E3           MOV      R1,#+0
   \   000000AC   0410CDE5           STRB     R1,[SP, #+4]
   \                     ??insert_7:
   \   000000B0   0D00A0E1           MOV      R0,SP
   \   000000B4   030090E8           LDM      R0,{R0,R1}
   \   000000B8   030084E8           STM      R4,{R0,R1}
   \   000000BC   0400A0E1           MOV      R0,R4
   \   000000C0   F64CBDE8           POP      {R1,R2,R4-R7,R10,R11,LR}
   \   000000C4   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs _Tree<_Tset_traits<ANPRO10Object *, less<ANPRO10Object *>, allocator<ANPRO10Object *>, false>>::_Pairib _Tree<_Tset_traits<ANPRO10Object *, less<ANPRO10Object *>, allocator<ANPRO10Object *>, false>>::insert(ANPRO10Object *)
   \                     ??insert_1:
   \   00000000   F34C2DE9           PUSH     {R0,R1,R4-R7,R10,R11,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
   \   0000000C   040095E5           LDR      R0,[R5, #+4]
   \   00000010   0260A0E1           MOV      R6,R2
   \   00000014   05B0A0E1           MOV      R11,R5
   \   00000018   0170A0E3           MOV      R7,#+1
   \                     ??insert_9:
   \   0000001C   0D10D0E5           LDRB     R1,[R0, #+13]
   \   00000020   000051E3           CMP      R1,#+0
   \   00000024   0700001A           BNE      ??insert_10
   \   00000028   101090E5           LDR      R1,[R0, #+16]
   \   0000002C   00B0A0E1           MOV      R11,R0
   \   00000030   010056E1           CMP      R6,R1
   \   00000034   00009035           LDRCC    R0,[R0, #+0]
   \   00000038   0170A033           MOVCC    R7,#+1
   \   0000003C   08009025           LDRCS    R0,[R0, #+8]
   \   00000040   0070A023           MOVCS    R7,#+0
   \   00000044   F4FFFFEA           B        ??insert_9
   \                     ??insert_10:
   \   00000048   0B00A0E1           MOV      R0,R11
   \   0000004C   01A0A0E3           MOV      R10,#+1
   \   00000050   000057E3           CMP      R7,#+0
   \   00000054   0B00000A           BEQ      ??insert_11
   \   00000058   001095E5           LDR      R1,[R5, #+0]
   \   0000005C   010050E1           CMP      R0,R1
   \   00000060   0700001A           BNE      ??insert_12
   \   00000064   0630A0E1           MOV      R3,R6
   \   00000068   0B20A0E1           MOV      R2,R11
   \   0000006C   0110A0E3           MOV      R1,#+1
   \                     ??insert_13:
   \   00000070   0500A0E1           MOV      R0,R5
   \   00000074   ........           _BLF     ??_Insert_2,??_Insert??rA_1
   \   00000078   00008DE5           STR      R0,[SP, #+0]
   \   0000007C   04A0CDE5           STRB     R10,[SP, #+4]
   \   00000080   0A0000EA           B        ??insert_14
   \                     ??insert_12:
   \   00000084   ........           _BLF     ??_DecP,??_DecP??rA
   \                     ??insert_11:
   \   00000088   101090E5           LDR      R1,[R0, #+16]
   \   0000008C   060051E1           CMP      R1,R6
   \   00000090   0300002A           BCS      ??insert_15
   \   00000094   0630A0E1           MOV      R3,R6
   \   00000098   0B20A0E1           MOV      R2,R11
   \   0000009C   0710A0E1           MOV      R1,R7
   \   000000A0   F2FFFFEA           B        ??insert_13
   \                     ??insert_15:
   \   000000A4   00008DE5           STR      R0,[SP, #+0]
   \   000000A8   0010A0E3           MOV      R1,#+0
   \   000000AC   0410CDE5           STRB     R1,[SP, #+4]
   \                     ??insert_14:
   \   000000B0   0D00A0E1           MOV      R0,SP
   \   000000B4   030090E8           LDM      R0,{R0,R1}
   \   000000B8   030084E8           STM      R4,{R0,R1}
   \   000000BC   0400A0E1           MOV      R0,R4
   \   000000C0   F64CBDE8           POP      {R1,R2,R4-R7,R10,R11,LR}
   \   000000C4   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void _Tree<_Tset_traits<AlarmBasic *, less<AlarmBasic *>, allocator<AlarmBasic *>, false>>::_Erase(_Tree<_Tset_traits<AlarmBasic *, less<AlarmBasic *>, allocator<AlarmBasic *>, false>>::_Nodeptr)
   \                     ??_Erase:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
   \   0000000C   0560A0E1           MOV      R6,R5
   \   00000010   060000EA           B        ??_Erase_2
   \                     ??_Erase_3:
   \   00000014   081096E5           LDR      R1,[R6, #+8]
   \   00000018   0400A0E1           MOV      R0,R4
   \   0000001C   F7FFFFEB           BL       ??_Erase
   \   00000020   006096E5           LDR      R6,[R6, #+0]
   \   00000024   0500A0E1           MOV      R0,R5
   \   00000028   ........           _BLF     `??operator delete`,`??operator delete??rA`
   \   0000002C   0650A0E1           MOV      R5,R6
   \                     ??_Erase_2:
   \   00000030   0D00D6E5           LDRB     R0,[R6, #+13]
   \   00000034   000050E3           CMP      R0,#+0
   \   00000038   F5FFFF0A           BEQ      ??_Erase_3
   \   0000003C   7040BDE8           POP      {R4-R6,LR}
   \   00000040   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void _Tree<_Tset_traits<ANPRO10Object *, less<ANPRO10Object *>, allocator<ANPRO10Object *>, false>>::_Erase(_Tree<_Tset_traits<ANPRO10Object *, less<ANPRO10Object *>, allocator<ANPRO10Object *>, false>>::_Nodeptr)
   \                     ??_Erase_1:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
   \   0000000C   0560A0E1           MOV      R6,R5
   \   00000010   060000EA           B        ??_Erase_4
   \                     ??_Erase_5:
   \   00000014   081096E5           LDR      R1,[R6, #+8]
   \   00000018   0400A0E1           MOV      R0,R4
   \   0000001C   F7FFFFEB           BL       ??_Erase_1
   \   00000020   006096E5           LDR      R6,[R6, #+0]
   \   00000024   0500A0E1           MOV      R0,R5
   \   00000028   ........           _BLF     `??operator delete`,`??operator delete??rA`
   \   0000002C   0650A0E1           MOV      R5,R6
   \                     ??_Erase_4:
   \   00000030   0D00D6E5           LDRB     R0,[R6, #+13]
   \   00000034   000050E3           CMP      R0,#+0
   \   00000038   F5FFFF0A           BEQ      ??_Erase_5
   \   0000003C   7040BDE8           POP      {R4-R6,LR}
   \   00000040   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs _Tree<_Tset_traits<AlarmBasic *, less<AlarmBasic *>, allocator<AlarmBasic *>, false>>::iterator _Tree<_Tset_traits<AlarmBasic *, less<AlarmBasic *>, allocator<AlarmBasic *>, false>>::_Insert(bool, _Tree<_Tset_traits<AlarmBasic *, less<AlarmBasic *>, allocator<AlarmBasic *>, false>>::_Nodeptr, AlarmBasic *)
   \                     ??_Insert_1:
   \   00000000   F0412DE9           PUSH     {R4-R8,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
   \   0000000C   0260A0E1           MOV      R6,R2
   \   00000010   0370A0E1           MOV      R7,R3
   \   00000014   1400A0E3           MOV      R0,#+20
   \   00000018   ........           _BLF     `??operator new`,`??operator new??rA`
   \   0000001C   0080B0E1           MOVS     R8,R0
   \   00000020   0600000A           BEQ      ??_Insert_12
   \   00000024   004088E5           STR      R4,[R8, #+0]
   \   00000028   046088E5           STR      R6,[R8, #+4]
   \   0000002C   084088E5           STR      R4,[R8, #+8]
   \   00000030   0000A0E3           MOV      R0,#+0
   \   00000034   0C00C8E5           STRB     R0,[R8, #+12]
   \   00000038   0D00C8E5           STRB     R0,[R8, #+13]
   \   0000003C   107088E5           STR      R7,[R8, #+16]
   \                     ??_Insert_12:
   \   00000040   0830A0E1           MOV      R3,R8
   \   00000044   0620A0E1           MOV      R2,R6
   \   00000048   0510A0E1           MOV      R1,R5
   \   0000004C   0400A0E1           MOV      R0,R4
   \   00000050   ........           _BLF     ??_Insert,??_Insert??rA_2
   \   00000054   0800A0E1           MOV      R0,R8
   \   00000058   F041BDE8           POP      {R4-R8,LR}
   \   0000005C   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs _Tree<_Tset_traits<ANPRO10Object *, less<ANPRO10Object *>, allocator<ANPRO10Object *>, false>>::iterator _Tree<_Tset_traits<ANPRO10Object *, less<ANPRO10Object *>, allocator<ANPRO10Object *>, false>>::_Insert(bool, _Tree<_Tset_traits<ANPRO10Object *, less<ANPRO10Object *>, allocator<ANPRO10Object *>, false>>::_Nodeptr, ANPRO10Object *)
   \                     ??_Insert_2:
   \   00000000   F0412DE9           PUSH     {R4-R8,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
   \   0000000C   0260A0E1           MOV      R6,R2
   \   00000010   0370A0E1           MOV      R7,R3
   \   00000014   1400A0E3           MOV      R0,#+20
   \   00000018   ........           _BLF     `??operator new`,`??operator new??rA`
   \   0000001C   0080B0E1           MOVS     R8,R0
   \   00000020   0600000A           BEQ      ??_Insert_13
   \   00000024   004088E5           STR      R4,[R8, #+0]
   \   00000028   046088E5           STR      R6,[R8, #+4]
   \   0000002C   084088E5           STR      R4,[R8, #+8]
   \   00000030   0000A0E3           MOV      R0,#+0
   \   00000034   0C00C8E5           STRB     R0,[R8, #+12]
   \   00000038   0D00C8E5           STRB     R0,[R8, #+13]
   \   0000003C   107088E5           STR      R7,[R8, #+16]
   \                     ??_Insert_13:
   \   00000040   0830A0E1           MOV      R3,R8
   \   00000044   0620A0E1           MOV      R2,R6
   \   00000048   0510A0E1           MOV      R1,R5
   \   0000004C   0400A0E1           MOV      R0,R4
   \   00000050   ........           _BLF     ??_Insert,??_Insert??rA_2
   \   00000054   0800A0E1           MOV      R0,R8
   \   00000058   F041BDE8           POP      {R4-R8,LR}
   \   0000005C   1EFF2FE1           BX       LR               ;; return
      2          #pragma hdrstop
      3          #ifdef BORLAND
      4          #pragma package(smart_init)
      5          #endif
      6          
      7          //---------------------------------------------------------------------------
      8          

   \                                 In segment CODE, align 4, keep-with-next
      9          PROIOComponent::PROIOComponent(void) {
   \                     ??PROIOComponent:
   \   00000000   31402DE9           PUSH     {R0,R4,R5,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0110A0E3           MOV      R1,#+1
   \   0000000C   ........           _BLF     ??PRogramObjectBase,??PRogramObjectBase??rA
   \   00000010   78009FE5           LDR      R0,??PROIOComponent_1  ;; ??__vtbl
   \   00000014   A85084E2           ADD      R5,R4,#+168
   \   00000018   A40084E5           STR      R0,[R4, #+164]
   \   0000001C   0110A0E3           MOV      R1,#+1
   \   00000020   0D00A0E1           MOV      R0,SP
   \   00000024   ........           _BLF     __data_memzero,??__data_memzero??rA
   \   00000028   0500A0E1           MOV      R0,R5
   \   0000002C   ........           _BLF     ??_Clear,??_Clear??rA
   \   00000030   0000DDE5           LDRB     R0,[SP, #+0]
   \   00000034   0110A0E3           MOV      R1,#+1
   \   00000038   1400C5E5           STRB     R0,[R5, #+20]
   \   0000003C   C05084E2           ADD      R5,R4,#+192
   \   00000040   01008DE2           ADD      R0,SP,#+1
   \   00000044   ........           _BLF     __data_memzero,??__data_memzero??rA
   \   00000048   0500A0E1           MOV      R0,R5
   \   0000004C   ........           _BLF     ??_Clear,??_Clear??rA
   \   00000050   0100DDE5           LDRB     R0,[SP, #+1]
   \   00000054   1400C5E5           STRB     R0,[R5, #+20]
   \   00000058   D80084E2           ADD      R0,R4,#+216
   \   0000005C   ........           _BLF     ??AnsiString,??AnsiString??rA
     10              HWFailure      = false;
   \   00000060   0000A0E3           MOV      R0,#+0
   \   00000064   0010A0E3           MOV      R1,#+0
   \   00000068   0C11C4E5           STRB     R1,[R4, #+268]
     11              MyHWFailure    = false;
   \   0000006C   0D11C4E5           STRB     R1,[R4, #+269]
     12              IOChannel      = 0;
     13              TCUAddress     = 0;
   \   00000070   F40084E5           STR      R0,[R4, #+244]
     14              IOType         = 0;
   \   00000074   FC0084E5           STR      R0,[R4, #+252]
     15              IOAddress      = 0;
   \   00000078   000184E5           STR      R0,[R4, #+256]
     16              IOChannel      = 0;
   \   0000007C   040184E5           STR      R0,[R4, #+260]
     17              ADCardChannel  = 0;
   \   00000080   080184E5           STR      R0,[R4, #+264]
     18          
     19          }
   \   00000084   0400A0E1           MOV      R0,R4
   \   00000088   3240BDE8           POP      {R1,R4,R5,LR}
   \   0000008C   1EFF2FE1           BX       LR               ;; return
   \                     ??PROIOComponent_1:
   \   00000090   ........           DC32     ??__vtbl
     20          

   \                                 In segment CODE, align 4, keep-with-next
     21          PROIOComponent::~PROIOComponent(void) {
   \                     `?~PROIOComponent`:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
   \   0000000C   000054E3           CMP      R4,#+0
   \   00000010   2700000A           BEQ      `?~PROIOComponent_1`
     22              set<AlarmBasic *>::iterator pBIt;
     23              for (pBIt = AlarmSet.begin(); pBIt != AlarmSet.end(); pBIt++) {
   \   00000014   C06094E5           LDR      R6,[R4, #+192]
   \   00000018   0B0000EA           B        `?~PROIOComponent_2`
     24                  delete *pBIt;
   \                     `?~PROIOComponent_3`:
   \   0000001C   102096E5           LDR      R2,[R6, #+16]
   \   00000020   000052E3           CMP      R2,#+0
   \   00000024   0500000A           BEQ      `?~PROIOComponent_4`
   \   00000028   0200A0E1           MOV      R0,R2
   \   0000002C   A42092E5           LDR      R2,[R2, #+164]
   \   00000030   0310A0E3           MOV      R1,#+3
   \   00000034   002092E5           LDR      R2,[R2, #+0]
   \   00000038   0FE0A0E1           MOV      LR,PC
   \   0000003C   12FF2FE1           BX       R2
     25              }
   \                     `?~PROIOComponent_4`:
   \   00000040   0600A0E1           MOV      R0,R6
   \   00000044   ........           _BLF     ??_IncP,??_IncP??rA
   \   00000048   0060A0E1           MOV      R6,R0
   \                     `?~PROIOComponent_2`:
   \   0000004C   C00084E2           ADD      R0,R4,#+192
   \   00000050   000056E1           CMP      R6,R0
   \   00000054   F0FFFF1A           BNE      `?~PROIOComponent_3`
     26          }
   \   00000058   0020A0E3           MOV      R2,#+0
   \   0000005C   0110A0E3           MOV      R1,#+1
   \   00000060   D80084E2           ADD      R0,R4,#+216
   \   00000064   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000068   C06084E2           ADD      R6,R4,#+192
   \   0000006C   041096E5           LDR      R1,[R6, #+4]
   \   00000070   0600A0E1           MOV      R0,R6
   \   00000074   ........           _BLF     ??_Erase,??_Erase??rA
   \   00000078   0600A0E1           MOV      R0,R6
   \   0000007C   ........           _BLF     ??_Clear,??_Clear??rA
   \   00000080   A86084E2           ADD      R6,R4,#+168
   \   00000084   041096E5           LDR      R1,[R6, #+4]
   \   00000088   0600A0E1           MOV      R0,R6
   \   0000008C   ........           _BLF     ??_Erase_1,??_Erase??rA_1
   \   00000090   0600A0E1           MOV      R0,R6
   \   00000094   ........           _BLF     ??_Clear,??_Clear??rA
   \   00000098   0010A0E3           MOV      R1,#+0
   \   0000009C   0400A0E1           MOV      R0,R4
   \   000000A0   ........           _BLF     `?~PRogramObjectBase`,`?~PRogramObjectBase??rA`
   \   000000A4   010015E3           TST      R5,#0x1
   \   000000A8   0100000A           BEQ      `?~PROIOComponent_1`
   \   000000AC   0400A0E1           MOV      R0,R4
   \   000000B0   ........           _BLF     `??operator delete`,`??operator delete??rA`
   \                     `?~PROIOComponent_1`:
   \   000000B4   ........           B        ?Subroutine20

   \                                 In segment CODE, align 4, keep-with-next
   \                     ?Subroutine20:
   \   00000000   7040BDE8           POP      {R4-R6,LR}
   \   00000004   1EFF2FE1           BX       LR               ;; return
     27          //---------------------------------------------------------------------------

   \                                 In segment CODE, align 4, keep-with-next
     28          U8 PROIOComponent::GetFilter(void) {
     29              return (FILTER_DEFAULT);
   \                     ??GetFilter:
   \   00000000   ........           B        ?Subroutine21
     30          }

   \                                 In segment CODE, align 4, keep-with-next
   \                     ?Subroutine21:
   \   00000000   0100A0E3           MOV      R0,#+1
   \   00000004   1EFF2FE1           BX       LR               ;; return
     31          
     32          
     33          ///////////////////////////////////////////////////////////////
     34          //
     35          // Routines for the Configuration
     36          //
     37          ///////////////////////////////////////////////////////////////
     38          

   \                                 In segment CODE, align 4, keep-with-next
     39          AnsiString PROIOComponent::MakeConfigString(int ExtraTabs) {
   \                     ??MakeConfigString:
   \   00000000   00402DE9           PUSH     {LR}
   \   00000004   0100A0E1           MOV      R0,R1
     40              return (""); //PRogramObjectBase::MakeConfigString(ConfigString);
   \   00000008   ........           ADR      R1,??Subroutine19_0  ;; ""
   \   0000000C   ........           _BLF     ??AnsiString_1,??AnsiString??rA_1
   \   00000010                      REQUIRE ?Subroutine19
   \   00000010                      ;; // Fall through to label ?Subroutine19
     41          }

   \                                 In segment CODE, align 4, keep-with-next
   \                     ?Subroutine19:
   \   00000000   0040BDE8           POP      {LR}
   \   00000004   1EFF2FE1           BX       LR               ;; return
   \                     ??Subroutine19_0:
   \   00000008   00000000           DC8      "",+0,+0,+0
     42          //---------------------------------------------------------------------------
     43          

   \                                 In segment CODE, align 4, keep-with-next
     44          bool PROIOComponent::LoadConfigString(TSNConfigString &ConfigString) {
     45              return (true); //PRogramObjectBase::LoadConfigString(ConfigString);
   \                     ??LoadConfigString:
   \   00000000                      REQUIRE ?Subroutine21
   \   00000000                      ;; // Fall through to label ?Subroutine21
     46          }
     47          //---------------------------------------------------------------------------
     48          
     49          ///////////////////////////////////////////////////////////////
     50          //
     51          // Routines for the librarian
     52          //
     53          ///////////////////////////////////////////////////////////////
     54          

   \                                 In segment CODE, align 4, keep-with-next
     55          int  PROIOComponent::GetValue(int ValueId, int Index, float &MyRetValue, int &DecPnt, int &Unit) {
   \                     ??GetValue:
   \   00000000   F0402DE9           PUSH     {R4-R7,LR}
   \   00000004   18C09DE5           LDR      R12,[SP, #+24]
   \   00000008   0340A0E1           MOV      R4,R3
   \   0000000C   14309DE5           LDR      R3,[SP, #+20]
     56              int Status = GETVAL_NO_ERR;
   \   00000010   0050A0E3           MOV      R5,#+0
     57              switch (ValueId) {
   \   00000014   00E0A0E3           MOV      LR,#+0
   \   00000018   E26041E2           SUB      R6,R1,#+226
   \   0000001C   406E46E2           SUB      R6,R6,#+1024
   \   00000020   050056E3           CMP      R6,#+5
   \   00000024   1A00008A           BHI      ??GetValue_3
   \   00000028   017F8FE2           ADR      R7,??GetValue_1
   \   0000002C   0670D7E7           LDRB     R7,[R7, R6]
   \   00000030   07F18FE0           ADD      PC,PC,R7, LSL #+2
   \                     ??GetValue_1:
   \   00000034   0107170B           DC8      +1,+7,+23,+11
   \   00000038   0F130000           DC8      +15,+19,+0,+0
     58              case SVT_IOC_TCU_ADDRES:
     59                  DecPnt     = 0;
   \                     ??GetValue_4:
   \   0000003C   00E083E5           STR      LR,[R3, #+0]
     60                  Unit       = NO_UNIT;
   \   00000040   00E08CE5           STR      LR,[R12, #+0]
     61                  MyRetValue = (float)TCUAddress;
   \   00000044   F40090E5           LDR      R0,[R0, #+244]
   \                     ??GetValue_5:
   \   00000048   ........           _BLF     __longToFloat,??__longToFloat??rA
   \   0000004C   000084E5           STR      R0,[R4, #+0]
   \   00000050   150000EA           B        ??GetValue_6
     62                  break;
     63              case SVT_IOC_TCU_PORT:
     64                  DecPnt     = 0;
   \                     ??GetValue_7:
   \   00000054   00E083E5           STR      LR,[R3, #+0]
     65                  Unit       = NO_UNIT;
   \   00000058   00E08CE5           STR      LR,[R12, #+0]
     66                  MyRetValue = (float)TCUPortNo;
   \   0000005C   F80090E5           LDR      R0,[R0, #+248]
   \   00000060   F8FFFFEA           B        ??GetValue_5
     67                  break;
     68              case SVT_IOC_IO_ADDRESS:
     69                  DecPnt     = 0;
   \                     ??GetValue_8:
   \   00000064   00E083E5           STR      LR,[R3, #+0]
     70                  Unit       = NO_UNIT;
   \   00000068   00E08CE5           STR      LR,[R12, #+0]
     71                  MyRetValue = (float)IOAddress;
   \   0000006C   000190E5           LDR      R0,[R0, #+256]
   \                     ??GetValue_9:
   \   00000070   F4FFFFEA           B        ??GetValue_5
     72                  break;
     73              case SVT_IOC_IO_CHANNEL:
     74                  DecPnt     = 0;
   \                     ??GetValue_10:
   \   00000074   00E083E5           STR      LR,[R3, #+0]
     75                  Unit       = NO_UNIT;
   \   00000078   00E08CE5           STR      LR,[R12, #+0]
     76                  MyRetValue = (float)IOChannel;
   \   0000007C   040190E5           LDR      R0,[R0, #+260]
   \   00000080   F0FFFFEA           B        ??GetValue_5
     77                  break;
     78              case SVT_IOC_ADCARD_CHANNEL :
     79                  DecPnt     = 0;
   \                     ??GetValue_11:
   \   00000084   00E083E5           STR      LR,[R3, #+0]
     80                  Unit       = NO_UNIT;
   \   00000088   00E08CE5           STR      LR,[R12, #+0]
     81                  MyRetValue = (float)ADCardChannel;
   \   0000008C   080190E5           LDR      R0,[R0, #+264]
   \   00000090   ECFFFFEA           B        ??GetValue_5
     82                  break;
     83              case SVT_IO_CH_RAW_VAL:
     84              default:
     85                  Status = PRogramObjectBase::GetValue(ValueId, Index, MyRetValue,  DecPnt, Unit);
   \                     ??GetValue_3:
   \   00000094   00102DE9           PUSH     {R12}
   \   00000098   08002DE9           PUSH     {R3}
   \   0000009C   0430A0E1           MOV      R3,R4
   \   000000A0   ........           _BLF     ??GetValue_2,??GetValue??rA
   \   000000A4   0050A0E1           MOV      R5,R0
   \   000000A8   08D08DE2           ADD      SP,SP,#+8
     86                  break;
     87              }
     88              return (Status);
   \                     ??GetValue_6:
   \   000000AC   0500A0E1           MOV      R0,R5
   \   000000B0   F040BDE8           POP      {R4-R7,LR}
   \   000000B4   1EFF2FE1           BX       LR               ;; return
     89          }
     90          

   \                                 In segment CODE, align 4, keep-with-next
     91          int PROIOComponent::GetStringValue(int ValueId, int Index, AnsiString &MyString) {
   \                     ??GetStringValue:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   0340A0E1           MOV      R4,R3
     92              int Status = GETVAL_NO_ERR;
     93          
     94              switch (ValueId) {
   \   00000008   ........           LDR      R3,??DataTable1  ;; ??npos
   \   0000000C   1CD04DE2           SUB      SP,SP,#+28
   \   00000010   006093E5           LDR      R6,[R3, #+0]
   \   00000014   0050A0E3           MOV      R5,#+0
   \   00000018   BCC0A0E3           MOV      R12,#+188
   \   0000001C   40CE8CE3           ORR      R12,R12,#0x400
   \   00000020   0C0051E1           CMP      R1,R12
   \   00000024   0300000A           BEQ      ??GetStringValue_2
   \   00000028   28C08CE2           ADD      R12,R12,#+40
   \   0000002C   0C0051E1           CMP      R1,R12
   \   00000030   0600000A           BEQ      ??GetStringValue_3
   \   00000034   170000EA           B        ??GetStringValue_4
     95              case SVT_AI_SERIAL_NUMBER:
     96                  MyString = SerialNumber;
   \                     ??GetStringValue_2:
   \   00000038   0630A0E1           MOV      R3,R6
   \   0000003C   0020A0E3           MOV      R2,#+0
   \   00000040   D81080E2           ADD      R1,R0,#+216
   \   00000044   0400A0E1           MOV      R0,R4
   \   00000048   ........           _BLF     ??assign,??assign??rA
   \   0000004C   140000EA           B        ??GetStringValue_5
     97                  break;
     98              case SVT_IOC_IO_TYPE_TEXT:
     99                  MyString = FindKeyWord(Type);
   \                     ??GetStringValue_3:
   \   00000050   A01090E5           LDR      R1,[R0, #+160]
   \   00000054   0D00A0E1           MOV      R0,SP
   \   00000058   ........           _BLF     ??FindKeyWord,??FindKeyWord??rA
   \   0000005C   0630A0E1           MOV      R3,R6
   \   00000060   0020A0E3           MOV      R2,#+0
   \   00000064   0D10A0E1           MOV      R1,SP
   \   00000068   0400A0E1           MOV      R0,R4
   \   0000006C   ........           _BLF     ??assign,??assign??rA
   \   00000070   0520A0E1           MOV      R2,R5
   \   00000074   0110A0E3           MOV      R1,#+1
   \   00000078   0D00A0E1           MOV      R0,SP
   \   0000007C   ........           _BLF     ??_Tidy,??_Tidy??rA
    100                  if (MyString.IsEmpty())   Status = GETVAL_ERROR;
   \   00000080   0400A0E1           MOV      R0,R4
   \   00000084   ........           _BLF     ??IsEmpty,??IsEmpty??rA
   \   00000088   000050E3           CMP      R0,#+0
   \   0000008C   0400000A           BEQ      ??GetStringValue_5
   \   00000090   0450A0E3           MOV      R5,#+4
   \   00000094   020000EA           B        ??GetStringValue_5
    101                  break;
    102              default:
    103                  Status = PRogramObjectBase::GetStringValue(ValueId, Index, MyString);
   \                     ??GetStringValue_4:
   \   00000098   0430A0E1           MOV      R3,R4
   \   0000009C   ........           _BLF     ??GetStringValue_1,??GetStringValue??rA
   \   000000A0   0050A0E1           MOV      R5,R0
    104                  break;
    105              }
    106              return (Status);
   \                     ??GetStringValue_5:
   \   000000A4   0500A0E1           MOV      R0,R5
   \   000000A8   1CD08DE2           ADD      SP,SP,#+28
   \   000000AC                      REQUIRE ?Subroutine20
   \   000000AC                      ;; // Fall through to label ?Subroutine20
    107          }
    108          

   \                                 In segment CODE, align 4, keep-with-next
    109          int PROIOComponent::PutValue(int ValueId, int Index, AnsiString NewValue, bool Local, int *UnitId) {
   \                     ??PutValue:
   \   00000000   F04F2DE9           PUSH     {R4-R11,LR}
   \   00000004   0040A0E1           MOV      R4,R0
    110              int Status = E_NO_ERR, ValUnitId = NO_UNIT;
    111              switch (ValueId) {
   \   00000008   ........           LDR      R0,??DataTable1  ;; ??npos
   \   0000000C   20D04DE2           SUB      SP,SP,#+32
   \   00000010   4480DDE5           LDRB     R8,[SP, #+68]
   \   00000014   48909DE5           LDR      R9,[SP, #+72]
   \   00000018   00B090E5           LDR      R11,[R0, #+0]
   \   0000001C   0150A0E1           MOV      R5,R1
   \   00000020   0260A0E1           MOV      R6,R2
   \   00000024   0370A0E1           MOV      R7,R3
   \   00000028   00A0A0E3           MOV      R10,#+0
   \   0000002C   0010A0E3           MOV      R1,#+0
   \   00000030   00108DE5           STR      R1,[SP, #+0]
   \   00000034   BC10A0E3           MOV      R1,#+188
   \   00000038   401E81E3           ORR      R1,R1,#0x400
   \   0000003C   010055E1           CMP      R5,R1
   \   00000040   0500001A           BNE      ??PutValue_2
    112              case SVT_AI_SERIAL_NUMBER:
    113                  SerialNumber = NewValue;
   \   00000044   0B30A0E1           MOV      R3,R11
   \   00000048   0020A0E3           MOV      R2,#+0
   \   0000004C   0710A0E1           MOV      R1,R7
   \   00000050   D80084E2           ADD      R0,R4,#+216
   \   00000054   ........           _BLF     ??assign,??assign??rA
   \   00000058   180000EA           B        ??PutValue_3
    114                  break;
    115              default:
    116                  Status = PRogramObjectBase::PutValue(ValueId, Index, NewValue, Local, &ValUnitId);
   \                     ??PutValue_2:
   \   0000005C   0020A0E3           MOV      R2,#+0
   \   00000060   0210A0E1           MOV      R1,R2
   \   00000064   04008DE2           ADD      R0,SP,#+4
   \   00000068   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   0000006C   0B30A0E1           MOV      R3,R11
   \   00000070   0A20A0E1           MOV      R2,R10
   \   00000074   0710A0E1           MOV      R1,R7
   \   00000078   04008DE2           ADD      R0,SP,#+4
   \   0000007C   ........           _BLF     ??assign,??assign??rA
   \   00000080   0D00A0E1           MOV      R0,SP
   \   00000084   01002DE9           PUSH     {R0}
   \   00000088   00012DE9           PUSH     {R8}
   \   0000008C   0C308DE2           ADD      R3,SP,#+12
   \   00000090   0620A0E1           MOV      R2,R6
   \   00000094   0510A0E1           MOV      R1,R5
   \   00000098   0400A0E1           MOV      R0,R4
   \   0000009C   ........           _BLF     ??PutValue_1,??PutValue??rA
   \   000000A0   00A0A0E1           MOV      R10,R0
   \   000000A4   0020A0E3           MOV      R2,#+0
   \   000000A8   0110A0E3           MOV      R1,#+1
   \   000000AC   0C008DE2           ADD      R0,SP,#+12
   \   000000B0   ........           _BLF     ??_Tidy,??_Tidy??rA
    117                  break;
    118              }
    119              if (Status == E_NO_ERR) {
   \   000000B4   00005AE3           CMP      R10,#+0
   \   000000B8   08D08DE2           ADD      SP,SP,#+8
   \   000000BC   0400001A           BNE      ??PutValue_4
    120                  SetModifiedFlag();
   \                     ??PutValue_3:
   \   000000C0   A41094E5           LDR      R1,[R4, #+164]
   \   000000C4   0400A0E1           MOV      R0,R4
   \   000000C8   541091E5           LDR      R1,[R1, #+84]
   \   000000CC   0FE0A0E1           MOV      LR,PC
   \   000000D0   11FF2FE1           BX       R1
    121              }
    122              if (UnitId) {
   \                     ??PutValue_4:
   \   000000D4   000059E3           CMP      R9,#+0
    123                  *UnitId = ValUnitId;
   \   000000D8   00009D15           LDRNE    R0,[SP, #+0]
   \   000000DC   00008915           STRNE    R0,[R9, #+0]
    124              }
    125              return (Status);
   \   000000E0   0A00A0E1           MOV      R0,R10
   \   000000E4   20D08DE2           ADD      SP,SP,#+32
   \   000000E8   F04FBDE8           POP      {R4-R11,LR}
   \   000000EC   1EFF2FE1           BX       LR               ;; return
    126          
    127          }
    128          

   \                                 In segment CODE, align 4, keep-with-next
    129          int PROIOComponent::PutFloatValue(int ValueId, float NewValue) {
   \                     ??PutFloatValue:
   \   00000000   00402DE9           PUSH     {LR}
    130              return (PRogramObjectBase::PutFloatValue(ValueId, NewValue));
   \   00000004   ........           _BLF     ??PutFloatValue_1,??PutFloatValue??rA
   \   00000008   ........           B        ?Subroutine19
    131          }
    132          
    133          

   \                                 In segment CODE, align 4, keep-with-next
    134          float PROIOComponent::Calculate(void) {
    135              return (0.0);
   \                     ??Calculate:
   \   00000000   ........           B        ?Subroutine22
    136          }

   \                                 In segment CODE, align 4, keep-with-next
   \                     ?Subroutine22:
   \   00000000   0000A0E3           MOV      R0,#+0
   \   00000004   1EFF2FE1           BX       LR               ;; return
    137          

   \                                 In segment CODE, align 4, keep-with-next
    138          void PROIOComponent::AddAlarms(set<AlarmBasic *> &AlInfoList) {
   \                     ??AddAlarms:
   \   00000000   73402DE9           PUSH     {R0,R1,R4-R6,LR}
   \   00000004   0040A0E1           MOV      R4,R0
    139              set<AlarmBasic *>::iterator pBIt;
    140              for (pBIt = AlarmSet.begin(); pBIt != AlarmSet.end(); pBIt++) {
   \   00000008   C06094E5           LDR      R6,[R4, #+192]
   \   0000000C   0150A0E1           MOV      R5,R1
   \   00000010   060000EA           B        ??AddAlarms_1
    141                  AlInfoList.insert(*pBIt);
   \                     ??AddAlarms_2:
   \   00000014   102096E5           LDR      R2,[R6, #+16]
   \   00000018   0510A0E1           MOV      R1,R5
   \   0000001C   0D00A0E1           MOV      R0,SP
   \   00000020   ........           _BLF     ??insert,??insert??rA
    142              }
   \   00000024   0600A0E1           MOV      R0,R6
   \   00000028   ........           _BLF     ??_IncP,??_IncP??rA
   \   0000002C   0060A0E1           MOV      R6,R0
   \                     ??AddAlarms_1:
   \   00000030   C00084E2           ADD      R0,R4,#+192
   \   00000034   000056E1           CMP      R6,R0
   \   00000038   F5FFFF1A           BNE      ??AddAlarms_2
    143          }
   \   0000003C   7340BDE8           POP      {R0,R1,R4-R6,LR}
   \   00000040   1EFF2FE1           BX       LR               ;; return
    144          

   \                                 In segment CODE, align 4, keep-with-next
    145          void PROIOComponent::SetStatus(U8 *NewStatus) {
    146          }
   \                     ??SetStatus:
   \   00000000   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
    147          void PROIOComponent::NewValue(float NewValue) {
    148              HWFailure     = false;
   \                     ??NewValue:
   \   00000000   0010A0E3           MOV      R1,#+0
   \   00000004   0C11C0E5           STRB     R1,[R0, #+268]
    149          }
   \   00000008   1EFF2FE1           BX       LR               ;; return
    150          

   \                                 In segment CODE, align 4, keep-with-next
    151          int PROIOComponent::SendData(U16 cmd) {
    152              return (0);
   \                     ??SendData:
   \   00000000                      REQUIRE ?Subroutine22
   \   00000000                      ;; // Fall through to label ?Subroutine22
    153          }
    154          

   \                                 In segment CODE, align 4, keep-with-next
    155          int PROIOComponent::ReceiveData(U8 *data) {
    156              return (0);
   \                     ??ReceiveData:
   \   00000000   ........           B        ?Subroutine22
    157          }
    158          #pragma diag_suppress=Pa082

   \                                 In segment CODE, align 4, keep-with-next
    159          bool PROIOComponent::HasActiveAlarms(void) {
    160              //return HWFailure | MyHWFailure | ActiveAlarms;
    161              if (HWFailure) {
   \                     ??HasActiveAlarms:
   \   00000000   0C11D0E5           LDRB     R1,[R0, #+268]
   \   00000004   000051E3           CMP      R1,#+0
    162                  return HWFailure;
   \   00000008   0C01D015           LDRBNE   R0,[R0, #+268]
   \   0000000C   1EFF2F11           BXNE     LR
    163              }
    164              if (MyHWFailure) {
   \   00000010   0D11D0E5           LDRB     R1,[R0, #+269]
   \   00000014   000051E3           CMP      R1,#+0
    165                  return MyHWFailure;
   \   00000018   0D01D015           LDRBNE   R0,[R0, #+269]
   \   0000001C   1EFF2F11           BXNE     LR
    166              }
    167              if (ActiveAlarms) {
   \   00000020   381090E5           LDR      R1,[R0, #+56]
   \   00000024   000051E3           CMP      R1,#+0
   \   00000028   0300000A           BEQ      ??HasActiveAlarms_1
    168                  return ActiveAlarms;
   \   0000002C   380090E5           LDR      R0,[R0, #+56]
   \   00000030   000050E3           CMP      R0,#+0
   \   00000034   0100A013           MOVNE    R0,#+1
   \   00000038   1EFF2FE1           BX       LR
    169              }
    170              /*
    171              bool HasActAl       = false;
    172              if ( HWFailure ) {
    173                  HasActAl = true;
    174              } else {
    175                  set<PRogramObjectBase*>::iterator ObjIt;
    176                  for ( ObjIt=AlarmSet.begin();!HasActAl &&  ObjIt!=AlarmSet.end(); ObjIt++ ) {
    177                      AlarmBasic *AlPtr = (AlarmBasic*)*ObjIt;
    178                      switch ( AlPtr->State ) {
    179                      case AlActive     :
    180                      case AlAknowledged:
    181                          HasActAl = true;
    182                          break;
    183                      case AlIdle       :
    184                      case AlBlocked  :
    185                          break;
    186                      }
    187                  }
    188              }
    189              return(HasActAl);
    190              */
    191              return false;
   \                     ??HasActiveAlarms_1:
   \   0000003C   ........           B        ?Subroutine22
    192          }
    193          

   \                                 In segment CODE, align 4, keep-with-next
    194          void PROIOComponent::AddIOMdulePtr(ANPRO10Object *IOModule) {
   \                     ??AddIOMdulePtr:
   \   00000000   03402DE9           PUSH     {R0,R1,LR}
    195              IOModuleSet.insert(IOModule);
   \   00000004   0120A0E1           MOV      R2,R1
   \   00000008   A81080E2           ADD      R1,R0,#+168
   \   0000000C   0D00A0E1           MOV      R0,SP
   \   00000010   ........           _BLF     ??insert_1,??insert??rA_1
    196          }
   \   00000014   0340BDE8           POP      {R0,R1,LR}
   \   00000018   1EFF2FE1           BX       LR               ;; return

   \                                 In segment DIFUNCT, align 4, keep-with-next, root
   \   00000000                      REQUIRE ?call_ctors
   \   00000000   ........           DC32    ??__sti__routine

   \                                 In segment DATA_C, align 1, align-sorted
   \   00000000   00                 DC8 ""

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs PROIOComponent &PROIOComponent::new PROIOComponent()
   \                     `??new PROIOComponent`:
   \   00000000   00402DE9           PUSH     {LR}
   \   00000004   440FA0E3           MOV      R0,#+272
   \   00000008   ........           _BLF     `??operator new`,`??operator new??rA`
   \   0000000C   000050E3           CMP      R0,#+0
   \   00000010   0000000A           BEQ      `??new PROIOComponent_1`
   \   00000014   ........           BL       ??PROIOComponent
   \                     `??new PROIOComponent_1`:
   \   00000018   ........           B        ?Subroutine19

   \                                 In segment CODE, align 4, keep-with-next
   \   static __??Code32?? __intrinsic __code __interwork __atpcs void __sti__routine()
   \                     ??__sti__routine:
   \   00000000   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable1:
   \   00000000   ........           DC32     ??npos
    197          
    198          

   Maximum stack usage in bytes:

     Function                       CSTACK
     --------                       ------
     PROIOComponent::AddAlarms(set<AlarmBasic *> &)
                                       24
     PROIOComponent::AddIOMdulePtr(ANPRO10Object *)
                                       12
     PROIOComponent::Calculate()        0
     PROIOComponent::GetFilter()        0
     PROIOComponent::GetStringValue(int, int, AnsiString &)
                                       44
     PROIOComponent::GetValue(int, int, float &, int &, int &)
                                       28
     PROIOComponent::HasActiveAlarms()
                                        0
     PROIOComponent::LoadConfigString(TSNConfigString &)
                                        0
     PROIOComponent::MakeConfigString(int)
                                        4
     PROIOComponent::NewValue(float)
                                        0
     PROIOComponent::PROIOComponent()
                                       16
     PROIOComponent::PutFloatValue(int, float)
                                        4
     PROIOComponent::PutValue(int, int, AnsiString, bool, int *)
                                       76
     PROIOComponent::ReceiveData(unsigned char *)
                                        0
     PROIOComponent::SendData(unsigned short)
                                        0
     PROIOComponent::SetStatus(unsigned char *)
                                        0
     PROIOComponent::new PROIOComponent()
                                        4
     PROIOComponent::~PROIOComponent()
                                       16
     _Tree<_Tset_traits<ANPRO10Object *, less<ANPRO10Object *>, allocator<ANPRO10Object *>, false>>::_Erase(_Tree<_Tset_traits<ANPRO10Object *, less<ANPRO10Object *>, allocator<ANPRO10Object *>, false>>::_Nodeptr)
                                       16
     _Tree<_Tset_traits<ANPRO10Object *, less<ANPRO10Object *>, allocator<ANPRO10Object *>, false>>::_Insert(bool, _Tree<_Tset_traits<ANPRO10Object *, less<ANPRO10Object *>, allocator<ANPRO10Object *>, false>>::_Nodeptr, ANPRO10Object *)
                                       24
     _Tree<_Tset_traits<ANPRO10Object *, less<ANPRO10Object *>, allocator<ANPRO10Object *>, false>>::insert(ANPRO10Object *)
                                       44
     _Tree<_Tset_traits<AlarmBasic *, less<AlarmBasic *>, allocator<AlarmBasic *>, false>>::_Erase(_Tree<_Tset_traits<AlarmBasic *, less<AlarmBasic *>, allocator<AlarmBasic *>, false>>::_Nodeptr)
                                       16
     _Tree<_Tset_traits<AlarmBasic *, less<AlarmBasic *>, allocator<AlarmBasic *>, false>>::_Insert(bool, _Tree<_Tset_traits<AlarmBasic *, less<AlarmBasic *>, allocator<AlarmBasic *>, false>>::_Nodeptr, AlarmBasic *)
                                       24
     _Tree<_Tset_traits<AlarmBasic *, less<AlarmBasic *>, allocator<AlarmBasic *>, false>>::insert(AlarmBasic *)
                                       44
     _Tree_algobase<allocator<void>>::_Clear()
                                        0
     _Tree_algobase<allocator<void>>::_DecP(_Tree_algobase<allocator<void>>::_Genptr)
                                        0
     _Tree_algobase<allocator<void>>::_IncP(_Tree_algobase<allocator<void>>::_Genptr)
                                        0
     _Tree_algobase<allocator<void>>::_Insert(bool, _Tree_algobase<allocator<void>>::_Genptr, _Tree_algobase<allocator<void>>::_Genptr)
                                       20
     _Tree_algobase<allocator<void>>::_Lrotate(_Tree_algobase<allocator<void>>::_Genptr)
                                        0
     _Tree_algobase<allocator<void>>::_Rrotate(_Tree_algobase<allocator<void>>::_Genptr)
                                        0
     __sti__routine()                   0


   Segment part sizes:

     Function/Label                 Bytes
     --------------                 -----
     _Tree_algobase<allocator<void>>::_DecP(_Tree_algobase<allocator<void>>::_Genptr)
                                     100
     _Tree_algobase<allocator<void>>::_IncP(_Tree_algobase<allocator<void>>::_Genptr)
                                      92
     _Tree_algobase<allocator<void>>::_Clear()
                                      36
     _Tree_algobase<allocator<void>>::_Rrotate(_Tree_algobase<allocator<void>>::_Genptr)
                                      84
     _Tree_algobase<allocator<void>>::_Lrotate(_Tree_algobase<allocator<void>>::_Genptr)
                                      84
     _Tree_algobase<allocator<void>>::_Insert(bool, _Tree_algobase<allocator<void>>::_Genptr, _Tree_algobase<allocator<void>>::_Genptr)
                                     356
     _Tree<_Tset_traits<AlarmBasic *, less<AlarmBasic *>, allocator<AlarmBasic *>, false>>::insert(AlarmBasic *)
                                     200
     _Tree<_Tset_traits<ANPRO10Object *, less<ANPRO10Object *>, allocator<ANPRO10Object *>, false>>::insert(ANPRO10Object *)
                                     200
     _Tree<_Tset_traits<AlarmBasic *, less<AlarmBasic *>, allocator<AlarmBasic *>, false>>::_Erase(_Tree<_Tset_traits<AlarmBasic *, less<AlarmBasic *>, allocator<AlarmBasic *>, false>>::_Nodeptr)
                                      68
     _Tree<_Tset_traits<ANPRO10Object *, less<ANPRO10Object *>, allocator<ANPRO10Object *>, false>>::_Erase(_Tree<_Tset_traits<ANPRO10Object *, less<ANPRO10Object *>, allocator<ANPRO10Object *>, false>>::_Nodeptr)
                                      68
     _Tree<_Tset_traits<AlarmBasic *, less<AlarmBasic *>, allocator<AlarmBasic *>, false>>::_Insert(bool, _Tree<_Tset_traits<AlarmBasic *, less<AlarmBasic *>, allocator<AlarmBasic *>, false>>::_Nodeptr, AlarmBasic *)
                                      96
     _Tree<_Tset_traits<ANPRO10Object *, less<ANPRO10Object *>, allocator<ANPRO10Object *>, false>>::_Insert(bool, _Tree<_Tset_traits<ANPRO10Object *, less<ANPRO10Object *>, allocator<ANPRO10Object *>, false>>::_Nodeptr, ANPRO10Object *)
                                      96
     PROIOComponent::PROIOComponent()
                                     148
     PROIOComponent::~PROIOComponent()
                                     184
     ?Subroutine20                     8
     PROIOComponent::GetFilter()       4
     ?Subroutine21                     8
     PROIOComponent::MakeConfigString(int)
                                      16
     ?Subroutine19                    12
     PROIOComponent::LoadConfigString(TSNConfigString &)
                                       0
     PROIOComponent::GetValue(int, int, float &, int &, int &)
                                     184
     PROIOComponent::GetStringValue(int, int, AnsiString &)
                                     172
     PROIOComponent::PutValue(int, int, AnsiString, bool, int *)
                                     240
     PROIOComponent::PutFloatValue(int, float)
                                      12
     PROIOComponent::Calculate()       4
     ?Subroutine22                     8
     PROIOComponent::AddAlarms(set<AlarmBasic *> &)
                                      68
     PROIOComponent::SetStatus(unsigned char *)
                                       4
     PROIOComponent::NewValue(float)
                                      12
     PROIOComponent::SendData(unsigned short)
                                       0
     PROIOComponent::ReceiveData(unsigned char *)
                                       4
     PROIOComponent::HasActiveAlarms()
                                      64
     PROIOComponent::AddIOMdulePtr(ANPRO10Object *)
                                      28
     ?<Constant "">                    1
     PROIOComponent::new PROIOComponent()
                                      28
     __sti__routine()                  4
     ??DataTable1                      4
      Others                         524

 
 3 108 bytes in segment CODE
   109 bytes in segment DATA_C
     4 bytes in segment DIFUNCT
 
 1 220 bytes of CODE  memory (+ 1 892 bytes shared)
   109 bytes of CONST memory

Errors: none
Warnings: none
