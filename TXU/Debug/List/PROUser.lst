##############################################################################
#                                                                            #
# IAR ARM ANSI C/C++ Compiler V4.42A/W32               14/Sep/2022  15:16:57 #
# Copyright 1999-2005 IAR Systems. All rights reserved.                      #
#                                                                            #
#    Cpu mode        =  interwork                                            #
#    Endian          =  little                                               #
#    Stack alignment =  4                                                    #
#    Source file     =  D:\S2Prog\Shared\Src\PROUser.cpp                     #
#    Command line    =  D:\S2Prog\Shared\Src\PROUser.cpp --fpu None -D       #
#                       OS_LIBMODE_SP -D CPU_S3C2410 -D OS_RAMVECT=0 -D      #
#                       OS_UART=-1 -D S2TXU -D USE_LZO=1 -D __ARM_LIBRARY__  #
#                       -D WATCHDOG=1 -D NETWORK=1 -lCN                      #
#                       D:\S2Prog\TXU\Debug\List\ -o                         #
#                       D:\S2Prog\TXU\Debug\Obj\ -z9 --debug --cpu_mode arm  #
#                       --endian little --cpu ARM920T --stack_align 4        #
#                       --interwork -e --enable_multibytes --eec++           #
#                       --dlib_config "C:\Program Files (x86)\IAR            #
#                       Systems\Embedded Workbench                           #
#                       4.0\arm\LIB\dl4tpainl8n.h" -I                        #
#                       D:\S2Prog\TXU\GUI\CORE\ -I D:\S2Prog\TXU\GUI\WM\ -I  #
#                       D:\S2Prog\TXU\GUI\WIDGET\ -I D:\S2Prog\TXU\CONFIG\   #
#                       -I D:\S2Prog\TXU\INC\ -I D:\S2Prog\TXU\..\SHARED\INC #
#                       \ -I D:\S2Prog\TXU\..\SHARED\SRC\ -I                 #
#                       D:\S2Prog\TXU\..\SHARED\LZO\minilzo.210\ -I          #
#                       D:\S2Prog\TXU\lwip-1.4.1\src\include\ -I             #
#                       D:\S2Prog\TXU\lwip-1.4.1\src\include\ipv4\ -I        #
#                       D:\S2Prog\TXU\lwip-1.4.1\src\ -I                     #
#                       D:\S2Prog\TXU\..\SHARED\Database\ -I                 #
#                       D:\S2Prog\TXU\src\ -I "C:\Program Files (x86)\IAR    #
#                       Systems\Embedded Workbench 4.0\arm\INC\"             #
#                       --inline_threshold=2                                 #
#    List file       =  D:\S2Prog\TXU\Debug\List\PROUser.lst                 #
#    Object file     =  D:\S2Prog\TXU\Debug\Obj\PROUser.r79                  #
#                                                                            #
#                                                                            #
##############################################################################

D:\S2Prog\Shared\Src\PROUser.cpp
      1          #include "TSNIncludes.h"

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void _Vector_value<allocator<void>>::_Zero()
   \                     ??_Zero:
   \   00000000   0010A0E3           MOV      R1,#+0
   \   00000004   001080E5           STR      R1,[R0, #+0]
   \   00000008   041080E5           STR      R1,[R0, #+4]
   \   0000000C   081080E5           STR      R1,[R0, #+8]
   \   00000010   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void _Vector_impl<PROUser *, allocator<PROUser *>>::_Tidy0()
   \                     ??_Tidy0:
   \   00000000   00402DE9           PUSH     {LR}
   \   00000004   001090E5           LDR      R1,[R0, #+0]
   \   00000008   000051E3           CMP      R1,#+0
   \   0000000C   0200000A           BEQ      ??_Tidy0_1
   \   00000010   041080E5           STR      R1,[R0, #+4]
   \   00000014   0100A0E1           MOV      R0,R1
   \   00000018   ........           _BLF     `??operator delete`,`??operator delete??rA`
   \                     ??_Tidy0_1:
   \   0000001C   0040BDE8           POP      {LR}
   \   00000020   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void _Vector_impl<PRogramObjectBase *, allocator<PRogramObjectBase *>>::_Tidy()
   \                     ??_Tidy:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   000094E5           LDR      R0,[R4, #+0]
   \   0000000C   000050E3           CMP      R0,#+0
   \   00000010   0100000A           BEQ      ??_Tidy_2
   \   00000014   040084E5           STR      R0,[R4, #+4]
   \   00000018   ........           _BLF     `??operator delete`,`??operator delete??rA`
   \                     ??_Tidy_2:
   \   0000001C   0400A0E1           MOV      R0,R4
   \   00000020   ........           _BLF     ??_Zero,??_Zero??rA
   \   00000024   1040BDE8           POP      {R4,LR}
   \   00000028   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void _Vector_impl<PRogramObjectBase *, allocator<PRogramObjectBase *>>::_Assign(_Vector_impl<PRogramObjectBase *, allocator<PRogramObjectBase *>> const &)
   \                     ??_Assign:
   \   00000000   71402DE9           PUSH     {R0,R4-R6,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
   \   0000000C   050054E1           CMP      R4,R5
   \   00000010   2E00000A           BEQ      ??_Assign_1
   \   00000014   041095E5           LDR      R1,[R5, #+4]
   \   00000018   000095E5           LDR      R0,[R5, #+0]
   \   0000001C   002041E0           SUB      R2,R1,R0
   \   00000020   2231B0E1           LSRS     R3,R2,#+2
   \   00000024   0200001A           BNE      ??_Assign_2
   \   00000028   0400A0E1           MOV      R0,R4
   \   0000002C   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000030   260000EA           B        ??_Assign_1
   \                     ??_Assign_2:
   \   00000034   002094E5           LDR      R2,[R4, #+0]
   \   00000038   046094E5           LDR      R6,[R4, #+4]
   \   0000003C   026046E0           SUB      R6,R6,R2
   \   00000040   260153E1           CMP      R3,R6, LSR #+2
   \   00000044   0700008A           BHI      ??_Assign_3
   \   00000048   ........           _BLF     _Copy_a4,??_Copy_a4??rA
   \   0000004C   040095E5           LDR      R0,[R5, #+4]
   \   00000050   001095E5           LDR      R1,[R5, #+0]
   \   00000054   010040E0           SUB      R0,R0,R1
   \   00000058   001094E5           LDR      R1,[R4, #+0]
   \   0000005C   2001A0E1           LSR      R0,R0,#+2
   \   00000060   000181E0           ADD      R0,R1,R0, LSL #+2
   \   00000064   180000EA           B        ??_Assign_4
   \                     ??_Assign_3:
   \   00000068   086094E5           LDR      R6,[R4, #+8]
   \   0000006C   026046E0           SUB      R6,R6,R2
   \   00000070   260153E1           CMP      R3,R6, LSR #+2
   \   00000074   1300009A           BLS      ??_Assign_5
   \                     ??_Assign_6:
   \   00000078   000052E3           CMP      R2,#+0
   \   0000007C   0100000A           BEQ      ??_Assign_7
   \   00000080   0200A0E1           MOV      R0,R2
   \   00000084   ........           _BLF     `??operator delete`,`??operator delete??rA`
   \                     ??_Assign_7:
   \   00000088   040095E5           LDR      R0,[R5, #+4]
   \   0000008C   001095E5           LDR      R1,[R5, #+0]
   \   00000090   016040E0           SUB      R6,R0,R1
   \   00000094   0400A0E1           MOV      R0,R4
   \   00000098   ........           _BLF     ??_Zero,??_Zero??rA
   \   0000009C   000056E3           CMP      R6,#+0
   \   000000A0   0A00000A           BEQ      ??_Assign_1
   \   000000A4   0600A0E1           MOV      R0,R6
   \   000000A8   ........           _BLF     `??operator new`,`??operator new??rA`
   \   000000AC   000084E5           STR      R0,[R4, #+0]
   \   000000B0   0020A0E1           MOV      R2,R0
   \   000000B4   042084E5           STR      R2,[R4, #+4]
   \   000000B8   020086E0           ADD      R0,R6,R2
   \   000000BC   080084E5           STR      R0,[R4, #+8]
   \   000000C0   041095E5           LDR      R1,[R5, #+4]
   \   000000C4   000095E5           LDR      R0,[R5, #+0]
   \                     ??_Assign_5:
   \   000000C8   ........           _BLF     _Copy_a4,??_Copy_a4??rA
   \                     ??_Assign_4:
   \   000000CC   040084E5           STR      R0,[R4, #+4]
   \                     ??_Assign_1:
   \   000000D0   7140BDE8           POP      {R0,R4-R6,LR}
   \   000000D4   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs PROUser ** _Vector_impl<PROUser *, allocator<PROUser *>>::_Insert(PROUser **, PROUser * const &)
   \                     ??_Insert:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   005092E5           LDR      R5,[R2, #+0]
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   000094E5           LDR      R0,[R4, #+0]
   \   00000010   0120A0E3           MOV      R2,#+1
   \   00000014   000050E3           CMP      R0,#+0
   \   00000018   0060A003           MOVEQ    R6,#+0
   \   0000001C   00604110           SUBNE    R6,R1,R0
   \   00000020   0400A0E1           MOV      R0,R4
   \   00000024   ........           _BLF     ??_Make_room,??_Make_room??rA
   \   00000028   0110A0E3           MOV      R1,#+1
   \                     ??_Insert_1:
   \   0000002C   ........           STR      R5,[R0], #+4
   \   00000030   011051E2           SUBS     R1,R1,#+1
   \   00000034   FCFFFF1A           BNE      ??_Insert_1
   \   00000038   000094E5           LDR      R0,[R4, #+0]
   \   0000003C   000086E0           ADD      R0,R6,R0
   \   00000040   7040BDE8           POP      {R4-R6,LR}
   \   00000044   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs PROUser ** _Vector_impl<PROUser *, allocator<PROUser *>>::_Make_room(PROUser **, unsigned int)
   \                     ??_Make_room:
   \   00000000   F0472DE9           PUSH     {R4-R10,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   000094E5           LDR      R0,[R4, #+0]
   \   0000000C   0150A0E1           MOV      R5,R1
   \   00000010   081094E5           LDR      R1,[R4, #+8]
   \   00000014   0260A0E1           MOV      R6,R2
   \   00000018   001041E0           SUB      R1,R1,R0
   \   0000001C   2171A0E1           LSR      R7,R1,#+2
   \   00000020   041094E5           LDR      R1,[R4, #+4]
   \   00000024   000056E3           CMP      R6,#+0
   \   00000028   000041E0           SUB      R0,R1,R0
   \   0000002C   2001A0E1           LSR      R0,R0,#+2
   \   00000030   2900000A           BEQ      ??_Make_room_1
   \   00000034   C024E0E3           MVN      R2,#-1073741824
   \   00000038   002042E0           SUB      R2,R2,R0
   \   0000003C   060052E1           CMP      R2,R6
   \   00000040   2500003A           BCC      ??_Make_room_1
   \   00000044   008086E0           ADD      R8,R6,R0
   \   00000048   080057E1           CMP      R7,R8
   \   0000004C   1C00002A           BCS      ??_Make_room_2
   \   00000050   A700A0E1           LSR      R0,R7,#+1
   \   00000054   C014E0E3           MVN      R1,#-1073741824
   \   00000058   001041E0           SUB      R1,R1,R0
   \   0000005C   070051E1           CMP      R1,R7
   \   00000060   0070A033           MOVCC    R7,#+0
   \   00000064   07708020           ADDCS    R7,R0,R7
   \   00000068   080057E1           CMP      R7,R8
   \   0000006C   0870A031           MOVCC    R7,R8
   \   00000070   0701A0E1           LSL      R0,R7,#+2
   \   00000074   ........           _BLF     `??operator new`,`??operator new??rA`
   \   00000078   0090A0E1           MOV      R9,R0
   \   0000007C   000094E5           LDR      R0,[R4, #+0]
   \   00000080   0920A0E1           MOV      R2,R9
   \   00000084   0510A0E1           MOV      R1,R5
   \   00000088   ........           _BLF     _Copy_a4,??_Copy_a4??rA
   \   0000008C   041094E5           LDR      R1,[R4, #+4]
   \   00000090   00A0A0E1           MOV      R10,R0
   \   00000094   06218AE0           ADD      R2,R10,R6, LSL #+2
   \   00000098   0500A0E1           MOV      R0,R5
   \   0000009C   ........           _BLF     _Copy_a4,??_Copy_a4??rA
   \   000000A0   0400A0E1           MOV      R0,R4
   \   000000A4   ........           _BLF     ??_Tidy0,??_Tidy0??rA
   \   000000A8   070189E0           ADD      R0,R9,R7, LSL #+2
   \   000000AC   080084E5           STR      R0,[R4, #+8]
   \   000000B0   080189E0           ADD      R0,R9,R8, LSL #+2
   \   000000B4   040084E5           STR      R0,[R4, #+4]
   \   000000B8   009084E5           STR      R9,[R4, #+0]
   \   000000BC   0A50A0E1           MOV      R5,R10
   \   000000C0   050000EA           B        ??_Make_room_1
   \                     ??_Make_room_2:
   \   000000C4   062181E0           ADD      R2,R1,R6, LSL #+2
   \   000000C8   0500A0E1           MOV      R0,R5
   \   000000CC   ........           _BLF     _Copy_backward_a4,??_Copy_backward_a4??rA
   \   000000D0   040094E5           LDR      R0,[R4, #+4]
   \   000000D4   060180E0           ADD      R0,R0,R6, LSL #+2
   \   000000D8   040084E5           STR      R0,[R4, #+4]
   \                     ??_Make_room_1:
   \   000000DC   0500A0E1           MOV      R0,R5
   \   000000E0   F047BDE8           POP      {R4-R10,LR}
   \   000000E4   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void _Vector_impl<PROUser *, allocator<PROUser *>>::_Push_back0(PROUser *)
   \                     ??_Push_back0:
   \   00000000   02402DE9           PUSH     {R1,LR}
   \   00000004   041090E5           LDR      R1,[R0, #+4]
   \   00000008   082090E5           LDR      R2,[R0, #+8]
   \   0000000C   020051E1           CMP      R1,R2
   \   00000010   0800002A           BCS      ??_Push_back0_1
   \   00000014   00209DE5           LDR      R2,[SP, #+0]
   \   00000018   0130A0E3           MOV      R3,#+1
   \   0000001C   01C0A0E1           MOV      R12,R1
   \                     ??_Push_back0_2:
   \   00000020   ........           STR      R2,[R12], #+4
   \   00000024   013053E2           SUBS     R3,R3,#+1
   \   00000028   FCFFFF1A           BNE      ??_Push_back0_2
   \   0000002C   041081E2           ADD      R1,R1,#+4
   \   00000030   041080E5           STR      R1,[R0, #+4]
   \   00000034   010000EA           B        ??_Push_back0_3
   \                     ??_Push_back0_1:
   \   00000038   0D20A0E1           MOV      R2,SP
   \   0000003C   ........           _BLF     ??_Insert,??_Insert??rA
   \                     ??_Push_back0_3:
   \   00000040   0140BDE8           POP      {R0,LR}
   \   00000044   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs vector<PROUser *>::~vector()
   \                     `?~vector`:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   ........           _BLF     ??_Tidy0,??_Tidy0??rA
   \   0000000C   0400A0E1           MOV      R0,R4
   \   00000010   ........           _BLF     ??_Zero,??_Zero??rA
   \   00000014   1040BDE8           POP      {R4,LR}
   \   00000018   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void operator+(string const &, string const &)
   \                     `??operator+`:
   \   00000000   F0402DE9           PUSH     {R4-R7,LR}
   \   00000004   1CD04DE2           SUB      SP,SP,#+28
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   0150A0E1           MOV      R5,R1
   \   00000010   0260A0E1           MOV      R6,R2
   \   00000014   0020A0E3           MOV      R2,#+0
   \   00000018   0010A0E3           MOV      R1,#+0
   \   0000001C   0D00A0E1           MOV      R0,SP
   \   00000020   ........           _BLF     ??_Tidy_1,??_Tidy??rA_1
   \   00000024   6C009FE5           LDR      R0,`??operator+_1`  ;; ??npos
   \   00000028   0020A0E3           MOV      R2,#+0
   \   0000002C   007090E5           LDR      R7,[R0, #+0]
   \   00000030   0510A0E1           MOV      R1,R5
   \   00000034   0730A0E1           MOV      R3,R7
   \   00000038   0D00A0E1           MOV      R0,SP
   \   0000003C   ........           _BLF     ??assign,??assign??rA
   \   00000040   0730A0E1           MOV      R3,R7
   \   00000044   0020A0E3           MOV      R2,#+0
   \   00000048   0610A0E1           MOV      R1,R6
   \   0000004C   0D00A0E1           MOV      R0,SP
   \   00000050   ........           _BLF     ??append,??append??rA
   \   00000054   0050A0E1           MOV      R5,R0
   \   00000058   0020A0E3           MOV      R2,#+0
   \   0000005C   0210A0E1           MOV      R1,R2
   \   00000060   0400A0E1           MOV      R0,R4
   \   00000064   ........           _BLF     ??_Tidy_1,??_Tidy??rA_1
   \   00000068   0730A0E1           MOV      R3,R7
   \   0000006C   0020A0E3           MOV      R2,#+0
   \   00000070   0510A0E1           MOV      R1,R5
   \   00000074   0400A0E1           MOV      R0,R4
   \   00000078   ........           _BLF     ??assign,??assign??rA
   \   0000007C   0020A0E3           MOV      R2,#+0
   \   00000080   0110A0E3           MOV      R1,#+1
   \   00000084   0D00A0E1           MOV      R0,SP
   \   00000088   ........           _BLF     ??_Tidy_1,??_Tidy??rA_1
   \   0000008C   1CD08DE2           ADD      SP,SP,#+28
   \   00000090   F040BDE8           POP      {R4-R7,LR}
   \   00000094   1EFF2FE1           BX       LR               ;; return
   \                     `??operator+_1`:
   \   00000098   ........           DC32     ??npos

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs AnsiString::AnsiString(AnsiString const &)
   \                     ??AnsiString:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
   \   0000000C   0020A0E3           MOV      R2,#+0
   \   00000010   0010A0E3           MOV      R1,#+0
   \   00000014   ........           _BLF     ??_Tidy_1,??_Tidy??rA_1
   \   00000018   1C009FE5           LDR      R0,??AnsiString_3  ;; ??npos
   \   0000001C   0020A0E3           MOV      R2,#+0
   \   00000020   003090E5           LDR      R3,[R0, #+0]
   \   00000024   0510A0E1           MOV      R1,R5
   \   00000028   0400A0E1           MOV      R0,R4
   \   0000002C   ........           _BLF     ??assign,??assign??rA
   \   00000030   0400A0E1           MOV      R0,R4
   \   00000034   3040BDE8           POP      {R4,R5,LR}
   \   00000038   1EFF2FE1           BX       LR               ;; return
   \                     ??AnsiString_3:
   \   0000003C   ........           DC32     ??npos
      2          #pragma hdrstop
      3          #ifdef BORLAND
      4          #pragma package(smart_init)
      5          #endif

   \                                 In segment DATA_Z, align 4, align-sorted
      6          vector<PROUser*> PROUser::UsersVector;
   \                     ??UsersVector:
   \   00000000                      DS8 12
      7          

   \                                 In segment CODE, align 4, keep-with-next
      8          PROUser::PROUser()
   \                     ??PROUser:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0040A0E1           MOV      R4,R0
      9          {
   \   00000008   0110A0E3           MOV      R1,#+1
   \   0000000C   ........           _BLF     ??PRogramObjectBase,??PRogramObjectBase??rA
   \   00000010   ........           LDR      R0,??DataTable3  ;; ??__vtbl
   \   00000014   A40084E5           STR      R0,[R4, #+164]
   \   00000018   A80084E2           ADD      R0,R4,#+168
   \   0000001C   ........           _BLF     ??AnsiString_1,??AnsiString??rA
   \   00000020   C40084E2           ADD      R0,R4,#+196
   \   00000024   ........           _BLF     ??_Zero,??_Zero??rA
   \   00000028   D00084E2           ADD      R0,R4,#+208
   \   0000002C   ........           _BLF     ??_Zero,??_Zero??rA
   \   00000030   DC0084E2           ADD      R0,R4,#+220
   \   00000034   ........           _BLF     ??_Zero,??_Zero??rA
   \   00000038   E80084E2           ADD      R0,R4,#+232
   \   0000003C   ........           _BLF     ??_Zero,??_Zero??rA
   \   00000040   F40084E2           ADD      R0,R4,#+244
   \   00000044   ........           _BLF     ??_Zero,??_Zero??rA
   \   00000048   400F84E2           ADD      R0,R4,#+256
   \   0000004C   ........           _BLF     ??_Zero,??_Zero??rA
   \   00000050   430F84E2           ADD      R0,R4,#+268
   \   00000054   ........           _BLF     ??_Zero,??_Zero??rA
   \   00000058   460F84E2           ADD      R0,R4,#+280
   \   0000005C   ........           _BLF     ??_Zero,??_Zero??rA
   \   00000060   490F84E2           ADD      R0,R4,#+292
   \   00000064   ........           _BLF     ??_Zero,??_Zero??rA
   \   00000068   4C0F84E2           ADD      R0,R4,#+304
   \   0000006C   ........           _BLF     ??_Zero,??_Zero??rA
   \   00000070   4F0F84E2           ADD      R0,R4,#+316
   \   00000074   ........           _BLF     ??_Zero,??_Zero??rA
   \   00000078   520F84E2           ADD      R0,R4,#+328
   \   0000007C   ........           _BLF     ??_Zero,??_Zero??rA
   \   00000080   550F84E2           ADD      R0,R4,#+340
   \   00000084   ........           _BLF     ??_Zero,??_Zero??rA
   \   00000088   580F84E2           ADD      R0,R4,#+352
   \   0000008C   ........           _BLF     ??_Zero,??_Zero??rA
     10          	// This is just temporarily. When reading the ID-number from Config this is replaced
     11          	IDNumber = (C_PRO_USER << 16) + (UsersVector.size()+1);
   \   00000090   ........           LDR      R0,??DataTable7  ;; ??UsersVector
   \   00000094   041090E5           LDR      R1,[R0, #+4]
   \   00000098   000090E5           LDR      R0,[R0, #+0]
   \   0000009C   000041E0           SUB      R0,R1,R0
   \   000000A0   4113A0E3           MOV      R1,#+67108865
   \   000000A4   A61881E3           ORR      R1,R1,#0xA60000
   \   000000A8   200181E0           ADD      R0,R1,R0, LSR #+2
   \   000000AC   9C0084E5           STR      R0,[R4, #+156]
     12          }
   \   000000B0   0400A0E1           MOV      R0,R4
   \   000000B4   1040BDE8           POP      {R4,LR}
   \   000000B8   1EFF2FE1           BX       LR               ;; return
     13          

   \                                 In segment CODE, align 4, keep-with-next
     14          PROUser::~PROUser(void)
     15          {
   \                     `?~PROUser`:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
   \   0000000C   000054E3           CMP      R4,#+0
   \   00000010   2800000A           BEQ      `?~PROUser_1`
   \   00000014   ........           LDR      R0,??DataTable3  ;; ??__vtbl
   \   00000018   A40084E5           STR      R0,[R4, #+164]
     16          }
   \   0000001C   580F84E2           ADD      R0,R4,#+352
   \   00000020   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000024   550F84E2           ADD      R0,R4,#+340
   \   00000028   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   0000002C   520F84E2           ADD      R0,R4,#+328
   \   00000030   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000034   4F0F84E2           ADD      R0,R4,#+316
   \   00000038   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   0000003C   4C0F84E2           ADD      R0,R4,#+304
   \   00000040   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000044   490F84E2           ADD      R0,R4,#+292
   \   00000048   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   0000004C   460F84E2           ADD      R0,R4,#+280
   \   00000050   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000054   430F84E2           ADD      R0,R4,#+268
   \   00000058   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   0000005C   400F84E2           ADD      R0,R4,#+256
   \   00000060   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000064   F40084E2           ADD      R0,R4,#+244
   \   00000068   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   0000006C   E80084E2           ADD      R0,R4,#+232
   \   00000070   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000074   DC0084E2           ADD      R0,R4,#+220
   \   00000078   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   0000007C   D00084E2           ADD      R0,R4,#+208
   \   00000080   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000084   C40084E2           ADD      R0,R4,#+196
   \   00000088   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   0000008C   0020A0E3           MOV      R2,#+0
   \   00000090   0110A0E3           MOV      R1,#+1
   \   00000094   A80084E2           ADD      R0,R4,#+168
   \   00000098   ........           _BLF     ??_Tidy_1,??_Tidy??rA_1
   \   0000009C   0010A0E3           MOV      R1,#+0
   \   000000A0   0400A0E1           MOV      R0,R4
   \   000000A4   ........           _BLF     `?~PRogramObjectBase`,`?~PRogramObjectBase??rA`
   \   000000A8   010015E3           TST      R5,#0x1
   \   000000AC   0100000A           BEQ      `?~PROUser_1`
   \   000000B0   0400A0E1           MOV      R0,R4
   \   000000B4   ........           _BLF     `??operator delete`,`??operator delete??rA`
   \                     `?~PROUser_1`:
   \   000000B8   ........           B        ?Subroutine12

   \                                 In segment CODE, align 4, keep-with-next
   \                     ?Subroutine12:
   \   00000000   3040BDE8           POP      {R4,R5,LR}
   \   00000004   1EFF2FE1           BX       LR               ;; return
   \                     ??Subroutine12_0:
   \   00000008   ........           DC32     ??AllHeavyFuelOilVector
   \   0000000C   ........           DC32     ??AllObjVector
   \   00000010   ........           DC32     ??AllObjVector_1
   \   00000014   ........           DC32     ??AllDieselVector
   \   00000018   ........           DC32     ??AllLubricantsVector
   \   0000001C   ........           DC32     ??AllMiscVector
   \   00000020   ........           DC32     ??AllFreshWaterVector
   \   00000024   ........           DC32     ??AllObjVector_2
   \   00000028   ........           DC32     ??AllObjVector_3
   \   0000002C   ........           DC32     ??ObjVector
   \   00000030   ........           DC32     ??AllObjVector_4
   \   00000034   ........           DC32     ??AllObjVector_5
   \   00000038   ........           DC32     ??AllObjVector_6
     17          
     18          ///////////////////////////////////////////////////////////////
     19          //
     20          // Routines for the Configuration
     21          //
     22          ///////////////////////////////////////////////////////////////
     23          

   \                                 In segment CODE, align 4, keep-with-next
     24          void PROUser::WriteConfigToFile(TSNConfigString &ConfigString)
     25          {
   \                     ??WriteConfigToFile:
   \   00000000   F0412DE9           PUSH     {R4-R8,LR}
     26          	AnsiString LocalString;
     27          	LocalString +=KeyWord(C_PRO_USER)+CrLfStr;
   \   00000004   BC629FE5           LDR      R6,??WriteConfigToFile_1  ;; CrLfStr
   \   00000008   7EDF4DE2           SUB      SP,SP,#+504
   \   0000000C   0040A0E1           MOV      R4,R0
   \   00000010   0150A0E1           MOV      R5,R1
     28          	LocalString +=TabStr1+KeyWord(C_PRO_USER_NAME)+Name+CrLfStr;
   \   00000014   B0829FE5           LDR      R8,??WriteConfigToFile_1+0x4  ;; TabStr1
   \   00000018   0D00A0E1           MOV      R0,SP
   \   0000001C   ........           _BLF     ??AnsiString_1,??AnsiString??rA
   \   00000020   A610A0E3           MOV      R1,#+166
   \   00000024   401E81E3           ORR      R1,R1,#0x400
   \   00000028   38008DE2           ADD      R0,SP,#+56
   \   0000002C   ........           _BLF     ??KeyWord,??KeyWord??rA
   \   00000030   0620A0E1           MOV      R2,R6
   \   00000034   38108DE2           ADD      R1,SP,#+56
   \   00000038   1C008DE2           ADD      R0,SP,#+28
   \   0000003C   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000040   ........           LDR      R0,??DataTable6  ;; ??npos
   \   00000044   0020A0E3           MOV      R2,#+0
   \   00000048   007090E5           LDR      R7,[R0, #+0]
   \   0000004C   1C108DE2           ADD      R1,SP,#+28
   \   00000050   0730A0E1           MOV      R3,R7
   \   00000054   0D00A0E1           MOV      R0,SP
   \   00000058   ........           _BLF     ??append,??append??rA
   \   0000005C   0020A0E3           MOV      R2,#+0
   \   00000060   0110A0E3           MOV      R1,#+1
   \   00000064   1C008DE2           ADD      R0,SP,#+28
   \   00000068   ........           _BLF     ??_Tidy_1,??_Tidy??rA_1
   \   0000006C   0020A0E3           MOV      R2,#+0
   \   00000070   0110A0E3           MOV      R1,#+1
   \   00000074   38008DE2           ADD      R0,SP,#+56
   \   00000078   ........           _BLF     ??_Tidy_1,??_Tidy??rA_1
   \   0000007C   A710A0E3           MOV      R1,#+167
   \   00000080   401E81E3           ORR      R1,R1,#0x400
   \   00000084   A8008DE2           ADD      R0,SP,#+168
   \   00000088   ........           _BLF     ??KeyWord,??KeyWord??rA
   \   0000008C   A8208DE2           ADD      R2,SP,#+168
   \   00000090   0810A0E1           MOV      R1,R8
   \   00000094   8C008DE2           ADD      R0,SP,#+140
   \   00000098   ........           _BLF     `??operator+`,`??operator+??rA`
   \   0000009C   442084E2           ADD      R2,R4,#+68
   \   000000A0   8C108DE2           ADD      R1,SP,#+140
   \   000000A4   70008DE2           ADD      R0,SP,#+112
   \   000000A8   ........           _BLF     `??operator+`,`??operator+??rA`
   \   000000AC   0620A0E1           MOV      R2,R6
   \   000000B0   70108DE2           ADD      R1,SP,#+112
   \   000000B4   54008DE2           ADD      R0,SP,#+84
   \   000000B8   ........           _BLF     `??operator+`,`??operator+??rA`
   \   000000BC   0730A0E1           MOV      R3,R7
   \   000000C0   0020A0E3           MOV      R2,#+0
   \   000000C4   54108DE2           ADD      R1,SP,#+84
   \   000000C8   0D00A0E1           MOV      R0,SP
   \   000000CC   ........           _BLF     ??append,??append??rA
   \   000000D0   0020A0E3           MOV      R2,#+0
   \   000000D4   0110A0E3           MOV      R1,#+1
   \   000000D8   54008DE2           ADD      R0,SP,#+84
   \   000000DC   ........           _BLF     ??_Tidy_1,??_Tidy??rA_1
   \   000000E0   0020A0E3           MOV      R2,#+0
   \   000000E4   0110A0E3           MOV      R1,#+1
   \   000000E8   70008DE2           ADD      R0,SP,#+112
   \   000000EC   ........           _BLF     ??_Tidy_1,??_Tidy??rA_1
   \   000000F0   0020A0E3           MOV      R2,#+0
   \   000000F4   0110A0E3           MOV      R1,#+1
   \   000000F8   8C008DE2           ADD      R0,SP,#+140
   \   000000FC   ........           _BLF     ??_Tidy_1,??_Tidy??rA_1
   \   00000100   0020A0E3           MOV      R2,#+0
   \   00000104   0110A0E3           MOV      R1,#+1
   \   00000108   A8008DE2           ADD      R0,SP,#+168
   \   0000010C   ........           _BLF     ??_Tidy_1,??_Tidy??rA_1
     29          	LocalString +=TabStr1+KeyWord(C_PRO_USER_PASSWORD)+PassWord+CrLfStr;
   \   00000110   A810A0E3           MOV      R1,#+168
   \   00000114   401E81E3           ORR      R1,R1,#0x400
   \   00000118   460F8DE2           ADD      R0,SP,#+280
   \   0000011C   ........           _BLF     ??KeyWord,??KeyWord??rA
   \   00000120   462F8DE2           ADD      R2,SP,#+280
   \   00000124   0810A0E1           MOV      R1,R8
   \   00000128   FC008DE2           ADD      R0,SP,#+252
   \   0000012C   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000130   A82084E2           ADD      R2,R4,#+168
   \   00000134   FC108DE2           ADD      R1,SP,#+252
   \   00000138   E0008DE2           ADD      R0,SP,#+224
   \   0000013C   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000140   0620A0E1           MOV      R2,R6
   \   00000144   E0108DE2           ADD      R1,SP,#+224
   \   00000148   C4008DE2           ADD      R0,SP,#+196
   \   0000014C   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000150   0730A0E1           MOV      R3,R7
   \   00000154   0020A0E3           MOV      R2,#+0
   \   00000158   C4108DE2           ADD      R1,SP,#+196
   \   0000015C   0D00A0E1           MOV      R0,SP
   \   00000160   ........           _BLF     ??append,??append??rA
   \   00000164   0020A0E3           MOV      R2,#+0
   \   00000168   0110A0E3           MOV      R1,#+1
   \   0000016C   C4008DE2           ADD      R0,SP,#+196
   \   00000170   ........           _BLF     ??_Tidy_1,??_Tidy??rA_1
   \   00000174   0020A0E3           MOV      R2,#+0
   \   00000178   0110A0E3           MOV      R1,#+1
   \   0000017C   E0008DE2           ADD      R0,SP,#+224
   \   00000180   ........           _BLF     ??_Tidy_1,??_Tidy??rA_1
   \   00000184   0020A0E3           MOV      R2,#+0
   \   00000188   0110A0E3           MOV      R1,#+1
   \   0000018C   FC008DE2           ADD      R0,SP,#+252
   \   00000190   ........           _BLF     ??_Tidy_1,??_Tidy??rA_1
   \   00000194   0020A0E3           MOV      R2,#+0
   \   00000198   0110A0E3           MOV      R1,#+1
   \   0000019C   460F8DE2           ADD      R0,SP,#+280
   \   000001A0   ........           _BLF     ??_Tidy_1,??_Tidy??rA_1
     30          	LocalString +=TabStr1+KeyWord(C_PRO_USER_ID_NUMBER)+PassWord+CrLfStr;
   \   000001A4   A910A0E3           MOV      R1,#+169
   \   000001A8   401E81E3           ORR      R1,R1,#0x400
   \   000001AC   620F8DE2           ADD      R0,SP,#+392
   \   000001B0   ........           _BLF     ??KeyWord,??KeyWord??rA
   \   000001B4   622F8DE2           ADD      R2,SP,#+392
   \   000001B8   0810A0E1           MOV      R1,R8
   \   000001BC   5B0F8DE2           ADD      R0,SP,#+364
   \   000001C0   ........           _BLF     `??operator+`,`??operator+??rA`
   \   000001C4   A82084E2           ADD      R2,R4,#+168
   \   000001C8   5B1F8DE2           ADD      R1,SP,#+364
   \   000001CC   540F8DE2           ADD      R0,SP,#+336
   \   000001D0   ........           _BLF     `??operator+`,`??operator+??rA`
   \   000001D4   0620A0E1           MOV      R2,R6
   \   000001D8   541F8DE2           ADD      R1,SP,#+336
   \   000001DC   4D0F8DE2           ADD      R0,SP,#+308
   \   000001E0   ........           _BLF     `??operator+`,`??operator+??rA`
   \   000001E4   0730A0E1           MOV      R3,R7
   \   000001E8   0020A0E3           MOV      R2,#+0
   \   000001EC   4D1F8DE2           ADD      R1,SP,#+308
   \   000001F0   0D00A0E1           MOV      R0,SP
   \   000001F4   ........           _BLF     ??append,??append??rA
   \   000001F8   0020A0E3           MOV      R2,#+0
   \   000001FC   0110A0E3           MOV      R1,#+1
   \   00000200   4D0F8DE2           ADD      R0,SP,#+308
   \   00000204   ........           _BLF     ??_Tidy_1,??_Tidy??rA_1
   \   00000208   0020A0E3           MOV      R2,#+0
   \   0000020C   0110A0E3           MOV      R1,#+1
   \   00000210   540F8DE2           ADD      R0,SP,#+336
   \   00000214   ........           _BLF     ??_Tidy_1,??_Tidy??rA_1
   \   00000218   0020A0E3           MOV      R2,#+0
   \   0000021C   0110A0E3           MOV      R1,#+1
   \   00000220   5B0F8DE2           ADD      R0,SP,#+364
   \   00000224   ........           _BLF     ??_Tidy_1,??_Tidy??rA_1
   \   00000228   0020A0E3           MOV      R2,#+0
   \   0000022C   0110A0E3           MOV      R1,#+1
   \   00000230   620F8DE2           ADD      R0,SP,#+392
   \   00000234   ........           _BLF     ??_Tidy_1,??_Tidy??rA_1
     31          	LocalString += KeyWord(C_PRO_END)+CrLfStr;
   \   00000238   FA1FA0E3           MOV      R1,#+1000
   \   0000023C   700F8DE2           ADD      R0,SP,#+448
   \   00000240   ........           _BLF     ??KeyWord,??KeyWord??rA
   \   00000244   0620A0E1           MOV      R2,R6
   \   00000248   701F8DE2           ADD      R1,SP,#+448
   \   0000024C   690F8DE2           ADD      R0,SP,#+420
   \   00000250   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000254   0730A0E1           MOV      R3,R7
   \   00000258   0020A0E3           MOV      R2,#+0
   \   0000025C   691F8DE2           ADD      R1,SP,#+420
   \   00000260   0D00A0E1           MOV      R0,SP
   \   00000264   ........           _BLF     ??append,??append??rA
   \   00000268   0020A0E3           MOV      R2,#+0
   \   0000026C   0110A0E3           MOV      R1,#+1
   \   00000270   690F8DE2           ADD      R0,SP,#+420
   \   00000274   ........           _BLF     ??_Tidy_1,??_Tidy??rA_1
   \   00000278   0020A0E3           MOV      R2,#+0
   \   0000027C   0110A0E3           MOV      R1,#+1
   \   00000280   700F8DE2           ADD      R0,SP,#+448
   \   00000284   ........           _BLF     ??_Tidy_1,??_Tidy??rA_1
     32          	ConfigString.AddString(LocalString);
   \   00000288   0D10A0E1           MOV      R1,SP
   \   0000028C   770F8DE2           ADD      R0,SP,#+476
   \   00000290   ........           _BLF     ??AnsiString,??AnsiString??rA_1
   \   00000294   0010A0E1           MOV      R1,R0
   \   00000298   0500A0E1           MOV      R0,R5
   \   0000029C   ........           _BLF     ??AddString,??AddString??rA
   \   000002A0   0020A0E3           MOV      R2,#+0
   \   000002A4   0110A0E3           MOV      R1,#+1
   \   000002A8   770F8DE2           ADD      R0,SP,#+476
   \   000002AC   ........           _BLF     ??_Tidy_1,??_Tidy??rA_1
     33          }
   \   000002B0   0020A0E3           MOV      R2,#+0
   \   000002B4   0110A0E3           MOV      R1,#+1
   \   000002B8   0D00A0E1           MOV      R0,SP
   \   000002BC   ........           _BLF     ??_Tidy_1,??_Tidy??rA_1
   \   000002C0   7EDF8DE2           ADD      SP,SP,#+504
   \   000002C4   ........           B        ?Subroutine13
   \                     ??WriteConfigToFile_1:
   \   000002C8   ........           DC32     CrLfStr
   \   000002CC   ........           DC32     TabStr1

   \                                 In segment CODE, align 4, keep-with-next
   \                     ?Subroutine13:
   \   00000000   F041BDE8           POP      {R4-R8,LR}
   \   00000004   1EFF2FE1           BX       LR               ;; return
     34          //---------------------------------------------------------------------------
     35          

   \                                 In segment CODE, align 4, keep-with-next
     36          int PROUser::LoadConfigFromFile(TSNConfigString &ConfigString)
     37          {
   \                     ??LoadConfigFromFile:
   \   00000000   F0472DE9           PUSH     {R4-R10,LR}
   \   00000004   ACD04DE2           SUB      SP,SP,#+172
     38              SetLineNumber(ConfigString.LineCount);
     39          	bool NoError = true;
     40          	int ErrorLine=0;
   \   00000008   24829FE5           LDR      R8,??LoadConfigFromFile_1  ;; `?<Constant "PROUser">`
   \   0000000C   0150A0E1           MOV      R5,R1
   \   00000010   1C1095E5           LDR      R1,[R5, #+28]
   \   00000014   0040A0E1           MOV      R4,R0
   \   00000018   ........           _BLF     ??SetLineNumber,??SetLineNumber??rA
   \   0000001C   0160A0E3           MOV      R6,#+1
   \   00000020   0010A0E3           MOV      R1,#+0
   \   00000024   00108DE5           STR      R1,[SP, #+0]
   \   00000028   0170E0E1           MVN      R7,R1
     41          	int Key;
     42          	do {
     43          		AnsiString InputKeyWord= ConfigString.NextWord(ErrorLine);
   \                     ??LoadConfigFromFile_2:
   \   0000002C   0030A0E3           MOV      R3,#+0
   \   00000030   0D20A0E1           MOV      R2,SP
   \   00000034   20108DE2           ADD      R1,SP,#+32
   \   00000038   0500A0E1           MOV      R0,R5
   \   0000003C   ........           _BLF     ??NextWord,??NextWord??rA
     44          		if ( ErrorLine ) {
   \   00000040   00009DE5           LDR      R0,[SP, #+0]
   \   00000044   000050E3           CMP      R0,#+0
   \   00000048   0B00000A           BEQ      ??LoadConfigFromFile_3
     45          			if ( ErrorLine != EOF ) {
   \   0000004C   070050E1           CMP      R0,R7
   \   00000050   6700000A           BEQ      ??LoadConfigFromFile_4
     46          				GiveConfigWarning("PROUser",ErrorLine);
   \   00000054   0810A0E1           MOV      R1,R8
   \   00000058   04008DE2           ADD      R0,SP,#+4
   \   0000005C   ........           _BLF     ??AnsiString_2,??AnsiString??rA_2
   \   00000060   00109DE5           LDR      R1,[SP, #+0]
   \   00000064   ........           _BLF     ??GiveConfigWarning,??GiveConfigWarning??rA
   \   00000068   0020A0E3           MOV      R2,#+0
   \   0000006C   0110A0E3           MOV      R1,#+1
   \   00000070   04008DE2           ADD      R0,SP,#+4
   \                     ??LoadConfigFromFile_5:
   \   00000074   ........           _BLF     ??_Tidy_1,??_Tidy??rA_1
   \   00000078   5D0000EA           B        ??LoadConfigFromFile_4
     47          			}
     48          		} else {
     49          			Key = FindConfigKey(InputKeyWord);
   \                     ??LoadConfigFromFile_3:
   \   0000007C   20108DE2           ADD      R1,SP,#+32
   \   00000080   04008DE2           ADD      R0,SP,#+4
   \   00000084   ........           _BLF     ??AnsiString,??AnsiString??rA_1
   \   00000088   ........           _BLF     ??FindConfigKey,??FindConfigKey??rA
   \   0000008C   0090A0E1           MOV      R9,R0
   \   00000090   0020A0E3           MOV      R2,#+0
   \   00000094   0110A0E3           MOV      R1,#+1
   \   00000098   04008DE2           ADD      R0,SP,#+4
   \   0000009C   ........           _BLF     ??_Tidy_1,??_Tidy??rA_1
     50          			switch ( Key ) {
   \   000000A0   FA0F59E3           CMP      R9,#+1000
   \   000000A4   EA10A013           MOVNE    R1,#+234
   \   000000A8   C01F8113           ORRNE    R1,R1,#0x300
   \   000000AC   01005911           CMPNE    R9,R1
   \   000000B0   FB0F5913           CMPNE    R9,#+1004
   \   000000B4   4E00000A           BEQ      ??LoadConfigFromFile_4
   \   000000B8   BD1081E2           ADD      R1,R1,#+189
   \   000000BC   010059E1           CMP      R9,R1
   \   000000C0   1E00000A           BEQ      ??LoadConfigFromFile_6
   \   000000C4   011081E2           ADD      R1,R1,#+1
   \   000000C8   010059E1           CMP      R9,R1
   \   000000CC   3000000A           BEQ      ??LoadConfigFromFile_7
   \   000000D0   011081E3           ORR      R1,R1,#0x1
   \   000000D4   010059E1           CMP      R9,R1
   \   000000D8   4000000A           BEQ      ??LoadConfigFromFile_8
   \   000000DC   9810A0E3           MOV      R1,#+152
   \   000000E0   801E81E3           ORR      R1,R1,#0x800
   \   000000E4   010059E1           CMP      R9,R1
   \   000000E8   B910A013           MOVNE    R1,#+185
   \   000000EC   B01E8113           ORRNE    R1,R1,#0xB00
   \   000000F0   01005911           CMPNE    R9,R1
   \   000000F4   3E00000A           BEQ      ??LoadConfigFromFile_4
     51          				default:
     52          					GiveConfigWarning("PROUser",InputKeyWord,ConfigString.LineCount);
   \   000000F8   20108DE2           ADD      R1,SP,#+32
   \   000000FC   3C008DE2           ADD      R0,SP,#+60
   \   00000100   ........           _BLF     ??AnsiString,??AnsiString??rA_1
   \   00000104   00A0A0E1           MOV      R10,R0
   \   00000108   0810A0E1           MOV      R1,R8
   \   0000010C   58008DE2           ADD      R0,SP,#+88
   \   00000110   ........           _BLF     ??AnsiString_2,??AnsiString??rA_2
   \   00000114   1C2095E5           LDR      R2,[R5, #+28]
   \   00000118   0A10A0E1           MOV      R1,R10
   \   0000011C   ........           _BLF     ??GiveConfigWarning_1,??GiveConfigWarning??rA_1
   \   00000120   0020A0E3           MOV      R2,#+0
   \   00000124   0110A0E3           MOV      R1,#+1
   \   00000128   3C008DE2           ADD      R0,SP,#+60
   \   0000012C   ........           _BLF     ??_Tidy_1,??_Tidy??rA_1
   \   00000130   0020A0E3           MOV      R2,#+0
   \   00000134   0110A0E3           MOV      R1,#+1
   \   00000138   58008DE2           ADD      R0,SP,#+88
   \   0000013C   CCFFFFEA           B        ??LoadConfigFromFile_5
     53          					break;
     54          				case C_AI_END:			// If AI type not found can continue with this
     55          				case C_AL_END:
     56          				case C_PRO_END:
     57          				case C_PRO_END_COMMON:
     58          				case C_PRO_END_PRO:
     59          					break;
     60          				case C_PRO_USER_NAME:
     61          					Name = ConfigString.GetRemainingLine(ErrorLine);
   \                     ??LoadConfigFromFile_6:
   \   00000140   0D20A0E1           MOV      R2,SP
   \   00000144   74108DE2           ADD      R1,SP,#+116
   \   00000148   0500A0E1           MOV      R0,R5
   \   0000014C   ........           _BLF     ??GetRemainingLine,??GetRemainingLine??rA
   \   00000150   ........           LDR      R0,??DataTable6  ;; ??npos
   \   00000154   0020A0E3           MOV      R2,#+0
   \   00000158   003090E5           LDR      R3,[R0, #+0]
   \   0000015C   74108DE2           ADD      R1,SP,#+116
   \   00000160   440084E2           ADD      R0,R4,#+68
   \   00000164   ........           _BLF     ??assign,??assign??rA
   \   00000168   0020A0E3           MOV      R2,#+0
   \   0000016C   0110A0E3           MOV      R1,#+1
   \   00000170   74008DE2           ADD      R0,SP,#+116
   \   00000174   ........           _BLF     ??_Tidy_1,??_Tidy??rA_1
     62          					NoError = !ErrorLine;
   \   00000178   00009DE5           LDR      R0,[SP, #+0]
   \   0000017C   000050E3           CMP      R0,#+0
   \   00000180   0100001A           BNE      ??LoadConfigFromFile_9
   \                     ??LoadConfigFromFile_10:
   \   00000184   0160A0E3           MOV      R6,#+1
   \   00000188   190000EA           B        ??LoadConfigFromFile_4
   \                     ??LoadConfigFromFile_9:
   \   0000018C   0060A0E3           MOV      R6,#+0
   \   00000190   170000EA           B        ??LoadConfigFromFile_4
     63          					break;
     64          				case C_PRO_USER_PASSWORD:
     65          					Name = ConfigString.NextWord(ErrorLine);
   \                     ??LoadConfigFromFile_7:
   \   00000194   0030A0E3           MOV      R3,#+0
   \   00000198   0D20A0E1           MOV      R2,SP
   \   0000019C   90108DE2           ADD      R1,SP,#+144
   \   000001A0   0500A0E1           MOV      R0,R5
   \   000001A4   ........           _BLF     ??NextWord,??NextWord??rA
   \   000001A8   ........           LDR      R0,??DataTable6  ;; ??npos
   \   000001AC   0020A0E3           MOV      R2,#+0
   \   000001B0   003090E5           LDR      R3,[R0, #+0]
   \   000001B4   90108DE2           ADD      R1,SP,#+144
   \   000001B8   440084E2           ADD      R0,R4,#+68
   \   000001BC   ........           _BLF     ??assign,??assign??rA
   \   000001C0   0020A0E3           MOV      R2,#+0
   \   000001C4   0110A0E3           MOV      R1,#+1
   \   000001C8   90008DE2           ADD      R0,SP,#+144
   \   000001CC   ........           _BLF     ??_Tidy_1,??_Tidy??rA_1
     66          					NoError = !ErrorLine;
   \   000001D0   00009DE5           LDR      R0,[SP, #+0]
   \   000001D4   000050E3           CMP      R0,#+0
   \   000001D8   EBFFFF1A           BNE      ??LoadConfigFromFile_9
   \   000001DC   E8FFFFEA           B        ??LoadConfigFromFile_10
     67          					break;
     68          				case C_PRO_USER_ID_NUMBER:
     69          					IDNumber = ConfigString.ReadInteger(ErrorLine);
   \                     ??LoadConfigFromFile_8:
   \   000001E0   0020A0E3           MOV      R2,#+0
   \   000001E4   0D10A0E1           MOV      R1,SP
   \   000001E8   0500A0E1           MOV      R0,R5
   \   000001EC   ........           _BLF     ??ReadInteger,??ReadInteger??rA
   \   000001F0   9C0084E5           STR      R0,[R4, #+156]
     70          					break;
     71          
     72          			}
     73          		}
     74          	}while ( NoError && ( ErrorLine != EOF )&& ( Key != C_PRO_END ) );
   \                     ??LoadConfigFromFile_4:
   \   000001F4   0020A0E3           MOV      R2,#+0
   \   000001F8   0110A0E3           MOV      R1,#+1
   \   000001FC   20008DE2           ADD      R0,SP,#+32
   \   00000200   ........           _BLF     ??_Tidy_1,??_Tidy??rA_1
   \   00000204   000056E3           CMP      R6,#+0
   \   00000208   00009D15           LDRNE    R0,[SP, #+0]
   \   0000020C   07005011           CMPNE    R0,R7
   \   00000210   FA0F5913           CMPNE    R9,#+1000
   \   00000214   84FFFF1A           BNE      ??LoadConfigFromFile_2
     75          	UsersVector.push_back(this);
   \   00000218   ........           LDR      R0,??DataTable7  ;; ??UsersVector
   \   0000021C   0410A0E1           MOV      R1,R4
   \   00000220   ........           _BLF     ??_Push_back0,??_Push_back0??rA
     76          
     77          	return ErrorLine;
   \   00000224   00009DE5           LDR      R0,[SP, #+0]
   \   00000228   ACD08DE2           ADD      SP,SP,#+172
   \   0000022C   F047BDE8           POP      {R4-R10,LR}
   \   00000230   1EFF2FE1           BX       LR               ;; return
   \                     ??LoadConfigFromFile_1:
   \   00000234   ........           DC32     `?<Constant "PROUser">`
     78          
     79          }
     80          //---------------------------------------------------------------------------

   \                                 In segment CODE, align 4, keep-with-next
     81          int PROUser::GetValue(int ValueId, int Index, float &MyRetValue, int &DecPnt, int &Unit)
     82          {
   \                     ??GetValue:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   08C09DE5           LDR      R12,[SP, #+8]
   \   00000008   0C409DE5           LDR      R4,[SP, #+12]
     83          	return(PRogramObjectBase::GetValue(ValueId, Index, MyRetValue,  DecPnt,Unit));
   \   0000000C   10002DE9           PUSH     {R4}
   \   00000010   00102DE9           PUSH     {R12}
   \   00000014   ........           _BLF     ??GetValue_1,??GetValue??rA
   \   00000018   1640BDE8           POP      {R1,R2,R4,LR}
   \   0000001C   1EFF2FE1           BX       LR               ;; return
     84          }
     85          

   \                                 In segment CODE, align 4, keep-with-next
   \                     ?Subroutine11:
   \   00000000   0040BDE8           POP      {LR}
   \   00000004   1EFF2FE1           BX       LR               ;; return
   \                     ??Subroutine11_0:
   \   00000008   ........           DC32     ?_0

   \                                 In segment CODE, align 4, keep-with-next
     86          int PROUser::GetStringValue(int ValueId, int Index, AnsiString &MyString)
     87          {
   \                     ??GetStringValue:
   \   00000000   00402DE9           PUSH     {LR}
     88          	int Status = GETVAL_NO_ERR;
     89          	switch ( ValueId ) {
     90          		default:
     91          			Status = PRogramObjectBase::GetStringValue(ValueId,Index, MyString);
     92          			break;
     93          	}
     94          	return(Status);
   \   00000004   ........           _BLF     ??GetStringValue_1,??GetStringValue??rA
   \   00000008   ........           B        ?Subroutine11
     95          }
     96          

   \                                 In segment CODE, align 4, keep-with-next
     97          int PROUser::PutValue( int ValueId, int Index, AnsiString NewValue,bool Local, int *UnitId)
     98          {
   \                     ??PutValue:
   \   00000000   F0412DE9           PUSH     {R4-R8,LR}
   \   00000004   1CD04DE2           SUB      SP,SP,#+28
   \   00000008   3470DDE5           LDRB     R7,[SP, #+52]
   \   0000000C   38809DE5           LDR      R8,[SP, #+56]
   \   00000010   0040A0E1           MOV      R4,R0
   \   00000014   0150A0E1           MOV      R5,R1
   \   00000018   0260A0E1           MOV      R6,R2
   \   0000001C   0310A0E1           MOV      R1,R3
     99          	return(PRogramObjectBase::PutValue( ValueId, Index, NewValue, Local,UnitId));
   \   00000020   0D00A0E1           MOV      R0,SP
   \   00000024   ........           _BLF     ??AnsiString,??AnsiString??rA_1
   \   00000028   00012DE9           PUSH     {R8}
   \   0000002C   80002DE9           PUSH     {R7}
   \   00000030   0030A0E1           MOV      R3,R0
   \   00000034   0620A0E1           MOV      R2,R6
   \   00000038   0510A0E1           MOV      R1,R5
   \   0000003C   0400A0E1           MOV      R0,R4
   \   00000040   ........           _BLF     ??PutValue_1,??PutValue??rA
   \   00000044   0040A0E1           MOV      R4,R0
   \   00000048   0020A0E3           MOV      R2,#+0
   \   0000004C   0110A0E3           MOV      R1,#+1
   \   00000050   08008DE2           ADD      R0,SP,#+8
   \   00000054   ........           _BLF     ??_Tidy_1,??_Tidy??rA_1
   \   00000058   0400A0E1           MOV      R0,R4
   \   0000005C   24D08DE2           ADD      SP,SP,#+36
   \   00000060                      REQUIRE ?Subroutine13
   \   00000060                      ;; // Fall through to label ?Subroutine13
    100          }
    101          

   \                                 In segment CODE, align 4, keep-with-next
    102          int PROUser::PutFloatValue( int ValueId, float NewValue)
    103          {
   \                     ??PutFloatValue:
   \   00000000   00402DE9           PUSH     {LR}
    104          	return(PRogramObjectBase::PutFloatValue(ValueId,NewValue));
   \   00000004   ........           _BLF     ??PutFloatValue_1,??PutFloatValue??rA
   \   00000008   ........           B        ?Subroutine11
    105          }
    106          

   \                                 In segment CODE, align 4, keep-with-next
    107          void PROUser::SetReadVectors(void)
    108          {
   \                     ??SetReadVectors:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   54DF4DE2           SUB      SP,SP,#+336
    109          	PROCargoObjVector         = GetReadPermissionVector(PROCargoTank::AllObjVector);
    110          	PROBallastObjVector       = GetReadPermissionVector(PROBallastTank::AllObjVector);
    111          	PROServiceObjVector       = GetReadPermissionVector(PROServiceTank::AllHeavyFuelOilVector);
   \   00000008   ........           LDR      R5,??Subroutine12_0  ;; ??AllHeavyFuelOilVector
   \   0000000C   0040A0E1           MOV      R4,R0
   \   00000010   0D00A0E1           MOV      R0,SP
   \   00000014   ........           _BLF     ??_Zero,??_Zero??rA
   \   00000018   ........           LDR      R1,??Subroutine12_0+0x4  ;; ??AllObjVector
   \   0000001C   0D00A0E1           MOV      R0,SP
   \   00000020   ........           _BLF     ??_Assign,??_Assign??rA
   \   00000024   0020A0E3           MOV      R2,#+0
   \   00000028   0D10A0E1           MOV      R1,SP
   \   0000002C   A8008DE2           ADD      R0,SP,#+168
   \   00000030   ........           _BLF     ??GetReadPermissionVector,??GetReadPermissionVector??rA
   \   00000034   A8108DE2           ADD      R1,SP,#+168
   \   00000038   C40084E2           ADD      R0,R4,#+196
   \   0000003C   ........           _BLF     ??_Assign,??_Assign??rA
   \   00000040   A8008DE2           ADD      R0,SP,#+168
   \   00000044   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000048   0D00A0E1           MOV      R0,SP
   \   0000004C   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000050   0C008DE2           ADD      R0,SP,#+12
   \   00000054   ........           _BLF     ??_Zero,??_Zero??rA
   \   00000058   ........           LDR      R1,??Subroutine12_0+0x8  ;; ??AllObjVector_1
   \   0000005C   0C008DE2           ADD      R0,SP,#+12
   \   00000060   ........           _BLF     ??_Assign,??_Assign??rA
   \   00000064   0020A0E3           MOV      R2,#+0
   \   00000068   0C108DE2           ADD      R1,SP,#+12
   \   0000006C   B4008DE2           ADD      R0,SP,#+180
   \   00000070   ........           _BLF     ??GetReadPermissionVector,??GetReadPermissionVector??rA
   \   00000074   B4108DE2           ADD      R1,SP,#+180
   \   00000078   D00084E2           ADD      R0,R4,#+208
   \   0000007C   ........           _BLF     ??_Assign,??_Assign??rA
   \   00000080   B4008DE2           ADD      R0,SP,#+180
   \   00000084   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000088   0C008DE2           ADD      R0,SP,#+12
   \   0000008C   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000090   18008DE2           ADD      R0,SP,#+24
   \   00000094   ........           _BLF     ??_Zero,??_Zero??rA
   \   00000098   0510A0E1           MOV      R1,R5
   \   0000009C   18008DE2           ADD      R0,SP,#+24
   \   000000A0   ........           _BLF     ??_Assign,??_Assign??rA
   \   000000A4   0020A0E3           MOV      R2,#+0
   \   000000A8   18108DE2           ADD      R1,SP,#+24
   \   000000AC   C0008DE2           ADD      R0,SP,#+192
   \   000000B0   ........           _BLF     ??GetReadPermissionVector,??GetReadPermissionVector??rA
   \   000000B4   C0108DE2           ADD      R1,SP,#+192
   \   000000B8   DC0084E2           ADD      R0,R4,#+220
   \   000000BC   ........           _BLF     ??_Assign,??_Assign??rA
   \   000000C0   C0008DE2           ADD      R0,SP,#+192
   \   000000C4   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000000C8   18008DE2           ADD      R0,SP,#+24
   \   000000CC   ........           _BLF     ??_Tidy,??_Tidy??rA
    112          	PROHeavyFuelObjVector     = GetReadPermissionVector(PROServiceTank::AllHeavyFuelOilVector);
   \   000000D0   24008DE2           ADD      R0,SP,#+36
   \   000000D4   ........           _BLF     ??_Zero,??_Zero??rA
   \   000000D8   0510A0E1           MOV      R1,R5
   \   000000DC   24008DE2           ADD      R0,SP,#+36
   \   000000E0   ........           _BLF     ??_Assign,??_Assign??rA
   \   000000E4   0020A0E3           MOV      R2,#+0
   \   000000E8   24108DE2           ADD      R1,SP,#+36
   \   000000EC   CC008DE2           ADD      R0,SP,#+204
   \   000000F0   ........           _BLF     ??GetReadPermissionVector,??GetReadPermissionVector??rA
   \   000000F4   CC108DE2           ADD      R1,SP,#+204
   \   000000F8   E80084E2           ADD      R0,R4,#+232
   \   000000FC   ........           _BLF     ??_Assign,??_Assign??rA
   \   00000100   CC008DE2           ADD      R0,SP,#+204
   \   00000104   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000108   24008DE2           ADD      R0,SP,#+36
   \   0000010C   ........           _BLF     ??_Tidy,??_Tidy??rA
    113          	PRODieselOilObjVector     = GetReadPermissionVector(PROServiceTank::AllDieselVector);
   \   00000110   30008DE2           ADD      R0,SP,#+48
   \   00000114   ........           _BLF     ??_Zero,??_Zero??rA
   \   00000118   ........           LDR      R1,??Subroutine12_0+0xC  ;; ??AllDieselVector
   \   0000011C   30008DE2           ADD      R0,SP,#+48
   \   00000120   ........           _BLF     ??_Assign,??_Assign??rA
   \   00000124   0020A0E3           MOV      R2,#+0
   \   00000128   30108DE2           ADD      R1,SP,#+48
   \   0000012C   D8008DE2           ADD      R0,SP,#+216
   \   00000130   ........           _BLF     ??GetReadPermissionVector,??GetReadPermissionVector??rA
   \   00000134   D8108DE2           ADD      R1,SP,#+216
   \   00000138   F40084E2           ADD      R0,R4,#+244
   \   0000013C   ........           _BLF     ??_Assign,??_Assign??rA
   \   00000140   D8008DE2           ADD      R0,SP,#+216
   \   00000144   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000148   30008DE2           ADD      R0,SP,#+48
   \   0000014C   ........           _BLF     ??_Tidy,??_Tidy??rA
    114          	PROLubricantsObjVector    = GetReadPermissionVector(PROServiceTank::AllLubricantsVector);
   \   00000150   3C008DE2           ADD      R0,SP,#+60
   \   00000154   ........           _BLF     ??_Zero,??_Zero??rA
   \   00000158   ........           LDR      R1,??Subroutine12_0+0x10  ;; ??AllLubricantsVector
   \   0000015C   3C008DE2           ADD      R0,SP,#+60
   \   00000160   ........           _BLF     ??_Assign,??_Assign??rA
   \   00000164   0020A0E3           MOV      R2,#+0
   \   00000168   3C108DE2           ADD      R1,SP,#+60
   \   0000016C   E4008DE2           ADD      R0,SP,#+228
   \   00000170   ........           _BLF     ??GetReadPermissionVector,??GetReadPermissionVector??rA
   \   00000174   E4108DE2           ADD      R1,SP,#+228
   \   00000178   400F84E2           ADD      R0,R4,#+256
   \   0000017C   ........           _BLF     ??_Assign,??_Assign??rA
   \   00000180   E4008DE2           ADD      R0,SP,#+228
   \   00000184   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000188   3C008DE2           ADD      R0,SP,#+60
   \   0000018C   ........           _BLF     ??_Tidy,??_Tidy??rA
    115          	PROMiscObjVector          = GetReadPermissionVector(PROServiceTank::AllMiscVector);
   \   00000190   48008DE2           ADD      R0,SP,#+72
   \   00000194   ........           _BLF     ??_Zero,??_Zero??rA
   \   00000198   ........           LDR      R1,??Subroutine12_0+0x14  ;; ??AllMiscVector
   \   0000019C   48008DE2           ADD      R0,SP,#+72
   \   000001A0   ........           _BLF     ??_Assign,??_Assign??rA
   \   000001A4   0020A0E3           MOV      R2,#+0
   \   000001A8   48108DE2           ADD      R1,SP,#+72
   \   000001AC   F0008DE2           ADD      R0,SP,#+240
   \   000001B0   ........           _BLF     ??GetReadPermissionVector,??GetReadPermissionVector??rA
   \   000001B4   F0108DE2           ADD      R1,SP,#+240
   \   000001B8   430F84E2           ADD      R0,R4,#+268
   \   000001BC   ........           _BLF     ??_Assign,??_Assign??rA
   \   000001C0   F0008DE2           ADD      R0,SP,#+240
   \   000001C4   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000001C8   48008DE2           ADD      R0,SP,#+72
   \   000001CC   ........           _BLF     ??_Tidy,??_Tidy??rA
    116          	PROFreshWaterObjVector    = GetReadPermissionVector(PROServiceTank::AllFreshWaterVector);
   \   000001D0   54008DE2           ADD      R0,SP,#+84
   \   000001D4   ........           _BLF     ??_Zero,??_Zero??rA
   \   000001D8   ........           LDR      R1,??Subroutine12_0+0x18  ;; ??AllFreshWaterVector
   \   000001DC   54008DE2           ADD      R0,SP,#+84
   \   000001E0   ........           _BLF     ??_Assign,??_Assign??rA
   \   000001E4   0020A0E3           MOV      R2,#+0
   \   000001E8   54108DE2           ADD      R1,SP,#+84
   \   000001EC   FC008DE2           ADD      R0,SP,#+252
   \   000001F0   ........           _BLF     ??GetReadPermissionVector,??GetReadPermissionVector??rA
   \   000001F4   FC108DE2           ADD      R1,SP,#+252
   \   000001F8   460F84E2           ADD      R0,R4,#+280
   \   000001FC   ........           _BLF     ??_Assign,??_Assign??rA
   \   00000200   FC008DE2           ADD      R0,SP,#+252
   \   00000204   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000208   54008DE2           ADD      R0,SP,#+84
   \   0000020C   ........           _BLF     ??_Tidy,??_Tidy??rA
    117          	PROTempObjVector          = GetReadPermissionVector(PROTemperature::AllObjVector);
   \   00000210   60008DE2           ADD      R0,SP,#+96
   \   00000214   ........           _BLF     ??_Zero,??_Zero??rA
   \   00000218   ........           LDR      R1,??Subroutine12_0+0x1C  ;; ??AllObjVector_2
   \   0000021C   60008DE2           ADD      R0,SP,#+96
   \   00000220   ........           _BLF     ??_Assign,??_Assign??rA
   \   00000224   0020A0E3           MOV      R2,#+0
   \   00000228   60108DE2           ADD      R1,SP,#+96
   \   0000022C   420F8DE2           ADD      R0,SP,#+264
   \   00000230   ........           _BLF     ??GetReadPermissionVector,??GetReadPermissionVector??rA
   \   00000234   421F8DE2           ADD      R1,SP,#+264
   \   00000238   490F84E2           ADD      R0,R4,#+292
   \   0000023C   ........           _BLF     ??_Assign,??_Assign??rA
   \   00000240   420F8DE2           ADD      R0,SP,#+264
   \   00000244   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000248   60008DE2           ADD      R0,SP,#+96
   \   0000024C   ........           _BLF     ??_Tidy,??_Tidy??rA
    118          	PROTankPressObjVector     = GetReadPermissionVector(PROTankPressure::AllObjVector);
   \   00000250   6C008DE2           ADD      R0,SP,#+108
   \   00000254   ........           _BLF     ??_Zero,??_Zero??rA
   \   00000258   ........           LDR      R1,??Subroutine12_0+0x20  ;; ??AllObjVector_3
   \   0000025C   6C008DE2           ADD      R0,SP,#+108
   \   00000260   ........           _BLF     ??_Assign,??_Assign??rA
   \   00000264   0020A0E3           MOV      R2,#+0
   \   00000268   6C108DE2           ADD      R1,SP,#+108
   \   0000026C   450F8DE2           ADD      R0,SP,#+276
   \   00000270   ........           _BLF     ??GetReadPermissionVector,??GetReadPermissionVector??rA
   \   00000274   451F8DE2           ADD      R1,SP,#+276
   \   00000278   4C0F84E2           ADD      R0,R4,#+304
   \   0000027C   ........           _BLF     ??_Assign,??_Assign??rA
   \   00000280   450F8DE2           ADD      R0,SP,#+276
   \   00000284   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000288   6C008DE2           ADD      R0,SP,#+108
   \   0000028C   ........           _BLF     ??_Tidy,??_Tidy??rA
    119          	PROLPressObjVector        = GetReadPermissionVector(PROLinePressure::ObjVector);
   \   00000290   78008DE2           ADD      R0,SP,#+120
   \   00000294   ........           _BLF     ??_Zero,??_Zero??rA
   \   00000298   ........           LDR      R1,??Subroutine12_0+0x24  ;; ??ObjVector
   \   0000029C   78008DE2           ADD      R0,SP,#+120
   \   000002A0   ........           _BLF     ??_Assign,??_Assign??rA
   \   000002A4   0020A0E3           MOV      R2,#+0
   \   000002A8   78108DE2           ADD      R1,SP,#+120
   \   000002AC   480F8DE2           ADD      R0,SP,#+288
   \   000002B0   ........           _BLF     ??GetReadPermissionVector,??GetReadPermissionVector??rA
   \   000002B4   481F8DE2           ADD      R1,SP,#+288
   \   000002B8   4F0F84E2           ADD      R0,R4,#+316
   \   000002BC   ........           _BLF     ??_Assign,??_Assign??rA
   \   000002C0   480F8DE2           ADD      R0,SP,#+288
   \   000002C4   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000002C8   78008DE2           ADD      R0,SP,#+120
   \   000002CC   ........           _BLF     ??_Tidy,??_Tidy??rA
    120          	PROVoidSpaceVector        = GetReadPermissionVector(PROVoidSpace::AllObjVector);
   \   000002D0   84008DE2           ADD      R0,SP,#+132
   \   000002D4   ........           _BLF     ??_Zero,??_Zero??rA
   \   000002D8   ........           LDR      R1,??Subroutine12_0+0x28  ;; ??AllObjVector_4
   \   000002DC   84008DE2           ADD      R0,SP,#+132
   \   000002E0   ........           _BLF     ??_Assign,??_Assign??rA
   \   000002E4   0020A0E3           MOV      R2,#+0
   \   000002E8   84108DE2           ADD      R1,SP,#+132
   \   000002EC   4B0F8DE2           ADD      R0,SP,#+300
   \   000002F0   ........           _BLF     ??GetReadPermissionVector,??GetReadPermissionVector??rA
   \   000002F4   4B1F8DE2           ADD      R1,SP,#+300
   \   000002F8   520F84E2           ADD      R0,R4,#+328
   \   000002FC   ........           _BLF     ??_Assign,??_Assign??rA
   \   00000300   4B0F8DE2           ADD      R0,SP,#+300
   \   00000304   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000308   84008DE2           ADD      R0,SP,#+132
   \   0000030C   ........           _BLF     ??_Tidy,??_Tidy??rA
    121          	PROWaterIngrVector        = GetReadPermissionVector(PROWaterIngress::AllObjVector);
   \   00000310   90008DE2           ADD      R0,SP,#+144
   \   00000314   ........           _BLF     ??_Zero,??_Zero??rA
   \   00000318   ........           LDR      R1,??Subroutine12_0+0x2C  ;; ??AllObjVector_5
   \   0000031C   90008DE2           ADD      R0,SP,#+144
   \   00000320   ........           _BLF     ??_Assign,??_Assign??rA
   \   00000324   0020A0E3           MOV      R2,#+0
   \   00000328   90108DE2           ADD      R1,SP,#+144
   \   0000032C   4E0F8DE2           ADD      R0,SP,#+312
   \   00000330   ........           _BLF     ??GetReadPermissionVector,??GetReadPermissionVector??rA
   \   00000334   4E1F8DE2           ADD      R1,SP,#+312
   \   00000338   550F84E2           ADD      R0,R4,#+340
   \   0000033C   ........           _BLF     ??_Assign,??_Assign??rA
   \   00000340   4E0F8DE2           ADD      R0,SP,#+312
   \   00000344   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000348   90008DE2           ADD      R0,SP,#+144
   \   0000034C   ........           _BLF     ??_Tidy,??_Tidy??rA
    122          	PROLevelSwitchVector      = GetReadPermissionVector(PROLevelSwitch::AllObjVector);
   \   00000350   9C008DE2           ADD      R0,SP,#+156
   \   00000354   ........           _BLF     ??_Zero,??_Zero??rA
   \   00000358   ........           LDR      R1,??Subroutine12_0+0x30  ;; ??AllObjVector_6
   \   0000035C   9C008DE2           ADD      R0,SP,#+156
   \   00000360   ........           _BLF     ??_Assign,??_Assign??rA
   \   00000364   0020A0E3           MOV      R2,#+0
   \   00000368   9C108DE2           ADD      R1,SP,#+156
   \   0000036C   510F8DE2           ADD      R0,SP,#+324
   \   00000370   ........           _BLF     ??GetReadPermissionVector,??GetReadPermissionVector??rA
   \   00000374   511F8DE2           ADD      R1,SP,#+324
   \   00000378   580F84E2           ADD      R0,R4,#+352
   \   0000037C   ........           _BLF     ??_Assign,??_Assign??rA
   \   00000380   510F8DE2           ADD      R0,SP,#+324
   \   00000384   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000388   9C008DE2           ADD      R0,SP,#+156
   \   0000038C   ........           _BLF     ??_Tidy,??_Tidy??rA
    123          }
   \   00000390   54DF8DE2           ADD      SP,SP,#+336
   \   00000394                      REQUIRE ?Subroutine12
   \   00000394                      ;; // Fall through to label ?Subroutine12

   \                                 In segment DIFUNCT, align 4, keep-with-next, root
   \   00000000                      REQUIRE ?call_ctors
   \   00000000   ........           DC32    ??__sti__routine

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "PROUser">`:
   \   00000000   50524F557365       DC8 "PROUser"
   \              7200        

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs PROUser &PROUser::new PROUser()
   \                     `??new PROUser`:
   \   00000000   00402DE9           PUSH     {LR}
   \   00000004   5B0FA0E3           MOV      R0,#+364
   \   00000008   ........           _BLF     `??operator new`,`??operator new??rA`
   \   0000000C   000050E3           CMP      R0,#+0
   \   00000010   0000000A           BEQ      `??new PROUser_1`
   \   00000014   ........           BL       ??PROUser
   \                     `??new PROUser_1`:
   \   00000018   ........           B        ?Subroutine11

   \                                 In segment CODE, align 4, keep-with-next
   \   static __??Code32?? __intrinsic __code __interwork __atpcs void __sti__routine()
   \                     ??__sti__routine:
   \   00000000   ........           LDR      R0,??DataTable7  ;; ??UsersVector
   \   00000004   00402DE9           PUSH     {LR}
   \   00000008   ........           _BLF     ??_Zero,??_Zero??rA
   \   0000000C   ........           LDR      R0,??Subroutine11_0  ;; ?_0
   \   00000010   ........           _BLF     __record_needed_destruction,??__record_needed_destruction??rA
   \   00000014                      REQUIRE ?Subroutine11
   \   00000014                      ;; // Fall through to label ?Subroutine11

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable3:
   \   00000000   ........           DC32     ??__vtbl

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable6:
   \   00000000   ........           DC32     ??npos

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable7:
   \   00000000   ........           DC32     ??UsersVector
    124          

   Maximum stack usage in bytes:

     Function                       CSTACK
     --------                       ------
     AnsiString::AnsiString(AnsiString const &)
                                       12
     PROUser::GetStringValue(int, int, AnsiString &)
                                        4
     PROUser::GetValue(int, int, float &, int &, int &)
                                       16
     PROUser::LoadConfigFromFile(TSNConfigString &)
                                      204
     PROUser::PROUser()                 8
     PROUser::PutFloatValue(int, float)
                                        4
     PROUser::PutValue(int, int, AnsiString, bool, int *)
                                       60
     PROUser::SetReadVectors()        348
     PROUser::WriteConfigToFile(TSNConfigString &)
                                      528
     PROUser::new PROUser()             4
     PROUser::~PROUser()               12
     _Vector_impl<PROUser *, allocator<PROUser *>>::_Insert(PROUser **, PROUser * const &)
                                       16
     _Vector_impl<PROUser *, allocator<PROUser *>>::_Make_room(PROUser **, unsigned int)
                                       32
     _Vector_impl<PROUser *, allocator<PROUser *>>::_Push_back0(PROUser *)
                                        8
     _Vector_impl<PROUser *, allocator<PROUser *>>::_Tidy0()
                                        4
     _Vector_impl<PRogramObjectBase *, allocator<PRogramObjectBase *>>::_Assign(_Vector_impl<PRogramObjectBase *, allocator<PRogramObjectBase *>> const &)
                                       20
     _Vector_impl<PRogramObjectBase *, allocator<PRogramObjectBase *>>::_Tidy()
                                        8
     _Vector_value<allocator<void>>::_Zero()
                                        0
     __sti__routine()                   4
     operator+(string const &, string const &)
                                       48
     vector<PROUser *>::~vector()       8


   Segment part sizes:

     Function/Label                 Bytes
     --------------                 -----
     _Vector_value<allocator<void>>::_Zero()
                                      20
     _Vector_impl<PROUser *, allocator<PROUser *>>::_Tidy0()
                                      36
     _Vector_impl<PRogramObjectBase *, allocator<PRogramObjectBase *>>::_Tidy()
                                      44
     _Vector_impl<PRogramObjectBase *, allocator<PRogramObjectBase *>>::_Assign(_Vector_impl<PRogramObjectBase *, allocator<PRogramObjectBase *>> const &)
                                     216
     _Vector_impl<PROUser *, allocator<PROUser *>>::_Insert(PROUser **, PROUser * const &)
                                      72
     _Vector_impl<PROUser *, allocator<PROUser *>>::_Make_room(PROUser **, unsigned int)
                                     232
     _Vector_impl<PROUser *, allocator<PROUser *>>::_Push_back0(PROUser *)
                                      72
     vector<PROUser *>::~vector()     28
     operator+(string const &, string const &)
                                     156
     AnsiString::AnsiString(AnsiString const &)
                                      64
     PROUser::UsersVector             12
     PROUser::PROUser()              188
     PROUser::~PROUser()             188
     ?Subroutine12                    60
     PROUser::WriteConfigToFile(TSNConfigString &)
                                     720
     ?Subroutine13                     8
     PROUser::LoadConfigFromFile(TSNConfigString &)
                                     568
     PROUser::GetValue(int, int, float &, int &, int &)
                                      32
     ?Subroutine11                    12
     PROUser::GetStringValue(int, int, AnsiString &)
                                      12
     PROUser::PutValue(int, int, AnsiString, bool, int *)
                                      96
     PROUser::PutFloatValue(int, float)
                                      12
     PROUser::SetReadVectors()       916
     ?<Constant "PROUser">             8
     PROUser::new PROUser()           28
     __sti__routine()                 20
     ??DataTable3                      4
     ??DataTable6                      4
     ??DataTable7                      4
      Others                         588

 
 4 276 bytes in segment CODE
   112 bytes in segment DATA_C
    16 bytes in segment DATA_Z
     4 bytes in segment DIFUNCT
    12 bytes in segment INITTAB
 
 2 876 bytes of CODE  memory (+ 1 416 bytes shared)
   112 bytes of CONST memory
    16 bytes of DATA  memory

Errors: none
Warnings: none
