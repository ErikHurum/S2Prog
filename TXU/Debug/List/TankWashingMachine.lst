##############################################################################
#                                                                            #
# IAR ARM ANSI C/C++ Compiler V4.42A/W32               14/Sep/2022  15:20:01 #
# Copyright 1999-2005 IAR Systems. All rights reserved.                      #
#                                                                            #
#    Cpu mode        =  interwork                                            #
#    Endian          =  little                                               #
#    Stack alignment =  4                                                    #
#    Source file     =  D:\S2Prog\Shared\Src\TankWashingMachine.cpp          #
#    Command line    =  D:\S2Prog\Shared\Src\TankWashingMachine.cpp --fpu    #
#                       None -D OS_LIBMODE_SP -D CPU_S3C2410 -D              #
#                       OS_RAMVECT=0 -D OS_UART=-1 -D S2TXU -D USE_LZO=1 -D  #
#                       __ARM_LIBRARY__ -D WATCHDOG=1 -D NETWORK=1 -lCN      #
#                       D:\S2Prog\TXU\Debug\List\ -o                         #
#                       D:\S2Prog\TXU\Debug\Obj\ -z9 --debug --cpu_mode arm  #
#                       --endian little --cpu ARM920T --stack_align 4        #
#                       --interwork -e --enable_multibytes --eec++           #
#                       --dlib_config "C:\Program Files (x86)\IAR            #
#                       Systems\Embedded Workbench                           #
#                       4.0\arm\LIB\dl4tpainl8n.h" -I                        #
#                       D:\S2Prog\TXU\GUI\CORE\ -I D:\S2Prog\TXU\GUI\WM\ -I  #
#                       D:\S2Prog\TXU\GUI\WIDGET\ -I D:\S2Prog\TXU\CONFIG\   #
#                       -I D:\S2Prog\TXU\INC\ -I D:\S2Prog\TXU\..\SHARED\INC #
#                       \ -I D:\S2Prog\TXU\..\SHARED\SRC\ -I                 #
#                       D:\S2Prog\TXU\..\SHARED\LZO\minilzo.210\ -I          #
#                       D:\S2Prog\TXU\lwip-1.4.1\src\include\ -I             #
#                       D:\S2Prog\TXU\lwip-1.4.1\src\include\ipv4\ -I        #
#                       D:\S2Prog\TXU\lwip-1.4.1\src\ -I                     #
#                       D:\S2Prog\TXU\..\SHARED\Database\ -I                 #
#                       D:\S2Prog\TXU\src\ -I "C:\Program Files (x86)\IAR    #
#                       Systems\Embedded Workbench 4.0\arm\INC\"             #
#                       --inline_threshold=2                                 #
#    List file       =  D:\S2Prog\TXU\Debug\List\TankWashingMachine.lst      #
#    Object file     =  D:\S2Prog\TXU\Debug\Obj\TankWashingMachine.r79       #
#                                                                            #
#                                                                            #
##############################################################################

D:\S2Prog\Shared\Src\TankWashingMachine.cpp
      1          #include "TSNIncludes.h"
      2          //---------------------------------------------------------------------------
      3          
      4          #pragma hdrstop
      5          #include <functional>				// used for the compare binary function struct
      6          #include "TankWashingMachine.h"
      7          //---------------------------------------------------------------------------
      8          #ifdef ANWIN
      9          #pragma package(smart_init)
     10          #endif
     11          
     12          

   \                                 In segment CODE, align 4, keep-with-next
     13          TankWashingMachine::TankWashingMachine()
   \                     ??TankWashingMachine:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0040A0E1           MOV      R4,R0
     14          {
   \   00000008   ........           _BLF     ??AnsiString,??AnsiString??rA
   \   0000000C   1C0084E2           ADD      R0,R4,#+28
   \   00000010   ........           _BLF     ??AnsiString,??AnsiString??rA
   \   00000014   3C0084E2           ADD      R0,R4,#+60
   \   00000018   ........           _BLF     ??AnsiString,??AnsiString??rA
     15              IDNumber = 0;
   \   0000001C   0000A0E3           MOV      R0,#+0
   \   00000020   580084E5           STR      R0,[R4, #+88]
     16          	TankId = 0;
   \   00000024   380084E5           STR      R0,[R4, #+56]
     17          	//Identifier = AnsiString("");
     18          	NozzleDiameter_mm 			= 0;
   \   00000028   700084E5           STR      R0,[R4, #+112]
     19          	RunningTimeSinceLastService = 0.0;
   \   0000002C   0020A0E3           MOV      R2,#+0
   \   00000030   0030A0E1           MOV      R3,R0
   \   00000034   602084E5           STR      R2,[R4, #+96]
   \   00000038   643084E5           STR      R3,[R4, #+100]
     20          	LifeRunningTime 			= 0.0;
   \   0000003C   682084E5           STR      R2,[R4, #+104]
   \   00000040   6C3084E5           STR      R3,[R4, #+108]
     21          	MachineTypeId 				= 0;
   \   00000044   5C0084E5           STR      R0,[R4, #+92]
     22          	NumberOfNozzles 			= 1;
   \   00000048   0100A0E3           MOV      R0,#+1
   \   0000004C   740084E5           STR      R0,[R4, #+116]
     23          	GearRatio                   = 370; // Default to the value for T30 machine with 370 pulses for 1 rotation;
   \   00000050   4304A0E3           MOV      R0,#+1124073472
   \   00000054   B90880E3           ORR      R0,R0,#0xB90000
   \   00000058   780084E5           STR      R0,[R4, #+120]
     24          
     25          
     26          }
   \   0000005C   0400A0E1           MOV      R0,R4
   \   00000060   1040BDE8           POP      {R4,LR}
   \   00000064   1EFF2FE1           BX       LR               ;; return
     27          
     28          
     29          /// Copy data from other TankWashingMachine object
     30          ///

   \                                 In segment CODE, align 4, keep-with-next
     31          void TankWashingMachine::CopyData(TankWashingMachine& other)
     32          {
   \                     ??CopyData:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
     33          	IDNumber            = other.IDNumber;
   \   0000000C   580095E5           LDR      R0,[R5, #+88]
     34          	Identifier          = other.Identifier;
   \   00000010   0020A0E3           MOV      R2,#+0
   \   00000014   580084E5           STR      R0,[R4, #+88]
   \   00000018   50009FE5           LDR      R0,??CopyData_1  ;; ??npos
   \   0000001C   006090E5           LDR      R6,[R0, #+0]
   \   00000020   0400A0E1           MOV      R0,R4
   \   00000024   0630A0E1           MOV      R3,R6
   \   00000028   ........           _BLF     ??assign,??assign??rA
     35          	NozzleDiameter_mm   = other.NozzleDiameter_mm;
   \   0000002C   700095E5           LDR      R0,[R5, #+112]
     36          	GearRatio           = other.GearRatio;
     37          	TankId              = other.TankId;
     38          	TankName			= other.TankName;
   \   00000030   0630A0E1           MOV      R3,R6
   \   00000034   700084E5           STR      R0,[R4, #+112]
   \   00000038   780095E5           LDR      R0,[R5, #+120]
   \   0000003C   0020A0E3           MOV      R2,#+0
   \   00000040   780084E5           STR      R0,[R4, #+120]
   \   00000044   380095E5           LDR      R0,[R5, #+56]
   \   00000048   3C1085E2           ADD      R1,R5,#+60
   \   0000004C   380084E5           STR      R0,[R4, #+56]
   \   00000050   3C0084E2           ADD      R0,R4,#+60
   \   00000054   ........           _BLF     ??assign,??assign??rA
     39          	MachineTypeId		= other.MachineTypeId;
   \   00000058   5C0095E5           LDR      R0,[R5, #+92]
   \   0000005C   5C0084E5           STR      R0,[R4, #+92]
     40          	NumberOfNozzles		= other.NumberOfNozzles;
   \   00000060   740095E5           LDR      R0,[R5, #+116]
   \   00000064   740084E5           STR      R0,[R4, #+116]
     41          }
   \   00000068   7040BDE8           POP      {R4-R6,LR}
   \   0000006C   1EFF2FE1           BX       LR               ;; return
   \                     ??CopyData_1:
   \   00000070   ........           DC32     ??npos
     42          
     43          
     44          /// Update service time counters
     45          ///

   \                                 In segment CODE, align 4, keep-with-next
     46          void TankWashingMachine::ResetAfterService()
     47          {
     48          	RunningTimeSinceLastService = 0.0;
   \                     ??ResetAfterService:
   \   00000000   0020A0E3           MOV      R2,#+0
   \   00000004   0030A0E3           MOV      R3,#+0
   \   00000008   602080E5           STR      R2,[R0, #+96]
   \   0000000C   643080E5           STR      R3,[R0, #+100]
     49          }
   \   00000010   1EFF2FE1           BX       LR               ;; return
     50          
     51          
     52          /// Append string representation of this object to the "dest" string
     53          ///

   \                                 In segment CODE, align 4, keep-with-next
     54          void TankWashingMachine::ToString(AnsiString& dest)
     55          {
   \                     ??ToString:
   \   00000000   00402DE9           PUSH     {LR}
   \   00000004   1CD04DE2           SUB      SP,SP,#+28
   \   00000008   0020A0E1           MOV      R2,R0
     56          	dest.cat_sprintf("TankWashingMachine ID=%d, Ident=\"%s\", TankId=%d, Nozzle.mm=%d", IDNumber, Identifier.c_str(), TankId, NozzleDiameter_mm);
   \   0000000C   703092E5           LDR      R3,[R2, #+112]
   \   00000010   0100A0E1           MOV      R0,R1
   \   00000014   181092E5           LDR      R1,[R2, #+24]
   \   00000018   100051E3           CMP      R1,#+16
   \   0000001C   04109225           LDRCS    R1,[R2, #+4]
   \   00000020   08002DE9           PUSH     {R3}
   \   00000024   383092E5           LDR      R3,[R2, #+56]
   \   00000028   04108232           ADDCC    R1,R2,#+4
   \   0000002C   08002DE9           PUSH     {R3}
   \   00000030   02002DE9           PUSH     {R1}
   \   00000034   583092E5           LDR      R3,[R2, #+88]
   \   00000038   ........           LDR      R2,??Subroutine6_0  ;; `?<Constant "TankWashingMachine ID...">`
   \   0000003C   0C108DE2           ADD      R1,SP,#+12
   \   00000040   ........           _BLF     ??cat_sprintf,??cat_sprintf??rA
   \   00000044   0020A0E3           MOV      R2,#+0
   \   00000048   0110A0E3           MOV      R1,#+1
   \   0000004C   0C008DE2           ADD      R0,SP,#+12
   \   00000050   ........           _BLF     ??_Tidy,??_Tidy??rA
     57          }
   \   00000054   28D08DE2           ADD      SP,SP,#+40
   \   00000058                      REQUIRE ?Subroutine6
   \   00000058                      ;; // Fall through to label ?Subroutine6

   \                                 In segment CODE, align 4, keep-with-next
   \                     ?Subroutine6:
   \   00000000   0040BDE8           POP      {LR}
   \   00000004   1EFF2FE1           BX       LR               ;; return
   \                     ??Subroutine6_0:
   \   00000008   ........           DC32     `?<Constant "TankWashingMachine ID...">`

   \                                 In segment DIFUNCT, align 4, keep-with-next, root
   \   00000000                      REQUIRE ?call_ctors
   \   00000000   ........           DC32    ??__sti__routine

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "TankWashingMachine ID...">`:
   \   00000000   54616E6B5761       DC8 54H, 61H, 6EH, 6BH, 57H, 61H, 73H, 68H
   \              7368        
   \   00000008   696E674D6163       DC8 69H, 6EH, 67H, 4DH, 61H, 63H, 68H, 69H
   \              6869        
   \   00000010   6E652049443D       DC8 6EH, 65H, 20H, 49H, 44H, 3DH, 25H, 64H
   \              2564        
   \   00000018   2C204964656E       DC8 2CH, 20H, 49H, 64H, 65H, 6EH, 74H, 3DH
   \              743D        
   \   00000020   222573222C20       DC8 22H, 25H, 73H, 22H, 2CH, 20H, 54H, 61H
   \              5461        
   \   00000028   6E6B49643D25       DC8 6EH, 6BH, 49H, 64H, 3DH, 25H, 64H, 2CH
   \              642C        
   \   00000030   204E6F7A7A6C       DC8 20H, 4EH, 6FH, 7AH, 7AH, 6CH, 65H, 2EH
   \              652E        
   \   00000038   6D6D3D256400       DC8 6DH, 6DH, 3DH, 25H, 64H, 0
   \   0000003E   0000               DC8 0, 0

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs TankWashingMachine &TankWashingMachine::new TankWashingMachine()
   \                     `??new TankWashingMachine`:
   \   00000000   00402DE9           PUSH     {LR}
   \   00000004   8000A0E3           MOV      R0,#+128
   \   00000008   ........           _BLF     `??operator new`,`??operator new??rA`
   \   0000000C   000050E3           CMP      R0,#+0
   \   00000010   0000000A           BEQ      `??new TankWashingMachine_1`
   \   00000014   ........           BL       ??TankWashingMachine
   \                     `??new TankWashingMachine_1`:
   \   00000018   ........           B        ?Subroutine6

   \                                 In segment CODE, align 4, keep-with-next
   \   static __??Code32?? __intrinsic __code __interwork __atpcs void __sti__routine()
   \                     ??__sti__routine:
   \   00000000   1EFF2FE1           BX       LR               ;; return

   Maximum stack usage in bytes:

     Function                       CSTACK
     --------                       ------
     TankWashingMachine::CopyData(TankWashingMachine &)
                                       16
     TankWashingMachine::ResetAfterService()
                                        0
     TankWashingMachine::TankWashingMachine()
                                        8
     TankWashingMachine::ToString(AnsiString &)
                                       44
     TankWashingMachine::new TankWashingMachine()
                                        4
     __sti__routine()                   0


   Segment part sizes:

     Function/Label                 Bytes
     --------------                 -----
     TankWashingMachine::TankWashingMachine()
                                     104
     TankWashingMachine::CopyData(TankWashingMachine &)
                                     116
     TankWashingMachine::ResetAfterService()
                                      20
     TankWashingMachine::ToString(AnsiString &)
                                      88
     ?Subroutine6                     12
     ?<Constant "TankWashingMachine ID...">
                                      64
     TankWashingMachine::new TankWashingMachine()
                                      28
     __sti__routine()                  4
      Others                          88

 
 456 bytes in segment CODE
  64 bytes in segment DATA_C
   4 bytes in segment DIFUNCT
 
 376 bytes of CODE  memory (+ 84 bytes shared)
  64 bytes of CONST memory

Errors: none
Warnings: none
