##############################################################################
#                                                                            #
# IAR ARM ANSI C/C++ Compiler V4.42A/W32               14/Sep/2022  15:19:52 #
# Copyright 1999-2005 IAR Systems. All rights reserved.                      #
#                                                                            #
#    Cpu mode        =  interwork                                            #
#    Endian          =  little                                               #
#    Stack alignment =  4                                                    #
#    Source file     =  D:\S2Prog\TXU\src\TSNTasks.cpp                       #
#    Command line    =  D:\S2Prog\TXU\src\TSNTasks.cpp --fpu None -D         #
#                       OS_LIBMODE_SP -D CPU_S3C2410 -D OS_RAMVECT=0 -D      #
#                       OS_UART=-1 -D S2TXU -D USE_LZO=1 -D __ARM_LIBRARY__  #
#                       -D WATCHDOG=1 -D NETWORK=1 -lCN                      #
#                       D:\S2Prog\TXU\Debug\List\ -o                         #
#                       D:\S2Prog\TXU\Debug\Obj\ -s9 --debug --cpu_mode arm  #
#                       --endian little --cpu ARM920T --stack_align 4        #
#                       --interwork -e --enable_multibytes --eec++           #
#                       --dlib_config "C:\Program Files (x86)\IAR            #
#                       Systems\Embedded Workbench                           #
#                       4.0\arm\LIB\dl4tpainl8n.h" -I                        #
#                       D:\S2Prog\TXU\GUI\CORE\ -I D:\S2Prog\TXU\GUI\WM\ -I  #
#                       D:\S2Prog\TXU\GUI\WIDGET\ -I D:\S2Prog\TXU\CONFIG\   #
#                       -I D:\S2Prog\TXU\INC\ -I D:\S2Prog\TXU\..\SHARED\INC #
#                       \ -I D:\S2Prog\TXU\..\SHARED\SRC\ -I                 #
#                       D:\S2Prog\TXU\..\SHARED\LZO\minilzo.210\ -I          #
#                       D:\S2Prog\TXU\lwip-1.4.1\src\include\ -I             #
#                       D:\S2Prog\TXU\lwip-1.4.1\src\include\ipv4\ -I        #
#                       D:\S2Prog\TXU\lwip-1.4.1\src\ -I                     #
#                       D:\S2Prog\TXU\..\SHARED\Database\ -I                 #
#                       D:\S2Prog\TXU\src\ -I "C:\Program Files (x86)\IAR    #
#                       Systems\Embedded Workbench 4.0\arm\INC\"             #
#                       --inline_threshold=2                                 #
#    List file       =  D:\S2Prog\TXU\Debug\List\TSNTasks.lst                #
#    Object file     =  D:\S2Prog\TXU\Debug\Obj\TSNTasks.r79                 #
#                                                                            #
#                                                                            #
##############################################################################

D:\S2Prog\TXU\src\TSNTasks.cpp
      1          #include "TDUincludes.h"

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void _Tree_algobase<allocator<void>>::_GenIter::_Dec()
   \                     ??_Dec:
   \   00000000   001090E5           LDR      R1,[R0, #+0]
   \   00000004   0D20D1E5           LDRB     R2,[R1, #+13]
   \   00000008   000052E3           CMP      R2,#+0
   \   0000000C   08109115           LDRNE    R1,[R1, #+8]
   \   00000010   1600001A           BNE      ??_Dec_1
   \   00000014   002091E5           LDR      R2,[R1, #+0]
   \   00000018   0D30D2E5           LDRB     R3,[R2, #+13]
   \   0000001C   000053E3           CMP      R3,#+0
   \   00000020   0A00001A           BNE      ??_Dec_2
   \   00000024   0210A0E1           MOV      R1,R2
   \   00000028   082091E5           LDR      R2,[R1, #+8]
   \   0000002C   0D20D2E5           LDRB     R2,[R2, #+13]
   \   00000030   000052E3           CMP      R2,#+0
   \   00000034   0D00001A           BNE      ??_Dec_1
   \                     ??_Dec_3:
   \   00000038   081091E5           LDR      R1,[R1, #+8]
   \   0000003C   082091E5           LDR      R2,[R1, #+8]
   \   00000040   0D20D2E5           LDRB     R2,[R2, #+13]
   \   00000044   000052E3           CMP      R2,#+0
   \   00000048   FAFFFF0A           BEQ      ??_Dec_3
   \   0000004C   070000EA           B        ??_Dec_1
   \                     ??_Dec_2:
   \   00000050   042091E5           LDR      R2,[R1, #+4]
   \   00000054   0D30D2E5           LDRB     R3,[R2, #+13]
   \   00000058   000053E3           CMP      R3,#+0
   \   0000005C   0300001A           BNE      ??_Dec_1
   \   00000060   003092E5           LDR      R3,[R2, #+0]
   \   00000064   030051E1           CMP      R1,R3
   \   00000068   0210A0E1           MOV      R1,R2
   \   0000006C   F7FFFF0A           BEQ      ??_Dec_2
   \                     ??_Dec_1:
   \   00000070   001080E5           STR      R1,[R0, #+0]
   \   00000074   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void _Tree_algobase<allocator<void>>::_GenIter::_Inc()
   \                     ??_Inc:
   \   00000000   001090E5           LDR      R1,[R0, #+0]
   \   00000004   0D20D1E5           LDRB     R2,[R1, #+13]
   \   00000008   000052E3           CMP      R2,#+0
   \   0000000C   1600001A           BNE      ??_Inc_1
   \   00000010   082091E5           LDR      R2,[R1, #+8]
   \   00000014   0D30D2E5           LDRB     R3,[R2, #+13]
   \   00000018   000053E3           CMP      R3,#+0
   \   0000001C   0B00001A           BNE      ??_Inc_2
   \   00000020   0210A0E1           MOV      R1,R2
   \   00000024   002091E5           LDR      R2,[R1, #+0]
   \   00000028   0D20D2E5           LDRB     R2,[R2, #+13]
   \   0000002C   000052E3           CMP      R2,#+0
   \   00000030   0D00001A           BNE      ??_Inc_1
   \                     ??_Inc_3:
   \   00000034   001091E5           LDR      R1,[R1, #+0]
   \   00000038   002091E5           LDR      R2,[R1, #+0]
   \   0000003C   0D20D2E5           LDRB     R2,[R2, #+13]
   \   00000040   000052E3           CMP      R2,#+0
   \   00000044   FAFFFF0A           BEQ      ??_Inc_3
   \   00000048   070000EA           B        ??_Inc_1
   \                     ??_Inc_4:
   \   0000004C   0210A0E1           MOV      R1,R2
   \                     ??_Inc_2:
   \   00000050   042091E5           LDR      R2,[R1, #+4]
   \   00000054   0D30D2E5           LDRB     R3,[R2, #+13]
   \   00000058   000053E3           CMP      R3,#+0
   \   0000005C   08309205           LDREQ    R3,[R2, #+8]
   \   00000060   03005101           CMPEQ    R1,R3
   \   00000064   F8FFFF0A           BEQ      ??_Inc_4
   \   00000068   0210A0E1           MOV      R1,R2
   \                     ??_Inc_1:
   \   0000006C   001080E5           STR      R1,[R0, #+0]
   \   00000070   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void _Tree_algobase<allocator<void>>::_Clear()
   \                     ??_Clear:
   \   00000000   040080E5           STR      R0,[R0, #+4]
   \   00000004   000080E5           STR      R0,[R0, #+0]
   \   00000008   080080E5           STR      R0,[R0, #+8]
   \   0000000C   0110A0E3           MOV      R1,#+1
   \   00000010   0D10C0E5           STRB     R1,[R0, #+13]
   \   00000014   0C10C0E5           STRB     R1,[R0, #+12]
   \   00000018   0010A0E3           MOV      R1,#+0
   \   0000001C   101080E5           STR      R1,[R0, #+16]
   \   00000020   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void _Tree_algobase<allocator<void>>::_Rrotate(_Tree_algobase<allocator<void>>::_Genptr)
   \                     ??_Rrotate:
   \   00000000   002091E5           LDR      R2,[R1, #+0]
   \   00000004   083092E5           LDR      R3,[R2, #+8]
   \   00000008   003081E5           STR      R3,[R1, #+0]
   \   0000000C   083092E5           LDR      R3,[R2, #+8]
   \   00000010   0DC0D3E5           LDRB     R12,[R3, #+13]
   \   00000014   00005CE3           CMP      R12,#+0
   \   00000018   04108305           STREQ    R1,[R3, #+4]
   \   0000001C   043091E5           LDR      R3,[R1, #+4]
   \   00000020   043082E5           STR      R3,[R2, #+4]
   \   00000024   043090E5           LDR      R3,[R0, #+4]
   \   00000028   030051E1           CMP      R1,R3
   \   0000002C   04208005           STREQ    R2,[R0, #+4]
   \   00000030   0400000A           BEQ      ??_Rrotate_1
   \   00000034   040091E5           LDR      R0,[R1, #+4]
   \   00000038   083090E5           LDR      R3,[R0, #+8]
   \   0000003C   030051E1           CMP      R1,R3
   \   00000040   08208005           STREQ    R2,[R0, #+8]
   \   00000044   00208015           STRNE    R2,[R0, #+0]
   \                     ??_Rrotate_1:
   \   00000048   081082E5           STR      R1,[R2, #+8]
   \   0000004C   042081E5           STR      R2,[R1, #+4]
   \   00000050   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void _Tree_algobase<allocator<void>>::_Lrotate(_Tree_algobase<allocator<void>>::_Genptr)
   \                     ??_Lrotate:
   \   00000000   082091E5           LDR      R2,[R1, #+8]
   \   00000004   003092E5           LDR      R3,[R2, #+0]
   \   00000008   083081E5           STR      R3,[R1, #+8]
   \   0000000C   003092E5           LDR      R3,[R2, #+0]
   \   00000010   0DC0D3E5           LDRB     R12,[R3, #+13]
   \   00000014   00005CE3           CMP      R12,#+0
   \   00000018   04108305           STREQ    R1,[R3, #+4]
   \   0000001C   043091E5           LDR      R3,[R1, #+4]
   \   00000020   043082E5           STR      R3,[R2, #+4]
   \   00000024   043090E5           LDR      R3,[R0, #+4]
   \   00000028   030051E1           CMP      R1,R3
   \   0000002C   04208005           STREQ    R2,[R0, #+4]
   \   00000030   0400000A           BEQ      ??_Lrotate_1
   \   00000034   040091E5           LDR      R0,[R1, #+4]
   \   00000038   003090E5           LDR      R3,[R0, #+0]
   \   0000003C   030051E1           CMP      R1,R3
   \   00000040   00208005           STREQ    R2,[R0, #+0]
   \   00000044   08208015           STRNE    R2,[R0, #+8]
   \                     ??_Lrotate_1:
   \   00000048   001082E5           STR      R1,[R2, #+0]
   \   0000004C   042081E5           STR      R2,[R1, #+4]
   \   00000050   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void _Tree_algobase<allocator<void>>::_Insert(bool, _Tree_algobase<allocator<void>>::_Genptr, _Tree_algobase<allocator<void>>::_Genptr)
   \                     ??_Insert:
   \   00000000   F0402DE9           PUSH     {R4-R7,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   100094E5           LDR      R0,[R4, #+16]
   \   0000000C   0350A0E1           MOV      R5,R3
   \   00000010   010080E2           ADD      R0,R0,#+1
   \   00000014   100084E5           STR      R0,[R4, #+16]
   \   00000018   040052E1           CMP      R2,R4
   \   0000001C   04508405           STREQ    R5,[R4, #+4]
   \   00000020   00508405           STREQ    R5,[R4, #+0]
   \   00000024   0B00000A           BEQ      ??_Insert_1
   \   00000028   000051E3           CMP      R1,#+0
   \   0000002C   0500000A           BEQ      ??_Insert_2
   \   00000030   005082E5           STR      R5,[R2, #+0]
   \   00000034   000094E5           LDR      R0,[R4, #+0]
   \   00000038   000052E1           CMP      R2,R0
   \   0000003C   0600001A           BNE      ??_Insert_3
   \   00000040   005084E5           STR      R5,[R4, #+0]
   \   00000044   040000EA           B        ??_Insert_3
   \                     ??_Insert_2:
   \   00000048   085082E5           STR      R5,[R2, #+8]
   \   0000004C   080094E5           LDR      R0,[R4, #+8]
   \   00000050   000052E1           CMP      R2,R0
   \   00000054   0000001A           BNE      ??_Insert_3
   \                     ??_Insert_1:
   \   00000058   085084E5           STR      R5,[R4, #+8]
   \                     ??_Insert_3:
   \   0000005C   040095E5           LDR      R0,[R5, #+4]
   \   00000060   0160A0E3           MOV      R6,#+1
   \   00000064   0C00D0E5           LDRB     R0,[R0, #+12]
   \   00000068   0070A0E3           MOV      R7,#+0
   \   0000006C   000050E3           CMP      R0,#+0
   \   00000070   3A00001A           BNE      ??_Insert_4
   \                     ??_Insert_5:
   \   00000074   040095E5           LDR      R0,[R5, #+4]
   \   00000078   041090E5           LDR      R1,[R0, #+4]
   \   0000007C   001091E5           LDR      R1,[R1, #+0]
   \   00000080   010050E1           CMP      R0,R1
   \   00000084   041090E5           LDR      R1,[R0, #+4]
   \   00000088   1C00001A           BNE      ??_Insert_6
   \   0000008C   082091E5           LDR      R2,[R1, #+8]
   \   00000090   0C10D2E5           LDRB     R1,[R2, #+12]
   \   00000094   000051E3           CMP      R1,#+0
   \   00000098   0700001A           BNE      ??_Insert_7
   \                     ??_Insert_8:
   \   0000009C   0C60C0E5           STRB     R6,[R0, #+12]
   \   000000A0   0C60C2E5           STRB     R6,[R2, #+12]
   \   000000A4   040095E5           LDR      R0,[R5, #+4]
   \   000000A8   040090E5           LDR      R0,[R0, #+4]
   \   000000AC   0C70C0E5           STRB     R7,[R0, #+12]
   \   000000B0   040095E5           LDR      R0,[R5, #+4]
   \   000000B4   045090E5           LDR      R5,[R0, #+4]
   \   000000B8   240000EA           B        ??_Insert_9
   \                     ??_Insert_7:
   \   000000BC   081090E5           LDR      R1,[R0, #+8]
   \   000000C0   010055E1           CMP      R5,R1
   \   000000C4   0300001A           BNE      ??_Insert_10
   \   000000C8   0050A0E1           MOV      R5,R0
   \   000000CC   0510A0E1           MOV      R1,R5
   \   000000D0   0400A0E1           MOV      R0,R4
   \   000000D4   ........           _BLF     ??_Lrotate,??_Lrotate??rA
   \                     ??_Insert_10:
   \   000000D8   040095E5           LDR      R0,[R5, #+4]
   \   000000DC   0C60C0E5           STRB     R6,[R0, #+12]
   \   000000E0   040095E5           LDR      R0,[R5, #+4]
   \   000000E4   040090E5           LDR      R0,[R0, #+4]
   \   000000E8   0C70C0E5           STRB     R7,[R0, #+12]
   \   000000EC   040095E5           LDR      R0,[R5, #+4]
   \   000000F0   041090E5           LDR      R1,[R0, #+4]
   \   000000F4   0400A0E1           MOV      R0,R4
   \   000000F8   ........           _BLF     ??_Rrotate,??_Rrotate??rA
   \   000000FC   130000EA           B        ??_Insert_9
   \                     ??_Insert_6:
   \   00000100   002091E5           LDR      R2,[R1, #+0]
   \   00000104   0C10D2E5           LDRB     R1,[R2, #+12]
   \   00000108   000051E3           CMP      R1,#+0
   \   0000010C   E2FFFF0A           BEQ      ??_Insert_8
   \   00000110   001090E5           LDR      R1,[R0, #+0]
   \   00000114   010055E1           CMP      R5,R1
   \   00000118   0300001A           BNE      ??_Insert_11
   \   0000011C   0050A0E1           MOV      R5,R0
   \   00000120   0510A0E1           MOV      R1,R5
   \   00000124   0400A0E1           MOV      R0,R4
   \   00000128   ........           _BLF     ??_Rrotate,??_Rrotate??rA
   \                     ??_Insert_11:
   \   0000012C   040095E5           LDR      R0,[R5, #+4]
   \   00000130   0C60C0E5           STRB     R6,[R0, #+12]
   \   00000134   040095E5           LDR      R0,[R5, #+4]
   \   00000138   040090E5           LDR      R0,[R0, #+4]
   \   0000013C   0C70C0E5           STRB     R7,[R0, #+12]
   \   00000140   040095E5           LDR      R0,[R5, #+4]
   \   00000144   041090E5           LDR      R1,[R0, #+4]
   \   00000148   0400A0E1           MOV      R0,R4
   \   0000014C   ........           _BLF     ??_Lrotate,??_Lrotate??rA
   \                     ??_Insert_9:
   \   00000150   040095E5           LDR      R0,[R5, #+4]
   \   00000154   0C00D0E5           LDRB     R0,[R0, #+12]
   \   00000158   000050E3           CMP      R0,#+0
   \   0000015C   C4FFFF0A           BEQ      ??_Insert_5
   \                     ??_Insert_4:
   \   00000160   040094E5           LDR      R0,[R4, #+4]
   \   00000164   0C60C0E5           STRB     R6,[R0, #+12]
   \   00000168   F040BDE8           POP      {R4-R7,LR}
   \   0000016C   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs _Tree<_Tset_traits<IOUnit *, less<IOUnit *>, allocator<IOUnit *>, false>>::_Pairib _Tree<_Tset_traits<IOUnit *, less<IOUnit *>, allocator<IOUnit *>, false>>::insert(IOUnit *)
   \                     ??insert:
   \   00000000   F04F2DE9           PUSH     {R4-R11,LR}
   \   00000004   0CD04DE2           SUB      SP,SP,#+12
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   0150A0E1           MOV      R5,R1
   \   00000010   040095E5           LDR      R0,[R5, #+4]
   \   00000014   0260A0E1           MOV      R6,R2
   \   00000018   0D10D0E5           LDRB     R1,[R0, #+13]
   \   0000001C   0570A0E1           MOV      R7,R5
   \   00000020   0180A0E3           MOV      R8,#+1
   \   00000024   0090A0E3           MOV      R9,#+0
   \   00000028   000051E3           CMP      R1,#+0
   \   0000002C   0900001A           BNE      ??insert_3
   \                     ??insert_4:
   \   00000030   101090E5           LDR      R1,[R0, #+16]
   \   00000034   0070A0E1           MOV      R7,R0
   \   00000038   010056E1           CMP      R6,R1
   \   0000003C   00009035           LDRCC    R0,[R0, #+0]
   \   00000040   0180A033           MOVCC    R8,#+1
   \   00000044   08009025           LDRCS    R0,[R0, #+8]
   \   00000048   0080A023           MOVCS    R8,#+0
   \   0000004C   0D10D0E5           LDRB     R1,[R0, #+13]
   \   00000050   000051E3           CMP      R1,#+0
   \   00000054   F5FFFF0A           BEQ      ??insert_4
   \                     ??insert_3:
   \   00000058   08708DE5           STR      R7,[SP, #+8]
   \   0000005C   01A0A0E3           MOV      R10,#+1
   \   00000060   000058E3           CMP      R8,#+0
   \   00000064   1500000A           BEQ      ??insert_5
   \   00000068   000095E5           LDR      R0,[R5, #+0]
   \   0000006C   000057E1           CMP      R7,R0
   \   00000070   1000001A           BNE      ??insert_6
   \   00000074   1400A0E3           MOV      R0,#+20
   \   00000078   ........           _BLF     `??operator new`,`??operator new??rA`
   \   0000007C   0080B0E1           MOVS     R8,R0
   \   00000080   0500000A           BEQ      ??insert_7
   \   00000084   005088E5           STR      R5,[R8, #+0]
   \   00000088   047088E5           STR      R7,[R8, #+4]
   \   0000008C   085088E5           STR      R5,[R8, #+8]
   \   00000090   0C90C8E5           STRB     R9,[R8, #+12]
   \   00000094   0D90C8E5           STRB     R9,[R8, #+13]
   \   00000098   106088E5           STR      R6,[R8, #+16]
   \                     ??insert_7:
   \   0000009C   0830A0E1           MOV      R3,R8
   \   000000A0   0720A0E1           MOV      R2,R7
   \   000000A4   0110A0E3           MOV      R1,#+1
   \   000000A8   0500A0E1           MOV      R0,R5
   \   000000AC   ........           _BLF     ??_Insert,??_Insert??rA
   \   000000B0   00808DE5           STR      R8,[SP, #+0]
   \   000000B4   150000EA           B        ??insert_8
   \                     ??insert_6:
   \   000000B8   08008DE2           ADD      R0,SP,#+8
   \   000000BC   ........           _BLF     ??_Dec,??_Dec??rA
   \                     ??insert_5:
   \   000000C0   08009DE5           LDR      R0,[SP, #+8]
   \   000000C4   100090E5           LDR      R0,[R0, #+16]
   \   000000C8   060050E1           CMP      R0,R6
   \   000000CC   1600002A           BCS      ??insert_9
   \   000000D0   1400A0E3           MOV      R0,#+20
   \   000000D4   ........           _BLF     `??operator new`,`??operator new??rA`
   \   000000D8   00B0B0E1           MOVS     R11,R0
   \   000000DC   0500000A           BEQ      ??insert_10
   \   000000E0   00508BE5           STR      R5,[R11, #+0]
   \   000000E4   04708BE5           STR      R7,[R11, #+4]
   \   000000E8   08508BE5           STR      R5,[R11, #+8]
   \   000000EC   0C90CBE5           STRB     R9,[R11, #+12]
   \   000000F0   0D90CBE5           STRB     R9,[R11, #+13]
   \   000000F4   10608BE5           STR      R6,[R11, #+16]
   \                     ??insert_10:
   \   000000F8   0B30A0E1           MOV      R3,R11
   \   000000FC   0720A0E1           MOV      R2,R7
   \   00000100   0810A0E1           MOV      R1,R8
   \   00000104   0500A0E1           MOV      R0,R5
   \   00000108   ........           _BLF     ??_Insert,??_Insert??rA
   \   0000010C   00B08DE5           STR      R11,[SP, #+0]
   \                     ??insert_8:
   \   00000110   04A0CDE5           STRB     R10,[SP, #+4]
   \                     ??insert_11:
   \   00000114   0D00A0E1           MOV      R0,SP
   \   00000118   030090E8           LDM      R0,{R0,R1}
   \   0000011C   030084E8           STM      R4,{R0,R1}
   \   00000120   0400A0E1           MOV      R0,R4
   \   00000124   FE4FBDE8           POP      {R1-R11,LR}
   \   00000128   1EFF2FE1           BX       LR               ;; return
   \                     ??insert_9:
   \   0000012C   08109DE5           LDR      R1,[SP, #+8]
   \   00000130   00108DE5           STR      R1,[SP, #+0]
   \   00000134   0010A0E3           MOV      R1,#+0
   \   00000138   0410CDE5           STRB     R1,[SP, #+4]
   \   0000013C   F4FFFFEA           B        ??insert_11

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs _Tree<_Tset_traits<PRogramObject *, less<PRogramObject *>, allocator<PRogramObject *>, false>>::_Pairib _Tree<_Tset_traits<PRogramObject *, less<PRogramObject *>, allocator<PRogramObject *>, false>>::insert(PRogramObject *)
   \                     ??insert_1:
   \   00000000   F04F2DE9           PUSH     {R4-R11,LR}
   \   00000004   0CD04DE2           SUB      SP,SP,#+12
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   0150A0E1           MOV      R5,R1
   \   00000010   040095E5           LDR      R0,[R5, #+4]
   \   00000014   0260A0E1           MOV      R6,R2
   \   00000018   0D10D0E5           LDRB     R1,[R0, #+13]
   \   0000001C   0570A0E1           MOV      R7,R5
   \   00000020   0180A0E3           MOV      R8,#+1
   \   00000024   0090A0E3           MOV      R9,#+0
   \   00000028   000051E3           CMP      R1,#+0
   \   0000002C   0900001A           BNE      ??insert_12
   \                     ??insert_13:
   \   00000030   101090E5           LDR      R1,[R0, #+16]
   \   00000034   0070A0E1           MOV      R7,R0
   \   00000038   010056E1           CMP      R6,R1
   \   0000003C   00009035           LDRCC    R0,[R0, #+0]
   \   00000040   0180A033           MOVCC    R8,#+1
   \   00000044   08009025           LDRCS    R0,[R0, #+8]
   \   00000048   0080A023           MOVCS    R8,#+0
   \   0000004C   0D10D0E5           LDRB     R1,[R0, #+13]
   \   00000050   000051E3           CMP      R1,#+0
   \   00000054   F5FFFF0A           BEQ      ??insert_13
   \                     ??insert_12:
   \   00000058   08708DE5           STR      R7,[SP, #+8]
   \   0000005C   01A0A0E3           MOV      R10,#+1
   \   00000060   000058E3           CMP      R8,#+0
   \   00000064   1500000A           BEQ      ??insert_14
   \   00000068   000095E5           LDR      R0,[R5, #+0]
   \   0000006C   000057E1           CMP      R7,R0
   \   00000070   1000001A           BNE      ??insert_15
   \   00000074   1400A0E3           MOV      R0,#+20
   \   00000078   ........           _BLF     `??operator new`,`??operator new??rA`
   \   0000007C   0080B0E1           MOVS     R8,R0
   \   00000080   0500000A           BEQ      ??insert_16
   \   00000084   005088E5           STR      R5,[R8, #+0]
   \   00000088   047088E5           STR      R7,[R8, #+4]
   \   0000008C   085088E5           STR      R5,[R8, #+8]
   \   00000090   0C90C8E5           STRB     R9,[R8, #+12]
   \   00000094   0D90C8E5           STRB     R9,[R8, #+13]
   \   00000098   106088E5           STR      R6,[R8, #+16]
   \                     ??insert_16:
   \   0000009C   0830A0E1           MOV      R3,R8
   \   000000A0   0720A0E1           MOV      R2,R7
   \   000000A4   0110A0E3           MOV      R1,#+1
   \   000000A8   0500A0E1           MOV      R0,R5
   \   000000AC   ........           _BLF     ??_Insert,??_Insert??rA
   \   000000B0   00808DE5           STR      R8,[SP, #+0]
   \   000000B4   150000EA           B        ??insert_17
   \                     ??insert_15:
   \   000000B8   08008DE2           ADD      R0,SP,#+8
   \   000000BC   ........           _BLF     ??_Dec,??_Dec??rA
   \                     ??insert_14:
   \   000000C0   08009DE5           LDR      R0,[SP, #+8]
   \   000000C4   100090E5           LDR      R0,[R0, #+16]
   \   000000C8   060050E1           CMP      R0,R6
   \   000000CC   1600002A           BCS      ??insert_18
   \   000000D0   1400A0E3           MOV      R0,#+20
   \   000000D4   ........           _BLF     `??operator new`,`??operator new??rA`
   \   000000D8   00B0B0E1           MOVS     R11,R0
   \   000000DC   0500000A           BEQ      ??insert_19
   \   000000E0   00508BE5           STR      R5,[R11, #+0]
   \   000000E4   04708BE5           STR      R7,[R11, #+4]
   \   000000E8   08508BE5           STR      R5,[R11, #+8]
   \   000000EC   0C90CBE5           STRB     R9,[R11, #+12]
   \   000000F0   0D90CBE5           STRB     R9,[R11, #+13]
   \   000000F4   10608BE5           STR      R6,[R11, #+16]
   \                     ??insert_19:
   \   000000F8   0B30A0E1           MOV      R3,R11
   \   000000FC   0720A0E1           MOV      R2,R7
   \   00000100   0810A0E1           MOV      R1,R8
   \   00000104   0500A0E1           MOV      R0,R5
   \   00000108   ........           _BLF     ??_Insert,??_Insert??rA
   \   0000010C   00B08DE5           STR      R11,[SP, #+0]
   \                     ??insert_17:
   \   00000110   04A0CDE5           STRB     R10,[SP, #+4]
   \                     ??insert_20:
   \   00000114   0D00A0E1           MOV      R0,SP
   \   00000118   030090E8           LDM      R0,{R0,R1}
   \   0000011C   030084E8           STM      R4,{R0,R1}
   \   00000120   0400A0E1           MOV      R0,R4
   \   00000124   FE4FBDE8           POP      {R1-R11,LR}
   \   00000128   1EFF2FE1           BX       LR               ;; return
   \                     ??insert_18:
   \   0000012C   08109DE5           LDR      R1,[SP, #+8]
   \   00000130   00108DE5           STR      R1,[SP, #+0]
   \   00000134   0010A0E3           MOV      R1,#+0
   \   00000138   0410CDE5           STRB     R1,[SP, #+4]
   \   0000013C   F4FFFFEA           B        ??insert_20

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs _Tree<_Tset_traits<AlarmBasic *, less<AlarmBasic *>, allocator<AlarmBasic *>, false>>::_Pairib _Tree<_Tset_traits<AlarmBasic *, less<AlarmBasic *>, allocator<AlarmBasic *>, false>>::insert(AlarmBasic *)
   \                     ??insert_2:
   \   00000000   F04F2DE9           PUSH     {R4-R11,LR}
   \   00000004   0CD04DE2           SUB      SP,SP,#+12
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   0150A0E1           MOV      R5,R1
   \   00000010   040095E5           LDR      R0,[R5, #+4]
   \   00000014   0260A0E1           MOV      R6,R2
   \   00000018   0D10D0E5           LDRB     R1,[R0, #+13]
   \   0000001C   0570A0E1           MOV      R7,R5
   \   00000020   0180A0E3           MOV      R8,#+1
   \   00000024   0090A0E3           MOV      R9,#+0
   \   00000028   000051E3           CMP      R1,#+0
   \   0000002C   0900001A           BNE      ??insert_21
   \                     ??insert_22:
   \   00000030   101090E5           LDR      R1,[R0, #+16]
   \   00000034   0070A0E1           MOV      R7,R0
   \   00000038   010056E1           CMP      R6,R1
   \   0000003C   00009035           LDRCC    R0,[R0, #+0]
   \   00000040   0180A033           MOVCC    R8,#+1
   \   00000044   08009025           LDRCS    R0,[R0, #+8]
   \   00000048   0080A023           MOVCS    R8,#+0
   \   0000004C   0D10D0E5           LDRB     R1,[R0, #+13]
   \   00000050   000051E3           CMP      R1,#+0
   \   00000054   F5FFFF0A           BEQ      ??insert_22
   \                     ??insert_21:
   \   00000058   08708DE5           STR      R7,[SP, #+8]
   \   0000005C   01A0A0E3           MOV      R10,#+1
   \   00000060   000058E3           CMP      R8,#+0
   \   00000064   1500000A           BEQ      ??insert_23
   \   00000068   000095E5           LDR      R0,[R5, #+0]
   \   0000006C   000057E1           CMP      R7,R0
   \   00000070   1000001A           BNE      ??insert_24
   \   00000074   1400A0E3           MOV      R0,#+20
   \   00000078   ........           _BLF     `??operator new`,`??operator new??rA`
   \   0000007C   0080B0E1           MOVS     R8,R0
   \   00000080   0500000A           BEQ      ??insert_25
   \   00000084   005088E5           STR      R5,[R8, #+0]
   \   00000088   047088E5           STR      R7,[R8, #+4]
   \   0000008C   085088E5           STR      R5,[R8, #+8]
   \   00000090   0C90C8E5           STRB     R9,[R8, #+12]
   \   00000094   0D90C8E5           STRB     R9,[R8, #+13]
   \   00000098   106088E5           STR      R6,[R8, #+16]
   \                     ??insert_25:
   \   0000009C   0830A0E1           MOV      R3,R8
   \   000000A0   0720A0E1           MOV      R2,R7
   \   000000A4   0110A0E3           MOV      R1,#+1
   \   000000A8   0500A0E1           MOV      R0,R5
   \   000000AC   ........           _BLF     ??_Insert,??_Insert??rA
   \   000000B0   00808DE5           STR      R8,[SP, #+0]
   \   000000B4   150000EA           B        ??insert_26
   \                     ??insert_24:
   \   000000B8   08008DE2           ADD      R0,SP,#+8
   \   000000BC   ........           _BLF     ??_Dec,??_Dec??rA
   \                     ??insert_23:
   \   000000C0   08009DE5           LDR      R0,[SP, #+8]
   \   000000C4   100090E5           LDR      R0,[R0, #+16]
   \   000000C8   060050E1           CMP      R0,R6
   \   000000CC   1600002A           BCS      ??insert_27
   \   000000D0   1400A0E3           MOV      R0,#+20
   \   000000D4   ........           _BLF     `??operator new`,`??operator new??rA`
   \   000000D8   00B0B0E1           MOVS     R11,R0
   \   000000DC   0500000A           BEQ      ??insert_28
   \   000000E0   00508BE5           STR      R5,[R11, #+0]
   \   000000E4   04708BE5           STR      R7,[R11, #+4]
   \   000000E8   08508BE5           STR      R5,[R11, #+8]
   \   000000EC   0C90CBE5           STRB     R9,[R11, #+12]
   \   000000F0   0D90CBE5           STRB     R9,[R11, #+13]
   \   000000F4   10608BE5           STR      R6,[R11, #+16]
   \                     ??insert_28:
   \   000000F8   0B30A0E1           MOV      R3,R11
   \   000000FC   0720A0E1           MOV      R2,R7
   \   00000100   0810A0E1           MOV      R1,R8
   \   00000104   0500A0E1           MOV      R0,R5
   \   00000108   ........           _BLF     ??_Insert,??_Insert??rA
   \   0000010C   00B08DE5           STR      R11,[SP, #+0]
   \                     ??insert_26:
   \   00000110   04A0CDE5           STRB     R10,[SP, #+4]
   \                     ??insert_29:
   \   00000114   0D00A0E1           MOV      R0,SP
   \   00000118   030090E8           LDM      R0,{R0,R1}
   \   0000011C   030084E8           STM      R4,{R0,R1}
   \   00000120   0400A0E1           MOV      R0,R4
   \   00000124   FE4FBDE8           POP      {R1-R11,LR}
   \   00000128   1EFF2FE1           BX       LR               ;; return
   \                     ??insert_27:
   \   0000012C   08109DE5           LDR      R1,[SP, #+8]
   \   00000130   00108DE5           STR      R1,[SP, #+0]
   \   00000134   0010A0E3           MOV      R1,#+0
   \   00000138   0410CDE5           STRB     R1,[SP, #+4]
   \   0000013C   F4FFFFEA           B        ??insert_29

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::_Nodeptr _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::_Copy(_Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::_Nodeptr, _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::_Nodeptr)
   \                     ??_Copy:
   \   00000000   F0472DE9           PUSH     {R4-R10,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
   \   0000000C   0D00D5E5           LDRB     R0,[R5, #+13]
   \   00000010   0280A0E1           MOV      R8,R2
   \   00000014   0460A0E1           MOV      R6,R4
   \   00000018   000050E3           CMP      R0,#+0
   \   0000001C   1900001A           BNE      ??_Copy_1
   \   00000020   0C90D5E5           LDRB     R9,[R5, #+12]
   \   00000024   10A095E5           LDR      R10,[R5, #+16]
   \   00000028   1400A0E3           MOV      R0,#+20
   \   0000002C   ........           _BLF     `??operator new`,`??operator new??rA`
   \   00000030   0070B0E1           MOVS     R7,R0
   \   00000034   0600000A           BEQ      ??_Copy_2
   \   00000038   004087E5           STR      R4,[R7, #+0]
   \   0000003C   048087E5           STR      R8,[R7, #+4]
   \   00000040   084087E5           STR      R4,[R7, #+8]
   \   00000044   0C90C7E5           STRB     R9,[R7, #+12]
   \   00000048   0000A0E3           MOV      R0,#+0
   \   0000004C   0D00C7E5           STRB     R0,[R7, #+13]
   \   00000050   10A087E5           STR      R10,[R7, #+16]
   \                     ??_Copy_2:
   \   00000054   0D00D6E5           LDRB     R0,[R6, #+13]
   \   00000058   001095E5           LDR      R1,[R5, #+0]
   \   0000005C   0720A0E1           MOV      R2,R7
   \   00000060   000050E3           CMP      R0,#+0
   \   00000064   0760A011           MOVNE    R6,R7
   \   00000068   0400A0E1           MOV      R0,R4
   \   0000006C   E3FFFFEB           BL       ??_Copy
   \   00000070   000087E5           STR      R0,[R7, #+0]
   \   00000074   081095E5           LDR      R1,[R5, #+8]
   \   00000078   0720A0E1           MOV      R2,R7
   \   0000007C   0400A0E1           MOV      R0,R4
   \   00000080   DEFFFFEB           BL       ??_Copy
   \   00000084   080087E5           STR      R0,[R7, #+8]
   \                     ??_Copy_1:
   \   00000088   0600A0E1           MOV      R0,R6
   \   0000008C   F047BDE8           POP      {R4-R10,LR}
   \   00000090   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void _Tree<_Tset_traits<PRogramObject *, less<PRogramObject *>, allocator<PRogramObject *>, false>>::_Erase(_Tree<_Tset_traits<PRogramObject *, less<PRogramObject *>, allocator<PRogramObject *>, false>>::_Nodeptr)
   \                     ??_Erase:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
   \   0000000C   0560A0E1           MOV      R6,R5
   \   00000010   0D00D6E5           LDRB     R0,[R6, #+13]
   \   00000014   000050E3           CMP      R0,#+0
   \   00000018   0900001A           BNE      ??_Erase_3
   \                     ??_Erase_4:
   \   0000001C   081096E5           LDR      R1,[R6, #+8]
   \   00000020   0400A0E1           MOV      R0,R4
   \   00000024   F5FFFFEB           BL       ??_Erase
   \   00000028   006096E5           LDR      R6,[R6, #+0]
   \   0000002C   0500A0E1           MOV      R0,R5
   \   00000030   ........           _BLF     `??operator delete`,`??operator delete??rA`
   \   00000034   0D00D6E5           LDRB     R0,[R6, #+13]
   \   00000038   0650A0E1           MOV      R5,R6
   \   0000003C   000050E3           CMP      R0,#+0
   \   00000040   F5FFFF0A           BEQ      ??_Erase_4
   \                     ??_Erase_3:
   \   00000044   7040BDE8           POP      {R4-R6,LR}
   \   00000048   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::_Erase(_Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::_Nodeptr)
   \                     ??_Erase_1:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
   \   0000000C   0560A0E1           MOV      R6,R5
   \   00000010   0D00D6E5           LDRB     R0,[R6, #+13]
   \   00000014   000050E3           CMP      R0,#+0
   \   00000018   0900001A           BNE      ??_Erase_5
   \                     ??_Erase_6:
   \   0000001C   081096E5           LDR      R1,[R6, #+8]
   \   00000020   0400A0E1           MOV      R0,R4
   \   00000024   F5FFFFEB           BL       ??_Erase_1
   \   00000028   006096E5           LDR      R6,[R6, #+0]
   \   0000002C   0500A0E1           MOV      R0,R5
   \   00000030   ........           _BLF     `??operator delete`,`??operator delete??rA`
   \   00000034   0D00D6E5           LDRB     R0,[R6, #+13]
   \   00000038   0650A0E1           MOV      R5,R6
   \   0000003C   000050E3           CMP      R0,#+0
   \   00000040   F5FFFF0A           BEQ      ??_Erase_6
   \                     ??_Erase_5:
   \   00000044   7040BDE8           POP      {R4-R6,LR}
   \   00000048   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void _Tree<_Tset_traits<IOUnit *, less<IOUnit *>, allocator<IOUnit *>, false>>::_Erase(_Tree<_Tset_traits<IOUnit *, less<IOUnit *>, allocator<IOUnit *>, false>>::_Nodeptr)
   \                     ??_Erase_2:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
   \   0000000C   0560A0E1           MOV      R6,R5
   \   00000010   0D00D6E5           LDRB     R0,[R6, #+13]
   \   00000014   000050E3           CMP      R0,#+0
   \   00000018   0900001A           BNE      ??_Erase_7
   \                     ??_Erase_8:
   \   0000001C   081096E5           LDR      R1,[R6, #+8]
   \   00000020   0400A0E1           MOV      R0,R4
   \   00000024   F5FFFFEB           BL       ??_Erase_2
   \   00000028   006096E5           LDR      R6,[R6, #+0]
   \   0000002C   0500A0E1           MOV      R0,R5
   \   00000030   ........           _BLF     `??operator delete`,`??operator delete??rA`
   \   00000034   0D00D6E5           LDRB     R0,[R6, #+13]
   \   00000038   0650A0E1           MOV      R5,R6
   \   0000003C   000050E3           CMP      R0,#+0
   \   00000040   F5FFFF0A           BEQ      ??_Erase_8
   \                     ??_Erase_7:
   \   00000044   7040BDE8           POP      {R4-R6,LR}
   \   00000048   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs OS_TASK ** _Vector_impl<OS_TASK *, allocator<OS_TASK *>>::_Make_room(OS_TASK **, unsigned int)
   \                     ??_Make_room:
   \   00000000   F0472DE9           PUSH     {R4-R10,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   000094E5           LDR      R0,[R4, #+0]
   \   0000000C   0150A0E1           MOV      R5,R1
   \   00000010   081094E5           LDR      R1,[R4, #+8]
   \   00000014   0260A0E1           MOV      R6,R2
   \   00000018   001041E0           SUB      R1,R1,R0
   \   0000001C   2171A0E1           LSR      R7,R1,#+2
   \   00000020   041094E5           LDR      R1,[R4, #+4]
   \   00000024   000056E3           CMP      R6,#+0
   \   00000028   000041E0           SUB      R0,R1,R0
   \   0000002C   2001A0E1           LSR      R0,R0,#+2
   \   00000030   2C00000A           BEQ      ??_Make_room_1
   \   00000034   C024E0E3           MVN      R2,#-1073741824
   \   00000038   002042E0           SUB      R2,R2,R0
   \   0000003C   060052E1           CMP      R2,R6
   \   00000040   2800003A           BCC      ??_Make_room_1
   \   00000044   008086E0           ADD      R8,R6,R0
   \   00000048   080057E1           CMP      R7,R8
   \   0000004C   1F00002A           BCS      ??_Make_room_2
   \   00000050   A700A0E1           LSR      R0,R7,#+1
   \   00000054   C014E0E3           MVN      R1,#-1073741824
   \   00000058   001041E0           SUB      R1,R1,R0
   \   0000005C   070051E1           CMP      R1,R7
   \   00000060   0070A033           MOVCC    R7,#+0
   \   00000064   07708020           ADDCS    R7,R0,R7
   \   00000068   080057E1           CMP      R7,R8
   \   0000006C   0870A031           MOVCC    R7,R8
   \   00000070   0701A0E1           LSL      R0,R7,#+2
   \   00000074   ........           _BLF     `??operator new`,`??operator new??rA`
   \   00000078   0090A0E1           MOV      R9,R0
   \   0000007C   000094E5           LDR      R0,[R4, #+0]
   \   00000080   0920A0E1           MOV      R2,R9
   \   00000084   0510A0E1           MOV      R1,R5
   \   00000088   ........           _BLF     _Copy_a4,??_Copy_a4??rA
   \   0000008C   041094E5           LDR      R1,[R4, #+4]
   \   00000090   00A0A0E1           MOV      R10,R0
   \   00000094   06218AE0           ADD      R2,R10,R6, LSL #+2
   \   00000098   0500A0E1           MOV      R0,R5
   \   0000009C   ........           _BLF     _Copy_a4,??_Copy_a4??rA
   \   000000A0   000094E5           LDR      R0,[R4, #+0]
   \   000000A4   000050E3           CMP      R0,#+0
   \   000000A8   0100000A           BEQ      ??_Make_room_3
   \   000000AC   040084E5           STR      R0,[R4, #+4]
   \   000000B0   ........           _BLF     `??operator delete`,`??operator delete??rA`
   \                     ??_Make_room_3:
   \   000000B4   070189E0           ADD      R0,R9,R7, LSL #+2
   \   000000B8   080084E5           STR      R0,[R4, #+8]
   \   000000BC   080189E0           ADD      R0,R9,R8, LSL #+2
   \   000000C0   040084E5           STR      R0,[R4, #+4]
   \   000000C4   009084E5           STR      R9,[R4, #+0]
   \   000000C8   0A50A0E1           MOV      R5,R10
   \   000000CC   050000EA           B        ??_Make_room_1
   \                     ??_Make_room_2:
   \   000000D0   062181E0           ADD      R2,R1,R6, LSL #+2
   \   000000D4   0500A0E1           MOV      R0,R5
   \   000000D8   ........           _BLF     _Copy_backward_a4,??_Copy_backward_a4??rA
   \   000000DC   040094E5           LDR      R0,[R4, #+4]
   \   000000E0   060180E0           ADD      R0,R0,R6, LSL #+2
   \   000000E4   040084E5           STR      R0,[R4, #+4]
   \                     ??_Make_room_1:
   \   000000E8   0500A0E1           MOV      R0,R5
   \   000000EC   F047BDE8           POP      {R4-R10,LR}
   \   000000F0   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs vector<OS_TASK *>::~vector()
   \                     `?~vector`:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   000094E5           LDR      R0,[R4, #+0]
   \   0000000C   000050E3           CMP      R0,#+0
   \   00000010   0200000A           BEQ      `?~vector_1`
   \   00000014   040084E5           STR      R0,[R4, #+4]
   \   00000018   ........           _BLF     `??operator delete`,`??operator delete??rA`
   \   0000001C   0000A0E3           MOV      R0,#+0
   \                     `?~vector_1`:
   \   00000020   000084E5           STR      R0,[R4, #+0]
   \   00000024   040084E5           STR      R0,[R4, #+4]
   \   00000028   080084E5           STR      R0,[R4, #+8]
   \   0000002C   1040BDE8           POP      {R4,LR}
   \   00000030   1EFF2FE1           BX       LR               ;; return

   \                                 In segment DATA_AN, at 0x31fff014
   \   unsigned int volatile __data ProgProgress
   \                     ProgProgress:
   \   00000000                      DS8 4

   \                                 In segment DATA_AN, at 0x31fff018
   \   unsigned int volatile __data FlashErrorStatus
   \                     FlashErrorStatus:
   \   00000000                      DS8 4

   \                                 In segment DATA_AN, at 0x31fff03c
   \   long volatile __data LastStartTime
   \                     LastStartTime:
   \   00000000                      DS8 4
      2          #include "TSNAsyncSender.h"
      3          #include "TSNAsyncReceiver.h"
      4          #include "TSNVersion.h"
      5          #include "FixedVariables.h"
      6          #ifdef WIN32
      7              #include "WinUart.h"
      8          #else
      9              #include "SC2410Uart.h"
     10              #include "ST16554Uart.h"
     11          #endif
     12          #ifdef S2TXU
     13              #pragma diag_suppress=Pa082
     14          
     15              #include "lwip/debug.h"
     16              #include "lwip/sys.h"
     17              #include "lwip/opt.h"
     18              #include "lwip/stats.h"
     19              #include "lwip/err.h"
     20              #include "lwip/netif.h"
     21              #include "lwip/ip_addr.h"
     22              #include "arch/sys_arch.h"
     23              #include "netif/cs8900if.h"
     24              #include "lwip/tcpip.h"
     25              #include "lwip/tcp.h"
     26          
     27          extern "C"
     28          {
     29          #if (NETWORK == 1)
     30          extern void StartNetwork(void);
     31          #endif
     32          TSN_TASK *ExternAlarmSilence = NULL;                           /* Task control blocks */
     33          }
     34          
     35          
     36          #endif
     37          #ifdef S2TXU
     38          /*******************************************************************
     39          *       SaveSettingsTask
     40          */
     41          //char SettinData[FLASH_FILE_SIZE];
     42          TSN_TASK SaveSettingsTaskHandle;                                                     /* Task control blocks */
     43          int SaveSettingsTaskStack[4*1024];

   \                                 In segment CODE, align 4, keep-with-next
     44          static void SaveSettingsTask(void) {
   \                     ??SaveSettingsTask:
   \   00000000   F0432DE9           PUSH     {R4-R9,LR}
   \   00000004   38D04DE2           SUB      SP,SP,#+56
     45              TSN_Delay(5000);
     46              OS_Terminate(&tStartTxuTask);
     47              delete[] StartTxuTaskStack;
     48              TSN_Delay(500);
     49          
     50              FlashErrorStatus = WD_SETTINGS_OK;
   \   00000008   ........           LDR      R4,??DataTable4  ;; 0x31fff018
     51              if ( FlashErrorStatus != WD_SETTINGS_OK ) {
   \   0000000C   10719FE5           LDR      R7,??SaveSettingsTask_1  ;; ??WriteAll
   \   00000010   8800A0E3           MOV      R0,#+136
   \   00000014   4C0D80E3           ORR      R0,R0,#0x1300
   \   00000018   ........           _BLF     OS_Delay,??OS_Delay??rA
   \   0000001C   04019FE5           LDR      R0,??SaveSettingsTask_1+0x4  ;; tStartTxuTask
   \   00000020   0050A0E3           MOV      R5,#+0
   \   00000024   ........           _BLF     OS_Terminate,??OS_Terminate??rA
   \   00000028   FC009FE5           LDR      R0,??SaveSettingsTask_1+0x8  ;; StartTxuTaskStack
   \   0000002C   0160A0E3           MOV      R6,#+1
   \   00000030   000090E5           LDR      R0,[R0, #+0]
   \   00000034   ........           _BLF     `??operator delete[]`,`??operator delete[]??rA`
   \   00000038   7D0FA0E3           MOV      R0,#+500
   \   0000003C   ........           _BLF     OS_Delay,??OS_Delay??rA
   \   00000040   005084E5           STR      R5,[R4, #+0]
   \   00000044   000094E5           LDR      R0,[R4, #+0]
   \   00000048   000050E3           CMP      R0,#+0
     52                  PRogramObjectBase::WriteAll = true;
   \   0000004C   0060C715           STRBNE   R6,[R7, #+0]
   \   00000050   1400001A           BNE      ??SaveSettingsTask_2
     53              } else {
     54                  FlashErrorStatus = WD_SETTINGS_READ;
   \   00000054   006084E5           STR      R6,[R4, #+0]
     55                  TSNSaveSettings *SaveSettings = new TSNSaveSettings();
   \   00000058   3400A0E3           MOV      R0,#+52
   \   0000005C   ........           _BLF     `??operator new`,`??operator new??rA`
   \   00000060   0080B0E1           MOVS     R8,R0
   \   00000064   0100000A           BEQ      ??SaveSettingsTask_3
   \   00000068   ........           _BLF     ??TSNSaveSettings,??TSNSaveSettings??rA
   \   0000006C   000000EA           B        ??SaveSettingsTask_4
   \                     ??SaveSettingsTask_3:
   \   00000070   0080A0E3           MOV      R8,#+0
     56                  SaveSettings->LoadFromFile();
   \                     ??SaveSettingsTask_4:
   \   00000074   0800A0E1           MOV      R0,R8
   \   00000078   ........           _BLF     ??LoadFromFile,??LoadFromFile??rA
     57                  if ( !RestoreSettingsWarningsString.IsEmpty() ) {
   \   0000007C   AC009FE5           LDR      R0,??SaveSettingsTask_1+0xC  ;; RestoreSettingsWarningsString
   \   00000080   ........           _BLF     ??IsEmpty,??IsEmpty??rA
   \   00000084   000050E3           CMP      R0,#+0
   \   00000088   0300001A           BNE      ??SaveSettingsTask_5
     58                      CurrentWinID = TDU_WARNING_WIN;
   \   0000008C   ........           LDR      R0,??DataTable6  ;; CurrentWinID
   \   00000090   9C10A0E3           MOV      R1,#+156
   \   00000094   801E81E3           ORR      R1,R1,#0x800
   \   00000098   001080E5           STR      R1,[R0, #+0]
     59                  }
     60                  FlashErrorStatus = WD_SETTINGS_OK;
   \                     ??SaveSettingsTask_5:
   \   0000009C   005084E5           STR      R5,[R4, #+0]
     61                  delete SaveSettings;
   \   000000A0   0800A0E1           MOV      R0,R8
   \   000000A4   ........           _BLF     `??delete ~TSNSaveSettings`,`??delete ~TSNSaveSettings??rA`
     62              }
     63          
     64              switch ( CurrentDeviceId ) {
   \                     ??SaveSettingsTask_2:
   \   000000A8   ........           LDR      R0,??DataTable15  ;; CurrentDeviceId
   \   000000AC   F000D0E1           LDRSH    R0,[R0, #+0]
   \   000000B0   300050E3           CMP      R0,#+48
   \   000000B4   0100001A           BNE      ??SaveSettingsTask_6
     65              case DEVICE_TDU:
     66                  TDUBasicWin::RepaintAll();
   \   000000B8   ........           _BLF     ??RepaintAll,??RepaintAll??rA
     67                  TDUBasicWin::NewLanguage();
   \   000000BC   ........           _BLF     ??NewLanguage,??NewLanguage??rA
     68                  break;
     69              default:
     70              case DEVICE_TCU:
     71                  break;
     72              }
     73          #ifdef S2TXU
     74              OS_Delay(60 * 1000);
   \                     ??SaveSettingsTask_6:
   \   000000C0   6080A0E3           MOV      R8,#+96
   \   000000C4   EA8C88E3           ORR      R8,R8,#0xEA00
   \   000000C8   0800A0E1           MOV      R0,R8
   \   000000CC   ........           _BLF     OS_Delay,??OS_Delay??rA
   \   000000D0   0290A0E3           MOV      R9,#+2
     75              while ( 1 ) {
     76                  // First we wait for user input
     77                  volatile char Status = OS_WaitEvent(FLASH_SAVE_SETTINGS);
   \                     ??SaveSettingsTask_7:
   \   000000D4   0100A0E3           MOV      R0,#+1
   \   000000D8   ........           _BLF     OS_WaitEvent,??OS_WaitEvent??rA
   \   000000DC   0000CDE5           STRB     R0,[SP, #+0]
     78                  do {
     79                      Status = OS_WaitSingleEventTimed(FLASH_SAVE_SETTINGS, 60000);    //Shall be 60000 EHSMark
   \                     ??SaveSettingsTask_8:
   \   000000E0   0810A0E1           MOV      R1,R8
   \   000000E4   0100A0E3           MOV      R0,#+1
   \   000000E8   ........           _BLF     OS_WaitSingleEventTimed,??OS_WaitSingleEventTimed??rA
   \   000000EC   0000CDE5           STRB     R0,[SP, #+0]
     80                  }while ( Status );
   \   000000F0   0000DDE5           LDRB     R0,[SP, #+0]
   \   000000F4   000050E3           CMP      R0,#+0
   \   000000F8   F8FFFF1A           BNE      ??SaveSettingsTask_8
     81          
     82                  FlashErrorStatus = WD_SETTINGS_WRITE;
   \   000000FC   009084E5           STR      R9,[R4, #+0]
     83                  PRogramObjectBase::WriteAll = true;
   \   00000100   0060C7E5           STRB     R6,[R7, #+0]
     84                  {
     85                      TSNSaveSettings SaveSettings;
   \   00000104   04008DE2           ADD      R0,SP,#+4
   \   00000108   ........           _BLF     ??TSNSaveSettings,??TSNSaveSettings??rA
     86                      SaveSettings.WriteToFile();
   \   0000010C   04008DE2           ADD      R0,SP,#+4
   \   00000110   ........           _BLF     ??WriteToFile,??WriteToFile??rA
     87                  }
   \   00000114   04008DE2           ADD      R0,SP,#+4
   \   00000118   ........           _BLF     `?~TSNSaveSettings`,`?~TSNSaveSettings??rA`
     88                  FlashErrorStatus = WD_SETTINGS_OK;
   \   0000011C   005084E5           STR      R5,[R4, #+0]
   \   00000120   EBFFFFEA           B        ??SaveSettingsTask_7
   \                     ??SaveSettingsTask_1:
   \   00000124   ........           DC32     ??WriteAll
   \   00000128   ........           DC32     tStartTxuTask
   \   0000012C   ........           DC32     StartTxuTaskStack
   \   00000130   ........           DC32     RestoreSettingsWarningsString
     89              }
     90          #else
     91              while ( 1 ) {
     92                  TSN_Delay(1 * 60 * 1000);
     93                  TSNSaveSettings *SaveSettings = new TSNSaveSettings();
     94                  SaveSettings->WriteToFile();
     95                  delete SaveSettings;
     96              }
     97          #endif
     98          }
     99          #endif
    100          /*******************************************************************
    101          *       SaveConfigTask
    102          */
    103          TSN_TASK SaveConfigTaskHandle;                                                   /* Task control blocks */
    104          int SaveConfigTaskStack[4*1024];

   \                                 In segment CODE, align 4, keep-with-next
    105          static void SaveConfigTask(void) {
   \                     ??SaveConfigTask:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   04D04DE2           SUB      SP,SP,#+4
    106          #ifdef S2TXU
    107              volatile char Status = OS_WaitEvent(FLASH_WRITE_CONFIG_DELAY | FLASH_WRITE_CONFIG_NO_DELAY);
   \   00000008   0300A0E3           MOV      R0,#+3
   \   0000000C   ........           _BLF     OS_WaitEvent,??OS_WaitEvent??rA
   \   00000010   0000CDE5           STRB     R0,[SP, #+0]
    108              if ( Status == FLASH_WRITE_CONFIG_DELAY ) {
   \   00000014   0000DDE5           LDRB     R0,[SP, #+0]
   \   00000018   010050E3           CMP      R0,#+1
   \   0000001C   0700001A           BNE      ??SaveConfigTask_1
    109                  do {
    110                      Status = OS_WaitSingleEventTimed(FLASH_WRITE_CONFIG_DELAY, 600000);  //Shall be 600000 (10 minutes) EHSMark
   \                     ??SaveConfigTask_2:
   \   00000020   901AA0E3           MOV      R1,#+589824
   \   00000024   9F1D81E3           ORR      R1,R1,#0x27C0
   \   00000028   0100A0E3           MOV      R0,#+1
   \   0000002C   ........           _BLF     OS_WaitSingleEventTimed,??OS_WaitSingleEventTimed??rA
   \   00000030   0000CDE5           STRB     R0,[SP, #+0]
    111                  }while ( Status == FLASH_WRITE_CONFIG_DELAY );
   \   00000034   0000DDE5           LDRB     R0,[SP, #+0]
   \   00000038   010050E3           CMP      R0,#+1
   \   0000003C   F7FFFF0A           BEQ      ??SaveConfigTask_2
    112              }
    113          
    114              if ( PROSystemData::HasConfigWritePermission || TSNConfigInfo::HasConfigWritePermission ) {
   \                     ??SaveConfigTask_1:
   \   00000040   48009FE5           LDR      R0,??SaveConfigTask_3  ;; ??HasConfigWritePermission
   \   00000044   0000D0E5           LDRB     R0,[R0, #+0]
   \   00000048   000050E3           CMP      R0,#+0
   \   0000004C   0300001A           BNE      ??SaveConfigTask_4
   \   00000050   3C009FE5           LDR      R0,??SaveConfigTask_3+0x4  ;; ??HasConfigWritePermission_1
   \   00000054   0000D0E5           LDRB     R0,[R0, #+0]
   \   00000058   000050E3           CMP      R0,#+0
   \   0000005C   0900000A           BEQ      ??SaveConfigTask_5
    115                  FlashErrorStatus = WD_CONFIG_WRITE;
   \                     ??SaveConfigTask_4:
   \   00000060   ........           LDR      R4,??DataTable4  ;; 0x31fff018
    116                  WriteConfigToFile("Config.txt");
   \   00000064   2C509FE5           LDR      R5,??SaveConfigTask_3+0x8  ;; `?<Constant "Config.txt">`
   \   00000068   0300A0E3           MOV      R0,#+3
   \   0000006C   000084E5           STR      R0,[R4, #+0]
   \   00000070   0500A0E1           MOV      R0,R5
   \   00000074   ........           _BLF     ??WriteConfigToFile,??WriteConfigToFile??rA
    117                  FlashErrorStatus = WD_SETTINGS_OK;
   \   00000078   0000A0E3           MOV      R0,#+0
   \   0000007C   000084E5           STR      R0,[R4, #+0]
    118                  RestartIncMsg("New Config");
   \   00000080   0C0085E2           ADD      R0,R5,#+12
   \   00000084   ........           _BLF     RestartIncMsg,??RestartIncMsg??rA
    119              }
    120          #endif
    121          }
   \                     ??SaveConfigTask_5:
   \   00000088   3140BDE8           POP      {R0,R4,R5,LR}
   \   0000008C   1EFF2FE1           BX       LR               ;; return
   \                     ??SaveConfigTask_3:
   \   00000090   ........           DC32     ??HasConfigWritePermission
   \   00000094   ........           DC32     ??HasConfigWritePermission_1
   \   00000098   ........           DC32     `?<Constant "Config.txt">`
    122          
    123          
    124          /********************************************************************
    125          *
    126          *   External Alarm silence task
    127          *
    128          **********************************************************************/
    129          
    130          TSN_STACKPTR int ExternalAlarmSilenceStack[256];

   \                                 In segment CODE, align 4, keep-with-next
    131          void ExternalAlarmSilenceTask(void) {
   \                     ??ExternalAlarmSilenceTask:
   \   00000000   10402DE9           PUSH     {R4,LR}
    132          #ifdef S2TXU
    133              int orgVal = rGPFDAT & (1 << INTOFF_SILENCE);
   \   00000004   5400A0E3           MOV      R0,#+84
   \   00000008   560480E3           ORR      R0,R0,#0x56000000
   \   0000000C   000090E5           LDR      R0,[R0, #+0]
   \   00000010   104000E2           AND      R4,R0,#0x10
    134              char Status = OS_WaitSingleEvent(EXTERNAL_ALARM_SILENCE);
   \   00000014   0100A0E3           MOV      R0,#+1
   \   00000018   ........           _BLF     OS_WaitSingleEvent,??OS_WaitSingleEvent??rA
    135              switch ( Status ) {
   \   0000001C   010050E3           CMP      R0,#+1
   \   00000020   0700001A           BNE      ??ExternalAlarmSilenceTask_1
    136              case EXTERNAL_ALARM_SILENCE:
    137                  {
    138                      int tmpReg = rGPFDAT & (1 << INTOFF_SILENCE);
   \   00000024   5400A0E3           MOV      R0,#+84
   \   00000028   560480E3           ORR      R0,R0,#0x56000000
   \   0000002C   000090E5           LDR      R0,[R0, #+0]
   \   00000030   100000E2           AND      R0,R0,#0x10
    139                      if ( orgVal != tmpReg ) {
   \   00000034   000054E1           CMP      R4,R0
    140                          orgVal = tmpReg;
    141                          if ( orgVal ) {
   \   00000038   00005013           CMPNE    R0,#+0
   \   0000003C   0000000A           BEQ      ??ExternalAlarmSilenceTask_1
    142                              SendAlarmSilence();
   \   00000040   ........           _BLF     ??SendAlarmSilence,??SendAlarmSilence??rA
    143                          }
    144                      }
    145                  }
    146                  break;
    147              default:
    148                  break;
    149              }
    150          #endif
    151          }
   \                     ??ExternalAlarmSilenceTask_1:
   \   00000044   1040BDE8           POP      {R4,LR}
   \   00000048   1EFF2FE1           BX       LR               ;; return
    152          
    153          
    154          
    155          /********************************************************************
    156          *
    157          *   Log task
    158          *
    159          **********************************************************************/

   \                                 In segment CODE, align 4, keep-with-next
    160          void MakeLog(int ReportId) {
   \                     ??MakeLog:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   0040A0E1           MOV      R4,R0
    161              PROPrinter *Prn = PROPrinter::FindPrinter(PROPrinter::LogPrinterId);
   \   00000008   68009FE5           LDR      R0,??MakeLog_1   ;; ??LogPrinterId
   \   0000000C   1CD04DE2           SUB      SP,SP,#+28
   \   00000010   000090E5           LDR      R0,[R0, #+0]
   \   00000014   ........           _BLF     ??FindPrinter,??FindPrinter??rA
   \   00000018   0050B0E1           MOVS     R5,R0
    162              if ( Prn ) {
   \   0000001C   1200000A           BEQ      ??MakeLog_2
    163                  AnsiString Report;
   \   00000020   0D00A0E1           MOV      R0,SP
   \   00000024   ........           _BLF     ??AnsiString,??AnsiString??rA
    164                  MakeReport(ReportId, Report);
   \   00000028   0D10A0E1           MOV      R1,SP
   \   0000002C   0400A0E1           MOV      R0,R4
   \   00000030   ........           _BLF     ??MakeReport,??MakeReport??rA
    165                  if ( !Report.IsEmpty() ) {
   \   00000034   0D00A0E1           MOV      R0,SP
   \   00000038   ........           _BLF     ??IsEmpty,??IsEmpty??rA
   \   0000003C   000050E3           CMP      R0,#+0
   \   00000040   0500001A           BNE      ??MakeLog_3
    166                      Prn->Print((char *)Report.c_str());
   \   00000044   18009DE5           LDR      R0,[SP, #+24]
   \   00000048   100050E3           CMP      R0,#+16
   \   0000004C   04109D25           LDRCS    R1,[SP, #+4]
   \   00000050   0500A0E1           MOV      R0,R5
   \   00000054   04108D32           ADDCC    R1,SP,#+4
   \   00000058   ........           _BLF     ??Print,??Print??rA
    167                  }
    168              }
   \                     ??MakeLog_3:
   \   0000005C   0020A0E3           MOV      R2,#+0
   \   00000060   0110A0E3           MOV      R1,#+1
   \   00000064   0D00A0E1           MOV      R0,SP
   \   00000068   ........           _BLF     ??_Tidy,??_Tidy??rA
    169          }
   \                     ??MakeLog_2:
   \   0000006C   1CD08DE2           ADD      SP,SP,#+28
   \   00000070   3040BDE8           POP      {R4,R5,LR}
   \   00000074   1EFF2FE1           BX       LR               ;; return
   \                     ??MakeLog_1:
   \   00000078   ........           DC32     ??LogPrinterId
    170          
    171          TSN_TASK LogTaskHandle;                                                  /* Task control blocks */
    172          int LogTaskStack[4*1024];

   \                                 In segment CODE, align 4, keep-with-next
    173          static void LogTask(void) {
   \                     ??LogTask:
   \   00000000   F0402DE9           PUSH     {R4-R7,LR}
    174              TSN_Delay(MIN_TO_MSEC);
   \   00000004   78409FE5           LDR      R4,??LogTask_1   ;; ??LogTankPressure
   \   00000008   78509FE5           LDR      R5,??LogTask_1+0x4  ;; ??LogTemperature
   \   0000000C   78609FE5           LDR      R6,??LogTask_1+0x8  ;; ??LogService
   \   00000010   78709FE5           LDR      R7,??LogTask_1+0xC  ;; ??LogCargo
   \   00000014   6000A0E3           MOV      R0,#+96
   \   00000018   EA0C80E3           ORR      R0,R0,#0xEA00
   \                     ??LogTask_2:
   \   0000001C   ........           _BLF     OS_Delay,??OS_Delay??rA
    175              FOREVER{
    176                  if ( PROSystemData::LogBallastExchange ) {
    177                      // To be handled different
    178                  }
    179                  if ( PROSystemData::LogCargo ) {
   \   00000020   0000D7E5           LDRB     R0,[R7, #+0]
   \   00000024   000050E3           CMP      R0,#+0
   \   00000028   0100000A           BEQ      ??LogTask_3
    180                      MakeLog(REPORT_CARGO);
   \   0000002C   0100A0E3           MOV      R0,#+1
   \   00000030   ........           BL       ??MakeLog
    181                  }
    182                  if ( PROSystemData::LogService ) {
   \                     ??LogTask_3:
   \   00000034   0000D6E5           LDRB     R0,[R6, #+0]
   \   00000038   000050E3           CMP      R0,#+0
   \   0000003C   0100000A           BEQ      ??LogTask_4
    183                      MakeLog(REPORT_SERVICE);
   \   00000040   0200A0E3           MOV      R0,#+2
   \   00000044   ........           BL       ??MakeLog
    184                  }
    185                  if ( PROSystemData::LogTemperature ) {
   \                     ??LogTask_4:
   \   00000048   0000D5E5           LDRB     R0,[R5, #+0]
   \   0000004C   000050E3           CMP      R0,#+0
   \   00000050   0100000A           BEQ      ??LogTask_5
    186                      MakeLog(REPORT_TEMPERATURE);
   \   00000054   0300A0E3           MOV      R0,#+3
   \   00000058   ........           BL       ??MakeLog
    187                  }
    188                  if ( PROSystemData::LogTankPressure ) {
   \                     ??LogTask_5:
   \   0000005C   0000D4E5           LDRB     R0,[R4, #+0]
   \   00000060   000050E3           CMP      R0,#+0
   \   00000064   0100000A           BEQ      ??LogTask_6
    189                      MakeLog(REPORT_T_PRESSURE);
   \   00000068   0400A0E3           MOV      R0,#+4
   \   0000006C   ........           BL       ??MakeLog
    190                  }
    191                  if ( !PROSystemData::LogTime ) {
   \                     ??LogTask_6:
   \   00000070   1C009FE5           LDR      R0,??LogTask_1+0x10  ;; ??LogTime
   \   00000074   000090E5           LDR      R0,[R0, #+0]
   \   00000078   000050E3           CMP      R0,#+0
   \   0000007C   14009F05           LDREQ    R0,??LogTask_1+0x14  ;; 0x5265c00
    192                      TSN_Delay(MSEC_TO_SEC * SEC_TO_DAYS); // Default to log every 24 hour if 0
    193                  } else {
    194                      TSN_Delay(PROSystemData::LogTime);
   \   00000080   E5FFFFEA           B        ??LogTask_2
   \                     ??LogTask_1:
   \   00000084   ........           DC32     ??LogTankPressure
   \   00000088   ........           DC32     ??LogTemperature
   \   0000008C   ........           DC32     ??LogService
   \   00000090   ........           DC32     ??LogCargo
   \   00000094   ........           DC32     ??LogTime
   \   00000098   005C2605           DC32     0x5265c00
    195                  }
    196              }
    197          }
    198          
    199          
    200          /*******************************************************************
    201          *       AlarmWindowTask
    202          */

   \                                 In segment CODE, align 4, keep-with-next
    203          static void AlarmWindowTask(void) {
   \                     ??AlarmWindowTask:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   ........           LDR      R4,??DataTable24  ;; PhysKeyPressed
   \   00000008   120000EA           B        ??AlarmWindowTask_1
    204              while ( true ) {
    205                  TSN_Delay(1000);
    206                  if ( AlarmWindow ) {
    207                      AlarmWindow->PWTimer();
    208                  } else if ( (CurrentWinID == TDU_WATERINGR_WIN) && WaterIngrWindow ) {
   \                     ??AlarmWindowTask_2:
   \   0000000C   ........           LDR      R0,??DataTable6  ;; CurrentWinID
   \   00000010   7710A0E3           MOV      R1,#+119
   \   00000014   000090E5           LDR      R0,[R0, #+0]
   \   00000018   801E81E3           ORR      R1,R1,#0x800
   \   0000001C   010050E1           CMP      R0,R1
   \   00000020   0400001A           BNE      ??AlarmWindowTask_3
   \   00000024   ........           LDR      R0,??DataTable26  ;; WaterIngrWindow
   \   00000028   000090E5           LDR      R0,[R0, #+0]
   \   0000002C   000050E3           CMP      R0,#+0
   \   00000030   0000000A           BEQ      ??AlarmWindowTask_3
    209                      WaterIngrWindow->PWTimer();
   \   00000034   ........           _BLF     ??PWTimer,??PWTimer??rA
    210                  }
    211                  if ( PhysKeyPressed & TOUCH_ALARMWIN_FLAG ) {
   \                     ??AlarmWindowTask_3:
   \   00000038   0000D4E5           LDRB     R0,[R4, #+0]
   \   0000003C   020010E3           TST      R0,#0x2
   \   00000040   0400000A           BEQ      ??AlarmWindowTask_1
    212                      PhysKeyPressed &= ~TOUCH_ALARMWIN_FLAG;
   \   00000044   0000D4E5           LDRB     R0,[R4, #+0]
   \   00000048   FD0000E2           AND      R0,R0,#0xFD
   \   0000004C   0000C4E5           STRB     R0,[R4, #+0]
    213                      TSN_Delay(25);
   \   00000050   1900A0E3           MOV      R0,#+25
   \   00000054   ........           _BLF     OS_Delay,??OS_Delay??rA
    214                  }
   \                     ??AlarmWindowTask_1:
   \   00000058   FA0FA0E3           MOV      R0,#+1000
   \   0000005C   ........           _BLF     OS_Delay,??OS_Delay??rA
   \   00000060   10009FE5           LDR      R0,??AlarmWindowTask_4  ;; AlarmWindow
   \   00000064   000090E5           LDR      R0,[R0, #+0]
   \   00000068   000050E3           CMP      R0,#+0
   \   0000006C   E6FFFF0A           BEQ      ??AlarmWindowTask_2
   \   00000070   ........           _BLF     ??PWTimer_1,??PWTimer??rA_1
   \   00000074   EFFFFFEA           B        ??AlarmWindowTask_3
   \                     ??AlarmWindowTask_4:
   \   00000078   ........           DC32     AlarmWindow
    215              }
    216          }
    217          
    218          /*******************************************************************
    219          *       AlarmTask
    220          */

   \                                 In segment CODE, align 4, keep-with-next
    221          static void AlarmTask(void) {
   \                     ??AlarmTask:
   \   00000000   E0432DE9           PUSH     {R5-R9,LR}
    222              bool TypeAlarmButton = true;
    223              int LastAlarm = AlarmBasic::AlIdle;
   \   00000004   08519FE5           LDR      R5,??AlarmTask_1  ;; ??PROActiveAlarmList
   \   00000008   ........           LDR      R8,??DataTable21  ;; MainWindow
   \   0000000C   0170A0E3           MOV      R7,#+1
   \   00000010   0060A0E3           MOV      R6,#+0
   \   00000014   FF94E0E3           MVN      R9,#-16777216
   \   00000018   0B0000EA           B        ??AlarmTask_2
    224              while ( 1 ) {
    225                  if ( !AlarmBasic::PROActiveAlarmList.isEmpty() ) {
    226                      LastAlarm = AlarmBasic::AlActive;
    227                      if ( TypeAlarmButton ) {
    228                          BUTTON_SetBkColor(MainWindow->ButtonAlarm, 0, TDU_C_AL_BACK_ACTIVE);
   \                     ??AlarmTask_3:
   \   0000001C   FF20A0E3           MOV      R2,#+255
   \   00000020   0010A0E3           MOV      R1,#+0
   \   00000024   ........           _BLF     BUTTON_SetBkColor,??BUTTON_SetBkColor??rA
    229                          BUTTON_SetTextColor(MainWindow->ButtonAlarm, 0, TDU_C_AL_TEXT_ACTIVE);
   \   00000028   000098E5           LDR      R0,[R8, #+0]
   \   0000002C   0920A0E1           MOV      R2,R9
   \   00000030   F005D0E1           LDRSH    R0,[R0, #+80]
   \   00000034   0010A0E3           MOV      R1,#+0
    230                          TSN_Delay(750);
    231                          TypeAlarmButton = false;
   \   00000038   0070A0E3           MOV      R7,#+0
   \   0000003C   ........           _BLF     BUTTON_SetTextColor,??BUTTON_SetTextColor??rA
   \   00000040   EE00A0E3           MOV      R0,#+238
   \   00000044   800F80E3           ORR      R0,R0,#0x200
   \                     ??AlarmTask_4:
   \   00000048   ........           _BLF     OS_Delay,??OS_Delay??rA
    232                      } else {
   \                     ??AlarmTask_2:
   \   0000004C   0500A0E1           MOV      R0,R5
   \   00000050   ........           _BLF     ??isEmpty,??isEmpty??rA
   \   00000054   000050E3           CMP      R0,#+0
   \   00000058   0F00001A           BNE      ??AlarmTask_5
   \   0000005C   000098E5           LDR      R0,[R8, #+0]
   \   00000060   0160A0E3           MOV      R6,#+1
   \   00000064   F005D0E1           LDRSH    R0,[R0, #+80]
   \   00000068   000057E3           CMP      R7,#+0
   \   0000006C   EAFFFF1A           BNE      ??AlarmTask_3
    233                          BUTTON_SetBkColor(MainWindow->ButtonAlarm, 0, TDU_C_AL_TEXT_ACTIVE);
   \   00000070   0920A0E1           MOV      R2,R9
   \   00000074   0010A0E3           MOV      R1,#+0
   \   00000078   ........           _BLF     BUTTON_SetBkColor,??BUTTON_SetBkColor??rA
    234                          BUTTON_SetTextColor(MainWindow->ButtonAlarm, 0, TDU_C_AL_BACK_ACTIVE);
   \   0000007C   000098E5           LDR      R0,[R8, #+0]
   \   00000080   FF20A0E3           MOV      R2,#+255
   \   00000084   F005D0E1           LDRSH    R0,[R0, #+80]
   \   00000088   0010A0E3           MOV      R1,#+0
    235                          TSN_Delay(250);
    236                          TypeAlarmButton = true;
   \   0000008C   0170A0E3           MOV      R7,#+1
   \   00000090   ........           _BLF     BUTTON_SetTextColor,??BUTTON_SetTextColor??rA
   \   00000094   FA00A0E3           MOV      R0,#+250
   \   00000098   EAFFFFEA           B        ??AlarmTask_4
    237                      }
    238                  } else if ( !AlarmBasic::PROAcknowAlarmList.isEmpty() ) {
   \                     ??AlarmTask_5:
   \   0000009C   74009FE5           LDR      R0,??AlarmTask_1+0x4  ;; ??PROAcknowAlarmList
   \   000000A0   ........           _BLF     ??isEmpty,??isEmpty??rA
   \   000000A4   000050E3           CMP      R0,#+0
   \   000000A8   0E00001A           BNE      ??AlarmTask_6
    239                      if ( LastAlarm == AlarmBasic::AlAknowledged ) {} else {
   \   000000AC   020056E3           CMP      R6,#+2
   \   000000B0   0A00000A           BEQ      ??AlarmTask_7
    240                          LastAlarm = AlarmBasic::AlAknowledged;
    241                          BUTTON_SetBkColor(MainWindow->ButtonAlarm, 0, TDU_C_AL_BACK_ACTIVE);
   \   000000B4   000098E5           LDR      R0,[R8, #+0]
   \   000000B8   0260A0E3           MOV      R6,#+2
   \   000000BC   F005D0E1           LDRSH    R0,[R0, #+80]
   \   000000C0   FF20A0E3           MOV      R2,#+255
   \   000000C4   0010A0E3           MOV      R1,#+0
   \   000000C8   ........           _BLF     BUTTON_SetBkColor,??BUTTON_SetBkColor??rA
    242                          BUTTON_SetTextColor(MainWindow->ButtonAlarm, 0, TDU_C_AL_TEXT_ACTIVE);
   \   000000CC   0920A0E1           MOV      R2,R9
   \   000000D0   0010A0E3           MOV      R1,#+0
   \                     ??AlarmTask_8:
   \   000000D4   000098E5           LDR      R0,[R8, #+0]
   \   000000D8   F005D0E1           LDRSH    R0,[R0, #+80]
   \   000000DC   ........           _BLF     BUTTON_SetTextColor,??BUTTON_SetTextColor??rA
    243                      }
    244                      TSN_Delay(1000);
   \                     ??AlarmTask_7:
   \   000000E0   FA0FA0E3           MOV      R0,#+1000
   \   000000E4   D7FFFFEA           B        ??AlarmTask_4
    245                  } else {
    246                      if ( LastAlarm == AlarmBasic::AlIdle ) {} else {
   \                     ??AlarmTask_6:
   \   000000E8   000056E3           CMP      R6,#+0
   \   000000EC   FBFFFF0A           BEQ      ??AlarmTask_7
    247                          LastAlarm = AlarmBasic::AlIdle;
    248                          BUTTON_SetBkColor(MainWindow->ButtonAlarm, 0, TDU_C_AL_BACK_NOAL);
   \   000000F0   000098E5           LDR      R0,[R8, #+0]
   \   000000F4   0060A0E3           MOV      R6,#+0
   \   000000F8   F005D0E1           LDRSH    R0,[R0, #+80]
   \   000000FC   AA2CA0E3           MOV      R2,#+43520
   \   00000100   0010A0E3           MOV      R1,#+0
   \   00000104   ........           _BLF     BUTTON_SetBkColor,??BUTTON_SetBkColor??rA
    249                          BUTTON_SetTextColor(MainWindow->ButtonAlarm, 0, TDU_C_AL_TEXT_NOAL);
   \   00000108   0920A0E1           MOV      R2,R9
   \   0000010C   0610A0E1           MOV      R1,R6
   \   00000110   EFFFFFEA           B        ??AlarmTask_8
   \                     ??AlarmTask_1:
   \   00000114   ........           DC32     ??PROActiveAlarmList
   \   00000118   ........           DC32     ??PROAcknowAlarmList
    250                      }
    251                      TSN_Delay(1000);
    252                  }
    253              }
    254          }
    255          
    256          
    257          /*******************************************************************
    258          *       Releay task
    259          */
    260          #ifndef WIN32
    261          TSN_MAILBOX DutyMsgBuf[NUMBER_OF_RELAY_TASKS];

   \                                 In segment CODE, align 4, keep-with-next
    262          void DutyTask(void *MyNumberPtr){
    263              int MyNumber = (int)MyNumberPtr;
    264              char MyBit = 1 << MyNumber;
    265              TSN_MAILBOX *MyMsgBuf = &DutyMsgBuf[MyNumber];
   \                     ??DutyTask:
   \   00000000   ........           LDR      R2,??DataTable11  ;; DutyMsgBuf
   \   00000004   F0412DE9           PUSH     {R4-R8,LR}
    266              DutyStruct MyMessage;
    267              OS_GetMail(MyMsgBuf,&MyMessage);
   \   00000008   0C719FE5           LDR      R7,??DutyTask_1  ;; GPEPortSema
   \   0000000C   0CD04DE2           SUB      SP,SP,#+12
   \   00000010   0110A0E3           MOV      R1,#+1
   \   00000014   1140A0E1           LSL      R4,R1,R0
   \   00000018   FF4004E2           AND      R4,R4,#0xFF
   \   0000001C   1810A0E3           MOV      R1,#+24
   \   00000020   912025E0           MLA      R5,R1,R0,R2
   \   00000024   0D10A0E1           MOV      R1,SP
   \   00000028   0500A0E1           MOV      R0,R5
   \   0000002C   ........           _BLF     OS_GetMail,??OS_GetMail??rA
   \   00000030   4460A0E3           MOV      R6,#+68
   \   00000034   566486E3           ORR      R6,R6,#0x56000000
   \   00000038   090000EA           B        ??DutyTask_2
    268              while ( 1 ) {
    269                  switch ( MyMessage.Command ) {
    270                      case RELAY_MSG_OFF      :
    271                      OS_Use(&GPEPortSema);
   \                     ??DutyTask_3:
   \   0000003C   0700A0E1           MOV      R0,R7
   \   00000040   ........           _BLF     OS_Use,??OS_Use??rA
    272                      rGPEDAT  &= ~MyBit;
   \   00000044   000096E5           LDR      R0,[R6, #+0]
   \   00000048   000008E0           AND      R0,R8,R0
   \                     ??DutyTask_4:
   \   0000004C   000086E5           STR      R0,[R6, #+0]
    273                      OS_Unuse(&GPEPortSema);
   \   00000050   0700A0E1           MOV      R0,R7
   \   00000054   ........           _BLF     OS_Unuse,??OS_Unuse??rA
    274                      OS_GetMail(MyMsgBuf,&MyMessage);
   \   00000058   0D10A0E1           MOV      R1,SP
   \   0000005C   0500A0E1           MOV      R0,R5
   \   00000060   ........           _BLF     OS_GetMail,??OS_GetMail??rA
   \                     ??DutyTask_2:
   \   00000064   0000DDE5           LDRB     R0,[SP, #+0]
   \   00000068   0480E0E1           MVN      R8,R4
   \   0000006C   000050E3           CMP      R0,#+0
   \   00000070   F1FFFF0A           BEQ      ??DutyTask_3
   \   00000074   010050E2           SUBS     R0,R0,#+1
   \   00000078   0400000A           BEQ      ??DutyTask_5
   \   0000007C   010050E2           SUBS     R0,R0,#+1
   \   00000080   0700000A           BEQ      ??DutyTask_6
   \   00000084   010050E2           SUBS     R0,R0,#+1
   \   00000088   2000000A           BEQ      ??DutyTask_7
   \   0000008C   F4FFFFEA           B        ??DutyTask_2
    275                      break;
    276                      case RELAY_MSG_ON       :
    277                      OS_Use(&GPEPortSema);
   \                     ??DutyTask_5:
   \   00000090   0700A0E1           MOV      R0,R7
   \   00000094   ........           _BLF     OS_Use,??OS_Use??rA
    278                      rGPEDAT  |= MyBit;
   \   00000098   000096E5           LDR      R0,[R6, #+0]
   \   0000009C   000084E1           ORR      R0,R4,R0
   \   000000A0   E9FFFFEA           B        ??DutyTask_4
    279                      OS_Unuse(&GPEPortSema);
    280                      OS_GetMail(MyMsgBuf,&MyMessage);
    281                      break;
    282                      case RELAY_MSG_FREQUENCY:
    283                      {
    284                          char NoMessage;
    285                          do {
    286                              OS_Use(&GPEPortSema);
   \                     ??DutyTask_6:
   \   000000A4   0700A0E1           MOV      R0,R7
   \   000000A8   ........           _BLF     OS_Use,??OS_Use??rA
    287                              rGPEDAT |= MyBit;
   \   000000AC   000096E5           LDR      R0,[R6, #+0]
   \   000000B0   000084E1           ORR      R0,R4,R0
   \   000000B4   000086E5           STR      R0,[R6, #+0]
    288                              OS_Unuse(&GPEPortSema);
   \   000000B8   0700A0E1           MOV      R0,R7
   \   000000BC   ........           _BLF     OS_Unuse,??OS_Unuse??rA
    289                              NoMessage = OS_GetMailTimed(MyMsgBuf,&MyMessage,MyMessage.TimeOn);
   \   000000C0   04209DE5           LDR      R2,[SP, #+4]
   \   000000C4   0D10A0E1           MOV      R1,SP
   \   000000C8   0500A0E1           MOV      R0,R5
   \   000000CC   ........           _BLF     OS_GetMailTimed,??OS_GetMailTimed??rA
    290                              if ( NoMessage ) {
   \   000000D0   0010B0E1           MOVS     R1,R0
   \   000000D4   0A00000A           BEQ      ??DutyTask_8
    291                                  OS_Use(&GPEPortSema);
   \   000000D8   0700A0E1           MOV      R0,R7
   \   000000DC   ........           _BLF     OS_Use,??OS_Use??rA
    292                                  rGPEDAT  &= ~MyBit;
   \   000000E0   000096E5           LDR      R0,[R6, #+0]
   \   000000E4   000008E0           AND      R0,R8,R0
   \   000000E8   000086E5           STR      R0,[R6, #+0]
    293                                  OS_Unuse(&GPEPortSema);
   \   000000EC   0700A0E1           MOV      R0,R7
   \   000000F0   ........           _BLF     OS_Unuse,??OS_Unuse??rA
    294                                  NoMessage = OS_GetMailTimed(MyMsgBuf,&MyMessage,MyMessage.TimeOff);
   \   000000F4   08209DE5           LDR      R2,[SP, #+8]
   \   000000F8   0D10A0E1           MOV      R1,SP
   \   000000FC   0500A0E1           MOV      R0,R5
   \   00000100   ........           _BLF     OS_GetMailTimed,??OS_GetMailTimed??rA
    295                              }
    296                          }while ( NoMessage );
   \                     ??DutyTask_8:
   \   00000104   000050E3           CMP      R0,#+0
   \   00000108   E5FFFF1A           BNE      ??DutyTask_6
   \   0000010C   D4FFFFEA           B        ??DutyTask_2
    297                      }
    298                      break;
    299                      case RELAY_MSG_DELAYED  :
    300                      OS_Delay(MyMessage.TimeOn);
   \                     ??DutyTask_7:
   \   00000110   04009DE5           LDR      R0,[SP, #+4]
   \   00000114   ........           _BLF     OS_Delay,??OS_Delay??rA
    301                      OS_Use(&GPEPortSema);
   \   00000118   DCFFFFEA           B        ??DutyTask_5
   \                     ??DutyTask_1:
   \   0000011C   ........           DC32     GPEPortSema
    302                      rGPEDAT  |= MyBit;
    303                      OS_Unuse(&GPEPortSema);
    304                      OS_GetMail(MyMsgBuf,&MyMessage);
    305                      break;
    306                  }
    307              }
    308          }
    309          static TSN_TASK tDutyTask[NUMBER_OF_RELAY_TASKS];        /* Task control blocks */
    310          

   \                                 In segment CODE, align 4, keep-with-next
    311          void StartRelayTasks(void){
    312          #ifdef S2TXU
    313              static TSN_STACKPTR int tDutyTaskStack[NUMBER_OF_RELAY_TASKS][2*256];
    314              const char *TaskName[NUMBER_OF_RELAY_TASKS] = {
    315                  "BuzzerRelayTask",
    316                  "LightRelayTask" ,
    317                  "LampRelayTask"  ,
    318                  "HornRelayTask"  ,
    319                  "RelayTask 1"    ,
    320                  "RelayTask 2"    ,
    321              };
   \                     ??StartRelayTasks:
   \   00000000   30119FE5           LDR      R1,??StartRelayTasks_1  ;; `?<Constant {&"BuzzerRelayTask", &"LightRelayTa`
   \   00000004   F0402DE9           PUSH     {R4-R7,LR}
   \   00000008   18D04DE2           SUB      SP,SP,#+24
   \   0000000C   FC0091E8           LDM      R1,{R2-R7}
   \   00000010   0D00A0E1           MOV      R0,SP
   \   00000014   FC0080E8           STM      R0,{R2-R7}
    322              switch ( CurrentDeviceId ) {
   \   00000018   ........           LDR      R0,??DataTable15  ;; CurrentDeviceId
   \   0000001C   18419FE5           LDR      R4,??StartRelayTasks_1+0x4  ;; ??DutyTask
   \   00000020   F000D0E1           LDRSH    R0,[R0, #+0]
   \   00000024   ........           LDR      R6,??DataTable11  ;; DutyMsgBuf
   \   00000028   845FA0E3           MOV      R5,#+528
   \   0000002C   200050E2           SUBS     R0,R0,#+32
   \   00000030   0200000A           BEQ      ??StartRelayTasks_2
   \   00000034   100050E2           SUBS     R0,R0,#+16
   \   00000038   1E00000A           BEQ      ??StartRelayTasks_3
   \   0000003C   3A0000EA           B        ??StartRelayTasks_4
    323                  case DEVICE_TCU:
    324                  for ( int i=0; i < NUMBER_OF_RELAY_TASKS; i++ ) {
   \                     ??StartRelayTasks_2:
   \   00000040   0070A0E3           MOV      R7,#+0
    325                      char* TxBufPtr=(char*)malloc(2*sizeof(DutyStruct));
   \                     ??StartRelayTasks_5:
   \   00000044   1800A0E3           MOV      R0,#+24
   \   00000048   ........           _BLF     __data_malloc,??__data_malloc??rA
    326                      OS_CreateMB(&DutyMsgBuf[i],sizeof(DutyStruct),2,TxBufPtr);
   \   0000004C   0030A0E1           MOV      R3,R0
   \   00000050   0220A0E3           MOV      R2,#+2
   \   00000054   0C10A0E3           MOV      R1,#+12
   \   00000058   18C0A0E3           MOV      R12,#+24
   \   0000005C   9C6720E0           MLA      R0,R12,R7,R6
   \   00000060   ........           _BLF     OS_CreateMB,??OS_CreateMB??rA
    327                      OS_CREATETASK_EX(&tDutyTask[i],TaskName[i],   DutyTask,   82, tDutyTaskStack[i],(void*)i);
   \   00000064   0700A0E1           MOV      R0,R7
   \   00000068   01002DE9           PUSH     {R0}
   \   0000006C   0200A0E3           MOV      R0,#+2
   \   00000070   01002DE9           PUSH     {R0}
   \   00000074   800EA0E3           MOV      R0,#+2048
   \   00000078   01002DE9           PUSH     {R0}
   \   0000007C   870586E0           ADD      R0,R6,R7, LSL #+11
   \   00000080   000085E0           ADD      R0,R5,R0
   \   00000084   01002DE9           PUSH     {R0}
   \   00000088   10008DE2           ADD      R0,SP,#+16
   \   0000008C   071190E7           LDR      R1,[R0, +R7, LSL #+2]
   \   00000090   0430A0E1           MOV      R3,R4
   \   00000094   5220A0E3           MOV      R2,#+82
   \   00000098   070386E0           ADD      R0,R6,R7, LSL #+6
   \   0000009C   900080E2           ADD      R0,R0,#+144
   \   000000A0   ........           _BLF     OS_CreateTaskEx_SP,??OS_CreateTaskEx_SP??rA
    328                  }
   \   000000A4   017087E2           ADD      R7,R7,#+1
   \   000000A8   060057E3           CMP      R7,#+6
   \   000000AC   10D08DE2           ADD      SP,SP,#+16
   \   000000B0   1D0000AA           BGE      ??StartRelayTasks_4
   \   000000B4   E2FFFFEA           B        ??StartRelayTasks_5
    329                  break;
    330                  case DEVICE_TDU:
    331                  for ( int i=0; i < NUMBER_OF_RELAY_TASKS; i++ ) {
   \                     ??StartRelayTasks_3:
   \   000000B8   0070A0E3           MOV      R7,#+0
    332                      char* TxBufPtr=(char*)malloc(2*sizeof(DutyStruct));
   \                     ??StartRelayTasks_6:
   \   000000BC   1800A0E3           MOV      R0,#+24
   \   000000C0   ........           _BLF     __data_malloc,??__data_malloc??rA
   \   000000C4   0030A0E1           MOV      R3,R0
    333                      OS_CreateMB(&DutyMsgBuf[i],sizeof(DutyStruct),2,TxBufPtr);
   \   000000C8   0220A0E3           MOV      R2,#+2
   \   000000CC   0C10A0E3           MOV      R1,#+12
   \   000000D0   18C0A0E3           MOV      R12,#+24
   \   000000D4   9C6720E0           MLA      R0,R12,R7,R6
   \   000000D8   ........           _BLF     OS_CreateMB,??OS_CreateMB??rA
    334                      OS_CREATETASK_EX(&tDutyTask[i],TaskName[i],   DutyTask,   82, tDutyTaskStack[i],(void*)i);
   \   000000DC   0700A0E1           MOV      R0,R7
   \   000000E0   01002DE9           PUSH     {R0}
   \   000000E4   0200A0E3           MOV      R0,#+2
   \   000000E8   01002DE9           PUSH     {R0}
   \   000000EC   800EA0E3           MOV      R0,#+2048
   \   000000F0   01002DE9           PUSH     {R0}
   \   000000F4   870586E0           ADD      R0,R6,R7, LSL #+11
   \   000000F8   000085E0           ADD      R0,R5,R0
   \   000000FC   01002DE9           PUSH     {R0}
   \   00000100   10008DE2           ADD      R0,SP,#+16
   \   00000104   071190E7           LDR      R1,[R0, +R7, LSL #+2]
   \   00000108   0430A0E1           MOV      R3,R4
   \   0000010C   5220A0E3           MOV      R2,#+82
   \   00000110   070386E0           ADD      R0,R6,R7, LSL #+6
   \   00000114   900080E2           ADD      R0,R0,#+144
   \   00000118   ........           _BLF     OS_CreateTaskEx_SP,??OS_CreateTaskEx_SP??rA
    335                  }
   \   0000011C   017087E2           ADD      R7,R7,#+1
   \   00000120   060057E3           CMP      R7,#+6
   \   00000124   10D08DE2           ADD      SP,SP,#+16
   \   00000128   E3FFFFBA           BLT      ??StartRelayTasks_6
    336                  break;
    337              }
    338          #endif
    339          }
   \                     ??StartRelayTasks_4:
   \   0000012C   18D08DE2           ADD      SP,SP,#+24
   \   00000130   F040BDE8           POP      {R4-R7,LR}
   \   00000134   1EFF2FE1           BX       LR               ;; return
   \                     ??StartRelayTasks_1:
   \   00000138   ........           DC32     `?<Constant {&"BuzzerRelayTask", &"LightRelayTa`
   \   0000013C   ........           DC32     ??DutyTask
    340          #endif
    341          
    342          /*******************************************************************
    343          *       tPCxTestTask
    344          */
    345          #ifdef DEBUG_TPCX
    346          static TSN_STACKPTR int tPCxTestTaskStack[1024];
    347          TSN_TASK tPCxTest;                                                   /* Task control blocks */
    348          void tPCxTestTask(void) {
    349              static U8 PacketTPC350[] = { 2, 2, 30, 254, 0, 16, 50, 6, 0, 0, 49, 50, 51, 52, 0, 0, 108, 3 };
    350              static U8 PacketTPC140[] = { 2, 2, 31, 254, 0, 16, 50, 6, 0, 0, 50, 51, 52, 53, 0, 0, 249, 3 };
    351              static U8 PacketTPC196[] = { 2, 2, 32, 254, 0, 16, 50, 6, 0, 0, 51, 52, 53, 54, 0, 0,  70, 3 };
    352              TSNUart *Port = TSNUart::Channels[5];
    353              if ( Port ) {
    354                  while ( true ) {
    355                      TSN_Delay(1000);
    356                      bool Status;
    357                      TSN_Delay(1000);
    358                      Status = Port->Send(PacketTPC350, NELEMENTS(PacketTPC350), 2);
    359                      TSN_Delay(1000);
    360                      Status = Port->Send(PacketTPC140, NELEMENTS(PacketTPC140), 2);
    361                      TSN_Delay(1000);
    362                      Status = Port->Send(PacketTPC196, NELEMENTS(PacketTPC196), 2);
    363                  }
    364              }
    365              lese{
    366                  TSN_Delay(1000);
    367              }
    368          }
    369          #endif
    370          /*******************************************************************
    371          *
    372          */
    373          static TSN_STACKPTR int InclinometerStack[1024];
    374          
    375          TSN_TASK InclinometerHandle;                                                         /* Task control blocks */
    376          

   \                                 In segment CODE, align 4, keep-with-next
    377          void InclinometerTask(void) {
   \                     ??InclinometerTask:
   \   00000000   10402DE9           PUSH     {R4,LR}
    378          #ifndef WIN32
    379              OS_Delay(10000);
   \   00000004   ........           LDR      R4,??DataTable15  ;; CurrentDeviceId
   \   00000008   1000A0E3           MOV      R0,#+16
   \   0000000C   9C0D80E3           ORR      R0,R0,#0x2700
   \   00000010   ........           _BLF     OS_Delay,??OS_Delay??rA
    380              FOREVER {
    381                  OS_Delay(1000);
   \                     ??InclinometerTask_1:
   \   00000014   FA0FA0E3           MOV      R0,#+1000
   \   00000018   ........           _BLF     OS_Delay,??OS_Delay??rA
    382                  PROTanksystemUnit::MySelf->Calculate();
   \   0000001C   ........           LDR      R0,??DataTable27  ;; ??MySelf
   \   00000020   001090E5           LDR      R1,[R0, #+0]
   \   00000024   0100A0E1           MOV      R0,R1
   \   00000028   A41091E5           LDR      R1,[R1, #+164]
   \   0000002C   641091E5           LDR      R1,[R1, #+100]
   \   00000030   0FE0A0E1           MOV      LR,PC
   \   00000034   11FF2FE1           BX       R1
    383                  if ( CurrentDeviceId == DEVICE_TCU ) {
   \   00000038   F000D4E1           LDRSH    R0,[R4, #+0]
   \   0000003C   200050E3           CMP      R0,#+32
   \   00000040   F3FFFF1A           BNE      ??InclinometerTask_1
    384                      if ( PROInclinometer::PROInclinPtr ) {
   \   00000044   20009FE5           LDR      R0,??InclinometerTask_2  ;; ??PROInclinPtr
   \   00000048   001090E5           LDR      R1,[R0, #+0]
   \   0000004C   000051E3           CMP      R1,#+0
   \   00000050   EFFFFF0A           BEQ      ??InclinometerTask_1
    385                          PROInclinometer::PROInclinPtr->Calculate();
   \   00000054   0100A0E1           MOV      R0,R1
   \   00000058   A41091E5           LDR      R1,[R1, #+164]
   \   0000005C   641091E5           LDR      R1,[R1, #+100]
   \   00000060   0FE0A0E1           MOV      LR,PC
   \   00000064   11FF2FE1           BX       R1
   \   00000068   E9FFFFEA           B        ??InclinometerTask_1
   \                     ??InclinometerTask_2:
   \   0000006C   ........           DC32     ??PROInclinPtr
    386                      }
    387                  }
    388              }
    389          #endif
    390          }
    391          
    392          static TSN_STACKPTR int CalcMiscObjectsStack[2000];
    393          
    394          TSN_TASK CalcMiscObjectsHandle;                                                         /* Task control blocks */
    395          

   \                                 In segment CODE, align 4, keep-with-next
    396          void CalcMiscObjectsTask(void) {
   \                     ??CalcMiscObjectsTask:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   2CD04DE2           SUB      SP,SP,#+44
    397          #ifndef WIN32
    398              OS_Delay(15000);
    399              /*
    400                  struct tcp_pcb *Mypcb = tcp_new();
    401                  ip_addr_t ipaddr;
    402                  IP4_ADDR(&ipaddr, 192,168,227,200);
    403                  if ( tcp_bind(Mypcb,&ipaddr,502) == ERR_OK ){
    404                      OS_Delay(10);
    405                  }
    406              */
    407          
    408              switch ( CurrentDeviceId ) {
   \   00000008   ........           LDR      R4,??DataTable27  ;; ??MySelf
   \   0000000C   9800A0E3           MOV      R0,#+152
   \   00000010   E80D80E3           ORR      R0,R0,#0x3A00
   \   00000014   ........           _BLF     OS_Delay,??OS_Delay??rA
   \   00000018   ........           LDR      R0,??DataTable15  ;; CurrentDeviceId
   \   0000001C   1050A0E3           MOV      R5,#+16
   \   00000020   F000D0E1           LDRSH    R0,[R0, #+0]
   \   00000024   9C5D85E3           ORR      R5,R5,#0x2700
   \   00000028   200050E2           SUBS     R0,R0,#+32
   \   0000002C   0400000A           BEQ      ??CalcMiscObjectsTask_1
   \   00000030   100050E2           SUBS     R0,R0,#+16
   \   00000034   9200000A           BEQ      ??CalcMiscObjectsTask_2
   \   00000038   2CD08DE2           ADD      SP,SP,#+44
   \   0000003C   3040BDE8           POP      {R4,R5,LR}
   \   00000040   1EFF2FE1           BX       LR
    409                  case DEVICE_TCU:
    410                  if ( Master ) {
   \                     ??CalcMiscObjectsTask_1:
   \   00000044   ........           LDR      R0,??DataTable29  ;; Master
   \   00000048   0000D0E5           LDRB     R0,[R0, #+0]
   \   0000004C   000050E3           CMP      R0,#+0
   \   00000050   8200000A           BEQ      ??CalcMiscObjectsTask_3
    411                      set<PRogramObject *>ExternalObjects;
   \   00000054   0110A0E3           MOV      R1,#+1
    412                      set<PRogramObject *>::iterator pBIt;
    413                      set<PRogramObjectBase *>::iterator pPrgObjetBIt;
    414                      for ( pBIt = PRogramObject::ObjectSet.begin(); pBIt != PRogramObject::ObjectSet.end(); pBIt++ ) {
   \   00000058   48429FE5           LDR      R4,??CalcMiscObjectsTask_4  ;; ??ObjectSet
   \   0000005C   48529FE5           LDR      R5,??CalcMiscObjectsTask_4+0x4  ;; ??ObjectVector
   \   00000060   08008DE2           ADD      R0,SP,#+8
   \   00000064   ........           _BLF     __data_memzero,??__data_memzero??rA
   \   00000068   0C008DE2           ADD      R0,SP,#+12
   \   0000006C   ........           _BLF     ??_Clear,??_Clear??rA
   \   00000070   0810DDE5           LDRB     R1,[SP, #+8]
   \   00000074   2010CDE5           STRB     R1,[SP, #+32]
   \   00000078   0010A0E3           MOV      R1,#+0
   \   0000007C   04108DE5           STR      R1,[SP, #+4]
   \   00000080   000094E5           LDR      R0,[R4, #+0]
   \   00000084   00008DE5           STR      R0,[SP, #+0]
   \   00000088   0A0000EA           B        ??CalcMiscObjectsTask_5
    415                          PRogramObject *tmpPtr = (PRogramObject *)*pBIt;
    416                          if ( (*pBIt)->DataFromOther ) {
   \                     ??CalcMiscObjectsTask_6:
   \   0000008C   100090E5           LDR      R0,[R0, #+16]
   \   00000090   4401D0E5           LDRB     R0,[R0, #+324]
   \   00000094   000050E3           CMP      R0,#+0
   \   00000098   0400000A           BEQ      ??CalcMiscObjectsTask_7
    417                              ExternalObjects.insert(*pBIt);
   \   0000009C   00009DE5           LDR      R0,[SP, #+0]
   \   000000A0   0C108DE2           ADD      R1,SP,#+12
   \   000000A4   102090E5           LDR      R2,[R0, #+16]
   \   000000A8   24008DE2           ADD      R0,SP,#+36
   \   000000AC   ........           _BLF     ??insert_1,??insert??rA
    418                          }
    419                      }
   \                     ??CalcMiscObjectsTask_7:
   \   000000B0   0D00A0E1           MOV      R0,SP
   \   000000B4   ........           _BLF     ??_Inc,??_Inc??rA
   \                     ??CalcMiscObjectsTask_5:
   \   000000B8   00009DE5           LDR      R0,[SP, #+0]
   \   000000BC   040050E1           CMP      R0,R4
   \   000000C0   F1FFFF1A           BNE      ??CalcMiscObjectsTask_6
    420                      FOREVER {
    421                          OS_Delay(1000);
   \                     ??CalcMiscObjectsTask_8:
   \   000000C4   FA0FA0E3           MOV      R0,#+1000
   \   000000C8   ........           _BLF     OS_Delay,??OS_Delay??rA
    422                          if ( PROSystemData::TXUSystemData ) {
   \   000000CC   DC019FE5           LDR      R0,??CalcMiscObjectsTask_4+0x8  ;; ??TXUSystemData
   \   000000D0   001090E5           LDR      R1,[R0, #+0]
   \   000000D4   000051E3           CMP      R1,#+0
   \   000000D8   0400000A           BEQ      ??CalcMiscObjectsTask_9
    423                              PROSystemData::TXUSystemData->Calculate();
   \   000000DC   0100A0E1           MOV      R0,R1
   \   000000E0   A41091E5           LDR      R1,[R1, #+164]
   \   000000E4   641091E5           LDR      R1,[R1, #+100]
   \   000000E8   0FE0A0E1           MOV      LR,PC
   \   000000EC   11FF2FE1           BX       R1
    424                          }
    425                          if ( PRODraftSystem::PRODraftSysPtr ) {
   \                     ??CalcMiscObjectsTask_9:
   \   000000F0   BC019FE5           LDR      R0,??CalcMiscObjectsTask_4+0xC  ;; ??PRODraftSysPtr
   \   000000F4   001090E5           LDR      R1,[R0, #+0]
   \   000000F8   000051E3           CMP      R1,#+0
   \   000000FC   0400000A           BEQ      ??CalcMiscObjectsTask_10
    426                              PRODraftSystem::PRODraftSysPtr->Calculate();
   \   00000100   0100A0E1           MOV      R0,R1
   \   00000104   A41091E5           LDR      R1,[R1, #+164]
   \   00000108   641091E5           LDR      R1,[R1, #+100]
   \   0000010C   0FE0A0E1           MOV      LR,PC
   \   00000110   11FF2FE1           BX       R1
    427                          }
    428                          if ( PROAtmReference::PROAtmRefPtr &&  PROAtmReference::PROAtmRefPtr->SensorOnTCU ) {
   \                     ??CalcMiscObjectsTask_10:
   \   00000114   9C019FE5           LDR      R0,??CalcMiscObjectsTask_4+0x10  ;; ??PROAtmRefPtr
   \   00000118   001090E5           LDR      R1,[R0, #+0]
   \   0000011C   000051E3           CMP      R1,#+0
   \   00000120   5901D115           LDRBNE   R0,[R1, #+345]
   \   00000124   00005013           CMPNE    R0,#+0
   \   00000128   0400000A           BEQ      ??CalcMiscObjectsTask_11
    429                              PROAtmReference::PROAtmRefPtr->Calculate();
   \   0000012C   0100A0E1           MOV      R0,R1
   \   00000130   A41091E5           LDR      R1,[R1, #+164]
   \   00000134   641091E5           LDR      R1,[R1, #+100]
   \   00000138   0FE0A0E1           MOV      LR,PC
   \   0000013C   11FF2FE1           BX       R1
    430                          }
    431                          if ( !ExternalObjects.empty() ) {
   \                     ??CalcMiscObjectsTask_11:
   \   00000140   1C009DE5           LDR      R0,[SP, #+28]
   \   00000144   000050E3           CMP      R0,#+0
   \   00000148   1E00000A           BEQ      ??CalcMiscObjectsTask_12
    432                              for ( pBIt = ExternalObjects.begin();  pBIt != ExternalObjects.end(); pBIt++ ) {
   \   0000014C   0C009DE5           LDR      R0,[SP, #+12]
   \   00000150   00008DE5           STR      R0,[SP, #+0]
   \   00000154   170000EA           B        ??CalcMiscObjectsTask_13
    433                                  PRogramObject *tmpPtr = *pBIt;
   \                     ??CalcMiscObjectsTask_14:
   \   00000158   104091E5           LDR      R4,[R1, #+16]
    434                                  if ( tmpPtr->IsAvailableNewData() ) {
   \   0000015C   0400A0E1           MOV      R0,R4
   \   00000160   A41094E5           LDR      R1,[R4, #+164]
   \   00000164   581091E5           LDR      R1,[R1, #+88]
   \   00000168   0FE0A0E1           MOV      LR,PC
   \   0000016C   11FF2FE1           BX       R1
   \   00000170   000050E3           CMP      R0,#+0
   \   00000174   0700000A           BEQ      ??CalcMiscObjectsTask_15
    435                                      tmpPtr->Calculate();
   \   00000178   A41094E5           LDR      R1,[R4, #+164]
   \   0000017C   0400A0E1           MOV      R0,R4
   \   00000180   641091E5           LDR      R1,[R1, #+100]
   \   00000184   0FE0A0E1           MOV      LR,PC
   \   00000188   11FF2FE1           BX       R1
    436                                      CheckAlarms(tmpPtr->AlarmSet);
   \   0000018C   0010A0E3           MOV      R1,#+0
   \   00000190   E40084E2           ADD      R0,R4,#+228
   \   00000194   ........           _BLF     ??CheckAlarms,??CheckAlarms??rA
    437                                  }
    438                                  tmpPtr->SendData();
   \                     ??CalcMiscObjectsTask_15:
   \   00000198   A42094E5           LDR      R2,[R4, #+164]
   \   0000019C   6510A0E3           MOV      R1,#+101
   \   000001A0   402092E5           LDR      R2,[R2, #+64]
   \   000001A4   0400A0E1           MOV      R0,R4
   \   000001A8   0FE0A0E1           MOV      LR,PC
   \   000001AC   12FF2FE1           BX       R2
    439                              }
   \   000001B0   0D00A0E1           MOV      R0,SP
   \   000001B4   ........           _BLF     ??_Inc,??_Inc??rA
   \                     ??CalcMiscObjectsTask_13:
   \   000001B8   00109DE5           LDR      R1,[SP, #+0]
   \   000001BC   0C008DE2           ADD      R0,SP,#+12
   \   000001C0   000051E1           CMP      R1,R0
   \   000001C4   E3FFFF1A           BNE      ??CalcMiscObjectsTask_14
    440                          }
    441                          if ( !ModbusUnit::ObjectSet.empty() ) {
   \                     ??CalcMiscObjectsTask_12:
   \   000001C8   EC409FE5           LDR      R4,??CalcMiscObjectsTask_4+0x14  ;; ??ObjectSet_1
   \   000001CC   100094E5           LDR      R0,[R4, #+16]
   \   000001D0   000050E3           CMP      R0,#+0
   \   000001D4   0E00000A           BEQ      ??CalcMiscObjectsTask_16
    442                              for ( pPrgObjetBIt = ModbusUnit::ObjectSet.begin();  pPrgObjetBIt != ModbusUnit::ObjectSet.end(); pPrgObjetBIt++ ) {
   \   000001D8   000094E5           LDR      R0,[R4, #+0]
   \   000001DC   04008DE5           STR      R0,[SP, #+4]
   \   000001E0   080000EA           B        ??CalcMiscObjectsTask_17
    443                                  (*pPrgObjetBIt)->SendData();
   \                     ??CalcMiscObjectsTask_18:
   \   000001E4   102090E5           LDR      R2,[R0, #+16]
   \   000001E8   6510A0E3           MOV      R1,#+101
   \   000001EC   0200A0E1           MOV      R0,R2
   \   000001F0   A42092E5           LDR      R2,[R2, #+164]
   \   000001F4   402092E5           LDR      R2,[R2, #+64]
   \   000001F8   0FE0A0E1           MOV      LR,PC
   \   000001FC   12FF2FE1           BX       R2
    444                              }
   \   00000200   04008DE2           ADD      R0,SP,#+4
   \   00000204   ........           _BLF     ??_Inc,??_Inc??rA
   \                     ??CalcMiscObjectsTask_17:
   \   00000208   04009DE5           LDR      R0,[SP, #+4]
   \   0000020C   040050E1           CMP      R0,R4
   \   00000210   F3FFFF1A           BNE      ??CalcMiscObjectsTask_18
    445                          }
    446          
    447                          //Should calculate elsewhere
    448                          for ( unsigned i = 0; i < PROWaterHeater::ObjectVector.size(); i++ ) {
   \                     ??CalcMiscObjectsTask_16:
   \   00000214   040095E5           LDR      R0,[R5, #+4]
   \   00000218   001095E5           LDR      R1,[R5, #+0]
   \   0000021C   0040A0E3           MOV      R4,#+0
   \   00000220   010040E0           SUB      R0,R0,R1
   \   00000224   2001B0E1           LSRS     R0,R0,#+2
   \   00000228   A5FFFF0A           BEQ      ??CalcMiscObjectsTask_8
   \                     ??CalcMiscObjectsTask_19:
   \   0000022C   000095E5           LDR      R0,[R5, #+0]
   \   00000230   041095E5           LDR      R1,[R5, #+4]
   \   00000234   001041E0           SUB      R1,R1,R0
   \   00000238   210154E1           CMP      R4,R1, LSR #+2
   \   0000023C   A0FFFF2A           BCS      ??CalcMiscObjectsTask_8
    449                              PROWaterHeater::ObjectVector[i]->Calculate();
   \   00000240   041190E7           LDR      R1,[R0, +R4, LSL #+2]
    450                              //CheckAlarms((*pBIt)->AlarmSet);
    451                          }
   \   00000244   014084E2           ADD      R4,R4,#+1
   \   00000248   0100A0E1           MOV      R0,R1
   \   0000024C   A41091E5           LDR      R1,[R1, #+164]
   \   00000250   641091E5           LDR      R1,[R1, #+100]
   \   00000254   0FE0A0E1           MOV      LR,PC
   \   00000258   11FF2FE1           BX       R1
   \   0000025C   F2FFFFEA           B        ??CalcMiscObjectsTask_19
    452                      }
    453                  } else {
    454                      FOREVER {
    455                          OS_Delay(1000);
   \                     ??CalcMiscObjectsTask_3:
   \   00000260   FA0FA0E3           MOV      R0,#+1000
   \   00000264   ........           _BLF     OS_Delay,??OS_Delay??rA
    456                          PROTanksystemUnit::MySelf->Calculate();
   \   00000268   001094E5           LDR      R1,[R4, #+0]
   \   0000026C   0100A0E1           MOV      R0,R1
   \   00000270   A41091E5           LDR      R1,[R1, #+164]
   \   00000274   641091E5           LDR      R1,[R1, #+100]
   \   00000278   0FE0A0E1           MOV      LR,PC
   \   0000027C   11FF2FE1           BX       R1
   \   00000280   F6FFFFEA           B        ??CalcMiscObjectsTask_3
    457                      }
    458                  }
    459                  case DEVICE_TDU:
    460                  FOREVER {
    461                      OS_Delay(10000);
   \                     ??CalcMiscObjectsTask_2:
   \   00000284   0500A0E1           MOV      R0,R5
   \   00000288   ........           _BLF     OS_Delay,??OS_Delay??rA
    462                      PROTanksystemUnit::MySelf->Calculate();
   \   0000028C   001094E5           LDR      R1,[R4, #+0]
   \   00000290   0100A0E1           MOV      R0,R1
   \   00000294   A41091E5           LDR      R1,[R1, #+164]
   \   00000298   641091E5           LDR      R1,[R1, #+100]
   \   0000029C   0FE0A0E1           MOV      LR,PC
   \   000002A0   11FF2FE1           BX       R1
   \   000002A4   F6FFFFEA           B        ??CalcMiscObjectsTask_2
   \                     ??CalcMiscObjectsTask_4:
   \   000002A8   ........           DC32     ??ObjectSet
   \   000002AC   ........           DC32     ??ObjectVector
   \   000002B0   ........           DC32     ??TXUSystemData
   \   000002B4   ........           DC32     ??PRODraftSysPtr
   \   000002B8   ........           DC32     ??PROAtmRefPtr
   \   000002BC   ........           DC32     ??ObjectSet_1
    463                  }
    464              }
    465          #endif
    466          }
    467          
    468          TSN_TIMER ComActivityTimer;

   \                                 In segment CODE, align 4, keep-with-next
    469          void CheckComActivity(void) {
    470          #ifndef WIN32 //RBMARK
    471              OS_RetriggerTimer(&ComActivityTimer);       /* make timer periodical */
   \                     ??CheckComActivity:
   \   00000000   48009FE5           LDR      R0,??CheckComActivity_1  ;; ExternAlarmSilence + 46148
   \   00000004   00402DE9           PUSH     {LR}
   \   00000008   ........           _BLF     OS_RetriggerTimer,??OS_RetriggerTimer??rA
    472          #endif
    473              for ( int i = 0; i < MAX_COM_PORTS; i++ ) {
   \   0000000C   0000A0E3           MOV      R0,#+0
    474                  TSNUart *UartPtr = TSNUart::Channels[i];
   \                     ??CheckComActivity_2:
   \   00000010   ........           LDR      R1,??DataTable32  ;; ??Channels
   \   00000014   001191E7           LDR      R1,[R1, +R0, LSL #+2]
    475                  if ( UartPtr ) {
   \   00000018   000051E3           CMP      R1,#+0
   \   0000001C   0600000A           BEQ      ??CheckComActivity_3
    476                      UartPtr->RxBytePerSecond = UartPtr->RxByteCnt;
   \   00000020   CC2091E5           LDR      R2,[R1, #+204]
   \   00000024   D42081E5           STR      R2,[R1, #+212]
    477                      UartPtr->RxByteCnt       = 0;
   \   00000028   0020A0E3           MOV      R2,#+0
   \   0000002C   CC2081E5           STR      R2,[R1, #+204]
    478                      UartPtr->TxBytePerSecond = UartPtr->TxByteCnt;
   \   00000030   D03091E5           LDR      R3,[R1, #+208]
   \   00000034   D83081E5           STR      R3,[R1, #+216]
    479                      UartPtr->TxByteCnt       = 0;
   \   00000038   D02081E5           STR      R2,[R1, #+208]
    480                  }
    481              }
   \                     ??CheckComActivity_3:
   \   0000003C   010080E2           ADD      R0,R0,#+1
   \   00000040   070050E3           CMP      R0,#+7
   \   00000044   F1FFFFBA           BLT      ??CheckComActivity_2
    482          }
   \   00000048   0040BDE8           POP      {LR}
   \   0000004C   1EFF2FE1           BX       LR               ;; return
   \                     ??CheckComActivity_1:
   \   00000050   ........           DC32     ExternAlarmSilence + 46148
    483          
    484          /*******************************************************************
    485          *       ControllerTask
    486          */

   \                                 In segment CODE, align 4, keep-with-next
    487          void ActivateCtrl(char TestMode) {
   \                     ??ActivateCtrl:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
    488          
    489              if ( PROTanksystemUnit::MySelf->CtrlAlarmRelayPtr1 ) PROTanksystemUnit::MySelf->CtrlAlarmRelayPtr1->Update(TestMode);
   \   00000004   ........           LDR      R5,??DataTable27  ;; ??MySelf
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   000095E5           LDR      R0,[R5, #+0]
   \   00000010   8C2390E5           LDR      R2,[R0, #+908]
   \   00000014   000052E3           CMP      R2,#+0
   \   00000018   0500000A           BEQ      ??ActivateCtrl_1
   \   0000001C   0200A0E1           MOV      R0,R2
   \   00000020   A42092E5           LDR      R2,[R2, #+164]
   \   00000024   0410A0E1           MOV      R1,R4
   \   00000028   5C2092E5           LDR      R2,[R2, #+92]
   \   0000002C   0FE0A0E1           MOV      LR,PC
   \   00000030   12FF2FE1           BX       R2
   \                     ??ActivateCtrl_1:
   \   00000034   000095E5           LDR      R0,[R5, #+0]
   \   00000038   902390E5           LDR      R2,[R0, #+912]
   \   0000003C   000052E3           CMP      R2,#+0
   \   00000040   0500000A           BEQ      ??ActivateCtrl_2
    490              if ( PROTanksystemUnit::MySelf->CtrlAlarmRelayPtr2 ) PROTanksystemUnit::MySelf->CtrlAlarmRelayPtr2->Update(TestMode);
   \   00000044   0200A0E1           MOV      R0,R2
   \   00000048   A42092E5           LDR      R2,[R2, #+164]
   \   0000004C   0410A0E1           MOV      R1,R4
   \   00000050   5C2092E5           LDR      R2,[R2, #+92]
   \   00000054   0FE0A0E1           MOV      LR,PC
   \   00000058   12FF2FE1           BX       R2
   \                     ??ActivateCtrl_2:
   \   0000005C   000095E5           LDR      R0,[R5, #+0]
   \   00000060   842390E5           LDR      R2,[R0, #+900]
   \   00000064   000052E3           CMP      R2,#+0
   \   00000068   0500000A           BEQ      ??ActivateCtrl_3
    491              if ( PROTanksystemUnit::MySelf->CtrlBuzzerPtr )     PROTanksystemUnit::MySelf->CtrlBuzzerPtr->Update(TestMode);
   \   0000006C   0200A0E1           MOV      R0,R2
   \   00000070   A42092E5           LDR      R2,[R2, #+164]
   \   00000074   0410A0E1           MOV      R1,R4
   \   00000078   5C2092E5           LDR      R2,[R2, #+92]
   \   0000007C   0FE0A0E1           MOV      LR,PC
   \   00000080   12FF2FE1           BX       R2
   \                     ??ActivateCtrl_3:
   \   00000084   000095E5           LDR      R0,[R5, #+0]
   \   00000088   882390E5           LDR      R2,[R0, #+904]
   \   0000008C   000052E3           CMP      R2,#+0
   \   00000090   0500000A           BEQ      ??ActivateCtrl_4
    492              if ( PROTanksystemUnit::MySelf->CtrlLightPtr )      PROTanksystemUnit::MySelf->CtrlLightPtr->Update(TestMode);
   \   00000094   0200A0E1           MOV      R0,R2
   \   00000098   A42092E5           LDR      R2,[R2, #+164]
   \   0000009C   0410A0E1           MOV      R1,R4
   \   000000A0   5C2092E5           LDR      R2,[R2, #+92]
   \   000000A4   0FE0A0E1           MOV      LR,PC
   \   000000A8   12FF2FE1           BX       R2
   \                     ??ActivateCtrl_4:
   \   000000AC   000095E5           LDR      R0,[R5, #+0]
   \   000000B0   942390E5           LDR      R2,[R0, #+916]
   \   000000B4   000052E3           CMP      R2,#+0
   \   000000B8   0500000A           BEQ      ??ActivateCtrl_5
    493              if ( PROTanksystemUnit::MySelf->CtrlHornPtr )       PROTanksystemUnit::MySelf->CtrlHornPtr->Update(TestMode);
   \   000000BC   0200A0E1           MOV      R0,R2
   \   000000C0   A42092E5           LDR      R2,[R2, #+164]
   \   000000C4   0410A0E1           MOV      R1,R4
   \   000000C8   5C2092E5           LDR      R2,[R2, #+92]
   \   000000CC   0FE0A0E1           MOV      LR,PC
   \   000000D0   12FF2FE1           BX       R2
   \                     ??ActivateCtrl_5:
   \   000000D4   000095E5           LDR      R0,[R5, #+0]
   \   000000D8   982390E5           LDR      R2,[R0, #+920]
   \   000000DC   000052E3           CMP      R2,#+0
   \   000000E0   0500000A           BEQ      ??ActivateCtrl_6
    494              if ( PROTanksystemUnit::MySelf->CtrlLampPtr )       PROTanksystemUnit::MySelf->CtrlLampPtr->Update(TestMode);
   \   000000E4   0200A0E1           MOV      R0,R2
   \   000000E8   A42092E5           LDR      R2,[R2, #+164]
   \   000000EC   0410A0E1           MOV      R1,R4
   \   000000F0   5C2092E5           LDR      R2,[R2, #+92]
   \   000000F4   0FE0A0E1           MOV      LR,PC
   \   000000F8   12FF2FE1           BX       R2
    495          }
   \                     ??ActivateCtrl_6:
   \   000000FC   3040BDE8           POP      {R4,R5,LR}
   \   00000100   1EFF2FE1           BX       LR               ;; return
    496          
    497          #ifdef S2TXU
    498          TSN_TASK ControllerTaskHandle;                                                   /* Task control blocks */
    499          char ControllerTaskStack[2 * 1024];
    500          
    501          char TestMode;

   \                                 In segment CODE, align 4, keep-with-next
    502          static void ControllerTask(void) {
    503              if ( PROTanksystemUnit::MySelf ) {
   \                     ??ControllerTask:
   \   00000000   ........           LDR      R0,??DataTable27  ;; ??MySelf
   \   00000004   10402DE9           PUSH     {R4,LR}
   \   00000008   000090E5           LDR      R0,[R0, #+0]
   \   0000000C   5C409FE5           LDR      R4,??ControllerTask_1  ;; TestMode
   \   00000010   000050E3           CMP      R0,#+0
   \   00000014   0400001A           BNE      ??ControllerTask_2
    504                  while ( 1 ) {
    505                      TestMode = OS_WaitEventTimed(BUZZER_TEST_PRESSED, 1000);
    506                      ActivateCtrl(TestMode);
    507                      switch ( TestMode ) {
    508                      case BUZZER_NO_TEST:
    509                      case BUZZER_TEST_RELEASED:
    510                          break;
    511                      case BUZZER_TEST_PRESSED:
    512                          TestMode = OS_WaitEventTimed(BUZZER_TEST_RELEASED, 15000);
    513                          if ( TestMode & BUZZER_TEST_RELEASED ) {
    514                              ActivateCtrl(BUZZER_TEST_OFF);
    515                          } else {
    516                              ActivateCtrl(BUZZER_NO_TEST);
    517                          }
    518                      }
    519                  }
    520              } else {
    521                  OS_Terminate(NULL);
   \   00000018   0000A0E3           MOV      R0,#+0
   \   0000001C   ........           _BLF     OS_Terminate,??OS_Terminate??rA
    522              }
    523          }
   \   00000020   1040BDE8           POP      {R4,LR}
   \   00000024   1EFF2FE1           BX       LR               ;; return
   \                     ??ControllerTask_3:
   \   00000028   ........           BL       ??ActivateCtrl
   \                     ??ControllerTask_2:
   \   0000002C   FA1FA0E3           MOV      R1,#+1000
   \   00000030   0100A0E3           MOV      R0,#+1
   \   00000034   ........           _BLF     OS_WaitEventTimed,??OS_WaitEventTimed??rA
   \   00000038   0000C4E5           STRB     R0,[R4, #+0]
   \   0000003C   ........           BL       ??ActivateCtrl
   \   00000040   0000D4E5           LDRB     R0,[R4, #+0]
   \   00000044   010050E3           CMP      R0,#+1
   \   00000048   F7FFFF1A           BNE      ??ControllerTask_2
   \   0000004C   9810A0E3           MOV      R1,#+152
   \   00000050   E81D81E3           ORR      R1,R1,#0x3A00
   \   00000054   0200A0E3           MOV      R0,#+2
   \   00000058   ........           _BLF     OS_WaitEventTimed,??OS_WaitEventTimed??rA
   \   0000005C   0000C4E5           STRB     R0,[R4, #+0]
   \   00000060   020010E3           TST      R0,#0x2
   \   00000064   0200A013           MOVNE    R0,#+2
   \   00000068   0000A003           MOVEQ    R0,#+0
   \   0000006C   EDFFFFEA           B        ??ControllerTask_3
   \                     ??ControllerTask_1:
   \   00000070   ........           DC32     TestMode
    524          #else
    525          static void ControllerTask(void) {
    526              TSN_Delay(1000);
    527              if ( PROTanksystemUnit::MySelf ) {
    528                  ActivateCtrl(BUZZER_NO_TEST);
    529              }
    530          }
    531          #endif
    532          
    533          
    534          ////////////////////////////////////////////////////////////////////////////
    535          //
    536          //  MsgBox timer task
    537          //  Required, because we only can close/delete a window from task-level
    538          //
    539          ////////////////////////////////////////////////////////////////////////////
    540          
    541          #ifdef S2TXU
    542          TSN_TASK MsgBoxTimerTaskHandle;                                                  /* Task control blocks */
    543          char MsgBoxTimerTaskStack[4 * 512];
    544          OS_MAILBOX CloseWinTimerBuf;

   \                                 In segment CODE, align 4, keep-with-next
    545          void MsgBoxTimerTask(void) {
   \                     ??MsgBoxTimerTask:
   \   00000000   10402DE9           PUSH     {R4,LR}
    546              // allocate memory for the queue
    547              CloseWinPacket *MsgBuf = new CloseWinPacket[2];
    548              OS_CreateMB(&CloseWinTimerBuf, sizeof(CloseWinPacket), 2, (char *)MsgBuf);
   \   00000004   58409FE5           LDR      R4,??MsgBoxTimerTask_1  ;; CloseWinTimerBuf
   \   00000008   20D04DE2           SUB      SP,SP,#+32
   \   0000000C   4000A0E3           MOV      R0,#+64
   \   00000010   ........           _BLF     `??operator new[]`,`??operator new[]??rA`
   \   00000014   0030A0E1           MOV      R3,R0
   \   00000018   0220A0E3           MOV      R2,#+2
   \   0000001C   2010A0E3           MOV      R1,#+32
   \   00000020   0400A0E1           MOV      R0,R4
   \   00000024   ........           _BLF     OS_CreateMB,??OS_CreateMB??rA
   \   00000028   020000EA           B        ??MsgBoxTimerTask_2
    549          
    550              while ( true ) {
    551                  CloseWinPacket CWinPacket;
    552                  OS_GetMail(&CloseWinTimerBuf, (char *)&CWinPacket);
    553                  OS_DeleteTimer((OS_TIMER *)&CWinPacket.m_UserTimer);
    554                  if ( CWinPacket.IsDialogWin ) {
    555                      GUI_EndDialog(CWinPacket.m_WinHandl, 0);
   \                     ??MsgBoxTimerTask_3:
   \   0000002C   F000DDE1           LDRSH    R0,[SP, #+0]
   \   00000030   0010A0E3           MOV      R1,#+0
   \   00000034   ........           _BLF     GUI_EndDialog,??GUI_EndDialog??rA
    556                  } else {
   \                     ??MsgBoxTimerTask_2:
   \   00000038   0D10A0E1           MOV      R1,SP
   \   0000003C   0400A0E1           MOV      R0,R4
   \   00000040   ........           _BLF     OS_GetMail,??OS_GetMail??rA
   \   00000044   08008DE2           ADD      R0,SP,#+8
   \   00000048   ........           _BLF     OS_DeleteTimer,??OS_DeleteTimer??rA
   \   0000004C   0200DDE5           LDRB     R0,[SP, #+2]
   \   00000050   000050E3           CMP      R0,#+0
   \   00000054   F4FFFF1A           BNE      ??MsgBoxTimerTask_3
    557                      WM_DeleteWindow(CWinPacket.m_WinHandl);
   \   00000058   F000DDE1           LDRSH    R0,[SP, #+0]
   \   0000005C   ........           _BLF     WM_DeleteWindow,??WM_DeleteWindow??rA
   \   00000060   F4FFFFEA           B        ??MsgBoxTimerTask_2
   \                     ??MsgBoxTimerTask_1:
   \   00000064   ........           DC32     CloseWinTimerBuf
    558                  }
    559              }
    560          }
    561          

   \                                 In segment CODE, align 4, keep-with-next
    562          void StartCloseMsgBoxTask(void) {
    563              OS_CREATETASK(&MsgBoxTimerTaskHandle, "CloseWinTask", MsgBoxTimerTask,  80, MsgBoxTimerTaskStack);      //Alarm button blink
   \                     ??StartCloseMsgBoxTask:
   \   00000000   30009FE5           LDR      R0,??StartCloseMsgBoxTask_1  ;; MsgBoxTimerTaskHandle
   \   00000004   30309FE5           LDR      R3,??StartCloseMsgBoxTask_1+0x4  ;; ??MsgBoxTimerTask
   \   00000008   00402DE9           PUSH     {LR}
   \   0000000C   0210A0E3           MOV      R1,#+2
   \   00000010   02002DE9           PUSH     {R1}
   \   00000014   801EA0E3           MOV      R1,#+2048
   \   00000018   02002DE9           PUSH     {R1}
   \   0000001C   401080E2           ADD      R1,R0,#+64
   \   00000020   02002DE9           PUSH     {R1}
   \   00000024   14109FE5           LDR      R1,??StartCloseMsgBoxTask_1+0x8  ;; `?<Constant "CloseWinTask">`
   \   00000028   5020A0E3           MOV      R2,#+80
   \   0000002C   ........           _BLF     OS_CreateTask_SP,??OS_CreateTask_SP??rA
    564          }
   \   00000030   0740BDE8           POP      {R0-R2,LR}
   \   00000034   1EFF2FE1           BX       LR               ;; return
   \                     ??StartCloseMsgBoxTask_1:
   \   00000038   ........           DC32     MsgBoxTimerTaskHandle
   \   0000003C   ........           DC32     ??MsgBoxTimerTask
   \   00000040   ........           DC32     `?<Constant "CloseWinTask">`
    565          
    566          #endif
    567          
    568          
    569          /*******************************************************************
    570          *       Free alarm Check Task
    571          */
    572          static TSN_STACKPTR int CheckFreeAlarmsStack[512];
    573          
    574          TSN_TASK tCheckFreeAlarms;                                                   /* Task control blocks */
    575          

   \                                 In segment CODE, align 4, keep-with-next
    576          static void CheckFreeAlarmsTask(void) {
   \                     ??CheckFreeAlarmsTask:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   ........           LDR      R4,??DataTable33  ;; FreeAlarmInfoList
    577              while ( 1 ) {
    578                  TSN_Delay(1000);
   \                     ??CheckFreeAlarmsTask_1:
   \   00000008   FA0FA0E3           MOV      R0,#+1000
   \   0000000C   ........           _BLF     OS_Delay,??OS_Delay??rA
    579                  CheckAlarms(FreeAlarmInfoList);
   \   00000010   0010A0E3           MOV      R1,#+0
   \   00000014   0400A0E1           MOV      R0,R4
   \   00000018   ........           _BLF     ??CheckAlarms,??CheckAlarms??rA
   \   0000001C   F9FFFFEA           B        ??CheckFreeAlarmsTask_1
    580              }
    581          }
    582          
    583          /*******************************************************************
    584          *       PresentWindowsTask
    585          */

   \                                 In segment CODE, align 4, keep-with-next
    586          static void PresentWindowsTask(void) {
    587          //First window after start
    588              MainWindow->SetCurrentWindow(0);
   \                     ??PresentWindowsTask:
   \   00000000   ........           LDR      R0,??DataTable21  ;; MainWindow
   \   00000004   30402DE9           PUSH     {R4,R5,LR}
   \   00000008   000090E5           LDR      R0,[R0, #+0]
    589          #ifdef ANTDUSIM
    590              PWEventHandl = CreateEvent(NULL, true, true, "PWEvent");
    591          #endif
    592              if ( !ConfigWarningsString.IsEmpty() ) {
   \   0000000C   ........           LDR      R4,??DataTable22  ;; CurrentWinID
   \   00000010   0010A0E3           MOV      R1,#+0
   \   00000014   ........           _BLF     ??SetCurrentWindow,??SetCurrentWindow??rA
   \   00000018   ........           LDR      R0,??DataTable23  ;; ConfigWarningsString
   \   0000001C   ........           _BLF     ??IsEmpty,??IsEmpty??rA
   \   00000020   000050E3           CMP      R0,#+0
   \   00000024   0C00001A           BNE      ??PresentWindowsTask_2
    593                  CurrentWinID = TDU_WARNING_WIN;
   \   00000028   9C00A0E3           MOV      R0,#+156
   \   0000002C   800E80E3           ORR      R0,R0,#0x800
   \   00000030   000084E5           STR      R0,[R4, #+0]
   \   00000034   080000EA           B        ??PresentWindowsTask_2
    594              }
    595          
    596              while ( 1 ) {
    597          
    598          #ifdef ANTDUSIM
    599                  ResetEvent(PWEventHandl);
    600                  WaitForSingleObject(PWEventHandl, 1000);
    601          #else
    602                  if ( OS_WaitEventTimed(1, 1000) ) {
    603                      TSN_Delay(50); // If we get one event, wait a little moment
    604                  }
    605          #endif
    606                  PhysKeyPressed &= ~TOUCH_PRESWIN_FLAG;
    607                  TDUBasicWin::Protect();
    608          
    609                  switch ( CurrentWinID ) {
    610                  case TDU_WARNING_WIN    :
    611                      if ( ConfigWarnings  ) {
    612                          WM_BringToTop(ConfigWarnings->WinHandl);
    613                          //ConfigWarnings->Repaint();
    614                      }
    615                      break;
    616                  case TDU_WATERINGR_WIN  :
    617                      if ( WaterIngrWindow ) WaterIngrWindow->Paintnew();
    618                      break;
    619                  case TDU_SYSTEM_WIN :
    620                      if ( SystemWindow ) {
    621                          SystemWindow->Protect();
    622                          if ( !SystemWindow->SysWin1IsClosed )       SystemWindow->SysWin1->UpdateSysWin();
    623                          if ( !SystemWindow->SysWin2IsClosed )       SystemWindow->SysWin2->UpdateSysWin();
    624                          if ( !SystemWindow->SysWin3IsClosed )       SystemWindow->SysWin3->UpdateSysWin();
    625                          if ( !SystemWindow->SysWin4IsClosed )       SystemWindow->SysWin4->UpdateSysWin();
    626                          if ( !SystemWindow->SysWin5IsClosed )       SystemWindow->SysWin5->UpdateSysWin();
    627                          SystemWindow->UnProtect();
    628                      }
    629                      break;
    630                  case TDU_CARGO_WIN :
    631                      if ( CargoWindow ) {
    632                          if ( AppSetupCargoIsClosed ) {
    633                              CargoWindow->PWTimer();
    634                          } else if ( AppSetupCargo ) {
    635                              AppSetupCargo->Update();
    636                          }
    637                      }
    638                      break;
    639                  case TDU_TANKFARM_WIN :
    640                      if ( TankFarmWindow ) {
    641                          if ( AppSetupTankFarmIsClosed ) {
    642                              TankFarmWindow->PWTimer();
    643                          } else if ( AppSetupTankFarm ) {
    644                              AppSetupTankFarm->Update();
    645                          }
    646                      }
    647                      break;
    648                  case TDU_BALLAST_WIN :
    649                      if ( BallastWindow ) {
    650                          if ( AppSetupBallastIsClosed ) {
    651                              BallastWindow->PWTimer();
    652                          } else if ( AppSetupBallast ) {
    653                              AppSetupBallast->Update();
    654                          }
    655                      }
    656                      break;
    657                  case TDU_SERVICE_WIN :
    658                      if ( ServiceWindow ) {
    659                          if ( AppSetupServiceIsClosed ) {
    660                              ServiceWindow->PWTimer();
    661                          } else if ( AppSetupService ) {
    662                              AppSetupService->Update();
    663                          }
    664                      }
    665                      break;
    666                  case TDU_TANKPRESS_WIN :
    667                      if ( TankPressWindow ) TankPressWindow->PWTimer();
    668                      break;
    669                  case TDU_LEVELSWITCH_WIN:
    670                      if ( LevelSwitchWindow ) LevelSwitchWindow->PWTimer();
    671                      break;
    672                  case TDU_TEMP_WIN :
    673                      if ( TempWindow ) {
    674                          if ( AppSetupTempIsClosed ) {
    675                              TempWindow->PWTimer();
    676                          } else if ( AppSetupTemp ) {
    677                              AppSetupTemp->Update();
    678                          }
    679                      }
    680                  case TDU_LINEPRESS_WIN :
    681                      if ( LinePressWindow ) LinePressWindow->PWTimer();
    682                      break;
    683                      //case TDU_ALARM_WIN:
    684                      //  break;
    685                  case TDU_VOIDSPACE_WIN :
    686                      if ( VoidSpaceWindow ) {
    687                          if ( AppSetupVoidSpaceIsClosed ) {
    688                              VoidSpaceWindow->PWTimer();
    689                          } else if ( AppSetupVoidSpace ) {
    690                              AppSetupVoidSpace->Update();
    691                          }
    692                      }
    693                      break;
    694                  }
    695                  if ( TankDetails && !TankDetails->Closed ) {
    696                      TankDetails->Update();
    697                  } else if ( SensorDetails && !SensorDetails->IsClosed ) {
   \                     ??PresentWindowsTask_3:
   \   00000038   2C039FE5           LDR      R0,??PresentWindowsTask_4  ;; SensorDetails
   \   0000003C   000090E5           LDR      R0,[R0, #+0]
   \   00000040   000050E3           CMP      R0,#+0
   \   00000044   0300000A           BEQ      ??PresentWindowsTask_5
   \   00000048   6C10D0E5           LDRB     R1,[R0, #+108]
   \   0000004C   000051E3           CMP      R1,#+0
   \   00000050   0000001A           BNE      ??PresentWindowsTask_5
    698                      SensorDetails->Update();
   \   00000054   ........           _BLF     ??Update,??Update??rA
    699                  }
    700                  TDUBasicWin::UnProtect();
   \                     ??PresentWindowsTask_5:
   \   00000058   ........           _BLF     ??UnProtect,??UnProtect??rA
   \                     ??PresentWindowsTask_2:
   \   0000005C   FA1FA0E3           MOV      R1,#+1000
   \   00000060   0100A0E3           MOV      R0,#+1
   \   00000064   ........           _BLF     OS_WaitEventTimed,??OS_WaitEventTimed??rA
   \   00000068   000050E3           CMP      R0,#+0
   \   0000006C   0100000A           BEQ      ??PresentWindowsTask_6
   \   00000070   3200A0E3           MOV      R0,#+50
   \   00000074   ........           _BLF     OS_Delay,??OS_Delay??rA
   \                     ??PresentWindowsTask_6:
   \   00000078   ........           LDR      R0,??DataTable24  ;; PhysKeyPressed
   \   0000007C   0010D0E5           LDRB     R1,[R0, #+0]
   \   00000080   FE1001E2           AND      R1,R1,#0xFE
   \   00000084   0010C0E5           STRB     R1,[R0, #+0]
   \   00000088   ........           _BLF     ??Protect,??Protect??rA
   \   0000008C   000094E5           LDR      R0,[R4, #+0]
   \   00000090   690040E2           SUB      R0,R0,#+105
   \   00000094   800E40E2           SUB      R0,R0,#+2048
   \   00000098   330050E3           CMP      R0,#+51
   \   0000009C   A900008A           BHI      ??PresentWindowsTask_7
   \   000000A0   011F8FE2           ADR      R1,??PresentWindowsTask_1
   \   000000A4   0010D1E7           LDRB     R1,[R1, R0]
   \   000000A8   01F18FE0           ADD      PC,PC,R1, LSL #+2
   \                     ??PresentWindowsTask_1:
   \   000000AC   1DA6A6A6           DC8      +29,+166,+166,+166
   \   000000B0   A6A64361           DC8      +166,+166,+67,+97
   \   000000B4   6F7D9788           DC8      +111,+125,+151,+136
   \   000000B8   82A61399           DC8      +130,+166,+19,+153
   \   000000BC   53A6A6A6           DC8      +83,+166,+166,+166
   \   000000C0   A6A6A6A6           DC8      +166,+166,+166,+166
   \   000000C4   A6A6A6A6           DC8      +166,+166,+166,+166
   \   000000C8   A6A6A6A6           DC8      +166,+166,+166,+166
   \   000000CC   A6A6A6A6           DC8      +166,+166,+166,+166
   \   000000D0   A6A6A6A6           DC8      +166,+166,+166,+166
   \   000000D4   A6A6A6A6           DC8      +166,+166,+166,+166
   \   000000D8   A6A6A6A6           DC8      +166,+166,+166,+166
   \   000000DC   A6A6A60C           DC8      +166,+166,+166,+12
   \                     ??PresentWindowsTask_8:
   \   000000E0   ........           LDR      R0,??DataTable25  ;; ConfigWarnings
   \   000000E4   000090E5           LDR      R0,[R0, #+0]
   \   000000E8   000050E3           CMP      R0,#+0
   \   000000EC   9500000A           BEQ      ??PresentWindowsTask_7
   \   000000F0   FA02D0E1           LDRSH    R0,[R0, #+42]
   \   000000F4   ........           _BLF     WM_BringToTop,??WM_BringToTop??rA
   \   000000F8   920000EA           B        ??PresentWindowsTask_7
   \                     ??PresentWindowsTask_9:
   \   000000FC   ........           LDR      R0,??DataTable26  ;; WaterIngrWindow
   \   00000100   001090E5           LDR      R1,[R0, #+0]
   \   00000104   000051E3           CMP      R1,#+0
   \   00000108   8E00000A           BEQ      ??PresentWindowsTask_7
   \   0000010C   0100A0E1           MOV      R0,R1
   \   00000110   441091E5           LDR      R1,[R1, #+68]
   \   00000114   041091E5           LDR      R1,[R1, #+4]
   \   00000118   0FE0A0E1           MOV      LR,PC
   \   0000011C   11FF2FE1           BX       R1
   \   00000120   880000EA           B        ??PresentWindowsTask_7
   \                     ??PresentWindowsTask_10:
   \   00000124   44529FE5           LDR      R5,??PresentWindowsTask_4+0x4  ;; SystemWindow
   \   00000128   000095E5           LDR      R0,[R5, #+0]
   \   0000012C   000050E3           CMP      R0,#+0
   \   00000130   8400000A           BEQ      ??PresentWindowsTask_7
   \   00000134   ........           _BLF     ??Protect_1,??Protect??rA_1
   \   00000138   000095E5           LDR      R0,[R5, #+0]
   \   0000013C   7010D0E5           LDRB     R1,[R0, #+112]
   \   00000140   000051E3           CMP      R1,#+0
   \   00000144   0100001A           BNE      ??PresentWindowsTask_11
   \   00000148   580090E5           LDR      R0,[R0, #+88]
   \   0000014C   ........           _BLF     ??UpdateSysWin,??UpdateSysWin??rA
   \                     ??PresentWindowsTask_11:
   \   00000150   000095E5           LDR      R0,[R5, #+0]
   \   00000154   7110D0E5           LDRB     R1,[R0, #+113]
   \   00000158   000051E3           CMP      R1,#+0
   \   0000015C   0100001A           BNE      ??PresentWindowsTask_12
   \   00000160   5C0090E5           LDR      R0,[R0, #+92]
   \   00000164   ........           _BLF     ??UpdateSysWin_1,??UpdateSysWin??rA_1
   \                     ??PresentWindowsTask_12:
   \   00000168   000095E5           LDR      R0,[R5, #+0]
   \   0000016C   7210D0E5           LDRB     R1,[R0, #+114]
   \   00000170   000051E3           CMP      R1,#+0
   \   00000174   0100001A           BNE      ??PresentWindowsTask_13
   \   00000178   600090E5           LDR      R0,[R0, #+96]
   \   0000017C   ........           _BLF     ??UpdateSysWin_2,??UpdateSysWin??rA_2
   \                     ??PresentWindowsTask_13:
   \   00000180   000095E5           LDR      R0,[R5, #+0]
   \   00000184   7310D0E5           LDRB     R1,[R0, #+115]
   \   00000188   000051E3           CMP      R1,#+0
   \   0000018C   0100001A           BNE      ??PresentWindowsTask_14
   \   00000190   640090E5           LDR      R0,[R0, #+100]
   \   00000194   ........           _BLF     ??UpdateSysWin_3,??UpdateSysWin??rA_3
   \                     ??PresentWindowsTask_14:
   \   00000198   000095E5           LDR      R0,[R5, #+0]
   \   0000019C   7410D0E5           LDRB     R1,[R0, #+116]
   \   000001A0   000051E3           CMP      R1,#+0
   \   000001A4   0100001A           BNE      ??PresentWindowsTask_15
   \   000001A8   680090E5           LDR      R0,[R0, #+104]
   \   000001AC   ........           _BLF     ??UpdateSysWin_4,??UpdateSysWin??rA_4
   \                     ??PresentWindowsTask_15:
   \   000001B0   000095E5           LDR      R0,[R5, #+0]
   \   000001B4   ........           _BLF     ??UnProtect_1,??UnProtect??rA_1
   \   000001B8   620000EA           B        ??PresentWindowsTask_7
   \                     ??PresentWindowsTask_16:
   \   000001BC   B0019FE5           LDR      R0,??PresentWindowsTask_4+0x8  ;; CargoWindow
   \   000001C0   000090E5           LDR      R0,[R0, #+0]
   \   000001C4   000050E3           CMP      R0,#+0
   \   000001C8   5E00000A           BEQ      ??PresentWindowsTask_7
   \   000001CC   A4119FE5           LDR      R1,??PresentWindowsTask_4+0xC  ;; AppSetupCargoIsClosed
   \   000001D0   0010D1E5           LDRB     R1,[R1, #+0]
   \   000001D4   000051E3           CMP      R1,#+0
   \   000001D8   0100000A           BEQ      ??PresentWindowsTask_17
   \                     ??PresentWindowsTask_18:
   \   000001DC   ........           _BLF     ??PWTimer_2,??PWTimer??rA_2
   \   000001E0   580000EA           B        ??PresentWindowsTask_7
   \                     ??PresentWindowsTask_17:
   \   000001E4   90019FE5           LDR      R0,??PresentWindowsTask_4+0x10  ;; AppSetupCargo
   \   000001E8   000090E5           LDR      R0,[R0, #+0]
   \   000001EC   000050E3           CMP      R0,#+0
   \   000001F0   5400000A           BEQ      ??PresentWindowsTask_7
   \   000001F4   ........           _BLF     ??Update_1,??Update??rA_1
   \   000001F8   520000EA           B        ??PresentWindowsTask_7
   \                     ??PresentWindowsTask_19:
   \   000001FC   7C019FE5           LDR      R0,??PresentWindowsTask_4+0x14  ;; TankFarmWindow
   \   00000200   000090E5           LDR      R0,[R0, #+0]
   \   00000204   000050E3           CMP      R0,#+0
   \   00000208   4E00000A           BEQ      ??PresentWindowsTask_7
   \   0000020C   70119FE5           LDR      R1,??PresentWindowsTask_4+0x18  ;; AppSetupTankFarmIsClosed
   \   00000210   0010D1E5           LDRB     R1,[R1, #+0]
   \   00000214   000051E3           CMP      R1,#+0
   \   00000218   EFFFFF1A           BNE      ??PresentWindowsTask_18
   \   0000021C   64019FE5           LDR      R0,??PresentWindowsTask_4+0x1C  ;; AppSetupTankFarm
   \   00000220   000090E5           LDR      R0,[R0, #+0]
   \   00000224   000050E3           CMP      R0,#+0
   \   00000228   4600000A           BEQ      ??PresentWindowsTask_7
   \   0000022C   ........           _BLF     ??Update_2,??Update??rA_2
   \   00000230   440000EA           B        ??PresentWindowsTask_7
   \                     ??PresentWindowsTask_20:
   \   00000234   50019FE5           LDR      R0,??PresentWindowsTask_4+0x20  ;; BallastWindow
   \   00000238   000090E5           LDR      R0,[R0, #+0]
   \   0000023C   000050E3           CMP      R0,#+0
   \   00000240   4000000A           BEQ      ??PresentWindowsTask_7
   \   00000244   44119FE5           LDR      R1,??PresentWindowsTask_4+0x24  ;; AppSetupBallastIsClosed
   \   00000248   0010D1E5           LDRB     R1,[R1, #+0]
   \   0000024C   000051E3           CMP      R1,#+0
   \   00000250   E1FFFF1A           BNE      ??PresentWindowsTask_18
   \   00000254   38019FE5           LDR      R0,??PresentWindowsTask_4+0x28  ;; AppSetupBallast
   \   00000258   000090E5           LDR      R0,[R0, #+0]
   \   0000025C   000050E3           CMP      R0,#+0
   \   00000260   3800000A           BEQ      ??PresentWindowsTask_7
   \   00000264   ........           _BLF     ??Update_3,??Update??rA_3
   \   00000268   360000EA           B        ??PresentWindowsTask_7
   \                     ??PresentWindowsTask_21:
   \   0000026C   24019FE5           LDR      R0,??PresentWindowsTask_4+0x2C  ;; ServiceWindow
   \   00000270   000090E5           LDR      R0,[R0, #+0]
   \   00000274   000050E3           CMP      R0,#+0
   \   00000278   3200000A           BEQ      ??PresentWindowsTask_7
   \   0000027C   18119FE5           LDR      R1,??PresentWindowsTask_4+0x30  ;; AppSetupServiceIsClosed
   \   00000280   0010D1E5           LDRB     R1,[R1, #+0]
   \   00000284   000051E3           CMP      R1,#+0
   \   00000288   D3FFFF1A           BNE      ??PresentWindowsTask_18
   \   0000028C   0C019FE5           LDR      R0,??PresentWindowsTask_4+0x34  ;; AppSetupService
   \   00000290   000090E5           LDR      R0,[R0, #+0]
   \   00000294   000050E3           CMP      R0,#+0
   \   00000298   2A00000A           BEQ      ??PresentWindowsTask_7
   \   0000029C   ........           _BLF     ??Update_4,??Update??rA_4
   \   000002A0   280000EA           B        ??PresentWindowsTask_7
   \                     ??PresentWindowsTask_22:
   \   000002A4   F8009FE5           LDR      R0,??PresentWindowsTask_4+0x38  ;; TankPressWindow
   \                     ??PresentWindowsTask_23:
   \   000002A8   000090E5           LDR      R0,[R0, #+0]
   \   000002AC   000050E3           CMP      R0,#+0
   \   000002B0   2400000A           BEQ      ??PresentWindowsTask_7
   \   000002B4   C8FFFFEA           B        ??PresentWindowsTask_18
   \                     ??PresentWindowsTask_24:
   \   000002B8   E8009FE5           LDR      R0,??PresentWindowsTask_4+0x3C  ;; LevelSwitchWindow
   \   000002BC   000090E5           LDR      R0,[R0, #+0]
   \   000002C0   000050E3           CMP      R0,#+0
   \   000002C4   1F00000A           BEQ      ??PresentWindowsTask_7
   \   000002C8   ........           _BLF     ??PWTimer_3,??PWTimer??rA_3
   \   000002CC   1D0000EA           B        ??PresentWindowsTask_7
   \                     ??PresentWindowsTask_25:
   \   000002D0   D4009FE5           LDR      R0,??PresentWindowsTask_4+0x40  ;; TempWindow
   \   000002D4   000090E5           LDR      R0,[R0, #+0]
   \   000002D8   000050E3           CMP      R0,#+0
   \   000002DC   0A00000A           BEQ      ??PresentWindowsTask_26
   \   000002E0   C8109FE5           LDR      R1,??PresentWindowsTask_4+0x44  ;; AppSetupTempIsClosed
   \   000002E4   0010D1E5           LDRB     R1,[R1, #+0]
   \   000002E8   000051E3           CMP      R1,#+0
   \   000002EC   0100000A           BEQ      ??PresentWindowsTask_27
   \   000002F0   ........           _BLF     ??PWTimer_2,??PWTimer??rA_2
   \   000002F4   040000EA           B        ??PresentWindowsTask_26
   \                     ??PresentWindowsTask_27:
   \   000002F8   B4009FE5           LDR      R0,??PresentWindowsTask_4+0x48  ;; AppSetupTemp
   \   000002FC   000090E5           LDR      R0,[R0, #+0]
   \   00000300   000050E3           CMP      R0,#+0
   \   00000304   0000000A           BEQ      ??PresentWindowsTask_26
   \   00000308   ........           _BLF     ??Update_5,??Update??rA_5
   \                     ??PresentWindowsTask_26:
   \   0000030C   A4009FE5           LDR      R0,??PresentWindowsTask_4+0x4C  ;; LinePressWindow
   \   00000310   E4FFFFEA           B        ??PresentWindowsTask_23
   \                     ??PresentWindowsTask_28:
   \   00000314   A0009FE5           LDR      R0,??PresentWindowsTask_4+0x50  ;; VoidSpaceWindow
   \   00000318   000090E5           LDR      R0,[R0, #+0]
   \   0000031C   000050E3           CMP      R0,#+0
   \   00000320   0800000A           BEQ      ??PresentWindowsTask_7
   \   00000324   94109FE5           LDR      R1,??PresentWindowsTask_4+0x54  ;; AppSetupVoidSpaceIsClosed
   \   00000328   0010D1E5           LDRB     R1,[R1, #+0]
   \   0000032C   000051E3           CMP      R1,#+0
   \   00000330   A9FFFF1A           BNE      ??PresentWindowsTask_18
   \   00000334   88009FE5           LDR      R0,??PresentWindowsTask_4+0x58  ;; AppSetupVoidSpace
   \   00000338   000090E5           LDR      R0,[R0, #+0]
   \   0000033C   000050E3           CMP      R0,#+0
   \   00000340   0000000A           BEQ      ??PresentWindowsTask_7
   \   00000344   ........           _BLF     ??Update_6,??Update??rA_6
   \                     ??PresentWindowsTask_7:
   \   00000348   78009FE5           LDR      R0,??PresentWindowsTask_4+0x5C  ;; TankDetails
   \   0000034C   000090E5           LDR      R0,[R0, #+0]
   \   00000350   000050E3           CMP      R0,#+0
   \   00000354   37FFFF0A           BEQ      ??PresentWindowsTask_3
   \   00000358   2C11D0E5           LDRB     R1,[R0, #+300]
   \   0000035C   000051E3           CMP      R1,#+0
   \   00000360   34FFFF1A           BNE      ??PresentWindowsTask_3
   \   00000364   ........           _BLF     ??Update_7,??Update??rA_7
   \   00000368   3AFFFFEA           B        ??PresentWindowsTask_5
   \                     ??PresentWindowsTask_4:
   \   0000036C   ........           DC32     SensorDetails
   \   00000370   ........           DC32     SystemWindow
   \   00000374   ........           DC32     CargoWindow
   \   00000378   ........           DC32     AppSetupCargoIsClosed
   \   0000037C   ........           DC32     AppSetupCargo
   \   00000380   ........           DC32     TankFarmWindow
   \   00000384   ........           DC32     AppSetupTankFarmIsClosed
   \   00000388   ........           DC32     AppSetupTankFarm
   \   0000038C   ........           DC32     BallastWindow
   \   00000390   ........           DC32     AppSetupBallastIsClosed
   \   00000394   ........           DC32     AppSetupBallast
   \   00000398   ........           DC32     ServiceWindow
   \   0000039C   ........           DC32     AppSetupServiceIsClosed
   \   000003A0   ........           DC32     AppSetupService
   \   000003A4   ........           DC32     TankPressWindow
   \   000003A8   ........           DC32     LevelSwitchWindow
   \   000003AC   ........           DC32     TempWindow
   \   000003B0   ........           DC32     AppSetupTempIsClosed
   \   000003B4   ........           DC32     AppSetupTemp
   \   000003B8   ........           DC32     LinePressWindow
   \   000003BC   ........           DC32     VoidSpaceWindow
   \   000003C0   ........           DC32     AppSetupVoidSpaceIsClosed
   \   000003C4   ........           DC32     AppSetupVoidSpace
   \   000003C8   ........           DC32     TankDetails
    701              }
    702          }
    703          
    704          
    705          /*******************************************************************
    706          *       _GUI_Task
    707          *  This task does the background processing.
    708          *  The MainTask job is to update invalid windows, but other things such as
    709          *  evaluating mouse or touch input may also be done.
    710          */

   \                                 In segment CODE, align 4, keep-with-next
    711          static void _GUI_Task(void) {
   \                     ??_GUI_Task:
   \   00000000   00402DE9           PUSH     {LR}
    712              while ( true ) {
    713                  GUI_Exec();                                         /* Do the background work ... Update windows etc.) */
   \                     ??_GUI_Task_1:
   \   00000004   ........           _BLF     GUI_Exec,??GUI_Exec??rA
    714                  //      GUI_TOUCH_Exec();
    715                  GUI_X_ExecIdle();                       /* Nothing left to do for the moment ... Idle processing */
   \   00000008   ........           _BLF     GUI_X_ExecIdle,??GUI_X_ExecIdle??rA
   \   0000000C   FCFFFFEA           B        ??_GUI_Task_1
    716              }
    717          }
    718          
    719          ///////////////////////////////////////////////////////////////////
    720          //
    721          //  Handles AN_ZB485 and AN_ZBANA
    722          //
    723          ///////////////////////////////////////////////////////////////////
    724          #ifdef S2TXU
    725          OS_TASK *ANPRO10IOTask;
    726          #endif

   \                                 In segment CODE, align 4, keep-with-next
    727          void ANPRO10_IO_Handler(TSNUart * CompPtr) {
    728          #ifdef S2TXU
    729              ANPRO10IOTask = OS_GetpCurrentTask();
   \                     ??ANPRO10_IO_Handler:
   \   00000000   F8129FE5           LDR      R1,??ANPRO10_IO_Handler_1  ;; ANPRO10IOTask
   \   00000004   F0432DE9           PUSH     {R4-R9,LR}
    730              OS_SetPriority(ANPRO10IOTask, ANPRO10_TASK_PRIORITY);
    731          
    732          
    733              set<PRogramObjectBase *>IOUnitList = PROTanksystemUnit::MySelf->UnitPortList[CompPtr->PortNumber];
   \   00000008   ........           LDR      R4,??DataTable27  ;; ??MySelf
   \   0000000C   0050A0E1           MOV      R5,R0
   \   00000010   EC029FE5           LDR      R0,??ANPRO10_IO_Handler_1+0x4  ;; OS_pCurrentTask
   \   00000014   60D04DE2           SUB      SP,SP,#+96
   \   00000018   000090E5           LDR      R0,[R0, #+0]
   \   0000001C   000081E5           STR      R0,[R1, #+0]
   \   00000020   5F10A0E3           MOV      R1,#+95
   \   00000024   ........           _BLF     OS_SetPriority,??OS_SetPriority??rA
   \   00000028   800095E5           LDR      R0,[R5, #+128]
   \   0000002C   002094E5           LDR      R2,[R4, #+0]
   \   00000030   1810A0E3           MOV      R1,#+24
   \   00000034   912020E0           MLA      R0,R1,R0,R2
   \   00000038   9F5F80E2           ADD      R5,R0,#+636
   \   0000003C   1460D5E5           LDRB     R6,[R5, #+20]
   \   00000040   10008DE2           ADD      R0,SP,#+16
   \   00000044   ........           _BLF     ??_Clear,??_Clear??rA
   \   00000048   2460CDE5           STRB     R6,[SP, #+36]
   \   0000004C   041095E5           LDR      R1,[R5, #+4]
   \   00000050   10208DE2           ADD      R2,SP,#+16
   \   00000054   10008DE2           ADD      R0,SP,#+16
   \   00000058   ........           _BLF     ??_Copy,??_Copy??rA
   \   0000005C   14008DE5           STR      R0,[SP, #+20]
   \   00000060   101095E5           LDR      R1,[R5, #+16]
   \   00000064   20108DE5           STR      R1,[SP, #+32]
   \   00000068   0D10D0E5           LDRB     R1,[R0, #+13]
   \   0000006C   000051E3           CMP      R1,#+0
   \   00000070   1500001A           BNE      ??ANPRO10_IO_Handler_2
   \   00000074   0010A0E1           MOV      R1,R0
   \   00000078   002091E5           LDR      R2,[R1, #+0]
   \   0000007C   0D20D2E5           LDRB     R2,[R2, #+13]
   \   00000080   000052E3           CMP      R2,#+0
   \   00000084   0400001A           BNE      ??ANPRO10_IO_Handler_3
   \                     ??ANPRO10_IO_Handler_4:
   \   00000088   001091E5           LDR      R1,[R1, #+0]
   \   0000008C   002091E5           LDR      R2,[R1, #+0]
   \   00000090   0D20D2E5           LDRB     R2,[R2, #+13]
   \   00000094   000052E3           CMP      R2,#+0
   \   00000098   FAFFFF0A           BEQ      ??ANPRO10_IO_Handler_4
   \                     ??ANPRO10_IO_Handler_3:
   \   0000009C   10108DE5           STR      R1,[SP, #+16]
   \   000000A0   081090E5           LDR      R1,[R0, #+8]
   \   000000A4   0D10D1E5           LDRB     R1,[R1, #+13]
   \   000000A8   000051E3           CMP      R1,#+0
   \   000000AC   0400001A           BNE      ??ANPRO10_IO_Handler_5
   \                     ??ANPRO10_IO_Handler_6:
   \   000000B0   080090E5           LDR      R0,[R0, #+8]
   \   000000B4   081090E5           LDR      R1,[R0, #+8]
   \   000000B8   0D10D1E5           LDRB     R1,[R1, #+13]
   \   000000BC   000051E3           CMP      R1,#+0
   \   000000C0   FAFFFF0A           BEQ      ??ANPRO10_IO_Handler_6
   \                     ??ANPRO10_IO_Handler_5:
   \   000000C4   18008DE5           STR      R0,[SP, #+24]
   \   000000C8   020000EA           B        ??ANPRO10_IO_Handler_7
   \                     ??ANPRO10_IO_Handler_2:
   \   000000CC   10108DE2           ADD      R1,SP,#+16
   \   000000D0   10108DE5           STR      R1,[SP, #+16]
   \   000000D4   18108DE5           STR      R1,[SP, #+24]
    734              unsigned NumberOfRequests = 0;
    735              set<IOUnit *>IOUnitSet;
   \                     ??ANPRO10_IO_Handler_7:
   \   000000D8   0110A0E3           MOV      R1,#+1
   \   000000DC   04008DE2           ADD      R0,SP,#+4
   \   000000E0   ........           _BLF     __data_memzero,??__data_memzero??rA
   \   000000E4   28008DE2           ADD      R0,SP,#+40
   \   000000E8   ........           _BLF     ??_Clear,??_Clear??rA
   \   000000EC   0410DDE5           LDRB     R1,[SP, #+4]
    736              set<PRogramObject *>TaskUniquePROSet;
   \   000000F0   04008DE2           ADD      R0,SP,#+4
   \   000000F4   0050A0E3           MOV      R5,#+0
   \   000000F8   3C10CDE5           STRB     R1,[SP, #+60]
   \   000000FC   0110A0E3           MOV      R1,#+1
   \   00000100   ........           _BLF     __data_memzero,??__data_memzero??rA
   \   00000104   40008DE2           ADD      R0,SP,#+64
   \   00000108   ........           _BLF     ??_Clear,??_Clear??rA
   \   0000010C   0410DDE5           LDRB     R1,[SP, #+4]
   \   00000110   5410CDE5           STRB     R1,[SP, #+84]
    737              if ( !IOUnitList.empty() ) {
   \   00000114   20009DE5           LDR      R0,[SP, #+32]
   \   00000118   000050E3           CMP      R0,#+0
   \   0000011C   6500000A           BEQ      ??ANPRO10_IO_Handler_8
    738                  set<PRogramObjectBase *>::iterator pBIt;
    739                  for ( pBIt = IOUnitList.begin(); pBIt != IOUnitList.end(); pBIt++ ) {
   \   00000120   10009DE5           LDR      R0,[SP, #+16]
   \   00000124   5F7FA0E3           MOV      R7,#+380
   \   00000128   0C008DE5           STR      R0,[SP, #+12]
   \   0000012C   0B0000EA           B        ??ANPRO10_IO_Handler_9
    740                      IOUnit *IOElement = (IOUnit *)(*pBIt);
    741                      NumberOfRequests += IOElement->GetRequestNumber();
    742                      IOUnitSet.insert(IOElement);
    743                      set<PRogramObject *>::iterator pBIt;
    744                      for ( pBIt = IOElement->IOUniquePROSet.begin(); pBIt != IOElement->IOUniquePROSet.end(); pBIt++ ) {
    745                          PRogramObject *IOElement = *pBIt;
    746                          TaskUniquePROSet.insert(IOElement);
   \                     ??ANPRO10_IO_Handler_10:
   \   00000130   102091E5           LDR      R2,[R1, #+16]
   \   00000134   40108DE2           ADD      R1,SP,#+64
   \   00000138   58008DE2           ADD      R0,SP,#+88
   \   0000013C   ........           _BLF     ??insert_1,??insert??rA
    747                      }
   \   00000140   0D00A0E1           MOV      R0,SP
   \   00000144   ........           _BLF     ??_Inc,??_Inc??rA
   \                     ??ANPRO10_IO_Handler_11:
   \   00000148   00109DE5           LDR      R1,[SP, #+0]
   \   0000014C   060087E0           ADD      R0,R7,R6
   \   00000150   000051E1           CMP      R1,R0
   \   00000154   F5FFFF1A           BNE      ??ANPRO10_IO_Handler_10
   \   00000158   0C008DE2           ADD      R0,SP,#+12
   \   0000015C   ........           _BLF     ??_Inc,??_Inc??rA
   \                     ??ANPRO10_IO_Handler_9:
   \   00000160   0C109DE5           LDR      R1,[SP, #+12]
   \   00000164   10008DE2           ADD      R0,SP,#+16
   \   00000168   000051E1           CMP      R1,R0
   \   0000016C   0F00000A           BEQ      ??ANPRO10_IO_Handler_12
   \   00000170   106091E5           LDR      R6,[R1, #+16]
   \   00000174   0600A0E1           MOV      R0,R6
   \   00000178   A41096E5           LDR      R1,[R6, #+164]
   \   0000017C   901091E5           LDR      R1,[R1, #+144]
   \   00000180   0FE0A0E1           MOV      LR,PC
   \   00000184   11FF2FE1           BX       R1
   \   00000188   055080E0           ADD      R5,R0,R5
   \   0000018C   0620A0E1           MOV      R2,R6
   \   00000190   28108DE2           ADD      R1,SP,#+40
   \   00000194   58008DE2           ADD      R0,SP,#+88
   \   00000198   ........           _BLF     ??insert,??insert??rA_1
   \   0000019C   0010A0E3           MOV      R1,#+0
   \   000001A0   00108DE5           STR      R1,[SP, #+0]
   \   000001A4   060097E7           LDR      R0,[R7, +R6]
   \   000001A8   00008DE5           STR      R0,[SP, #+0]
   \   000001AC   E5FFFFEA           B        ??ANPRO10_IO_Handler_11
    748                  }
    749                  NumberOfRequests += ModbusRegisterIn::UniquePROSet.size();
   \                     ??ANPRO10_IO_Handler_12:
   \   000001B0   50619FE5           LDR      R6,??ANPRO10_IO_Handler_1+0x8  ;; ??UniquePROSet
   \   000001B4   100096E5           LDR      R0,[R6, #+16]
   \   000001B8   055080E0           ADD      R5,R0,R5
    750                  set<PRogramObject *>::iterator pBIt2;
    751                  for ( pBIt2 = ModbusRegisterIn::UniquePROSet.begin(); pBIt2 != ModbusRegisterIn::UniquePROSet.end(); pBIt2++ ) {
   \   000001BC   000096E5           LDR      R0,[R6, #+0]
   \   000001C0   08008DE5           STR      R0,[SP, #+8]
   \   000001C4   050000EA           B        ??ANPRO10_IO_Handler_13
    752                      PRogramObject *IOElement = *pBIt2;
    753                      TaskUniquePROSet.insert(IOElement);
   \                     ??ANPRO10_IO_Handler_14:
   \   000001C8   102090E5           LDR      R2,[R0, #+16]
   \   000001CC   40108DE2           ADD      R1,SP,#+64
   \   000001D0   58008DE2           ADD      R0,SP,#+88
   \   000001D4   ........           _BLF     ??insert_1,??insert??rA
    754                  }
   \   000001D8   08008DE2           ADD      R0,SP,#+8
   \   000001DC   ........           _BLF     ??_Inc,??_Inc??rA
   \                     ??ANPRO10_IO_Handler_13:
   \   000001E0   08009DE5           LDR      R0,[SP, #+8]
   \   000001E4   060050E1           CMP      R0,R6
   \   000001E8   F6FFFF1A           BNE      ??ANPRO10_IO_Handler_14
    755                  if ( !PROProjectInfo::SimulateIO && NumberOfRequests ) {
   \   000001EC   18019FE5           LDR      R0,??ANPRO10_IO_Handler_1+0xC  ;; ??SimulateIO
   \   000001F0   0000D0E5           LDRB     R0,[R0, #+0]
   \   000001F4   000050E3           CMP      R0,#+0
   \   000001F8   2C00001A           BNE      ??ANPRO10_IO_Handler_15
   \   000001FC   000055E3           CMP      R5,#+0
   \   00000200   2A00000A           BEQ      ??ANPRO10_IO_Handler_15
    756                      int t0 = OS_Time;
   \   00000204   04519FE5           LDR      R5,??ANPRO10_IO_Handler_1+0x10  ;; OS_Time
    757                      // Forever
    758                      float AvgTime = 0.0;
   \   00000208   0080A0E3           MOV      R8,#+0
   \   0000020C   007095E5           LDR      R7,[R5, #+0]
   \   00000210   4064A0E3           MOV      R6,#+1073741824
   \   00000214   486786E3           ORR      R6,R6,#0x1200000
   \   00000218   200000EA           B        ??ANPRO10_IO_Handler_16
    759                      while ( true ) {
    760                          int StartTime = OS_Time;
    761                          set<IOUnit *>::iterator pBIt;
    762                          for ( pBIt = IOUnitSet.begin(); pBIt != IOUnitSet.end(); pBIt++ ) {
    763                              IOUnit *IOElement = *pBIt;
   \                     ??ANPRO10_IO_Handler_17:
   \   0000021C   102091E5           LDR      R2,[R1, #+16]
    764                              IOElement->HandleIO(10);
   \   00000220   0A10A0E3           MOV      R1,#+10
   \   00000224   0200A0E1           MOV      R0,R2
   \   00000228   A42092E5           LDR      R2,[R2, #+164]
   \   0000022C   882092E5           LDR      R2,[R2, #+136]
   \   00000230   0FE0A0E1           MOV      LR,PC
   \   00000234   12FF2FE1           BX       R2
    765                          }
   \   00000238   0D00A0E1           MOV      R0,SP
   \   0000023C   ........           _BLF     ??_Inc,??_Inc??rA
   \                     ??ANPRO10_IO_Handler_18:
   \   00000240   00109DE5           LDR      R1,[SP, #+0]
   \   00000244   28008DE2           ADD      R0,SP,#+40
   \   00000248   000051E1           CMP      R1,R0
   \   0000024C   F2FFFF1A           BNE      ??ANPRO10_IO_Handler_17
    766                          OS_DelayUntil(t0 += RS485_IO_PERIODE);
   \   00000250   7D7E87E2           ADD      R7,R7,#+2000
   \   00000254   0700A0E1           MOV      R0,R7
   \   00000258   ........           _BLF     OS_DelayUntil,??OS_DelayUntil??rA
    767                          AvgTime = FilterVal(AvgTime, OS_Time - StartTime, 10.0);
   \   0000025C   000095E5           LDR      R0,[R5, #+0]
   \   00000260   090040E0           SUB      R0,R0,R9
   \   00000264   ........           _BLF     __longToFloat,??__longToFloat??rA
   \   00000268   0010A0E1           MOV      R1,R0
   \   0000026C   0620A0E1           MOV      R2,R6
   \   00000270   0800A0E1           MOV      R0,R8
   \   00000274   ........           _BLF     ??FilterVal,??FilterVal??rA
    768          
    769                          if ( PROTanksystemUnit::MySelf ) PROTanksystemUnit::MySelf->SetIOLoadDelay(AvgTime);
   \   00000278   009094E5           LDR      R9,[R4, #+0]
   \   0000027C   0080A0E1           MOV      R8,R0
   \   00000280   000059E3           CMP      R9,#+0
   \   00000284   0300000A           BEQ      ??ANPRO10_IO_Handler_19
   \   00000288   ........           _BLF     __floatToLong,??__floatToLong??rA
   \   0000028C   0010A0E1           MOV      R1,R0
   \   00000290   0900A0E1           MOV      R0,R9
   \   00000294   ........           _BLF     ??SetIOLoadDelay,??SetIOLoadDelay??rA
    770                          RecalcProgramObjects(TaskUniquePROSet);
   \                     ??ANPRO10_IO_Handler_19:
   \   00000298   40008DE2           ADD      R0,SP,#+64
   \   0000029C   ........           _BLF     ??RecalcProgramObjects,??RecalcProgramObjects??rA
   \                     ??ANPRO10_IO_Handler_16:
   \   000002A0   009095E5           LDR      R9,[R5, #+0]
   \   000002A4   28009DE5           LDR      R0,[SP, #+40]
   \   000002A8   00008DE5           STR      R0,[SP, #+0]
   \   000002AC   E3FFFFEA           B        ??ANPRO10_IO_Handler_18
    771                      }
    772                  } else { //End if (NumberOfRequests)
    773                      OS_Terminate(NULL);
   \                     ??ANPRO10_IO_Handler_15:
   \   000002B0   0000A0E3           MOV      R0,#+0
   \   000002B4   ........           _BLF     OS_Terminate,??OS_Terminate??rA
    774                  }
    775              }
    776          #endif
    777          }
   \                     ??ANPRO10_IO_Handler_8:
   \   000002B8   44109DE5           LDR      R1,[SP, #+68]
   \   000002BC   40008DE2           ADD      R0,SP,#+64
   \   000002C0   ........           _BLF     ??_Erase,??_Erase??rA
   \   000002C4   40008DE2           ADD      R0,SP,#+64
   \   000002C8   ........           _BLF     ??_Clear,??_Clear??rA
   \   000002CC   2C109DE5           LDR      R1,[SP, #+44]
   \   000002D0   28008DE2           ADD      R0,SP,#+40
   \   000002D4   ........           _BLF     ??_Erase_2,??_Erase??rA_1
   \   000002D8   28008DE2           ADD      R0,SP,#+40
   \   000002DC   ........           _BLF     ??_Clear,??_Clear??rA
   \   000002E0   14109DE5           LDR      R1,[SP, #+20]
   \   000002E4   10008DE2           ADD      R0,SP,#+16
   \   000002E8   ........           _BLF     ??_Erase_1,??_Erase??rA_2
   \   000002EC   10008DE2           ADD      R0,SP,#+16
   \   000002F0   ........           _BLF     ??_Clear,??_Clear??rA
   \   000002F4   60D08DE2           ADD      SP,SP,#+96
   \   000002F8   F043BDE8           POP      {R4-R9,LR}
   \   000002FC   1EFF2FE1           BX       LR               ;; return
   \                     ??ANPRO10_IO_Handler_1:
   \   00000300   ........           DC32     ANPRO10IOTask
   \   00000304   ........           DC32     OS_pCurrentTask
   \   00000308   ........           DC32     ??UniquePROSet
   \   0000030C   ........           DC32     ??SimulateIO
   \   00000310   ........           DC32     OS_Time
    778          
    779          //////////////////////////////////////////////////////////////////////////////////
    780          //
    781          //      Create tasks here
    782          //
    783          //////////////////////////////////////////////////////////////////////////////////
    784          
    785          
    786          TSN_TASK aTCB[20];       /* Task control blocks */
    787          TSN_TASK ReceiverTCB[7]; /* Task control blocks */
    788          

   \                                 In segment CODE, align 4, keep-with-next
    789          void StartWindowTasks(void) {
    790          /* Stacks */
    791              static TSN_STACKPTR int AlBlinkTaskStack[2 * 1024];
    792              static TSN_STACKPTR int PWinTaskStack[8 * 1024]; //6
    793              static TSN_STACKPTR int GUITaskStack[8 * 1024]; //8
    794              static TSN_STACKPTR int AlarmWinStack[2 * 1024];
    795          
    796              CREATE_TASK(&aTCB[0], "AlarmBlinkTask",     AlarmTask,          80, AlBlinkTaskStack);      //Alarm button blink
   \                     ??StartWindowTasks:
   \   00000000   00319FE5           LDR      R3,??StartWindowTasks_1  ;; ??AlarmTask
   \   00000004   30402DE9           PUSH     {R4,R5,LR}
   \   00000008   FC409FE5           LDR      R4,??StartWindowTasks_1+0x4  ;; `?<Constant "Alarm Window">`
   \   0000000C   ........           LDR      R5,??DataTable36  ;; ExternAlarmSilence
   \   00000010   0200A0E3           MOV      R0,#+2
   \   00000014   01002DE9           PUSH     {R0}
   \   00000018   800DA0E3           MOV      R0,#+8192
   \   0000001C   01002DE9           PUSH     {R0}
   \   00000020   5800A0E3           MOV      R0,#+88
   \   00000024   C30C80E3           ORR      R0,R0,#0xC300
   \   00000028   050080E0           ADD      R0,R0,R5
   \   0000002C   01002DE9           PUSH     {R0}
   \   00000030   5020A0E3           MOV      R2,#+80
   \   00000034   281084E2           ADD      R1,R4,#+40
   \   00000038   9800A0E3           MOV      R0,#+152
   \   0000003C   BC0C80E3           ORR      R0,R0,#0xBC00
   \   00000040   050080E0           ADD      R0,R0,R5
   \   00000044   ........           _BLF     OS_CreateTask_SP,??OS_CreateTask_SP??rA
    797              CREATE_TASK(&aTCB[1], "PresWinTask",     PresentWindowsTask, 50, PWinTaskStack);
   \   00000048   C0309FE5           LDR      R3,??StartWindowTasks_1+0x8  ;; ??PresentWindowsTask
   \   0000004C   0200A0E3           MOV      R0,#+2
   \   00000050   01002DE9           PUSH     {R0}
   \   00000054   800CA0E3           MOV      R0,#+32768
   \   00000058   01002DE9           PUSH     {R0}
   \   0000005C   5800A0E3           MOV      R0,#+88
   \   00000060   E30C80E3           ORR      R0,R0,#0xE300
   \   00000064   050080E0           ADD      R0,R0,R5
   \   00000068   01002DE9           PUSH     {R0}
   \   0000006C   3220A0E3           MOV      R2,#+50
   \   00000070   1C1084E2           ADD      R1,R4,#+28
   \   00000074   D800A0E3           MOV      R0,#+216
   \   00000078   BC0C80E3           ORR      R0,R0,#0xBC00
   \   0000007C   050080E0           ADD      R0,R0,R5
   \   00000080   ........           _BLF     OS_CreateTask_SP,??OS_CreateTask_SP??rA
    798              CREATE_TASK(&aTCB[2], "GUI_TASK",     _GUI_Task,          10, GUITaskStack);      //Background window update
   \   00000084   88309FE5           LDR      R3,??StartWindowTasks_1+0xC  ;; ??_GUI_Task
   \   00000088   0200A0E3           MOV      R0,#+2
   \   0000008C   01002DE9           PUSH     {R0}
   \   00000090   800CA0E3           MOV      R0,#+32768
   \   00000094   01002DE9           PUSH     {R0}
   \   00000098   580BA0E3           MOV      R0,#+90112
   \   0000009C   D60F80E3           ORR      R0,R0,#0x358
   \   000000A0   050080E0           ADD      R0,R0,R5
   \   000000A4   01002DE9           PUSH     {R0}
   \   000000A8   0A20A0E3           MOV      R2,#+10
   \   000000AC   101084E2           ADD      R1,R4,#+16
   \   000000B0   1800A0E3           MOV      R0,#+24
   \   000000B4   BD0C80E3           ORR      R0,R0,#0xBD00
   \   000000B8   050080E0           ADD      R0,R0,R5
   \   000000BC   ........           _BLF     OS_CreateTask_SP,??OS_CreateTask_SP??rA
    799              CREATE_TASK(&aTCB[4], "Alarm Window",     AlarmWindowTask,    60, AlarmWinStack);     //Alarm window
   \   000000C0   50309FE5           LDR      R3,??StartWindowTasks_1+0x10  ;; ??AlarmWindowTask
   \   000000C4   24D08DE2           ADD      SP,SP,#+36
   \   000000C8   0200A0E3           MOV      R0,#+2
   \   000000CC   01002DE9           PUSH     {R0}
   \   000000D0   800DA0E3           MOV      R0,#+8192
   \   000000D4   01002DE9           PUSH     {R0}
   \   000000D8   780BA0E3           MOV      R0,#+122880
   \   000000DC   D60F80E3           ORR      R0,R0,#0x358
   \   000000E0   050080E0           ADD      R0,R0,R5
   \   000000E4   01002DE9           PUSH     {R0}
   \   000000E8   3C20A0E3           MOV      R2,#+60
   \   000000EC   0410A0E1           MOV      R1,R4
   \   000000F0   9800A0E3           MOV      R0,#+152
   \   000000F4   BD0C80E3           ORR      R0,R0,#0xBD00
   \   000000F8   050080E0           ADD      R0,R0,R5
   \   000000FC   ........           _BLF     OS_CreateTask_SP,??OS_CreateTask_SP??rA
    800          }
   \   00000100   3740BDE8           POP      {R0-R2,R4,R5,LR}
   \   00000104   1EFF2FE1           BX       LR               ;; return
   \                     ??StartWindowTasks_1:
   \   00000108   ........           DC32     ??AlarmTask
   \   0000010C   ........           DC32     `?<Constant "Alarm Window">`
   \   00000110   ........           DC32     ??PresentWindowsTask
   \   00000114   ........           DC32     ??_GUI_Task
   \   00000118   ........           DC32     ??AlarmWindowTask
    801          
    802          TSN_TASK SendStaticDataTaskHandle;                                                   /* Task control blocks */
    803          

   \                                 In segment CODE, align 4, keep-with-next
    804          void StartSendStaticDataTask(void) {
    805              static int SendStaticDataTaskStack[8 * 512];
    806              CREATE_TASK(&SendStaticDataTaskHandle, "Send Static Data", PRogramObjectBase::SendStaticData,  80, SendStaticDataTaskStack);
   \                     ??StartSendStaticDataTask:
   \   00000000   30009FE5           LDR      R0,??StartSendStaticDataTask_1  ;; SendStaticDataTaskHandle
   \   00000004   30309FE5           LDR      R3,??StartSendStaticDataTask_1+0x4  ;; ??SendStaticData
   \   00000008   00402DE9           PUSH     {LR}
   \   0000000C   0210A0E3           MOV      R1,#+2
   \   00000010   02002DE9           PUSH     {R1}
   \   00000014   401CA0E3           MOV      R1,#+16384
   \   00000018   02002DE9           PUSH     {R1}
   \   0000001C   401080E2           ADD      R1,R0,#+64
   \   00000020   02002DE9           PUSH     {R1}
   \   00000024   14109FE5           LDR      R1,??StartSendStaticDataTask_1+0x8  ;; `?<Constant "Send Static Data">`
   \   00000028   5020A0E3           MOV      R2,#+80
   \   0000002C   ........           _BLF     OS_CreateTask_SP,??OS_CreateTask_SP??rA
    807          
    808          }
   \   00000030   0740BDE8           POP      {R0-R2,LR}
   \   00000034   1EFF2FE1           BX       LR               ;; return
   \                     ??StartSendStaticDataTask_1:
   \   00000038   ........           DC32     SendStaticDataTaskHandle
   \   0000003C   ........           DC32     ??SendStaticData
   \   00000040   ........           DC32     `?<Constant "Send Static Data">`

   \                                 In segment CODE, align 4, keep-with-next
    809          void StartMiscTasks(void) {
    810              if ( Master ) {
   \                     ??StartMiscTasks:
   \   00000000   ........           LDR      R0,??DataTable29  ;; Master
   \   00000004   30402DE9           PUSH     {R4,R5,LR}
   \   00000008   0000D0E5           LDRB     R0,[R0, #+0]
   \   0000000C   78409FE5           LDR      R4,??StartMiscTasks_1  ;; `?<Constant "ControllerTask">`
   \   00000010   78509FE5           LDR      R5,??StartMiscTasks_1+0x4  ;; LogTaskHandle
   \   00000014   000050E3           CMP      R0,#+0
   \   00000018   0B00000A           BEQ      ??StartMiscTasks_2
    811                  CREATE_TASK(&LogTaskHandle, "LogTask", LogTask,  78, LogTaskStack);
   \   0000001C   70309FE5           LDR      R3,??StartMiscTasks_1+0x8  ;; ??LogTask
   \   00000020   0200A0E3           MOV      R0,#+2
   \   00000024   01002DE9           PUSH     {R0}
   \   00000028   400CA0E3           MOV      R0,#+16384
   \   0000002C   01002DE9           PUSH     {R0}
   \   00000030   400085E2           ADD      R0,R5,#+64
   \   00000034   01002DE9           PUSH     {R0}
   \   00000038   4E20A0E3           MOV      R2,#+78
   \   0000003C   101084E2           ADD      R1,R4,#+16
   \   00000040   0500A0E1           MOV      R0,R5
   \   00000044   ........           _BLF     OS_CreateTask_SP,??OS_CreateTask_SP??rA
   \   00000048   0CD08DE2           ADD      SP,SP,#+12
    812              }
    813              CREATE_TASK(&ControllerTaskHandle, "ControllerTask", ControllerTask,  79, ControllerTaskStack);
   \                     ??StartMiscTasks_2:
   \   0000004C   44309FE5           LDR      R3,??StartMiscTasks_1+0xC  ;; ??ControllerTask
   \   00000050   0200A0E3           MOV      R0,#+2
   \   00000054   01002DE9           PUSH     {R0}
   \   00000058   800EA0E3           MOV      R0,#+2048
   \   0000005C   01002DE9           PUSH     {R0}
   \   00000060   E20D80E2           ADD      R0,R0,#+14464
   \   00000064   050080E0           ADD      R0,R0,R5
   \   00000068   01002DE9           PUSH     {R0}
   \   0000006C   4F20A0E3           MOV      R2,#+79
   \   00000070   0410A0E1           MOV      R1,R4
   \   00000074   4000A0E3           MOV      R0,#+64
   \   00000078   400C80E3           ORR      R0,R0,#0x4000
   \   0000007C   050080E0           ADD      R0,R0,R5
   \   00000080   ........           _BLF     OS_CreateTask_SP,??OS_CreateTask_SP??rA
    814          }
   \   00000084   3740BDE8           POP      {R0-R2,R4,R5,LR}
   \   00000088   1EFF2FE1           BX       LR               ;; return
   \                     ??StartMiscTasks_1:
   \   0000008C   ........           DC32     `?<Constant "ControllerTask">`
   \   00000090   ........           DC32     LogTaskHandle
   \   00000094   ........           DC32     ??LogTask
   \   00000098   ........           DC32     ??ControllerTask
    815          
    816          TSN_TASK ExecSimulatorTCB;

   \                                 In segment CODE, align 4, keep-with-next
    817          void StartSimulatorTasks(void) {
    818              //static TSN_STACKPTR int Stack_3[2 * 1024];
    819          
    820          
    821              //CREATE_TASK(&aTCB[3], "SimulatorTask", IOSimulator::ExecSimulator,  30, Stack_3);   // Simulator
    822          }
   \                     ??StartSimulatorTasks:
   \   00000000   1EFF2FE1           BX       LR               ;; return
    823          

   \                                 In segment CODE, align 4, keep-with-next
    824          void StartSysInfoTask(void) {
   \                     ??StartSysInfoTask:
   \   00000000   00402DE9           PUSH     {LR}
    825              CREATE_TASK(&PROTanksystemUnit::TaskHandle, "SysinfoTask",   PROTanksystemUnit::SysInfoTask,   60, PROTanksystemUnit::TaskStack);
   \   00000004   2C309FE5           LDR      R3,??StartSysInfoTask_1  ;; ??SysInfoTask
   \   00000008   2C109FE5           LDR      R1,??StartSysInfoTask_1+0x4  ;; `?<Constant "SysinfoTask">`
   \   0000000C   0200A0E3           MOV      R0,#+2
   \   00000010   01002DE9           PUSH     {R0}
   \   00000014   800DA0E3           MOV      R0,#+8192
   \   00000018   01002DE9           PUSH     {R0}
   \   0000001C   1C009FE5           LDR      R0,??StartSysInfoTask_1+0x8  ;; ??TaskStack
   \   00000020   3C20A0E3           MOV      R2,#+60
   \   00000024   01002DE9           PUSH     {R0}
   \   00000028   14009FE5           LDR      R0,??StartSysInfoTask_1+0xC  ;; ??TaskHandle
   \   0000002C   ........           _BLF     OS_CreateTask_SP,??OS_CreateTask_SP??rA
    826          }
   \   00000030   0740BDE8           POP      {R0-R2,LR}
   \   00000034   1EFF2FE1           BX       LR               ;; return
   \                     ??StartSysInfoTask_1:
   \   00000038   ........           DC32     ??SysInfoTask
   \   0000003C   ........           DC32     `?<Constant "SysinfoTask">`
   \   00000040   ........           DC32     ??TaskStack
   \   00000044   ........           DC32     ??TaskHandle
    827          #ifndef ANTDUSIM
    828          OS_MEMF pUnPackMem;
    829          #endif

   \                                 In segment CODE, align 4, keep-with-next
    830          void StartCommunication(void) {
    831              static TSN_STACKPTR int AsyncSendStackCom[4 * 1024];
    832              static TSN_STACKPTR int AsyncSendStackNet[4 * 1024];
    833              static TSN_STACKPTR int ReceiveStack[ASYNC_RECEIVER_TASKS][4 * 1024];
    834          
    835          #ifndef ANTDUSIM
    836              OS_CreateTimer(&ComActivityTimer, CheckComActivity, UART_BYTE_COUNT_TIME);
   \                     ??StartCommunication:
   \   00000000   4C129FE5           LDR      R1,??StartCommunication_1+0x4  ;; ??CheckComActivity
   \   00000004   F0432DE9           PUSH     {R4-R9,LR}
   \   00000008   ........           LDR      R6,??DataTable36  ;; ExternAlarmSilence
   \   0000000C   40D04DE2           SUB      SP,SP,#+64
   \   00000010   4400A0E3           MOV      R0,#+68
   \   00000014   B40C80E3           ORR      R0,R0,#0xB400
   \   00000018   064080E0           ADD      R4,R0,R6
   \   0000001C   3020A0E3           MOV      R2,#+48
   \   00000020   752C82E3           ORR      R2,R2,#0x7500
   \   00000024   0400A0E1           MOV      R0,R4
   \   00000028   ........           _BLF     OS_CreateTimer,??OS_CreateTimer??rA
    837              OS_StartTimer(&ComActivityTimer);
   \   0000002C   0400A0E1           MOV      R0,R4
    838              {
    839                  OS_EVENT_Create(&AckFlashEvent);
    840                  void *tmpPtr = malloc(4 * (UNPACK_BLOCK_SIZE + OS_MEMF_SIZEOF_BLOCKCONTROL));
    841                  OS_MEMF_Create(&pUnPackMem, tmpPtr, 4, UNPACK_BLOCK_SIZE);
    842              }
    843              // com server tasks
    844              CREATE_TASK(&aTCB[19], "NetSendTask", AsyncsenderNetwork::TaskEntryPoint, COM_SEND_TASK_PRIORITY, AsyncSendStackNet);
   \   00000030   20429FE5           LDR      R4,??StartCommunication_1+0x8  ;; `?<Constant {&"ReceiveTask1", &"ReceiveTask2", `
   \   00000034   ........           _BLF     OS_StartTimer,??OS_StartTimer??rA
   \   00000038   1C029FE5           LDR      R0,??StartCommunication_1+0xC  ;; AckFlashEvent
    845              CREATE_TASK(&aTCB[5], "ComSendTask", TSNAsyncSender::TaskEntryPoint, COM_SEND_TASK_PRIORITY, AsyncSendStackCom);
    846              // create recive tasks
    847              for ( int i = 0; i < ASYNC_RECEIVER_TASKS; i++ ) {
   \   0000003C   0050A0E3           MOV      R5,#+0
   \   00000040   ........           _BLF     OS_EVENT_Create,??OS_EVENT_Create??rA
   \   00000044   7E0BA0E3           MOV      R0,#+129024
   \   00000048   ........           _BLF     __data_malloc,??__data_malloc??rA
   \   0000004C   0010A0E1           MOV      R1,R0
   \   00000050   7E3CA0E3           MOV      R3,#+32256
   \   00000054   0420A0E3           MOV      R2,#+4
   \   00000058   800BA0E3           MOV      R0,#+131072
   \   0000005C   D60F80E3           ORR      R0,R0,#0x358
   \   00000060   060080E0           ADD      R0,R0,R6
   \   00000064   ........           _BLF     OS_MEMF_Create,??OS_MEMF_Create??rA
   \   00000068   F0319FE5           LDR      R3,??StartCommunication_1+0x10  ;; ??TaskEntryPoint
   \   0000006C   0200A0E3           MOV      R0,#+2
   \   00000070   01002DE9           PUSH     {R0}
   \   00000074   400CA0E3           MOV      R0,#+16384
   \   00000078   01002DE9           PUSH     {R0}
   \   0000007C   900BA0E3           MOV      R0,#+147456
   \   00000080   DC0F80E3           ORR      R0,R0,#0x370
   \   00000084   060080E0           ADD      R0,R0,R6
   \   00000088   01002DE9           PUSH     {R0}
   \   0000008C   8C20A0E3           MOV      R2,#+140
   \   00000090   381084E2           ADD      R1,R4,#+56
   \   00000094   5800A0E3           MOV      R0,#+88
   \   00000098   C10C80E3           ORR      R0,R0,#0xC100
   \   0000009C   060080E0           ADD      R0,R0,R6
   \   000000A0   ........           _BLF     OS_CreateTask_SP,??OS_CreateTask_SP??rA
   \   000000A4   ........           LDR      R3,??DataTable37  ;; ??TaskEntryPoint_1
   \   000000A8   0200A0E3           MOV      R0,#+2
   \   000000AC   01002DE9           PUSH     {R0}
   \   000000B0   400CA0E3           MOV      R0,#+16384
   \   000000B4   01002DE9           PUSH     {R0}
   \   000000B8   800BA0E3           MOV      R0,#+131072
   \   000000BC   DC0F80E3           ORR      R0,R0,#0x370
   \   000000C0   060080E0           ADD      R0,R0,R6
   \   000000C4   01002DE9           PUSH     {R0}
   \   000000C8   8C20A0E3           MOV      R2,#+140
   \   000000CC   2C1084E2           ADD      R1,R4,#+44
   \   000000D0   D800A0E3           MOV      R0,#+216
   \   000000D4   BD0C80E3           ORR      R0,R0,#0xBD00
   \   000000D8   060080E0           ADD      R0,R0,R6
   \   000000DC   ........           _BLF     OS_CreateTask_SP,??OS_CreateTask_SP??rA
   \   000000E0   18D08DE2           ADD      SP,SP,#+24
    848                  const char *TaskName[ASYNC_RECEIVER_TASKS] = {
    849                      "ReceiveTask1",
    850                      "ReceiveTask2",
    851                      "ReceiveTask3",
    852                      "ReceiveTask4",
    853                      "ReceiveTask5",
    854                      "ReceiveTask6",
    855                      "ReceiveTask7",
    856                  };
   \                     ??StartCommunication_2:
   \   000000E4   8C5394E8           LDM      R4,{R2,R3,R7-R9,R12,LR}
   \   000000E8   08008DE2           ADD      R0,SP,#+8
   \   000000EC   8C5380E8           STM      R0,{R2,R3,R7-R9,R12,LR}
    857                  if ( TSNUart::Channels[i] ) {
   \   000000F0   ........           LDR      R0,??DataTable32  ;; ??Channels
   \   000000F4   050190E7           LDR      R0,[R0, +R5, LSL #+2]
   \   000000F8   000050E3           CMP      R0,#+0
   \   000000FC   1400000A           BEQ      ??StartCommunication_3
    858                      OS_CREATETASK_EX(&ReceiverTCB[i], TaskName[i], TSNAsyncReceiver::EntryPoint, 100, ReceiveStack[i], (void *)i);
   \   00000100   5C319FE5           LDR      R3,??StartCommunication_1+0x14  ;; ??EntryPoint
   \   00000104   0500A0E1           MOV      R0,R5
   \   00000108   01002DE9           PUSH     {R0}
   \   0000010C   0200A0E3           MOV      R0,#+2
   \   00000110   01002DE9           PUSH     {R0}
   \   00000114   400CA0E3           MOV      R0,#+16384
   \   00000118   01002DE9           PUSH     {R0}
   \   0000011C   A00BA0E3           MOV      R0,#+163840
   \   00000120   DC0F80E3           ORR      R0,R0,#0x370
   \   00000124   051786E0           ADD      R1,R6,R5, LSL #+14
   \   00000128   010080E0           ADD      R0,R0,R1
   \   0000012C   01002DE9           PUSH     {R0}
   \   00000130   18008DE2           ADD      R0,SP,#+24
   \   00000134   051190E7           LDR      R1,[R0, +R5, LSL #+2]
   \   00000138   6420A0E3           MOV      R2,#+100
   \   0000013C   9800A0E3           MOV      R0,#+152
   \   00000140   C10C80E3           ORR      R0,R0,#0xC100
   \   00000144   057386E0           ADD      R7,R6,R5, LSL #+6
   \   00000148   070080E0           ADD      R0,R0,R7
   \   0000014C   ........           _BLF     OS_CreateTaskEx_SP,??OS_CreateTaskEx_SP??rA
   \   00000150   10D08DE2           ADD      SP,SP,#+16
    859                  }
    860              }
   \                     ??StartCommunication_3:
   \   00000154   015085E2           ADD      R5,R5,#+1
   \   00000158   070055E3           CMP      R5,#+7
   \   0000015C   E0FFFFBA           BLT      ??StartCommunication_2
    861          #endif
    862              switch ( CurrentDeviceId ) {
   \   00000160   00719FE5           LDR      R7,??StartCommunication_1+0x18  ;; ??CheckFreeAlarmsTask
   \   00000164   ........           LDR      R8,??DataTable33  ;; FreeAlarmInfoList
   \   00000168   FC909FE5           LDR      R9,??StartCommunication_1+0x1C  ;; 0x469c4000
   \   0000016C   5800A0E3           MOV      R0,#+88
   \   00000170   BC0C80E3           ORR      R0,R0,#0xBC00
   \   00000174   065080E0           ADD      R5,R0,R6
   \   00000178   800EC0E3           BIC      R0,R0,#0x800
   \   0000017C   066080E0           ADD      R6,R0,R6
   \   00000180   ........           LDR      R0,??DataTable41  ;; CurrentDeviceId
   \   00000184   311F8FE2           ADR      R1,??StartCommunication_1  ;; "TCU"
   \   00000188   F000D0E1           LDRSH    R0,[R0, #+0]
   \   0000018C   200050E2           SUBS     R0,R0,#+32
   \   00000190   0D00000A           BEQ      ??StartCommunication_4
   \   00000194   100050E2           SUBS     R0,R0,#+16
   \   00000198   2900001A           BNE      ??StartCommunication_5
    863              case DEVICE_TDU:        // TCU
    864                  FreeAlarmInfoList.insert(new AlarmCriticalComFailure("TCU", ALARM_ANPRO10_SYNC_TIMEOUT));
   \   0000019C   24008DE2           ADD      R0,SP,#+36
   \   000001A0   ........           _BLF     ??AnsiString_1,??AnsiString??rA_1
   \   000001A4   0910A0E1           MOV      R1,R9
   \   000001A8   ........           _BLF     `??new AlarmCriticalComFailure`,`??new AlarmCriticalComFailure??rA`
   \   000001AC   0020A0E1           MOV      R2,R0
   \   000001B0   0810A0E1           MOV      R1,R8
   \   000001B4   0D00A0E1           MOV      R0,SP
   \   000001B8   ........           _BLF     ??insert_2,??insert??rA_2
   \   000001BC   0020A0E3           MOV      R2,#+0
   \   000001C0   0110A0E3           MOV      R1,#+1
   \   000001C4   24008DE2           ADD      R0,SP,#+36
   \   000001C8   0E0000EA           B        ??StartCommunication_6
    865                  if ( !FreeAlarmInfoList.empty() ) {
    866                      CREATE_TASK(&tCheckFreeAlarms, "CheckFreeAlarms", CheckFreeAlarmsTask, 60, CheckFreeAlarmsStack);
    867                  }
    868                  break;
    869              case DEVICE_TCU:
    870                  if ( !Master ) {
   \                     ??StartCommunication_4:
   \   000001CC   ........           LDR      R0,??DataTable42  ;; Master
   \   000001D0   0000D0E5           LDRB     R0,[R0, #+0]
   \   000001D4   000050E3           CMP      R0,#+0
   \   000001D8   1900001A           BNE      ??StartCommunication_5
    871                      FreeAlarmInfoList.insert(new AlarmCriticalComFailure("TCU", ALARM_ANPRO10_SYNC_TIMEOUT));
   \   000001DC   08008DE2           ADD      R0,SP,#+8
   \   000001E0   ........           _BLF     ??AnsiString_1,??AnsiString??rA_1
   \   000001E4   0910A0E1           MOV      R1,R9
   \   000001E8   ........           _BLF     `??new AlarmCriticalComFailure`,`??new AlarmCriticalComFailure??rA`
   \   000001EC   0020A0E1           MOV      R2,R0
   \   000001F0   0810A0E1           MOV      R1,R8
   \   000001F4   0D00A0E1           MOV      R0,SP
   \   000001F8   ........           _BLF     ??insert_2,??insert??rA_2
   \   000001FC   0020A0E3           MOV      R2,#+0
   \   00000200   0110A0E3           MOV      R1,#+1
   \   00000204   08008DE2           ADD      R0,SP,#+8
   \                     ??StartCommunication_6:
   \   00000208   ........           _BLF     ??_Tidy,??_Tidy??rA
    872                      if ( !FreeAlarmInfoList.empty() ) {
   \   0000020C   100098E5           LDR      R0,[R8, #+16]
   \   00000210   000050E3           CMP      R0,#+0
   \   00000214   0A00000A           BEQ      ??StartCommunication_5
    873                          CREATE_TASK(&tCheckFreeAlarms, "CheckFreeAlarms", CheckFreeAlarmsTask, 60, CheckFreeAlarmsStack);
   \   00000218   0200A0E3           MOV      R0,#+2
   \   0000021C   01002DE9           PUSH     {R0}
   \   00000220   800EA0E3           MOV      R0,#+2048
   \   00000224   01002DE9           PUSH     {R0}
   \   00000228   40002DE9           PUSH     {R6}
   \   0000022C   0730A0E1           MOV      R3,R7
   \   00000230   3C20A0E3           MOV      R2,#+60
   \   00000234   1C1084E2           ADD      R1,R4,#+28
   \   00000238   0500A0E1           MOV      R0,R5
   \   0000023C   ........           _BLF     OS_CreateTask_SP,??OS_CreateTask_SP??rA
   \   00000240   0CD08DE2           ADD      SP,SP,#+12
    874                      }
    875                  }
    876              default:
    877                  break;
    878              }
    879          }
   \                     ??StartCommunication_5:
   \   00000244   40D08DE2           ADD      SP,SP,#+64
   \   00000248   F043BDE8           POP      {R4-R9,LR}
   \   0000024C   1EFF2FE1           BX       LR               ;; return
   \                     ??StartCommunication_1:
   \   00000250   54435500           DC8      "TCU"
   \   00000254   ........           DC32     ??CheckComActivity
   \   00000258   ........           DC32     `?<Constant {&"ReceiveTask1", &"ReceiveTask2", `
   \   0000025C   ........           DC32     AckFlashEvent
   \   00000260   ........           DC32     ??TaskEntryPoint
   \   00000264   ........           DC32     ??EntryPoint
   \   00000268   ........           DC32     ??CheckFreeAlarmsTask
   \   0000026C   00409C46           DC32     0x469c4000
    880          

   \                                 In segment CODE, align 4, keep-with-next
    881          void StartSimulatorCommunication(void) {
    882              static TSN_STACKPTR int AsyncSendStack[1024];
    883              //static TSN_STACKPTR U8 ReceiveStack[ASYNC_RECEIVER_TASKS][6*1024];
    884              /* com server tasks */
    885              CREATE_TASK(&aTCB[5], "ComSendTask", TSNAsyncSender::TaskEntryPoint, COM_SEND_TASK_PRIORITY, AsyncSendStack);
   \                     ??StartSimulatorCommunication:
   \   00000000   ........           LDR      R0,??DataTable36  ;; ExternAlarmSilence
   \   00000004   ........           LDR      R3,??DataTable37  ;; ??TaskEntryPoint_1
   \   00000008   00402DE9           PUSH     {LR}
   \   0000000C   0210A0E3           MOV      R1,#+2
   \   00000010   02002DE9           PUSH     {R1}
   \   00000014   401DA0E3           MOV      R1,#+4096
   \   00000018   02002DE9           PUSH     {R1}
   \   0000001C   441AA0E3           MOV      R1,#+278528
   \   00000020   DC1F81E3           ORR      R1,R1,#0x370
   \   00000024   001081E0           ADD      R1,R1,R0
   \   00000028   02002DE9           PUSH     {R1}
   \   0000002C   18109FE5           LDR      R1,??StartSimulatorCommunication_1  ;; `?<Constant {&"ReceiveTask1", &"ReceiveTask2", ` + 44
   \   00000030   8C20A0E3           MOV      R2,#+140
   \   00000034   D8C0A0E3           MOV      R12,#+216
   \   00000038   BDCC8CE3           ORR      R12,R12,#0xBD00
   \   0000003C   00008CE0           ADD      R0,R12,R0
   \   00000040   ........           _BLF     OS_CreateTask_SP,??OS_CreateTask_SP??rA
    886              // create recive tasks
    887              if ( TSNUart::Channels[0] ) {
    888                  //              CREATE_TASK(&ReceiverTCB[0],"ReceiveTask1", TSNAsyncReceiver::EntryPoint0, 100, ReceiveStack_1);
    889              }
    890              if ( TSNUart::Channels[1] ) {
    891                  //              CREATE_TASK(&ReceiverTCB[1],"ReceiveTask2", TSNAsyncReceiver::EntryPoint1, 100, ReceiveStack_2);
    892              }
    893          }
   \   00000044   0740BDE8           POP      {R0-R2,LR}
   \   00000048   1EFF2FE1           BX       LR               ;; return
   \                     ??StartSimulatorCommunication_1:
   \   0000004C   ........           DC32     `?<Constant {&"ReceiveTask1", &"ReceiveTask2", ` + 44

   \                                 In segment DATA_Z, align 4, align-sorted
   \                     ExternAlarmSilence:
   \   00000000                      DS8 4
   \                     SaveSettingsTaskHandle:
   \   00000004                      DS8 64
   \                     SaveSettingsTaskStack:
   \   00000044                      DS8 16384
   \                     SaveConfigTaskHandle:
   \   00004044                      DS8 64
   \                     SaveConfigTaskStack:
   \   00004084                      DS8 16384
   \                     ExternalAlarmSilenceStack:
   \   00008084                      DS8 1024
   \   00008484                      DS8 4096
   \                     InclinometerHandle:
   \   00009484                      DS8 64
   \   000094C4                      DS8 8000
   \                     CalcMiscObjectsHandle:
   \   0000B404                      DS8 64
   \                     ComActivityTimer:
   \   0000B444                      DS8 20
   \   0000B458                      DS8 2048
   \                     tCheckFreeAlarms:
   \   0000BC58                      DS8 64
   \                     aTCB:
   \   0000BC98                      DS8 1280
   \                     ReceiverTCB:
   \   0000C198                      DS8 448
   \   0000C358                      DS8 8192
   \   0000E358                      DS8 32768
   \   00016358                      DS8 32768
   \   0001E358                      DS8 8192
   \                     pUnPackMem:
   \   00020358                      DS8 24
   \   00020370                      DS8 16384
   \   00024370                      DS8 16384
   \   00028370                      DS8 114688
   \   00044370                      DS8 4096
   \   00045370                      DS8 16384

   \                                 In segment DATA_Z, align 4, align-sorted
   \                     LogTaskHandle:
   \   00000000                      DS8 64
   \                     LogTaskStack:
   \   00000040                      DS8 16384
   \                     ControllerTaskHandle:
   \   00004040                      DS8 64
   \                     ControllerTaskStack:
   \   00004080                      DS8 2048

   \                                 In segment DATA_Z, align 4, align-sorted
   \                     DutyMsgBuf:
   \   00000000                      DS8 144
   \   00000090                      DS8 384
   \   00000210                      DS8 12288

   \                                 In segment DATA_Z, align 1, align-sorted
   \                     TestMode:
   \   00000000                      DS8 1

   \                                 In segment DATA_Z, align 4, align-sorted
   \                     MsgBoxTimerTaskHandle:
   \   00000000                      DS8 64
   \                     MsgBoxTimerTaskStack:
   \   00000040                      DS8 2048

   \                                 In segment DATA_Z, align 4, align-sorted
   \                     CloseWinTimerBuf:
   \   00000000                      DS8 24

   \                                 In segment DATA_Z, align 4, align-sorted
   \                     ANPRO10IOTask:
   \   00000000                      DS8 4

   \                                 In segment DATA_Z, align 4, align-sorted
   \                     SendStaticDataTaskHandle:
   \   00000000                      DS8 64
   \   00000040                      DS8 16384

   \                                 In segment DATA_Z, align 4, align-sorted
   \                     ExecSimulatorTCB:
   \   00000000                      DS8 64
    894          
    895          /*********************************************************
    896          
    897           Can add the following:
    898          
    899              OS_U32 ExecTotal;              // Time spent executing
    900              OS_U32 ExecLast;               // Time spent executing (Reference)
    901              OS_U32 NumActivations;
    902              OS_U32 NumPreemptions;
    903          
    904          *********************************************************/
    905          
    906          static TSN_STACKPTR int StatTaskStack[4 * 1024];

   \                                 In segment DATA_Z, align 4, align-sorted
    907          double AvgPerformance   = 0.0;
    908          double MaxPerformance   = 0.0;
    909          double TotalRawLoad     = 0.0;
    910          // Accessed by PROTanksystemUnit also
    911          
    912          vector<TSN_TASK *>TaskVector;
   \                     TaskVector:
   \   00000000                      DS8 12
   \                     AvgPerformance:
   \   0000000C                      DS8 8
   \                     MaxPerformance:
   \   00000014                      DS8 8
   \                     TotalRawLoad:
   \   0000001C                      DS8 8
    913          //#define STACK_CHECK
    914          #ifdef S2TXU

   \                                 In segment CODE, align 4, keep-with-next
    915          void StatTask(void) {
   \                     ??StatTask:
   \   00000000   F0472DE9           PUSH     {R4-R10,LR}
   \   00000004   1CD04DE2           SUB      SP,SP,#+28
    916              OS_Delay(10000);
    917              TSN_TASK *taskPtr = OS_pTask->pNext;
    918              int i = 0;
   \   00000008   ........           LDR      R8,??DataTable43  ;; ??MySelf
   \   0000000C   ........           LDR      R6,??DataTable39  ;; TaskVector
   \   00000010   1000A0E3           MOV      R0,#+16
   \   00000014   9C0D80E3           ORR      R0,R0,#0x2700
   \   00000018   ........           _BLF     OS_Delay,??OS_Delay??rA
   \   0000001C   A8019FE5           LDR      R0,??StatTask_1  ;; OS_pTask
   \   00000020   0040A0E3           MOV      R4,#+0
   \   00000024   000090E5           LDR      R0,[R0, #+0]
   \   00000028   5C90A0E3           MOV      R9,#+92
   \   0000002C   007090E5           LDR      R7,[R0, #+0]
   \   00000030   98019FE5           LDR      R0,??StatTask_1+0x4  ;; ??npos
   \   00000034   409E89E3           ORR      R9,R9,#0x400
   \   00000038   005090E5           LDR      R5,[R0, #+0]
    919              do {
    920                  AnsiString TName = taskPtr->Name;
   \                     ??StatTask_2:
   \   0000003C   181097E5           LDR      R1,[R7, #+24]
   \   00000040   0D00A0E1           MOV      R0,SP
   \   00000044   ........           _BLF     ??AnsiString_1,??AnsiString??rA_1
    921                  TaskVector.push_back(taskPtr);
   \   00000048   041096E5           LDR      R1,[R6, #+4]
   \   0000004C   080096E5           LDR      R0,[R6, #+8]
   \   00000050   01A0A0E3           MOV      R10,#+1
   \   00000054   000051E1           CMP      R1,R0
   \   00000058   0600002A           BCS      ??StatTask_3
   \   0000005C   0100A0E1           MOV      R0,R1
   \                     ??StatTask_4:
   \   00000060   ........           STR      R7,[R0], #+4
   \   00000064   01A05AE2           SUBS     R10,R10,#+1
   \   00000068   FCFFFF1A           BNE      ??StatTask_4
   \   0000006C   040081E2           ADD      R0,R1,#+4
   \   00000070   040086E5           STR      R0,[R6, #+4]
   \   00000074   050000EA           B        ??StatTask_5
   \                     ??StatTask_3:
   \   00000078   0120A0E3           MOV      R2,#+1
   \   0000007C   0600A0E1           MOV      R0,R6
   \   00000080   ........           _BLF     ??_Make_room,??_Make_room??rA
   \                     ??StatTask_6:
   \   00000084   ........           STR      R7,[R0], #+4
   \   00000088   01A05AE2           SUBS     R10,R10,#+1
   \   0000008C   FCFFFF1A           BNE      ??StatTask_6
    922                  PROTanksystemUnit::MySelf->TaskName[i++] = TName;
   \                     ??StatTask_5:
   \   00000090   00A098E5           LDR      R10,[R8, #+0]
   \   00000094   0530A0E1           MOV      R3,R5
   \   00000098   0020A0E3           MOV      R2,#+0
   \   0000009C   0D10A0E1           MOV      R1,SP
   \   000000A0   1C00A0E3           MOV      R0,#+28
   \   000000A4   90A42AE0           MLA      R10,R0,R4,R10
   \   000000A8   0A0089E0           ADD      R0,R9,R10
   \   000000AC   ........           _BLF     ??assign,??assign??rA
    923                  taskPtr = taskPtr->pNext;
   \   000000B0   007097E5           LDR      R7,[R7, #+0]
   \   000000B4   014084E2           ADD      R4,R4,#+1
    924              }while ( taskPtr );
   \   000000B8   0020A0E3           MOV      R2,#+0
   \   000000BC   0110A0E3           MOV      R1,#+1
   \   000000C0   0D00A0E1           MOV      R0,SP
   \   000000C4   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000000C8   000057E3           CMP      R7,#+0
   \   000000CC   DAFFFF1A           BNE      ??StatTask_2
    925          
    926              PROTanksystemUnit::MySelf->NumberOfTasks = TaskVector.size();
   \   000000D0   000098E5           LDR      R0,[R8, #+0]
   \   000000D4   041096E5           LDR      R1,[R6, #+4]
   \   000000D8   002096E5           LDR      R2,[R6, #+0]
   \   000000DC   021041E0           SUB      R1,R1,R2
   \   000000E0   2111A0E1           LSR      R1,R1,#+2
   \   000000E4   9C1A80E5           STR      R1,[R0, #+2716]
   \   000000E8   310000EA           B        ??StatTask_7
    927              FOREVER{
    928                  OS_Delay(4000);
    929                  OS_STAT_Sample();
    930                  float tmpRawLoad = 0.0;
    931                  for ( int i = 0; i < TaskVector.size() && i < MAX_ANPRO10_NUMBER_OF_TASKS; i++ ) {
    932                      PROTanksystemUnit::MySelf->RawPerformance[i] = OS_STAT_GetLoad(TaskVector[i]);
   \                     ??StatTask_8:
   \   000000EC   070190E7           LDR      R0,[R0, +R7, LSL #+2]
   \   000000F0   ........           _BLF     OS_STAT_GetLoad,??OS_STAT_GetLoad??rA
   \   000000F4   001098E5           LDR      R1,[R8, #+0]
   \   000000F8   071181E0           ADD      R1,R1,R7, LSL #+2
   \   000000FC   5C0981E5           STR      R0,[R1, #+2396]
    933                      tmpRawLoad  += PROTanksystemUnit::MySelf->RawPerformance[i] / 10.0;
   \   00000100   ........           _BLF     __longToDouble,??__longToDouble??rA
   \   00000104   0020A0E3           MOV      R2,#+0
   \   00000108   4034A0E3           MOV      R3,#+1073741824
   \   0000010C   903983E3           ORR      R3,R3,#0x240000
   \   00000110   ........           _BLF     __dDiv,??__dDiv??rA
   \   00000114   0420A0E1           MOV      R2,R4
   \   00000118   0530A0E1           MOV      R3,R5
   \   0000011C   ........           _BLF     __dAdd,??__dAdd??rA
   \   00000120   ........           _BLF     __doubleToFloat,??__doubleToFloat??rA
    934          #if (STACK_CHECK == 1)
    935                      PROTanksystemUnit::MySelf->StackUsed[i] = OS_GetStackUsed(TaskVector[i]);
    936                      PROTanksystemUnit::MySelf->StackSpace[i] = OS_GetStackSpace(TaskVector[i]);
    937          #endif
    938                  }
   \   00000124   017087E2           ADD      R7,R7,#+1
   \                     ??StatTask_9:
   \   00000128   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   0000012C   0040A0E1           MOV      R4,R0
   \   00000130   000096E5           LDR      R0,[R6, #+0]
   \   00000134   0150A0E1           MOV      R5,R1
   \   00000138   041096E5           LDR      R1,[R6, #+4]
   \   0000013C   001041E0           SUB      R1,R1,R0
   \   00000140   210157E1           CMP      R7,R1, LSR #+2
   \   00000144   0100002A           BCS      ??StatTask_10
   \   00000148   280057E3           CMP      R7,#+40
   \   0000014C   E6FFFFBA           BLT      ??StatTask_8
    939                  TotalRawLoad    = tmpRawLoad;
    940                  MaxPerformance  = max(MaxPerformance, TotalRawLoad);
   \                     ??StatTask_10:
   \   00000150   142096E5           LDR      R2,[R6, #+20]
   \   00000154   183096E5           LDR      R3,[R6, #+24]
   \   00000158   1C4086E5           STR      R4,[R6, #+28]
   \   0000015C   205086E5           STR      R5,[R6, #+32]
   \   00000160   0400A0E1           MOV      R0,R4
   \   00000164   0510A0E1           MOV      R1,R5
   \   00000168   ........           _BLF     __dLess,??__dLess??rA
    941                  AvgPerformance  = (AvgPerformance * 14 + TotalRawLoad) / 15.0;
   \   0000016C   0C2096E5           LDR      R2,[R6, #+12]
   \   00000170   103096E5           LDR      R3,[R6, #+16]
   \   00000174   000050E3           CMP      R0,#+0
   \   00000178   14408605           STREQ    R4,[R6, #+20]
   \   0000017C   18508605           STREQ    R5,[R6, #+24]
   \   00000180   0000A0E3           MOV      R0,#+0
   \   00000184   4014A0E3           MOV      R1,#+1073741824
   \   00000188   B01981E3           ORR      R1,R1,#0x2C0000
   \   0000018C   ........           _BLF     __dMul,??__dMul??rA
   \   00000190   0420A0E1           MOV      R2,R4
   \   00000194   0530A0E1           MOV      R3,R5
   \   00000198   ........           _BLF     __dAdd,??__dAdd??rA
   \   0000019C   0020A0E3           MOV      R2,#+0
   \   000001A0   4034A0E3           MOV      R3,#+1073741824
   \   000001A4   B83983E3           ORR      R3,R3,#0x2E0000
   \   000001A8   ........           _BLF     __dDiv,??__dDiv??rA
   \   000001AC   0C0086E5           STR      R0,[R6, #+12]
   \   000001B0   101086E5           STR      R1,[R6, #+16]
   \                     ??StatTask_7:
   \   000001B4   FA0EA0E3           MOV      R0,#+4000
   \   000001B8   ........           _BLF     OS_Delay,??OS_Delay??rA
   \   000001BC   ........           _BLF     OS_STAT_Sample,??OS_STAT_Sample??rA
   \   000001C0   0000A0E3           MOV      R0,#+0
   \   000001C4   0070A0E3           MOV      R7,#+0
   \   000001C8   D6FFFFEA           B        ??StatTask_9
   \                     ??StatTask_1:
   \   000001CC   ........           DC32     OS_pTask
   \   000001D0   ........           DC32     ??npos
    942              }
    943          
    944          }
    945          #endif
    946          

   \                                 In segment CODE, align 4, keep-with-next
    947          void StartTasks(void) {
    948          
    949          #ifndef ANTDUSIM
    950          
    951              CREATE_TASK(&aTCB[3], "StaticTask", StatTask,  20, StatTaskStack);   // Measure performance
   \                     ??StartTasks:
   \   00000000   00359FE5           LDR      R3,??StartTasks_1  ;; ??StatTask
   \   00000004   F04F2DE9           PUSH     {R4-R11,LR}
   \   00000008   FC449FE5           LDR      R4,??StartTasks_1+0x4  ;; `?<Constant "External AlarmSilence">`
   \   0000000C   FC549FE5           LDR      R5,??StartTasks_1+0x8  ;; ExternAlarmSilence
    952          
    953              if ( ConfigWarningsString.IsEmpty() ) {
   \   00000010   ........           LDR      R11,??DataTable40  ;; ConfigWarningsString
   \   00000014   04D04DE2           SUB      SP,SP,#+4
   \   00000018   0200A0E3           MOV      R0,#+2
   \   0000001C   01002DE9           PUSH     {R0}
   \   00000020   400CA0E3           MOV      R0,#+16384
   \   00000024   01002DE9           PUSH     {R0}
   \   00000028   450AA0E3           MOV      R0,#+282624
   \   0000002C   DC0F80E3           ORR      R0,R0,#0x370
   \   00000030   050080E0           ADD      R0,R0,R5
   \   00000034   01002DE9           PUSH     {R0}
   \   00000038   1420A0E3           MOV      R2,#+20
   \   0000003C   701084E2           ADD      R1,R4,#+112
   \   00000040   5800A0E3           MOV      R0,#+88
   \   00000044   BD0C80E3           ORR      R0,R0,#0xBD00
   \   00000048   050080E0           ADD      R0,R0,R5
   \   0000004C   ........           _BLF     OS_CreateTask_SP,??OS_CreateTask_SP??rA
   \   00000050   0B00A0E1           MOV      R0,R11
   \   00000054   ........           _BLF     ??IsEmpty,??IsEmpty??rA
   \   00000058   000050E3           CMP      R0,#+0
   \   0000005C   0CD08DE2           ADD      SP,SP,#+12
   \   00000060   1900000A           BEQ      ??StartTasks_2
    954                  CREATE_TASK(&SaveSettingsTaskHandle, "Save Settings", SaveSettingsTask,  78, SaveSettingsTaskStack);
   \   00000064   A8349FE5           LDR      R3,??StartTasks_1+0xC  ;; ??SaveSettingsTask
   \   00000068   0200A0E3           MOV      R0,#+2
   \   0000006C   01002DE9           PUSH     {R0}
   \   00000070   400CA0E3           MOV      R0,#+16384
   \   00000074   01002DE9           PUSH     {R0}
   \   00000078   440085E2           ADD      R0,R5,#+68
   \   0000007C   01002DE9           PUSH     {R0}
   \   00000080   4E20A0E3           MOV      R2,#+78
   \   00000084   601084E2           ADD      R1,R4,#+96
   \   00000088   040085E2           ADD      R0,R5,#+4
   \   0000008C   ........           _BLF     OS_CreateTask_SP,??OS_CreateTask_SP??rA
    955                  CREATE_TASK(&SaveConfigTaskHandle, "Write Config", SaveConfigTask,  78, SaveConfigTaskStack);
   \   00000090   80349FE5           LDR      R3,??StartTasks_1+0x10  ;; ??SaveConfigTask
   \   00000094   0200A0E3           MOV      R0,#+2
   \   00000098   01002DE9           PUSH     {R0}
   \   0000009C   400CA0E3           MOV      R0,#+16384
   \   000000A0   01002DE9           PUSH     {R0}
   \   000000A4   840080E3           ORR      R0,R0,#0x84
   \   000000A8   050080E0           ADD      R0,R0,R5
   \   000000AC   01002DE9           PUSH     {R0}
   \   000000B0   4E20A0E3           MOV      R2,#+78
   \   000000B4   501084E2           ADD      R1,R4,#+80
   \   000000B8   4400A0E3           MOV      R0,#+68
   \   000000BC   400C80E3           ORR      R0,R0,#0x4000
   \   000000C0   050080E0           ADD      R0,R0,R5
   \   000000C4   ........           _BLF     OS_CreateTask_SP,??OS_CreateTask_SP??rA
   \   000000C8   18D08DE2           ADD      SP,SP,#+24
    956              }
    957          #endif
    958              switch ( CurrentDeviceId ) {
   \                     ??StartTasks_2:
   \   000000CC   ........           LDR      R1,??DataTable41  ;; CurrentDeviceId
   \   000000D0   44849FE5           LDR      R8,??StartTasks_1+0x14  ;; ??CalcMiscObjectsTask
   \   000000D4   F010D1E1           LDRSH    R1,[R1, #+0]
   \   000000D8   ........           LDR      R9,??DataTable42  ;; Master
   \   000000DC   3CA49FE5           LDR      R10,??StartTasks_1+0x18  ;; 0x31fff014
   \   000000E0   0400A0E3           MOV      R0,#+4
   \   000000E4   B40C80E3           ORR      R0,R0,#0xB400
   \   000000E8   056080E0           ADD      R6,R0,R5
   \   000000EC   7D0D40E2           SUB      R0,R0,#+8000
   \   000000F0   057080E0           ADD      R7,R0,R5
   \   000000F4   0000A0E3           MOV      R0,#+0
   \   000000F8   201051E2           SUBS     R1,R1,#+32
   \   000000FC   3500000A           BEQ      ??StartTasks_3
   \   00000100   101051E2           SUBS     R1,R1,#+16
   \   00000104   0600000A           BEQ      ??StartTasks_4
   \   00000108   101051E2           SUBS     R1,R1,#+16
   \   0000010C   DF00000A           BEQ      ??StartTasks_5
   \   00000110   A01051E2           SUBS     R1,R1,#+160
   \   00000114   E200000A           BEQ      ??StartTasks_6
   \   00000118   081051E2           SUBS     R1,R1,#+8
   \   0000011C   E700000A           BEQ      ??StartTasks_7
   \   00000120   2A0000EA           B        ??StartTasks_8
    959          #ifndef ANTDUSIM
    960              case DEVICE_TDU:
    961                  Master = false;
   \                     ??StartTasks_4:
   \   00000124   0000C9E5           STRB     R0,[R9, #+0]
    962                  StartUploadTask();
   \   00000128   ........           _BLF     ??StartUploadTask,??StartUploadTask??rA
    963                  ProgProgress = WD_INIT_TDU_COMPORTS;
   \   0000012C   1600A0E3           MOV      R0,#+22
   \   00000130   00008AE5           STR      R0,[R10, #+0]
    964                  PROTanksystemUnit::MySelf->InitTDUWinUarts();
   \   00000134   ........           LDR      R0,??DataTable43  ;; ??MySelf
   \   00000138   000090E5           LDR      R0,[R0, #+0]
   \   0000013C   ........           _BLF     ??InitTDUWinUarts,??InitTDUWinUarts??rA
    965                  ProgProgress = WD_START_COM_TASKS;
   \   00000140   1800A0E3           MOV      R0,#+24
   \   00000144   00008AE5           STR      R0,[R10, #+0]
    966                  StartCommunication();
   \   00000148   ........           BL       ??StartCommunication
    967          
    968                  ProgProgress = WD_START_MISC_TASKS;
   \   0000014C   1900A0E3           MOV      R0,#+25
   \   00000150   00008AE5           STR      R0,[R10, #+0]
    969                  StartMiscTasks();
   \   00000154   ........           BL       ??StartMiscTasks
    970                  ProgProgress = WD_START_INT_AD_TASKS;
   \   00000158   1A00A0E3           MOV      R0,#+26
   \   0000015C   00008AE5           STR      R0,[R10, #+0]
    971                  CREATE_TASK(&CalcMiscObjectsHandle, "CalcMiscObjects", CalcMiscObjectsTask,  90, CalcMiscObjectsStack);
   \   00000160   0200A0E3           MOV      R0,#+2
   \   00000164   01002DE9           PUSH     {R0}
   \   00000168   7D0DA0E3           MOV      R0,#+8000
   \   0000016C   01002DE9           PUSH     {R0}
   \   00000170   80002DE9           PUSH     {R7}
   \   00000174   0830A0E1           MOV      R3,R8
   \   00000178   5A20A0E3           MOV      R2,#+90
   \   0000017C   401084E2           ADD      R1,R4,#+64
   \   00000180   0600A0E1           MOV      R0,R6
   \   00000184   ........           _BLF     OS_CreateTask_SP,??OS_CreateTask_SP??rA
    972          
    973                  // For debug
    974                  //OS_SignalCSema(&SaveSettingSema);
    975                  //PRogramObjectBase::WriteAll = true;
    976          #ifndef WIN32
    977                  LastStartTime = time(NULL);
   \   00000188   0000A0E3           MOV      R0,#+0
   \   0000018C   ........           _BLF     time,??time??rA
   \   00000190   28008AE5           STR      R0,[R10, #+40]
    978                  ProgProgress  = WD_START_OK;
   \   00000194   2100A0E3           MOV      R0,#+33
   \   00000198   00008AE5           STR      R0,[R10, #+0]
    979          #endif
    980                  if ( !ConfigWarningsString.IsEmpty() ) {
   \   0000019C   1740A0E3           MOV      R4,#+23
   \   000001A0   0B00A0E1           MOV      R0,R11
   \   000001A4   ........           _BLF     ??IsEmpty,??IsEmpty??rA
   \   000001A8   000050E3           CMP      R0,#+0
   \   000001AC   0CD08DE2           ADD      SP,SP,#+12
   \   000001B0   00408AE5           STR      R4,[R10, #+0]
   \   000001B4   0300001A           BNE      ??StartTasks_9
    981                      ProgProgress = WD_START_WIN_TASKS;
    982                      StartWindowTasks();
   \   000001B8   ........           BL       ??StartWindowTasks
    983                      ProgProgress = WD_CONFIG_WARNING;
   \   000001BC   1500A0E3           MOV      R0,#+21
   \   000001C0   00008AE5           STR      R0,[R10, #+0]
    984          #if (NETWORK == 1)
    985                      StartNetwork();
   \   000001C4   000000EA           B        ??StartTasks_10
    986          #endif
    987                      //ConfigWarnings->ExecDialogBox(NULL);
    988                      //GUI_ExecCreatedDialog(ConfigWarnings->WinHandl);
    989                  } else {
    990                      ProgProgress = WD_START_WIN_TASKS;
    991                      StartWindowTasks();
   \                     ??StartTasks_9:
   \   000001C8   ........           BL       ??StartWindowTasks
    992          #if (NETWORK == 1)
    993                      StartNetwork();
   \                     ??StartTasks_10:
   \   000001CC   ........           _BLF     StartNetwork,??StartNetwork??rA
   \                     ??StartTasks_8:
   \   000001D0   F14FBDE8           POP      {R0,R4-R11,LR}
   \   000001D4   1EFF2FE1           BX       LR
    994          #endif
    995                  }
    996                  break;
    997              case DEVICE_TCU:
    998                  if ( CurrentDeviceAddress ) {
   \                     ??StartTasks_3:
   \   000001D8   44039FE5           LDR      R0,??StartTasks_1+0x1C  ;; CurrentDeviceAddress
   \   000001DC   44B39FE5           LDR      R11,??StartTasks_1+0x20  ;; OS_Counters
   \   000001E0   8410A0E3           MOV      R1,#+132
   \   000001E4   801C81E3           ORR      R1,R1,#0x8000
   \   000001E8   051081E0           ADD      R1,R1,R5
   \   000001EC   00108DE5           STR      R1,[SP, #+0]
   \   000001F0   F000D0E1           LDRSH    R0,[R0, #+0]
   \   000001F4   000050E3           CMP      R0,#+0
   \   000001F8   3A00000A           BEQ      ??StartTasks_11
    999                      StartUploadTask();
   \   000001FC   ........           _BLF     ??StartUploadTask,??StartUploadTask??rA
   1000                      ProgProgress = WD_START_COM_TASKS;
   \   00000200   1800A0E3           MOV      R0,#+24
   \   00000204   00008AE5           STR      R0,[R10, #+0]
   1001                      //PROTanksystemUnit::MySelf->InitTDUWinUarts();
   1002                      ProgProgress = WD_START_COM_TASKS;
   \   00000208   00008AE5           STR      R0,[R10, #+0]
   1003                      StartCommunication();
   \   0000020C   ........           BL       ??StartCommunication
   1004                      ProgProgress = WD_START_MISC_TASKS;
   \   00000210   1900A0E3           MOV      R0,#+25
   \   00000214   00008AE5           STR      R0,[R10, #+0]
   1005                      StartMiscTasks();
   \   00000218   ........           BL       ??StartMiscTasks
   1006                      ProgProgress = WD_START_INT_AD_TASKS;
   \   0000021C   1A00A0E3           MOV      R0,#+26
   \   00000220   00008AE5           STR      R0,[R10, #+0]
   1007                      ModbusObject::StartExchangeData();
   \   00000224   ........           _BLF     ??StartExchangeData,??StartExchangeData??rA
   1008                      CREATE_TASK(&CalcMiscObjectsHandle, "CalcMiscObjects", CalcMiscObjectsTask,  90, CalcMiscObjectsStack);
   \   00000228   0200A0E3           MOV      R0,#+2
   \   0000022C   01002DE9           PUSH     {R0}
   \   00000230   7D0DA0E3           MOV      R0,#+8000
   \   00000234   01002DE9           PUSH     {R0}
   \   00000238   80002DE9           PUSH     {R7}
   \   0000023C   0830A0E1           MOV      R3,R8
   \   00000240   5A20A0E3           MOV      R2,#+90
   \   00000244   401084E2           ADD      R1,R4,#+64
   \   00000248   0600A0E1           MOV      R0,R6
   \   0000024C   ........           _BLF     OS_CreateTask_SP,??OS_CreateTask_SP??rA
   1009                      LastStartTime = time(NULL);
   \   00000250   0000A0E3           MOV      R0,#+0
   \   00000254   ........           _BLF     time,??time??rA
   \   00000258   28008AE5           STR      R0,[R10, #+40]
   1010                      ProgProgress  = WD_START_OK;
   \   0000025C   2100A0E3           MOV      R0,#+33
   \   00000260   00008AE5           STR      R0,[R10, #+0]
   1011                      OS_IncDI();
   \   00000264   ........           _BLF     OS_DisableInt,??OS_DisableInt??rA
   \   00000268   0100DBE5           LDRB     R0,[R11, #+1]
   \   0000026C   010080E2           ADD      R0,R0,#+1
   \   00000270   0100CBE5           STRB     R0,[R11, #+1]
   1012                      ExternAlarmSilence = new TSN_TASK();
   \   00000274   4000A0E3           MOV      R0,#+64
   \   00000278   ........           _BLF     `??operator new`,`??operator new??rA`
   \   0000027C   0060B0E1           MOVS     R6,R0
   \   00000280   0CD08DE2           ADD      SP,SP,#+12
   \   00000284   0200000A           BEQ      ??StartTasks_12
   \   00000288   4010A0E3           MOV      R1,#+64
   \   0000028C   ........           _BLF     __data_memzero,??__data_memzero??rA
   \   00000290   000000EA           B        ??StartTasks_13
   \                     ??StartTasks_12:
   \   00000294   0060A0E3           MOV      R6,#+0
   1013                      OS_CREATETASK(ExternAlarmSilence, "External AlarmSilence", ExternalAlarmSilenceTask, 100, ExternalAlarmSilenceStack);
   \                     ??StartTasks_13:
   \   00000298   8C329FE5           LDR      R3,??StartTasks_1+0x24  ;; ??ExternalAlarmSilenceTask
   \   0000029C   006085E5           STR      R6,[R5, #+0]
   \   000002A0   0200A0E3           MOV      R0,#+2
   \   000002A4   01002DE9           PUSH     {R0}
   \   000002A8   400EA0E3           MOV      R0,#+1024
   \   000002AC   01002DE9           PUSH     {R0}
   \   000002B0   08009DE5           LDR      R0,[SP, #+8]
   \   000002B4   6420A0E3           MOV      R2,#+100
   \   000002B8   01002DE9           PUSH     {R0}
   \   000002BC   0410A0E1           MOV      R1,R4
   \   000002C0   0600A0E1           MOV      R0,R6
   \   000002C4   ........           _BLF     OS_CreateTask_SP,??OS_CreateTask_SP??rA
   1014                      OS_DecRI();
   \   000002C8   0100DBE5           LDRB     R0,[R11, #+1]
   \   000002CC   010040E2           SUB      R0,R0,#+1
   \   000002D0   0100CBE5           STRB     R0,[R11, #+1]
   \   000002D4   000CB0E1           LSLS     R0,R0,#+24
   \   000002D8   0CD08DE2           ADD      SP,SP,#+12
   \   000002DC   BAFFFF1A           BNE      ??StartTasks_10
   \   000002E0   ........           _BLF     OS_EnableInt,??OS_EnableInt??rA
   \   000002E4   B8FFFFEA           B        ??StartTasks_10
   1015                  } else {
   1016                      Master = true;
   \                     ??StartTasks_11:
   \   000002E8   0100A0E3           MOV      R0,#+1
   \   000002EC   0000C9E5           STRB     R0,[R9, #+0]
   1017                      StartUploadTask();
   \   000002F0   ........           _BLF     ??StartUploadTask,??StartUploadTask??rA
   1018                      ProgProgress = WD_START_COM_TASKS;
   \   000002F4   1800A0E3           MOV      R0,#+24
   \   000002F8   00008AE5           STR      R0,[R10, #+0]
   1019                      StartCommunication();
   \   000002FC   ........           BL       ??StartCommunication
   1020                      ProgProgress = WD_START_SYSINFO_TASKS;
   \   00000300   1B00A0E3           MOV      R0,#+27
   \   00000304   00008AE5           STR      R0,[R10, #+0]
   1021                      StartSysInfoTask();
   \   00000308   ........           BL       ??StartSysInfoTask
   1022                      ProgProgress = WD_START_MISC_TASKS;
   \   0000030C   1900A0E3           MOV      R0,#+25
   \   00000310   00008AE5           STR      R0,[R10, #+0]
   1023                      StartMiscTasks();
   \   00000314   ........           BL       ??StartMiscTasks
   1024                      ProgProgress = WD_START_STATIC_TASKS;
   \   00000318   1C00A0E3           MOV      R0,#+28
   \   0000031C   00008AE5           STR      R0,[R10, #+0]
   1025                      StartSendStaticDataTask();
   \   00000320   ........           BL       ??StartSendStaticDataTask
   1026                      ProgProgress = WD_START_INT_AD_TASKS;
   1027                      CREATE_TASK(&InclinometerHandle, "Inclinometer", InclinometerTask, 149, InclinometerStack);
   \   00000324   04329FE5           LDR      R3,??StartTasks_1+0x28  ;; ??InclinometerTask
   \   00000328   1A00A0E3           MOV      R0,#+26
   \   0000032C   00008AE5           STR      R0,[R10, #+0]
   \   00000330   0200A0E3           MOV      R0,#+2
   \   00000334   01002DE9           PUSH     {R0}
   \   00000338   400DA0E3           MOV      R0,#+4096
   \   0000033C   01002DE9           PUSH     {R0}
   \   00000340   8400A0E3           MOV      R0,#+132
   \   00000344   840C80E3           ORR      R0,R0,#0x8400
   \   00000348   050080E0           ADD      R0,R0,R5
   \   0000034C   01002DE9           PUSH     {R0}
   \   00000350   9520A0E3           MOV      R2,#+149
   \   00000354   181084E2           ADD      R1,R4,#+24
   \   00000358   8400A0E3           MOV      R0,#+132
   \   0000035C   940C80E3           ORR      R0,R0,#0x9400
   \   00000360   050080E0           ADD      R0,R0,R5
   \   00000364   ........           _BLF     OS_CreateTask_SP,??OS_CreateTask_SP??rA
   1028                      CREATE_TASK(&CalcMiscObjectsHandle, "CalcMiscObjects", CalcMiscObjectsTask,  90, CalcMiscObjectsStack);
   \   00000368   0200A0E3           MOV      R0,#+2
   \   0000036C   01002DE9           PUSH     {R0}
   \   00000370   7D0DA0E3           MOV      R0,#+8000
   \   00000374   01002DE9           PUSH     {R0}
   \   00000378   80002DE9           PUSH     {R7}
   \   0000037C   0830A0E1           MOV      R3,R8
   \   00000380   5A20A0E3           MOV      R2,#+90
   \   00000384   401084E2           ADD      R1,R4,#+64
   \   00000388   0600A0E1           MOV      R0,R6
   \   0000038C   ........           _BLF     OS_CreateTask_SP,??OS_CreateTask_SP??rA
   1029                      ModbusObject::StartExchangeData();
   \   00000390   ........           _BLF     ??StartExchangeData,??StartExchangeData??rA
   1030                      if ( PROProjectInfo::SimulateIO ) {
   1031                          StartSimulatorTasks();
   1032                      }
   1033                      //OS_SignalCSema(&SaveSettingSema);
   1034                      //PRogramObjectBase::WriteAll = true;
   1035                      LastStartTime = time(NULL);
   \   00000394   0000A0E3           MOV      R0,#+0
   \   00000398   ........           _BLF     time,??time??rA
   \   0000039C   28008AE5           STR      R0,[R10, #+40]
   1036                      ProgProgress  = WD_START_OK;
   \   000003A0   2100A0E3           MOV      R0,#+33
   \   000003A4   00008AE5           STR      R0,[R10, #+0]
   1037                      OS_IncDI();
   \   000003A8   ........           _BLF     OS_DisableInt,??OS_DisableInt??rA
   \   000003AC   0100DBE5           LDRB     R0,[R11, #+1]
   \   000003B0   010080E2           ADD      R0,R0,#+1
   \   000003B4   0100CBE5           STRB     R0,[R11, #+1]
   1038                      ExternAlarmSilence = new TSN_TASK();
   \   000003B8   4000A0E3           MOV      R0,#+64
   \   000003BC   ........           _BLF     `??operator new`,`??operator new??rA`
   \   000003C0   0060B0E1           MOVS     R6,R0
   \   000003C4   18D08DE2           ADD      SP,SP,#+24
   \   000003C8   0200000A           BEQ      ??StartTasks_14
   \   000003CC   4010A0E3           MOV      R1,#+64
   \   000003D0   ........           _BLF     __data_memzero,??__data_memzero??rA
   \   000003D4   000000EA           B        ??StartTasks_15
   \                     ??StartTasks_14:
   \   000003D8   0060A0E3           MOV      R6,#+0
   1039                      OS_CREATETASK(ExternAlarmSilence, "External AlarmSilence", ExternalAlarmSilenceTask, 100, ExternalAlarmSilenceStack);
   \                     ??StartTasks_15:
   \   000003DC   48319FE5           LDR      R3,??StartTasks_1+0x24  ;; ??ExternalAlarmSilenceTask
   \   000003E0   006085E5           STR      R6,[R5, #+0]
   \   000003E4   0200A0E3           MOV      R0,#+2
   \   000003E8   01002DE9           PUSH     {R0}
   \   000003EC   400EA0E3           MOV      R0,#+1024
   \   000003F0   01002DE9           PUSH     {R0}
   \   000003F4   08009DE5           LDR      R0,[SP, #+8]
   \   000003F8   6420A0E3           MOV      R2,#+100
   \   000003FC   01002DE9           PUSH     {R0}
   \   00000400   0410A0E1           MOV      R1,R4
   \   00000404   0600A0E1           MOV      R0,R6
   \   00000408   ........           _BLF     OS_CreateTask_SP,??OS_CreateTask_SP??rA
   1040                      OS_DecRI();
   \   0000040C   0100DBE5           LDRB     R0,[R11, #+1]
   \   00000410   010040E2           SUB      R0,R0,#+1
   \   00000414   0100CBE5           STRB     R0,[R11, #+1]
   \   00000418   000CB0E1           LSLS     R0,R0,#+24
   \   0000041C   0CD08DE2           ADD      SP,SP,#+12
   \   00000420   0000001A           BNE      ??StartTasks_16
   \   00000424   ........           _BLF     OS_EnableInt,??OS_EnableInt??rA
   1041                      CREATE_TASK(&PROInclinometer::TaskHandle[0], "RawIncData", PROInclinometer::RecIncDataTask,  60, PROInclinometer::TaskStack[0]);
   \                     ??StartTasks_16:
   \   00000428   04519FE5           LDR      R5,??StartTasks_1+0x2C  ;; ??TaskHandle_1
   \   0000042C   04619FE5           LDR      R6,??StartTasks_1+0x30  ;; ??TaskStack_1
   \   00000430   04319FE5           LDR      R3,??StartTasks_1+0x34  ;; ??RecIncDataTask
   \   00000434   0200A0E3           MOV      R0,#+2
   \   00000438   01002DE9           PUSH     {R0}
   \   0000043C   400EA0E3           MOV      R0,#+1024
   \   00000440   01002DE9           PUSH     {R0}
   \   00000444   0600A0E1           MOV      R0,R6
   \   00000448   01002DE9           PUSH     {R0}
   \   0000044C   3C20A0E3           MOV      R2,#+60
   \   00000450   281084E2           ADD      R1,R4,#+40
   \   00000454   0500A0E1           MOV      R0,R5
   \   00000458   ........           _BLF     OS_CreateTask_SP,??OS_CreateTask_SP??rA
   1042                      CREATE_TASK(&PROInclinometer::TaskHandle[1], "LogIncData", PROInclinometer::LogListTask,  60, PROInclinometer::TaskStack[1]);
   \   0000045C   DC309FE5           LDR      R3,??StartTasks_1+0x38  ;; ??LogListTask
   \   00000460   0200A0E3           MOV      R0,#+2
   \   00000464   01002DE9           PUSH     {R0}
   \   00000468   400EA0E3           MOV      R0,#+1024
   \   0000046C   01002DE9           PUSH     {R0}
   \   00000470   400E86E2           ADD      R0,R6,#+1024
   \   00000474   01002DE9           PUSH     {R0}
   \   00000478   3C20A0E3           MOV      R2,#+60
   \   0000047C   341084E2           ADD      R1,R4,#+52
   \   00000480   400085E2           ADD      R0,R5,#+64
   \   00000484   ........           _BLF     OS_CreateTask_SP,??OS_CreateTask_SP??rA
   \   00000488   18D08DE2           ADD      SP,SP,#+24
   1043                  }
   1044          #if (NETWORK == 1)
   1045                  StartNetwork();
   \                     ??StartTasks_17:
   \   0000048C   4EFFFFEA           B        ??StartTasks_10
   1046          #endif
   1047                  break;
   1048          #endif
   1049          
   1050              case DEVICE_PCSW:
   1051                  Master = false;
   \                     ??StartTasks_5:
   \   00000490   0000C9E5           STRB     R0,[R9, #+0]
   1052                  StartWindowTasks();
   \   00000494   ........           BL       ??StartWindowTasks
   1053                  //start Comms
   1054                  StartCommunication();
   \   00000498   ........           BL       ??StartCommunication
   1055                  StartMiscTasks();
   \   0000049C   ........           BL       ??StartMiscTasks
   \   000004A0   4AFFFFEA           B        ??StartTasks_8
   1056                  //   StartSimulatorTasks();
   1057                  break;
   1058              case DEVICE_TCU_SIMULATOR:
   1059                  Master = true;
   \                     ??StartTasks_6:
   \   000004A4   0100A0E3           MOV      R0,#+1
   \   000004A8   0000C9E5           STRB     R0,[R9, #+0]
   1060                  StartWindowTasks();
   \   000004AC   ........           BL       ??StartWindowTasks
   1061                  StartSimulatorCommunication();
   \   000004B0   ........           BL       ??StartSimulatorCommunication
   1062                  StartSysInfoTask();
   \   000004B4   ........           BL       ??StartSysInfoTask
   1063                  StartMiscTasks();
   \   000004B8   ........           BL       ??StartMiscTasks
   \   000004BC   43FFFFEA           B        ??StartTasks_8
   1064          //      StartSimulatorTasks();
   1065                  break;
   1066              case DEVICE_TDU_SIMULATOR:
   1067                  if ( !ConfigWarningsString.IsEmpty() ) {
   \                     ??StartTasks_7:
   \   000004C0   0B00A0E1           MOV      R0,R11
   \   000004C4   ........           _BLF     ??IsEmpty,??IsEmpty??rA
   \   000004C8   000050E3           CMP      R0,#+0
   \   000004CC   0800001A           BNE      ??StartTasks_18
   1068                      ProgProgress = WD_CONFIG_WARNING;
   1069                      ConfigWarnings->ExecDialogBox(NULL);
   \   000004D0   ........           LDR      R4,??DataTable44  ;; ConfigWarnings
   \   000004D4   1500A0E3           MOV      R0,#+21
   \   000004D8   00008AE5           STR      R0,[R10, #+0]
   \   000004DC   000094E5           LDR      R0,[R4, #+0]
   \   000004E0   0010A0E3           MOV      R1,#+0
   \   000004E4   ........           _BLF     ??ExecDialogBox,??ExecDialogBox??rA
   1070                      GUI_ExecCreatedDialog(ConfigWarnings->WinHandl);
   \   000004E8   000094E5           LDR      R0,[R4, #+0]
   \   000004EC   FA02D0E1           LDRSH    R0,[R0, #+42]
   \   000004F0   ........           _BLF     GUI_ExecCreatedDialog,??GUI_ExecCreatedDialog??rA
   1071                  }
   1072                  Master = true;
   \                     ??StartTasks_18:
   \   000004F4   0100A0E3           MOV      R0,#+1
   \   000004F8   0000C9E5           STRB     R0,[R9, #+0]
   1073                  StartWindowTasks();
   \   000004FC   ........           BL       ??StartWindowTasks
   1074                  StartSimulatorCommunication();
   \   00000500   ........           BL       ??StartSimulatorCommunication
   1075          //    StartAlarmDistributionTask();
   1076          //        StartMiscTasks();
   1077          //StartSimulatorTasks();
   1078                  break;
   1079              }
   1080          
   1081          #ifdef ANTDUSIM
   1082              /* Start multitasking */
   1083              START_MT();
   1084          #endif
   1085          
   1086          }
   \   00000504   31FFFFEA           B        ??StartTasks_8
   \                     ??StartTasks_1:
   \   00000508   ........           DC32     ??StatTask
   \   0000050C   ........           DC32     `?<Constant "External AlarmSilence">`
   \   00000510   ........           DC32     ExternAlarmSilence
   \   00000514   ........           DC32     ??SaveSettingsTask
   \   00000518   ........           DC32     ??SaveConfigTask
   \   0000051C   ........           DC32     ??CalcMiscObjectsTask
   \   00000520   14F0FF31           DC32     0x31fff014
   \   00000524   ........           DC32     CurrentDeviceAddress
   \   00000528   ........           DC32     OS_Counters
   \   0000052C   ........           DC32     ??ExternalAlarmSilenceTask
   \   00000530   ........           DC32     ??InclinometerTask
   \   00000534   ........           DC32     ??TaskHandle_1
   \   00000538   ........           DC32     ??TaskStack_1
   \   0000053C   ........           DC32     ??RecIncDataTask
   \   00000540   ........           DC32     ??LogListTask

   \                                 In segment DIFUNCT, align 4, keep-with-next, root
   \   00000000                      REQUIRE ?call_ctors
   \   00000000   ........           DC32    ??__sti__routine

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "External AlarmSilence">`:
   \   00000000   45787465726E       DC8 "External AlarmSilence"
   \              616C20416C61
   \              726D53696C65
   \              6E636500    
   \   00000016   0000               DC8 0, 0
   \   00000018   496E636C696E       DC8 "Inclinometer"
   \              6F6D65746572
   \              00          
   \   00000025   000000             DC8 0, 0, 0
   \   00000028   526177496E63       DC8 "RawIncData"
   \              4461746100  
   \   00000033   00                 DC8 0
   \   00000034   4C6F67496E63       DC8 "LogIncData"
   \              4461746100  
   \   0000003F   00                 DC8 0
   \   00000040   43616C634D69       DC8 "CalcMiscObjects"
   \              73634F626A65
   \              63747300    
   \   00000050   577269746520       DC8 "Write Config"
   \              436F6E666967
   \              00          
   \   0000005D   000000             DC8 0, 0, 0
   \   00000060   536176652053       DC8 "Save Settings"
   \              657474696E67
   \              7300        
   \   0000006E   0000               DC8 0, 0
   \   00000070   537461746963       DC8 "StaticTask"
   \              5461736B00  
   \   0000007B   00                 DC8 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant {&"BuzzerRelayTask", &"LightRelayTa`:
   \   00000000   ............       DC32 `?<Constant "BuzzerRelayTask">`, `?<Constant "LightRelayTask">`
   \              ....        
   \   00000008   ............       DC32 `?<Constant "LampRelayTask">`, `?<Constant "HornRelayTask">`
   \              ....        
   \   00000010   ............       DC32 `?<Constant "RelayTask 1">`, `?<Constant "RelayTask 2">`
   \              ....        

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "RelayTask 2">`:
   \   00000000   52656C617954       DC8 "RelayTask 2"
   \              61736B203200

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "RelayTask 1">`:
   \   00000000   52656C617954       DC8 "RelayTask 1"
   \              61736B203100

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "HornRelayTask">`:
   \   00000000   486F726E5265       DC8 "HornRelayTask"
   \              6C6179546173
   \              6B00        
   \   0000000E   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "Config.txt">`:
   \   00000000   436F6E666967       DC8 "Config.txt"
   \              2E74787400  
   \   0000000B   00                 DC8 0
   \   0000000C   4E657720436F       DC8 "New Config"
   \              6E66696700  
   \   00000017   00                 DC8 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "ReceiveTask2">`:
   \   00000000   526563656976       DC8 "ReceiveTask2"
   \              655461736B32
   \              00          
   \   0000000D   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "LightRelayTask">`:
   \   00000000   4C6967687452       DC8 "LightRelayTask"
   \              656C61795461
   \              736B00      
   \   0000000F   00                 DC8 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant {&"ReceiveTask1", &"ReceiveTask2", `:
   \   00000000   ............       DC32 `?<Constant "ReceiveTask1">`, `?<Constant "ReceiveTask2">`
   \              ....        
   \   00000008   ............       DC32 `?<Constant "ReceiveTask3">`, `?<Constant "ReceiveTask4">`
   \              ....        
   \   00000010   ............       DC32 `?<Constant "ReceiveTask5">`, `?<Constant "ReceiveTask6">`
   \              ....        
   \   00000018   ........           DC32 `?<Constant "ReceiveTask7">`
   \   0000001C   436865636B46       DC8 "CheckFreeAlarms"
   \              726565416C61
   \              726D7300    
   \   0000002C   436F6D53656E       DC8 "ComSendTask"
   \              645461736B00
   \   00000038   4E657453656E       DC8 "NetSendTask"
   \              645461736B00

   \                                 In segment DATA_C, align 4, align-sorted
   \   00000000   54435500           DC8 "TCU"

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "ReceiveTask7">`:
   \   00000000   526563656976       DC8 "ReceiveTask7"
   \              655461736B37
   \              00          
   \   0000000D   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "ReceiveTask6">`:
   \   00000000   526563656976       DC8 "ReceiveTask6"
   \              655461736B36
   \              00          
   \   0000000D   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "ReceiveTask5">`:
   \   00000000   526563656976       DC8 "ReceiveTask5"
   \              655461736B35
   \              00          
   \   0000000D   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "ReceiveTask4">`:
   \   00000000   526563656976       DC8 "ReceiveTask4"
   \              655461736B34
   \              00          
   \   0000000D   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "ReceiveTask3">`:
   \   00000000   526563656976       DC8 "ReceiveTask3"
   \              655461736B33
   \              00          
   \   0000000D   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "LampRelayTask">`:
   \   00000000   4C616D705265       DC8 "LampRelayTask"
   \              6C6179546173
   \              6B00        
   \   0000000E   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "ReceiveTask1">`:
   \   00000000   526563656976       DC8 "ReceiveTask1"
   \              655461736B31
   \              00          
   \   0000000D   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "SysinfoTask">`:
   \   00000000   537973696E66       DC8 "SysinfoTask"
   \              6F5461736B00

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "ControllerTask">`:
   \   00000000   436F6E74726F       DC8 "ControllerTask"
   \              6C6C65725461
   \              736B00      
   \   0000000F   00                 DC8 0
   \   00000010   4C6F67546173       DC8 "LogTask"
   \              6B00        

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "Send Static Data">`:
   \   00000000   53656E642053       DC8 "Send Static Data"
   \              746174696320
   \              4461746100  
   \   00000011   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "Alarm Window">`:
   \   00000000   416C61726D20       DC8 "Alarm Window"
   \              57696E646F77
   \              00          
   \   0000000D   000000             DC8 0, 0, 0
   \   00000010   4755495F5441       DC8 "GUI_TASK"
   \              534B00      
   \   00000019   000000             DC8 0, 0, 0
   \   0000001C   507265735769       DC8 "PresWinTask"
   \              6E5461736B00
   \   00000028   416C61726D42       DC8 "AlarmBlinkTask"
   \              6C696E6B5461
   \              736B00      
   \   00000037   00                 DC8 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "BuzzerRelayTask">`:
   \   00000000   42757A7A6572       DC8 "BuzzerRelayTask"
   \              52656C617954
   \              61736B00    

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "CloseWinTask">`:
   \   00000000   436C6F736557       DC8 "CloseWinTask"
   \              696E5461736B
   \              00          
   \   0000000D   000000             DC8 0, 0, 0

   \                                 In segment CODE, align 4, keep-with-next
   \   static __??Code32?? __intrinsic __code __interwork __atpcs void __sti__routine()
   \                     ??__sti__routine:
   \   00000000   ........           LDR      R0,??DataTable0  ;; TaskVector
   \   00000004   00402DE9           PUSH     {LR}
   \   00000008   0010A0E3           MOV      R1,#+0
   \   0000000C   001080E5           STR      R1,[R0, #+0]
   \   00000010   041080E5           STR      R1,[R0, #+4]
   \   00000014   081080E5           STR      R1,[R0, #+8]
   \   00000018   08009FE5           LDR      R0,??__sti__routine_1  ;; ?_0
   \   0000001C   ........           _BLF     __record_needed_destruction,??__record_needed_destruction??rA
   \   00000020   0040BDE8           POP      {LR}
   \   00000024   1EFF2FE1           BX       LR               ;; return
   \                     ??__sti__routine_1:
   \   00000028   ........           DC32     ?_0

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable0:
   \   00000000   ........           DC32     TaskVector

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable4:
   \   00000000   18F0FF31           DC32     0x31fff018

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable6:
   \   00000000   ........           DC32     CurrentWinID

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable11:
   \   00000000   ........           DC32     DutyMsgBuf

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable15:
   \   00000000   ........           DC32     CurrentDeviceId

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable21:
   \   00000000   ........           DC32     MainWindow

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable22:
   \   00000000   ........           DC32     CurrentWinID

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable23:
   \   00000000   ........           DC32     ConfigWarningsString

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable24:
   \   00000000   ........           DC32     PhysKeyPressed

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable25:
   \   00000000   ........           DC32     ConfigWarnings

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable26:
   \   00000000   ........           DC32     WaterIngrWindow

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable27:
   \   00000000   ........           DC32     ??MySelf

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable29:
   \   00000000   ........           DC32     Master

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable32:
   \   00000000   ........           DC32     ??Channels

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable33:
   \   00000000   ........           DC32     FreeAlarmInfoList

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable36:
   \   00000000   ........           DC32     ExternAlarmSilence

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable37:
   \   00000000   ........           DC32     ??TaskEntryPoint_1

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable39:
   \   00000000   ........           DC32     TaskVector

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable40:
   \   00000000   ........           DC32     ConfigWarningsString

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable41:
   \   00000000   ........           DC32     CurrentDeviceId

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable42:
   \   00000000   ........           DC32     Master

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable43:
   \   00000000   ........           DC32     ??MySelf

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable44:
   \   00000000   ........           DC32     ConfigWarnings
   1087          
   1088          

   Maximum stack usage in bytes:

     Function                       CSTACK
     --------                       ------
     ANPRO10_IO_Handler(TSNUart *)    128
     ActivateCtrl(char)                12
     AlarmTask()                       28
     AlarmWindowTask()                  8
     CalcMiscObjectsTask()             56
     CheckComActivity()                 4
     CheckFreeAlarmsTask()              8
     ControllerTask()                   8
     DutyTask(void *)                  36
     ExternalAlarmSilenceTask()         8
     InclinometerTask()                 8
     LogTask()                         20
     MakeLog(int)                      40
     MsgBoxTimerTask()                 40
     PresentWindowsTask()              12
     SaveConfigTask()                  16
     SaveSettingsTask()                84
     StartCloseMsgBoxTask()            16
     StartCommunication()             116
     StartMiscTasks()                  24
     StartRelayTasks()                 60
     StartSendStaticDataTask()         16
     StartSimulatorCommunication()     16
     StartSimulatorTasks()              0
     StartSysInfoTask()                16
     StartTasks()                      64
     StartWindowTasks()                48
     StatTask()                        60
     _GUI_Task()                        4
     _Tree<_Tset_traits<AlarmBasic *, less<AlarmBasic *>, allocator<AlarmBasic *>, false>>::insert(AlarmBasic *)
                                       48
     _Tree<_Tset_traits<IOUnit *, less<IOUnit *>, allocator<IOUnit *>, false>>::_Erase(_Tree<_Tset_traits<IOUnit *, less<IOUnit *>, allocator<IOUnit *>, false>>::_Nodeptr)
                                       16
     _Tree<_Tset_traits<IOUnit *, less<IOUnit *>, allocator<IOUnit *>, false>>::insert(IOUnit *)
                                       48
     _Tree<_Tset_traits<PRogramObject *, less<PRogramObject *>, allocator<PRogramObject *>, false>>::_Erase(_Tree<_Tset_traits<PRogramObject *, less<PRogramObject *>, allocator<PRogramObject *>, false>>::_Nodeptr)
                                       16
     _Tree<_Tset_traits<PRogramObject *, less<PRogramObject *>, allocator<PRogramObject *>, false>>::insert(PRogramObject *)
                                       48
     _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::_Copy(_Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::_Nodeptr, _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::_Nodeptr)
                                       32
     _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::_Erase(_Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::_Nodeptr)
                                       16
     _Tree_algobase<allocator<void>>::_Clear()
                                        0
     _Tree_algobase<allocator<void>>::_GenIter::_Dec()
                                        0
     _Tree_algobase<allocator<void>>::_GenIter::_Inc()
                                        0
     _Tree_algobase<allocator<void>>::_Insert(bool, _Tree_algobase<allocator<void>>::_Genptr, _Tree_algobase<allocator<void>>::_Genptr)
                                       20
     _Tree_algobase<allocator<void>>::_Lrotate(_Tree_algobase<allocator<void>>::_Genptr)
                                        0
     _Tree_algobase<allocator<void>>::_Rrotate(_Tree_algobase<allocator<void>>::_Genptr)
                                        0
     _Vector_impl<OS_TASK *, allocator<OS_TASK *>>::_Make_room(OS_TASK **, unsigned int)
                                       32
     __sti__routine()                   4
     vector<OS_TASK *>::~vector()       8


   Segment part sizes:

     Function/Label                 Bytes
     --------------                 -----
     _Tree_algobase<allocator<void>>::_GenIter::_Dec()
                                       120
     _Tree_algobase<allocator<void>>::_GenIter::_Inc()
                                       116
     _Tree_algobase<allocator<void>>::_Clear()
                                        36
     _Tree_algobase<allocator<void>>::_Rrotate(_Tree_algobase<allocator<void>>::_Genptr)
                                        84
     _Tree_algobase<allocator<void>>::_Lrotate(_Tree_algobase<allocator<void>>::_Genptr)
                                        84
     _Tree_algobase<allocator<void>>::_Insert(bool, _Tree_algobase<allocator<void>>::_Genptr, _Tree_algobase<allocator<void>>::_Genptr)
                                       368
     _Tree<_Tset_traits<IOUnit *, less<IOUnit *>, allocator<IOUnit *>, false>>::insert(IOUnit *)
                                       320
     _Tree<_Tset_traits<PRogramObject *, less<PRogramObject *>, allocator<PRogramObject *>, false>>::insert(PRogramObject *)
                                       320
     _Tree<_Tset_traits<AlarmBasic *, less<AlarmBasic *>, allocator<AlarmBasic *>, false>>::insert(AlarmBasic *)
                                       320
     _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::_Copy(_Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::_Nodeptr, _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::_Nodeptr)
                                       148
     _Tree<_Tset_traits<PRogramObject *, less<PRogramObject *>, allocator<PRogramObject *>, false>>::_Erase(_Tree<_Tset_traits<PRogramObject *, less<PRogramObject *>, allocator<PRogramObject *>, false>>::_Nodeptr)
                                        76
     _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::_Erase(_Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::_Nodeptr)
                                        76
     _Tree<_Tset_traits<IOUnit *, less<IOUnit *>, allocator<IOUnit *>, false>>::_Erase(_Tree<_Tset_traits<IOUnit *, less<IOUnit *>, allocator<IOUnit *>, false>>::_Nodeptr)
                                        76
     _Vector_impl<OS_TASK *, allocator<OS_TASK *>>::_Make_room(OS_TASK **, unsigned int)
                                       244
     vector<OS_TASK *>::~vector()       52
     ProgProgress                        4
     FlashErrorStatus                    4
     LastStartTime                       4
     SaveSettingsTask()                308
     SaveConfigTask()                  156
     ExternalAlarmSilenceTask()         76
     MakeLog(int)                      124
     LogTask()                         156
     AlarmWindowTask()                 124
     AlarmTask()                       284
     DutyTask(void *)                  288
     StartRelayTasks()                 320
     InclinometerTask()                112
     CalcMiscObjectsTask()             704
     CheckComActivity()                 84
     ActivateCtrl(char)                260
     ControllerTask()                  116
     MsgBoxTimerTask()                 104
     StartCloseMsgBoxTask()             68
     CheckFreeAlarmsTask()              32
     PresentWindowsTask()              972
     _GUI_Task()                        16
     ANPRO10_IO_Handler(TSNUart *)     788
     StartWindowTasks()                284
     StartSendStaticDataTask()          68
     StartMiscTasks()                  156
     StartSimulatorTasks()               4
     StartSysInfoTask()                 72
     StartCommunication()              624
     StartSimulatorCommunication()      80
     ExternAlarmSilence             299888
     LogTaskHandle                   18560
     DutyMsgBuf                      12816
     TestMode                            1
     MsgBoxTimerTaskHandle            2112
     CloseWinTimerBuf                   24
     ANPRO10IOTask                       4
     SendStaticDataTaskHandle        16448
     ExecSimulatorTCB                   64
     TaskVector                         36
     StatTask()                        468
     StartTasks()                     1348
     ?<Constant "External AlarmSilence">
                                       124
     ?<Constant {&"BuzzerRelayTask", &"LightRelayTa
                                        24
     ?<Constant "RelayTask 2">          12
     ?<Constant "RelayTask 1">          12
     ?<Constant "HornRelayTask">        16
     ?<Constant "Config.txt">           24
     ?<Constant "ReceiveTask2">         16
     ?<Constant "LightRelayTask">       16
     ?<Constant {&"ReceiveTask1", &"ReceiveTask2",
                                        68
     ?<Constant "TCU">                   4
     ?<Constant "ReceiveTask7">         16
     ?<Constant "ReceiveTask6">         16
     ?<Constant "ReceiveTask5">         16
     ?<Constant "ReceiveTask4">         16
     ?<Constant "ReceiveTask3">         16
     ?<Constant "LampRelayTask">        16
     ?<Constant "ReceiveTask1">         16
     ?<Constant "SysinfoTask">          12
     ?<Constant "ControllerTask">       24
     ?<Constant "Send Static Data">     20
     ?<Constant "Alarm Window">         56
     ?<Constant "BuzzerRelayTask">      16
     ?<Constant "CloseWinTask">         16
     __sti__routine()                   44
     ??DataTable0                        4
     ??DataTable4                        4
     ??DataTable6                        4
     ??DataTable11                       4
     ??DataTable15                       4
     ??DataTable21                       4
     ??DataTable22                       4
     ??DataTable23                       4
     ??DataTable24                       4
     ??DataTable25                       4
     ??DataTable26                       4
     ??DataTable27                       4
     ??DataTable29                       4
     ??DataTable32                       4
     ??DataTable33                       4
     ??DataTable36                       4
     ??DataTable37                       4
     ??DataTable39                       4
     ??DataTable40                       4
     ??DataTable41                       4
     ??DataTable42                       4
     ??DataTable43                       4
     ??DataTable44                       4
      Others                          1556

 
  12 296 bytes in segment CODE
      12 bytes in segment DATA_AN
     584 bytes in segment DATA_C
 349 957 bytes in segment DATA_Z
       4 bytes in segment DIFUNCT
      12 bytes in segment INITTAB
 
   8 336 bytes of CODE  memory (+ 3 976 bytes shared)
     584 bytes of CONST memory
 349 957 bytes of DATA  memory (+    12 bytes shared)

Errors: none
Warnings: none
