##############################################################################
#                                                                            #
# IAR ARM ANSI C/C++ Compiler V4.42A/W32               14/Sep/2022  15:18:13 #
# Copyright 1999-2005 IAR Systems. All rights reserved.                      #
#                                                                            #
#    Cpu mode        =  interwork                                            #
#    Endian          =  little                                               #
#    Stack alignment =  4                                                    #
#    Source file     =  D:\S2Prog\TXU\src\TDUCaldataWin.cpp                  #
#    Command line    =  D:\S2Prog\TXU\src\TDUCaldataWin.cpp --fpu None -D    #
#                       OS_LIBMODE_SP -D CPU_S3C2410 -D OS_RAMVECT=0 -D      #
#                       OS_UART=-1 -D S2TXU -D USE_LZO=1 -D __ARM_LIBRARY__  #
#                       -D WATCHDOG=1 -D NETWORK=1 -lCN                      #
#                       D:\S2Prog\TXU\Debug\List\ -o                         #
#                       D:\S2Prog\TXU\Debug\Obj\ -s9 --debug --cpu_mode arm  #
#                       --endian little --cpu ARM920T --stack_align 4        #
#                       --interwork -e --enable_multibytes --eec++           #
#                       --dlib_config "C:\Program Files (x86)\IAR            #
#                       Systems\Embedded Workbench                           #
#                       4.0\arm\LIB\dl4tpainl8n.h" -I                        #
#                       D:\S2Prog\TXU\GUI\CORE\ -I D:\S2Prog\TXU\GUI\WM\ -I  #
#                       D:\S2Prog\TXU\GUI\WIDGET\ -I D:\S2Prog\TXU\CONFIG\   #
#                       -I D:\S2Prog\TXU\INC\ -I D:\S2Prog\TXU\..\SHARED\INC #
#                       \ -I D:\S2Prog\TXU\..\SHARED\SRC\ -I                 #
#                       D:\S2Prog\TXU\..\SHARED\LZO\minilzo.210\ -I          #
#                       D:\S2Prog\TXU\lwip-1.4.1\src\include\ -I             #
#                       D:\S2Prog\TXU\lwip-1.4.1\src\include\ipv4\ -I        #
#                       D:\S2Prog\TXU\lwip-1.4.1\src\ -I                     #
#                       D:\S2Prog\TXU\..\SHARED\Database\ -I                 #
#                       D:\S2Prog\TXU\src\ -I "C:\Program Files (x86)\IAR    #
#                       Systems\Embedded Workbench 4.0\arm\INC\"             #
#                       --inline_threshold=2                                 #
#    List file       =  D:\S2Prog\TXU\Debug\List\TDUCaldataWin.lst           #
#    Object file     =  D:\S2Prog\TXU\Debug\Obj\TDUCaldataWin.r79            #
#                                                                            #
#                                                                            #
##############################################################################

D:\S2Prog\TXU\src\TDUCaldataWin.cpp
      1          #include "TDUIncludes.h"

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void operator+(string const &, char const *)
   \                     `??operator+`:
   \   00000000   F0402DE9           PUSH     {R4-R7,LR}
   \   00000004   1CD04DE2           SUB      SP,SP,#+28
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   0150A0E1           MOV      R5,R1
   \   00000010   0260A0E1           MOV      R6,R2
   \   00000014   0020A0E3           MOV      R2,#+0
   \   00000018   0010A0E3           MOV      R1,#+0
   \   0000001C   0D00A0E1           MOV      R0,SP
   \   00000020   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000024   70009FE5           LDR      R0,`??operator+_1`  ;; ??npos
   \   00000028   0020A0E3           MOV      R2,#+0
   \   0000002C   007090E5           LDR      R7,[R0, #+0]
   \   00000030   0510A0E1           MOV      R1,R5
   \   00000034   0730A0E1           MOV      R3,R7
   \   00000038   0D00A0E1           MOV      R0,SP
   \   0000003C   ........           _BLF     ??assign,??assign??rA
   \   00000040   0600A0E1           MOV      R0,R6
   \   00000044   ........           _BLF     strlen,??strlen??rA
   \   00000048   0020A0E1           MOV      R2,R0
   \   0000004C   0610A0E1           MOV      R1,R6
   \   00000050   0D00A0E1           MOV      R0,SP
   \   00000054   ........           _BLF     ??append,??append??rA
   \   00000058   0050A0E1           MOV      R5,R0
   \   0000005C   0020A0E3           MOV      R2,#+0
   \   00000060   0210A0E1           MOV      R1,R2
   \   00000064   0400A0E1           MOV      R0,R4
   \   00000068   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   0000006C   0730A0E1           MOV      R3,R7
   \   00000070   0020A0E3           MOV      R2,#+0
   \   00000074   0510A0E1           MOV      R1,R5
   \   00000078   0400A0E1           MOV      R0,R4
   \   0000007C   ........           _BLF     ??assign,??assign??rA
   \   00000080   0020A0E3           MOV      R2,#+0
   \   00000084   0110A0E3           MOV      R1,#+1
   \   00000088   0D00A0E1           MOV      R0,SP
   \   0000008C   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000090   1CD08DE2           ADD      SP,SP,#+28
   \   00000094   F040BDE8           POP      {R4-R7,LR}
   \   00000098   1EFF2FE1           BX       LR               ;; return
   \                     `??operator+_1`:
   \   0000009C   ........           DC32     ??npos

   \                                 In segment DATA_Z, align 4, align-sorted
   \   static GUI_FONT const __data TDU_FONT_ST
   \                     TDU_FONT_ST:
   \   00000000                      DS8 36

   \                                 In segment CODE, align 4, keep-with-next
      2          TDUCalDataWin::TDUCalDataWin(void) {
   \                     ??TDUCalDataWin:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   ........           _BLF     ??TDUBasicWin,??TDUBasicWin??rA
   \   0000000C   500084E2           ADD      R0,R4,#+80
   \   00000010   ........           _BLF     ??AnsiString,??AnsiString??rA
      3              CurrentHWUnit       = NULL;
   \   00000014   0000A0E3           MOV      R0,#+0
   \   00000018   380084E5           STR      R0,[R4, #+56]
      4              UserTouch           = false;
   \   0000001C   0010A0E3           MOV      R1,#+0
   \   00000020   3C10C4E5           STRB     R1,[R4, #+60]
      5              TimerCount          = 0;
   \   00000024   400084E5           STR      R0,[R4, #+64]
      6              PreviousSysWin      = TDU_NO_WIN;
   \   00000028   700084E5           STR      R0,[R4, #+112]
      7              IsClosed            = true;
   \   0000002C   0100A0E3           MOV      R0,#+1
   \   00000030   6C00C4E5           STRB     R0,[R4, #+108]
      8              LevOffsetWinEnable = true;
   \   00000034   3600C4E5           STRB     R0,[R4, #+54]
      9          }
   \   00000038   0400A0E1           MOV      R0,R4
   \   0000003C   1040BDE8           POP      {R4,LR}
   \   00000040   1EFF2FE1           BX       LR               ;; return
     10          

   \                                 In segment CODE, align 4, keep-with-next
     11          TDUCalDataWin::~TDUCalDataWin(void) {
   \                     `?~TDUCalDataWin`:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0040A0E1           MOV      R4,R0
     12          }
   \   00000008   0020A0E3           MOV      R2,#+0
   \   0000000C   0110A0E3           MOV      R1,#+1
   \   00000010   500084E2           ADD      R0,R4,#+80
   \   00000014   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000018   0400A0E1           MOV      R0,R4
   \   0000001C   ........           _BLF     `?~TDUBasicWin`,`?~TDUBasicWin??rA`
   \   00000020   1040BDE8           POP      {R4,LR}
   \   00000024   1EFF2FE1           BX       LR               ;; return
     13          

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant {{2207, 0, 546}, {353, 0, 547}, {28`:
   \   00000000   9F0800000000       DC32 2207, 0, 546, 353, 0, 547, 288, 0, 1, 354, 0, 126, 356, 0, 127
   \              000022020000
   \              610100000000
   \              000023020000
   \              200100000000
   \              000001000000
   \              620100000000
   \              00007E000000
   \              640100000000
   \              00007F000000
   \   0000003C   670100000000       DC32 359, 0, 128, 361, 0, 1000, 2558, 0, 550
   \              000080000000
   \              690100000000
   \              0000E8030000
   \              FE0900000000
   \              000026020000
     14          const GUI_WIDGET_CREATE_INFO TDUCalDataWin::aDialogCreate[] =
   \                     ??aDialogCreate:
   \   00000060   ............       DC32 FRAMEWIN_CreateIndirect, `?<Constant "Calibration Data">`
   \              ....        
   \   00000068   9F0800000000       DC16 2207, 0, 0, 286, 198, 128
   \              1E01C6008000
   \   00000074   00000000....       DC32 0, TEXT_CreateIndirect, `?<Constant "SnsInfo">`
   \              ............
   \   00000080   600102000000       DC16 352, 2, 0, 281, 15, 0
   \              19010F000000
   \   0000008C   00000000           DC8 0, 0, 0, 0
   \   00000090   ............       DC32 TEXT_CreateIndirect, `?<Constant "SerNum">`
   \              ....        
   \   00000098   610102000F00       DC16 353, 2, 15, 38, 15, 0
   \              26000F000000
   \   000000A4   00000000           DC8 0, 0, 0, 0
   \   000000A8   ........0000       DC32 EDIT_CreateIndirect, 0H
   \              0000        
   \   000000B0   00012D000F00       DC16 256, 45, 15, 50, 15, 0
   \              32000F000000
   \   000000BC   00000000           DC8 0, 0, 0, 0
   \   000000C0   ........0000       DC32 CHECKBOX_CreateIndirect, 0H
   \              0000        
   \   000000C8   20018A000F00       DC16 288, 138, 15, 80, 15, 0
   \              50000F000000
   \   000000D4   00000000           DC8 0, 0, 0, 0
   \   000000D8   ........0000       DC32 TEXT_CreateIndirect, 0H
   \              0000        
   \   000000E0   6601D2000F00       DC16 358, 210, 15, 50, 15, 0
   \              32000F000000
   \   000000EC   00000000           DC8 0, 0, 0, 0
   \   000000F0   ............       DC32 TEXT_CreateIndirect, `?<Constant "Gain">`
   \              ....        
   \   000000F8   620102001E00       DC16 354, 2, 30, 38, 15, 0
   \              26000F000000
   \   00000104   00000000           DC8 0, 0, 0, 0
   \   00000108   ........0000       DC32 EDIT_CreateIndirect, 0H
   \              0000        
   \   00000110   01012D001E00       DC16 257, 45, 30, 50, 15, 1
   \              32000F000100
   \   0000011C   00000000           DC8 0, 0, 0, 0
   \   00000120   ............       DC32 TEXT_CreateIndirect, `?<Constant "">_1`
   \              ....        
   \   00000128   63018A001E00       DC16 355, 138, 30, 130, 15, 0
   \              82000F000000
   \   00000134   00000000           DC8 0, 0, 0, 0
   \   00000138   ............       DC32 TEXT_CreateIndirect, `?<Constant "Offset">`
   \              ....        
   \   00000140   640102002D00       DC16 356, 2, 45, 38, 15, 0
   \              26000F000000
   \   0000014C   00000000           DC8 0, 0, 0, 0
   \   00000150   ........0000       DC32 EDIT_CreateIndirect, 0H
   \              0000        
   \   00000158   02012D002D00       DC16 258, 45, 45, 50, 15, 1
   \              32000F000100
   \   00000164   00000000           DC8 0, 0, 0, 0
   \   00000168   ............       DC32 TEXT_CreateIndirect, `?<Constant "">_1`
   \              ....        
   \   00000170   65015F002D00       DC16 357, 95, 45, 40, 15, 0
   \              28000F000000
   \   0000017C   00000000           DC8 0, 0, 0, 0
   \   00000180   ............       DC32 TEXT_CreateIndirect, `?<Constant "Table offset">`
   \              ....        
   \   00000188   69018A002D00       DC16 361, 138, 45, 70, 15, 0
   \              46000F000000
   \   00000194   00000000           DC8 0, 0, 0, 0
   \   00000198   ........0000       DC32 EDIT_CreateIndirect, 0H
   \              0000        
   \   000001A0   0401D2002D00       DC16 260, 210, 45, 50, 15, 1
   \              32000F000100
   \   000001AC   00000000           DC8 0, 0, 0, 0
   \   000001B0   ............       DC32 TEXT_CreateIndirect, `?<Constant "Value">`
   \              ....        
   \   000001B8   670102003C00       DC16 359, 2, 60, 38, 15, 0
   \              26000F000000
   \   000001C4   00000000           DC8 0, 0, 0, 0
   \   000001C8   ........0000       DC32 EDIT_CreateIndirect, 0H
   \              0000        
   \   000001D0   03012D003C00       DC16 259, 45, 60, 50, 15, 1
   \              32000F000100
   \   000001DC   00000000           DC8 0, 0, 0, 0
   \   000001E0   ............       DC32 TEXT_CreateIndirect, `?<Constant "">_1`
   \              ....        
   \   000001E8   68015F003C00       DC16 360, 95, 60, 40, 15, 0
   \              28000F000000
   \   000001F4   00000000           DC8 0, 0, 0, 0
   \   000001F8   ............       DC32 TEXT_CreateIndirect, `?<Constant "Level offset">`
   \              ....        
   \   00000200   FE098A003C00       DC16 2558, 138, 60, 70, 15, 0
   \              46000F000000
   \   0000020C   00000000           DC8 0, 0, 0, 0
   \   00000210   ........0000       DC32 EDIT_CreateIndirect, 0H
   \              0000        
   \   00000218   0501D2003C00       DC16 261, 210, 60, 50, 15, 1
   \              32000F000100
   \   00000224   00000000           DC8 0, 0, 0, 0
   \   00000228   ........0000       DC32 LISTVIEW_CreateIndirect, 0H
   \              0000        
   \   00000230   000200004B00       DC16 512, 0, 75, 281, 105, 0
   \              190169000000
   \   0000023C   00000000           DC8 0, 0, 0, 0
     15          {
     16              { FRAMEWIN_CreateIndirect,  "Calibration Data", TDU_CALDATA_WIN,  0,   0, 286, 198, FRAMEWIN_CF_MAXIMIZED, 0 },
     17              { TEXT_CreateIndirect,      "SnsInfo", GUI_ID_TEXT0,  2,   0, 281,  15, TEXT_CF_LEFT },
     18              { TEXT_CreateIndirect,      "SerNum", GUI_ID_TEXT1,  2,  15,  38,  15, TEXT_CF_LEFT },
     19              { EDIT_CreateIndirect,      NULL, GUI_ID_EDIT0,  45,  15,  50,  15, TEXT_CF_LEFT },
     20              { CHECKBOX_CreateIndirect,  NULL, GUI_ID_CHECK0, 138,  15,  80,  15, TEXT_CF_LEFT },
     21              { TEXT_CreateIndirect,      NULL, GUI_ID_TEXT6, 210,  15,  50,  15, TEXT_CF_LEFT },
     22          
     23              { TEXT_CreateIndirect,      "Gain", GUI_ID_TEXT2,  2,  30,  38,  15, TEXT_CF_LEFT },
     24              { EDIT_CreateIndirect,      NULL, GUI_ID_EDIT1, 45,  30,  50,  15, TEXT_CF_RIGHT },
     25              { TEXT_CreateIndirect,      "", GUI_ID_TEXT3, 138,  30, 130,  15, TEXT_CF_LEFT },
     26          
     27              { TEXT_CreateIndirect,      "Offset", GUI_ID_TEXT4,  2,  45,  38,  15, TEXT_CF_LEFT },
     28              { EDIT_CreateIndirect,      NULL, GUI_ID_EDIT2, 45,  45,  50,  15, TEXT_CF_RIGHT },
     29              { TEXT_CreateIndirect,      "", GUI_ID_TEXT5, 95,  45,  40,  15, TEXT_CF_LEFT },
     30          
     31              { TEXT_CreateIndirect,      "Table offset", GUI_ID_TEXT9, 138,  45,  70,  15, TEXT_CF_LEFT },
     32              { EDIT_CreateIndirect,      NULL, GUI_ID_EDIT4, 210,  45,  50,  15, TEXT_CF_RIGHT },
     33          
     34              { TEXT_CreateIndirect,      "Value", GUI_ID_TEXT7,  2,  60,  38,  15, TEXT_CF_LEFT },
     35              { EDIT_CreateIndirect,      NULL, GUI_ID_EDIT3, 45,  60,  50,  15, TEXT_CF_RIGHT },
     36              { TEXT_CreateIndirect,      "", GUI_ID_TEXT8, 95,  60,  40,  15, TEXT_CF_LEFT },
     37          
     38              { TEXT_CreateIndirect,      "Level offset", GUI_ID_TEXT10, 138,  60,  70,  15, TEXT_CF_LEFT },
     39              { EDIT_CreateIndirect,      NULL, GUI_ID_EDIT5, 210,  60,  50,  15, TEXT_CF_RIGHT },
     40          
     41              { LISTVIEW_CreateIndirect,  NULL, GUI_ID_LISTVIEW0,  0,  75, 281, 105, 0 },
     42          
     43          };
     44          
     45          

   \                                 In segment CODE, align 4, keep-with-next
     46          void TDUCalDataWin::ExecDialogBox(WM_HWIN hCurrentWin) {
   \                     ??ExecDialogBox:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
     47              SystemWindow->Protect();
   \   00000004   ........           LDR      R5,??DataTable9  ;; SystemWindow
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   000095E5           LDR      R0,[R5, #+0]
   \   00000010   0160A0E1           MOV      R6,R1
   \   00000014   ........           _BLF     ??Protect,??Protect??rA
     48              if ( IsClosed ) {
   \   00000018   6C00D4E5           LDRB     R0,[R4, #+108]
   \   0000001C   000050E3           CMP      R0,#+0
   \   00000020   1D00000A           BEQ      ??ExecDialogBox_1
     49                  IsClosed = false;
     50                  WinHandl = GUI_CreateDialogBox(aDialogCreate, GUI_COUNTOF(aDialogCreate), &cbSysWin,
     51                                                 hCurrentWin, 0, 0);
   \   00000024   ........           LDR      R2,??DataTable7  ;; ??cbSysWin
   \   00000028   0000A0E3           MOV      R0,#+0
   \   0000002C   6C00C4E5           STRB     R0,[R4, #+108]
   \   00000030   01002DE9           PUSH     {R0}
   \   00000034   01002DE9           PUSH     {R0}
   \   00000038   74009FE5           LDR      R0,??ExecDialogBox_2  ;; `?<Constant {{2207, 0, 546}, {353, 0, 547}, {28` + 96
   \   0000003C   0630A0E1           MOV      R3,R6
     52                  PreviousSysWin = SystemWindow->CurrentSysWin;
     53                  SystemWindow->CurrentSysWin = TDU_CALWIN;
     54                  ButWindow->EnableButton(0, false);
   \   00000040   ........           LDR      R6,??DataTable8  ;; ButWindow
   \   00000044   1410A0E3           MOV      R1,#+20
   \   00000048   ........           _BLF     GUI_CreateDialogBox,??GUI_CreateDialogBox??rA
   \   0000004C   BA02C4E1           STRH     R0,[R4, #+42]
   \   00000050   000095E5           LDR      R0,[R5, #+0]
   \   00000054   0020A0E3           MOV      R2,#+0
   \   00000058   6C1090E5           LDR      R1,[R0, #+108]
   \   0000005C   701084E5           STR      R1,[R4, #+112]
   \   00000060   0610A0E3           MOV      R1,#+6
   \   00000064   6C1080E5           STR      R1,[R0, #+108]
   \   00000068   000096E5           LDR      R0,[R6, #+0]
   \   0000006C   0010A0E3           MOV      R1,#+0
   \   00000070   ........           _BLF     ??EnableButton,??EnableButton??rA
     55                  ButWindow->EnableButton(1, false);
   \   00000074   000096E5           LDR      R0,[R6, #+0]
   \   00000078   0020A0E3           MOV      R2,#+0
   \   0000007C   0110A0E3           MOV      R1,#+1
   \   00000080   ........           _BLF     ??EnableButton,??EnableButton??rA
     56          
     57                  WM_EnableMemdev(WinHandl);
   \   00000084   FA02D4E1           LDRSH    R0,[R4, #+42]
   \   00000088   ........           _BLF     WM_EnableMemdev,??WM_EnableMemdev??rA
     58                  GetDialogHandles();
   \   0000008C   0400A0E1           MOV      R0,R4
   \   00000090   ........           BL       ??GetDialogHandles
   \   00000094   08D08DE2           ADD      SP,SP,#+8
   \   00000098   010000EA           B        ??ExecDialogBox_3
     59              } else {
     60                  WM_BringToTop(WinHandl);
   \                     ??ExecDialogBox_1:
   \   0000009C   FA02D4E1           LDRSH    R0,[R4, #+42]
   \   000000A0   ........           _BLF     WM_BringToTop,??WM_BringToTop??rA
     61              }
     62              SystemWindow->UnProtect();
   \                     ??ExecDialogBox_3:
   \   000000A4   000095E5           LDR      R0,[R5, #+0]
   \   000000A8   ........           _BLF     ??UnProtect,??UnProtect??rA
     63          }
   \   000000AC   7040BDE8           POP      {R4-R6,LR}
   \   000000B0   1EFF2FE1           BX       LR               ;; return
   \                     ??ExecDialogBox_2:
   \   000000B4   ........           DC32     `?<Constant {{2207, 0, 546}, {353, 0, 547}, {28` + 96
     64          
     65          /*********************************************************************
     66          *
     67          *       CreateMultiPage
     68          *
     69          */

   \                                 In segment CODE, align 4, keep-with-next
     70          void TDUCalDataWin::CreatePage(WM_HWIN hCurrentWin, PRogramObjectBase *OwnerPtr, PROIOComponent *PROPtr, AnsiString SnsInf) {
   \                     ??CreatePage:
   \   00000000   F0402DE9           PUSH     {R4-R7,LR}
     71              LevOffsetWinEnable = true;
     72              /* Create the frame window */
     73              Owner       = OwnerPtr;
     74              SnsPtr  = PROPtr;
     75              SnsInfo = SnsInf;
   \   00000004   ........           LDR      R5,??DataTable12  ;; ??npos
   \   00000008   91DF4DE2           SUB      SP,SP,#+580
   \   0000000C   0040A0E1           MOV      R4,R0
   \   00000010   0160A0E1           MOV      R6,R1
   \   00000014   58129DE5           LDR      R1,[SP, #+600]
   \   00000018   0100A0E3           MOV      R0,#+1
   \   0000001C   3600C4E5           STRB     R0,[R4, #+54]
   \   00000020   4C2084E5           STR      R2,[R4, #+76]
   \   00000024   483084E5           STR      R3,[R4, #+72]
   \   00000028   003095E5           LDR      R3,[R5, #+0]
   \   0000002C   0020A0E3           MOV      R2,#+0
   \   00000030   500084E2           ADD      R0,R4,#+80
   \   00000034   ........           _BLF     ??assign,??assign??rA
     76          
     77              if ( IsClosed ) {
   \   00000038   6C00D4E5           LDRB     R0,[R4, #+108]
   \   0000003C   000050E3           CMP      R0,#+0
   \   00000040   4100000A           BEQ      ??CreatePage_1
     78                  IsClosed = false;
     79                  WinHandl = GUI_CreateDialogBox(aDialogCreate, GUI_COUNTOF(aDialogCreate), &cbSysWin,
     80                                                 hCurrentWin, 0, 0);
   \   00000044   64729FE5           LDR      R7,??CreatePage_2  ;; `?<Constant {{2207, 0, 546}, {353, 0, 547}, {28`
   \   00000048   ........           LDR      R2,??DataTable7  ;; ??cbSysWin
   \   0000004C   0000A0E3           MOV      R0,#+0
   \   00000050   6C00C4E5           STRB     R0,[R4, #+108]
   \   00000054   01002DE9           PUSH     {R0}
   \   00000058   01002DE9           PUSH     {R0}
   \   0000005C   0630A0E1           MOV      R3,R6
   \   00000060   1410A0E3           MOV      R1,#+20
     81                  PreviousSysWin = SystemWindow->CurrentSysWin;
     82                  SystemWindow->CurrentSysWin = TDU_CALWIN;
     83                  ButWindow->EnableButton(0, false);
   \   00000064   ........           LDR      R6,??DataTable8  ;; ButWindow
   \   00000068   600087E2           ADD      R0,R7,#+96
   \   0000006C   ........           _BLF     GUI_CreateDialogBox,??GUI_CreateDialogBox??rA
   \   00000070   BA02C4E1           STRH     R0,[R4, #+42]
   \   00000074   ........           LDR      R0,??DataTable9  ;; SystemWindow
   \   00000078   0020A0E3           MOV      R2,#+0
   \   0000007C   000090E5           LDR      R0,[R0, #+0]
   \   00000080   6C1090E5           LDR      R1,[R0, #+108]
   \   00000084   701084E5           STR      R1,[R4, #+112]
   \   00000088   0610A0E3           MOV      R1,#+6
   \   0000008C   6C1080E5           STR      R1,[R0, #+108]
   \   00000090   000096E5           LDR      R0,[R6, #+0]
   \   00000094   0010A0E3           MOV      R1,#+0
   \   00000098   ........           _BLF     ??EnableButton,??EnableButton??rA
     84                  ButWindow->EnableButton(1, false);
   \   0000009C   000096E5           LDR      R0,[R6, #+0]
   \   000000A0   0020A0E3           MOV      R2,#+0
   \   000000A4   0110A0E3           MOV      R1,#+1
   \   000000A8   ........           _BLF     ??EnableButton,??EnableButton??rA
     85                  WM_EnableMemdev(WinHandl);
   \   000000AC   FA02D4E1           LDRSH    R0,[R4, #+42]
   \   000000B0   ........           _BLF     WM_EnableMemdev,??WM_EnableMemdev??rA
     86                  GetDialogHandles();
   \   000000B4   0400A0E1           MOV      R0,R4
   \   000000B8   ........           BL       ??GetDialogHandles
     87                  {
     88                      const GUIKey Words[] = {
     89                          { TDU_CALDATA_WIN, 0, L_WORD546 },
     90                          { GUI_ID_TEXT1, 0, L_WORD547 }, // Serial number text
     91                          { GUI_ID_CHECK0, 0, L_WORD1 },  // Enable
     92                          { GUI_ID_TEXT2, 0, L_WORD126 }, // Gain text
     93                          { GUI_ID_TEXT4, 0, L_WORD127 },   // Offset text
     94                          { GUI_ID_TEXT7, 0, L_WORD128 },    // Value text
     95                                                             // { GUI_ID_TEXT9, 0, L_WORD983 },   // Table offset text
     96                          { GUI_ID_TEXT9, 0, 1000 },   // Table offset text
     97                          { GUI_ID_TEXT10, 0, L_WORD550 },   // Level offset text
     98                      };
   \   000000BC   7B0F8DE2           ADD      R0,SP,#+492
   \   000000C0   6020A0E3           MOV      R2,#+96
   \                     ??CreatePage_3:
   \   000000C4   042052E2           SUBS     R2,R2,#+4
   \   000000C8   021097E7           LDR      R1,[R7, R2]
   \   000000CC   021080E7           STR      R1,[R0, R2]
   \   000000D0   FBFFFF1A           BNE      ??CreatePage_3
     99                      AddToSKeyList((GUIKey *)Words, NELEMENTS(Words));
   \   000000D4   0130A0E3           MOV      R3,#+1
   \   000000D8   0820A0E3           MOV      R2,#+8
   \   000000DC   7B1F8DE2           ADD      R1,SP,#+492
   \   000000E0   0400A0E1           MOV      R0,R4
   \   000000E4   ........           _BLF     ??AddToSKeyList,??AddToSKeyList??rA
    100                  }
    101                  {
    102                      GUIUpdateKey UpdateValues[] = {
    103                          { GUI_ID_EDIT0, 0, SnsPtr, SVT_AI_SERIAL_NUMBER, 0,           0, L_WORD547, NULL },
    104                          { GUI_ID_EDIT1, 0, SnsPtr, SVT_AI_GAIN, 0,           0, L_WORD126, NULL },
    105                          { GUI_ID_EDIT2, 0, SnsPtr, SVT_AI_OFFSET, 0, GUI_ID_TEXT5, L_WORD127, NULL },
    106                          { GUI_ID_EDIT3, 0, SnsPtr, SVT_AI_CALC_VAL, 0, GUI_ID_TEXT8, L_WORD128, NULL },
    107                          { GUI_ID_EDIT4, 0, Owner, SVT_TABLE_OFFSET, 0,           0, L_WORD983, NULL },
    108                          { GUI_ID_EDIT5, 0, Owner, SVT_LEVEL_OFFSET, 0,           0, L_WORD550, NULL },
    109                          { GUI_ID_CHECK0, 0, SnsPtr, SVT_AI_ENABLE, 0,           0, L_WORD1, NULL },
    110                          { GUI_ID_TEXT3, 0, SnsPtr, SVT_AI_RANGE, 0,           0,         0, NULL },
    111                          { GUI_ID_TEXT6, 0, SnsPtr, SVT_IO_CH_EEP_SNS_STAT, 0,           0,         0, NULL },
    112                      };
   \   000000E8   C4119FE5           LDR      R1,??CreatePage_2+0x4  ;; `?<Constant {{256, 0, (PRogramObjectBase *)0, 1`
   \   000000EC   CC008DE2           ADD      R0,SP,#+204
   \   000000F0   483FA0E3           MOV      R3,#+288
   \                     ??CreatePage_4:
   \   000000F4   043053E2           SUBS     R3,R3,#+4
   \   000000F8   032091E7           LDR      R2,[R1, R3]
   \   000000FC   032080E7           STR      R2,[R0, R3]
   \   00000100   FBFFFF1A           BNE      ??CreatePage_4
   \   00000104   480094E5           LDR      R0,[R4, #+72]
    113                      SetUpWidgetInfoTable((GUIUpdateKey *)UpdateValues, GUI_COUNTOF(UpdateValues));
   \   00000108   CC108DE2           ADD      R1,SP,#+204
   \   0000010C   D4008DE5           STR      R0,[SP, #+212]
   \   00000110   F4008DE5           STR      R0,[SP, #+244]
   \   00000114   14018DE5           STR      R0,[SP, #+276]
   \   00000118   34018DE5           STR      R0,[SP, #+308]
   \   0000011C   4C2094E5           LDR      R2,[R4, #+76]
   \   00000120   54218DE5           STR      R2,[SP, #+340]
   \   00000124   4C2094E5           LDR      R2,[R4, #+76]
   \   00000128   74218DE5           STR      R2,[SP, #+372]
   \   0000012C   94018DE5           STR      R0,[SP, #+404]
   \   00000130   B4018DE5           STR      R0,[SP, #+436]
   \   00000134   D4018DE5           STR      R0,[SP, #+468]
   \   00000138   0920A0E3           MOV      R2,#+9
   \   0000013C   0400A0E1           MOV      R0,R4
   \   00000140   ........           _BLF     ??SetUpWidgetInfoTable,??SetUpWidgetInfoTable??rA
   \   00000144   08D08DE2           ADD      SP,SP,#+8
   \   00000148   010000EA           B        ??CreatePage_5
    114                  }
    115              } else {
    116                  WM_BringToTop(WinHandl);
   \                     ??CreatePage_1:
   \   0000014C   FA02D4E1           LDRSH    R0,[R4, #+42]
   \   00000150   ........           _BLF     WM_BringToTop,??WM_BringToTop??rA
    117              }
    118              AnsiString InfoStr     = SnsInfo + "(" + LibGetValue(SVT_AI_LOCATION, SnsPtr) + ")";
   \                     ??CreatePage_5:
   \   00000154   482094E5           LDR      R2,[R4, #+72]
   \   00000158   0030A0E3           MOV      R3,#+0
   \   0000015C   B910A0E3           MOV      R1,#+185
   \   00000160   401E81E3           ORR      R1,R1,#0x400
   \   00000164   54008DE2           ADD      R0,SP,#+84
   \   00000168   ........           _BLF     ??LibGetValue,??LibGetValue??rA
   \   0000016C   ........           ADR      R2,??DataTable4  ;; "("
   \   00000170   501084E2           ADD      R1,R4,#+80
   \   00000174   38008DE2           ADD      R0,SP,#+56
   \   00000178   ........           _BLF     `??operator+`,`??operator+??rA`
   \   0000017C   0020A0E3           MOV      R2,#+0
   \   00000180   0010A0E3           MOV      R1,#+0
   \   00000184   A8008DE2           ADD      R0,SP,#+168
   \   00000188   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   0000018C   005095E5           LDR      R5,[R5, #+0]
   \   00000190   0020A0E3           MOV      R2,#+0
   \   00000194   0530A0E1           MOV      R3,R5
   \   00000198   38108DE2           ADD      R1,SP,#+56
   \   0000019C   A8008DE2           ADD      R0,SP,#+168
   \   000001A0   ........           _BLF     ??assign,??assign??rA
   \   000001A4   0530A0E1           MOV      R3,R5
   \   000001A8   0020A0E3           MOV      R2,#+0
   \   000001AC   54108DE2           ADD      R1,SP,#+84
   \   000001B0   A8008DE2           ADD      R0,SP,#+168
   \   000001B4   ........           _BLF     ??append_1,??append??rA_1
   \   000001B8   0060A0E1           MOV      R6,R0
   \   000001BC   0020A0E3           MOV      R2,#+0
   \   000001C0   0210A0E1           MOV      R1,R2
   \   000001C4   1C008DE2           ADD      R0,SP,#+28
   \   000001C8   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000001CC   0530A0E1           MOV      R3,R5
   \   000001D0   0020A0E3           MOV      R2,#+0
   \   000001D4   0610A0E1           MOV      R1,R6
   \   000001D8   1C008DE2           ADD      R0,SP,#+28
   \   000001DC   ........           _BLF     ??assign,??assign??rA
   \   000001E0   0020A0E3           MOV      R2,#+0
   \   000001E4   0110A0E3           MOV      R1,#+1
   \   000001E8   A8008DE2           ADD      R0,SP,#+168
   \   000001EC   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000001F0   ........           ADR      R2,??DataTable5  ;; ")"
   \   000001F4   1C108DE2           ADD      R1,SP,#+28
   \   000001F8   0D00A0E1           MOV      R0,SP
   \   000001FC   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000200   0D10A0E1           MOV      R1,SP
   \   00000204   8C008DE2           ADD      R0,SP,#+140
   \   00000208   ........           _BLF     ??AnsiString_1,??AnsiString??rA_1
   \   0000020C   0020A0E3           MOV      R2,#+0
   \   00000210   0110A0E3           MOV      R1,#+1
   \   00000214   0D00A0E1           MOV      R0,SP
   \   00000218   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   0000021C   0020A0E3           MOV      R2,#+0
   \   00000220   0110A0E3           MOV      R1,#+1
   \   00000224   1C008DE2           ADD      R0,SP,#+28
   \   00000228   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   0000022C   0020A0E3           MOV      R2,#+0
   \   00000230   0110A0E3           MOV      R1,#+1
   \   00000234   54008DE2           ADD      R0,SP,#+84
   \   00000238   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   0000023C   0020A0E3           MOV      R2,#+0
   \   00000240   0110A0E3           MOV      R1,#+1
   \   00000244   38008DE2           ADD      R0,SP,#+56
   \   00000248   ........           _BLF     ??_Tidy,??_Tidy??rA
    119              SetText(GUI_ID_TEXT0, 0, InfoStr);
   \   0000024C   0020A0E3           MOV      R2,#+0
   \   00000250   0210A0E1           MOV      R1,R2
   \   00000254   70008DE2           ADD      R0,SP,#+112
   \   00000258   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   0000025C   0530A0E1           MOV      R3,R5
   \   00000260   0020A0E3           MOV      R2,#+0
   \   00000264   8C108DE2           ADD      R1,SP,#+140
   \   00000268   70008DE2           ADD      R0,SP,#+112
   \   0000026C   ........           _BLF     ??assign,??assign??rA
   \   00000270   70308DE2           ADD      R3,SP,#+112
   \   00000274   0020A0E3           MOV      R2,#+0
   \   00000278   581FA0E3           MOV      R1,#+352
   \   0000027C   0400A0E1           MOV      R0,R4
   \   00000280   ........           _BLF     ??SetText,??SetText??rA
   \   00000284   0020A0E3           MOV      R2,#+0
   \   00000288   0110A0E3           MOV      R1,#+1
   \   0000028C   70008DE2           ADD      R0,SP,#+112
   \   00000290   ........           _BLF     ??_Tidy,??_Tidy??rA
    120          }
   \   00000294   0020A0E3           MOV      R2,#+0
   \   00000298   0110A0E3           MOV      R1,#+1
   \   0000029C   8C008DE2           ADD      R0,SP,#+140
   \   000002A0   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000002A4   91DF8DE2           ADD      SP,SP,#+580
   \   000002A8   F040BDE8           POP      {R4-R7,LR}
   \   000002AC   1EFF2FE1           BX       LR               ;; return
   \                     ??CreatePage_2:
   \   000002B0   ........           DC32     `?<Constant {{2207, 0, 546}, {353, 0, 547}, {28`
   \   000002B4   ........           DC32     `?<Constant {{256, 0, (PRogramObjectBase *)0, 1`
    121          
    122          

   \                                 In segment CODE, align 4, keep-with-next
    123          void TDUCalDataWin::Update(void) {
   \                     ??Update:
   \   00000000   F0412DE9           PUSH     {R4-R8,LR}
   \   00000004   34D04DE2           SUB      SP,SP,#+52
   \   00000008   0040A0E1           MOV      R4,R0
    124              UpdateFields(false);
   \   0000000C   0010A0E3           MOV      R1,#+0
   \   00000010   ........           _BLF     ??UpdateFields,??UpdateFields??rA
    125              switch ( SnsPtr->Type ) {
   \   00000014   480094E5           LDR      R0,[R4, #+72]
   \   00000018   A00090E5           LDR      R0,[R0, #+160]
   \   0000001C   3E0040E2           SUB      R0,R0,#+62
   \   00000020   800E40E2           SUB      R0,R0,#+2048
   \   00000024   460050E3           CMP      R0,#+70
   \   00000028   7000008A           BHI      ??Update_2
   \   0000002C   011F8FE2           ADR      R1,??Update_1
   \   00000030   0010D1E7           LDRB     R1,[R1, R0]
   \   00000034   01F18FE0           ADD      PC,PC,R1, LSL #+2
   \                     ??Update_1:
   \   00000038   15156D6D           DC8      +21,+21,+109,+109
   \   0000003C   6D6D6D6D           DC8      +109,+109,+109,+109
   \   00000040   6D6D5B5B           DC8      +109,+109,+91,+91
   \   00000044   5B5B6D6D           DC8      +91,+91,+109,+109
   \   00000048   6D6D6D6D           DC8      +109,+109,+109,+109
   \   0000004C   5B5B156D           DC8      +91,+91,+21,+109
   \   00000050   6D5B6D6D           DC8      +109,+91,+109,+109
   \   00000054   6D6D595B           DC8      +109,+109,+89,+91
   \   00000058   6D6D6D6D           DC8      +109,+109,+109,+109
   \   0000005C   6D6D6D6D           DC8      +109,+109,+109,+109
   \   00000060   6D6D6D6D           DC8      +109,+109,+109,+109
   \   00000064   6D6D116D           DC8      +109,+109,+17,+109
   \   00000068   6D6D1111           DC8      +109,+109,+17,+17
   \   0000006C   6D6D6D6D           DC8      +109,+109,+109,+109
   \   00000070   6D5B5B6D           DC8      +109,+91,+91,+109
   \   00000074   6D6D6D59           DC8      +109,+109,+109,+89
   \   00000078   6D6D6D59           DC8      +109,+109,+109,+89
   \   0000007C   59595900           DC8      +89,+89,+89,+0
    126              case C_AI_LeSw_ADCard   :
    127              case C_AI_LeSw_Valcom   :
    128              case C_AI_LeSw_API      :
    129              case C_AI_LeSw_HS       :
    130              case C_AI_LeSw_mA       :
    131                  break;
    132              case C_AI_LeSw_Vega     :
    133              case C_AI_LeSw_Vega62   :
    134              case C_AI_LeSw_Vega64   :
    135                  ChangeText(1);
   \                     ??Update_3:
   \   00000080   0110A0E3           MOV      R1,#+1
   \                     ??Update_4:
   \   00000084   0400A0E1           MOV      R0,R4
   \   00000088   ........           BL       ??ChangeText
   \   0000008C   570000EA           B        ??Update_2
    136                  break;
    137              case C_AI_1728          :
    138              case C_AI_P906_0110     :
    139              case C_AI_P906_0111     :
    140                  {
    141                      ChangeText(0);
   \                     ??Update_5:
   \   00000090   0010A0E3           MOV      R1,#+0
   \   00000094   0400A0E1           MOV      R0,R4
   \   00000098   ........           BL       ??ChangeText
    142                      const int ValKey1[] = { SVT_AI_CAL_DATA_FRO, SVT_AI_CAL_DATA_G1, SVT_AI_CAL_DATA_G2, SVT_AI_CAL_DATA_G3 };
   \   0000009C   58119FE5           LDR      R1,??Update_6    ;; `?<Constant {1220, 1221, 1222, 1223}>`
   \   000000A0   24008DE2           ADD      R0,SP,#+36
   \   000000A4   6C0091E8           LDM      R1,{R2,R3,R5,R6}
    143                      const int ValKey2[] = { SVT_AI_CAL_DATA_NL1, SVT_AI_CAL_DATA_NL2 };
   \   000000A8   50119FE5           LDR      R1,??Update_6+0x4  ;; `?<Constant {1224, 1225}>`
    144                      int RCnt = 0;
    145                      AIPressSensor_mV *mVSns = (AIPressSensor_mV *)SnsPtr;
    146                      for ( int Row = 0; Row < NELEMENTS(ValKey1); Row++ ) {
   \   000000AC   0070A0E3           MOV      R7,#+0
   \   000000B0   6C0080E8           STM      R0,{R2,R3,R5,R6}
   \   000000B4   0C0091E8           LDM      R1,{R2,R3}
   \   000000B8   0D00A0E1           MOV      R0,SP
   \   000000BC   0050A0E3           MOV      R5,#+0
   \   000000C0   0C0080E8           STM      R0,{R2,R3}
   \   000000C4   486094E5           LDR      R6,[R4, #+72]
    147                          for ( int Col = 0; Col < MAX_MV_CALDATA; Col++ ) {
   \                     ??Update_7:
   \   000000C8   0080A0E3           MOV      R8,#+0
    148                              AnsiString ValStr = LibGetValue(ValKey1[Row], Col, mVSns);
   \                     ??Update_8:
   \   000000CC   0000A0E3           MOV      R0,#+0
   \   000000D0   01002DE9           PUSH     {R0}
   \   000000D4   28008DE2           ADD      R0,SP,#+40
   \   000000D8   071190E7           LDR      R1,[R0, +R7, LSL #+2]
   \   000000DC   0630A0E1           MOV      R3,R6
   \   000000E0   0820A0E1           MOV      R2,R8
   \   000000E4   0C008DE2           ADD      R0,SP,#+12
   \   000000E8   ........           _BLF     ??LibGetValue_1,??LibGetValue??rA_1
    149                              LISTVIEW_SetItemText(SnsListView, Col + 1, RCnt, ValStr.c_str());
   \   000000EC   24009DE5           LDR      R0,[SP, #+36]
   \   000000F0   04D08DE2           ADD      SP,SP,#+4
   \   000000F4   100050E3           CMP      R0,#+16
   \   000000F8   F403D4E1           LDRSH    R0,[R4, #+52]
   \   000000FC   0C309D25           LDRCS    R3,[SP, #+12]
   \   00000100   018088E2           ADD      R8,R8,#+1
   \   00000104   0C308D32           ADDCC    R3,SP,#+12
   \   00000108   0520A0E1           MOV      R2,R5
   \   0000010C   0810A0E1           MOV      R1,R8
   \   00000110   ........           _BLF     LISTVIEW_SetItemText,??LISTVIEW_SetItemText??rA
    150                          }
   \   00000114   0020A0E3           MOV      R2,#+0
   \   00000118   0110A0E3           MOV      R1,#+1
   \   0000011C   08008DE2           ADD      R0,SP,#+8
   \   00000120   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000124   040058E3           CMP      R8,#+4
   \   00000128   E7FFFFBA           BLT      ??Update_8
    151                          RCnt++;
   \   0000012C   015085E2           ADD      R5,R5,#+1
    152                      }
   \   00000130   017087E2           ADD      R7,R7,#+1
   \   00000134   040057E3           CMP      R7,#+4
   \   00000138   E2FFFF3A           BCC      ??Update_7
    153                      for ( int Row = 0; Row < NELEMENTS(ValKey2); Row++ ) {
   \   0000013C   0070A0E3           MOV      R7,#+0
   \   00000140   0B0000EA           B        ??Update_9
    154                          AnsiString ValStr = LibGetValue(ValKey2[Row], mVSns);
    155                          LISTVIEW_SetItemText(SnsListView, 1, RCnt++, ValStr.c_str());
   \                     ??Update_10:
   \   00000144   F403D4E1           LDRSH    R0,[R4, #+52]
   \   00000148   0520A0E1           MOV      R2,R5
   \   0000014C   0110A0E3           MOV      R1,#+1
   \   00000150   ........           _BLF     LISTVIEW_SetItemText,??LISTVIEW_SetItemText??rA
   \   00000154   015085E2           ADD      R5,R5,#+1
    156                      }
   \   00000158   0020A0E3           MOV      R2,#+0
   \   0000015C   0110A0E3           MOV      R1,#+1
   \   00000160   08008DE2           ADD      R0,SP,#+8
   \   00000164   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000168   017087E2           ADD      R7,R7,#+1
   \   0000016C   020057E3           CMP      R7,#+2
   \   00000170   1E00002A           BCS      ??Update_2
   \                     ??Update_9:
   \   00000174   0D00A0E1           MOV      R0,SP
   \   00000178   071190E7           LDR      R1,[R0, +R7, LSL #+2]
   \   0000017C   0030A0E3           MOV      R3,#+0
   \   00000180   0620A0E1           MOV      R2,R6
   \   00000184   08008DE2           ADD      R0,SP,#+8
   \   00000188   ........           _BLF     ??LibGetValue,??LibGetValue??rA
   \   0000018C   20009DE5           LDR      R0,[SP, #+32]
   \   00000190   100050E3           CMP      R0,#+16
   \   00000194   0C309D25           LDRCS    R3,[SP, #+12]
   \   00000198   0C308D32           ADDCC    R3,SP,#+12
   \   0000019C   E8FFFFEA           B        ??Update_10
    157                  }
    158                  break;
    159              case C_AI_Radar_Hart        :
    160              case C_AI_AirPurge          :
    161              case C_AI_MB_Press_0_20mA   :
    162              case C_AI_MB_Press_4_20mA   :
    163              case C_AI_MB_DiffPre_0_20mA :
    164              case C_AI_MB_DiffPre_4_20mA :
    165                  ChangeText(0);
   \                     ??Update_11:
   \   000001A0   0010A0E3           MOV      R1,#+0
   \   000001A4   B6FFFFEA           B        ??Update_4
    166                  break;
    167              case C_AI_ATM_N_Ex          :
    168              case C_AI_ATM_Ex            :
    169              case C_AI_ATM_Ex_H          :
    170              case C_AI_ATM_N_Ex_0_1      :
    171              case C_AI_Gen_4_20mA        :
    172              case C_AI_DIFF_PRESSURE_mA  :
    173              case C_AI_Radar_4_20mA      :
    174              case C_AI_Float_4_20mA      :
    175              case C_AI_INC1_MACRON       :
    176              case C_AI_INC2_MACRON       :
    177                  ChangeText(0);
   \                     ??Update_12:
   \   000001A8   0010A0E3           MOV      R1,#+0
   \   000001AC   0400A0E1           MOV      R0,R4
   \   000001B0   ........           BL       ??ChangeText
    178                  {
    179                      const char *ValTxt[2] = { "4", "20" };
   \   000001B4   48109FE5           LDR      R1,??Update_6+0x8  ;; `?<Constant {&"4", &"20"}>`
   \   000001B8   0D00A0E1           MOV      R0,SP
   \   000001BC   0C0091E8           LDM      R1,{R2,R3}
   \   000001C0   0C0080E8           STM      R0,{R2,R3}
    180                      for ( int Col = 0; Col < 2; Col++ ) {
   \   000001C4   0000A0E3           MOV      R0,#+0
    181                          LISTVIEW_SetItemText(SnsListView, Col + 1, 0, ValTxt[Col]);
   \                     ??Update_13:
   \   000001C8   015080E2           ADD      R5,R0,#+1
   \   000001CC   0D10A0E1           MOV      R1,SP
   \   000001D0   003191E7           LDR      R3,[R1, +R0, LSL #+2]
   \   000001D4   F403D4E1           LDRSH    R0,[R4, #+52]
   \   000001D8   0020A0E3           MOV      R2,#+0
   \   000001DC   0510A0E1           MOV      R1,R5
   \   000001E0   ........           _BLF     LISTVIEW_SetItemText,??LISTVIEW_SetItemText??rA
    182                      }
   \   000001E4   0500A0E1           MOV      R0,R5
   \   000001E8   020050E3           CMP      R0,#+2
   \   000001EC   F5FFFFBA           BLT      ??Update_13
    183                  }
    184                  break;
    185              case C_AI_INC1_N2       :
    186              case C_AI_INC2_N2       :
    187                  break;
    188              case C_AI_Pt100         :
    189              case C_AI_Pt1000        :
    190              case C_AI_TEMP_AD590    :
    191              case C_AI_TEMP_mA       :
    192              case C_AI_WATERINGRESS  :
    193              case C_AI_WATERINGR_MAIN:
    194              case C_AI_WATERINGR_PRE :
    195              case C_AI_WATERINGR_TEMP:
    196              case C_AI_WashTrackSensor  :
    197                  break;
    198              }
    199          }
   \                     ??Update_2:
   \   000001F0   34D08DE2           ADD      SP,SP,#+52
   \   000001F4   F041BDE8           POP      {R4-R8,LR}
   \   000001F8   1EFF2FE1           BX       LR               ;; return
   \                     ??Update_6:
   \   000001FC   ........           DC32     `?<Constant {1220, 1221, 1222, 1223}>`
   \   00000200   ........           DC32     `?<Constant {1224, 1225}>`
   \   00000204   ........           DC32     `?<Constant {&"4", &"20"}>`
    200          
    201          
    202          /*********************************************************************
    203          *
    204          * Dialog procedure
    205          */

   \                                 In segment CODE, align 4, keep-with-next
    206          void TDUCalDataWin::GetDialogHandles(void) {
   \                     ??GetDialogHandles:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0040A0E1           MOV      R4,R0
    207              SnsListView         = WM_GetDialogItem(WinHandl, GUI_ID_LISTVIEW0);
   \   00000008   FA02D4E1           LDRSH    R0,[R4, #+42]
   \   0000000C   801FA0E3           MOV      R1,#+512
   \   00000010   ........           _BLF     WM_GetDialogItem,??WM_GetDialogItem??rA
    208          
    209              LISTVIEW_SetFont(SnsListView, &TDU_FONT_ST);
   \   00000014   ........           LDR      R1,??DataTable10  ;; TDU_FONT_ST
   \   00000018   B403C4E1           STRH     R0,[R4, #+52]
   \   0000001C   ........           _BLF     LISTVIEW_SetFont,??LISTVIEW_SetFont??rA
    210              InitSysWin();
   \   00000020   0400A0E1           MOV      R0,R4
   \   00000024   ........           BL       ??InitSysWin
    211          }
   \   00000028   1040BDE8           POP      {R4,LR}
   \   0000002C   1EFF2FE1           BX       LR               ;; return
    212          

   \                                 In segment CODE, align 4, keep-with-next
    213          void TDUCalDataWin::InitSysWin(void) {
   \                     ??InitSysWin:
   \   00000000   F0432DE9           PUSH     {R4-R9,LR}
   \   00000004   48DF4DE2           SUB      SP,SP,#+288
    214              AnsiString LocationStr = LibGetValue(SVT_AI_LOCATION, SnsPtr);
    215              AnsiString InfoStr     = SnsInfo + "(" + LocationStr + ")";
    216              SetText(GUI_ID_TEXT0, 0, SnsInfo);
    217          
    218              switch ( SnsPtr->Type ) {
   \   00000008   00949FE5           LDR      R9,??InitSysWin_2+0x10  ;; `?<Constant {&"FRO"}>`
   \   0000000C   0040A0E1           MOV      R4,R0
   \   00000010   482094E5           LDR      R2,[R4, #+72]
   \   00000014   0030A0E3           MOV      R3,#+0
   \   00000018   B910A0E3           MOV      R1,#+185
   \   0000001C   401E81E3           ORR      R1,R1,#0x400
   \   00000020   D0008DE2           ADD      R0,SP,#+208
   \   00000024   ........           _BLF     ??LibGetValue,??LibGetValue??rA
   \   00000028   D12F8FE2           ADR      R2,??InitSysWin_3  ;; "("
   \   0000002C   501084E2           ADD      R1,R4,#+80
   \   00000030   98008DE2           ADD      R0,SP,#+152
   \   00000034   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000038   0020A0E3           MOV      R2,#+0
   \   0000003C   0010A0E3           MOV      R1,#+0
   \   00000040   44008DE2           ADD      R0,SP,#+68
   \   00000044   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000048   ........           LDR      R0,??DataTable12  ;; ??npos
   \   0000004C   0020A0E3           MOV      R2,#+0
   \   00000050   005090E5           LDR      R5,[R0, #+0]
   \   00000054   98108DE2           ADD      R1,SP,#+152
   \   00000058   0530A0E1           MOV      R3,R5
   \   0000005C   44008DE2           ADD      R0,SP,#+68
   \   00000060   ........           _BLF     ??assign,??assign??rA
   \   00000064   0530A0E1           MOV      R3,R5
   \   00000068   0020A0E3           MOV      R2,#+0
   \   0000006C   D0108DE2           ADD      R1,SP,#+208
   \   00000070   44008DE2           ADD      R0,SP,#+68
   \   00000074   ........           _BLF     ??append_1,??append??rA_1
   \   00000078   0060A0E1           MOV      R6,R0
   \   0000007C   0020A0E3           MOV      R2,#+0
   \   00000080   0210A0E1           MOV      R1,R2
   \   00000084   7C008DE2           ADD      R0,SP,#+124
   \   00000088   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   0000008C   0530A0E1           MOV      R3,R5
   \   00000090   0020A0E3           MOV      R2,#+0
   \   00000094   0610A0E1           MOV      R1,R6
   \   00000098   7C008DE2           ADD      R0,SP,#+124
   \   0000009C   ........           _BLF     ??assign,??assign??rA
   \   000000A0   0020A0E3           MOV      R2,#+0
   \   000000A4   0110A0E3           MOV      R1,#+1
   \   000000A8   44008DE2           ADD      R0,SP,#+68
   \   000000AC   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000000B0   D22F8FE2           ADR      R2,??InitSysWin_2  ;; ")"
   \   000000B4   7C108DE2           ADD      R1,SP,#+124
   \   000000B8   60008DE2           ADD      R0,SP,#+96
   \   000000BC   ........           _BLF     `??operator+`,`??operator+??rA`
   \   000000C0   60108DE2           ADD      R1,SP,#+96
   \   000000C4   EC008DE2           ADD      R0,SP,#+236
   \   000000C8   ........           _BLF     ??AnsiString_1,??AnsiString??rA_1
   \   000000CC   0020A0E3           MOV      R2,#+0
   \   000000D0   0110A0E3           MOV      R1,#+1
   \   000000D4   60008DE2           ADD      R0,SP,#+96
   \   000000D8   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000000DC   0020A0E3           MOV      R2,#+0
   \   000000E0   0110A0E3           MOV      R1,#+1
   \   000000E4   7C008DE2           ADD      R0,SP,#+124
   \   000000E8   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000000EC   0020A0E3           MOV      R2,#+0
   \   000000F0   0110A0E3           MOV      R1,#+1
   \   000000F4   98008DE2           ADD      R0,SP,#+152
   \   000000F8   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000000FC   0020A0E3           MOV      R2,#+0
   \   00000100   0210A0E1           MOV      R1,R2
   \   00000104   B4008DE2           ADD      R0,SP,#+180
   \   00000108   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   0000010C   0530A0E1           MOV      R3,R5
   \   00000110   0020A0E3           MOV      R2,#+0
   \   00000114   501084E2           ADD      R1,R4,#+80
   \   00000118   ........           LDR      R5,??DataTable13  ;; SensorDetails
   \   0000011C   B4008DE2           ADD      R0,SP,#+180
   \   00000120   ........           _BLF     ??assign,??assign??rA
   \   00000124   B4308DE2           ADD      R3,SP,#+180
   \   00000128   0020A0E3           MOV      R2,#+0
   \   0000012C   581FA0E3           MOV      R1,#+352
   \   00000130   0400A0E1           MOV      R0,R4
   \   00000134   ........           _BLF     ??SetText,??SetText??rA
   \   00000138   0020A0E3           MOV      R2,#+0
   \   0000013C   0110A0E3           MOV      R1,#+1
   \   00000140   B4008DE2           ADD      R0,SP,#+180
   \   00000144   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000148   480094E5           LDR      R0,[R4, #+72]
   \   0000014C   AC7F8FE2           ADR      R7,??InitSysWin_2+0x4  ;; "0%"
   \   00000150   A00090E5           LDR      R0,[R0, #+160]
   \   00000154   ........           ADR      R8,??DataTable14  ;; ""
   \   00000158   0060A0E3           MOV      R6,#+0
   \   0000015C   3E0040E2           SUB      R0,R0,#+62
   \   00000160   800E40E2           SUB      R0,R0,#+2048
   \   00000164   4A0050E3           CMP      R0,#+74
   \   00000168   9900008A           BHI      ??InitSysWin_4
   \   0000016C   011F8FE2           ADR      R1,??InitSysWin_1
   \   00000170   0010D1E7           LDRB     R1,[R1, R0]
   \   00000174   01F18FE0           ADD      PC,PC,R1, LSL #+2
   \                     ??InitSysWin_1:
   \   00000178   12129696           DC8      +18,+18,+150,+150
   \   0000017C   96969696           DC8      +150,+150,+150,+150
   \   00000180   96964343           DC8      +150,+150,+67,+67
   \   00000184   43439696           DC8      +67,+67,+150,+150
   \   00000188   96969696           DC8      +150,+150,+150,+150
   \   0000018C   43961296           DC8      +67,+150,+18,+150
   \   00000190   96669696           DC8      +150,+102,+150,+150
   \   00000194   96966666           DC8      +150,+150,+102,+102
   \   00000198   66669696           DC8      +102,+102,+150,+150
   \   0000019C   96969696           DC8      +150,+150,+150,+150
   \   000001A0   66966666           DC8      +102,+150,+102,+102
   \   000001A4   96967F96           DC8      +150,+150,+127,+150
   \   000001A8   96967F7F           DC8      +150,+150,+127,+127
   \   000001AC   96969696           DC8      +150,+150,+150,+150
   \   000001B0   96666696           DC8      +150,+102,+102,+150
   \   000001B4   96969666           DC8      +150,+150,+150,+102
   \   000001B8   96669696           DC8      +150,+102,+150,+150
   \   000001BC   96969666           DC8      +150,+150,+150,+102
   \   000001C0   66666600           DC8      +102,+102,+102,+0
    219              case C_AI_1728          :
    220              case C_AI_P906_0110     :
    221              case C_AI_P906_0111     :
    222                  {
    223                      const char *Title[] = { "FRO", "G1", "G2", "G3", "NL1", "NL2" };
   \                     ??InitSysWin_5:
   \   000001C4   48129FE5           LDR      R1,??InitSysWin_2+0x14  ;; `?<Constant {&"FRO", &"G1", &"G2", &"G3", &"NL1`
   \   000001C8   420F8DE2           ADD      R0,SP,#+264
   \   000001CC   6C5091E8           LDM      R1,{R2,R3,R5,R6,R12,LR}
    224                      //WM_SetScrollbarV(SnsListView, 1);
    225                      LISTVIEW_SetGridVis(SnsListView, 1); //Sets the visibility
   \   000001D0   0110A0E3           MOV      R1,#+1
   \   000001D4   6C5080E8           STM      R0,{R2,R3,R5,R6,R12,LR}
   \   000001D8   F403D4E1           LDRSH    R0,[R4, #+52]
    226                      LISTVIEW_SetLBorder(SnsListView, 2);
    227                      LISTVIEW_SetRBorder(SnsListView, 1);
    228                      LISTVIEW_AddColumn(SnsListView,  30,  "", GUI_TA_LEFT);
    229                      LISTVIEW_AddColumn(SnsListView,  50,  "0%", GUI_TA_RIGHT);
    230                      LISTVIEW_AddColumn(SnsListView,  50,  "40%", GUI_TA_RIGHT);
    231                      LISTVIEW_AddColumn(SnsListView,  50,  "60%", GUI_TA_RIGHT);
    232                      LISTVIEW_AddColumn(SnsListView,  50,  "100%", GUI_TA_RIGHT);
    233                      for ( int l = 0; l < NELEMENTS(Title); l++ ) {
   \   000001DC   0050A0E3           MOV      R5,#+0
   \   000001E0   ........           _BLF     LISTVIEW_SetGridVis,??LISTVIEW_SetGridVis??rA
   \   000001E4   F403D4E1           LDRSH    R0,[R4, #+52]
   \   000001E8   0210A0E3           MOV      R1,#+2
   \   000001EC   ........           _BLF     LISTVIEW_SetLBorder,??LISTVIEW_SetLBorder??rA
   \   000001F0   F403D4E1           LDRSH    R0,[R4, #+52]
   \   000001F4   0110A0E3           MOV      R1,#+1
   \   000001F8   ........           _BLF     LISTVIEW_SetRBorder,??LISTVIEW_SetRBorder??rA
   \   000001FC   F403D4E1           LDRSH    R0,[R4, #+52]
   \   00000200   0030A0E3           MOV      R3,#+0
   \   00000204   0820A0E1           MOV      R2,R8
   \   00000208   1E10A0E3           MOV      R1,#+30
   \   0000020C   ........           _BLF     LISTVIEW_AddColumn,??LISTVIEW_AddColumn??rA
   \   00000210   F403D4E1           LDRSH    R0,[R4, #+52]
   \   00000214   0130A0E3           MOV      R3,#+1
   \   00000218   0720A0E1           MOV      R2,R7
   \   0000021C   3210A0E3           MOV      R1,#+50
   \   00000220   ........           _BLF     LISTVIEW_AddColumn,??LISTVIEW_AddColumn??rA
   \   00000224   F403D4E1           LDRSH    R0,[R4, #+52]
   \   00000228   0130A0E3           MOV      R3,#+1
   \   0000022C   752F8FE2           ADR      R2,??InitSysWin_2+0x8  ;; "40%"
   \   00000230   3210A0E3           MOV      R1,#+50
   \   00000234   ........           _BLF     LISTVIEW_AddColumn,??LISTVIEW_AddColumn??rA
   \   00000238   F403D4E1           LDRSH    R0,[R4, #+52]
   \   0000023C   0130A0E3           MOV      R3,#+1
   \   00000240   712F8FE2           ADR      R2,??InitSysWin_2+0xC  ;; "60%"
   \   00000244   3210A0E3           MOV      R1,#+50
   \   00000248   ........           _BLF     LISTVIEW_AddColumn,??LISTVIEW_AddColumn??rA
   \   0000024C   F403D4E1           LDRSH    R0,[R4, #+52]
   \   00000250   0130A0E3           MOV      R3,#+1
   \   00000254   042089E2           ADD      R2,R9,#+4
   \   00000258   3210A0E3           MOV      R1,#+50
   \   0000025C   ........           _BLF     LISTVIEW_AddColumn,??LISTVIEW_AddColumn??rA
    234                          LISTVIEW_AddRow(SnsListView, NULL);
   \                     ??InitSysWin_6:
   \   00000260   F403D4E1           LDRSH    R0,[R4, #+52]
   \   00000264   0010A0E3           MOV      R1,#+0
    235                      }
   \   00000268   015085E2           ADD      R5,R5,#+1
   \   0000026C   ........           _BLF     LISTVIEW_AddRow,??LISTVIEW_AddRow??rA
   \   00000270   060055E3           CMP      R5,#+6
   \   00000274   F9FFFF3A           BCC      ??InitSysWin_6
    236                      ClearList(Title);
   \   00000278   421F8DE2           ADD      R1,SP,#+264
   \                     ??InitSysWin_7:
   \   0000027C   0400A0E1           MOV      R0,R4
   \   00000280   ........           BL       ??ClearList
   \   00000284   520000EA           B        ??InitSysWin_4
    237                  }
    238                  break;
    239              case C_AI_ATM_N_Ex      :
    240              case C_AI_ATM_Ex        :
    241              case C_AI_ATM_Ex_H      :
    242              case C_AI_ATM_N_Ex_0_1  :
    243              case C_AI_Gen_4_20mA    :
    244                  {
    245                      const char *Title[] = { "FRO" };
   \                     ??InitSysWin_8:
   \   00000288   001099E5           LDR      R1,[R9, #0]
   \   0000028C   0D00A0E1           MOV      R0,SP
   \   00000290   001080E5           STR      R1,[R0, #+0]
    246                      LISTVIEW_SetGridVis(SnsListView, 1); //Sets the visibility
   \   00000294   F403D4E1           LDRSH    R0,[R4, #+52]
   \   00000298   0110A0E3           MOV      R1,#+1
    247                      LISTVIEW_SetLBorder(SnsListView, 2);
    248                      LISTVIEW_SetRBorder(SnsListView, 1);
    249                      LISTVIEW_AddColumn(SnsListView,  30,  "", GUI_TA_LEFT);
    250                      LISTVIEW_AddColumn(SnsListView,  50,  "0%", GUI_TA_RIGHT);
    251                      LISTVIEW_AddColumn(SnsListView,  50,  "100%", GUI_TA_RIGHT);
    252                      for ( int l = 0; l < NELEMENTS(Title); l++ ) {
   \   0000029C   0650A0E1           MOV      R5,R6
   \   000002A0   ........           _BLF     LISTVIEW_SetGridVis,??LISTVIEW_SetGridVis??rA
   \   000002A4   F403D4E1           LDRSH    R0,[R4, #+52]
   \   000002A8   0210A0E3           MOV      R1,#+2
   \   000002AC   ........           _BLF     LISTVIEW_SetLBorder,??LISTVIEW_SetLBorder??rA
   \   000002B0   F403D4E1           LDRSH    R0,[R4, #+52]
   \   000002B4   0110A0E3           MOV      R1,#+1
   \   000002B8   ........           _BLF     LISTVIEW_SetRBorder,??LISTVIEW_SetRBorder??rA
   \   000002BC   F403D4E1           LDRSH    R0,[R4, #+52]
   \   000002C0   0030A0E3           MOV      R3,#+0
   \   000002C4   0820A0E1           MOV      R2,R8
   \   000002C8   1E10A0E3           MOV      R1,#+30
   \   000002CC   ........           _BLF     LISTVIEW_AddColumn,??LISTVIEW_AddColumn??rA
   \   000002D0   F403D4E1           LDRSH    R0,[R4, #+52]
   \   000002D4   0130A0E3           MOV      R3,#+1
   \   000002D8   0720A0E1           MOV      R2,R7
   \   000002DC   3210A0E3           MOV      R1,#+50
   \   000002E0   ........           _BLF     LISTVIEW_AddColumn,??LISTVIEW_AddColumn??rA
   \   000002E4   F403D4E1           LDRSH    R0,[R4, #+52]
   \   000002E8   0130A0E3           MOV      R3,#+1
   \   000002EC   042089E2           ADD      R2,R9,#+4
   \   000002F0   3210A0E3           MOV      R1,#+50
   \   000002F4   ........           _BLF     LISTVIEW_AddColumn,??LISTVIEW_AddColumn??rA
    253                          LISTVIEW_AddRow(SnsListView, NULL);
   \                     ??InitSysWin_9:
   \   000002F8   F403D4E1           LDRSH    R0,[R4, #+52]
   \   000002FC   0010A0E3           MOV      R1,#+0
   \   00000300   ........           _BLF     LISTVIEW_AddRow,??LISTVIEW_AddRow??rA
    254                      }
   \   00000304   015095E2           ADDS     R5,R5,#+1
   \   00000308   FAFFFF0A           BEQ      ??InitSysWin_9
    255                      ClearList(Title);
   \   0000030C   0D10A0E1           MOV      R1,SP
   \   00000310   D9FFFFEA           B        ??InitSysWin_7
    256                  }
    257                  break;
    258              case C_AI_INC1_N2        :
    259              case C_AI_INC2_N2        :
    260                  break;               
    261              case C_AI_Radar_4_20mA   :
    262              case C_AI_Radar_Hart     :
    263              case C_AI_AirPurge       :
    264              case C_AI_Float_4_20mA   :
    265              case C_AI_Pt100          :
    266              case C_AI_Pt1000         :
    267              case C_AI_TEMP_AD590     :
    268              case C_AI_TEMP_mA        :
    269              case C_AI_LeSw_ADCard    :
    270              case C_AI_WATERINGRESS   :
    271              case C_AI_WATERINGR_MAIN :
    272              case C_AI_WATERINGR_PRE  :
    273              case C_AI_WATERINGR_TEMP :
    274              case C_AI_WashTrackSensor:
    275              case C_AI_INC1_MACRON    :
    276              case C_AI_INC2_MACRON    :
    277          
    278                  {
    279          
    280                      GUIUpdateKey UpdateValues[] = {
    281                          { GUI_ID_EDIT4, 0, SensorDetails->GetOwner(), SVT_TABLE_OFFSET, 0, 0, L_WORD983, NULL },
    282                          { GUI_ID_EDIT5, 0, SensorDetails->GetOwner(), SVT_LEVEL_OFFSET, 0, 0, L_WORD550, NULL },
    283                      };
   \                     ??InitSysWin_10:
   \   00000314   FC109FE5           LDR      R1,??InitSysWin_2+0x18  ;; `?<Constant {{260, 0, (PRogramObjectBase *)0, 1`
   \   00000318   04008DE2           ADD      R0,SP,#+4
   \   0000031C   9C53B1E8           LDM      R1!,{R2-R4,R7-R9,R12,LR}
   \   00000320   9C53A0E8           STM      R0!,{R2-R4,R7-R9,R12,LR}
   \   00000324   9C5391E8           LDM      R1,{R2-R4,R7-R9,R12,LR}
   \   00000328   9C5380E8           STM      R0,{R2-R4,R7-R9,R12,LR}
   \   0000032C   000095E5           LDR      R0,[R5, #+0]
   \   00000330   4C0090E5           LDR      R0,[R0, #+76]
   \   00000334   0C008DE5           STR      R0,[SP, #+12]
   \   00000338   2C008DE5           STR      R0,[SP, #+44]
    284                      for ( unsigned i = 0; i < NELEMENTS(UpdateValues); i++ ) {
    285                          SensorDetails->ChangeDWord(UpdateValues[i].GUIId, UpdateValues[i].InputMsgWord, UpdateValues[i].ValueKey, UpdateValues[i].Obj);
   \                     ??InitSysWin_11:
   \   0000033C   04008DE2           ADD      R0,SP,#+4
   \   00000340   860280E0           ADD      R0,R0,R6, LSL #+5
   \   00000344   081090E5           LDR      R1,[R0, #+8]
    286                      }
   \   00000348   016086E2           ADD      R6,R6,#+1
   \   0000034C   02002DE9           PUSH     {R1}
   \   00000350   0C3090E5           LDR      R3,[R0, #+12]
   \   00000354   182090E5           LDR      R2,[R0, #+24]
   \   00000358   001090E5           LDR      R1,[R0, #+0]
   \   0000035C   000095E5           LDR      R0,[R5, #+0]
   \   00000360   ........           _BLF     ??ChangeDWord,??ChangeDWord??rA
   \   00000364   020056E3           CMP      R6,#+2
   \   00000368   04D08DE2           ADD      SP,SP,#+4
   \   0000036C   1800002A           BCS      ??InitSysWin_4
   \   00000370   F1FFFFEA           B        ??InitSysWin_11
   \                     ??InitSysWin_3:
   \   00000374   28000000           DC8      "(",+0,+0
    287                  }
    288                  break;
    289              case C_AI_LeSw_Vega     :
    290              case C_AI_LeSw_Vega62   :
    291              case C_AI_LeSw_Vega64   :
    292                  {
    293                      GUIUpdateKey UpdateValues[] = {
    294                          { GUI_ID_EDIT4, 0, SensorDetails->GetSnsPtr(), SVT_MA_OFF, 0, 0, L_WORD1000, NULL },
    295                          { GUI_ID_EDIT5, 0, SensorDetails->GetSnsPtr(), SVT_MA_ON, 0, 0, L_WORD1001, NULL },
    296                      };
   \                     ??InitSysWin_12:
   \   00000378   9C109FE5           LDR      R1,??InitSysWin_2+0x1C  ;; `?<Constant {{260, 0, (PRogramObjectBase *)0, 1_3`
   \   0000037C   04008DE2           ADD      R0,SP,#+4
   \   00000380   9C53B1E8           LDM      R1!,{R2-R4,R7-R9,R12,LR}
   \   00000384   9C53A0E8           STM      R0!,{R2-R4,R7-R9,R12,LR}
   \   00000388   9C5391E8           LDM      R1,{R2-R4,R7-R9,R12,LR}
   \   0000038C   9C5380E8           STM      R0,{R2-R4,R7-R9,R12,LR}
   \   00000390   000095E5           LDR      R0,[R5, #+0]
   \   00000394   480090E5           LDR      R0,[R0, #+72]
   \   00000398   0C008DE5           STR      R0,[SP, #+12]
   \   0000039C   2C008DE5           STR      R0,[SP, #+44]
    297                      for ( unsigned i = 0; i < NELEMENTS(UpdateValues); i++ ) {
    298                          SensorDetails->ChangeDWord(UpdateValues[i].GUIId, UpdateValues[i].InputMsgWord, UpdateValues[i].ValueKey, UpdateValues[i].Obj);
   \                     ??InitSysWin_13:
   \   000003A0   04008DE2           ADD      R0,SP,#+4
   \   000003A4   860280E0           ADD      R0,R0,R6, LSL #+5
   \   000003A8   081090E5           LDR      R1,[R0, #+8]
    299                      }
   \   000003AC   016086E2           ADD      R6,R6,#+1
   \   000003B0   02002DE9           PUSH     {R1}
   \   000003B4   0C3090E5           LDR      R3,[R0, #+12]
   \   000003B8   182090E5           LDR      R2,[R0, #+24]
   \   000003BC   001090E5           LDR      R1,[R0, #+0]
   \   000003C0   000095E5           LDR      R0,[R5, #+0]
   \   000003C4   ........           _BLF     ??ChangeDWord,??ChangeDWord??rA
   \   000003C8   020056E3           CMP      R6,#+2
   \   000003CC   04D08DE2           ADD      SP,SP,#+4
   \   000003D0   F2FFFF3A           BCC      ??InitSysWin_13
    300                  }
    301                  break;
    302              }
    303          }
   \                     ??InitSysWin_4:
   \   000003D4   0020A0E3           MOV      R2,#+0
   \   000003D8   0110A0E3           MOV      R1,#+1
   \   000003DC   EC008DE2           ADD      R0,SP,#+236
   \   000003E0   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000003E4   0020A0E3           MOV      R2,#+0
   \   000003E8   0110A0E3           MOV      R1,#+1
   \   000003EC   D0008DE2           ADD      R0,SP,#+208
   \   000003F0   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000003F4   48DF8DE2           ADD      SP,SP,#+288
   \   000003F8   F043BDE8           POP      {R4-R9,LR}
   \   000003FC   1EFF2FE1           BX       LR               ;; return
   \                     ??InitSysWin_2:
   \   00000400   29000000           DC8      ")",+0,+0
   \   00000404   30250000           DC8      "0%",+0
   \   00000408   34302500           DC8      "40%"
   \   0000040C   36302500           DC8      "60%"
   \   00000410   ........           DC32     `?<Constant {&"FRO"}>`
   \   00000414   ........           DC32     `?<Constant {&"FRO", &"G1", &"G2", &"G3", &"NL1`
   \   00000418   ........           DC32     `?<Constant {{260, 0, (PRogramObjectBase *)0, 1`
   \   0000041C   ........           DC32     `?<Constant {{260, 0, (PRogramObjectBase *)0, 1_3`
    304          
    305          ////////////////////////////////////////////////////////////////////////
    306          //
    307          // Note that numbe of elements in title must match the number of rows!
    308          //
    309          ////////////////////////////////////////////////////////////////////////
    310          

   \                                 In segment CODE, align 4, keep-with-next
    311          void TDUCalDataWin::ClearList(const char *Title[]) {
   \                     ??ClearList:
   \   00000000   F0432DE9           PUSH     {R4-R9,LR}
   \   00000004   0040A0E1           MOV      R4,R0
    312              int NRow = LISTVIEW_GetNumRows(SnsListView);
   \   00000008   F403D4E1           LDRSH    R0,[R4, #+52]
   \   0000000C   0150A0E1           MOV      R5,R1
    313              int NCol = LISTVIEW_GetNumColumns(SnsListView);
    314              for ( int Row = 0; Row < NRow; Row++ ) {
   \   00000010   0080A0E3           MOV      R8,#+0
   \   00000014   ........           _BLF     LISTVIEW_GetNumRows,??LISTVIEW_GetNumRows??rA
   \   00000018   0060A0E1           MOV      R6,R0
   \   0000001C   F403D4E1           LDRSH    R0,[R4, #+52]
   \   00000020   ........           _BLF     LISTVIEW_GetNumColumns,??LISTVIEW_GetNumColumns??rA
   \   00000024   0070A0E1           MOV      R7,R0
   \   00000028   010056E3           CMP      R6,#+1
   \   0000002C   0A0000AA           BGE      ??ClearList_1
    315                  LISTVIEW_SetItemText(SnsListView, 0, Row, Title[Row]);
    316                  for ( int Col = 1; Col < NCol; Col++ ) {
    317                      LISTVIEW_SetItemText(SnsListView, Col, Row, "");
    318                  }
    319              }
    320              //UpdateSysWin();
    321          }
   \                     ??ClearList_2:
   \   00000030   F043BDE8           POP      {R4-R9,LR}
   \   00000034   1EFF2FE1           BX       LR               ;; return
   \                     ??ClearList_3:
   \   00000038   F403D4E1           LDRSH    R0,[R4, #+52]
   \   0000003C   ........           ADR      R3,??DataTable14  ;; ""
   \   00000040   0820A0E1           MOV      R2,R8
   \   00000044   0910A0E1           MOV      R1,R9
   \   00000048   ........           _BLF     LISTVIEW_SetItemText,??LISTVIEW_SetItemText??rA
   \   0000004C   019089E2           ADD      R9,R9,#+1
   \                     ??ClearList_4:
   \   00000050   070059E1           CMP      R9,R7
   \   00000054   F7FFFFBA           BLT      ??ClearList_3
   \                     ??ClearList_5:
   \   00000058   018088E2           ADD      R8,R8,#+1
   \                     ??ClearList_1:
   \   0000005C   060058E1           CMP      R8,R6
   \   00000060   F2FFFFAA           BGE      ??ClearList_2
   \   00000064   F403D4E1           LDRSH    R0,[R4, #+52]
   \   00000068   083195E7           LDR      R3,[R5, +R8, LSL #+2]
   \   0000006C   0820A0E1           MOV      R2,R8
   \   00000070   0010A0E3           MOV      R1,#+0
   \   00000074   ........           _BLF     LISTVIEW_SetItemText,??LISTVIEW_SetItemText??rA
   \   00000078   0190A0E3           MOV      R9,#+1
   \   0000007C   020057E3           CMP      R7,#+2
   \   00000080   F2FFFFAA           BGE      ??ClearList_4
   \   00000084   F3FFFFEA           B        ??ClearList_5
    322          

   \                                 In segment CODE, align 4, keep-with-next
    323          PROIOComponent* 	TDUCalDataWin::GetSnsPtr(void) {
    324              return SnsPtr;
   \                     ??GetSnsPtr:
   \   00000000   480090E5           LDR      R0,[R0, #+72]
   \   00000004   1EFF2FE1           BX       LR               ;; return
    325          }

   \                                 In segment CODE, align 4, keep-with-next
    326          PRogramObjectBase*  TDUCalDataWin::GetOwner(void) {
    327              return Owner;
   \                     ??GetOwner:
   \   00000000   4C0090E5           LDR      R0,[R0, #+76]
   \   00000004   1EFF2FE1           BX       LR               ;; return
    328          }
    329          
    330          

   \                                 In segment CODE, align 4, keep-with-next
    331          void TDUCalDataWin::cbSysWin(WM_MESSAGE *pMsg) {
   \                     ??cbSysWin:
   \   00000000   F0402DE9           PUSH     {R4-R7,LR}
    332              int NCode, Id;
    333              WM_HWIN hWin = pMsg->hWin;
    334              switch ( pMsg->MsgId ) {
   \   00000004   ........           LDR      R5,??DataTable18  ;; SensorDetails
   \   00000008   6CD04DE2           SUB      SP,SP,#+108
   \   0000000C   0060A0E1           MOV      R6,R0
   \   00000010   002096E5           LDR      R2,[R6, #+0]
   \   00000014   F440D6E1           LDRSH    R4,[R6, #+4]
   \   00000018   F670D6E1           LDRSH    R7,[R6, #+6]
   \   0000001C   000095E5           LDR      R0,[R5, #+0]
   \   00000020   0110A0E3           MOV      R1,#+1
   \   00000024   0B2042E2           SUB      R2,R2,#+11
   \   00000028   400E52E3           CMP      R2,#+1024
   \   0000002C   F202008A           BHI      ??cbSysWin_3
   \   00000030   023F8FE2           ADR      R3,??cbSysWin_1
   \   00000034   8220A0E1           MOV      R2,R2, LSL #+1
   \   00000038   B23093E1           LDRH     R3,[R3, R2]
   \   0000003C   03F18FE0           ADD      PC,PC,R3, LSL #+2
   \                     ??cbSysWin_1:
   \   00000040   0002EE02E502       DC16     +512,+750,+741,+526
   \              0E02        
   \   00000048   0202EE02EE02       DC16     +514,+750,+750,+750
   \              EE02        
   \   00000050   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   00000058   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   00000060   EE02EE020C02       DC16     +750,+750,+524,+750
   \              EE02        
   \   00000068   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   00000070   EE02EE02EE02       DC16     +750,+750,+750,+537
   \              1902        
   \   00000078   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   00000080   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   00000088   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   00000090   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   00000098   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   000000A0   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   000000A8   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   000000B0   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   000000B8   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   000000C0   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   000000C8   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   000000D0   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   000000D8   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   000000E0   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   000000E8   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   000000F0   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   000000F8   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   00000100   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   00000108   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   00000110   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   00000118   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   00000120   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   00000128   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   00000130   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   00000138   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   00000140   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   00000148   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   00000150   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   00000158   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   00000160   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   00000168   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   00000170   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   00000178   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   00000180   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   00000188   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   00000190   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   00000198   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   000001A0   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   000001A8   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   000001B0   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   000001B8   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   000001C0   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   000001C8   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   000001D0   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   000001D8   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   000001E0   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   000001E8   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   000001F0   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   000001F8   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   00000200   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   00000208   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   00000210   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   00000218   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   00000220   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   00000228   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   00000230   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   00000238   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   00000240   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   00000248   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   00000250   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   00000258   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   00000260   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   00000268   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   00000270   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   00000278   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   00000280   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   00000288   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   00000290   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   00000298   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   000002A0   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   000002A8   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   000002B0   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   000002B8   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   000002C0   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   000002C8   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   000002D0   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   000002D8   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   000002E0   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   000002E8   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   000002F0   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   000002F8   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   00000300   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   00000308   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   00000310   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   00000318   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   00000320   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   00000328   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   00000330   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   00000338   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   00000340   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   00000348   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   00000350   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   00000358   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   00000360   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   00000368   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   00000370   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   00000378   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   00000380   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   00000388   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   00000390   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   00000398   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   000003A0   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   000003A8   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   000003B0   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   000003B8   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   000003C0   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   000003C8   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   000003D0   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   000003D8   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   000003E0   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   000003E8   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   000003F0   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   000003F8   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   00000400   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   00000408   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   00000410   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   00000418   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   00000420   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   00000428   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   00000430   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   00000438   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   00000440   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   00000448   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   00000450   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   00000458   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   00000460   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   00000468   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   00000470   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   00000478   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   00000480   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   00000488   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   00000490   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   00000498   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   000004A0   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   000004A8   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   000004B0   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   000004B8   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   000004C0   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   000004C8   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   000004D0   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   000004D8   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   000004E0   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   000004E8   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   000004F0   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   000004F8   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   00000500   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   00000508   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   00000510   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   00000518   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   00000520   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   00000528   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   00000530   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   00000538   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   00000540   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   00000548   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   00000550   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   00000558   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   00000560   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   00000568   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   00000570   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   00000578   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   00000580   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   00000588   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   00000590   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   00000598   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   000005A0   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   000005A8   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   000005B0   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   000005B8   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   000005C0   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   000005C8   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   000005D0   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   000005D8   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   000005E0   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   000005E8   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   000005F0   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   000005F8   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   00000600   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   00000608   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   00000610   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   00000618   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   00000620   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   00000628   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   00000630   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   00000638   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   00000640   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   00000648   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   00000650   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   00000658   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   00000660   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   00000668   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   00000670   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   00000678   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   00000680   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   00000688   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   00000690   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   00000698   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   000006A0   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   000006A8   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   000006B0   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   000006B8   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   000006C0   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   000006C8   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   000006D0   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   000006D8   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   000006E0   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   000006E8   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   000006F0   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   000006F8   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   00000700   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   00000708   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   00000710   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   00000718   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   00000720   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   00000728   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   00000730   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   00000738   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   00000740   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   00000748   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   00000750   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   00000758   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   00000760   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   00000768   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   00000770   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   00000778   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   00000780   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   00000788   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   00000790   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   00000798   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   000007A0   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   000007A8   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   000007B0   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   000007B8   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   000007C0   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   000007C8   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   000007D0   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   000007D8   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   000007E0   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   000007E8   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   000007F0   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   000007F8   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   00000800   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   00000808   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   00000810   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   00000818   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   00000820   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   00000828   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   00000830   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   00000838   EE02EE02EE02       DC16     +750,+750,+750,+750
   \              EE02        
   \   00000840   D1020000           DC16     +721,+0
    335              case WM_DELETE:
    336                  //SensorDetails->CloseWin(&SensorDetails->IsClosed);
    337                  SensorDetails->IsClosed = true;
   \                     ??cbSysWin_4:
   \   00000844   6C10C0E5           STRB     R1,[R0, #+108]
   \   00000848   060000EA           B        ??cbSysWin_5
    338                  break;
    339              case WM_PAINT:
    340                  GUI_DrawLine(286 / 2 - 10, 15, 286 / 2 - 10, 70);
   \                     ??cbSysWin_6:
   \   0000084C   4630A0E3           MOV      R3,#+70
   \   00000850   8520A0E3           MOV      R2,#+133
   \   00000854   0F10A0E3           MOV      R1,#+15
   \   00000858   8500A0E3           MOV      R0,#+133
   \   0000085C   ........           _BLF     GUI_DrawLine,??GUI_DrawLine??rA
    341                  SensorDetails->UpdateLanguage();
   \   00000860   000095E5           LDR      R0,[R5, #+0]
   \   00000864   ........           _BLF     ??UpdateLanguage,??UpdateLanguage??rA
   \                     ??cbSysWin_5:
   \   00000868   6CD08DE2           ADD      SP,SP,#+108
   \   0000086C   F040BDE8           POP      {R4-R7,LR}
   \   00000870   1EFF2FE1           BX       LR
    342                  break;
    343              case WM_INIT_DIALOG:
    344                  SensorDetails->FirstTime = true;
   \                     ??cbSysWin_7:
   \   00000874   2810C0E5           STRB     R1,[R0, #+40]
   \   00000878   FAFFFFEA           B        ??cbSysWin_5
    345                  break;
    346              case WM_KEY:
    347                  switch ( ((WM_KEY_INFO *)(pMsg->Data.p))->Key ) {
   \                     ??cbSysWin_8:
   \   0000087C   080096E5           LDR      R0,[R6, #+8]
   \   00000880   000090E5           LDR      R0,[R0, #+0]
   \   00000884   0D0050E2           SUBS     R0,R0,#+13
   \   00000888   0400000A           BEQ      ??cbSysWin_9
   \   0000088C   0E0050E2           SUBS     R0,R0,#+14
   \   00000890   F4FFFF1A           BNE      ??cbSysWin_5
    348                  case GUI_KEY_ESCAPE:
    349                      GUI_EndDialog(hWin, 1);
   \                     ??cbSysWin_10:
   \   00000894   0400A0E1           MOV      R0,R4
   \   00000898   ........           _BLF     GUI_EndDialog,??GUI_EndDialog??rA
   \   0000089C   F1FFFFEA           B        ??cbSysWin_5
    350                      break;
    351                  case GUI_KEY_ENTER:
    352                      GUI_EndDialog(hWin, 0);
   \                     ??cbSysWin_9:
   \   000008A0   0010A0E3           MOV      R1,#+0
   \   000008A4   FAFFFFEA           B        ??cbSysWin_10
    353                      break;
    354                  }
    355                  break;
    356              case WM_NOTIFY_PARENT:
    357                  Id    = WM_GetId(pMsg->hWinSrc);        /* Id of widget */
   \                     ??cbSysWin_11:
   \   000008A8   0700A0E1           MOV      R0,R7
   \   000008AC   ........           _BLF     WM_GetId,??WM_GetId??rA
    358                  NCode = pMsg->Data.v;                               /* Notification code */
    359                  switch ( NCode ) {
   \   000008B0   081096E5           LDR      R1,[R6, #+8]
   \   000008B4   020051E3           CMP      R1,#+2
   \   000008B8   EAFFFF1A           BNE      ??cbSysWin_5
    360                  case WM_NOTIFICATION_SEL_CHANGED:       /* React only if released */
    361                      switch ( Id ) {
    362                      case GUI_ID_DROPDOWN0: /* Select TCU */
    363                          break;
    364                      default:
    365                          break;
    366                      }
    367                      break;
    368                  case WM_NOTIFICATION_RELEASED:      /* React only if released */
    369                      switch ( Id ) {
   \   000008BC   002095E5           LDR      R2,[R5, #+0]
   \   000008C0   051040E2           SUB      R1,R0,#+5
   \   000008C4   1F30A0E3           MOV      R3,#+31
   \   000008C8   403F83E3           ORR      R3,R3,#0x100
   \   000008CC   030051E1           CMP      R1,R3
   \   000008D0   E4FFFF8A           BHI      ??cbSysWin_5
   \   000008D4   023F8FE2           ADR      R3,??cbSysWin_2
   \   000008D8   8110A0E1           MOV      R1,R1, LSL #+1
   \   000008DC   F13093E1           LDRSH    R3,[R3, R1]
   \   000008E0   03F18FE0           ADD      PC,PC,R3, LSL #+2
   \                     ??cbSysWin_2:
   \   000008E4   9300E0FFE0FF       DC16     +147,+65504,+65504,+65504
   \              E0FF        
   \   000008EC   E0FFE0FFE0FF       DC16     +65504,+65504,+65504,+65504
   \              E0FF        
   \   000008F4   E0FFE0FFE0FF       DC16     +65504,+65504,+65504,+65504
   \              E0FF        
   \   000008FC   E0FFE0FFE0FF       DC16     +65504,+65504,+65504,+65504
   \              E0FF        
   \   00000904   E0FFE0FFE0FF       DC16     +65504,+65504,+65504,+65504
   \              E0FF        
   \   0000090C   E0FFE0FFE0FF       DC16     +65504,+65504,+65504,+65504
   \              E0FF        
   \   00000914   E0FFE0FFE0FF       DC16     +65504,+65504,+65504,+65504
   \              E0FF        
   \   0000091C   E0FFE0FFE0FF       DC16     +65504,+65504,+65504,+65504
   \              E0FF        
   \   00000924   E0FFE0FFE0FF       DC16     +65504,+65504,+65504,+65504
   \              E0FF        
   \   0000092C   E0FFE0FFE0FF       DC16     +65504,+65504,+65504,+65504
   \              E0FF        
   \   00000934   E0FFE0FFE0FF       DC16     +65504,+65504,+65504,+65504
   \              E0FF        
   \   0000093C   E0FFE0FFE0FF       DC16     +65504,+65504,+65504,+65504
   \              E0FF        
   \   00000944   E0FFE0FFE0FF       DC16     +65504,+65504,+65504,+65504
   \              E0FF        
   \   0000094C   E0FFE0FFE0FF       DC16     +65504,+65504,+65504,+65504
   \              E0FF        
   \   00000954   E0FFE0FFE0FF       DC16     +65504,+65504,+65504,+65504
   \              E0FF        
   \   0000095C   E0FFE0FFE0FF       DC16     +65504,+65504,+65504,+65504
   \              E0FF        
   \   00000964   E0FFE0FFE0FF       DC16     +65504,+65504,+65504,+65504
   \              E0FF        
   \   0000096C   E0FFE0FFE0FF       DC16     +65504,+65504,+65504,+65504
   \              E0FF        
   \   00000974   E0FFE0FFE0FF       DC16     +65504,+65504,+65504,+65504
   \              E0FF        
   \   0000097C   E0FFE0FFE0FF       DC16     +65504,+65504,+65504,+65504
   \              E0FF        
   \   00000984   E0FFE0FFE0FF       DC16     +65504,+65504,+65504,+65504
   \              E0FF        
   \   0000098C   E0FFE0FFE0FF       DC16     +65504,+65504,+65504,+65504
   \              E0FF        
   \   00000994   E0FFE0FFE0FF       DC16     +65504,+65504,+65504,+65504
   \              E0FF        
   \   0000099C   E0FFE0FFE0FF       DC16     +65504,+65504,+65504,+65504
   \              E0FF        
   \   000009A4   E0FFE0FFE0FF       DC16     +65504,+65504,+65504,+65504
   \              E0FF        
   \   000009AC   E0FFE0FFE0FF       DC16     +65504,+65504,+65504,+65504
   \              E0FF        
   \   000009B4   E0FFE0FFE0FF       DC16     +65504,+65504,+65504,+65504
   \              E0FF        
   \   000009BC   E0FFE0FFE0FF       DC16     +65504,+65504,+65504,+65504
   \              E0FF        
   \   000009C4   E0FFE0FFE0FF       DC16     +65504,+65504,+65504,+65504
   \              E0FF        
   \   000009CC   E0FFE0FFE0FF       DC16     +65504,+65504,+65504,+65504
   \              E0FF        
   \   000009D4   E0FFE0FFE0FF       DC16     +65504,+65504,+65504,+65504
   \              E0FF        
   \   000009DC   E0FFE0FFE0FF       DC16     +65504,+65504,+65504,+65504
   \              E0FF        
   \   000009E4   E0FFE0FFE0FF       DC16     +65504,+65504,+65504,+65504
   \              E0FF        
   \   000009EC   E0FFE0FFE0FF       DC16     +65504,+65504,+65504,+65504
   \              E0FF        
   \   000009F4   E0FFE0FFE0FF       DC16     +65504,+65504,+65504,+65504
   \              E0FF        
   \   000009FC   E0FFE0FFE0FF       DC16     +65504,+65504,+65504,+65504
   \              E0FF        
   \   00000A04   E0FFE0FFE0FF       DC16     +65504,+65504,+65504,+65504
   \              E0FF        
   \   00000A0C   E0FFE0FFE0FF       DC16     +65504,+65504,+65504,+65504
   \              E0FF        
   \   00000A14   E0FFE0FFE0FF       DC16     +65504,+65504,+65504,+65504
   \              E0FF        
   \   00000A1C   E0FFE0FFE0FF       DC16     +65504,+65504,+65504,+65504
   \              E0FF        
   \   00000A24   E0FFE0FFE0FF       DC16     +65504,+65504,+65504,+65504
   \              E0FF        
   \   00000A2C   E0FFE0FFE0FF       DC16     +65504,+65504,+65504,+65504
   \              E0FF        
   \   00000A34   E0FFE0FFE0FF       DC16     +65504,+65504,+65504,+65504
   \              E0FF        
   \   00000A3C   E0FFE0FFE0FF       DC16     +65504,+65504,+65504,+65504
   \              E0FF        
   \   00000A44   E0FFE0FFE0FF       DC16     +65504,+65504,+65504,+65504
   \              E0FF        
   \   00000A4C   E0FFE0FFE0FF       DC16     +65504,+65504,+65504,+65504
   \              E0FF        
   \   00000A54   E0FFE0FFE0FF       DC16     +65504,+65504,+65504,+65504
   \              E0FF        
   \   00000A5C   E0FFE0FFE0FF       DC16     +65504,+65504,+65504,+65504
   \              E0FF        
   \   00000A64   E0FFE0FFE0FF       DC16     +65504,+65504,+65504,+65504
   \              E0FF        
   \   00000A6C   E0FFE0FFE0FF       DC16     +65504,+65504,+65504,+65504
   \              E0FF        
   \   00000A74   E0FFE0FFE0FF       DC16     +65504,+65504,+65504,+65504
   \              E0FF        
   \   00000A7C   E0FFE0FFE0FF       DC16     +65504,+65504,+65504,+65504
   \              E0FF        
   \   00000A84   E0FFE0FFE0FF       DC16     +65504,+65504,+65504,+65504
   \              E0FF        
   \   00000A8C   E0FFE0FFE0FF       DC16     +65504,+65504,+65504,+65504
   \              E0FF        
   \   00000A94   E0FFE0FFE0FF       DC16     +65504,+65504,+65504,+65504
   \              E0FF        
   \   00000A9C   E0FFE0FFE0FF       DC16     +65504,+65504,+65504,+65504
   \              E0FF        
   \   00000AA4   E0FFE0FFE0FF       DC16     +65504,+65504,+65504,+65504
   \              E0FF        
   \   00000AAC   E0FFE0FFE0FF       DC16     +65504,+65504,+65504,+65504
   \              E0FF        
   \   00000AB4   E0FFE0FFE0FF       DC16     +65504,+65504,+65504,+65504
   \              E0FF        
   \   00000ABC   E0FFE0FFE0FF       DC16     +65504,+65504,+65504,+65504
   \              E0FF        
   \   00000AC4   E0FFE0FFE0FF       DC16     +65504,+65504,+65504,+65504
   \              E0FF        
   \   00000ACC   E0FFE0FFE0FF       DC16     +65504,+65504,+65504,+65504
   \              E0FF        
   \   00000AD4   E0FFE0FFE0FF       DC16     +65504,+65504,+65504,+65504
   \              E0FF        
   \   00000ADC   E0FFE0FFE0FF       DC16     +65504,+65504,+65504,+65504
   \              E0FF        
   \   00000AE4   E0FFE0FFE0FF       DC16     +65504,+65504,+65504,+65504
   \              E0FF        
   \   00000AEC   E0FFE0FFE0FF       DC16     +65504,+65504,+65504,+65504
   \              E0FF        
   \   00000AF4   E0FFE0FFE0FF       DC16     +65504,+65504,+65504,+65504
   \              E0FF        
   \   00000AFC   E0FFE0FFE0FF       DC16     +65504,+65504,+65504,+65504
   \              E0FF        
   \   00000B04   E0FFE0FFE0FF       DC16     +65504,+65504,+65504,+65504
   \              E0FF        
   \   00000B0C   E0FFE0FFE0FF       DC16     +65504,+65504,+65504,+65504
   \              E0FF        
   \   00000B14   E0FFE0FFE0FF       DC16     +65504,+65504,+65504,+143
   \              8F00        
   \   00000B1C   8F008F008F00       DC16     +143,+143,+143,+143
   \              8F00        
    370                      case GUI_ID_CHECK0:
    371                      case GUI_ID_CHECK1:
    372                      case GUI_ID_CHECK2:
    373                      case GUI_ID_CHECK3:
    374                      case GUI_ID_CHECK4:
    375                          SensorDetails->CHECKBOX_UpdateValue(Id);
   \                     ??cbSysWin_12:
   \   00000B24   0010A0E1           MOV      R1,R0
   \   00000B28   0200A0E1           MOV      R0,R2
   \   00000B2C   ........           _BLF     ??CHECKBOX_UpdateValue,??CHECKBOX_UpdateValue??rA
   \   00000B30   4CFFFFEA           B        ??cbSysWin_5
    376                          break;
    377                      case GUI_ID_CLOSE: /* Close Button */
    378                          if ( !SensorDetails->IsClosed ) {
   \                     ??cbSysWin_13:
   \   00000B34   6C00D2E5           LDRB     R0,[R2, #+108]
   \   00000B38   000050E3           CMP      R0,#+0
   \   00000B3C   0200001A           BNE      ??cbSysWin_14
    379                              GUI_EndDialog(hWin, 0);
   \   00000B40   0010A0E3           MOV      R1,#+0
   \   00000B44   0400A0E1           MOV      R0,R4
   \   00000B48   ........           _BLF     GUI_EndDialog,??GUI_EndDialog??rA
    380                          }
    381                          SystemWindow->ChangeSystemWindow(SensorDetails->PreviousSysWin);
   \                     ??cbSysWin_14:
   \   00000B4C   000095E5           LDR      R0,[R5, #+0]
    382                          ButWindow->EnableButton(0, true);
   \   00000B50   ........           LDR      R4,??DataTable16  ;; ButWindow
   \   00000B54   701090E5           LDR      R1,[R0, #+112]
   \   00000B58   ........           LDR      R0,??DataTable17  ;; SystemWindow
   \   00000B5C   000090E5           LDR      R0,[R0, #+0]
   \   00000B60   ........           _BLF     ??ChangeSystemWindow,??ChangeSystemWindow??rA
   \   00000B64   000094E5           LDR      R0,[R4, #+0]
   \   00000B68   0120A0E3           MOV      R2,#+1
   \   00000B6C   0010A0E3           MOV      R1,#+0
   \   00000B70   ........           _BLF     ??EnableButton,??EnableButton??rA
    383                          ButWindow->EnableButton(1, true);
   \   00000B74   000094E5           LDR      R0,[R4, #+0]
   \   00000B78   0120A0E3           MOV      R2,#+1
   \   00000B7C   0110A0E3           MOV      R1,#+1
   \   00000B80   ........           _BLF     ??EnableButton,??EnableButton??rA
   \   00000B84   37FFFFEA           B        ??cbSysWin_5
    384                          break;
    385                      default:
    386                          break;
    387                      }
    388                      break;
    389                  }
    390                  break;
    391              case MESSAGE_KEYPAD_RETURN:
    392                  {
    393                      int ValueId = pMsg->hWinSrc;
    394                      char StringBuf[BUF_SIZE] = { "" };
   \                     ??cbSysWin_15:
   \   00000B88   0D00A0E1           MOV      R0,SP
   \   00000B8C   0010A0E3           MOV      R1,#+0
   \   00000B90   5020A0E3           MOV      R2,#+80
   \                     ??cbSysWin_16:
   \   00000B94   042052E2           SUBS     R2,R2,#+4
   \   00000B98   021080E7           STR      R1,[R0, R2]
   \   00000B9C   FCFFFF1A           BNE      ??cbSysWin_16
    395                      strcpy(StringBuf, (char *)pMsg->Data.p);
   \   00000BA0   081096E5           LDR      R1,[R6, #+8]
   \   00000BA4   ........           _BLF     strcpy,??strcpy??rA
    396                      SensorDetails->EDIT_InputValue(ValueId, StringBuf);
   \   00000BA8   0D10A0E1           MOV      R1,SP
   \   00000BAC   50008DE2           ADD      R0,SP,#+80
   \   00000BB0   ........           _BLF     ??AnsiString_2,??AnsiString??rA_2
   \   00000BB4   0020A0E1           MOV      R2,R0
   \   00000BB8   000095E5           LDR      R0,[R5, #+0]
   \   00000BBC   0710A0E1           MOV      R1,R7
   \   00000BC0   ........           _BLF     ??EDIT_InputValue,??EDIT_InputValue??rA
   \   00000BC4   0020A0E3           MOV      R2,#+0
   \   00000BC8   0110A0E3           MOV      R1,#+1
   \   00000BCC   50008DE2           ADD      R0,SP,#+80
   \   00000BD0   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000BD4   23FFFFEA           B        ??cbSysWin_5
    397                  }
    398                  break;
    399              case WM_TOUCH_CHILD:
    400                  {
    401                      Id    = WM_GetId(pMsg->hWinSrc);        /* Id of widget */
   \                     ??cbSysWin_17:
   \   00000BD8   0700A0E1           MOV      R0,R7
   \   00000BDC   ........           _BLF     WM_GetId,??WM_GetId??rA
    402                      NCode = pMsg->Data.v;                               /* Notification code */
    403                      //char *Msg;
    404                      switch ( Id ) {
   \   00000BE0   401F40E2           SUB      R1,R0,#+256
   \   00000BE4   050051E3           CMP      R1,#+5
   \   00000BE8   1EFFFF8A           BHI      ??cbSysWin_5
    405                      case GUI_ID_EDIT0:
    406                      case GUI_ID_EDIT1:
    407                      case GUI_ID_EDIT2:
    408                      case GUI_ID_EDIT3:
    409                      case GUI_ID_EDIT4:
    410                      case GUI_ID_EDIT5:
    411                          SensorDetails->EDIT_ExecKeyboard(Id);
   \   00000BEC   0010A0E1           MOV      R1,R0
   \   00000BF0   000095E5           LDR      R0,[R5, #+0]
   \   00000BF4   ........           _BLF     ??EDIT_ExecKeyboard,??EDIT_ExecKeyboard??rA
   \   00000BF8   1AFFFFEA           B        ??cbSysWin_5
    412                          break;
    413                      }
    414                  }
    415                  break;
    416          
    417              default:
    418                  WM_DefaultProc(pMsg);
   \                     ??cbSysWin_3:
   \   00000BFC   0600A0E1           MOV      R0,R6
   \   00000C00   ........           _BLF     WM_DefaultProc,??WM_DefaultProc??rA
    419                  break;
    420          
    421              }
    422          }
   \                     ??cbSysWin_18:
   \   00000C04   17FFFFEA           B        ??cbSysWin_5
    423          

   \                                 In segment CODE, align 4, keep-with-next
    424          void TDUCalDataWin::ChangeText(int Index) {
   \                     ??ChangeText:
   \   00000000   F0432DE9           PUSH     {R4-R9,LR}
   \   00000004   0040A0E1           MOV      R4,R0
    425              switch ( Index ) {
   \   00000008   ........           LDR      R0,??DataTable18  ;; SensorDetails
   \   0000000C   58D04DE2           SUB      SP,SP,#+88
   \   00000010   000090E5           LDR      R0,[R0, #+0]
   \   00000014   000051E3           CMP      R1,#+0
   \   00000018   0200000A           BEQ      ??ChangeText_1
   \   0000001C   011051E2           SUBS     R1,R1,#+1
   \   00000020   2B00000A           BEQ      ??ChangeText_2
   \   00000024   5A0000EA           B        ??ChangeText_3
    426              case 0:
    427                  {
    428                      const GUIKey Words[] = {
    429                          { GUI_ID_TEXT9, 0, L_WORD983 },   // Table Offset
    430                          { GUI_ID_TEXT10, 0, L_WORD550 },   // Level Offset
    431                      };
   \                     ??ChangeText_1:
   \   00000028   70219FE5           LDR      R2,??ChangeText_4  ;; `?<Constant {{361, 0, 983}, {2558, 0, 550}}>`
   \   0000002C   40108DE2           ADD      R1,SP,#+64
   \   00000030   E85092E8           LDM      R2,{R3,R5-R7,R12,LR}
    432                      GUIUpdateKey UpdateValues[] = {
    433                          { GUI_ID_EDIT4, 0, SensorDetails->GetOwner(), SVT_TABLE_OFFSET, 0, 0, L_WORD983, NULL },
    434                          { GUI_ID_EDIT5, 0, SensorDetails->GetOwner(), SVT_LEVEL_OFFSET, 0, 0, L_WORD550, NULL },
    435                      };
   \   00000034   68219FE5           LDR      R2,??ChangeText_4+0x4  ;; `?<Constant {{260, 0, (PRogramObjectBase *)0, 1_1`
   \   00000038   E85081E8           STM      R1,{R3,R5-R7,R12,LR}
   \   0000003C   E853B2E8           LDM      R2!,{R3,R5-R9,R12,LR}
   \   00000040   0D10A0E1           MOV      R1,SP
   \   00000044   E853A1E8           STM      R1!,{R3,R5-R9,R12,LR}
   \   00000048   E85392E8           LDM      R2,{R3,R5-R9,R12,LR}
   \   0000004C   E85381E8           STM      R1,{R3,R5-R9,R12,LR}
   \   00000050   4C0090E5           LDR      R0,[R0, #+76]
    436                      for ( unsigned i = 0; i < NELEMENTS(Words); i++ ) {
   \   00000054   0050A0E3           MOV      R5,#+0
   \   00000058   08008DE5           STR      R0,[SP, #+8]
   \   0000005C   28008DE5           STR      R0,[SP, #+40]
    437                          ChangeSWord(Words[i].GUIId, Words[i].GUIIndex, Words[i].WordKey);
   \                     ??ChangeText_5:
   \   00000060   0C10A0E3           MOV      R1,#+12
   \   00000064   40008DE2           ADD      R0,SP,#+64
   \   00000068   910520E0           MLA      R0,R1,R5,R0
   \   0000006C   0010A0E3           MOV      R1,#+0
   \   00000070   02002DE9           PUSH     {R1}
   \   00000074   083090E5           LDR      R3,[R0, #+8]
   \   00000078   042090E5           LDR      R2,[R0, #+4]
   \   0000007C   001090E5           LDR      R1,[R0, #+0]
   \   00000080   0400A0E1           MOV      R0,R4
   \   00000084   ........           _BLF     ??ChangeSWord,??ChangeSWord??rA
    438                      }
   \   00000088   015085E2           ADD      R5,R5,#+1
   \   0000008C   020055E3           CMP      R5,#+2
   \   00000090   04D08DE2           ADD      SP,SP,#+4
   \   00000094   F1FFFF3A           BCC      ??ChangeText_5
    439                      for ( unsigned i = 0; i < NELEMENTS(UpdateValues); i++ ) {
   \   00000098   0050A0E3           MOV      R5,#+0
    440                          ChangeDWord(UpdateValues[i].GUIId, UpdateValues[i].InputMsgWord, UpdateValues[i].ValueKey, UpdateValues[i].Obj);
   \                     ??ChangeText_6:
   \   0000009C   0D00A0E1           MOV      R0,SP
   \   000000A0   850280E0           ADD      R0,R0,R5, LSL #+5
   \   000000A4   081090E5           LDR      R1,[R0, #+8]
    441                      }
   \   000000A8   015085E2           ADD      R5,R5,#+1
   \   000000AC   02002DE9           PUSH     {R1}
   \   000000B0   0C3090E5           LDR      R3,[R0, #+12]
   \   000000B4   182090E5           LDR      R2,[R0, #+24]
   \   000000B8   001090E5           LDR      R1,[R0, #+0]
   \   000000BC   0400A0E1           MOV      R0,R4
   \   000000C0   ........           _BLF     ??ChangeDWord,??ChangeDWord??rA
   \   000000C4   020055E3           CMP      R5,#+2
   \   000000C8   04D08DE2           ADD      SP,SP,#+4
   \   000000CC   3000002A           BCS      ??ChangeText_3
   \   000000D0   F1FFFFEA           B        ??ChangeText_6
    442          
    443                  }
    444                  break;
    445              case 1:
    446                  {
    447                      const GUIKey Words[] = {
    448                          { GUI_ID_TEXT9, 0, L_WORD1000 },   // Normal text
    449                          { GUI_ID_TEXT10, 0, L_WORD1001 },   // Threshold text
    450                      };
   \                     ??ChangeText_2:
   \   000000D4   CC209FE5           LDR      R2,??ChangeText_4+0x8  ;; `?<Constant {{361, 0, 1000}, {2558, 0, 1001}}>`
   \   000000D8   40108DE2           ADD      R1,SP,#+64
   \   000000DC   E80392E8           LDM      R2,{R3,R5-R9}
    451                      GUIUpdateKey UpdateValues[] = {
    452                          { GUI_ID_EDIT4, 0, SensorDetails->GetSnsPtr(), SVT_MA_OFF, 0, 0, L_WORD1000, NULL },
    453                          { GUI_ID_EDIT5, 0, SensorDetails->GetSnsPtr(), SVT_MA_ON, 0, 0, L_WORD1001, NULL },
    454                      };
   \   000000E0   C4209FE5           LDR      R2,??ChangeText_4+0xC  ;; `?<Constant {{260, 0, (PRogramObjectBase *)0, 1_2`
   \   000000E4   E80381E8           STM      R1,{R3,R5-R9}
   \   000000E8   E853B2E8           LDM      R2!,{R3,R5-R9,R12,LR}
   \   000000EC   0D10A0E1           MOV      R1,SP
   \   000000F0   E853A1E8           STM      R1!,{R3,R5-R9,R12,LR}
   \   000000F4   E85392E8           LDM      R2,{R3,R5-R9,R12,LR}
   \   000000F8   E85381E8           STM      R1,{R3,R5-R9,R12,LR}
   \   000000FC   480090E5           LDR      R0,[R0, #+72]
    455                      for ( unsigned i = 0; i < NELEMENTS(Words); i++ ) {
   \   00000100   0050A0E3           MOV      R5,#+0
   \   00000104   08008DE5           STR      R0,[SP, #+8]
   \   00000108   28008DE5           STR      R0,[SP, #+40]
    456                          ChangeSWord(Words[i].GUIId, Words[i].GUIIndex, Words[i].WordKey, false);
   \                     ??ChangeText_7:
   \   0000010C   0C10A0E3           MOV      R1,#+12
   \   00000110   40008DE2           ADD      R0,SP,#+64
   \   00000114   910520E0           MLA      R0,R1,R5,R0
   \   00000118   0010A0E3           MOV      R1,#+0
   \   0000011C   02002DE9           PUSH     {R1}
   \   00000120   083090E5           LDR      R3,[R0, #+8]
   \   00000124   042090E5           LDR      R2,[R0, #+4]
   \   00000128   001090E5           LDR      R1,[R0, #+0]
   \   0000012C   0400A0E1           MOV      R0,R4
   \   00000130   ........           _BLF     ??ChangeSWord,??ChangeSWord??rA
    457                      }
   \   00000134   015085E2           ADD      R5,R5,#+1
   \   00000138   020055E3           CMP      R5,#+2
   \   0000013C   04D08DE2           ADD      SP,SP,#+4
   \   00000140   F1FFFF3A           BCC      ??ChangeText_7
    458                      UpdateSFields();
   \   00000144   0400A0E1           MOV      R0,R4
   \   00000148   ........           _BLF     ??UpdateSFields,??UpdateSFields??rA
    459                      for ( unsigned i = 0; i < NELEMENTS(UpdateValues); i++ ) {
   \   0000014C   0050A0E3           MOV      R5,#+0
    460                          ChangeDWord(UpdateValues[i].GUIId, UpdateValues[i].InputMsgWord, UpdateValues[i].ValueKey, UpdateValues[i].Obj);
   \                     ??ChangeText_8:
   \   00000150   0D00A0E1           MOV      R0,SP
   \   00000154   850280E0           ADD      R0,R0,R5, LSL #+5
   \   00000158   081090E5           LDR      R1,[R0, #+8]
    461                      }
   \   0000015C   015085E2           ADD      R5,R5,#+1
   \   00000160   02002DE9           PUSH     {R1}
   \   00000164   0C3090E5           LDR      R3,[R0, #+12]
   \   00000168   182090E5           LDR      R2,[R0, #+24]
   \   0000016C   001090E5           LDR      R1,[R0, #+0]
   \   00000170   0400A0E1           MOV      R0,R4
   \   00000174   ........           _BLF     ??ChangeDWord,??ChangeDWord??rA
   \   00000178   020055E3           CMP      R5,#+2
   \   0000017C   04D08DE2           ADD      SP,SP,#+4
   \   00000180   F2FFFF3A           BCC      ??ChangeText_8
    462                      Hide(GUI_ID_TEXT3);
   \   00000184   6310A0E3           MOV      R1,#+99
   \   00000188   401F81E3           ORR      R1,R1,#0x100
   \   0000018C   0400A0E1           MOV      R0,R4
   \   00000190   ........           _BLF     ??Hide,??Hide??rA
    463                  }
    464                  break;
    465              }
    466          }
   \                     ??ChangeText_3:
   \   00000194   58D08DE2           ADD      SP,SP,#+88
   \   00000198   F043BDE8           POP      {R4-R9,LR}
   \   0000019C   1EFF2FE1           BX       LR               ;; return
   \                     ??ChangeText_4:
   \   000001A0   ........           DC32     `?<Constant {{361, 0, 983}, {2558, 0, 550}}>`
   \   000001A4   ........           DC32     `?<Constant {{260, 0, (PRogramObjectBase *)0, 1_1`
   \   000001A8   ........           DC32     `?<Constant {{361, 0, 1000}, {2558, 0, 1001}}>`
   \   000001AC   ........           DC32     `?<Constant {{260, 0, (PRogramObjectBase *)0, 1_2`

   \                                 In segment DIFUNCT, align 4, keep-with-next, root
   \   00000000                      REQUIRE ?call_ctors
   \   00000000   ........           DC32    ??__sti__routine

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "Gain">`:
   \   00000000   4761696E00         DC8 "Gain"
   \   00000005   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant {{260, 0, (PRogramObjectBase *)0, 1`:
   \   00000000   040100000000       DC32 260, 0, 0H, 1065, 0, 0, 983, 0H, 261, 0, 0H, 1064, 0, 0, 550, 0H
   \              000000000000
   \              290400000000
   \              000000000000
   \              D70300000000
   \              000005010000
   \              000000000000
   \              000028040000
   \              000000000000
   \              000026020000
   \              00000000    

   \                                 In segment DATA_C, align 4, align-sorted
   \   00000000   00                 DC8 ""
   \   00000001   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000011   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000021   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000031   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000041   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000      

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant {{361, 0, 983}, {2558, 0, 550}}>`:
   \   00000000   690100000000       DC32 361, 0, 983, 2558, 0, 550
   \              0000D7030000
   \              FE0900000000
   \              000026020000

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant {{260, 0, (PRogramObjectBase *)0, 1_1`:
   \   00000000   040100000000       DC32 260, 0, 0H, 1065, 0, 0, 983, 0H, 261, 0, 0H, 1064, 0, 0, 550, 0H
   \              000000000000
   \              290400000000
   \              000000000000
   \              D70300000000
   \              000005010000
   \              000000000000
   \              000028040000
   \              000000000000
   \              000026020000
   \              00000000    

   \                                 In segment DATA_C, align 1, align-sorted
   \                     `?<Constant "4">`:
   \   00000000   3400               DC8 "4"

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant {{361, 0, 1000}, {2558, 0, 1001}}>`:
   \   00000000   690100000000       DC32 361, 0, 1000, 2558, 0, 1001
   \              0000E8030000
   \              FE0900000000
   \              0000E9030000

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "Calibration Data">`:
   \   00000000   43616C696272       DC8 "Calibration Data"
   \              6174696F6E20
   \              4461746100  
   \   00000011   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "SnsInfo">`:
   \   00000000   536E73496E66       DC8 "SnsInfo"
   \              6F00        

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "SerNum">`:
   \   00000000   5365724E756D       DC8 "SerNum"
   \              00          
   \   00000007   00                 DC8 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant {{260, 0, (PRogramObjectBase *)0, 1_2`:
   \   00000000   040100000000       DC32 260, 0, 0H, 1241, 0, 0, 1000, 0H, 261, 0, 0H, 1240, 0, 0, 1001, 0H
   \              000000000000
   \              D90400000000
   \              000000000000
   \              E80300000000
   \              000005010000
   \              000000000000
   \              0000D8040000
   \              000000000000
   \              0000E9030000
   \              00000000    

   \                                 In segment DATA_C, align 1, align-sorted
   \                     `?<Constant "">_1`:
   \   00000000   00                 DC8 ""

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "Offset">`:
   \   00000000   4F6666736574       DC8 "Offset"
   \              00          
   \   00000007   00                 DC8 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "Table offset">`:
   \   00000000   5461626C6520       DC8 "Table offset"
   \              6F6666736574
   \              00          
   \   0000000D   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "Value">`:
   \   00000000   56616C756500       DC8 "Value"
   \   00000006   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "Level offset">`:
   \   00000000   4C6576656C20       DC8 "Level offset"
   \              6F6666736574
   \              00          
   \   0000000D   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant {{256, 0, (PRogramObjectBase *)0, 1`:
   \   00000000   000100000000       DC32 256, 0, 0H, 1212, 0, 0, 547, 0H, 257, 0, 0H, 1204, 0, 0, 126, 0H
   \              000000000000
   \              BC0400000000
   \              000000000000
   \              230200000000
   \              000001010000
   \              000000000000
   \              0000B4040000
   \              000000000000
   \              00007E000000
   \              00000000    
   \   00000040   020100000000       DC32 258, 0, 0H, 1205, 0, 357, 127, 0H, 259, 0, 0H, 1208, 0, 360, 128
   \              000000000000
   \              B50400000000
   \              000065010000
   \              7F0000000000
   \              000003010000
   \              000000000000
   \              0000B8040000
   \              000000006801
   \              000080000000
   \   0000007C   000000000401       DC32 0H, 260, 0, 0H, 1065, 0, 0, 983, 0H, 261, 0, 0H, 1064, 0, 0, 550
   \              000000000000
   \              000000002904
   \              000000000000
   \              00000000D703
   \              000000000000
   \              050100000000
   \              000000000000
   \              280400000000
   \              000000000000
   \              26020000    
   \   000000BC   000000002001       DC32 0H, 288, 0, 0H, 1203, 0, 0, 1, 0H, 355, 0, 0H, 1215, 0, 0, 0, 0H
   \              000000000000
   \              00000000B304
   \              000000000000
   \              000000000100
   \              000000000000
   \              630100000000
   \              000000000000
   \              BF0400000000
   \              000000000000
   \              000000000000
   \              0000        
   \   00000100   660100000000       DC32 358, 0, 0H, 4619, 0, 0, 0, 0H
   \              000000000000
   \              0B1200000000
   \              000000000000
   \              000000000000
   \              0000        

   \                                 In segment DATA_C, align 1, align-sorted
   \   00000000   2800               DC8 "("

   \                                 In segment DATA_C, align 1, align-sorted
   \   00000000   2900               DC8 ")"

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant {1220, 1221, 1222, 1223}>`:
   \   00000000   C4040000C504       DC32 1220, 1221, 1222, 1223
   \              0000C6040000
   \              C7040000    

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant {1224, 1225}>`:
   \   00000000   C8040000C904       DC32 1224, 1225
   \              0000        

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant {{260, 0, (PRogramObjectBase *)0, 1_3`:
   \   00000000   040100000000       DC32 260, 0, 0H, 1241, 0, 0, 1000, 0H, 261, 0, 0H, 1240, 0, 0, 1001, 0H
   \              000000000000
   \              D90400000000
   \              000000000000
   \              E80300000000
   \              000005010000
   \              000000000000
   \              0000D8040000
   \              000000000000
   \              0000E9030000
   \              00000000    

   \                                 In segment DATA_C, align 1, align-sorted
   \                     `?<Constant "20">`:
   \   00000000   323000             DC8 "20"

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant {&"4", &"20"}>`:
   \   00000000   ............       DC32 `?<Constant "4">`, `?<Constant "20">`
   \              ....        

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "FRO">`:
   \   00000000   46524F00           DC8 "FRO"

   \                                 In segment DATA_C, align 1, align-sorted
   \                     `?<Constant "G1">`:
   \   00000000   473100             DC8 "G1"

   \                                 In segment DATA_C, align 1, align-sorted
   \                     `?<Constant "G2">`:
   \   00000000   473200             DC8 "G2"

   \                                 In segment DATA_C, align 1, align-sorted
   \                     `?<Constant "G3">`:
   \   00000000   473300             DC8 "G3"

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "NL1">`:
   \   00000000   4E4C3100           DC8 "NL1"

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "NL2">`:
   \   00000000   4E4C3200           DC8 "NL2"

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant {&"FRO", &"G1", &"G2", &"G3", &"NL1`:
   \   00000000   ............       DC32 `?<Constant "FRO">`, `?<Constant "G1">`, `?<Constant "G2">`
   \              ............
   \   0000000C   ............       DC32 `?<Constant "G3">`, `?<Constant "NL1">`, `?<Constant "NL2">`
   \              ............

   \                                 In segment DATA_C, align 1, align-sorted
   \   00000000   302500             DC8 "0%"

   \                                 In segment DATA_C, align 4, align-sorted
   \   00000000   34302500           DC8 "40%"

   \                                 In segment DATA_C, align 4, align-sorted
   \   00000000   36302500           DC8 "60%"

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant {&"FRO"}>`:
   \   00000000   ........           DC32 `?<Constant "FRO">`
   \   00000004   3130302500         DC8 "100%"
   \   00000009   000000             DC8 0, 0, 0

   \                                 In segment CODE, align 4, keep-with-next
   \   static __??Code32?? __intrinsic __code __interwork __atpcs void __sti__routine()
   \                     ??__sti__routine:
   \   00000000   1C109FE5           LDR      R1,??__sti__routine_1  ;; GUI_Font13_1
   \   00000004   ........           LDR      R0,??DataTable10  ;; TDU_FONT_ST
   \   00000008   30002DE9           PUSH     {R4,R5}
   \   0000000C   3C10B1E8           LDM      R1!,{R2-R5,R12}
   \   00000010   3C10A0E8           STM      R0!,{R2-R5,R12}
   \   00000014   1C1091E8           LDM      R1,{R2-R4,R12}
   \   00000018   1C1080E8           STM      R0,{R2-R4,R12}
   \   0000001C   3000BDE8           POP      {R4,R5}
   \   00000020   1EFF2FE1           BX       LR               ;; return
   \                     ??__sti__routine_1:
   \   00000024   ........           DC32     GUI_Font13_1

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs TDUCalDataWin &TDUCalDataWin::new TDUCalDataWin()
   \                     `??new TDUCalDataWin`:
   \   00000000   00402DE9           PUSH     {LR}
   \   00000004   7400A0E3           MOV      R0,#+116
   \   00000008   ........           _BLF     `??operator new`,`??operator new??rA`
   \   0000000C   000050E3           CMP      R0,#+0
   \   00000010   0000000A           BEQ      `??new TDUCalDataWin_1`
   \   00000014   ........           BL       ??TDUCalDataWin
   \                     `??new TDUCalDataWin_1`:
   \   00000018   0040BDE8           POP      {LR}
   \   0000001C   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void TDUCalDataWin::delete ~TDUCalDataWin(TDUCalDataWin *)
   \                     `??delete ~TDUCalDataWin`:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0040B0E1           MOVS     R4,R0
   \   00000008   0200000A           BEQ      `??delete ~TDUCalDataWin_1`
   \   0000000C   ........           BL       `?~TDUCalDataWin`
   \   00000010   0400A0E1           MOV      R0,R4
   \   00000014   ........           _BLF     `??operator delete`,`??operator delete??rA`
   \                     `??delete ~TDUCalDataWin_1`:
   \   00000018   1040BDE8           POP      {R4,LR}
   \   0000001C   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable4:
   \   00000000   28000000           DC8      "(",+0,+0

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable5:
   \   00000000   29000000           DC8      ")",+0,+0

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable7:
   \   00000000   ........           DC32     ??cbSysWin

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable8:
   \   00000000   ........           DC32     ButWindow

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable9:
   \   00000000   ........           DC32     SystemWindow

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable10:
   \   00000000   ........           DC32     TDU_FONT_ST

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable12:
   \   00000000   ........           DC32     ??npos

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable13:
   \   00000000   ........           DC32     SensorDetails

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable14:
   \   00000000   00000000           DC8      "",+0,+0,+0

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable16:
   \   00000000   ........           DC32     ButWindow

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable17:
   \   00000000   ........           DC32     SystemWindow

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable18:
   \   00000000   ........           DC32     SensorDetails
    467          

   Maximum stack usage in bytes:

     Function                       CSTACK
     --------                       ------
     TDUCalDataWin::ChangeText(int)   120
     TDUCalDataWin::ClearList(char const **)
                                       28
     TDUCalDataWin::CreatePage(GUI_HWIN, PRogramObjectBase *, PROIOComponent *, AnsiString)
                                      608
     TDUCalDataWin::ExecDialogBox(GUI_HWIN)
                                       24
     TDUCalDataWin::GetDialogHandles()
                                        8
     TDUCalDataWin::GetOwner()          0
     TDUCalDataWin::GetSnsPtr()         0
     TDUCalDataWin::InitSysWin()      320
     TDUCalDataWin::TDUCalDataWin()     8
     TDUCalDataWin::Update()           80
     TDUCalDataWin::cbSysWin(WM_MESSAGE *)
                                      128
     TDUCalDataWin::delete ~TDUCalDataWin(TDUCalDataWin *)
                                        8
     TDUCalDataWin::new TDUCalDataWin()
                                        4
     TDUCalDataWin::~TDUCalDataWin()
                                        8
     __sti__routine()                   8
     operator+(string const &, char const *)
                                       48


   Segment part sizes:

     Function/Label                 Bytes
     --------------                 -----
     operator+(string const &, char const *)
                                     160
     TDU_FONT_ST                      36
     TDUCalDataWin::TDUCalDataWin()   68
     TDUCalDataWin::~TDUCalDataWin()
                                      40
     ?<Constant {{2207, 0, 546}, {353, 0, 547}, {28
                                     576
     TDUCalDataWin::ExecDialogBox(GUI_HWIN)
                                     184
     TDUCalDataWin::CreatePage(GUI_HWIN, PRogramObjectBase *, PROIOComponent *, AnsiString)
                                     696
     TDUCalDataWin::Update()         520
     TDUCalDataWin::GetDialogHandles()
                                      48
     TDUCalDataWin::InitSysWin()    1056
     TDUCalDataWin::ClearList(char const **)
                                     136
     TDUCalDataWin::GetSnsPtr()        8
     TDUCalDataWin::GetOwner()         8
     TDUCalDataWin::cbSysWin(WM_MESSAGE *)
                                    3080
     TDUCalDataWin::ChangeText(int)  432
     ?<Constant "Gain">                8
     ?<Constant {{260, 0, (PRogramObjectBase *)0, 1
                                      64
     ?<Constant "">                   80
     ?<Constant {{361, 0, 983}, {2558, 0, 550}}>
                                      24
     ?<Constant {{260, 0, (PRogramObjectBase *)0, 1_1
                                      64
     ?<Constant "4">                   2
     ?<Constant {{361, 0, 1000}, {2558, 0, 1001}}>
                                      24
     ?<Constant "Calibration Data">   20
     ?<Constant "SnsInfo">             8
     ?<Constant "SerNum">              8
     ?<Constant {{260, 0, (PRogramObjectBase *)0, 1_2
                                      64
     ?<Constant "">_1                  1
     ?<Constant "Offset">              8
     ?<Constant "Table offset">       16
     ?<Constant "Value">               8
     ?<Constant "Level offset">       16
     ?<Constant {{256, 0, (PRogramObjectBase *)0, 1
                                     288
     ?<Constant "(">                   2
     ?<Constant ")">                   2
     ?<Constant {1220, 1221, 1222, 1223}>
                                      16
     ?<Constant {1224, 1225}>          8
     ?<Constant {{260, 0, (PRogramObjectBase *)0, 1_3
                                      64
     ?<Constant "20">                  3
     ?<Constant {&"4", &"20"}>         8
     ?<Constant "FRO">                 4
     ?<Constant "G1">                  3
     ?<Constant "G2">                  3
     ?<Constant "G3">                  3
     ?<Constant "NL1">                 4
     ?<Constant "NL2">                 4
     ?<Constant {&"FRO", &"G1", &"G2", &"G3", &"NL1
                                      24
     ?<Constant "0%">                  3
     ?<Constant "40%">                 4
     ?<Constant "60%">                 4
     ?<Constant {&"FRO"}>             12
     __sti__routine()                 40
     TDUCalDataWin::new TDUCalDataWin()
                                      32
     TDUCalDataWin::delete ~TDUCalDataWin(TDUCalDataWin *)
                                      32
     ??DataTable4                      4
     ??DataTable5                      4
     ??DataTable7                      4
     ??DataTable8                      4
     ??DataTable9                      4
     ??DataTable10                     4
     ??DataTable12                     4
     ??DataTable13                     4
     ??DataTable14                     4
     ??DataTable16                     4
     ??DataTable17                     4
     ??DataTable18                     4
      Others                         664

 
 7 236 bytes in segment CODE
 1 450 bytes in segment DATA_C
    36 bytes in segment DATA_Z
     4 bytes in segment DIFUNCT
    12 bytes in segment INITTAB
 
 6 432 bytes of CODE  memory (+ 820 bytes shared)
 1 450 bytes of CONST memory
    36 bytes of DATA  memory

Errors: none
Warnings: none
