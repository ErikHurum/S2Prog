##############################################################################
#                                                                            #
# IAR ARM ANSI C/C++ Compiler V4.42A/W32               14/Sep/2022  15:18:11 #
# Copyright 1999-2005 IAR Systems. All rights reserved.                      #
#                                                                            #
#    Cpu mode        =  interwork                                            #
#    Endian          =  little                                               #
#    Stack alignment =  4                                                    #
#    Source file     =  D:\S2Prog\TXU\src\TDUButWin.cpp                      #
#    Command line    =  D:\S2Prog\TXU\src\TDUButWin.cpp --fpu None -D        #
#                       OS_LIBMODE_SP -D CPU_S3C2410 -D OS_RAMVECT=0 -D      #
#                       OS_UART=-1 -D S2TXU -D USE_LZO=1 -D __ARM_LIBRARY__  #
#                       -D WATCHDOG=1 -D NETWORK=1 -lCN                      #
#                       D:\S2Prog\TXU\Debug\List\ -o                         #
#                       D:\S2Prog\TXU\Debug\Obj\ -s9 --debug --cpu_mode arm  #
#                       --endian little --cpu ARM920T --stack_align 4        #
#                       --interwork -e --enable_multibytes --eec++           #
#                       --dlib_config "C:\Program Files (x86)\IAR            #
#                       Systems\Embedded Workbench                           #
#                       4.0\arm\LIB\dl4tpainl8n.h" -I                        #
#                       D:\S2Prog\TXU\GUI\CORE\ -I D:\S2Prog\TXU\GUI\WM\ -I  #
#                       D:\S2Prog\TXU\GUI\WIDGET\ -I D:\S2Prog\TXU\CONFIG\   #
#                       -I D:\S2Prog\TXU\INC\ -I D:\S2Prog\TXU\..\SHARED\INC #
#                       \ -I D:\S2Prog\TXU\..\SHARED\SRC\ -I                 #
#                       D:\S2Prog\TXU\..\SHARED\LZO\minilzo.210\ -I          #
#                       D:\S2Prog\TXU\lwip-1.4.1\src\include\ -I             #
#                       D:\S2Prog\TXU\lwip-1.4.1\src\include\ipv4\ -I        #
#                       D:\S2Prog\TXU\lwip-1.4.1\src\ -I                     #
#                       D:\S2Prog\TXU\..\SHARED\Database\ -I                 #
#                       D:\S2Prog\TXU\src\ -I "C:\Program Files (x86)\IAR    #
#                       Systems\Embedded Workbench 4.0\arm\INC\"             #
#                       --inline_threshold=2                                 #
#    List file       =  D:\S2Prog\TXU\Debug\List\TDUButWin.lst               #
#    Object file     =  D:\S2Prog\TXU\Debug\Obj\TDUButWin.r79                #
#                                                                            #
#                                                                            #
##############################################################################

D:\S2Prog\TXU\src\TDUButWin.cpp
      1          #include "TDUIncludes.h"
      2          
      3          

   \                                 In segment CODE, align 4, keep-with-next
      4          TDUButWin::~TDUButWin(void)
      5          {
   \                     `?~TDUButWin`:
   \   00000000   00402DE9           PUSH     {LR}
      6          }
   \   00000004   ........           _BLF     `?~TDUBasicWin`,`?~TDUBasicWin??rA`
   \   00000008   0040BDE8           POP      {LR}
   \   0000000C   1EFF2FE1           BX       LR               ;; return
      7          

   \                                 In segment CODE, align 4, keep-with-next
      8          TDUButWin::TDUButWin(void)
   \                     ??TDUButWin:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   48D04DE2           SUB      SP,SP,#+72
   \   00000008   0040A0E1           MOV      R4,R0
      9          {
   \   0000000C   ........           _BLF     ??TDUBasicWin,??TDUBasicWin??rA
     10          	const GUIKey Words[] ={
     11          		{TDU_BUT_WIN        ,0,L_WORD237},
     12          		{TDU_BUTTON_ID_PW1  ,0,L_WORD237},
     13          		{TDU_BUTTON_ID_PW2  ,0,L_WORD237},
     14          		{TDU_BUTTON_ID_PW3  ,0,L_WORD237},
     15          		{TDU_BUTTON_ID_PW4  ,0,L_WORD237},
     16          		{TDU_BUTTON_ID_PW5  ,0,L_WORD237},
     17          	};
   \   00000010   F0109FE5           LDR      R1,??TDUButWin_1  ;; `?<Constant {{2151, 0, 237}, {2257, 0, 237}, {2`
   \   00000014   0D00A0E1           MOV      R0,SP
   \   00000018   4830A0E3           MOV      R3,#+72
   \                     ??TDUButWin_2:
   \   0000001C   043053E2           SUBS     R3,R3,#+4
   \   00000020   032091E7           LDR      R2,[R1, R3]
   \   00000024   032080E7           STR      R2,[R0, R3]
   \   00000028   FBFFFF1A           BNE      ??TDUButWin_2
     18          
     19          	BHsize = 24;
     20          	BWsize = 57;
     21          //	WinHandl = WM_CreateWindowAsChild(0,LCDYSize-BHsize,LCDXSize-MainWindow->BWsize,
     22          //										BHsize,MainWindow->WinHandl,WM_CF_SHOW,NULL,0);
     23          	WinHandl = WM_CreateWindow(0,LCDYSize-BHsize,LCDXSize-MainWindow->BWsize,
     24          							   BHsize,WM_CF_SHOW,NULL,0);
   \   0000002C   D8109FE5           LDR      R1,??TDUButWin_1+0x4  ;; MainWindow
   \   00000030   1800A0E3           MOV      R0,#+24
   \   00000034   340084E5           STR      R0,[R4, #+52]
   \   00000038   3900A0E3           MOV      R0,#+57
   \   0000003C   380084E5           STR      R0,[R4, #+56]
   \   00000040   0000A0E3           MOV      R0,#+0
   \   00000044   01002DE9           PUSH     {R0}
   \   00000048   01002DE9           PUSH     {R0}
   \   0000004C   0200A0E3           MOV      R0,#+2
   \   00000050   01002DE9           PUSH     {R0}
   \   00000054   B4009FE5           LDR      R0,??TDUButWin_1+0x8  ;; LCDXSize
   \   00000058   001091E5           LDR      R1,[R1, #+0]
   \   0000005C   000090E5           LDR      R0,[R0, #+0]
   \   00000060   381091E5           LDR      R1,[R1, #+56]
   \   00000064   343094E5           LDR      R3,[R4, #+52]
   \   00000068   012040E0           SUB      R2,R0,R1
   \   0000006C   A0009FE5           LDR      R0,??TDUButWin_1+0xC  ;; LCDYSize
     25          	WM_SetId(WinHandl,TDU_BUT_WIN);
     26          	for ( int i=0; i < NUMBER_OF_BUTTONS; i++ ) {
   \   00000070   0050A0E3           MOV      R5,#+0
   \   00000074   000090E5           LDR      R0,[R0, #+0]
   \   00000078   031040E0           SUB      R1,R0,R3
   \   0000007C   0000A0E3           MOV      R0,#+0
   \   00000080   ........           _BLF     WM_CreateWindow,??WM_CreateWindow??rA
   \   00000084   BA02C4E1           STRH     R0,[R4, #+42]
   \   00000088   6710A0E3           MOV      R1,#+103
   \   0000008C   801E81E3           ORR      R1,R1,#0x800
   \   00000090   ........           _BLF     WM_SetId,??WM_SetId??rA
   \   00000094   0CD08DE2           ADD      SP,SP,#+12
     27          		ButtonPW[i] = BUTTON_CreateAsChild(i*BWsize,0,BWsize    ,BHsize,WinHandl,TDU_BUTTON_ID_PW1+i,WM_CF_SHOW);
   \                     ??TDUButWin_3:
   \   00000098   0200A0E3           MOV      R0,#+2
   \   0000009C   01002DE9           PUSH     {R0}
   \   000000A0   D100A0E3           MOV      R0,#+209
   \   000000A4   800E80E3           ORR      R0,R0,#0x800
   \   000000A8   050080E0           ADD      R0,R0,R5
   \   000000AC   01002DE9           PUSH     {R0}
   \   000000B0   FA02D4E1           LDRSH    R0,[R4, #+42]
   \   000000B4   0010A0E3           MOV      R1,#+0
   \   000000B8   01002DE9           PUSH     {R0}
   \   000000BC   343094E5           LDR      R3,[R4, #+52]
   \   000000C0   382094E5           LDR      R2,[R4, #+56]
   \   000000C4   920500E0           MUL      R0,R2,R5
   \   000000C8   ........           _BLF     BUTTON_CreateAsChild,??BUTTON_CreateAsChild??rA
   \   000000CC   851084E0           ADD      R1,R4,R5, LSL #+1
   \   000000D0   BC03C1E1           STRH     R0,[R1, #+60]
     28          	}
   \   000000D4   015085E2           ADD      R5,R5,#+1
   \   000000D8   050055E3           CMP      R5,#+5
   \   000000DC   0CD08DE2           ADD      SP,SP,#+12
   \   000000E0   ECFFFFBA           BLT      ??TDUButWin_3
     29          	AddToSKeyList((GUIKey*)Words,NELEMENTS(Words));
   \   000000E4   0130A0E3           MOV      R3,#+1
   \   000000E8   0620A0E3           MOV      R2,#+6
   \   000000EC   0D10A0E1           MOV      R1,SP
   \   000000F0   0400A0E1           MOV      R0,R4
   \   000000F4   ........           _BLF     ??AddToSKeyList,??AddToSKeyList??rA
     30          }
   \   000000F8   0400A0E1           MOV      R0,R4
   \   000000FC   48D08DE2           ADD      SP,SP,#+72
   \   00000100   3040BDE8           POP      {R4,R5,LR}
   \   00000104   1EFF2FE1           BX       LR               ;; return
   \                     ??TDUButWin_1:
   \   00000108   ........           DC32     `?<Constant {{2151, 0, 237}, {2257, 0, 237}, {2`
   \   0000010C   ........           DC32     MainWindow
   \   00000110   ........           DC32     LCDXSize
   \   00000114   ........           DC32     LCDYSize
     31          

   \                                 In segment CODE, align 4, keep-with-next
     32          void TDUButWin::ChangeButtonText(int But1, int But2, int But3, int But4, int But5)
     33          {
   \                     ??ChangeButtonText:
   \   00000000   F0432DE9           PUSH     {R4-R9,LR}
     34          	ButWindow->ChangeSWord(TDU_BUTTON_ID_PW1+0,0,But1);
   \   00000004   ........           LDR      R9,??DataTable1  ;; ButWindow
   \   00000008   1C709DE5           LDR      R7,[SP, #+28]
   \   0000000C   20809DE5           LDR      R8,[SP, #+32]
   \   00000010   0040A0E1           MOV      R4,R0
   \   00000014   0000A0E3           MOV      R0,#+0
   \   00000018   01002DE9           PUSH     {R0}
   \   0000001C   000099E5           LDR      R0,[R9, #+0]
   \   00000020   0250A0E1           MOV      R5,R2
   \   00000024   0360A0E1           MOV      R6,R3
   \   00000028   0130A0E1           MOV      R3,R1
   \   0000002C   0020A0E3           MOV      R2,#+0
   \   00000030   D110A0E3           MOV      R1,#+209
   \   00000034   801E81E3           ORR      R1,R1,#0x800
   \   00000038   ........           _BLF     ??ChangeSWord,??ChangeSWord??rA
     35          	ButWindow->ChangeSWord(TDU_BUTTON_ID_PW1+1,0,But2);
   \   0000003C   0000A0E3           MOV      R0,#+0
   \   00000040   01002DE9           PUSH     {R0}
   \   00000044   0020A0E1           MOV      R2,R0
   \   00000048   000099E5           LDR      R0,[R9, #+0]
   \   0000004C   0530A0E1           MOV      R3,R5
   \   00000050   D210A0E3           MOV      R1,#+210
   \   00000054   801E81E3           ORR      R1,R1,#0x800
   \   00000058   ........           _BLF     ??ChangeSWord,??ChangeSWord??rA
     36          	ButWindow->ChangeSWord(TDU_BUTTON_ID_PW1+2,0,But3);
   \   0000005C   0000A0E3           MOV      R0,#+0
   \   00000060   01002DE9           PUSH     {R0}
   \   00000064   0020A0E1           MOV      R2,R0
   \   00000068   000099E5           LDR      R0,[R9, #+0]
   \   0000006C   0630A0E1           MOV      R3,R6
   \   00000070   D310A0E3           MOV      R1,#+211
   \   00000074   801E81E3           ORR      R1,R1,#0x800
   \   00000078   ........           _BLF     ??ChangeSWord,??ChangeSWord??rA
     37          	ButWindow->ChangeSWord(TDU_BUTTON_ID_PW1+3,0,But4);
   \   0000007C   0000A0E3           MOV      R0,#+0
   \   00000080   01002DE9           PUSH     {R0}
   \   00000084   0020A0E1           MOV      R2,R0
   \   00000088   000099E5           LDR      R0,[R9, #+0]
   \   0000008C   0730A0E1           MOV      R3,R7
   \   00000090   D410A0E3           MOV      R1,#+212
   \   00000094   801E81E3           ORR      R1,R1,#0x800
   \   00000098   ........           _BLF     ??ChangeSWord,??ChangeSWord??rA
     38          	ButWindow->ChangeSWord(TDU_BUTTON_ID_PW1+4,0,But5);
   \   0000009C   0000A0E3           MOV      R0,#+0
   \   000000A0   01002DE9           PUSH     {R0}
   \   000000A4   0020A0E1           MOV      R2,R0
   \   000000A8   000099E5           LDR      R0,[R9, #+0]
   \   000000AC   0830A0E1           MOV      R3,R8
   \   000000B0   D510A0E3           MOV      R1,#+213
   \   000000B4   801E81E3           ORR      R1,R1,#0x800
   \   000000B8   ........           _BLF     ??ChangeSWord,??ChangeSWord??rA
     39          	UpdateFields(true);
   \   000000BC   0110A0E3           MOV      R1,#+1
   \   000000C0   0400A0E1           MOV      R0,R4
   \   000000C4   ........           _BLF     ??UpdateFields,??UpdateFields??rA
     40          }
   \   000000C8   14D08DE2           ADD      SP,SP,#+20
   \   000000CC   F043BDE8           POP      {R4-R9,LR}
   \   000000D0   1EFF2FE1           BX       LR               ;; return
     41          

   \                                 In segment CODE, align 4, keep-with-next
     42          void TDUButWin::EnableButtons(bool Enable[NUMBER_OF_BUTTONS])
     43          {
   \                     ??EnableButtons:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
     44          	for ( int i=0; i < NUMBER_OF_BUTTONS; i++ ) {
   \   0000000C   0060A0E3           MOV      R6,#+0
     45          		if ( Enable[i] ) {
   \                     ??EnableButtons_2:
   \   00000010   0510D6E7           LDRB     R1,[R6, +R5]
   \   00000014   860084E0           ADD      R0,R4,R6, LSL #+1
   \   00000018   FC03D0E1           LDRSH    R0,[R0, #+60]
   \   0000001C   000051E3           CMP      R1,#+0
   \   00000020   0100000A           BEQ      ??EnableButtons_3
     46          			WM_EnableWindow( ButtonPW[i]);
   \   00000024   ........           _BLF     WM_EnableWindow,??WM_EnableWindow??rA
   \   00000028   000000EA           B        ??EnableButtons_4
     47          		} else {
     48          			WM_DisableWindow(ButtonPW[i]);
   \                     ??EnableButtons_3:
   \   0000002C   ........           _BLF     WM_DisableWindow,??WM_DisableWindow??rA
     49          		}
     50          	}
   \                     ??EnableButtons_4:
   \   00000030   016086E2           ADD      R6,R6,#+1
   \   00000034   050056E3           CMP      R6,#+5
   \   00000038   F4FFFFBA           BLT      ??EnableButtons_2
     51          }
   \   0000003C   7040BDE8           POP      {R4-R6,LR}
   \   00000040   1EFF2FE1           BX       LR               ;; return
     52          

   \                                 In segment CODE, align 4, keep-with-next
     53          void TDUButWin::EnableButtons(bool Enable1,bool Enable2,bool Enable3,bool Enable4,bool Enable5)
     54          {
   \                     ??EnableButtons_1:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   08D04DE2           SUB      SP,SP,#+8
   \   00000008   18C0DDE5           LDRB     R12,[SP, #+24]
   \   0000000C   0040A0E1           MOV      R4,R0
   \   00000010   1400DDE5           LDRB     R0,[SP, #+20]
     55          	bool Enable[NUMBER_OF_BUTTONS]={Enable1,Enable2,Enable3,Enable4,Enable5};
   \   00000014   0010CDE5           STRB     R1,[SP, #+0]
   \   00000018   0120CDE5           STRB     R2,[SP, #+1]
   \   0000001C   0230CDE5           STRB     R3,[SP, #+2]
   \   00000020   0300CDE5           STRB     R0,[SP, #+3]
   \   00000024   04C0CDE5           STRB     R12,[SP, #+4]
     56          	for ( int i=0; i < NUMBER_OF_BUTTONS; i++ ) {
   \   00000028   0050A0E3           MOV      R5,#+0
     57          		if ( Enable[i] ) {
   \                     ??EnableButtons_5:
   \   0000002C   0D10A0E1           MOV      R1,SP
   \   00000030   0110D5E7           LDRB     R1,[R5, +R1]
   \   00000034   850084E0           ADD      R0,R4,R5, LSL #+1
   \   00000038   FC03D0E1           LDRSH    R0,[R0, #+60]
   \   0000003C   000051E3           CMP      R1,#+0
   \   00000040   0100000A           BEQ      ??EnableButtons_6
     58          			WM_EnableWindow( ButtonPW[i]);
   \   00000044   ........           _BLF     WM_EnableWindow,??WM_EnableWindow??rA
   \   00000048   000000EA           B        ??EnableButtons_7
     59          		} else {
     60          			WM_DisableWindow(ButtonPW[i]);
   \                     ??EnableButtons_6:
   \   0000004C   ........           _BLF     WM_DisableWindow,??WM_DisableWindow??rA
     61          		}
     62          	}
   \                     ??EnableButtons_7:
   \   00000050   015085E2           ADD      R5,R5,#+1
   \   00000054   050055E3           CMP      R5,#+5
   \   00000058   F3FFFFBA           BLT      ??EnableButtons_5
     63          }
   \   0000005C   3340BDE8           POP      {R0,R1,R4,R5,LR}
   \   00000060   1EFF2FE1           BX       LR               ;; return
     64          

   \                                 In segment CODE, align 4, keep-with-next
     65          void TDUButWin::EnableButton(int Index, bool Enable)
     66          {
   \                     ??EnableButton:
   \   00000000   00402DE9           PUSH     {LR}
     67          	if ( Enable ) {
   \   00000004   810080E0           ADD      R0,R0,R1, LSL #+1
   \   00000008   FC03D0E1           LDRSH    R0,[R0, #+60]
   \   0000000C   000052E3           CMP      R2,#+0
   \   00000010   0100000A           BEQ      ??EnableButton_1
     68          		WM_EnableWindow( ButtonPW[Index]);
   \   00000014   ........           _BLF     WM_EnableWindow,??WM_EnableWindow??rA
   \   00000018   000000EA           B        ??EnableButton_2
     69          	} else {
     70          		WM_DisableWindow(ButtonPW[Index]);
   \                     ??EnableButton_1:
   \   0000001C   ........           _BLF     WM_DisableWindow,??WM_DisableWindow??rA
     71          	}
     72          }
   \                     ??EnableButton_2:
   \   00000020   0040BDE8           POP      {LR}
   \   00000024   1EFF2FE1           BX       LR               ;; return
     73          

   \                                 In segment CODE, align 4, keep-with-next
     74          void TDUButWin::cbEventHandler(WM_MESSAGE * pMsg)
     75          {
   \                     ??cbEventHandler:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0040A0E1           MOV      R4,R0
     76          
     77          	//WM_HWIN hWin = pMsg->hWin;
     78          	switch ( pMsg->MsgId ) {
   \   00000008   000094E5           LDR      R0,[R4, #+0]
   \   0000000C   010050E2           SUBS     R0,R0,#+1
   \   00000010   4500000A           BEQ      ??cbEventHandler_2
   \   00000014   0E0050E2           SUBS     R0,R0,#+14
   \   00000018   0200000A           BEQ      ??cbEventHandler_3
   \   0000001C   170050E2           SUBS     R0,R0,#+23
   \   00000020   0900000A           BEQ      ??cbEventHandler_4
   \   00000024   5B0000EA           B        ??cbEventHandler_5
     79          	case WM_PAINT:
     80          		GUI_SetBkColor(TDU_C_BACK_DEFAULT);
   \                     ??cbEventHandler_3:
   \   00000028   74019FE5           LDR      R0,??cbEventHandler_6  ;; 0xd3d3d3
   \   0000002C   ........           _BLF     GUI_SetBkColor,??GUI_SetBkColor??rA
     81          		GUI_Clear();
   \   00000030   ........           _BLF     GUI_Clear,??GUI_Clear??rA
     82          		GUI_SetColor(TDU_C_TEXT_DEFAULT);
   \   00000034   0000A0E3           MOV      R0,#+0
   \   00000038   ........           _BLF     GUI_SetColor,??GUI_SetColor??rA
     83          		ButWindow->UpdateLanguage();
   \   0000003C   ........           LDR      R0,??DataTable1  ;; ButWindow
   \   00000040   000090E5           LDR      R0,[R0, #+0]
   \   00000044   ........           _BLF     ??UpdateLanguage,??UpdateLanguage??rA
   \   00000048   370000EA           B        ??cbEventHandler_2
     84          		break;
     85          	case WM_NOTIFY_PARENT:
     86          		{
     87          			int NCode, Id;
     88          			Id    = WM_GetId(pMsg->hWinSrc);		/* Id of widget */
   \                     ??cbEventHandler_4:
   \   0000004C   F600D4E1           LDRSH    R0,[R4, #+6]
   \   00000050   ........           _BLF     WM_GetId,??WM_GetId??rA
     89          			NCode = pMsg->Data.v;								/* Notification code */
     90          			switch ( NCode ) {
   \   00000054   081094E5           LDR      R1,[R4, #+8]
   \   00000058   020051E3           CMP      R1,#+2
   \   0000005C   3200001A           BNE      ??cbEventHandler_2
     91          //			case WM_NOTIFICATION_CLICKED:   /* React only if pressed */
     92          //Must use release her if button shall be disabled on event
     93          			case WM_NOTIFICATION_RELEASED:		/* React only if released */
     94          				{
     95          					// Test that Dialog windows not active
     96          					if ( AppWinSetupDiaIsClosed ) {
   \   00000060   40119FE5           LDR      R1,??cbEventHandler_6+0x4  ;; AppWinSetupDiaIsClosed
   \   00000064   0010D1E5           LDRB     R1,[R1, #+0]
   \   00000068   000051E3           CMP      R1,#+0
   \   0000006C   2E00000A           BEQ      ??cbEventHandler_2
     97          						switch ( CurrentWinID ) {
   \   00000070   34119FE5           LDR      R1,??cbEventHandler_6+0x8  ;; CurrentWinID
   \   00000074   001091E5           LDR      R1,[R1, #+0]
   \   00000078   691041E2           SUB      R1,R1,#+105
   \   0000007C   801E41E2           SUB      R1,R1,#+2048
   \   00000080   3C0051E3           CMP      R1,#+60
   \   00000084   2800008A           BHI      ??cbEventHandler_2
   \   00000088   012F8FE2           ADR      R2,??cbEventHandler_1
   \   0000008C   0120D2E7           LDRB     R2,[R2, R1]
   \   00000090   02F18FE0           ADD      PC,PC,R2, LSL #+2
   \                     ??cbEventHandler_1:
   \   00000094   0F142525           DC8      +15,+20,+37,+37
   \   00000098   2525191D           DC8      +37,+37,+25,+29
   \   0000009C   27292B2D           DC8      +39,+41,+43,+45
   \   000000A0   2F253439           DC8      +47,+37,+52,+57
   \   000000A4   1B252525           DC8      +27,+37,+37,+37
   \   000000A8   25252525           DC8      +37,+37,+37,+37
   \   000000AC   25252525           DC8      +37,+37,+37,+37
   \   000000B0   25252525           DC8      +37,+37,+37,+37
   \   000000B4   25252525           DC8      +37,+37,+37,+37
   \   000000B8   25252525           DC8      +37,+37,+37,+37
   \   000000BC   25252525           DC8      +37,+37,+37,+37
   \   000000C0   25252525           DC8      +37,+37,+37,+37
   \   000000C4   25252525           DC8      +37,+37,+37,+37
   \   000000C8   25252525           DC8      +37,+37,+37,+37
   \   000000CC   25252525           DC8      +37,+37,+37,+37
   \   000000D0   3B000000           DC8      +59,+0,+0,+0
     98          						case TDU_MAIN_WIN:
     99          						case TDU_HEAD_WIN:
    100          						case TDU_BUT_WIN:
    101          						case TDU_PRESENT_WIN:
    102          							break;
    103          						case TDU_SYSTEM_WIN:
    104          							SystemWindow->ButtonClicked(Id);
   \                     ??cbEventHandler_7:
   \   000000D4   0010A0E1           MOV      R1,R0
   \   000000D8   D0009FE5           LDR      R0,??cbEventHandler_6+0xC  ;; SystemWindow
   \   000000DC   000090E5           LDR      R0,[R0, #+0]
   \   000000E0   ........           _BLF     ??ButtonClicked,??ButtonClicked??rA
   \   000000E4   100000EA           B        ??cbEventHandler_2
    105          							break;
    106          						case TDU_ALARM_WIN:
    107          							AlarmWindow->ButtonClicked(Id);
   \                     ??cbEventHandler_8:
   \   000000E8   0010A0E1           MOV      R1,R0
   \   000000EC   C0009FE5           LDR      R0,??cbEventHandler_6+0x10  ;; AlarmWindow
   \   000000F0   000090E5           LDR      R0,[R0, #+0]
   \   000000F4   ........           _BLF     ??ButtonClicked_1,??ButtonClicked??rA_1
   \   000000F8   0B0000EA           B        ??cbEventHandler_2
    108          							break;
    109          						case TDU_CARGO_WIN:
    110          							CargoWindow->ButtonClicked(Id);
   \                     ??cbEventHandler_9:
   \   000000FC   B4109FE5           LDR      R1,??cbEventHandler_6+0x14  ;; CargoWindow
   \                     ??cbEventHandler_10:
   \   00000100   020000EA           B        ??cbEventHandler_11
    111          							break;
    112          						case TDU_TANKFARM_WIN:
    113          							TankFarmWindow->ButtonClicked(Id);
   \                     ??cbEventHandler_12:
   \   00000104   B0109FE5           LDR      R1,??cbEventHandler_6+0x18  ;; TankFarmWindow
   \   00000108   000000EA           B        ??cbEventHandler_11
    114          							break;
    115          						case TDU_BALLAST_WIN:
    116          							BallastWindow->ButtonClicked(Id);
   \                     ??cbEventHandler_13:
   \   0000010C   AC109FE5           LDR      R1,??cbEventHandler_6+0x1C  ;; BallastWindow
   \                     ??cbEventHandler_11:
   \   00000110   002091E5           LDR      R2,[R1, #+0]
   \   00000114   0010A0E1           MOV      R1,R0
   \   00000118   0200A0E1           MOV      R0,R2
   \   0000011C   442092E5           LDR      R2,[R2, #+68]
   \   00000120   0C2092E5           LDR      R2,[R2, #+12]
   \   00000124   0FE0A0E1           MOV      LR,PC
   \   00000128   12FF2FE1           BX       R2
   \                     ??cbEventHandler_2:
   \   0000012C   1040BDE8           POP      {R4,LR}
   \   00000130   1EFF2FE1           BX       LR
    117          							break;
    118          						case TDU_SERVICE_WIN:
    119          							ServiceWindow->ButtonClicked(Id);
   \                     ??cbEventHandler_14:
   \   00000134   88109FE5           LDR      R1,??cbEventHandler_6+0x20  ;; ServiceWindow
   \   00000138   F4FFFFEA           B        ??cbEventHandler_11
    120          							break;
    121          						case TDU_TANKPRESS_WIN:
    122          							TankPressWindow->ButtonClicked(Id);
   \                     ??cbEventHandler_15:
   \   0000013C   84109FE5           LDR      R1,??cbEventHandler_6+0x24  ;; TankPressWindow
   \   00000140   F2FFFFEA           B        ??cbEventHandler_11
    123          							break;
    124          						case TDU_LINEPRESS_WIN:
    125          							LinePressWindow->ButtonClicked(Id);
   \                     ??cbEventHandler_16:
   \   00000144   80109FE5           LDR      R1,??cbEventHandler_6+0x28  ;; LinePressWindow
   \   00000148   F0FFFFEA           B        ??cbEventHandler_11
    126          							break;
    127          						case TDU_TEMP_WIN:
    128          							TempWindow->ButtonClicked(Id);
   \                     ??cbEventHandler_17:
   \   0000014C   7C109FE5           LDR      R1,??cbEventHandler_6+0x2C  ;; TempWindow
   \   00000150   EEFFFFEA           B        ??cbEventHandler_11
    129          							break;
    130          						case TDU_LEVELSWITCH_WIN:
    131          							LevelSwitchWindow->ButtonClicked(Id);
   \                     ??cbEventHandler_18:
   \   00000154   0010A0E1           MOV      R1,R0
   \   00000158   74009FE5           LDR      R0,??cbEventHandler_6+0x30  ;; LevelSwitchWindow
   \   0000015C   000090E5           LDR      R0,[R0, #+0]
   \   00000160   ........           _BLF     ??ButtonClicked_2,??ButtonClicked??rA_2
   \   00000164   F0FFFFEA           B        ??cbEventHandler_2
    132          							break;
    133          						case TDU_WATERINGR_WIN:
    134          							WaterIngrWindow->ButtonClicked(Id);
   \                     ??cbEventHandler_19:
   \   00000168   0010A0E1           MOV      R1,R0
   \   0000016C   64009FE5           LDR      R0,??cbEventHandler_6+0x34  ;; WaterIngrWindow
   \   00000170   000090E5           LDR      R0,[R0, #+0]
   \   00000174   ........           _BLF     ??ButtonClicked_3,??ButtonClicked??rA_3
   \   00000178   EBFFFFEA           B        ??cbEventHandler_2
    135          							break;
    136          						case TDU_VOIDSPACE_WIN:
    137          							VoidSpaceWindow->ButtonClicked(Id);
   \                     ??cbEventHandler_20:
   \   0000017C   58109FE5           LDR      R1,??cbEventHandler_6+0x38  ;; VoidSpaceWindow
   \   00000180   E2FFFFEA           B        ??cbEventHandler_11
    138          							break;
    139          						case TDU_TANK_CLEANING_WIN:
    140          							TankCleaningWindow->ButtonClicked(Id);
   \                     ??cbEventHandler_21:
   \   00000184   0010A0E1           MOV      R1,R0
   \   00000188   50009FE5           LDR      R0,??cbEventHandler_6+0x3C  ;; TankCleaningWindow
   \   0000018C   000090E5           LDR      R0,[R0, #+0]
   \   00000190   ........           _BLF     ??ButtonClicked_4,??ButtonClicked??rA_4
   \   00000194   E4FFFFEA           B        ??cbEventHandler_2
    141          							break;
    142          						default:
    143          							break;
    144          						}
    145          					}
    146          				}
    147          				break;
    148          			}
    149          		}
    150          		break;
    151          	case WM_CREATE:
    152          		break;
    153          	default:
    154          		WM_DefaultProc(pMsg);
   \                     ??cbEventHandler_5:
   \   00000198   0400A0E1           MOV      R0,R4
   \   0000019C   ........           _BLF     WM_DefaultProc,??WM_DefaultProc??rA
    155          	}
    156          }
   \                     ??cbEventHandler_22:
   \   000001A0   E1FFFFEA           B        ??cbEventHandler_2
   \                     ??cbEventHandler_6:
   \   000001A4   D3D3D300           DC32     0xd3d3d3
   \   000001A8   ........           DC32     AppWinSetupDiaIsClosed
   \   000001AC   ........           DC32     CurrentWinID
   \   000001B0   ........           DC32     SystemWindow
   \   000001B4   ........           DC32     AlarmWindow
   \   000001B8   ........           DC32     CargoWindow
   \   000001BC   ........           DC32     TankFarmWindow
   \   000001C0   ........           DC32     BallastWindow
   \   000001C4   ........           DC32     ServiceWindow
   \   000001C8   ........           DC32     TankPressWindow
   \   000001CC   ........           DC32     LinePressWindow
   \   000001D0   ........           DC32     TempWindow
   \   000001D4   ........           DC32     LevelSwitchWindow
   \   000001D8   ........           DC32     WaterIngrWindow
   \   000001DC   ........           DC32     VoidSpaceWindow
   \   000001E0   ........           DC32     TankCleaningWindow

   \                                 In segment DIFUNCT, align 4, keep-with-next, root
   \   00000000                      REQUIRE ?call_ctors
   \   00000000   ........           DC32    ??__sti__routine

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant {{2151, 0, 237}, {2257, 0, 237}, {2`:
   \   00000000   670800000000       DC32 2151, 0, 237, 2257, 0, 237, 2258, 0, 237, 2259, 0, 237, 2260, 0
   \              0000ED000000
   \              D10800000000
   \              0000ED000000
   \              D20800000000
   \              0000ED000000
   \              D30800000000
   \              0000ED000000
   \              D40800000000
   \              0000        
   \   00000038   ED000000D508       DC32 237, 2261, 0, 237
   \              000000000000
   \              ED000000    

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs TDUButWin &TDUButWin::new TDUButWin()
   \                     `??new TDUButWin`:
   \   00000000   00402DE9           PUSH     {LR}
   \   00000004   4800A0E3           MOV      R0,#+72
   \   00000008   ........           _BLF     `??operator new`,`??operator new??rA`
   \   0000000C   000050E3           CMP      R0,#+0
   \   00000010   0000000A           BEQ      `??new TDUButWin_1`
   \   00000014   ........           BL       ??TDUButWin
   \                     `??new TDUButWin_1`:
   \   00000018   0040BDE8           POP      {LR}
   \   0000001C   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void TDUButWin::delete ~TDUButWin(TDUButWin *)
   \                     `??delete ~TDUButWin`:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0040B0E1           MOVS     R4,R0
   \   00000008   0200000A           BEQ      `??delete ~TDUButWin_1`
   \   0000000C   ........           _BLF     `?~TDUBasicWin`,`?~TDUBasicWin??rA`
   \   00000010   0400A0E1           MOV      R0,R4
   \   00000014   ........           _BLF     `??operator delete`,`??operator delete??rA`
   \                     `??delete ~TDUButWin_1`:
   \   00000018   1040BDE8           POP      {R4,LR}
   \   0000001C   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   static __??Code32?? __intrinsic __code __interwork __atpcs void __sti__routine()
   \                     ??__sti__routine:
   \   00000000   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable1:
   \   00000000   ........           DC32     ButWindow
    157          
    158          
    159          
    160          
    161          
    162          
    163          
    164          
    165          

   Maximum stack usage in bytes:

     Function                       CSTACK
     --------                       ------
     TDUButWin::ChangeButtonText(int, int, int, int, int)
                                       48
     TDUButWin::EnableButton(int, bool)
                                        4
     TDUButWin::EnableButtons(bool *)
                                       16
     TDUButWin::EnableButtons(bool, bool, bool, bool, bool)
                                       20
     TDUButWin::TDUButWin()            96
     TDUButWin::cbEventHandler(WM_MESSAGE *)
                                        8
     TDUButWin::delete ~TDUButWin(TDUButWin *)
                                        8
     TDUButWin::new TDUButWin()         4
     TDUButWin::~TDUButWin()            4
     __sti__routine()                   0


   Segment part sizes:

     Function/Label                 Bytes
     --------------                 -----
     TDUButWin::~TDUButWin()          16
     TDUButWin::TDUButWin()          280
     TDUButWin::ChangeButtonText(int, int, int, int, int)
                                     212
     TDUButWin::EnableButtons(bool *)
                                      68
     TDUButWin::EnableButtons(bool, bool, bool, bool, bool)
                                     100
     TDUButWin::EnableButton(int, bool)
                                      40
     TDUButWin::cbEventHandler(WM_MESSAGE *)
                                     484
     ?<Constant {{2151, 0, 237}, {2257, 0, 237}, {2
                                      72
     TDUButWin::new TDUButWin()       32
     TDUButWin::delete ~TDUButWin(TDUButWin *)
                                      32
     __sti__routine()                  4
     ??DataTable1                      4
      Others                         320

 
 1 588 bytes in segment CODE
    72 bytes in segment DATA_C
     4 bytes in segment DIFUNCT
 
 1 276 bytes of CODE  memory (+ 316 bytes shared)
    72 bytes of CONST memory

Errors: none
Warnings: none
