##############################################################################
#                                                                            #
# IAR ARM ANSI C/C++ Compiler V4.42A/W32               14/Sep/2022  15:13:55 #
# Copyright 1999-2005 IAR Systems. All rights reserved.                      #
#                                                                            #
#    Cpu mode        =  interwork                                            #
#    Endian          =  little                                               #
#    Stack alignment =  4                                                    #
#    Source file     =  D:\S2Prog\Shared\BMPfiles\LTankOverfill.c            #
#    Command line    =  D:\S2Prog\Shared\BMPfiles\LTankOverfill.c --fpu      #
#                       None -D OS_LIBMODE_SP -D CPU_S3C2410 -D              #
#                       OS_RAMVECT=0 -D OS_UART=-1 -D S2TXU -D USE_LZO=1 -D  #
#                       __ARM_LIBRARY__ -D WATCHDOG=1 -D NETWORK=1 -lCN      #
#                       D:\S2Prog\TXU\Debug\List\ -o                         #
#                       D:\S2Prog\TXU\Debug\Obj\ -z9 --debug --cpu_mode arm  #
#                       --endian little --cpu ARM920T --stack_align 4        #
#                       --interwork -e --enable_multibytes --dlib_config     #
#                       "C:\Program Files (x86)\IAR Systems\Embedded         #
#                       Workbench 4.0\arm\LIB\dl4tpainl8n.h" -I              #
#                       D:\S2Prog\TXU\GUI\CORE\ -I D:\S2Prog\TXU\GUI\WM\ -I  #
#                       D:\S2Prog\TXU\GUI\WIDGET\ -I D:\S2Prog\TXU\CONFIG\   #
#                       -I D:\S2Prog\TXU\INC\ -I D:\S2Prog\TXU\..\SHARED\INC #
#                       \ -I D:\S2Prog\TXU\..\SHARED\SRC\ -I                 #
#                       D:\S2Prog\TXU\..\SHARED\LZO\minilzo.210\ -I          #
#                       D:\S2Prog\TXU\lwip-1.4.1\src\include\ -I             #
#                       D:\S2Prog\TXU\lwip-1.4.1\src\include\ipv4\ -I        #
#                       D:\S2Prog\TXU\lwip-1.4.1\src\ -I                     #
#                       D:\S2Prog\TXU\..\SHARED\Database\ -I                 #
#                       D:\S2Prog\TXU\src\ -I "C:\Program Files (x86)\IAR    #
#                       Systems\Embedded Workbench 4.0\arm\INC\"             #
#                       --inline_threshold=2                                 #
#    List file       =  D:\S2Prog\TXU\Debug\List\LTankOverfill.lst           #
#    Object file     =  D:\S2Prog\TXU\Debug\Obj\LTankOverfill.r79            #
#                                                                            #
#                                                                            #
##############################################################################

D:\S2Prog\Shared\BMPfiles\LTankOverfill.c
      1          /*********************************************************************
      2          *                SEGGER MICROCONTROLLER SYSTEME GmbH                 *
      3          *        Solutions for real time microcontroller applications        *
      4          *                           www.segger.com                           *
      5          **********************************************************************
      6          *
      7          * C-file generated by
      8          *
      9          *        Bitmap converter for emWin V5.02c.
     10          *        Compiled Jul 28 2009, 16:19:51
     11          *        (C) 1998 - 2005 Segger Microcontroller Systeme GmbH
     12          *
     13          **********************************************************************
     14          *
     15          * Source file: LTankOverfill
     16          * Dimensions:  32 * 32
     17          * NumColors:   16
     18          *
     19          **********************************************************************
     20          */
     21          
     22          #include <stdlib.h>
     23          
     24          #include "GUI.h"
     25          
     26          #ifndef GUI_CONST_STORAGE
     27            #define GUI_CONST_STORAGE const
     28          #endif
     29          
     30          /*   Palette
     31          The following are the entries of the palette table.
     32          Every entry is a 32-bit value (of which 24 bits are actually used)
     33          the lower   8 bits represent the Red component,
     34          the middle  8 bits represent the Green component,
     35          the highest 8 bits (of the 24 bits used) represent the Blue component
     36          as follows:   0xBBGGRR
     37          */
     38          

   \                                 In segment DATA_C, align 4, align-sorted
     39          static GUI_CONST_STORAGE GUI_COLOR ColorsLTankOverfill[] = {
   \                     ColorsLTankOverfill:
   \   00000000   FF00FF008000       DC32 16711935, 128, 32768, 32896, 8388608, 8388736, 8421376, 12632256
   \              000000800000
   \              808000000000
   \              800080008000
   \              00808000C0C0
   \              C000        
   \   00000020   80808000FF00       DC32 8421504, 255, 65280, 65535, 16711680, 16776960, 0, 16777215
   \              000000FF0000
   \              FFFF00000000
   \              FF0000FFFF00
   \              00000000FFFF
   \              FF00        
     40               0xFF00FF,0x000080,0x008000,0x008080
     41              ,0x800000,0x800080,0x808000,0xC0C0C0
     42              ,0x808080,0x0000FF,0x00FF00,0x00FFFF
     43              ,0xFF0000,0xFFFF00,0x000000,0xFFFFFF
     44          };
     45          

   \                                 In segment DATA_C, align 4, align-sorted
     46          static GUI_CONST_STORAGE GUI_LOGPALETTE PalLTankOverfill = {
   \                     PalLTankOverfill:
   \   00000000   10000000           DC32 16
   \   00000004   01000000           DC8 1, 0, 0, 0
   \   00000008   ........           DC32 ColorsLTankOverfill
     47            16,	/* number of entries */
     48            1, 	/* Has transparency */
     49            &ColorsLTankOverfill[0]
     50          };
     51          

   \                                 In segment DATA_C, align 4, align-sorted
     52          static GUI_CONST_STORAGE unsigned char acLTankOverfill[] = {
   \                     acLTankOverfill:
   \   00000000   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              0000000000  
   \   00000017   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 14, 238, 0, 0, 0, 0
   \              000000000000
   \              000000000EEE
   \              00000000    
   \   0000002D   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 14, 238, 14, 238, 0, 0, 0, 0, 0, 0, 0, 0
   \              0000000EEE0E
   \              EE0000000000
   \              000000      
   \   00000042   000000EEEFFF       DC8 0, 0, 0, 238, 239, 255, 255, 255, 238, 224, 0, 0, 0, 0, 0, 0, 0, 0
   \              FFFFEEE00000
   \              000000000000
   \   00000054   EEFFFFFFFFFF       DC8 238, 255, 255, 255, 255, 255, 255, 254, 224, 0, 0, 0, 0, 0, 238
   \              FFFEE0000000
   \              0000EE      
   \   00000063   EEFFFFFFFFFF       DC8 238, 255, 255, 255, 255, 255, 255, 255, 255, 254, 238, 224, 0, 0, 0
   \              FFFFFFFEEEE0
   \              000000      
   \   00000072   EFFFFFFFFFFF       DC8 239, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 224, 0
   \              FFFFFFFFFFFF
   \              E000        
   \   00000080   0000E9999999       DC8 0, 0, 233, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153
   \              999999999999
   \              9999        
   \   0000008E   E0000000E999       DC8 224, 0, 0, 0, 233, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153
   \              999999999999
   \              999999      
   \   0000009D   99E0000000E9       DC8 153, 224, 0, 0, 0, 233, 153, 153, 153, 153, 153, 153, 153, 153, 153
   \              999999999999
   \              999999      
   \   000000AC   9999E0000000       DC8 153, 153, 224, 0, 0, 0, 233, 153, 153, 153, 153, 153, 153, 153, 153
   \              E99999999999
   \              999999      
   \   000000BB   999999E00000       DC8 153, 153, 153, 224, 0, 0, 0, 236, 204, 204, 204, 204, 204, 204, 204
   \              00ECCCCCCCCC
   \              CCCCCC      
   \   000000CA   CCCCCCCCE000       DC8 204, 204, 204, 204, 224, 0, 0, 0, 236, 204, 204, 204, 204, 204, 204
   \              0000ECCCCCCC
   \              CCCCCC      
   \   000000D9   CCCCCCCCCCE0       DC8 204, 204, 204, 204, 204, 224, 0, 0, 0, 236, 204, 204, 204, 204, 204
   \              000000ECCCCC
   \              CCCCCC      
   \   000000E8   CCCCCCCCCCCC       DC8 204, 204, 204, 204, 204, 204, 224, 0, 0, 0, 236, 204, 204, 204, 204
   \              E0000000ECCC
   \              CCCCCC      
   \   000000F7   CCCCCCCCCCCC       DC8 204, 204, 204, 204, 204, 204, 204, 224, 0, 0, 0, 236, 204, 204, 204
   \              CCE0000000EC
   \              CCCCCC      
   \   00000106   CCCCCCCCCCCC       DC8 204, 204, 204, 204, 204, 204, 204, 204, 224, 0, 0, 0, 236, 204, 204
   \              CCCCE0000000
   \              ECCCCC      
   \   00000115   CCCCCCCCCCCC       DC8 204, 204, 204, 204, 204, 204, 204, 204, 204, 224, 0, 0, 0, 236, 204
   \              CCCCCCE00000
   \              00ECCC      
   \   00000124   CCCCCCCCCCCC       DC8 204, 204, 204, 204, 204, 204, 204, 204, 204, 204, 224, 0, 0, 0, 236
   \              CCCCCCCCE000
   \              0000EC      
   \   00000133   CCCCCCCCCCCC       DC8 204, 204, 204, 204, 204, 204, 204, 204, 204, 204, 204, 224, 0, 0, 0
   \              CCCCCCCCCCE0
   \              000000      
   \   00000142   ECCCCCCCCCCC       DC8 236, 204, 204, 204, 204, 204, 204, 204, 204, 204, 204, 204, 224, 0
   \              CCCCCCCCCCCC
   \              E000        
   \   00000150   0000ECCCCCCC       DC8 0, 0, 236, 204, 204, 204, 204, 204, 204, 204, 204, 204, 204, 204
   \              CCCCCCCCCCCC
   \              CCCC        
   \   0000015E   E0000000ECCC       DC8 224, 0, 0, 0, 236, 204, 204, 204, 204, 204, 204, 204, 204, 204, 204
   \              CCCCCCCCCCCC
   \              CCCCCC      
   \   0000016D   CCE0000000EC       DC8 204, 224, 0, 0, 0, 236, 204, 204, 204, 204, 204, 204, 204, 204, 204
   \              CCCCCCCCCCCC
   \              CCCCCC      
   \   0000017C   CCCCE0000000       DC8 204, 204, 224, 0, 0, 0, 236, 204, 204, 204, 204, 204, 204, 204, 204
   \              ECCCCCCCCCCC
   \              CCCCCC      
   \   0000018B   CCCCCCE00000       DC8 204, 204, 204, 224, 0, 0, 0, 236, 204, 204, 204, 204, 204, 204, 204
   \              00ECCCCCCCCC
   \              CCCCCC      
   \   0000019A   CCCCCCCCE000       DC8 204, 204, 204, 204, 224, 0, 0, 0, 238, 238, 238, 238, 238, 238, 238
   \              0000EEEEEEEE
   \              EEEEEE      
   \   000001A9   EEEEEEEEEEE0       DC8 238, 238, 238, 238, 238, 224, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              00          
   \   000001BC   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              0000000000  
   \   000001D3   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              0000000000  
   \   000001EA   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              00000000    
     53            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     54            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     55            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0E, 0xEE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     56            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0E, 0xEE, 0x0E, 0xEE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     57            0x00, 0x00, 0x00, 0x00, 0x00, 0xEE, 0xEF, 0xFF, 0xFF, 0xFF, 0xEE, 0xE0, 0x00, 0x00, 0x00, 0x00,
     58            0x00, 0x00, 0x00, 0x00, 0xEE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFE, 0xE0, 0x00, 0x00, 0x00,
     59            0x00, 0x00, 0xEE, 0xEE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFE, 0xEE, 0xE0, 0x00,
     60            0x00, 0x00, 0xEF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xE0, 0x00,
     61            0x00, 0x00, 0xE9, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0xE0, 0x00,
     62            0x00, 0x00, 0xE9, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0xE0, 0x00,
     63            0x00, 0x00, 0xE9, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0xE0, 0x00,
     64            0x00, 0x00, 0xE9, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0xE0, 0x00,
     65            0x00, 0x00, 0xEC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xE0, 0x00,
     66            0x00, 0x00, 0xEC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xE0, 0x00,
     67            0x00, 0x00, 0xEC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xE0, 0x00,
     68            0x00, 0x00, 0xEC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xE0, 0x00,
     69            0x00, 0x00, 0xEC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xE0, 0x00,
     70            0x00, 0x00, 0xEC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xE0, 0x00,
     71            0x00, 0x00, 0xEC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xE0, 0x00,
     72            0x00, 0x00, 0xEC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xE0, 0x00,
     73            0x00, 0x00, 0xEC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xE0, 0x00,
     74            0x00, 0x00, 0xEC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xE0, 0x00,
     75            0x00, 0x00, 0xEC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xE0, 0x00,
     76            0x00, 0x00, 0xEC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xE0, 0x00,
     77            0x00, 0x00, 0xEC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xE0, 0x00,
     78            0x00, 0x00, 0xEC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xE0, 0x00,
     79            0x00, 0x00, 0xEE, 0xEE, 0xEE, 0xEE, 0xEE, 0xEE, 0xEE, 0xEE, 0xEE, 0xEE, 0xEE, 0xEE, 0xE0, 0x00,
     80            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     81            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     82            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     83            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     84            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
     85          };
     86          

   \                                 In segment DATA_C, align 4, align-sorted
     87          GUI_CONST_STORAGE GUI_BITMAP bmLTankOverfill = {
   \                     bmLTankOverfill:
   \   00000000   200020001000       DC16 32, 32, 16, 4
   \              0400        
   \   00000008   ............       DC32 acLTankOverfill, PalLTankOverfill
   \              ....        
   \   00000010   00000000           DC8 0, 0, 0, 0
     88            32, /* XSize */
     89            32, /* YSize */
     90            16, /* BytesPerLine */
     91            4, /* BitsPerPixel */
     92            acLTankOverfill,  /* Pointer to picture data (indices) */
     93            &PalLTankOverfill  /* Pointer to palette */
     94          };
     95          
     96          /* *** End of file *** */


   Segment part sizes:

     Function/Label      Bytes
     --------------      -----
     ColorsLTankOverfill   64
     PalLTankOverfill      12
     acLTankOverfill      512
     bmLTankOverfill       20

 
 608 bytes in segment DATA_C
 
 608 bytes of CONST memory

Errors: none
Warnings: none
