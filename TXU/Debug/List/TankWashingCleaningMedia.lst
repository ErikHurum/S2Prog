##############################################################################
#                                                                            #
# IAR ARM ANSI C/C++ Compiler V4.42A/W32               14/Sep/2022  15:20:00 #
# Copyright 1999-2005 IAR Systems. All rights reserved.                      #
#                                                                            #
#    Cpu mode        =  interwork                                            #
#    Endian          =  little                                               #
#    Stack alignment =  4                                                    #
#    Source file     =  D:\S2Prog\Shared\Src\TankWashingCleaningMedia.cpp    #
#    Command line    =  D:\S2Prog\Shared\Src\TankWashingCleaningMedia.cpp    #
#                       --fpu None -D OS_LIBMODE_SP -D CPU_S3C2410 -D        #
#                       OS_RAMVECT=0 -D OS_UART=-1 -D S2TXU -D USE_LZO=1 -D  #
#                       __ARM_LIBRARY__ -D WATCHDOG=1 -D NETWORK=1 -lCN      #
#                       D:\S2Prog\TXU\Debug\List\ -o                         #
#                       D:\S2Prog\TXU\Debug\Obj\ -z9 --debug --cpu_mode arm  #
#                       --endian little --cpu ARM920T --stack_align 4        #
#                       --interwork -e --enable_multibytes --eec++           #
#                       --dlib_config "C:\Program Files (x86)\IAR            #
#                       Systems\Embedded Workbench                           #
#                       4.0\arm\LIB\dl4tpainl8n.h" -I                        #
#                       D:\S2Prog\TXU\GUI\CORE\ -I D:\S2Prog\TXU\GUI\WM\ -I  #
#                       D:\S2Prog\TXU\GUI\WIDGET\ -I D:\S2Prog\TXU\CONFIG\   #
#                       -I D:\S2Prog\TXU\INC\ -I D:\S2Prog\TXU\..\SHARED\INC #
#                       \ -I D:\S2Prog\TXU\..\SHARED\SRC\ -I                 #
#                       D:\S2Prog\TXU\..\SHARED\LZO\minilzo.210\ -I          #
#                       D:\S2Prog\TXU\lwip-1.4.1\src\include\ -I             #
#                       D:\S2Prog\TXU\lwip-1.4.1\src\include\ipv4\ -I        #
#                       D:\S2Prog\TXU\lwip-1.4.1\src\ -I                     #
#                       D:\S2Prog\TXU\..\SHARED\Database\ -I                 #
#                       D:\S2Prog\TXU\src\ -I "C:\Program Files (x86)\IAR    #
#                       Systems\Embedded Workbench 4.0\arm\INC\"             #
#                       --inline_threshold=2                                 #
#    List file       =  D:\S2Prog\TXU\Debug\List\TankWashingCleaningMedia.ls #
#                       t                                                    #
#    Object file     =  D:\S2Prog\TXU\Debug\Obj\TankWashingCleaningMedia.r79 #
#                                                                            #
#                                                                            #
##############################################################################

D:\S2Prog\Shared\Src\TankWashingCleaningMedia.cpp
      1          //---------------------------------------------------------------------------
      2          
      3          #pragma hdrstop
      4          
      5          #include "TankWashingCleaningMedia.h"
      6          //---------------------------------------------------------------------------
      7          #ifdef ANWIN
      8          #pragma package(smart_init)
      9          #endif
     10          

   \                                 In segment CODE, align 4, keep-with-next
     11          TankWashingCleaningMedia::TankWashingCleaningMedia()
   \                     ??TankWashingCleaningMedia:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0040A0E1           MOV      R4,R0
     12          {
   \   00000008   040084E2           ADD      R0,R4,#+4
   \   0000000C   ........           _BLF     ??AnsiString,??AnsiString??rA
     13              Id = twcm_type_unknown;
   \   00000010   0100A0E3           MOV      R0,#+1
   \   00000014   000084E5           STR      R0,[R4, #+0]
     14          }
   \   00000018   0400A0E1           MOV      R0,R4
   \   0000001C   1040BDE8           POP      {R4,LR}
   \   00000020   1EFF2FE1           BX       LR               ;; return
     15          
     16          

   \                                 In segment CODE, align 4, keep-with-next
     17          void TankWashingCleaningMedia::ToString(AnsiString& dest)
     18          {
   \                     ??ToString:
   \   00000000   00402DE9           PUSH     {LR}
   \   00000004   1CD04DE2           SUB      SP,SP,#+28
   \   00000008   0020A0E1           MOV      R2,R0
   \   0000000C   0100A0E1           MOV      R0,R1
     19              dest.cat_sprintf("TankWashingCleaningMedia DB.ID='%d' Name='%s'", Id, Name.c_str());
   \   00000010   041082E2           ADD      R1,R2,#+4
   \   00000014   183091E5           LDR      R3,[R1, #+24]
   \   00000018   100053E3           CMP      R3,#+16
   \   0000001C   04109125           LDRCS    R1,[R1, #+4]
   \   00000020   04108132           ADDCC    R1,R1,#+4
   \   00000024   02002DE9           PUSH     {R1}
   \   00000028   003092E5           LDR      R3,[R2, #+0]
   \   0000002C   ........           LDR      R2,??Subroutine4_0  ;; `?<Constant "TankWashingCleaningMe...">`
   \   00000030   04108DE2           ADD      R1,SP,#+4
   \   00000034   ........           _BLF     ??cat_sprintf,??cat_sprintf??rA
   \   00000038   0020A0E3           MOV      R2,#+0
   \   0000003C   0110A0E3           MOV      R1,#+1
   \   00000040   04008DE2           ADD      R0,SP,#+4
   \   00000044   ........           _BLF     ??_Tidy,??_Tidy??rA
     20          }
   \   00000048   20D08DE2           ADD      SP,SP,#+32
   \   0000004C                      REQUIRE ?Subroutine4
   \   0000004C                      ;; // Fall through to label ?Subroutine4

   \                                 In segment CODE, align 4, keep-with-next
   \                     ?Subroutine4:
   \   00000000   0040BDE8           POP      {LR}
   \   00000004   1EFF2FE1           BX       LR               ;; return
   \                     ??Subroutine4_0:
   \   00000008   ........           DC32     `?<Constant "TankWashingCleaningMe...">`

   \                                 In segment DIFUNCT, align 4, keep-with-next, root
   \   00000000                      REQUIRE ?call_ctors
   \   00000000   ........           DC32    ??__sti__routine

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "TankWashingCleaningMe...">`:
   \   00000000   54616E6B5761       DC8 "TankWashingCleaningMedia DB.ID='%d' Name='%s'"
   \              7368696E6743
   \              6C65616E696E
   \              674D65646961
   \              2044422E4944
   \              3D2725642720
   \              4E616D653D27
   \              25732700    
   \   0000002E   0000               DC8 0, 0

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs TankWashingCleaningMedia &TankWashingCleaningMedia::new TankWashingCleaningMedia()
   \                     `??new TankWashingCleaningMedia`:
   \   00000000   00402DE9           PUSH     {LR}
   \   00000004   2000A0E3           MOV      R0,#+32
   \   00000008   ........           _BLF     `??operator new`,`??operator new??rA`
   \   0000000C   000050E3           CMP      R0,#+0
   \   00000010   0000000A           BEQ      `??new TankWashingCleaningMedia_1`
   \   00000014   ........           BL       ??TankWashingCleaningMedia
   \                     `??new TankWashingCleaningMedia_1`:
   \   00000018   ........           B        ?Subroutine4

   \                                 In segment CODE, align 4, keep-with-next
   \   static __??Code32?? __intrinsic __code __interwork __atpcs void __sti__routine()
   \                     ??__sti__routine:
   \   00000000   1EFF2FE1           BX       LR               ;; return

   Maximum stack usage in bytes:

     Function                       CSTACK
     --------                       ------
     TankWashingCleaningMedia::TankWashingCleaningMedia()
                                        8
     TankWashingCleaningMedia::ToString(AnsiString &)
                                       36
     TankWashingCleaningMedia::new TankWashingCleaningMedia()
                                        4
     __sti__routine()                   0


   Segment part sizes:

     Function/Label                 Bytes
     --------------                 -----
     TankWashingCleaningMedia::TankWashingCleaningMedia()
                                      36
     TankWashingCleaningMedia::ToString(AnsiString &)
                                      76
     ?Subroutine4                     12
     ?<Constant "TankWashingCleaningMe...">
                                      48
     TankWashingCleaningMedia::new TankWashingCleaningMedia()
                                      28
     __sti__routine()                  4
      Others                          68

 
 220 bytes in segment CODE
  48 bytes in segment DATA_C
   4 bytes in segment DIFUNCT
 
 160 bytes of CODE  memory (+ 64 bytes shared)
  48 bytes of CONST memory

Errors: none
Warnings: none
