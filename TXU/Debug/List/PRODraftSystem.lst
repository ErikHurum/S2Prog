##############################################################################
#                                                                            #
# IAR ARM ANSI C/C++ Compiler V4.42A/W32               14/Sep/2022  15:14:51 #
# Copyright 1999-2005 IAR Systems. All rights reserved.                      #
#                                                                            #
#    Cpu mode        =  interwork                                            #
#    Endian          =  little                                               #
#    Stack alignment =  4                                                    #
#    Source file     =  D:\S2Prog\Shared\Src\PRODraftSystem.cpp              #
#    Command line    =  D:\S2Prog\Shared\Src\PRODraftSystem.cpp --fpu None   #
#                       -D OS_LIBMODE_SP -D CPU_S3C2410 -D OS_RAMVECT=0 -D   #
#                       OS_UART=-1 -D S2TXU -D USE_LZO=1 -D __ARM_LIBRARY__  #
#                       -D WATCHDOG=1 -D NETWORK=1 -lCN                      #
#                       D:\S2Prog\TXU\Debug\List\ -o                         #
#                       D:\S2Prog\TXU\Debug\Obj\ -z9 --debug --cpu_mode arm  #
#                       --endian little --cpu ARM920T --stack_align 4        #
#                       --interwork -e --enable_multibytes --eec++           #
#                       --dlib_config "C:\Program Files (x86)\IAR            #
#                       Systems\Embedded Workbench                           #
#                       4.0\arm\LIB\dl4tpainl8n.h" -I                        #
#                       D:\S2Prog\TXU\GUI\CORE\ -I D:\S2Prog\TXU\GUI\WM\ -I  #
#                       D:\S2Prog\TXU\GUI\WIDGET\ -I D:\S2Prog\TXU\CONFIG\   #
#                       -I D:\S2Prog\TXU\INC\ -I D:\S2Prog\TXU\..\SHARED\INC #
#                       \ -I D:\S2Prog\TXU\..\SHARED\SRC\ -I                 #
#                       D:\S2Prog\TXU\..\SHARED\LZO\minilzo.210\ -I          #
#                       D:\S2Prog\TXU\lwip-1.4.1\src\include\ -I             #
#                       D:\S2Prog\TXU\lwip-1.4.1\src\include\ipv4\ -I        #
#                       D:\S2Prog\TXU\lwip-1.4.1\src\ -I                     #
#                       D:\S2Prog\TXU\..\SHARED\Database\ -I                 #
#                       D:\S2Prog\TXU\src\ -I "C:\Program Files (x86)\IAR    #
#                       Systems\Embedded Workbench 4.0\arm\INC\"             #
#                       --inline_threshold=2                                 #
#    List file       =  D:\S2Prog\TXU\Debug\List\PRODraftSystem.lst          #
#    Object file     =  D:\S2Prog\TXU\Debug\Obj\PRODraftSystem.r79           #
#                                                                            #
#                                                                            #
##############################################################################

D:\S2Prog\Shared\Src\PRODraftSystem.cpp
      1          #include "TSNIncludes.h"

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs string::string(string const &)
   \                     ??string:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
   \   0000000C   0020A0E3           MOV      R2,#+0
   \   00000010   0010A0E3           MOV      R1,#+0
   \   00000014   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000018   1C009FE5           LDR      R0,??string_1    ;; ??npos
   \   0000001C   0020A0E3           MOV      R2,#+0
   \   00000020   003090E5           LDR      R3,[R0, #+0]
   \   00000024   0510A0E1           MOV      R1,R5
   \   00000028   0400A0E1           MOV      R0,R4
   \   0000002C   ........           _BLF     ??assign,??assign??rA
   \   00000030   0400A0E1           MOV      R0,R4
   \   00000034   3040BDE8           POP      {R4,R5,LR}
   \   00000038   1EFF2FE1           BX       LR               ;; return
   \                     ??string_1:
   \   0000003C   ........           DC32     ??npos

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs _Tree_algobase<allocator<void>>::_Genptr _Tree_algobase<allocator<void>>::_DecP(_Tree_algobase<allocator<void>>::_Genptr)
   \                     ??_DecP:
   \   00000000   0D10D0E5           LDRB     R1,[R0, #+13]
   \   00000004   000051E3           CMP      R1,#+0
   \   00000008   08009015           LDRNE    R0,[R0, #+8]
   \   0000000C   1EFF2F11           BXNE     LR
   \   00000010   001090E5           LDR      R1,[R0, #+0]
   \   00000014   0D20D1E5           LDRB     R2,[R1, #+13]
   \   00000018   000052E3           CMP      R2,#+0
   \   0000001C   0700001A           BNE      ??_DecP_1
   \   00000020   000000EA           B        ??_DecP_2
   \                     ??_DecP_3:
   \   00000024   0010A0E1           MOV      R1,R0
   \                     ??_DecP_2:
   \   00000028   080091E5           LDR      R0,[R1, #+8]
   \   0000002C   0D20D0E5           LDRB     R2,[R0, #+13]
   \   00000030   000052E3           CMP      R2,#+0
   \   00000034   FAFFFF0A           BEQ      ??_DecP_3
   \   00000038   0100A0E1           MOV      R0,R1
   \   0000003C   1EFF2FE1           BX       LR
   \                     ??_DecP_1:
   \   00000040   041090E5           LDR      R1,[R0, #+4]
   \   00000044   0D20D1E5           LDRB     R2,[R1, #+13]
   \   00000048   000052E3           CMP      R2,#+0
   \   0000004C   1EFF2F11           BXNE     LR
   \   00000050   002091E5           LDR      R2,[R1, #+0]
   \   00000054   020050E1           CMP      R0,R2
   \   00000058   0100A0E1           MOV      R0,R1
   \   0000005C   F7FFFF0A           BEQ      ??_DecP_1
   \   00000060   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs _Tree_algobase<allocator<void>>::_Genptr _Tree_algobase<allocator<void>>::_IncP(_Tree_algobase<allocator<void>>::_Genptr)
   \                     ??_IncP:
   \   00000000   0D10D0E5           LDRB     R1,[R0, #+13]
   \   00000004   000051E3           CMP      R1,#+0
   \   00000008   1EFF2F11           BXNE     LR
   \   0000000C   081090E5           LDR      R1,[R0, #+8]
   \   00000010   0D20D1E5           LDRB     R2,[R1, #+13]
   \   00000014   000052E3           CMP      R2,#+0
   \   00000018   0700001A           BNE      ??_IncP_1
   \   0000001C   000000EA           B        ??_IncP_2
   \                     ??_IncP_3:
   \   00000020   0010A0E1           MOV      R1,R0
   \                     ??_IncP_2:
   \   00000024   000091E5           LDR      R0,[R1, #+0]
   \   00000028   0D20D0E5           LDRB     R2,[R0, #+13]
   \   0000002C   000052E3           CMP      R2,#+0
   \   00000030   FAFFFF0A           BEQ      ??_IncP_3
   \   00000034   060000EA           B        ??_IncP_4
   \                     ??_IncP_5:
   \   00000038   0100A0E1           MOV      R0,R1
   \                     ??_IncP_1:
   \   0000003C   041090E5           LDR      R1,[R0, #+4]
   \   00000040   0D20D1E5           LDRB     R2,[R1, #+13]
   \   00000044   000052E3           CMP      R2,#+0
   \   00000048   08209105           LDREQ    R2,[R1, #+8]
   \   0000004C   02005001           CMPEQ    R0,R2
   \   00000050   F8FFFF0A           BEQ      ??_IncP_5
   \                     ??_IncP_4:
   \   00000054   0100A0E1           MOV      R0,R1
   \   00000058   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void _Tree_algobase<allocator<void>>::_Clear()
   \                     ??_Clear:
   \   00000000   040080E5           STR      R0,[R0, #+4]
   \   00000004   000080E5           STR      R0,[R0, #+0]
   \   00000008   080080E5           STR      R0,[R0, #+8]
   \   0000000C   0110A0E3           MOV      R1,#+1
   \   00000010   0D10C0E5           STRB     R1,[R0, #+13]
   \   00000014   0C10C0E5           STRB     R1,[R0, #+12]
   \   00000018   0010A0E3           MOV      R1,#+0
   \   0000001C   101080E5           STR      R1,[R0, #+16]
   \   00000020   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void _Tree_algobase<allocator<void>>::_Rrotate(_Tree_algobase<allocator<void>>::_Genptr)
   \                     ??_Rrotate:
   \   00000000   002091E5           LDR      R2,[R1, #+0]
   \   00000004   083092E5           LDR      R3,[R2, #+8]
   \   00000008   003081E5           STR      R3,[R1, #+0]
   \   0000000C   083092E5           LDR      R3,[R2, #+8]
   \   00000010   0DC0D3E5           LDRB     R12,[R3, #+13]
   \   00000014   00005CE3           CMP      R12,#+0
   \   00000018   04108305           STREQ    R1,[R3, #+4]
   \   0000001C   043091E5           LDR      R3,[R1, #+4]
   \   00000020   043082E5           STR      R3,[R2, #+4]
   \   00000024   043090E5           LDR      R3,[R0, #+4]
   \   00000028   030051E1           CMP      R1,R3
   \   0000002C   04208005           STREQ    R2,[R0, #+4]
   \   00000030   0400000A           BEQ      ??_Rrotate_1
   \   00000034   040091E5           LDR      R0,[R1, #+4]
   \   00000038   083090E5           LDR      R3,[R0, #+8]
   \   0000003C   030051E1           CMP      R1,R3
   \   00000040   08208005           STREQ    R2,[R0, #+8]
   \   00000044   00208015           STRNE    R2,[R0, #+0]
   \                     ??_Rrotate_1:
   \   00000048   081082E5           STR      R1,[R2, #+8]
   \   0000004C   042081E5           STR      R2,[R1, #+4]
   \   00000050   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void _Tree_algobase<allocator<void>>::_Lrotate(_Tree_algobase<allocator<void>>::_Genptr)
   \                     ??_Lrotate:
   \   00000000   082091E5           LDR      R2,[R1, #+8]
   \   00000004   003092E5           LDR      R3,[R2, #+0]
   \   00000008   083081E5           STR      R3,[R1, #+8]
   \   0000000C   003092E5           LDR      R3,[R2, #+0]
   \   00000010   0DC0D3E5           LDRB     R12,[R3, #+13]
   \   00000014   00005CE3           CMP      R12,#+0
   \   00000018   04108305           STREQ    R1,[R3, #+4]
   \   0000001C   043091E5           LDR      R3,[R1, #+4]
   \   00000020   043082E5           STR      R3,[R2, #+4]
   \   00000024   043090E5           LDR      R3,[R0, #+4]
   \   00000028   030051E1           CMP      R1,R3
   \   0000002C   04208005           STREQ    R2,[R0, #+4]
   \   00000030   0400000A           BEQ      ??_Lrotate_1
   \   00000034   040091E5           LDR      R0,[R1, #+4]
   \   00000038   003090E5           LDR      R3,[R0, #+0]
   \   0000003C   030051E1           CMP      R1,R3
   \   00000040   00208005           STREQ    R2,[R0, #+0]
   \   00000044   08208015           STRNE    R2,[R0, #+8]
   \                     ??_Lrotate_1:
   \   00000048   001082E5           STR      R1,[R2, #+0]
   \   0000004C   042081E5           STR      R2,[R1, #+4]
   \   00000050   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void _Tree_algobase<allocator<void>>::_Insert(bool, _Tree_algobase<allocator<void>>::_Genptr, _Tree_algobase<allocator<void>>::_Genptr)
   \                     ??_Insert:
   \   00000000   F0402DE9           PUSH     {R4-R7,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   100094E5           LDR      R0,[R4, #+16]
   \   0000000C   0350A0E1           MOV      R5,R3
   \   00000010   010080E2           ADD      R0,R0,#+1
   \   00000014   100084E5           STR      R0,[R4, #+16]
   \   00000018   040052E1           CMP      R2,R4
   \   0000001C   0300001A           BNE      ??_Insert_3
   \   00000020   045084E5           STR      R5,[R4, #+4]
   \   00000024   005084E5           STR      R5,[R4, #+0]
   \                     ??_Insert_4:
   \   00000028   085084E5           STR      R5,[R4, #+8]
   \   0000002C   130000EA           B        ??_Insert_5
   \                     ??_Insert_3:
   \   00000030   000051E3           CMP      R1,#+0
   \   00000034   0500000A           BEQ      ??_Insert_6
   \   00000038   005082E5           STR      R5,[R2, #+0]
   \   0000003C   000094E5           LDR      R0,[R4, #+0]
   \   00000040   000052E1           CMP      R2,R0
   \   00000044   0D00001A           BNE      ??_Insert_5
   \   00000048   005084E5           STR      R5,[R4, #+0]
   \   0000004C   0B0000EA           B        ??_Insert_5
   \                     ??_Insert_6:
   \   00000050   085082E5           STR      R5,[R2, #+8]
   \   00000054   080094E5           LDR      R0,[R4, #+8]
   \   00000058   000052E1           CMP      R2,R0
   \   0000005C   0700001A           BNE      ??_Insert_5
   \   00000060   F0FFFFEA           B        ??_Insert_4
   \                     ??_Insert_7:
   \   00000064   0C70C0E5           STRB     R7,[R0, #+12]
   \   00000068   0C70C2E5           STRB     R7,[R2, #+12]
   \   0000006C   040095E5           LDR      R0,[R5, #+4]
   \   00000070   040090E5           LDR      R0,[R0, #+4]
   \   00000074   0C60C0E5           STRB     R6,[R0, #+12]
   \   00000078   040095E5           LDR      R0,[R5, #+4]
   \   0000007C   045090E5           LDR      R5,[R0, #+4]
   \                     ??_Insert_5:
   \   00000080   0170A0E3           MOV      R7,#+1
   \   00000084   040095E5           LDR      R0,[R5, #+4]
   \   00000088   0C10D0E5           LDRB     R1,[R0, #+12]
   \   0000008C   000051E3           CMP      R1,#+0
   \   00000090   2F00001A           BNE      ??_Insert_8
   \   00000094   041090E5           LDR      R1,[R0, #+4]
   \   00000098   0060A0E3           MOV      R6,#+0
   \   0000009C   001091E5           LDR      R1,[R1, #+0]
   \   000000A0   010050E1           CMP      R0,R1
   \   000000A4   041090E5           LDR      R1,[R0, #+4]
   \   000000A8   1400001A           BNE      ??_Insert_9
   \   000000AC   082091E5           LDR      R2,[R1, #+8]
   \   000000B0   0C10D2E5           LDRB     R1,[R2, #+12]
   \   000000B4   000051E3           CMP      R1,#+0
   \   000000B8   E9FFFF0A           BEQ      ??_Insert_7
   \   000000BC   081090E5           LDR      R1,[R0, #+8]
   \   000000C0   010055E1           CMP      R5,R1
   \   000000C4   0300001A           BNE      ??_Insert_10
   \   000000C8   0050A0E1           MOV      R5,R0
   \   000000CC   0510A0E1           MOV      R1,R5
   \   000000D0   0400A0E1           MOV      R0,R4
   \   000000D4   ........           _BLF     ??_Lrotate,??_Lrotate??rA
   \                     ??_Insert_10:
   \   000000D8   040095E5           LDR      R0,[R5, #+4]
   \   000000DC   0C70C0E5           STRB     R7,[R0, #+12]
   \   000000E0   040095E5           LDR      R0,[R5, #+4]
   \   000000E4   040090E5           LDR      R0,[R0, #+4]
   \   000000E8   0C60C0E5           STRB     R6,[R0, #+12]
   \   000000EC   040095E5           LDR      R0,[R5, #+4]
   \   000000F0   041090E5           LDR      R1,[R0, #+4]
   \   000000F4   0400A0E1           MOV      R0,R4
   \   000000F8   ........           _BLF     ??_Rrotate,??_Rrotate??rA
   \   000000FC   DFFFFFEA           B        ??_Insert_5
   \                     ??_Insert_9:
   \   00000100   002091E5           LDR      R2,[R1, #+0]
   \   00000104   0C10D2E5           LDRB     R1,[R2, #+12]
   \   00000108   000051E3           CMP      R1,#+0
   \   0000010C   D4FFFF0A           BEQ      ??_Insert_7
   \   00000110   001090E5           LDR      R1,[R0, #+0]
   \   00000114   010055E1           CMP      R5,R1
   \   00000118   0300001A           BNE      ??_Insert_11
   \   0000011C   0050A0E1           MOV      R5,R0
   \   00000120   0510A0E1           MOV      R1,R5
   \   00000124   0400A0E1           MOV      R0,R4
   \   00000128   ........           _BLF     ??_Rrotate,??_Rrotate??rA
   \                     ??_Insert_11:
   \   0000012C   040095E5           LDR      R0,[R5, #+4]
   \   00000130   0C70C0E5           STRB     R7,[R0, #+12]
   \   00000134   040095E5           LDR      R0,[R5, #+4]
   \   00000138   040090E5           LDR      R0,[R0, #+4]
   \   0000013C   0C60C0E5           STRB     R6,[R0, #+12]
   \   00000140   040095E5           LDR      R0,[R5, #+4]
   \   00000144   041090E5           LDR      R1,[R0, #+4]
   \   00000148   0400A0E1           MOV      R0,R4
   \   0000014C   ........           _BLF     ??_Lrotate,??_Lrotate??rA
   \   00000150   CAFFFFEA           B        ??_Insert_5
   \                     ??_Insert_8:
   \   00000154   040094E5           LDR      R0,[R4, #+4]
   \   00000158   0C70C0E5           STRB     R7,[R0, #+12]
   \   0000015C   F040BDE8           POP      {R4-R7,LR}
   \   00000160   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::_Pairib _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::insert(PRogramObjectBase *)
   \                     ??insert:
   \   00000000   F34C2DE9           PUSH     {R0,R1,R4-R7,R10,R11,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
   \   0000000C   040095E5           LDR      R0,[R5, #+4]
   \   00000010   0260A0E1           MOV      R6,R2
   \   00000014   05B0A0E1           MOV      R11,R5
   \   00000018   0170A0E3           MOV      R7,#+1
   \                     ??insert_1:
   \   0000001C   0D10D0E5           LDRB     R1,[R0, #+13]
   \   00000020   000051E3           CMP      R1,#+0
   \   00000024   0700001A           BNE      ??insert_2
   \   00000028   101090E5           LDR      R1,[R0, #+16]
   \   0000002C   00B0A0E1           MOV      R11,R0
   \   00000030   010056E1           CMP      R6,R1
   \   00000034   00009035           LDRCC    R0,[R0, #+0]
   \   00000038   0170A033           MOVCC    R7,#+1
   \   0000003C   08009025           LDRCS    R0,[R0, #+8]
   \   00000040   0070A023           MOVCS    R7,#+0
   \   00000044   F4FFFFEA           B        ??insert_1
   \                     ??insert_2:
   \   00000048   0B00A0E1           MOV      R0,R11
   \   0000004C   01A0A0E3           MOV      R10,#+1
   \   00000050   000057E3           CMP      R7,#+0
   \   00000054   0B00000A           BEQ      ??insert_3
   \   00000058   001095E5           LDR      R1,[R5, #+0]
   \   0000005C   010050E1           CMP      R0,R1
   \   00000060   0700001A           BNE      ??insert_4
   \   00000064   0630A0E1           MOV      R3,R6
   \   00000068   0B20A0E1           MOV      R2,R11
   \   0000006C   0110A0E3           MOV      R1,#+1
   \                     ??insert_5:
   \   00000070   0500A0E1           MOV      R0,R5
   \   00000074   ........           _BLF     ??_Insert_1,??_Insert??rA
   \   00000078   00008DE5           STR      R0,[SP, #+0]
   \   0000007C   04A0CDE5           STRB     R10,[SP, #+4]
   \   00000080   0A0000EA           B        ??insert_6
   \                     ??insert_4:
   \   00000084   ........           _BLF     ??_DecP,??_DecP??rA
   \                     ??insert_3:
   \   00000088   101090E5           LDR      R1,[R0, #+16]
   \   0000008C   060051E1           CMP      R1,R6
   \   00000090   0300002A           BCS      ??insert_7
   \   00000094   0630A0E1           MOV      R3,R6
   \   00000098   0B20A0E1           MOV      R2,R11
   \   0000009C   0710A0E1           MOV      R1,R7
   \   000000A0   F2FFFFEA           B        ??insert_5
   \                     ??insert_7:
   \   000000A4   00008DE5           STR      R0,[SP, #+0]
   \   000000A8   0010A0E3           MOV      R1,#+0
   \   000000AC   0410CDE5           STRB     R1,[SP, #+4]
   \                     ??insert_6:
   \   000000B0   0D00A0E1           MOV      R0,SP
   \   000000B4   030090E8           LDM      R0,{R0,R1}
   \   000000B8   030084E8           STM      R4,{R0,R1}
   \   000000BC   0400A0E1           MOV      R0,R4
   \   000000C0   F64CBDE8           POP      {R1,R2,R4-R7,R10,R11,LR}
   \   000000C4   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::_Erase(_Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::_Nodeptr)
   \                     ??_Erase:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
   \   0000000C   0560A0E1           MOV      R6,R5
   \   00000010   060000EA           B        ??_Erase_1
   \                     ??_Erase_2:
   \   00000014   081096E5           LDR      R1,[R6, #+8]
   \   00000018   0400A0E1           MOV      R0,R4
   \   0000001C   F7FFFFEB           BL       ??_Erase
   \   00000020   006096E5           LDR      R6,[R6, #+0]
   \   00000024   0500A0E1           MOV      R0,R5
   \   00000028   ........           _BLF     `??operator delete`,`??operator delete??rA`
   \   0000002C   0650A0E1           MOV      R5,R6
   \                     ??_Erase_1:
   \   00000030   0D00D6E5           LDRB     R0,[R6, #+13]
   \   00000034   000050E3           CMP      R0,#+0
   \   00000038   F5FFFF0A           BEQ      ??_Erase_2
   \   0000003C   7040BDE8           POP      {R4-R6,LR}
   \   00000040   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::iterator _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::_Insert(bool, _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::_Nodeptr, PRogramObjectBase *)
   \                     ??_Insert_1:
   \   00000000   F0412DE9           PUSH     {R4-R8,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
   \   0000000C   0260A0E1           MOV      R6,R2
   \   00000010   0370A0E1           MOV      R7,R3
   \   00000014   1400A0E3           MOV      R0,#+20
   \   00000018   ........           _BLF     `??operator new`,`??operator new??rA`
   \   0000001C   0080B0E1           MOVS     R8,R0
   \   00000020   0600000A           BEQ      ??_Insert_12
   \   00000024   004088E5           STR      R4,[R8, #+0]
   \   00000028   046088E5           STR      R6,[R8, #+4]
   \   0000002C   084088E5           STR      R4,[R8, #+8]
   \   00000030   0000A0E3           MOV      R0,#+0
   \   00000034   0C00C8E5           STRB     R0,[R8, #+12]
   \   00000038   0D00C8E5           STRB     R0,[R8, #+13]
   \   0000003C   107088E5           STR      R7,[R8, #+16]
   \                     ??_Insert_12:
   \   00000040   0830A0E1           MOV      R3,R8
   \   00000044   0620A0E1           MOV      R2,R6
   \   00000048   0510A0E1           MOV      R1,R5
   \   0000004C   0400A0E1           MOV      R0,R4
   \   00000050   ........           _BLF     ??_Insert,??_Insert??rA_1
   \   00000054   0800A0E1           MOV      R0,R8
   \   00000058   F041BDE8           POP      {R4-R8,LR}
   \   0000005C   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs set<PRogramObjectBase *>::~set()
   \                     `?~set`:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   041094E5           LDR      R1,[R4, #+4]
   \   0000000C   ........           _BLF     ??_Erase,??_Erase??rA
   \   00000010   0400A0E1           MOV      R0,R4
   \   00000014   ........           _BLF     ??_Clear,??_Clear??rA
   \   00000018   1040BDE8           POP      {R4,LR}
   \   0000001C   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs set<PRogramObjectBase *>::set()
   \                     ??set:
   \   00000000   11402DE9           PUSH     {R0,R4,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0110A0E3           MOV      R1,#+1
   \   0000000C   0D00A0E1           MOV      R0,SP
   \   00000010   ........           _BLF     __data_memzero,??__data_memzero??rA
   \   00000014   0400A0E1           MOV      R0,R4
   \   00000018   ........           _BLF     ??_Clear,??_Clear??rA
   \   0000001C   0000DDE5           LDRB     R0,[SP, #+0]
   \   00000020   1400C4E5           STRB     R0,[R4, #+20]
   \   00000024   0400A0E1           MOV      R0,R4
   \   00000028   1240BDE8           POP      {R1,R4,LR}
   \   0000002C   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void _Vector_impl<AnalogInput *, allocator<AnalogInput *>>::_Tidy0()
   \                     ??_Tidy0:
   \   00000000   00402DE9           PUSH     {LR}
   \   00000004   001090E5           LDR      R1,[R0, #+0]
   \   00000008   000051E3           CMP      R1,#+0
   \   0000000C   0200000A           BEQ      ??_Tidy0_1
   \   00000010   041080E5           STR      R1,[R0, #+4]
   \   00000014   0100A0E1           MOV      R0,R1
   \   00000018   ........           _BLF     `??operator delete`,`??operator delete??rA`
   \                     ??_Tidy0_1:
   \   0000001C   0040BDE8           POP      {LR}
   \   00000020   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs AnalogInput ** _Vector_impl<AnalogInput *, allocator<AnalogInput *>>::_Insert(AnalogInput **, AnalogInput * const &)
   \                     ??_Insert_2:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   005092E5           LDR      R5,[R2, #+0]
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   000094E5           LDR      R0,[R4, #+0]
   \   00000010   0120A0E3           MOV      R2,#+1
   \   00000014   000050E3           CMP      R0,#+0
   \   00000018   0060A003           MOVEQ    R6,#+0
   \   0000001C   00604110           SUBNE    R6,R1,R0
   \   00000020   0400A0E1           MOV      R0,R4
   \   00000024   ........           _BLF     ??_Make_room,??_Make_room??rA
   \   00000028   0110A0E3           MOV      R1,#+1
   \                     ??_Insert_13:
   \   0000002C   ........           STR      R5,[R0], #+4
   \   00000030   011051E2           SUBS     R1,R1,#+1
   \   00000034   FCFFFF1A           BNE      ??_Insert_13
   \   00000038   000094E5           LDR      R0,[R4, #+0]
   \   0000003C   000086E0           ADD      R0,R6,R0
   \   00000040   7040BDE8           POP      {R4-R6,LR}
   \   00000044   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs AnalogInput ** _Vector_impl<AnalogInput *, allocator<AnalogInput *>>::_Make_room(AnalogInput **, unsigned int)
   \                     ??_Make_room:
   \   00000000   F0472DE9           PUSH     {R4-R10,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   000094E5           LDR      R0,[R4, #+0]
   \   0000000C   0150A0E1           MOV      R5,R1
   \   00000010   081094E5           LDR      R1,[R4, #+8]
   \   00000014   0260A0E1           MOV      R6,R2
   \   00000018   001041E0           SUB      R1,R1,R0
   \   0000001C   2171A0E1           LSR      R7,R1,#+2
   \   00000020   041094E5           LDR      R1,[R4, #+4]
   \   00000024   000056E3           CMP      R6,#+0
   \   00000028   000041E0           SUB      R0,R1,R0
   \   0000002C   2001A0E1           LSR      R0,R0,#+2
   \   00000030   2900000A           BEQ      ??_Make_room_1
   \   00000034   C024E0E3           MVN      R2,#-1073741824
   \   00000038   002042E0           SUB      R2,R2,R0
   \   0000003C   060052E1           CMP      R2,R6
   \   00000040   2500003A           BCC      ??_Make_room_1
   \   00000044   008086E0           ADD      R8,R6,R0
   \   00000048   080057E1           CMP      R7,R8
   \   0000004C   1C00002A           BCS      ??_Make_room_2
   \   00000050   A700A0E1           LSR      R0,R7,#+1
   \   00000054   C014E0E3           MVN      R1,#-1073741824
   \   00000058   001041E0           SUB      R1,R1,R0
   \   0000005C   070051E1           CMP      R1,R7
   \   00000060   0070A033           MOVCC    R7,#+0
   \   00000064   07708020           ADDCS    R7,R0,R7
   \   00000068   080057E1           CMP      R7,R8
   \   0000006C   0870A031           MOVCC    R7,R8
   \   00000070   0701A0E1           LSL      R0,R7,#+2
   \   00000074   ........           _BLF     `??operator new`,`??operator new??rA`
   \   00000078   0090A0E1           MOV      R9,R0
   \   0000007C   000094E5           LDR      R0,[R4, #+0]
   \   00000080   0920A0E1           MOV      R2,R9
   \   00000084   0510A0E1           MOV      R1,R5
   \   00000088   ........           _BLF     _Copy_a4,??_Copy_a4??rA
   \   0000008C   041094E5           LDR      R1,[R4, #+4]
   \   00000090   00A0A0E1           MOV      R10,R0
   \   00000094   06218AE0           ADD      R2,R10,R6, LSL #+2
   \   00000098   0500A0E1           MOV      R0,R5
   \   0000009C   ........           _BLF     _Copy_a4,??_Copy_a4??rA
   \   000000A0   0400A0E1           MOV      R0,R4
   \   000000A4   ........           _BLF     ??_Tidy0,??_Tidy0??rA
   \   000000A8   070189E0           ADD      R0,R9,R7, LSL #+2
   \   000000AC   080084E5           STR      R0,[R4, #+8]
   \   000000B0   080189E0           ADD      R0,R9,R8, LSL #+2
   \   000000B4   040084E5           STR      R0,[R4, #+4]
   \   000000B8   009084E5           STR      R9,[R4, #+0]
   \   000000BC   0A50A0E1           MOV      R5,R10
   \   000000C0   050000EA           B        ??_Make_room_1
   \                     ??_Make_room_2:
   \   000000C4   062181E0           ADD      R2,R1,R6, LSL #+2
   \   000000C8   0500A0E1           MOV      R0,R5
   \   000000CC   ........           _BLF     _Copy_backward_a4,??_Copy_backward_a4??rA
   \   000000D0   040094E5           LDR      R0,[R4, #+4]
   \   000000D4   060180E0           ADD      R0,R0,R6, LSL #+2
   \   000000D8   040084E5           STR      R0,[R4, #+4]
   \                     ??_Make_room_1:
   \   000000DC   0500A0E1           MOV      R0,R5
   \   000000E0   F047BDE8           POP      {R4-R10,LR}
   \   000000E4   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void _Vector_impl<AnalogInput *, allocator<AnalogInput *>>::_Push_back0(AnalogInput *)
   \                     ??_Push_back0:
   \   00000000   02402DE9           PUSH     {R1,LR}
   \   00000004   041090E5           LDR      R1,[R0, #+4]
   \   00000008   082090E5           LDR      R2,[R0, #+8]
   \   0000000C   020051E1           CMP      R1,R2
   \   00000010   0800002A           BCS      ??_Push_back0_1
   \   00000014   00209DE5           LDR      R2,[SP, #+0]
   \   00000018   0130A0E3           MOV      R3,#+1
   \   0000001C   01C0A0E1           MOV      R12,R1
   \                     ??_Push_back0_2:
   \   00000020   ........           STR      R2,[R12], #+4
   \   00000024   013053E2           SUBS     R3,R3,#+1
   \   00000028   FCFFFF1A           BNE      ??_Push_back0_2
   \   0000002C   041081E2           ADD      R1,R1,#+4
   \   00000030   041080E5           STR      R1,[R0, #+4]
   \   00000034   010000EA           B        ??_Push_back0_3
   \                     ??_Push_back0_1:
   \   00000038   0D20A0E1           MOV      R2,SP
   \   0000003C   ........           _BLF     ??_Insert_2,??_Insert??rA_2
   \                     ??_Push_back0_3:
   \   00000040   0140BDE8           POP      {R0,LR}
   \   00000044   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void operator+(string const &, string const &)
   \                     `??operator+`:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   1CD04DE2           SUB      SP,SP,#+28
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   0250A0E1           MOV      R5,R2
   \   00000010   0D00A0E1           MOV      R0,SP
   \   00000014   ........           _BLF     ??string,??string??rA
   \   00000018   34109FE5           LDR      R1,`??operator+_2`  ;; ??npos
   \   0000001C   0020A0E3           MOV      R2,#+0
   \   00000020   003091E5           LDR      R3,[R1, #+0]
   \   00000024   0510A0E1           MOV      R1,R5
   \   00000028   ........           _BLF     ??append,??append??rA
   \   0000002C   0010A0E1           MOV      R1,R0
   \   00000030   0400A0E1           MOV      R0,R4
   \   00000034   ........           _BLF     ??string,??string??rA
   \   00000038   0020A0E3           MOV      R2,#+0
   \   0000003C   0110A0E3           MOV      R1,#+1
   \   00000040   0D00A0E1           MOV      R0,SP
   \   00000044   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000048   1CD08DE2           ADD      SP,SP,#+28
   \   0000004C   3040BDE8           POP      {R4,R5,LR}
   \   00000050   1EFF2FE1           BX       LR               ;; return
   \                     `??operator+_2`:
   \   00000054   ........           DC32     ??npos

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void operator+(string const &, char const *)
   \                     `??operator+_1`:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   1CD04DE2           SUB      SP,SP,#+28
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   0250A0E1           MOV      R5,R2
   \   00000010   0D00A0E1           MOV      R0,SP
   \   00000014   ........           _BLF     ??string,??string??rA
   \   00000018   0060A0E1           MOV      R6,R0
   \   0000001C   0500A0E1           MOV      R0,R5
   \   00000020   ........           _BLF     strlen,??strlen??rA
   \   00000024   0020A0E1           MOV      R2,R0
   \   00000028   0510A0E1           MOV      R1,R5
   \   0000002C   0600A0E1           MOV      R0,R6
   \   00000030   ........           _BLF     ??append_1,??append??rA_1
   \   00000034   0010A0E1           MOV      R1,R0
   \   00000038   0400A0E1           MOV      R0,R4
   \   0000003C   ........           _BLF     ??string,??string??rA
   \   00000040   0020A0E3           MOV      R2,#+0
   \   00000044   0110A0E3           MOV      R1,#+1
   \   00000048   0D00A0E1           MOV      R0,SP
   \   0000004C   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000050   1CD08DE2           ADD      SP,SP,#+28
   \   00000054   7040BDE8           POP      {R4-R6,LR}
   \   00000058   1EFF2FE1           BX       LR               ;; return
      2          #pragma hdrstop
      3          #ifdef BORLAND
      4              #pragma package(smart_init)
      5          #endif
      6          
      7          

   \                                 In segment CODE, align 4, keep-with-next
      8          set<PRogramObjectBase *>PRODraftSystem::ObjectSet;
   \   static __??Code32?? __intrinsic __code __interwork __atpcs void __sti__routine()
   \                     ??__sti__routine:
   \   00000000   10009FE5           LDR      R0,??__sti__routine_1  ;; ??PRODraftSysPtr + 8
   \   00000004   00402DE9           PUSH     {LR}
   \   00000008   ........           _BLF     ??set,??set??rA
   \   0000000C   08009FE5           LDR      R0,??__sti__routine_1+0x4  ;; ?_0
   \   00000010   ........           _BLF     __record_needed_destruction,??__record_needed_destruction??rA
   \   00000014   ........           B        ?Subroutine25
   \                     ??__sti__routine_1:
   \   00000018   ........           DC32     ??PRODraftSysPtr + 8
   \   0000001C   ........           DC32     ?_0

   \                                 In segment DATA_I, align 4, align-sorted
      9          ValueList PRODraftSystem::DraftSystemValueList[] =  {
   \                     ??DraftSystemValueList:
   \   00000000                      DS8 156
   \   0000009C                      REQUIRE `?<Initializer for DraftSystemValueList>`
     10              { L_WORD304 , L_WORD237, SVT_BLANK },         // {"Unused"           ,"",SVT_BLANK
     11              { L_WORD430 , L_WORD237, SVT_DF_MARK },       // {"DF@Mark"          ,"",SVT_DF_MARK},
     12              { L_WORD431 , L_WORD237, SVT_DA_MARK },       // {"DA@Mark"          ,"",SVT_DA_MARK},
     13              { L_WORD432 , L_WORD237, SVT_DF_PP },         // {"DF@PP"            ,"",SVT_DF_PP},
     14              { L_WORD433 , L_WORD237, SVT_DA_PP },         // {"DA@PP"            ,"",SVT_DA_PP},
     15              { L_WORD421 , L_WORD237, SVT_DP },            // {"DP"               ,"",SVT_DP},
     16              { L_WORD422 , L_WORD237, SVT_DS },            // {"DS"               ,"",SVT_DS},
     17              { L_WORD1066, L_WORD237, SVT_DFP },           // {"DFP"              ,"",SVT_DFP},
     18              { L_WORD1067, L_WORD237, SVT_DFS },           // {"DFS"              ,"",SVT_DFS},
     19              { L_WORD1066, L_WORD237, SVT_DAP },           // {"DAP"              ,"",SVT_DAP
     20              { L_WORD1067, L_WORD237, SVT_DAS },           // {"DAS"              ,"",SVT_DAS},
     21              { L_WORD83  , L_WORD237, SVT_DENSITY },       // {"Density"          ,"",SVT_DENSITY},
     22              { L_WORD1086, L_WORD237, SVT_FREEBOARD },     // {"Freeboard"        ,"",SVT_FREEBOARD},
     23          
     24          };
     25          
     26          
     27          //---------------------------------------------------------------------------
     28          PRODraftSystem *PRODraftSystem::PRODraftSysPtr  = NULL;

   \                                 In segment DATA_I, align 4, align-sorted
     29          float PRODraftSystem::MaxSummerDraft            = 50.0;
   \                     ??MaxSummerDraft:
   \   00000000                      DS8 4
   \   00000004                      REQUIRE `?<Initializer for MaxSummerDraft>`

   \                                 In segment DATA_Z, align 4, align-sorted
   \                     ??PRODraftSysPtr:
   \   00000000                      DS8 4
     30          int PRODraftSystem::NumberOfPRO                 = 0;
   \                     ??NumberOfPRO:
   \   00000004                      DS8 4
   \                     ??ObjectSet:
   \   00000008                      DS8 24

   \                                 In segment DATA_Z, align 1, align-sorted
     31          bool PRODraftSystem::Has2ndMark                 = false;
   \                     ??Has2ndMark:
   \   00000000                      DS8 1
     32          

   \                                 In segment CODE, align 4, keep-with-next
     33          PRODraftSystem::PRODraftSystem(void) {
   \                     ??PRODraftSystem:
   \   00000000   33402DE9           PUSH     {R0,R1,R4,R5,LR}
     34              PRODraftSysPtr = this;
   \   00000004   54509FE5           LDR      R5,??PRODraftSystem_1  ;; ??PRODraftSysPtr
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   0110A0E3           MOV      R1,#+1
   \   00000010   ........           _BLF     ??PRogramObject,??PRogramObject??rA
   \   00000014   ........           LDR      R0,??DataTable2  ;; ??__vtbl
   \   00000018   A40084E5           STR      R0,[R4, #+164]
   \   0000001C   640F84E2           ADD      R0,R4,#+400
   \   00000020   ........           _BLF     ??set,??set??rA
   \   00000024   004085E5           STR      R4,[R5, #+0]
     35              ObjectSet.insert(this);
   \   00000028   0420A0E1           MOV      R2,R4
   \   0000002C   081085E2           ADD      R1,R5,#+8
   \   00000030   0D00A0E1           MOV      R0,SP
   \   00000034   ........           _BLF     ??insert,??insert??rA
     36              NumberOfPRO++;
   \   00000038   040095E5           LDR      R0,[R5, #+4]
   \   0000003C   010080E2           ADD      R0,R0,#+1
   \   00000040   040085E5           STR      R0,[R5, #+4]
     37              IDNumber = (C_PRO_DRAFT_SYSTEM << 16) + NumberOfPRO;
   \   00000044   410680E2           ADD      R0,R0,#+68157440
   \   00000048   9C0084E5           STR      R0,[R4, #+156]
     38              Initiate();
   \   0000004C   0400A0E1           MOV      R0,R4
   \   00000050   ........           BL       ??Initiate
     39          }
   \   00000054   0400A0E1           MOV      R0,R4
   \   00000058   3640BDE8           POP      {R1,R2,R4,R5,LR}
   \   0000005C   1EFF2FE1           BX       LR               ;; return
   \                     ??PRODraftSystem_1:
   \   00000060   ........           DC32     ??PRODraftSysPtr
     40          //---------------------------------------------------------------------------
     41          

   \                                 In segment CODE, align 4, keep-with-next
     42          void PRODraftSystem::Initiate(void) {
     43              Name               = "DraftSys";
   \                     ??Initiate:
   \   00000000   F0109FE5           LDR      R1,??Initiate_1  ;; `?<Constant "DraftSys">`
   \   00000004   10402DE9           PUSH     {R4,LR}
   \   00000008   1CD04DE2           SUB      SP,SP,#+28
   \   0000000C   0040A0E1           MOV      R4,R0
   \   00000010   0D00A0E1           MOV      R0,SP
   \   00000014   ........           _BLF     ??AnsiString,??AnsiString??rA
   \   00000018   ........           LDR      R1,??DataTable8  ;; ??npos
   \   0000001C   0020A0E3           MOV      R2,#+0
   \   00000020   003091E5           LDR      R3,[R1, #+0]
   \   00000024   0010A0E1           MOV      R1,R0
   \   00000028   440084E2           ADD      R0,R4,#+68
   \   0000002C   ........           _BLF     ??assign,??assign??rA
   \   00000030   0020A0E3           MOV      R2,#+0
   \   00000034   0110A0E3           MOV      R1,#+1
   \   00000038   0D00A0E1           MOV      R0,SP
   \   0000003C   ........           _BLF     ??_Tidy,??_Tidy??rA
     44              DraftSystem        = DftNoDef;
   \   00000040   0800A0E3           MOV      R0,#+8
   \   00000044   6C01C4E5           STRB     R0,[R4, #+364]
     45              GlobalRefSystem    = false;
   \   00000048   0000A0E3           MOV      R0,#+0
   \   0000004C   0010A0E3           MOV      R1,#+0
   \   00000050   A811C4E5           STRB     R1,[R4, #+424]
     46              DFPtr              = NULL;
   \   00000054   700184E5           STR      R0,[R4, #+368]
     47              DPPtr              = NULL;
   \   00000058   740184E5           STR      R0,[R4, #+372]
     48              DSPtr              = NULL;
   \   0000005C   780184E5           STR      R0,[R4, #+376]
     49              DAPtr              = NULL;
   \   00000060   7C0184E5           STR      R0,[R4, #+380]
     50              DAPPtr             = NULL;
   \   00000064   800184E5           STR      R0,[R4, #+384]
     51              DASPtr             = NULL;
   \   00000068   840184E5           STR      R0,[R4, #+388]
     52              DFPPtr             = NULL;
   \   0000006C   880184E5           STR      R0,[R4, #+392]
     53              DFSPtr             = NULL;
   \   00000070   8C0184E5           STR      R0,[R4, #+396]
     54              TrimValue          = 0.0;
   \   00000074   AC1184E5           STR      R1,[R4, #+428]
     55              ListValue          = 0.0;
   \   00000078   B01184E5           STR      R1,[R4, #+432]
     56              DftFwd             = 0.0;
   \   0000007C   BC1184E5           STR      R1,[R4, #+444]
     57              DftAft             = 0.0;
   \   00000080   C01184E5           STR      R1,[R4, #+448]
     58              DftP               = 0.0;
   \   00000084   C41184E5           STR      R1,[R4, #+452]
     59              DftS               = 0.0;
   \   00000088   C81184E5           STR      R1,[R4, #+456]
     60              DftAftP            = 0.0;
   \   0000008C   CC1184E5           STR      R1,[R4, #+460]
     61              DftAftS            = 0.0;
   \   00000090   D01184E5           STR      R1,[R4, #+464]
     62              DftFwdP            = 0.0;
   \   00000094   D41184E5           STR      R1,[R4, #+468]
     63              DftFwdS            = 0.0;
   \   00000098   D81184E5           STR      R1,[R4, #+472]
     64              DftFwdMarkP        = 0.0;
   \   0000009C   DC1184E5           STR      R1,[R4, #+476]
     65              DftFwdMarkS        = 0.0;
   \   000000A0   E01184E5           STR      R1,[R4, #+480]
     66              DftAftMarkP        = 0.0;
   \   000000A4   E41184E5           STR      R1,[R4, #+484]
     67              DftAftMarkS        = 0.0;
   \   000000A8   E81184E5           STR      R1,[R4, #+488]
     68              Deflection         = 0.0;
   \   000000AC   EC1184E5           STR      R1,[R4, #+492]
     69              MaxDraft           = 0.0;
   \   000000B0   F01184E5           STR      R1,[R4, #+496]
     70              MeanDraft          = 0.0;
   \   000000B4   F41184E5           STR      R1,[R4, #+500]
     71              HasTrimValue       = false;
   \   000000B8   A911C4E5           STRB     R1,[R4, #+425]
     72              HasListValue       = false;
   \   000000BC   AA11C4E5           STRB     R1,[R4, #+426]
     73              HasDeflection      = false;
   \   000000C0   AB11C4E5           STRB     R1,[R4, #+427]
     74          	StatusDftFwd       = GETVAL_ERROR;
   \   000000C4   0410A0E3           MOV      R1,#+4
   \   000000C8   481184E5           STR      R1,[R4, #+328]
     75              StatusDftAft       = GETVAL_ERROR;
   \   000000CC   4C1184E5           STR      R1,[R4, #+332]
     76              StatusDftP         = GETVAL_ERROR;
   \   000000D0   501184E5           STR      R1,[R4, #+336]
     77              StatusDftS         = GETVAL_ERROR;
   \   000000D4   541184E5           STR      R1,[R4, #+340]
     78              StatusDftAftP      = GETVAL_ERROR;
   \   000000D8   581184E5           STR      R1,[R4, #+344]
     79              StatusDftAftS      = GETVAL_ERROR;
   \   000000DC   5C1184E5           STR      R1,[R4, #+348]
     80              StatusDftFwdP      = GETVAL_ERROR;
   \   000000E0   601184E5           STR      R1,[R4, #+352]
     81              StatusDftFwdS      = GETVAL_ERROR;
   \   000000E4   641184E5           STR      R1,[R4, #+356]
     82              StatusDftMean      = GETVAL_ERROR;
   \   000000E8   681184E5           STR      R1,[R4, #+360]
     83              DraftIndicationAtPP = false;
   \   000000EC   F801C4E5           STRB     R0,[R4, #+504]
     84          
     85          
     86          }
   \   000000F0   1CD08DE2           ADD      SP,SP,#+28
   \   000000F4   ........           B        ?Subroutine26
   \                     ??Initiate_1:
   \   000000F8   ........           DC32     `?<Constant "DraftSys">`

   \                                 In segment CODE, align 4, keep-with-next
   \                     ?Subroutine26:
   \   00000000   1040BDE8           POP      {R4,LR}
   \   00000004   1EFF2FE1           BX       LR               ;; return
     87          //---------------------------------------------------------------------------
     88          

   \                                 In segment CODE, align 4, keep-with-next
     89          PRODraftSystem::~PRODraftSystem(void) {
   \                     `?~PRODraftSystem`:
   \   00000000   F0402DE9           PUSH     {R4-R7,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
   \   0000000C   000054E3           CMP      R4,#+0
   \   00000010   2300000A           BEQ      `?~PRODraftSystem_1`
   \   00000014   ........           LDR      R0,??DataTable2  ;; ??__vtbl
     90              set<PRogramObjectBase *>::iterator pBIt;
     91              for (pBIt = DraftList.begin(); pBIt != DraftList.end(); pBIt++) {
   \   00000018   646FA0E3           MOV      R6,#+400
   \   0000001C   A40084E5           STR      R0,[R4, #+164]
   \   00000020   047096E7           LDR      R7,[R6, +R4]
   \   00000024   0B0000EA           B        `?~PRODraftSystem_2`
     92                  delete (*pBIt);
   \                     `?~PRODraftSystem_3`:
   \   00000028   102097E5           LDR      R2,[R7, #+16]
   \   0000002C   000052E3           CMP      R2,#+0
   \   00000030   0500000A           BEQ      `?~PRODraftSystem_4`
   \   00000034   0200A0E1           MOV      R0,R2
   \   00000038   A42092E5           LDR      R2,[R2, #+164]
   \   0000003C   0310A0E3           MOV      R1,#+3
   \   00000040   002092E5           LDR      R2,[R2, #+0]
   \   00000044   0FE0A0E1           MOV      LR,PC
   \   00000048   12FF2FE1           BX       R2
     93              }
   \                     `?~PRODraftSystem_4`:
   \   0000004C   0700A0E1           MOV      R0,R7
   \   00000050   ........           _BLF     ??_IncP,??_IncP??rA
   \   00000054   0070A0E1           MOV      R7,R0
   \                     `?~PRODraftSystem_2`:
   \   00000058   040086E0           ADD      R0,R6,R4
   \   0000005C   000057E1           CMP      R7,R0
   \   00000060   F0FFFF1A           BNE      `?~PRODraftSystem_3`
     94              // Cheat a little to avoid that the sensors are deleted here as this object not is thow owner.
     95              // The individual drafts are owners
     96              AnalogInList.clear();
   \   00000064   4B7F84E2           ADD      R7,R4,#+300
   \   00000068   0700A0E1           MOV      R0,R7
   \   0000006C   ........           _BLF     ??_Tidy0,??_Tidy0??rA
   \   00000070   0000A0E3           MOV      R0,#+0
   \   00000074   000087E5           STR      R0,[R7, #+0]
   \   00000078   040087E5           STR      R0,[R7, #+4]
   \   0000007C   080087E5           STR      R0,[R7, #+8]
     97          }
   \   00000080   040086E0           ADD      R0,R6,R4
   \   00000084   ........           _BLF     `?~set`,`?~set??rA`
   \   00000088   0010A0E3           MOV      R1,#+0
   \   0000008C   0400A0E1           MOV      R0,R4
   \   00000090   ........           _BLF     `?~PRogramObject`,`?~PRogramObject??rA`
   \   00000094   010015E3           TST      R5,#0x1
   \   00000098   0100000A           BEQ      `?~PRODraftSystem_1`
   \   0000009C   0400A0E1           MOV      R0,R4
   \   000000A0   ........           _BLF     `??operator delete`,`??operator delete??rA`
   \                     `?~PRODraftSystem_1`:
   \   000000A4   ........           B        ?Subroutine27

   \                                 In segment CODE, align 4, keep-with-next
   \                     ?Subroutine27:
   \   00000000   F040BDE8           POP      {R4-R7,LR}
   \   00000004   1EFF2FE1           BX       LR               ;; return
   \                     ??Subroutine27_0:
   \   00000008   ........           DC32     `?<Constant "  <Packet>\\r\\n">`
     98          //---------------------------------------------------------------------------
     99          

   \                                 In segment CODE, align 4, keep-with-next
    100          void PRODraftSystem::WriteConfigToFile(TSNConfigString &ConfigString) {
   \                     ??WriteConfigToFile:
   \   00000000   F0472DE9           PUSH     {R4-R10,LR}
    101              AnsiString LocalString;
    102              LocalString += KeyWord(C_PRO_DRAFT_SYSTEM) + CrLfStr;
   \   00000004   ........           LDR      R6,??DataTable7  ;; CrLfStr
   \   00000008   69DF4DE2           SUB      SP,SP,#+420
   \   0000000C   0040A0E1           MOV      R4,R0
   \   00000010   0150A0E1           MOV      R5,R1
    103              LocalString += MakeConfigString();       //common
    104              if (GlobalRefSystem) {
   \   00000014   E8829FE5           LDR      R8,??WriteConfigToFile_1  ;; TabStr1
   \   00000018   0D00A0E1           MOV      R0,SP
   \   0000001C   ........           _BLF     ??AnsiString_1,??AnsiString??rA_1
   \   00000020   411EA0E3           MOV      R1,#+1040
   \   00000024   8C008DE2           ADD      R0,SP,#+140
   \   00000028   ........           _BLF     ??KeyWord,??KeyWord??rA
   \   0000002C   0620A0E1           MOV      R2,R6
   \   00000030   8C108DE2           ADD      R1,SP,#+140
   \   00000034   70008DE2           ADD      R0,SP,#+112
   \   00000038   ........           _BLF     `??operator+`,`??operator+??rA`
   \   0000003C   ........           LDR      R0,??DataTable8  ;; ??npos
   \   00000040   0020A0E3           MOV      R2,#+0
   \   00000044   007090E5           LDR      R7,[R0, #+0]
   \   00000048   70108DE2           ADD      R1,SP,#+112
   \   0000004C   0730A0E1           MOV      R3,R7
   \   00000050   0D00A0E1           MOV      R0,SP
   \   00000054   ........           _BLF     ??append,??append??rA
   \   00000058   0020A0E3           MOV      R2,#+0
   \   0000005C   0110A0E3           MOV      R1,#+1
   \   00000060   70008DE2           ADD      R0,SP,#+112
   \   00000064   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000068   0020A0E3           MOV      R2,#+0
   \   0000006C   0110A0E3           MOV      R1,#+1
   \   00000070   8C008DE2           ADD      R0,SP,#+140
   \   00000074   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000078   A43094E5           LDR      R3,[R4, #+164]
   \   0000007C   0020A0E3           MOV      R2,#+0
   \   00000080   0C3093E5           LDR      R3,[R3, #+12]
   \   00000084   A8108DE2           ADD      R1,SP,#+168
   \   00000088   0400A0E1           MOV      R0,R4
   \   0000008C   0FE0A0E1           MOV      LR,PC
   \   00000090   13FF2FE1           BX       R3
   \   00000094   0730A0E1           MOV      R3,R7
   \   00000098   0020A0E3           MOV      R2,#+0
   \   0000009C   A8108DE2           ADD      R1,SP,#+168
   \   000000A0   0D00A0E1           MOV      R0,SP
   \   000000A4   ........           _BLF     ??append,??append??rA
   \   000000A8   0020A0E3           MOV      R2,#+0
   \   000000AC   0110A0E3           MOV      R1,#+1
   \   000000B0   A8008DE2           ADD      R0,SP,#+168
   \   000000B4   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000000B8   A801D4E5           LDRB     R0,[R4, #+424]
   \   000000BC   000050E3           CMP      R0,#+0
   \   000000C0   1C00000A           BEQ      ??WriteConfigToFile_2
    105                  LocalString += TabStr1 + KeyWord(C_GLOBAL_REFSYS) + CrLfStr;
   \   000000C4   8F10A0E3           MOV      R1,#+143
   \   000000C8   501E81E3           ORR      R1,R1,#0x500
   \   000000CC   1C008DE2           ADD      R0,SP,#+28
   \   000000D0   ........           _BLF     ??KeyWord,??KeyWord??rA
   \   000000D4   1C208DE2           ADD      R2,SP,#+28
   \   000000D8   0810A0E1           MOV      R1,R8
   \   000000DC   54008DE2           ADD      R0,SP,#+84
   \   000000E0   ........           _BLF     `??operator+`,`??operator+??rA`
   \   000000E4   0620A0E1           MOV      R2,R6
   \   000000E8   54108DE2           ADD      R1,SP,#+84
   \   000000EC   38008DE2           ADD      R0,SP,#+56
   \   000000F0   ........           _BLF     `??operator+`,`??operator+??rA`
   \   000000F4   0730A0E1           MOV      R3,R7
   \   000000F8   0020A0E3           MOV      R2,#+0
   \   000000FC   38108DE2           ADD      R1,SP,#+56
   \   00000100   0D00A0E1           MOV      R0,SP
   \   00000104   ........           _BLF     ??append,??append??rA
   \   00000108   0020A0E3           MOV      R2,#+0
   \   0000010C   0110A0E3           MOV      R1,#+1
   \   00000110   38008DE2           ADD      R0,SP,#+56
   \   00000114   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000118   0020A0E3           MOV      R2,#+0
   \   0000011C   0110A0E3           MOV      R1,#+1
   \   00000120   54008DE2           ADD      R0,SP,#+84
   \   00000124   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000128   0020A0E3           MOV      R2,#+0
   \   0000012C   0110A0E3           MOV      R1,#+1
   \   00000130   1C008DE2           ADD      R0,SP,#+28
   \   00000134   ........           _BLF     ??_Tidy,??_Tidy??rA
    106              }
    107              set<PRogramObjectBase *>::iterator pBIt;
    108              for (pBIt = DraftList.begin(); pBIt != DraftList.end(); pBIt++) {
   \                     ??WriteConfigToFile_2:
   \   00000138   649FA0E3           MOV      R9,#+400
   \   0000013C   04A099E7           LDR      R10,[R9, +R4]
   \   00000140   130000EA           B        ??WriteConfigToFile_3
    109                  PRODraft *Element = (PRODraft *)(*pBIt);
   \                     ??WriteConfigToFile_4:
   \   00000144   10309AE5           LDR      R3,[R10, #+16]
    110                  LocalString += Element->MakeConfigString();
   \   00000148   0020A0E3           MOV      R2,#+0
   \   0000014C   0300A0E1           MOV      R0,R3
   \   00000150   A43093E5           LDR      R3,[R3, #+164]
   \   00000154   1C108DE2           ADD      R1,SP,#+28
   \   00000158   0C3093E5           LDR      R3,[R3, #+12]
   \   0000015C   0FE0A0E1           MOV      LR,PC
   \   00000160   13FF2FE1           BX       R3
   \   00000164   0730A0E1           MOV      R3,R7
   \   00000168   0020A0E3           MOV      R2,#+0
   \   0000016C   1C108DE2           ADD      R1,SP,#+28
   \   00000170   0D00A0E1           MOV      R0,SP
   \   00000174   ........           _BLF     ??append,??append??rA
   \   00000178   0020A0E3           MOV      R2,#+0
   \   0000017C   0110A0E3           MOV      R1,#+1
   \   00000180   1C008DE2           ADD      R0,SP,#+28
   \   00000184   ........           _BLF     ??_Tidy,??_Tidy??rA
    111              }
   \   00000188   0A00A0E1           MOV      R0,R10
   \   0000018C   ........           _BLF     ??_IncP,??_IncP??rA
   \   00000190   00A0A0E1           MOV      R10,R0
   \                     ??WriteConfigToFile_3:
   \   00000194   040089E0           ADD      R0,R9,R4
   \   00000198   00005AE1           CMP      R10,R0
   \   0000019C   E8FFFF1A           BNE      ??WriteConfigToFile_4
    112          
    113              LocalString += TabStr1 + KeyWord(C_MAX_SUMMER_DRAFT) + FloatToAnsiString(MaxSummerDraft) + CrLfStr;
   \   000001A0   ........           LDR      R0,??DataTable6  ;; ??MaxSummerDraft
   \   000001A4   0330A0E3           MOV      R3,#+3
   \   000001A8   001090E5           LDR      R1,[R0, #+0]
   \   000001AC   0720A0E3           MOV      R2,#+7
   \   000001B0   4D0F8DE2           ADD      R0,SP,#+308
   \   000001B4   ........           _BLF     ??FloatToAnsiString,??FloatToAnsiString??rA
   \   000001B8   7B10A0E3           MOV      R1,#+123
   \   000001BC   601E81E3           ORR      R1,R1,#0x600
   \   000001C0   460F8DE2           ADD      R0,SP,#+280
   \   000001C4   ........           _BLF     ??KeyWord,??KeyWord??rA
   \   000001C8   462F8DE2           ADD      R2,SP,#+280
   \   000001CC   0810A0E1           MOV      R1,R8
   \   000001D0   FC008DE2           ADD      R0,SP,#+252
   \   000001D4   ........           _BLF     `??operator+`,`??operator+??rA`
   \   000001D8   4D2F8DE2           ADD      R2,SP,#+308
   \   000001DC   FC108DE2           ADD      R1,SP,#+252
   \   000001E0   E0008DE2           ADD      R0,SP,#+224
   \   000001E4   ........           _BLF     `??operator+`,`??operator+??rA`
   \   000001E8   0620A0E1           MOV      R2,R6
   \   000001EC   E0108DE2           ADD      R1,SP,#+224
   \   000001F0   C4008DE2           ADD      R0,SP,#+196
   \   000001F4   ........           _BLF     `??operator+`,`??operator+??rA`
   \   000001F8   0730A0E1           MOV      R3,R7
   \   000001FC   0020A0E3           MOV      R2,#+0
   \   00000200   C4108DE2           ADD      R1,SP,#+196
   \   00000204   0D00A0E1           MOV      R0,SP
   \   00000208   ........           _BLF     ??append,??append??rA
   \   0000020C   0020A0E3           MOV      R2,#+0
   \   00000210   0110A0E3           MOV      R1,#+1
   \   00000214   C4008DE2           ADD      R0,SP,#+196
   \   00000218   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   0000021C   0020A0E3           MOV      R2,#+0
   \   00000220   0110A0E3           MOV      R1,#+1
   \   00000224   E0008DE2           ADD      R0,SP,#+224
   \   00000228   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   0000022C   0020A0E3           MOV      R2,#+0
   \   00000230   0110A0E3           MOV      R1,#+1
   \   00000234   4D0F8DE2           ADD      R0,SP,#+308
   \   00000238   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   0000023C   0020A0E3           MOV      R2,#+0
   \   00000240   0110A0E3           MOV      R1,#+1
   \   00000244   FC008DE2           ADD      R0,SP,#+252
   \   00000248   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   0000024C   0020A0E3           MOV      R2,#+0
   \   00000250   0110A0E3           MOV      R1,#+1
   \   00000254   460F8DE2           ADD      R0,SP,#+280
   \   00000258   ........           _BLF     ??_Tidy,??_Tidy??rA
    114              LocalString += KeyWord(C_PRO_END) + CrLfStr;
   \   0000025C   FA1FA0E3           MOV      R1,#+1000
   \   00000260   5B0F8DE2           ADD      R0,SP,#+364
   \   00000264   ........           _BLF     ??KeyWord,??KeyWord??rA
   \   00000268   0620A0E1           MOV      R2,R6
   \   0000026C   5B1F8DE2           ADD      R1,SP,#+364
   \   00000270   540F8DE2           ADD      R0,SP,#+336
   \   00000274   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000278   0730A0E1           MOV      R3,R7
   \   0000027C   0020A0E3           MOV      R2,#+0
   \   00000280   541F8DE2           ADD      R1,SP,#+336
   \   00000284   0D00A0E1           MOV      R0,SP
   \   00000288   ........           _BLF     ??append,??append??rA
   \   0000028C   0020A0E3           MOV      R2,#+0
   \   00000290   0110A0E3           MOV      R1,#+1
   \   00000294   540F8DE2           ADD      R0,SP,#+336
   \   00000298   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   0000029C   0020A0E3           MOV      R2,#+0
   \   000002A0   0110A0E3           MOV      R1,#+1
   \   000002A4   5B0F8DE2           ADD      R0,SP,#+364
   \   000002A8   ........           _BLF     ??_Tidy,??_Tidy??rA
    115              LocalString += CrLfStr;
   \   000002AC   0730A0E1           MOV      R3,R7
   \   000002B0   0020A0E3           MOV      R2,#+0
   \   000002B4   0610A0E1           MOV      R1,R6
   \   000002B8   0D00A0E1           MOV      R0,SP
   \   000002BC   ........           _BLF     ??append,??append??rA
    116          
    117              ConfigString.AddString(LocalString);
   \   000002C0   0D10A0E1           MOV      R1,SP
   \   000002C4   620F8DE2           ADD      R0,SP,#+392
   \   000002C8   ........           _BLF     ??string,??string??rA
   \   000002CC   621F8DE2           ADD      R1,SP,#+392
   \   000002D0   0500A0E1           MOV      R0,R5
   \   000002D4   ........           _BLF     ??AddString,??AddString??rA
   \   000002D8   0020A0E3           MOV      R2,#+0
   \   000002DC   0110A0E3           MOV      R1,#+1
   \   000002E0   620F8DE2           ADD      R0,SP,#+392
   \   000002E4   ........           _BLF     ??_Tidy,??_Tidy??rA
    118          }
   \   000002E8   0020A0E3           MOV      R2,#+0
   \   000002EC   0110A0E3           MOV      R1,#+1
   \   000002F0   0D00A0E1           MOV      R0,SP
   \   000002F4   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000002F8   69DF8DE2           ADD      SP,SP,#+420
   \   000002FC   F047BDE8           POP      {R4-R10,LR}
   \   00000300   1EFF2FE1           BX       LR               ;; return
   \                     ??WriteConfigToFile_1:
   \   00000304   ........           DC32     TabStr1
    119          //---------------------------------------------------------------------------
    120          

   \                                 In segment CODE, align 4, keep-with-next
    121          int PRODraftSystem::LoadConfigFromFile(TSNConfigString &ConfigString) {
   \                     ??LoadConfigFromFile:
   \   00000000   F04F2DE9           PUSH     {R4-R11,LR}
   \   00000004   80D04DE2           SUB      SP,SP,#+128
   \   00000008   0150A0E1           MOV      R5,R1
    122              SetLineNumber(ConfigString.LineCount);
   \   0000000C   1C1095E5           LDR      R1,[R5, #+28]
   \   00000010   0040A0E1           MOV      R4,R0
   \   00000014   ........           _BLF     ??SetLineNumber,??SetLineNumber??rA
   \   00000018   0180A0E3           MOV      R8,#+1
    123              bool NoError = true;
    124              int ErrorLine = 0;
   \   0000001C   0010A0E3           MOV      R1,#+0
   \   00000020   00108DE5           STR      R1,[SP, #+0]
   \   00000024   516FA0E3           MOV      R6,#+324
   \   00000028   647FA0E3           MOV      R7,#+400
   \   0000002C   4C9FA0E3           MOV      R9,#+304
   \   00000030   4BAFA0E3           MOV      R10,#+300
    125              int Key;
    126              do {
    127                  AnsiString InputKeyWord = ConfigString.NextWord(ErrorLine);
   \                     ??LoadConfigFromFile_1:
   \   00000034   0030A0E3           MOV      R3,#+0
   \   00000038   0D20A0E1           MOV      R2,SP
   \   0000003C   2C108DE2           ADD      R1,SP,#+44
   \   00000040   0500A0E1           MOV      R0,R5
   \   00000044   ........           _BLF     ??NextWord,??NextWord??rA
    128                  if (ErrorLine) {
   \   00000048   00009DE5           LDR      R0,[SP, #+0]
   \   0000004C   000050E3           CMP      R0,#+0
   \   00000050   0B00000A           BEQ      ??LoadConfigFromFile_2
    129                      if (ErrorLine != EOF) {
   \   00000054   010070E3           CMN      R0,#+1
   \   00000058   6201000A           BEQ      ??LoadConfigFromFile_3
    130                          GiveConfigWarning("Draft", ErrorLine);
   \   0000005C   E8169FE5           LDR      R1,??LoadConfigFromFile_4  ;; `?<Constant "Draft">`
   \   00000060   10008DE2           ADD      R0,SP,#+16
   \   00000064   ........           _BLF     ??AnsiString,??AnsiString??rA
   \   00000068   00109DE5           LDR      R1,[SP, #+0]
   \   0000006C   ........           _BLF     ??GiveConfigWarning,??GiveConfigWarning??rA
   \   00000070   0020A0E3           MOV      R2,#+0
   \   00000074   0110A0E3           MOV      R1,#+1
   \   00000078   10008DE2           ADD      R0,SP,#+16
   \                     ??LoadConfigFromFile_5:
   \   0000007C   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000080   580100EA           B        ??LoadConfigFromFile_3
    131                      }
    132                  } else {
    133                      Key = FindConfigKey(InputKeyWord);
   \                     ??LoadConfigFromFile_2:
   \   00000084   2C108DE2           ADD      R1,SP,#+44
   \   00000088   10008DE2           ADD      R0,SP,#+16
   \   0000008C   ........           _BLF     ??string,??string??rA
   \   00000090   10008DE2           ADD      R0,SP,#+16
   \   00000094   ........           _BLF     ??FindConfigKey,??FindConfigKey??rA
   \   00000098   0C008DE5           STR      R0,[SP, #+12]
   \   0000009C   0020A0E3           MOV      R2,#+0
   \   000000A0   0110A0E3           MOV      R1,#+1
   \   000000A4   10008DE2           ADD      R0,SP,#+16
   \   000000A8   ........           _BLF     ??_Tidy,??_Tidy??rA
    134                      switch (Key) {
   \   000000AC   0C009DE5           LDR      R0,[SP, #+12]
   \   000000B0   FA0F50E3           CMP      R0,#+1000
   \   000000B4   4B01000A           BEQ      ??LoadConfigFromFile_3
   \   000000B8   E910A0E3           MOV      R1,#+233
   \   000000BC   C01F81E3           ORR      R1,R1,#0x300
   \   000000C0   010050E1           CMP      R0,R1
   \   000000C4   3E00000A           BEQ      ??LoadConfigFromFile_6
   \   000000C8   011081E2           ADD      R1,R1,#+1
   \   000000CC   010050E1           CMP      R0,R1
   \   000000D0   4401000A           BEQ      ??LoadConfigFromFile_3
   \   000000D4   011081E3           ORR      R1,R1,#0x1
   \   000000D8   010050E1           CMP      R0,R1
   \   000000DC   3C00000A           BEQ      ??LoadConfigFromFile_7
   \   000000E0   FB0F50E3           CMP      R0,#+1004
   \   000000E4   3F01000A           BEQ      ??LoadConfigFromFile_3
   \   000000E8   691F81E2           ADD      R1,R1,#+420
   \   000000EC   010050E1           CMP      R0,R1
   \   000000F0   3E00000A           BEQ      ??LoadConfigFromFile_8
   \   000000F4   640E50E3           CMP      R0,#+1600
   \   000000F8   3A01000A           BEQ      ??LoadConfigFromFile_3
   \   000000FC   BC1081E2           ADD      R1,R1,#+188
   \   00000100   010050E1           CMP      R0,R1
   \   00000104   3C00000A           BEQ      ??LoadConfigFromFile_9
   \   00000108   011081E2           ADD      R1,R1,#+1
   \   0000010C   010050E1           CMP      R0,R1
   \   00000110   5700000A           BEQ      ??LoadConfigFromFile_10
   \   00000114   011081E3           ORR      R1,R1,#0x1
   \   00000118   010050E1           CMP      R0,R1
   \   0000011C   7200000A           BEQ      ??LoadConfigFromFile_11
   \   00000120   011081E2           ADD      R1,R1,#+1
   \   00000124   010050E1           CMP      R0,R1
   \   00000128   8D00000A           BEQ      ??LoadConfigFromFile_12
   \   0000012C   011081E3           ORR      R1,R1,#0x1
   \   00000130   010050E1           CMP      R0,R1
   \   00000134   A800000A           BEQ      ??LoadConfigFromFile_13
   \   00000138   650E50E3           CMP      R0,#+1616
   \   0000013C   C400000A           BEQ      ??LoadConfigFromFile_14
   \   00000140   021081E2           ADD      R1,R1,#+2
   \   00000144   010050E1           CMP      R0,R1
   \   00000148   DF00000A           BEQ      ??LoadConfigFromFile_15
   \   0000014C   011081E2           ADD      R1,R1,#+1
   \   00000150   010050E1           CMP      R0,R1
   \   00000154   FA00000A           BEQ      ??LoadConfigFromFile_16
   \   00000158   291081E3           ORR      R1,R1,#0x29
   \   0000015C   010050E1           CMP      R0,R1
   \   00000160   1501000A           BEQ      ??LoadConfigFromFile_17
   \   00000164   9810A0E3           MOV      R1,#+152
   \   00000168   801E81E3           ORR      R1,R1,#0x800
   \   0000016C   010050E1           CMP      R0,R1
   \   00000170   B910A013           MOVNE    R1,#+185
   \   00000174   B01E8113           ORRNE    R1,R1,#0xB00
   \   00000178   01005011           CMPNE    R0,R1
   \   0000017C   1901000A           BEQ      ??LoadConfigFromFile_3
    135                      default:
    136                          GiveConfigWarning("Draft", InputKeyWord, ConfigString.LineCount);
   \   00000180   2C108DE2           ADD      R1,SP,#+44
   \   00000184   48008DE2           ADD      R0,SP,#+72
   \   00000188   ........           _BLF     ??string,??string??rA
   \   0000018C   B8159FE5           LDR      R1,??LoadConfigFromFile_4  ;; `?<Constant "Draft">`
   \   00000190   64008DE2           ADD      R0,SP,#+100
   \   00000194   ........           _BLF     ??AnsiString,??AnsiString??rA
   \   00000198   1C2095E5           LDR      R2,[R5, #+28]
   \   0000019C   48108DE2           ADD      R1,SP,#+72
   \   000001A0   ........           _BLF     ??GiveConfigWarning_1,??GiveConfigWarning??rA_1
   \   000001A4   0020A0E3           MOV      R2,#+0
   \   000001A8   0110A0E3           MOV      R1,#+1
   \   000001AC   48008DE2           ADD      R0,SP,#+72
   \   000001B0   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000001B4   0020A0E3           MOV      R2,#+0
   \   000001B8   0110A0E3           MOV      R1,#+1
   \   000001BC   64008DE2           ADD      R0,SP,#+100
   \   000001C0   ADFFFFEA           B        ??LoadConfigFromFile_5
    137                          break;
    138                      case C_AI_END:          // If AI type not found can continue with this
    139                      case C_AL_END:
    140                      case C_PRO_END:
    141                      case C_PRO_END_COMMON:
    142                      case C_PRO_END_PRO:
    143                          break;
    144                      case C_DRAFT_END:
    145                          break;
    146                      case C_PRO_START_COMMON:
    147                          PRogramObjectBase::LoadConfigString(ConfigString);
   \                     ??LoadConfigFromFile_6:
   \   000001C4   0510A0E1           MOV      R1,R5
   \   000001C8   0400A0E1           MOV      R0,R4
   \   000001CC   ........           _BLF     ??LoadConfigString_1,??LoadConfigString??rA
   \   000001D0   040100EA           B        ??LoadConfigFromFile_3
    148                          break;
    149                      case C_PRO_START_PRO:
    150                          LoadConfigString(ConfigString);
   \                     ??LoadConfigFromFile_7:
   \   000001D4   A42094E5           LDR      R2,[R4, #+164]
   \   000001D8   0510A0E1           MOV      R1,R5
   \   000001DC   102092E5           LDR      R2,[R2, #+16]
   \   000001E0   0400A0E1           MOV      R0,R4
   \   000001E4   0FE0A0E1           MOV      LR,PC
   \   000001E8   12FF2FE1           BX       R2
   \   000001EC   FD0000EA           B        ??LoadConfigFromFile_3
    151                          break;
    152                      case C_GLOBAL_REFSYS:
    153                          GlobalRefSystem = true;
   \                     ??LoadConfigFromFile_8:
   \   000001F0   0100A0E3           MOV      R0,#+1
   \   000001F4   A801C4E5           STRB     R0,[R4, #+424]
   \   000001F8   FA0000EA           B        ??LoadConfigFromFile_3
    154                          break;
    155                      case C_DRAFT_DF:
    156                          if (!DFPtr)  DFPtr = new PRODraft(C_DRAFT_DF);
   \                     ??LoadConfigFromFile_9:
   \   000001FC   700194E5           LDR      R0,[R4, #+368]
   \   00000200   000050E3           CMP      R0,#+0
   \   00000204   0200001A           BNE      ??LoadConfigFromFile_18
   \   00000208   0100A0E1           MOV      R0,R1
   \   0000020C   ........           _BLF     `??new PRODraft`,`??new PRODraft??rA`
   \   00000210   700184E5           STR      R0,[R4, #+368]
    157                          DraftList.insert(DFPtr);
   \                     ??LoadConfigFromFile_18:
   \   00000214   702194E5           LDR      R2,[R4, #+368]
   \   00000218   041087E0           ADD      R1,R7,R4
   \   0000021C   04008DE2           ADD      R0,SP,#+4
   \   00000220   ........           _BLF     ??insert,??insert??rA
    158                          DFPtr->LoadConfigString(ConfigString);
   \   00000224   702194E5           LDR      R2,[R4, #+368]
   \   00000228   0510A0E1           MOV      R1,R5
   \   0000022C   0200A0E1           MOV      R0,R2
   \   00000230   A42092E5           LDR      R2,[R2, #+164]
   \   00000234   102092E5           LDR      R2,[R2, #+16]
   \   00000238   0FE0A0E1           MOV      LR,PC
   \   0000023C   12FF2FE1           BX       R2
    159                          DFPtr->DataFromOther = DataFromOther;
   \   00000240   0410D6E7           LDRB     R1,[R6, +R4]
   \   00000244   700194E5           LDR      R0,[R4, #+368]
   \   00000248   0010C6E7           STRB     R1,[R6, +R0]
    160                          for (vector<AnalogInput *>::iterator it = DFPtr->AnalogInList.begin(); it != DFPtr->AnalogInList.end(); ++it) {
   \   0000024C   700194E5           LDR      R0,[R4, #+368]
   \   00000250   00B09AE7           LDR      R11,[R10, +R0]
   \                     ??LoadConfigFromFile_19:
   \   00000254   700194E5           LDR      R0,[R4, #+368]
   \   00000258   000099E7           LDR      R0,[R9, +R0]
   \   0000025C   00005BE1           CMP      R11,R0
   \   00000260   E000000A           BEQ      ??LoadConfigFromFile_3
    161                              AnalogInList.push_back(*it);
   \   00000264   ........           LDR      R1,[R11], #+4
   \   00000268   04008AE0           ADD      R0,R10,R4
   \   0000026C   ........           _BLF     ??_Push_back0,??_Push_back0??rA
    162                          }
   \   00000270   F7FFFFEA           B        ??LoadConfigFromFile_19
    163                          break;
    164                      case C_DRAFT_DP:
    165                          if (!DPPtr)   DPPtr = new PRODraft(C_DRAFT_DP);
   \                     ??LoadConfigFromFile_10:
   \   00000274   740194E5           LDR      R0,[R4, #+372]
   \   00000278   000050E3           CMP      R0,#+0
   \   0000027C   0200001A           BNE      ??LoadConfigFromFile_20
   \   00000280   0100A0E1           MOV      R0,R1
   \   00000284   ........           _BLF     `??new PRODraft`,`??new PRODraft??rA`
   \   00000288   740184E5           STR      R0,[R4, #+372]
    166                          DraftList.insert(DPPtr);
   \                     ??LoadConfigFromFile_20:
   \   0000028C   742194E5           LDR      R2,[R4, #+372]
   \   00000290   041087E0           ADD      R1,R7,R4
   \   00000294   04008DE2           ADD      R0,SP,#+4
   \   00000298   ........           _BLF     ??insert,??insert??rA
    167                          DPPtr->LoadConfigString(ConfigString);
   \   0000029C   742194E5           LDR      R2,[R4, #+372]
   \   000002A0   0510A0E1           MOV      R1,R5
   \   000002A4   0200A0E1           MOV      R0,R2
   \   000002A8   A42092E5           LDR      R2,[R2, #+164]
   \   000002AC   102092E5           LDR      R2,[R2, #+16]
   \   000002B0   0FE0A0E1           MOV      LR,PC
   \   000002B4   12FF2FE1           BX       R2
    168                          DPPtr->DataFromOther = DataFromOther;
   \   000002B8   0410D6E7           LDRB     R1,[R6, +R4]
   \   000002BC   740194E5           LDR      R0,[R4, #+372]
   \   000002C0   0010C6E7           STRB     R1,[R6, +R0]
    169                          for (vector<AnalogInput *>::iterator it = DPPtr->AnalogInList.begin(); it != DPPtr->AnalogInList.end(); ++it) {
   \   000002C4   740194E5           LDR      R0,[R4, #+372]
   \   000002C8   00B09AE7           LDR      R11,[R10, +R0]
   \                     ??LoadConfigFromFile_21:
   \   000002CC   740194E5           LDR      R0,[R4, #+372]
   \   000002D0   000099E7           LDR      R0,[R9, +R0]
   \   000002D4   00005BE1           CMP      R11,R0
   \   000002D8   C200000A           BEQ      ??LoadConfigFromFile_3
    170                              AnalogInList.push_back(*it);
   \   000002DC   ........           LDR      R1,[R11], #+4
   \   000002E0   04008AE0           ADD      R0,R10,R4
   \   000002E4   ........           _BLF     ??_Push_back0,??_Push_back0??rA
    171                          }
   \   000002E8   F7FFFFEA           B        ??LoadConfigFromFile_21
    172                          break;
    173                      case C_DRAFT_DS:
    174                          if (!DSPtr)   DSPtr = new PRODraft(C_DRAFT_DS);
   \                     ??LoadConfigFromFile_11:
   \   000002EC   780194E5           LDR      R0,[R4, #+376]
   \   000002F0   000050E3           CMP      R0,#+0
   \   000002F4   0200001A           BNE      ??LoadConfigFromFile_22
   \   000002F8   0100A0E1           MOV      R0,R1
   \   000002FC   ........           _BLF     `??new PRODraft`,`??new PRODraft??rA`
   \   00000300   780184E5           STR      R0,[R4, #+376]
    175                          DraftList.insert(DSPtr);
   \                     ??LoadConfigFromFile_22:
   \   00000304   782194E5           LDR      R2,[R4, #+376]
   \   00000308   041087E0           ADD      R1,R7,R4
   \   0000030C   04008DE2           ADD      R0,SP,#+4
   \   00000310   ........           _BLF     ??insert,??insert??rA
    176                          DSPtr->LoadConfigString(ConfigString);
   \   00000314   782194E5           LDR      R2,[R4, #+376]
   \   00000318   0510A0E1           MOV      R1,R5
   \   0000031C   0200A0E1           MOV      R0,R2
   \   00000320   A42092E5           LDR      R2,[R2, #+164]
   \   00000324   102092E5           LDR      R2,[R2, #+16]
   \   00000328   0FE0A0E1           MOV      LR,PC
   \   0000032C   12FF2FE1           BX       R2
    177                          DSPtr->DataFromOther = DataFromOther;
   \   00000330   0410D6E7           LDRB     R1,[R6, +R4]
   \   00000334   780194E5           LDR      R0,[R4, #+376]
   \   00000338   0010C6E7           STRB     R1,[R6, +R0]
    178                          for (vector<AnalogInput *>::iterator it = DSPtr->AnalogInList.begin(); it != DSPtr->AnalogInList.end(); ++it) {
   \   0000033C   780194E5           LDR      R0,[R4, #+376]
   \   00000340   00B09AE7           LDR      R11,[R10, +R0]
   \                     ??LoadConfigFromFile_23:
   \   00000344   780194E5           LDR      R0,[R4, #+376]
   \   00000348   000099E7           LDR      R0,[R9, +R0]
   \   0000034C   00005BE1           CMP      R11,R0
   \   00000350   A400000A           BEQ      ??LoadConfigFromFile_3
    179                              AnalogInList.push_back(*it);
   \   00000354   ........           LDR      R1,[R11], #+4
   \   00000358   04008AE0           ADD      R0,R10,R4
   \   0000035C   ........           _BLF     ??_Push_back0,??_Push_back0??rA
    180                          }
   \   00000360   F7FFFFEA           B        ??LoadConfigFromFile_23
    181                          break;
    182                      case C_DRAFT_DA:
    183                          if (!DAPtr)       DAPtr = new PRODraft(C_DRAFT_DA);
   \                     ??LoadConfigFromFile_12:
   \   00000364   7C0194E5           LDR      R0,[R4, #+380]
   \   00000368   000050E3           CMP      R0,#+0
   \   0000036C   0200001A           BNE      ??LoadConfigFromFile_24
   \   00000370   0100A0E1           MOV      R0,R1
   \   00000374   ........           _BLF     `??new PRODraft`,`??new PRODraft??rA`
   \   00000378   7C0184E5           STR      R0,[R4, #+380]
    184                          DraftList.insert(DAPtr);
   \                     ??LoadConfigFromFile_24:
   \   0000037C   7C2194E5           LDR      R2,[R4, #+380]
   \   00000380   041087E0           ADD      R1,R7,R4
   \   00000384   04008DE2           ADD      R0,SP,#+4
   \   00000388   ........           _BLF     ??insert,??insert??rA
    185                          DAPtr->LoadConfigString(ConfigString);
   \   0000038C   7C2194E5           LDR      R2,[R4, #+380]
   \   00000390   0510A0E1           MOV      R1,R5
   \   00000394   0200A0E1           MOV      R0,R2
   \   00000398   A42092E5           LDR      R2,[R2, #+164]
   \   0000039C   102092E5           LDR      R2,[R2, #+16]
   \   000003A0   0FE0A0E1           MOV      LR,PC
   \   000003A4   12FF2FE1           BX       R2
    186                          DAPtr->DataFromOther = DataFromOther;
   \   000003A8   0410D6E7           LDRB     R1,[R6, +R4]
   \   000003AC   7C0194E5           LDR      R0,[R4, #+380]
   \   000003B0   0010C6E7           STRB     R1,[R6, +R0]
    187                          for (vector<AnalogInput *>::iterator it = DAPtr->AnalogInList.begin(); it != DAPtr->AnalogInList.end(); ++it) {
   \   000003B4   7C0194E5           LDR      R0,[R4, #+380]
   \   000003B8   00B09AE7           LDR      R11,[R10, +R0]
   \                     ??LoadConfigFromFile_25:
   \   000003BC   7C0194E5           LDR      R0,[R4, #+380]
   \   000003C0   000099E7           LDR      R0,[R9, +R0]
   \   000003C4   00005BE1           CMP      R11,R0
   \   000003C8   8600000A           BEQ      ??LoadConfigFromFile_3
    188                              AnalogInList.push_back(*it);
   \   000003CC   ........           LDR      R1,[R11], #+4
   \   000003D0   04008AE0           ADD      R0,R10,R4
   \   000003D4   ........           _BLF     ??_Push_back0,??_Push_back0??rA
    189                          }
   \   000003D8   F7FFFFEA           B        ??LoadConfigFromFile_25
    190                          break;
    191                      case C_DRAFT_DAP:
    192                          if (!DAPPtr) DAPPtr = new PRODraft(C_DRAFT_DAP);
   \                     ??LoadConfigFromFile_13:
   \   000003DC   800194E5           LDR      R0,[R4, #+384]
   \   000003E0   000050E3           CMP      R0,#+0
   \   000003E4   0200001A           BNE      ??LoadConfigFromFile_26
   \   000003E8   0100A0E1           MOV      R0,R1
   \   000003EC   ........           _BLF     `??new PRODraft`,`??new PRODraft??rA`
   \   000003F0   800184E5           STR      R0,[R4, #+384]
    193                          DraftList.insert(DAPPtr);
   \                     ??LoadConfigFromFile_26:
   \   000003F4   802194E5           LDR      R2,[R4, #+384]
   \   000003F8   041087E0           ADD      R1,R7,R4
   \   000003FC   04008DE2           ADD      R0,SP,#+4
   \   00000400   ........           _BLF     ??insert,??insert??rA
    194                          DAPPtr->LoadConfigString(ConfigString);
   \   00000404   802194E5           LDR      R2,[R4, #+384]
   \   00000408   0510A0E1           MOV      R1,R5
   \   0000040C   0200A0E1           MOV      R0,R2
   \   00000410   A42092E5           LDR      R2,[R2, #+164]
   \   00000414   102092E5           LDR      R2,[R2, #+16]
   \   00000418   0FE0A0E1           MOV      LR,PC
   \   0000041C   12FF2FE1           BX       R2
    195                          DAPPtr->DataFromOther = DataFromOther;
   \   00000420   0410D6E7           LDRB     R1,[R6, +R4]
   \   00000424   800194E5           LDR      R0,[R4, #+384]
   \   00000428   0010C6E7           STRB     R1,[R6, +R0]
    196                          for (vector<AnalogInput *>::iterator it = DAPPtr->AnalogInList.begin(); it != DAPPtr->AnalogInList.end(); ++it) {
   \   0000042C   800194E5           LDR      R0,[R4, #+384]
   \   00000430   00B09AE7           LDR      R11,[R10, +R0]
   \                     ??LoadConfigFromFile_27:
   \   00000434   800194E5           LDR      R0,[R4, #+384]
   \   00000438   000099E7           LDR      R0,[R9, +R0]
   \   0000043C   00005BE1           CMP      R11,R0
   \   00000440   6800000A           BEQ      ??LoadConfigFromFile_3
    197                              AnalogInList.push_back(*it);
   \   00000444   ........           LDR      R1,[R11], #+4
   \   00000448   04008AE0           ADD      R0,R10,R4
   \   0000044C   ........           _BLF     ??_Push_back0,??_Push_back0??rA
    198                          }
   \   00000450   F7FFFFEA           B        ??LoadConfigFromFile_27
    199                          break;
    200                      case C_DRAFT_DAS:
    201                          if (!DASPtr) DASPtr = new PRODraft(C_DRAFT_DAS);
   \                     ??LoadConfigFromFile_14:
   \   00000454   840194E5           LDR      R0,[R4, #+388]
   \   00000458   000050E3           CMP      R0,#+0
   \   0000045C   0200001A           BNE      ??LoadConfigFromFile_28
   \   00000460   650EA0E3           MOV      R0,#+1616
   \   00000464   ........           _BLF     `??new PRODraft`,`??new PRODraft??rA`
   \   00000468   840184E5           STR      R0,[R4, #+388]
    202                          DraftList.insert(DASPtr);
   \                     ??LoadConfigFromFile_28:
   \   0000046C   842194E5           LDR      R2,[R4, #+388]
   \   00000470   041087E0           ADD      R1,R7,R4
   \   00000474   04008DE2           ADD      R0,SP,#+4
   \   00000478   ........           _BLF     ??insert,??insert??rA
    203                          DASPtr->LoadConfigString(ConfigString);
   \   0000047C   842194E5           LDR      R2,[R4, #+388]
   \   00000480   0510A0E1           MOV      R1,R5
   \   00000484   0200A0E1           MOV      R0,R2
   \   00000488   A42092E5           LDR      R2,[R2, #+164]
   \   0000048C   102092E5           LDR      R2,[R2, #+16]
   \   00000490   0FE0A0E1           MOV      LR,PC
   \   00000494   12FF2FE1           BX       R2
    204                          DASPtr->DataFromOther = DataFromOther;
   \   00000498   0410D6E7           LDRB     R1,[R6, +R4]
   \   0000049C   840194E5           LDR      R0,[R4, #+388]
   \   000004A0   0010C6E7           STRB     R1,[R6, +R0]
    205                          for (vector<AnalogInput *>::iterator it = DASPtr->AnalogInList.begin(); it != DASPtr->AnalogInList.end(); ++it) {
   \   000004A4   840194E5           LDR      R0,[R4, #+388]
   \   000004A8   00B09AE7           LDR      R11,[R10, +R0]
   \                     ??LoadConfigFromFile_29:
   \   000004AC   840194E5           LDR      R0,[R4, #+388]
   \   000004B0   000099E7           LDR      R0,[R9, +R0]
   \   000004B4   00005BE1           CMP      R11,R0
   \   000004B8   4A00000A           BEQ      ??LoadConfigFromFile_3
    206                              AnalogInList.push_back(*it);
   \   000004BC   ........           LDR      R1,[R11], #+4
   \   000004C0   04008AE0           ADD      R0,R10,R4
   \   000004C4   ........           _BLF     ??_Push_back0,??_Push_back0??rA
    207                          }
   \   000004C8   F7FFFFEA           B        ??LoadConfigFromFile_29
    208                          break;
    209                      case C_DRAFT_DFP:
    210                          if (!DFPPtr) DFPPtr = new PRODraft(C_DRAFT_DFP);
   \                     ??LoadConfigFromFile_15:
   \   000004CC   880194E5           LDR      R0,[R4, #+392]
   \   000004D0   000050E3           CMP      R0,#+0
   \   000004D4   0200001A           BNE      ??LoadConfigFromFile_30
   \   000004D8   0100A0E1           MOV      R0,R1
   \   000004DC   ........           _BLF     `??new PRODraft`,`??new PRODraft??rA`
   \   000004E0   880184E5           STR      R0,[R4, #+392]
    211                          DraftList.insert(DFPPtr);
   \                     ??LoadConfigFromFile_30:
   \   000004E4   882194E5           LDR      R2,[R4, #+392]
   \   000004E8   041087E0           ADD      R1,R7,R4
   \   000004EC   04008DE2           ADD      R0,SP,#+4
   \   000004F0   ........           _BLF     ??insert,??insert??rA
    212                          DFPPtr->LoadConfigString(ConfigString);
   \   000004F4   882194E5           LDR      R2,[R4, #+392]
   \   000004F8   0510A0E1           MOV      R1,R5
   \   000004FC   0200A0E1           MOV      R0,R2
   \   00000500   A42092E5           LDR      R2,[R2, #+164]
   \   00000504   102092E5           LDR      R2,[R2, #+16]
   \   00000508   0FE0A0E1           MOV      LR,PC
   \   0000050C   12FF2FE1           BX       R2
    213                          DFPPtr->DataFromOther = DataFromOther;
   \   00000510   0410D6E7           LDRB     R1,[R6, +R4]
   \   00000514   880194E5           LDR      R0,[R4, #+392]
   \   00000518   0010C6E7           STRB     R1,[R6, +R0]
    214                          for (vector<AnalogInput *>::iterator it = DFPPtr->AnalogInList.begin(); it != DFPPtr->AnalogInList.end(); ++it) {
   \   0000051C   880194E5           LDR      R0,[R4, #+392]
   \   00000520   00B09AE7           LDR      R11,[R10, +R0]
   \                     ??LoadConfigFromFile_31:
   \   00000524   880194E5           LDR      R0,[R4, #+392]
   \   00000528   000099E7           LDR      R0,[R9, +R0]
   \   0000052C   00005BE1           CMP      R11,R0
   \   00000530   2C00000A           BEQ      ??LoadConfigFromFile_3
    215                              AnalogInList.push_back(*it);
   \   00000534   ........           LDR      R1,[R11], #+4
   \   00000538   04008AE0           ADD      R0,R10,R4
   \   0000053C   ........           _BLF     ??_Push_back0,??_Push_back0??rA
    216                          }
   \   00000540   F7FFFFEA           B        ??LoadConfigFromFile_31
    217                          break;
    218                      case C_DRAFT_DFS:
    219                          if (!DFSPtr) DFSPtr = new PRODraft(C_DRAFT_DFS);
   \                     ??LoadConfigFromFile_16:
   \   00000544   8C0194E5           LDR      R0,[R4, #+396]
   \   00000548   000050E3           CMP      R0,#+0
   \   0000054C   0200001A           BNE      ??LoadConfigFromFile_32
   \   00000550   0100A0E1           MOV      R0,R1
   \   00000554   ........           _BLF     `??new PRODraft`,`??new PRODraft??rA`
   \   00000558   8C0184E5           STR      R0,[R4, #+396]
    220                          DraftList.insert(DFSPtr);
   \                     ??LoadConfigFromFile_32:
   \   0000055C   8C2194E5           LDR      R2,[R4, #+396]
   \   00000560   041087E0           ADD      R1,R7,R4
   \   00000564   04008DE2           ADD      R0,SP,#+4
   \   00000568   ........           _BLF     ??insert,??insert??rA
    221                          DFSPtr->LoadConfigString(ConfigString);
   \   0000056C   8C2194E5           LDR      R2,[R4, #+396]
   \   00000570   0510A0E1           MOV      R1,R5
   \   00000574   0200A0E1           MOV      R0,R2
   \   00000578   A42092E5           LDR      R2,[R2, #+164]
   \   0000057C   102092E5           LDR      R2,[R2, #+16]
   \   00000580   0FE0A0E1           MOV      LR,PC
   \   00000584   12FF2FE1           BX       R2
    222                          DFSPtr->DataFromOther = DataFromOther;
   \   00000588   0410D6E7           LDRB     R1,[R6, +R4]
   \   0000058C   8C0194E5           LDR      R0,[R4, #+396]
   \   00000590   0010C6E7           STRB     R1,[R6, +R0]
    223                          for (vector<AnalogInput *>::iterator it = DFSPtr->AnalogInList.begin(); it != DFSPtr->AnalogInList.end(); ++it) {
   \   00000594   8C0194E5           LDR      R0,[R4, #+396]
   \   00000598   00B09AE7           LDR      R11,[R10, +R0]
   \                     ??LoadConfigFromFile_33:
   \   0000059C   8C0194E5           LDR      R0,[R4, #+396]
   \   000005A0   000099E7           LDR      R0,[R9, +R0]
   \   000005A4   00005BE1           CMP      R11,R0
   \   000005A8   0E00000A           BEQ      ??LoadConfigFromFile_3
    224                              AnalogInList.push_back(*it);
   \   000005AC   ........           LDR      R1,[R11], #+4
   \   000005B0   04008AE0           ADD      R0,R10,R4
   \   000005B4   ........           _BLF     ??_Push_back0,??_Push_back0??rA
    225                          }
   \   000005B8   F7FFFFEA           B        ??LoadConfigFromFile_33
    226                          break;
    227                      case C_MAX_SUMMER_DRAFT:
    228                          MaxSummerDraft = ConfigString.ReadDouble(ErrorLine);
   \                     ??LoadConfigFromFile_17:
   \   000005BC   0020A0E3           MOV      R2,#+0
   \   000005C0   0D10A0E1           MOV      R1,SP
   \   000005C4   0500A0E1           MOV      R0,R5
   \   000005C8   ........           _BLF     ??ReadDouble,??ReadDouble??rA
   \   000005CC   ........           _BLF     __doubleToFloat,??__doubleToFloat??rA
   \   000005D0   ........           LDR      R1,??DataTable6  ;; ??MaxSummerDraft
   \   000005D4   000081E5           STR      R0,[R1, #+0]
    229                          NoError = !ErrorLine;
   \   000005D8   00009DE5           LDR      R0,[SP, #+0]
   \   000005DC   000050E3           CMP      R0,#+0
   \   000005E0   0180A003           MOVEQ    R8,#+1
   \   000005E4   0080A013           MOVNE    R8,#+0
    230                          break;
    231                      }
    232                  }
    233              }while (NoError && (ErrorLine != EOF) && (Key != C_PRO_END));
   \                     ??LoadConfigFromFile_3:
   \   000005E8   0020A0E3           MOV      R2,#+0
   \   000005EC   0110A0E3           MOV      R1,#+1
   \   000005F0   2C008DE2           ADD      R0,SP,#+44
   \   000005F4   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000005F8   000058E3           CMP      R8,#+0
   \   000005FC   00009D15           LDRNE    R0,[SP, #+0]
   \   00000600   01007013           CMNNE    R0,#+1
   \   00000604   0C009D15           LDRNE    R0,[SP, #+12]
   \   00000608   FA0F5013           CMPNE    R0,#+1000
   \   0000060C   88FEFF1A           BNE      ??LoadConfigFromFile_1
    234              AddAlarms(CompleteAlarmInfoList);
   \   00000610   FC1084E2           ADD      R1,R4,#+252
   \   00000614   0400A0E1           MOV      R0,R4
   \   00000618   ........           _BLF     ??AddAlarms,??AddAlarms??rA
    235              set<PRogramObjectBase *>::iterator pBIt;
    236              for (pBIt = DraftList.begin(); pBIt != DraftList.end(); pBIt++) {
   \   0000061C   045097E7           LDR      R5,[R7, +R4]
   \   00000620   050000EA           B        ??LoadConfigFromFile_34
    237                  PRODraft *Element = (PRODraft *)(*pBIt);
    238                  Element->AddCompleteList(CompleteAlarmInfoList);
   \                     ??LoadConfigFromFile_35:
   \   00000624   100095E5           LDR      R0,[R5, #+16]
   \   00000628   FC1084E2           ADD      R1,R4,#+252
   \   0000062C   ........           _BLF     ??AddCompleteList,??AddCompleteList??rA
    239              }
   \   00000630   0500A0E1           MOV      R0,R5
   \   00000634   ........           _BLF     ??_IncP,??_IncP??rA
   \   00000638   0050A0E1           MOV      R5,R0
   \                     ??LoadConfigFromFile_34:
   \   0000063C   040087E0           ADD      R0,R7,R4
   \   00000640   000055E1           CMP      R5,R0
   \   00000644   F6FFFF1A           BNE      ??LoadConfigFromFile_35
    240              if (DFPPtr && DFSPtr && DAPPtr && DASPtr && DPPtr && DSPtr) {
   \   00000648   780194E5           LDR      R0,[R4, #+376]
   \   0000064C   741194E5           LDR      R1,[R4, #+372]
   \   00000650   842194E5           LDR      R2,[R4, #+388]
   \   00000654   803194E5           LDR      R3,[R4, #+384]
   \   00000658   8C5194E5           LDR      R5,[R4, #+396]
   \   0000065C   887194E5           LDR      R7,[R4, #+392]
   \   00000660   000057E3           CMP      R7,#+0
   \   00000664   00005513           CMPNE    R5,#+0
   \   00000668   00005313           CMPNE    R3,#+0
   \   0000066C   00005213           CMPNE    R2,#+0
   \   00000670   00005113           CMPNE    R1,#+0
   \   00000674   00005013           CMPNE    R0,#+0
   \   00000678   0200000A           BEQ      ??LoadConfigFromFile_36
    241                  DraftSystem = DftFwdMidShipAftPS;
   \   0000067C   0700A0E3           MOV      R0,#+7
   \                     ??LoadConfigFromFile_37:
   \   00000680   6C01C4E5           STRB     R0,[R4, #+364]
   \   00000684   2B0000EA           B        ??LoadConfigFromFile_38
    242              } else if (DFPtr && DPPtr && DSPtr && DAPtr) {
   \                     ??LoadConfigFromFile_36:
   \   00000688   709194E5           LDR      R9,[R4, #+368]
   \   0000068C   7C8194E5           LDR      R8,[R4, #+380]
   \   00000690   000059E3           CMP      R9,#+0
   \   00000694   0C00000A           BEQ      ??LoadConfigFromFile_39
   \   00000698   000051E3           CMP      R1,#+0
   \   0000069C   00005013           CMPNE    R0,#+0
   \   000006A0   00005813           CMPNE    R8,#+0
    243                  DraftSystem = DftFwdMidShipAft;
   \   000006A4   0100A013           MOVNE    R0,#+1
   \   000006A8   F4FFFF1A           BNE      ??LoadConfigFromFile_37
   \   000006AC   000058E3           CMP      R8,#+0
   \   000006B0   0100000A           BEQ      ??LoadConfigFromFile_40
    244              } else if (DFPtr && DAPtr) {
    245                  DraftSystem = DftFwdAft;
   \   000006B4   0000A0E3           MOV      R0,#+0
   \   000006B8   F0FFFFEA           B        ??LoadConfigFromFile_37
    246              } else if (DFPtr && DAPPtr && DASPtr) {
   \                     ??LoadConfigFromFile_40:
   \   000006BC   000053E3           CMP      R3,#+0
   \   000006C0   00005213           CMPNE    R2,#+0
    247                  DraftSystem = DftFwdAPortAStbd;
   \   000006C4   0200A013           MOVNE    R0,#+2
   \   000006C8   ECFFFF1A           BNE      ??LoadConfigFromFile_37
    248              } else if (DFPPtr && DFSPtr && DAPPtr && DASPtr) {
   \                     ??LoadConfigFromFile_39:
   \   000006CC   000057E3           CMP      R7,#+0
   \   000006D0   00005513           CMPNE    R5,#+0
   \   000006D4   00005313           CMPNE    R3,#+0
   \   000006D8   00005213           CMPNE    R2,#+0
    249                  DraftSystem = DftCorners;
   \   000006DC   0400A013           MOVNE    R0,#+4
   \   000006E0   E6FFFF1A           BNE      ??LoadConfigFromFile_37
    250              } else if (DFPtr) {
   \   000006E4   000059E3           CMP      R9,#+0
    251                  DraftSystem = DftAftOnly;
   \   000006E8   0600A013           MOVNE    R0,#+6
   \   000006EC   E3FFFF1A           BNE      ??LoadConfigFromFile_37
    252              } else if (DAPtr) {
   \   000006F0   000058E3           CMP      R8,#+0
    253                  DraftSystem = DftFwdOnly;
   \   000006F4   0500A013           MOVNE    R0,#+5
   \   000006F8   6C01C415           STRBNE   R0,[R4, #+364]
   \   000006FC   0D00001A           BNE      ??LoadConfigFromFile_38
    254              } else if (DataFromOther) {
   \   00000700   0400D6E7           LDRB     R0,[R6, +R4]
   \   00000704   000050E3           CMP      R0,#+0
    255                  DraftSystem = DftFromOther;
   \   00000708   0300A013           MOVNE    R0,#+3
   \   0000070C   DBFFFF1A           BNE      ??LoadConfigFromFile_37
    256              } else {
    257                  DraftSystem = DftNoDef;
    258                  GiveConfigWarning((AnsiString)"Draft:\nUnsupported configuration.\nSome sensors missing?\n");
   \   00000710   38109FE5           LDR      R1,??LoadConfigFromFile_4+0x4  ;; `?<Constant "Draft">` + 8
   \   00000714   0800A0E3           MOV      R0,#+8
   \   00000718   6C01C4E5           STRB     R0,[R4, #+364]
   \   0000071C   10008DE2           ADD      R0,SP,#+16
   \   00000720   ........           _BLF     ??AnsiString,??AnsiString??rA
   \   00000724   ........           _BLF     ??GiveConfigWarning_2,??GiveConfigWarning??rA_2
   \   00000728   0020A0E3           MOV      R2,#+0
   \   0000072C   0110A0E3           MOV      R1,#+1
   \   00000730   10008DE2           ADD      R0,SP,#+16
   \   00000734   ........           _BLF     ??_Tidy,??_Tidy??rA
    259              }
    260              SetChildUserRights();
   \                     ??LoadConfigFromFile_38:
   \   00000738   0400A0E1           MOV      R0,R4
   \   0000073C   ........           _BLF     ??SetChildUserRights,??SetChildUserRights??rA
    261              return ErrorLine;
   \   00000740   00009DE5           LDR      R0,[SP, #+0]
   \   00000744   80D08DE2           ADD      SP,SP,#+128
   \   00000748   ........           B        ?Subroutine28
   \                     ??LoadConfigFromFile_4:
   \   0000074C   ........           DC32     `?<Constant "Draft">`
   \   00000750   ........           DC32     `?<Constant "Draft">` + 8
    262          
    263          }

   \                                 In segment CODE, align 4, keep-with-next
   \                     ?Subroutine28:
   \   00000000   F04FBDE8           POP      {R4-R11,LR}
   \   00000004   1EFF2FE1           BX       LR               ;; return
   \                     ??Subroutine28_0:
   \   00000008   ........           DC32     NewLineStr
   \   0000000C   ........           DC32     `?<Constant "Draft ">`
    264          
    265          ///////////////////////////////////////////////////////////////
    266          //
    267          // Routines for Saving of Settings
    268          //
    269          ///////////////////////////////////////////////////////////////
    270          

   \                                 In segment CODE, align 4, keep-with-next
    271          void PRODraftSystem::SaveSettings(TSNConfigString *SettingsString) {
   \                     ??SaveSettings:
   \   00000000   F0412DE9           PUSH     {R4-R8,LR}
   \   00000004   FCD04DE2           SUB      SP,SP,#+252
   \   00000008   0040A0E1           MOV      R4,R0
    272              if (IsModified || WriteAll) {
   \   0000000C   0000D4E5           LDRB     R0,[R4, #+0]
   \   00000010   0150A0E1           MOV      R5,R1
   \   00000014   000050E3           CMP      R0,#+0
   \   00000018   94019F05           LDREQ    R0,??SaveSettings_1  ;; ??WriteAll
   \   0000001C   0000D005           LDRBEQ   R0,[R0, #+0]
   \   00000020   00005003           CMPEQ    R0,#+0
   \   00000024   6000000A           BEQ      ??SaveSettings_2
    273                  IsModified = false;
    274                  AnsiString LocalString = KeyWord(C_PRO_DRAFT_SYSTEM) + CrLfStr;
   \   00000028   ........           LDR      R6,??DataTable7  ;; CrLfStr
   \   0000002C   0000A0E3           MOV      R0,#+0
   \   00000030   0000C4E5           STRB     R0,[R4, #+0]
   \   00000034   411EA0E3           MOV      R1,#+1040
   \   00000038   1C008DE2           ADD      R0,SP,#+28
   \   0000003C   ........           _BLF     ??KeyWord,??KeyWord??rA
   \   00000040   0620A0E1           MOV      R2,R6
   \   00000044   1C108DE2           ADD      R1,SP,#+28
   \   00000048   0D00A0E1           MOV      R0,SP
   \   0000004C   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000050   0D10A0E1           MOV      R1,SP
   \   00000054   C4008DE2           ADD      R0,SP,#+196
   \   00000058   ........           _BLF     ??AnsiString_2,??AnsiString??rA_2
   \   0000005C   0020A0E3           MOV      R2,#+0
   \   00000060   0110A0E3           MOV      R1,#+1
   \   00000064   0D00A0E1           MOV      R0,SP
   \   00000068   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   0000006C   0020A0E3           MOV      R2,#+0
   \   00000070   0110A0E3           MOV      R1,#+1
   \   00000074   1C008DE2           ADD      R0,SP,#+28
   \   00000078   ........           _BLF     ??_Tidy,??_Tidy??rA
    275                  SettingsString->AddString(LocalString);
   \   0000007C   C4108DE2           ADD      R1,SP,#+196
   \   00000080   38008DE2           ADD      R0,SP,#+56
   \   00000084   ........           _BLF     ??string,??string??rA
   \   00000088   38108DE2           ADD      R1,SP,#+56
   \   0000008C   0500A0E1           MOV      R0,R5
   \   00000090   ........           _BLF     ??AddString,??AddString??rA
   \   00000094   0020A0E3           MOV      R2,#+0
   \   00000098   0110A0E3           MOV      R1,#+1
   \   0000009C   38008DE2           ADD      R0,SP,#+56
   \   000000A0   ........           _BLF     ??_Tidy,??_Tidy??rA
    276                  set<PRogramObjectBase *>::iterator pBIt;
    277                  for (pBIt = DraftList.begin(); pBIt != DraftList.end(); pBIt++) {
   \   000000A4   647FA0E3           MOV      R7,#+400
   \   000000A8   048097E7           LDR      R8,[R7, +R4]
   \   000000AC   090000EA           B        ??SaveSettings_3
    278                      PRODraft *Element = (PRODraft *)(*pBIt);
   \                     ??SaveSettings_4:
   \   000000B0   102098E5           LDR      R2,[R8, #+16]
    279                      Element->SaveSettings(SettingsString);
   \   000000B4   0510A0E1           MOV      R1,R5
   \   000000B8   0200A0E1           MOV      R0,R2
   \   000000BC   A42092E5           LDR      R2,[R2, #+164]
   \   000000C0   602092E5           LDR      R2,[R2, #+96]
   \   000000C4   0FE0A0E1           MOV      LR,PC
   \   000000C8   12FF2FE1           BX       R2
    280                  }
   \   000000CC   0800A0E1           MOV      R0,R8
   \   000000D0   ........           _BLF     ??_IncP,??_IncP??rA
   \   000000D4   0080A0E1           MOV      R8,R0
   \                     ??SaveSettings_3:
   \   000000D8   040087E0           ADD      R0,R7,R4
   \   000000DC   000058E1           CMP      R8,R0
   \   000000E0   F2FFFF1A           BNE      ??SaveSettings_4
    281                  LocalString = KeyWord(C_PRO_END) + CrLfStr + CrLfStr;
   \   000000E4   FA1FA0E3           MOV      R1,#+1000
   \   000000E8   8C008DE2           ADD      R0,SP,#+140
   \   000000EC   ........           _BLF     ??KeyWord,??KeyWord??rA
   \   000000F0   0620A0E1           MOV      R2,R6
   \   000000F4   8C108DE2           ADD      R1,SP,#+140
   \   000000F8   70008DE2           ADD      R0,SP,#+112
   \   000000FC   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000100   0620A0E1           MOV      R2,R6
   \   00000104   70108DE2           ADD      R1,SP,#+112
   \   00000108   54008DE2           ADD      R0,SP,#+84
   \   0000010C   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000110   54108DE2           ADD      R1,SP,#+84
   \   00000114   E0008DE2           ADD      R0,SP,#+224
   \   00000118   ........           _BLF     ??AnsiString_2,??AnsiString??rA_2
   \   0000011C   ........           LDR      R1,??DataTable8  ;; ??npos
   \   00000120   0020A0E3           MOV      R2,#+0
   \   00000124   003091E5           LDR      R3,[R1, #+0]
   \   00000128   0010A0E1           MOV      R1,R0
   \   0000012C   C4008DE2           ADD      R0,SP,#+196
   \   00000130   ........           _BLF     ??assign,??assign??rA
   \   00000134   0020A0E3           MOV      R2,#+0
   \   00000138   0110A0E3           MOV      R1,#+1
   \   0000013C   E0008DE2           ADD      R0,SP,#+224
   \   00000140   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000144   0020A0E3           MOV      R2,#+0
   \   00000148   0110A0E3           MOV      R1,#+1
   \   0000014C   54008DE2           ADD      R0,SP,#+84
   \   00000150   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000154   0020A0E3           MOV      R2,#+0
   \   00000158   0110A0E3           MOV      R1,#+1
   \   0000015C   70008DE2           ADD      R0,SP,#+112
   \   00000160   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000164   0020A0E3           MOV      R2,#+0
   \   00000168   0110A0E3           MOV      R1,#+1
   \   0000016C   8C008DE2           ADD      R0,SP,#+140
   \   00000170   ........           _BLF     ??_Tidy,??_Tidy??rA
    282                  SettingsString->AddString(LocalString);
   \   00000174   C4108DE2           ADD      R1,SP,#+196
   \   00000178   A8008DE2           ADD      R0,SP,#+168
   \   0000017C   ........           _BLF     ??string,??string??rA
   \   00000180   A8108DE2           ADD      R1,SP,#+168
   \   00000184   0500A0E1           MOV      R0,R5
   \   00000188   ........           _BLF     ??AddString,??AddString??rA
   \   0000018C   0020A0E3           MOV      R2,#+0
   \   00000190   0110A0E3           MOV      R1,#+1
   \   00000194   A8008DE2           ADD      R0,SP,#+168
   \   00000198   ........           _BLF     ??_Tidy,??_Tidy??rA
    283              }
   \   0000019C   0020A0E3           MOV      R2,#+0
   \   000001A0   0110A0E3           MOV      R1,#+1
   \   000001A4   C4008DE2           ADD      R0,SP,#+196
   \   000001A8   ........           _BLF     ??_Tidy,??_Tidy??rA
    284          }
   \                     ??SaveSettings_2:
   \   000001AC   FCD08DE2           ADD      SP,SP,#+252
   \   000001B0   ........           B        ?Subroutine29
   \                     ??SaveSettings_1:
   \   000001B4   ........           DC32     ??WriteAll

   \                                 In segment CODE, align 4, keep-with-next
   \                     ?Subroutine29:
   \   00000000   F041BDE8           POP      {R4-R8,LR}
   \   00000004   1EFF2FE1           BX       LR               ;; return
    285          

   \                                 In segment CODE, align 4, keep-with-next
    286          bool PRODraftSystem::RestoreSettings(TSNConfigString *SettingsString) {
   \                     ??RestoreSettings:
   \   00000000   F04F2DE9           PUSH     {R4-R11,LR}
    287              bool NoError = true;
    288              int ErrorLine = 0;
   \   00000004   ........           LDR      R9,??Subroutine28_0  ;; NewLineStr
   \   00000008   ........           LDR      R10,??Subroutine28_0+0x4  ;; `?<Constant "Draft ">`
   \   0000000C   78DF4DE2           SUB      SP,SP,#+480
   \   00000010   0040A0E1           MOV      R4,R0
   \   00000014   0150A0E1           MOV      R5,R1
   \   00000018   0170A0E3           MOV      R7,#+1
   \   0000001C   0010A0E3           MOV      R1,#+0
   \   00000020   00108DE5           STR      R1,[SP, #+0]
   \   00000024   0180E0E1           MVN      R8,R1
    289              int Key;
    290              do {
    291                  AnsiString InputKeyWord = SettingsString->NextWord(ErrorLine);
   \                     ??RestoreSettings_1:
   \   00000028   0030A0E3           MOV      R3,#+0
   \   0000002C   0D20A0E1           MOV      R2,SP
   \   00000030   74108DE2           ADD      R1,SP,#+116
   \   00000034   0500A0E1           MOV      R0,R5
   \   00000038   ........           _BLF     ??NextWord,??NextWord??rA
    292                  if (ErrorLine) {
   \   0000003C   00009DE5           LDR      R0,[SP, #+0]
   \   00000040   000050E3           CMP      R0,#+0
   \   00000044   3900000A           BEQ      ??RestoreSettings_2
    293                      if (ErrorLine != EOF) {
   \   00000048   080050E1           CMP      R0,R8
   \   0000004C   EB00000A           BEQ      ??RestoreSettings_3
    294                          RestoreSettingsWarning((AnsiString)"Draft " + Name + ":\nUnknown error started at line:" + (AnsiString)ErrorLine + NewLineStr);
   \   00000050   0010A0E1           MOV      R1,R0
   \   00000054   C8008DE2           ADD      R0,SP,#+200
   \   00000058   ........           _BLF     ??AnsiString_3,??AnsiString??rA_3
   \   0000005C   00B0A0E1           MOV      R11,R0
   \   00000060   0A10A0E1           MOV      R1,R10
   \   00000064   AC008DE2           ADD      R0,SP,#+172
   \   00000068   ........           _BLF     ??AnsiString,??AnsiString??rA
   \   0000006C   442084E2           ADD      R2,R4,#+68
   \   00000070   0010A0E1           MOV      R1,R0
   \   00000074   04008DE2           ADD      R0,SP,#+4
   \   00000078   ........           _BLF     `??operator+`,`??operator+??rA`
   \   0000007C   08208AE2           ADD      R2,R10,#+8
   \   00000080   04108DE2           ADD      R1,SP,#+4
   \   00000084   58008DE2           ADD      R0,SP,#+88
   \   00000088   ........           _BLF     `??operator+_1`,`??operator+??rA_1`
   \   0000008C   0B20A0E1           MOV      R2,R11
   \   00000090   58108DE2           ADD      R1,SP,#+88
   \   00000094   3C008DE2           ADD      R0,SP,#+60
   \   00000098   ........           _BLF     `??operator+`,`??operator+??rA`
   \   0000009C   0920A0E1           MOV      R2,R9
   \   000000A0   3C108DE2           ADD      R1,SP,#+60
   \   000000A4   20008DE2           ADD      R0,SP,#+32
   \   000000A8   ........           _BLF     `??operator+`,`??operator+??rA`
   \   000000AC   20108DE2           ADD      R1,SP,#+32
   \   000000B0   90008DE2           ADD      R0,SP,#+144
   \   000000B4   ........           _BLF     ??AnsiString_2,??AnsiString??rA_2
   \   000000B8   ........           _BLF     ??RestoreSettingsWarning,??RestoreSettingsWarning??rA
   \   000000BC   0020A0E3           MOV      R2,#+0
   \   000000C0   0110A0E3           MOV      R1,#+1
   \   000000C4   90008DE2           ADD      R0,SP,#+144
   \   000000C8   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000000CC   0020A0E3           MOV      R2,#+0
   \   000000D0   0110A0E3           MOV      R1,#+1
   \   000000D4   20008DE2           ADD      R0,SP,#+32
   \   000000D8   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000000DC   0020A0E3           MOV      R2,#+0
   \   000000E0   0110A0E3           MOV      R1,#+1
   \   000000E4   3C008DE2           ADD      R0,SP,#+60
   \   000000E8   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000000EC   0020A0E3           MOV      R2,#+0
   \   000000F0   0110A0E3           MOV      R1,#+1
   \   000000F4   C8008DE2           ADD      R0,SP,#+200
   \   000000F8   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000000FC   0020A0E3           MOV      R2,#+0
   \   00000100   0110A0E3           MOV      R1,#+1
   \   00000104   58008DE2           ADD      R0,SP,#+88
   \   00000108   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   0000010C   0020A0E3           MOV      R2,#+0
   \   00000110   0110A0E3           MOV      R1,#+1
   \   00000114   04008DE2           ADD      R0,SP,#+4
   \   00000118   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   0000011C   0020A0E3           MOV      R2,#+0
   \   00000120   0110A0E3           MOV      R1,#+1
   \   00000124   AC008DE2           ADD      R0,SP,#+172
   \                     ??RestoreSettings_4:
   \   00000128   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   0000012C   B30000EA           B        ??RestoreSettings_3
    295                      }
    296                  } else {
    297                      Key = FindConfigKey(InputKeyWord);
   \                     ??RestoreSettings_2:
   \   00000130   74108DE2           ADD      R1,SP,#+116
   \   00000134   04008DE2           ADD      R0,SP,#+4
   \   00000138   ........           _BLF     ??string,??string??rA
   \   0000013C   04008DE2           ADD      R0,SP,#+4
   \   00000140   ........           _BLF     ??FindConfigKey,??FindConfigKey??rA
   \   00000144   0060A0E1           MOV      R6,R0
   \   00000148   0020A0E3           MOV      R2,#+0
   \   0000014C   0110A0E3           MOV      R1,#+1
   \   00000150   04008DE2           ADD      R0,SP,#+4
   \   00000154   ........           _BLF     ??_Tidy,??_Tidy??rA
    298                      switch (Key) {
   \   00000158   FA0F56E3           CMP      R6,#+1000
   \   0000015C   EA10A013           MOVNE    R1,#+234
   \   00000160   C01F8113           ORRNE    R1,R1,#0x300
   \   00000164   01005611           CMPNE    R6,R1
   \   00000168   FB0F5613           CMPNE    R6,#+1004
   \   0000016C   AF10A013           MOVNE    R1,#+175
   \   00000170   501E8113           ORRNE    R1,R1,#0x500
   \   00000174   01005611           CMPNE    R6,R1
   \   00000178   640E5613           CMPNE    R6,#+1600
   \   0000017C   7900000A           BEQ      ??RestoreSettings_5
   \   00000180   9C1081E2           ADD      R1,R1,#+156
   \   00000184   010056E1           CMP      R6,R1
   \   00000188   8500000A           BEQ      ??RestoreSettings_6
   \   0000018C   011081E2           ADD      R1,R1,#+1
   \   00000190   010056E1           CMP      R6,R1
   \   00000194   8400000A           BEQ      ??RestoreSettings_7
   \   00000198   011081E3           ORR      R1,R1,#0x1
   \   0000019C   010056E1           CMP      R6,R1
   \   000001A0   8300000A           BEQ      ??RestoreSettings_8
   \   000001A4   011081E2           ADD      R1,R1,#+1
   \   000001A8   010056E1           CMP      R6,R1
   \   000001AC   8200000A           BEQ      ??RestoreSettings_9
   \   000001B0   011081E3           ORR      R1,R1,#0x1
   \   000001B4   010056E1           CMP      R6,R1
   \   000001B8   8100000A           BEQ      ??RestoreSettings_10
   \   000001BC   650E56E3           CMP      R6,#+1616
   \   000001C0   8100000A           BEQ      ??RestoreSettings_11
   \   000001C4   021081E2           ADD      R1,R1,#+2
   \   000001C8   010056E1           CMP      R6,R1
   \   000001CC   8000000A           BEQ      ??RestoreSettings_12
   \   000001D0   011081E2           ADD      R1,R1,#+1
   \   000001D4   010056E1           CMP      R6,R1
   \   000001D8   7F00000A           BEQ      ??RestoreSettings_13
   \   000001DC   7B1F81E2           ADD      R1,R1,#+492
   \   000001E0   010056E1           CMP      R6,R1
   \   000001E4   01108113           ORRNE    R1,R1,#0x1
   \   000001E8   01005611           CMPNE    R6,R1
   \   000001EC   09108112           ADDNE    R1,R1,#+9
   \   000001F0   01005611           CMPNE    R6,R1
   \   000001F4   01108113           ORRNE    R1,R1,#0x1
   \   000001F8   01005611           CMPNE    R6,R1
   \   000001FC   01108112           ADDNE    R1,R1,#+1
   \   00000200   01005611           CMPNE    R6,R1
   \   00000204   01108113           ORRNE    R1,R1,#0x1
   \   00000208   01005611           CMPNE    R6,R1
   \   0000020C   01108112           ADDNE    R1,R1,#+1
   \   00000210   01005611           CMPNE    R6,R1
   \   00000214   01108113           ORRNE    R1,R1,#0x1
   \   00000218   01005611           CMPNE    R6,R1
   \   0000021C   05108112           ADDNE    R1,R1,#+5
   \   00000220   01005611           CMPNE    R6,R1
   \   00000224   01108113           ORRNE    R1,R1,#0x1
   \   00000228   01005611           CMPNE    R6,R1
   \   0000022C   4F00000A           BEQ      ??RestoreSettings_14
   \   00000230   451081E2           ADD      R1,R1,#+69
   \   00000234   010056E1           CMP      R6,R1
   \   00000238   B910A013           MOVNE    R1,#+185
   \   0000023C   B01E8113           ORRNE    R1,R1,#0xB00
   \   00000240   01005611           CMPNE    R6,R1
   \   00000244   4700000A           BEQ      ??RestoreSettings_5
    299                      default:
    300                          NoError = false;
    301                          RestoreSettingsWarning((AnsiString)"Draft " + Name + ":\nThe keyword " + InputKeyWord + " is not allowed here!! Line:" + (AnsiString)SettingsString->LineCount + NewLineStr);
   \   00000248   1C1095E5           LDR      R1,[R5, #+28]
   \   0000024C   0070A0E3           MOV      R7,#+0
   \   00000250   710F8DE2           ADD      R0,SP,#+452
   \   00000254   ........           _BLF     ??AnsiString_3,??AnsiString??rA_3
   \   00000258   00B0A0E1           MOV      R11,R0
   \   0000025C   0A10A0E1           MOV      R1,R10
   \   00000260   6A0F8DE2           ADD      R0,SP,#+424
   \   00000264   ........           _BLF     ??AnsiString,??AnsiString??rA
   \   00000268   0010A0E1           MOV      R1,R0
   \   0000026C   442084E2           ADD      R2,R4,#+68
   \   00000270   630F8DE2           ADD      R0,SP,#+396
   \   00000274   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000278   2C208AE2           ADD      R2,R10,#+44
   \   0000027C   631F8DE2           ADD      R1,SP,#+396
   \   00000280   5C0F8DE2           ADD      R0,SP,#+368
   \   00000284   ........           _BLF     `??operator+_1`,`??operator+??rA_1`
   \   00000288   74208DE2           ADD      R2,SP,#+116
   \   0000028C   5C1F8DE2           ADD      R1,SP,#+368
   \   00000290   550F8DE2           ADD      R0,SP,#+340
   \   00000294   ........           _BLF     `??operator+`,`??operator+??rA`
   \   00000298   3C208AE2           ADD      R2,R10,#+60
   \   0000029C   551F8DE2           ADD      R1,SP,#+340
   \   000002A0   4E0F8DE2           ADD      R0,SP,#+312
   \   000002A4   ........           _BLF     `??operator+_1`,`??operator+??rA_1`
   \   000002A8   0B20A0E1           MOV      R2,R11
   \   000002AC   4E1F8DE2           ADD      R1,SP,#+312
   \   000002B0   470F8DE2           ADD      R0,SP,#+284
   \   000002B4   ........           _BLF     `??operator+`,`??operator+??rA`
   \   000002B8   0920A0E1           MOV      R2,R9
   \   000002BC   471F8DE2           ADD      R1,SP,#+284
   \   000002C0   400F8DE2           ADD      R0,SP,#+256
   \   000002C4   ........           _BLF     `??operator+`,`??operator+??rA`
   \   000002C8   401F8DE2           ADD      R1,SP,#+256
   \   000002CC   E4008DE2           ADD      R0,SP,#+228
   \   000002D0   ........           _BLF     ??AnsiString_2,??AnsiString??rA_2
   \   000002D4   ........           _BLF     ??RestoreSettingsWarning,??RestoreSettingsWarning??rA
   \   000002D8   0020A0E3           MOV      R2,#+0
   \   000002DC   0110A0E3           MOV      R1,#+1
   \   000002E0   E4008DE2           ADD      R0,SP,#+228
   \   000002E4   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000002E8   0720A0E1           MOV      R2,R7
   \   000002EC   0110A0E3           MOV      R1,#+1
   \   000002F0   400F8DE2           ADD      R0,SP,#+256
   \   000002F4   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   000002F8   0720A0E1           MOV      R2,R7
   \   000002FC   0110A0E3           MOV      R1,#+1
   \   00000300   470F8DE2           ADD      R0,SP,#+284
   \   00000304   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000308   0720A0E1           MOV      R2,R7
   \   0000030C   0110A0E3           MOV      R1,#+1
   \   00000310   710F8DE2           ADD      R0,SP,#+452
   \   00000314   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000318   0720A0E1           MOV      R2,R7
   \   0000031C   0110A0E3           MOV      R1,#+1
   \   00000320   4E0F8DE2           ADD      R0,SP,#+312
   \   00000324   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000328   0720A0E1           MOV      R2,R7
   \   0000032C   0110A0E3           MOV      R1,#+1
   \   00000330   550F8DE2           ADD      R0,SP,#+340
   \   00000334   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000338   0720A0E1           MOV      R2,R7
   \   0000033C   0110A0E3           MOV      R1,#+1
   \   00000340   5C0F8DE2           ADD      R0,SP,#+368
   \   00000344   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000348   0720A0E1           MOV      R2,R7
   \   0000034C   0110A0E3           MOV      R1,#+1
   \   00000350   630F8DE2           ADD      R0,SP,#+396
   \   00000354   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000358   0720A0E1           MOV      R2,R7
   \   0000035C   0110A0E3           MOV      R1,#+1
   \   00000360   6A0F8DE2           ADD      R0,SP,#+424
   \   00000364   6FFFFFEA           B        ??RestoreSettings_4
    302                          break;
    303                      case C_AI_END:          // If AI type not found can continue with this
    304                      case C_AL_END:
    305                      case C_CT_END:
    306                      case C_DRAFT_END:
    307                      case C_PRO_END:
    308                      case C_PRO_END_COMMON:
    309                      case C_PRO_END_PRO:
    310                          Key = C_PRO_END;
   \                     ??RestoreSettings_5:
   \   00000368   FA6FA0E3           MOV      R6,#+1000
   \   0000036C   230000EA           B        ??RestoreSettings_3
    311                          break;
    312                      case C_AI_P906_0110:
    313                      case C_AI_P906_0111:
    314                      case C_AI_ATM_N_Ex:
    315                      case C_AI_ATM_Ex:
    316                      case C_AI_ATM_Ex_H:
    317                      case C_AI_ATM_N_Ex_0_1:
    318                      case C_AI_APT500		  :
    319                      case C_AI_SPT900		  :
    320                      case C_AI_Gen_4_20mA:
    321                      case C_AI_DIFF_PRESSURE_mA:
    322                          {
    323                              int AIIDNumber = SettingsString->ReadInteger(ErrorLine);
   \                     ??RestoreSettings_14:
   \   00000370   0020A0E3           MOV      R2,#+0
   \   00000374   0D10A0E1           MOV      R1,SP
   \   00000378   0500A0E1           MOV      R0,R5
   \   0000037C   ........           _BLF     ??ReadInteger,??ReadInteger??rA
    324                              AnalogInput *AnalogInPtr = (AnalogInput *)FindObject(AIIDNumber);
   \   00000380   ........           _BLF     ??FindObject,??FindObject??rA
   \   00000384   0020B0E1           MOVS     R2,R0
    325                              if (AnalogInPtr) AnalogInPtr->RestoreAISettings(SettingsString);
   \   00000388   1D00000A           BEQ      ??RestoreSettings_15
   \   0000038C   A42092E5           LDR      R2,[R2, #+164]
   \   00000390   0510A0E1           MOV      R1,R5
   \   00000394   702092E5           LDR      R2,[R2, #+112]
   \   00000398   0FE0A0E1           MOV      LR,PC
   \   0000039C   12FF2FE1           BX       R2
   \   000003A0   160000EA           B        ??RestoreSettings_3
    326                          }
    327                          break;
    328                      case C_DRAFT_DF  :
    329                          if (DFPtr) {
   \                     ??RestoreSettings_6:
   \   000003A4   702194E5           LDR      R2,[R4, #+368]
   \   000003A8   0C0000EA           B        ??RestoreSettings_16
    330                              DFPtr->RestoreSettings(SettingsString);
    331                          }
    332                          break;
    333                      case C_DRAFT_DP  :
    334                          if (DPPtr) {
   \                     ??RestoreSettings_7:
   \   000003AC   742194E5           LDR      R2,[R4, #+372]
   \   000003B0   0A0000EA           B        ??RestoreSettings_16
    335                              DPPtr->RestoreSettings(SettingsString);
    336                          }
    337                          break;
    338                      case C_DRAFT_DS  :
    339          				if (DSPtr) {
   \                     ??RestoreSettings_8:
   \   000003B4   782194E5           LDR      R2,[R4, #+376]
   \   000003B8   080000EA           B        ??RestoreSettings_16
    340                              DSPtr->RestoreSettings(SettingsString);
    341                          }
    342                          break;
    343                      case C_DRAFT_DA  :
    344                          if (DAPtr) {
   \                     ??RestoreSettings_9:
   \   000003BC   7C2194E5           LDR      R2,[R4, #+380]
   \   000003C0   060000EA           B        ??RestoreSettings_16
    345                              DAPtr->RestoreSettings(SettingsString);
    346                          }
    347                          break;
    348                      case C_DRAFT_DAP :
    349                          if (DAPPtr) {
   \                     ??RestoreSettings_10:
   \   000003C4   802194E5           LDR      R2,[R4, #+384]
   \   000003C8   040000EA           B        ??RestoreSettings_16
    350                              DAPPtr->RestoreSettings(SettingsString);
    351                          }
    352                          break;
    353                      case C_DRAFT_DAS :
    354                          if (DASPtr) {
   \                     ??RestoreSettings_11:
   \   000003CC   842194E5           LDR      R2,[R4, #+388]
   \   000003D0   020000EA           B        ??RestoreSettings_16
    355                              DASPtr->RestoreSettings(SettingsString);
    356                          }
    357                          break;
    358                      case C_DRAFT_DFP :
    359                          if (DFPPtr) {
   \                     ??RestoreSettings_12:
   \   000003D4   882194E5           LDR      R2,[R4, #+392]
   \   000003D8   000000EA           B        ??RestoreSettings_16
    360                              DFPPtr->RestoreSettings(SettingsString);
    361                          }
    362                          break;
    363                      case C_DRAFT_DFS :
    364                          if (DFSPtr) {
   \                     ??RestoreSettings_13:
   \   000003DC   8C2194E5           LDR      R2,[R4, #+396]
   \                     ??RestoreSettings_16:
   \   000003E0   000052E3           CMP      R2,#+0
   \   000003E4   0600000A           BEQ      ??RestoreSettings_15
    365                              DFSPtr->RestoreSettings(SettingsString);
   \   000003E8   0200A0E1           MOV      R0,R2
   \   000003EC   A42092E5           LDR      R2,[R2, #+164]
   \   000003F0   0510A0E1           MOV      R1,R5
   \   000003F4   142092E5           LDR      R2,[R2, #+20]
   \   000003F8   0FE0A0E1           MOV      LR,PC
   \   000003FC   12FF2FE1           BX       R2
    366                          }
    367                          break;
    368                      }
    369                  }
    370              }while (NoError && (ErrorLine != EOF) && (Key != C_PRO_END));
   \                     ??RestoreSettings_3:
   \   00000400   0020A0E3           MOV      R2,#+0
   \                     ??RestoreSettings_15:
   \   00000404   0110A0E3           MOV      R1,#+1
   \   00000408   74008DE2           ADD      R0,SP,#+116
   \   0000040C   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   00000410   000057E3           CMP      R7,#+0
   \   00000414   00009D15           LDRNE    R0,[SP, #+0]
   \   00000418   08005011           CMPNE    R0,R8
   \   0000041C   FA0F5613           CMPNE    R6,#+1000
   \   00000420   00FFFF1A           BNE      ??RestoreSettings_1
    371              return (NoError);
   \   00000424   0700A0E1           MOV      R0,R7
   \   00000428   78DF8DE2           ADD      SP,SP,#+480
   \   0000042C                      REQUIRE ?Subroutine28
   \   0000042C                      ;; // Fall through to label ?Subroutine28
    372          }
    373          
    374          
    375          //---------------------------------------------------------------------------

   \                                 In segment CODE, align 4, keep-with-next
    376          void PRODraftSystem::Calculate(void) {
   \                     ??Calculate:
   \   00000000   F04F2DE9           PUSH     {R4-R11,LR}
   \   00000004   18D04DE2           SUB      SP,SP,#+24
    377              HWFailure = false;
    378              switch (DraftSystem) {
   \   00000008   707E9FE5           LDR      R7,??Calculate_2  ;; ??Width
   \   0000000C   708E9FE5           LDR      R8,??Calculate_2+0x4  ;; ??LengthBetweenPP
   \   00000010   0040A0E1           MOV      R4,R0
   \   00000014   0000A0E3           MOV      R0,#+0
   \   00000018   3C00C4E5           STRB     R0,[R4, #+60]
   \   0000001C   6C01D4E5           LDRB     R0,[R4, #+364]
   \   00000020   0050A0E3           MOV      R5,#+0
   \   00000024   04A0A0E3           MOV      R10,#+4
   \   00000028   1190A0E3           MOV      R9,#+17
   \   0000002C   0160A0E3           MOV      R6,#+1
   \   00000030   070050E3           CMP      R0,#+7
   \   00000034   0906008A           BHI      ??Calculate_3
   \   00000038   021F8FE2           ADR      R1,??Calculate_1
   \   0000003C   8000A0E1           MOV      R0,R0, LSL #+1
   \   00000040   B01091E1           LDRH     R1,[R1, R0]
   \   00000044   01F18FE0           ADD      PC,PC,R1, LSL #+2
   \                     ??Calculate_1:
   \   00000048   8F006501FB00       DC16     +143,+357,+251,+1527
   \              F705        
   \   00000050   AC0203004C00       DC16     +684,+3,+76,+1132
   \              6C04        
    379              case DftFwdOnly:
    380                  StatusDftFwd = DFPtr->GetCalcVal(&DftFwd, &DftFwdMark);
   \                     ??Calculate_4:
   \   00000058   700194E5           LDR      R0,[R4, #+368]
   \   0000005C   6D2F84E2           ADD      R2,R4,#+436
   \   00000060   6F1F84E2           ADD      R1,R4,#+444
   \   00000064   ........           _BLF     ??GetCalcVal,??GetCalcVal??rA
   \   00000068   480184E5           STR      R0,[R4, #+328]
    381                  if (!StatusDftFwd) {
   \   0000006C   0060A0E1           MOV      R6,R0
   \   00000070   000056E3           CMP      R6,#+0
   \   00000074   1400001A           BNE      ??Calculate_5
    382                      DftAft =  DftFwd - PROInclinometer::TrimValue * PROProjectInfo::LengthBetweenPP;
   \   00000078   080E9FE5           LDR      R0,??Calculate_2+0x8  ;; ??TrimValue
   \   0000007C   BC9194E5           LDR      R9,[R4, #+444]
   \   00000080   001090E5           LDR      R1,[R0, #+0]
   \   00000084   000098E5           LDR      R0,[R8, #+0]
   \   00000088   ........           _BLF     __fMul,??__fMul??rA
   \   0000008C   0010A0E1           MOV      R1,R0
   \   00000090   0900A0E1           MOV      R0,R9
   \   00000094   ........           _BLF     __fSub,??__fSub??rA
   \   00000098   0010A0E1           MOV      R1,R0
   \   0000009C   C01184E5           STR      R1,[R4, #+448]
    383                      HasTrimValue = false;
   \   000000A0   0000A0E3           MOV      R0,#+0
   \   000000A4   A901C4E5           STRB     R0,[R4, #+425]
    384                      MeanDraft     = (DftFwd + DftAft ) / 2.0;
   \   000000A8   0900A0E1           MOV      R0,R9
   \   000000AC   ........           _BLF     __fAdd,??__fAdd??rA
   \   000000B0   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   000000B4   0520A0E1           MOV      R2,R5
   \   000000B8   4034A0E3           MOV      R3,#+1073741824
   \   000000BC   ........           _BLF     __dDiv,??__dDiv??rA
   \   000000C0   ........           _BLF     __doubleToFloat,??__doubleToFloat??rA
    385          			StatusDftMean = GETVAL_NO_ERR;
   \   000000C4   685184E5           STR      R5,[R4, #+360]
   \   000000C8   000000EA           B        ??Calculate_6
    386                  }else{
    387                      MeanDraft     = 0.0;
   \                     ??Calculate_5:
   \   000000CC   0000A0E3           MOV      R0,#+0
   \                     ??Calculate_6:
   \   000000D0   F40184E5           STR      R0,[R4, #+500]
    388                  }
    389                  // Now, we can calculate DP, DS
    390                  DftP = (DftFwd + DftAft) / 2 - PROInclinometer::ListValue * PROProjectInfo::Width / 2.0;
   \   000000D4   BC1194E5           LDR      R1,[R4, #+444]
   \   000000D8   C00194E5           LDR      R0,[R4, #+448]
   \   000000DC   ........           _BLF     __fAdd,??__fAdd??rA
   \   000000E0   4014A0E3           MOV      R1,#+1073741824
   \   000000E4   ........           _BLF     __fDiv,??__fDiv??rA
   \   000000E8   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   000000EC   0080A0E1           MOV      R8,R0
   \   000000F0   940D9FE5           LDR      R0,??Calculate_2+0xC  ;; ??ListValue
   \   000000F4   0190A0E1           MOV      R9,R1
   \   000000F8   001090E5           LDR      R1,[R0, #+0]
   \   000000FC   000097E5           LDR      R0,[R7, #+0]
   \   00000100   ........           _BLF     __fMul,??__fMul??rA
   \   00000104   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   00000108   0020A0E3           MOV      R2,#+0
   \   0000010C   4034A0E3           MOV      R3,#+1073741824
   \   00000110   ........           _BLF     __dDiv,??__dDiv??rA
   \   00000114   0020A0E1           MOV      R2,R0
   \   00000118   0130A0E1           MOV      R3,R1
   \   0000011C   0800A0E1           MOV      R0,R8
   \   00000120   0910A0E1           MOV      R1,R9
   \   00000124   ........           _BLF     __dSub,??__dSub??rA
   \   00000128   ........           _BLF     __doubleToFloat,??__doubleToFloat??rA
   \   0000012C   C40184E5           STR      R0,[R4, #+452]
    391                  DftS = (DftFwd + DftAft) / 2 + PROInclinometer::ListValue * PROProjectInfo::Width / 2.0;
   \   00000130   540D9FE5           LDR      R0,??Calculate_2+0xC  ;; ??ListValue
   \   00000134   001090E5           LDR      R1,[R0, #+0]
   \   00000138   000097E5           LDR      R0,[R7, #+0]
   \   0000013C   ........           _BLF     __fMul,??__fMul??rA
   \   00000140   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   00000144   0520A0E1           MOV      R2,R5
   \   00000148   4034A0E3           MOV      R3,#+1073741824
   \   0000014C   ........           _BLF     __dDiv,??__dDiv??rA
   \   00000150   0820A0E1           MOV      R2,R8
   \   00000154   0930A0E1           MOV      R3,R9
   \   00000158   ........           _BLF     __dAdd,??__dAdd??rA
   \   0000015C   ........           _BLF     __doubleToFloat,??__doubleToFloat??rA
   \   00000160   C80184E5           STR      R0,[R4, #+456]
    392                  // Should check inclinometer status
    393                  StatusDftAft = StatusDftFwd;
   \   00000164   4C6184E5           STR      R6,[R4, #+332]
    394                  StatusDftP   = StatusDftFwd;
   \                     ??Calculate_7:
   \   00000168   506184E5           STR      R6,[R4, #+336]
    395                  StatusDftS   = StatusDftFwd;
   \   0000016C   546184E5           STR      R6,[R4, #+340]
    396                  HasListValue = false;
   \                     ??Calculate_8:
   \   00000170   0000A0E3           MOV      R0,#+0
   \   00000174   AA01C4E5           STRB     R0,[R4, #+426]
   \   00000178   B80500EA           B        ??Calculate_3
    397                  break;
    398              case DftAftOnly:
    399                  StatusDftAft = DAPtr->GetCalcVal(&DftAft, &DftAftMark);
   \                     ??Calculate_9:
   \   0000017C   7C0194E5           LDR      R0,[R4, #+380]
   \   00000180   6E2F84E2           ADD      R2,R4,#+440
   \   00000184   701F84E2           ADD      R1,R4,#+448
   \   00000188   ........           _BLF     ??GetCalcVal,??GetCalcVal??rA
   \   0000018C   4C0184E5           STR      R0,[R4, #+332]
    400                  if (!StatusDftAft) {
   \   00000190   0060A0E1           MOV      R6,R0
   \   00000194   000056E3           CMP      R6,#+0
   \   00000198   1200001A           BNE      ??Calculate_10
    401                      DftFwd =  DftAft + PROInclinometer::TrimValue * PROProjectInfo::LengthBetweenPP;
   \   0000019C   E40C9FE5           LDR      R0,??Calculate_2+0x8  ;; ??TrimValue
   \   000001A0   C09194E5           LDR      R9,[R4, #+448]
   \   000001A4   001090E5           LDR      R1,[R0, #+0]
   \   000001A8   000098E5           LDR      R0,[R8, #+0]
   \   000001AC   ........           _BLF     __fMul,??__fMul??rA
   \   000001B0   0910A0E1           MOV      R1,R9
   \   000001B4   ........           _BLF     __fAdd,??__fAdd??rA
   \   000001B8   BC0184E5           STR      R0,[R4, #+444]
    402                      HasTrimValue = false;
   \   000001BC   0010A0E3           MOV      R1,#+0
   \   000001C0   A911C4E5           STRB     R1,[R4, #+425]
    403                      MeanDraft     = (DftFwd + DftAft ) / 2.0;
   \   000001C4   0910A0E1           MOV      R1,R9
   \   000001C8   ........           _BLF     __fAdd,??__fAdd??rA
   \   000001CC   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   000001D0   0520A0E1           MOV      R2,R5
   \   000001D4   4034A0E3           MOV      R3,#+1073741824
   \   000001D8   ........           _BLF     __dDiv,??__dDiv??rA
   \   000001DC   ........           _BLF     __doubleToFloat,??__doubleToFloat??rA
    404                      StatusDftMean = GETVAL_NO_ERR;
   \   000001E0   685184E5           STR      R5,[R4, #+360]
   \   000001E4   000000EA           B        ??Calculate_11
    405                  }else{
    406                      MeanDraft     = 0.0;
   \                     ??Calculate_10:
   \   000001E8   0000A0E3           MOV      R0,#+0
   \                     ??Calculate_11:
   \   000001EC   F40184E5           STR      R0,[R4, #+500]
    407                  }
    408                  // Now, we can calculate DP, DS
    409                  DftP = (DftFwd + DftAft) / 2 - PROInclinometer::ListValue * PROProjectInfo::Width / 2.0;
   \   000001F0   C01194E5           LDR      R1,[R4, #+448]
   \   000001F4   BC0194E5           LDR      R0,[R4, #+444]
   \   000001F8   ........           _BLF     __fAdd,??__fAdd??rA
   \   000001FC   4014A0E3           MOV      R1,#+1073741824
   \   00000200   ........           _BLF     __fDiv,??__fDiv??rA
   \   00000204   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   00000208   0080A0E1           MOV      R8,R0
   \   0000020C   780C9FE5           LDR      R0,??Calculate_2+0xC  ;; ??ListValue
   \   00000210   0190A0E1           MOV      R9,R1
   \   00000214   001090E5           LDR      R1,[R0, #+0]
   \   00000218   000097E5           LDR      R0,[R7, #+0]
   \   0000021C   ........           _BLF     __fMul,??__fMul??rA
   \   00000220   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   00000224   0020A0E3           MOV      R2,#+0
   \   00000228   4034A0E3           MOV      R3,#+1073741824
   \   0000022C   ........           _BLF     __dDiv,??__dDiv??rA
   \   00000230   0020A0E1           MOV      R2,R0
   \   00000234   0130A0E1           MOV      R3,R1
   \   00000238   0800A0E1           MOV      R0,R8
   \   0000023C   0910A0E1           MOV      R1,R9
   \   00000240   ........           _BLF     __dSub,??__dSub??rA
   \   00000244   ........           _BLF     __doubleToFloat,??__doubleToFloat??rA
   \   00000248   C40184E5           STR      R0,[R4, #+452]
    410                  DftS = (DftFwd + DftAft) / 2 + PROInclinometer::ListValue * PROProjectInfo::Width / 2.0;
   \   0000024C   380C9FE5           LDR      R0,??Calculate_2+0xC  ;; ??ListValue
   \   00000250   001090E5           LDR      R1,[R0, #+0]
   \   00000254   000097E5           LDR      R0,[R7, #+0]
   \   00000258   ........           _BLF     __fMul,??__fMul??rA
   \   0000025C   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   00000260   0520A0E1           MOV      R2,R5
   \   00000264   4034A0E3           MOV      R3,#+1073741824
   \   00000268   ........           _BLF     __dDiv,??__dDiv??rA
   \   0000026C   0820A0E1           MOV      R2,R8
   \   00000270   0930A0E1           MOV      R3,R9
   \   00000274   ........           _BLF     __dAdd,??__dAdd??rA
   \   00000278   ........           _BLF     __doubleToFloat,??__doubleToFloat??rA
   \   0000027C   C80184E5           STR      R0,[R4, #+456]
    411                  // Should check inclinometer status
    412                  StatusDftFwd = StatusDftAft;
   \   00000280   486184E5           STR      R6,[R4, #+328]
    413                  StatusDftP   = StatusDftAft;
   \   00000284   B7FFFFEA           B        ??Calculate_7
    414                  StatusDftS   = StatusDftAft;
    415                  HasListValue = false;
    416                  break;
    417              case DftFwdAft:
    418                  StatusDftFwd = DFPtr->GetCalcVal(&DftFwd, &DftFwdMark);
   \                     ??Calculate_12:
   \   00000288   700194E5           LDR      R0,[R4, #+368]
   \   0000028C   6D2F84E2           ADD      R2,R4,#+436
   \   00000290   6F1F84E2           ADD      R1,R4,#+444
   \   00000294   ........           _BLF     ??GetCalcVal,??GetCalcVal??rA
   \   00000298   480184E5           STR      R0,[R4, #+328]
    419                  StatusDftAft = DAPtr->GetCalcVal(&DftAft, &DftAftMark);
   \   0000029C   7C0194E5           LDR      R0,[R4, #+380]
   \   000002A0   6E2F84E2           ADD      R2,R4,#+440
   \   000002A4   701F84E2           ADD      R1,R4,#+448
   \   000002A8   ........           _BLF     ??GetCalcVal,??GetCalcVal??rA
   \   000002AC   4C0184E5           STR      R0,[R4, #+332]
    420                  if (!StatusDftFwd && !StatusDftAft) {
   \   000002B0   48A194E5           LDR      R10,[R4, #+328]
   \   000002B4   00005AE3           CMP      R10,#+0
   \   000002B8   0B00001A           BNE      ??Calculate_13
   \   000002BC   BC9194E5           LDR      R9,[R4, #+444]
   \   000002C0   008098E5           LDR      R8,[R8, #+0]
   \   000002C4   000050E3           CMP      R0,#+0
   \   000002C8   4500001A           BNE      ??Calculate_14
    421                      TrimValue = (DftFwd - DftAft) / PROProjectInfo::LengthBetweenPP;
   \   000002CC   C01194E5           LDR      R1,[R4, #+448]
   \   000002D0   0900A0E1           MOV      R0,R9
   \   000002D4   ........           _BLF     __fSub,??__fSub??rA
   \   000002D8   0810A0E1           MOV      R1,R8
   \   000002DC   ........           _BLF     __fDiv,??__fDiv??rA
   \   000002E0   AC0184E5           STR      R0,[R4, #+428]
    422                      HasTrimValue = true;
   \   000002E4   A961C4E5           STRB     R6,[R4, #+425]
   \   000002E8   0A0000EA           B        ??Calculate_15
    423                  } else if (!StatusDftFwd) {
    424                      DftAft =  DftFwd - PROInclinometer::TrimValue * PROProjectInfo::LengthBetweenPP;
    425                      HasTrimValue = false;
    426                  } else if (!StatusDftAft) {
   \                     ??Calculate_13:
   \   000002EC   000050E3           CMP      R0,#+0
   \   000002F0   0800001A           BNE      ??Calculate_15
    427                      DftFwd =  DftAft + PROInclinometer::TrimValue * PROProjectInfo::LengthBetweenPP;
   \   000002F4   8C0B9FE5           LDR      R0,??Calculate_2+0x8  ;; ??TrimValue
   \   000002F8   001090E5           LDR      R1,[R0, #+0]
   \   000002FC   000098E5           LDR      R0,[R8, #+0]
   \   00000300   ........           _BLF     __fMul,??__fMul??rA
   \   00000304   C01194E5           LDR      R1,[R4, #+448]
   \   00000308   ........           _BLF     __fAdd,??__fAdd??rA
   \   0000030C   BC0184E5           STR      R0,[R4, #+444]
    428                      HasTrimValue = false;
   \                     ??Calculate_16:
   \   00000310   0000A0E3           MOV      R0,#+0
   \   00000314   A901C4E5           STRB     R0,[R4, #+425]
    429                  }
    430                  // Now, we can calculate DP, DS
    431                  DftP = (DftFwd + DftAft) / 2 - PROInclinometer::ListValue * PROProjectInfo::Width / 2.0;
   \                     ??Calculate_15:
   \   00000318   BC1194E5           LDR      R1,[R4, #+444]
   \   0000031C   C00194E5           LDR      R0,[R4, #+448]
   \   00000320   ........           _BLF     __fAdd,??__fAdd??rA
   \   00000324   0060A0E1           MOV      R6,R0
   \   00000328   4014A0E3           MOV      R1,#+1073741824
   \   0000032C   ........           _BLF     __fDiv,??__fDiv??rA
   \   00000330   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   00000334   0080A0E1           MOV      R8,R0
   \   00000338   4C0B9FE5           LDR      R0,??Calculate_2+0xC  ;; ??ListValue
   \   0000033C   0190A0E1           MOV      R9,R1
   \   00000340   001090E5           LDR      R1,[R0, #+0]
   \   00000344   000097E5           LDR      R0,[R7, #+0]
   \   00000348   ........           _BLF     __fMul,??__fMul??rA
   \   0000034C   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   00000350   0020A0E3           MOV      R2,#+0
   \   00000354   4034A0E3           MOV      R3,#+1073741824
   \   00000358   ........           _BLF     __dDiv,??__dDiv??rA
   \   0000035C   0020A0E1           MOV      R2,R0
   \   00000360   0130A0E1           MOV      R3,R1
   \   00000364   0800A0E1           MOV      R0,R8
   \   00000368   0910A0E1           MOV      R1,R9
   \   0000036C   ........           _BLF     __dSub,??__dSub??rA
   \   00000370   ........           _BLF     __doubleToFloat,??__doubleToFloat??rA
   \   00000374   C40184E5           STR      R0,[R4, #+452]
    432                  DftS = (DftFwd + DftAft) / 2 + PROInclinometer::ListValue * PROProjectInfo::Width / 2.0;
   \   00000378   0C0B9FE5           LDR      R0,??Calculate_2+0xC  ;; ??ListValue
   \   0000037C   001090E5           LDR      R1,[R0, #+0]
   \   00000380   000097E5           LDR      R0,[R7, #+0]
   \   00000384   ........           _BLF     __fMul,??__fMul??rA
   \   00000388   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   0000038C   0520A0E1           MOV      R2,R5
   \   00000390   4034A0E3           MOV      R3,#+1073741824
   \   00000394   ........           _BLF     __dDiv,??__dDiv??rA
   \   00000398   0820A0E1           MOV      R2,R8
   \   0000039C   0930A0E1           MOV      R3,R9
   \   000003A0   ........           _BLF     __dAdd,??__dAdd??rA
   \   000003A4   ........           _BLF     __doubleToFloat,??__doubleToFloat??rA
   \   000003A8   C80184E5           STR      R0,[R4, #+456]
    433                  // Should check inclinometer status
    434                  if (!StatusDftFwd || !StatusDftAft) {
   \   000003AC   00005AE3           CMP      R10,#+0
   \   000003B0   4C019415           LDRNE    R0,[R4, #+332]
   \   000003B4   00005013           CMPNE    R0,#+0
   \   000003B8   1200001A           BNE      ??Calculate_17
    435          			StatusDftP    = GETVAL_NOT_MEASURED;
   \   000003BC   1170A0E3           MOV      R7,#+17
    436                      StatusDftS    = GETVAL_NOT_MEASURED;
   \   000003C0   1180A0E3           MOV      R8,#+17
    437                      MeanDraft     = (DftFwd + DftAft) / 2.0;
   \   000003C4   0600A0E1           MOV      R0,R6
   \   000003C8   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   000003CC   0520A0E1           MOV      R2,R5
   \   000003D0   4034A0E3           MOV      R3,#+1073741824
   \   000003D4   ........           _BLF     __dDiv,??__dDiv??rA
   \   000003D8   ........           _BLF     __doubleToFloat,??__doubleToFloat??rA
    438          			StatusDftMean = GETVAL_NO_ERR;
   \   000003DC   685184E5           STR      R5,[R4, #+360]
   \   000003E0   100000EA           B        ??Calculate_18
    439                  } else {
   \                     ??Calculate_14:
   \   000003E4   9C0A9FE5           LDR      R0,??Calculate_2+0x8  ;; ??TrimValue
   \   000003E8   0810A0E1           MOV      R1,R8
   \   000003EC   000090E5           LDR      R0,[R0, #+0]
   \   000003F0   ........           _BLF     __fMul,??__fMul??rA
   \   000003F4   0010A0E1           MOV      R1,R0
   \   000003F8   0900A0E1           MOV      R0,R9
   \   000003FC   ........           _BLF     __fSub,??__fSub??rA
   \   00000400   C00184E5           STR      R0,[R4, #+448]
   \   00000404   C1FFFFEA           B        ??Calculate_16
    440                      if ((StatusDftFwd == GETVAL_HW_ALARM) && (StatusDftFwd == GETVAL_HW_ALARM)) {
   \                     ??Calculate_17:
   \   00000408   0F005AE3           CMP      R10,#+15
    441                          StatusDftP   = GETVAL_HW_ALARM;
   \   0000040C   0F70A003           MOVEQ    R7,#+15
    442                          StatusDftS   = GETVAL_HW_ALARM;
   \   00000410   0200000A           BEQ      ??Calculate_19
    443                      }else if((StatusDftFwd == GETVAL_DRY_SENSOR) && (StatusDftFwd == GETVAL_DRY_SENSOR)) {
   \   00000414   08005AE3           CMP      R10,#+8
    444                          StatusDftP   = GETVAL_DRY_SENSOR;
   \   00000418   0870A003           MOVEQ    R7,#+8
    445                          StatusDftS   = GETVAL_DRY_SENSOR;
    446                      }else{
    447                          StatusDftP   = GETVAL_UNKNOWN_ERROR;
   \   0000041C   1270A013           MOVNE    R7,#+18
    448                          StatusDftS   = GETVAL_UNKNOWN_ERROR;
   \                     ??Calculate_19:
   \   00000420   0780A0E1           MOV      R8,R7
    449                      }
    450                      MeanDraft    = 0.0;
   \   00000424   0000A0E3           MOV      R0,#+0
   \                     ??Calculate_18:
   \   00000428   F40184E5           STR      R0,[R4, #+500]
   \   0000042C   548184E5           STR      R8,[R4, #+340]
   \   00000430   507184E5           STR      R7,[R4, #+336]
    451                  }
    452          
    453                  HasListValue  = false;
   \   00000434   4DFFFFEA           B        ??Calculate_8
    454                  break;
    455              case DftFwdAPortAStbd:
    456                  {
    457                      float DraftAftAtMarkP = 0.0, DraftAftAtMarkS = 0.0;
   \                     ??Calculate_20:
   \   00000438   0010A0E3           MOV      R1,#+0
   \   0000043C   08108DE5           STR      R1,[SP, #+8]
   \   00000440   0C108DE5           STR      R1,[SP, #+12]
    458                      float DraftAftAtPPP   = 0.0, DraftAftAtPPS  = 0.0;
   \   00000444   04108DE5           STR      R1,[SP, #+4]
   \   00000448   00108DE5           STR      R1,[SP, #+0]
    459                      float CurrentList = 0.0;
    460                      StatusDftFwd  = DFPtr->GetCalcVal(&DftFwd, &DftFwdMark);
   \   0000044C   700194E5           LDR      R0,[R4, #+368]
   \   00000450   6D2F84E2           ADD      R2,R4,#+436
   \   00000454   6F1F84E2           ADD      R1,R4,#+444
   \   00000458   ........           _BLF     ??GetCalcVal,??GetCalcVal??rA
   \   0000045C   480184E5           STR      R0,[R4, #+328]
    461                      StatusDftAftP   = DAPPtr->GetCalcVal(&DraftAftAtPPP, &DraftAftAtMarkP);
   \   00000460   800194E5           LDR      R0,[R4, #+384]
   \   00000464   08208DE2           ADD      R2,SP,#+8
   \   00000468   04108DE2           ADD      R1,SP,#+4
   \   0000046C   ........           _BLF     ??GetCalcVal,??GetCalcVal??rA
   \   00000470   580184E5           STR      R0,[R4, #+344]
    462                      StatusDftAftS   = DASPtr->GetCalcVal(&DraftAftAtPPS, &DraftAftAtMarkS);
   \   00000474   840194E5           LDR      R0,[R4, #+388]
   \   00000478   0C208DE2           ADD      R2,SP,#+12
   \   0000047C   0D10A0E1           MOV      R1,SP
   \   00000480   ........           _BLF     ??GetCalcVal,??GetCalcVal??rA
   \   00000484   5C0184E5           STR      R0,[R4, #+348]
    463                      if (!StatusDftAftP && !StatusDftAftS) {
   \   00000488   580194E5           LDR      R0,[R4, #+344]
   \   0000048C   000050E3           CMP      R0,#+0
   \   00000490   5C119405           LDREQ    R1,[R4, #+348]
   \   00000494   00005103           CMPEQ    R1,#+0
   \   00000498   1600001A           BNE      ??Calculate_21
    464                          StatusDftAft = GETVAL_NOT_MEASURED;
   \   0000049C   4C9184E5           STR      R9,[R4, #+332]
    465                          StatusDftP   = GETVAL_NOT_MEASURED;
   \   000004A0   509184E5           STR      R9,[R4, #+336]
    466                          StatusDftS   = GETVAL_NOT_MEASURED;
   \   000004A4   549184E5           STR      R9,[R4, #+340]
    467                          DftAft       = (DraftAftAtPPP + DraftAftAtPPS) / 2;
   \   000004A8   04109DE5           LDR      R1,[SP, #+4]
   \   000004AC   00009DE5           LDR      R0,[SP, #+0]
   \   000004B0   ........           _BLF     __fAdd,??__fAdd??rA
   \   000004B4   4014A0E3           MOV      R1,#+1073741824
   \   000004B8   ........           _BLF     __fDiv,??__fDiv??rA
   \   000004BC   C00184E5           STR      R0,[R4, #+448]
    468                          DftAftMark   = (DraftAftAtMarkP + DraftAftAtMarkS) / 2;
   \   000004C0   08109DE5           LDR      R1,[SP, #+8]
   \   000004C4   0C009DE5           LDR      R0,[SP, #+12]
   \   000004C8   ........           _BLF     __fAdd,??__fAdd??rA
   \   000004CC   4014A0E3           MOV      R1,#+1073741824
   \   000004D0   ........           _BLF     __fDiv,??__fDiv??rA
   \   000004D4   B80184E5           STR      R0,[R4, #+440]
    469                          CurrentList  = (DraftAftAtPPS - DraftAftAtPPP) / PROProjectInfo::Width;
    470                          ListValue    = CurrentList;
   \   000004D8   00009DE5           LDR      R0,[SP, #+0]
   \   000004DC   04109DE5           LDR      R1,[SP, #+4]
   \   000004E0   ........           _BLF     __fSub,??__fSub??rA
   \   000004E4   001097E5           LDR      R1,[R7, #+0]
   \   000004E8   ........           _BLF     __fDiv,??__fDiv??rA
   \   000004EC   B00184E5           STR      R0,[R4, #+432]
    471                          HasListValue = true;
   \   000004F0   AA61C4E5           STRB     R6,[R4, #+426]
   \   000004F4   340000EA           B        ??Calculate_22
    472                      } else {
    473                          CurrentList = PROInclinometer::ListValue;
   \                     ??Calculate_21:
   \   000004F8   8C199FE5           LDR      R1,??Calculate_2+0xC  ;; ??ListValue
    474                          HasListValue  = false;
    475                          if (!StatusDftAftP) {
   \   000004FC   000050E3           CMP      R0,#+0
   \   00000500   006091E5           LDR      R6,[R1, #+0]
   \   00000504   0010A0E3           MOV      R1,#+0
   \   00000508   AA11C4E5           STRB     R1,[R4, #+426]
   \   0000050C   1500001A           BNE      ??Calculate_23
    476                              StatusDftAft = GETVAL_NOT_MEASURED;
   \   00000510   4C9184E5           STR      R9,[R4, #+332]
    477                              StatusDftP   = GETVAL_NOT_MEASURED;
   \   00000514   509184E5           STR      R9,[R4, #+336]
    478                              StatusDftS   = GETVAL_NOT_MEASURED;
   \   00000518   549184E5           STR      R9,[R4, #+340]
    479                              // Assume that we must use the inclinometer
    480                              DftAft     = DraftAftAtPPP   - CurrentList * PROProjectInfo::Width / 2;
   \   0000051C   000097E5           LDR      R0,[R7, #+0]
   \   00000520   0610A0E1           MOV      R1,R6
   \   00000524   ........           _BLF     __fMul,??__fMul??rA
   \   00000528   4014A0E3           MOV      R1,#+1073741824
   \   0000052C   ........           _BLF     __fDiv,??__fDiv??rA
   \   00000530   0010A0E1           MOV      R1,R0
   \   00000534   04009DE5           LDR      R0,[SP, #+4]
   \   00000538   ........           _BLF     __fSub,??__fSub??rA
   \   0000053C   C00184E5           STR      R0,[R4, #+448]
    481                              DftAftMark = DraftAftAtMarkP - CurrentList * PROProjectInfo::Width / 2;
   \   00000540   000097E5           LDR      R0,[R7, #+0]
   \   00000544   0610A0E1           MOV      R1,R6
   \   00000548   ........           _BLF     __fMul,??__fMul??rA
   \   0000054C   4014A0E3           MOV      R1,#+1073741824
   \   00000550   ........           _BLF     __fDiv,??__fDiv??rA
   \   00000554   0010A0E1           MOV      R1,R0
   \   00000558   08009DE5           LDR      R0,[SP, #+8]
   \   0000055C   ........           _BLF     __fSub,??__fSub??rA
   \                     ??Calculate_24:
   \   00000560   B80184E5           STR      R0,[R4, #+440]
   \   00000564   180000EA           B        ??Calculate_22
    482                          } else if (!StatusDftAftS) {
   \                     ??Calculate_23:
   \   00000568   5C0194E5           LDR      R0,[R4, #+348]
   \   0000056C   000050E3           CMP      R0,#+0
   \   00000570   1200001A           BNE      ??Calculate_25
    483                              StatusDftAft = GETVAL_NOT_MEASURED;
   \   00000574   4C9184E5           STR      R9,[R4, #+332]
    484                              StatusDftP   = GETVAL_NOT_MEASURED;
   \   00000578   509184E5           STR      R9,[R4, #+336]
    485                              StatusDftS   = GETVAL_NOT_MEASURED;
   \   0000057C   549184E5           STR      R9,[R4, #+340]
    486                              // Assume that we must use the inclinometer
    487                              DftAft     = DraftAftAtPPS   + CurrentList * PROProjectInfo::Width / 2;
   \   00000580   000097E5           LDR      R0,[R7, #+0]
   \   00000584   0610A0E1           MOV      R1,R6
   \   00000588   ........           _BLF     __fMul,??__fMul??rA
   \   0000058C   4014A0E3           MOV      R1,#+1073741824
   \   00000590   ........           _BLF     __fDiv,??__fDiv??rA
   \   00000594   00109DE5           LDR      R1,[SP, #+0]
   \   00000598   ........           _BLF     __fAdd,??__fAdd??rA
   \   0000059C   C00184E5           STR      R0,[R4, #+448]
    488                              DftAftMark = DraftAftAtMarkS + CurrentList * PROProjectInfo::Width / 2;
   \   000005A0   000097E5           LDR      R0,[R7, #+0]
   \   000005A4   0610A0E1           MOV      R1,R6
   \   000005A8   ........           _BLF     __fMul,??__fMul??rA
   \   000005AC   4014A0E3           MOV      R1,#+1073741824
   \   000005B0   ........           _BLF     __fDiv,??__fDiv??rA
   \   000005B4   0C109DE5           LDR      R1,[SP, #+12]
   \   000005B8   ........           _BLF     __fAdd,??__fAdd??rA
   \   000005BC   E7FFFFEA           B        ??Calculate_24
    489                          } else {
    490                              StatusDftAft  = GETVAL_ERROR;
   \                     ??Calculate_25:
   \   000005C0   4CA184E5           STR      R10,[R4, #+332]
    491                              StatusDftP    = GETVAL_ERROR;
   \   000005C4   50A184E5           STR      R10,[R4, #+336]
    492                              StatusDftS    = GETVAL_ERROR;
   \   000005C8   54A184E5           STR      R10,[R4, #+340]
    493                              StatusDftMean = GETVAL_ERROR;
    494                              MeanDraft     = 0.0;
    495                          }
    496                      }
    497                      // Now, we can calculate DP, DS
    498          			if (!StatusDftFwd && (!StatusDftP || !StatusDftS)) {
    499                          MeanDraft     =(DftFwd + DftAft) / 2.0;
    500          				StatusDftMean = GETVAL_NO_ERR;
    501                          DftP          = MeanDraft - CurrentList * PROProjectInfo::Width / 2;
    502                          DftS          = MeanDraft + CurrentList * PROProjectInfo::Width / 2;
    503                          TrimValue     = (DftFwd - DftAft) / PROProjectInfo::LengthBetweenPP;
    504                          HasTrimValue  = true;
    505          
    506                      } else {
    507                          HasTrimValue = false;
   \                     ??Calculate_22:
   \   000005CC   0000A0E3           MOV      R0,#+0
   \   000005D0   A901C4E5           STRB     R0,[R4, #+425]
    508                          MeanDraft     = 0.0;
   \   000005D4   F40184E5           STR      R0,[R4, #+500]
    509                          StatusDftMean = GETVAL_ERROR;
   \   000005D8   68A184E5           STR      R10,[R4, #+360]
   \   000005DC   9F0400EA           B        ??Calculate_3
    510                      }
    511                  }
    512                  break;
    513              case DftFwdMidShipAft:
    514                  {
    515                      StatusDftFwd = DFPtr->GetCalcVal(&DftFwd, &DftFwdMark);
   \                     ??Calculate_26:
   \   000005E0   700194E5           LDR      R0,[R4, #+368]
   \   000005E4   6D2F84E2           ADD      R2,R4,#+436
   \   000005E8   6F1F84E2           ADD      R1,R4,#+444
   \   000005EC   ........           _BLF     ??GetCalcVal,??GetCalcVal??rA
   \   000005F0   480184E5           STR      R0,[R4, #+328]
    516                      StatusDftAft = DAPtr->GetCalcVal(&DftAft, &DftAftMark);
   \   000005F4   7C0194E5           LDR      R0,[R4, #+380]
   \   000005F8   6E2F84E2           ADD      R2,R4,#+440
   \   000005FC   701F84E2           ADD      R1,R4,#+448
   \   00000600   ........           _BLF     ??GetCalcVal,??GetCalcVal??rA
   \   00000604   4C0184E5           STR      R0,[R4, #+332]
    517                      StatusDftP   = DPPtr->GetCalcVal(&DftP);
   \   00000608   740194E5           LDR      R0,[R4, #+372]
   \   0000060C   0020A0E3           MOV      R2,#+0
   \   00000610   711F84E2           ADD      R1,R4,#+452
   \   00000614   ........           _BLF     ??GetCalcVal,??GetCalcVal??rA
   \   00000618   500184E5           STR      R0,[R4, #+336]
    518                      StatusDftS   = DSPtr->GetCalcVal(&DftS);
   \   0000061C   780194E5           LDR      R0,[R4, #+376]
   \   00000620   0520A0E1           MOV      R2,R5
   \   00000624   721F84E2           ADD      R1,R4,#+456
   \   00000628   ........           _BLF     ??GetCalcVal,??GetCalcVal??rA
   \   0000062C   540184E5           STR      R0,[R4, #+340]
   \   00000630   480194E5           LDR      R0,[R4, #+328]
   \   00000634   000050E3           CMP      R0,#+0
   \   00000638   4C019405           LDREQ    R0,[R4, #+332]
   \   0000063C   00005003           CMPEQ    R0,#+0
   \   00000640   B100001A           BNE      ??Calculate_27
   \   00000644   50A194E5           LDR      R10,[R4, #+336]
   \   00000648   549194E5           LDR      R9,[R4, #+340]
   \   0000064C   00005AE3           CMP      R10,#+0
   \   00000650   00005903           CMPEQ    R9,#+0
   \   00000654   2B00001A           BNE      ??Calculate_28
    519                      if (!StatusDftFwd && !StatusDftAft && !StatusDftP && !StatusDftS) {
    520                          TrimValue = (DftFwd - DftAft) / PROProjectInfo::LengthBetweenPP;
   \   00000658   BC0194E5           LDR      R0,[R4, #+444]
   \   0000065C   C01194E5           LDR      R1,[R4, #+448]
   \   00000660   ........           _BLF     __fSub,??__fSub??rA
   \   00000664   001098E5           LDR      R1,[R8, #+0]
   \   00000668   ........           _BLF     __fDiv,??__fDiv??rA
   \   0000066C   AC0184E5           STR      R0,[R4, #+428]
    521                          ListValue = (DftS  - DftP) / PROProjectInfo::Width;
   \   00000670   C4B194E5           LDR      R11,[R4, #+452]
   \   00000674   C8A194E5           LDR      R10,[R4, #+456]
   \   00000678   0B10A0E1           MOV      R1,R11
   \   0000067C   0A00A0E1           MOV      R0,R10
   \   00000680   ........           _BLF     __fSub,??__fSub??rA
   \   00000684   001097E5           LDR      R1,[R7, #+0]
   \   00000688   ........           _BLF     __fDiv,??__fDiv??rA
   \   0000068C   B00184E5           STR      R0,[R4, #+432]
    522                          Deflection = (DftFwd + DftAft) / 2 - (DftS + DftP) / 2;
   \   00000690   BC1194E5           LDR      R1,[R4, #+444]
   \   00000694   C00194E5           LDR      R0,[R4, #+448]
   \   00000698   ........           _BLF     __fAdd,??__fAdd??rA
   \   0000069C   00008DE5           STR      R0,[SP, #+0]
   \   000006A0   0A00A0E1           MOV      R0,R10
   \   000006A4   0B10A0E1           MOV      R1,R11
   \   000006A8   ........           _BLF     __fAdd,??__fAdd??rA
   \   000006AC   4014A0E3           MOV      R1,#+1073741824
   \   000006B0   ........           _BLF     __fDiv,??__fDiv??rA
   \   000006B4   0070A0E1           MOV      R7,R0
   \   000006B8   00009DE5           LDR      R0,[SP, #+0]
   \   000006BC   4014A0E3           MOV      R1,#+1073741824
   \   000006C0   ........           _BLF     __fDiv,??__fDiv??rA
   \   000006C4   0710A0E1           MOV      R1,R7
   \   000006C8   ........           _BLF     __fSub,??__fSub??rA
   \   000006CC   EC0184E5           STR      R0,[R4, #+492]
    523                          HasListValue  = true;
   \   000006D0   AA61C4E5           STRB     R6,[R4, #+426]
    524                          HasTrimValue  = true;
   \   000006D4   A961C4E5           STRB     R6,[R4, #+425]
    525                          HasDeflection = true;
   \   000006D8   AB61C4E5           STRB     R6,[R4, #+427]
    526                          MeanDraft     = (DftFwd + DftAft + DftP + DftS) / 4;
   \   000006DC   00009DE5           LDR      R0,[SP, #+0]
   \   000006E0   0B10A0E1           MOV      R1,R11
   \   000006E4   ........           _BLF     __fAdd,??__fAdd??rA
   \   000006E8   0A10A0E1           MOV      R1,R10
   \   000006EC   ........           _BLF     __fAdd,??__fAdd??rA
   \   000006F0   4014A0E3           MOV      R1,#+1073741824
   \   000006F4   801881E3           ORR      R1,R1,#0x800000
   \   000006F8   ........           _BLF     __fDiv,??__fDiv??rA
   \   000006FC   F40184E5           STR      R0,[R4, #+500]
    527                          StatusDftMean = GETVAL_NO_ERR;
   \   00000700   685184E5           STR      R5,[R4, #+360]
   \   00000704   550400EA           B        ??Calculate_3
    528                      } else if (!StatusDftFwd && !StatusDftAft) {
    529                          TrimValue     = (DftFwd - DftAft) / PROProjectInfo::LengthBetweenPP;
   \                     ??Calculate_28:
   \   00000708   BC0194E5           LDR      R0,[R4, #+444]
   \   0000070C   C01194E5           LDR      R1,[R4, #+448]
   \   00000710   ........           _BLF     __fSub,??__fSub??rA
   \   00000714   001098E5           LDR      R1,[R8, #+0]
   \   00000718   ........           _BLF     __fDiv,??__fDiv??rA
   \   0000071C   AC0184E5           STR      R0,[R4, #+428]
    530                          HasTrimValue  = true;
   \   00000720   A961C4E5           STRB     R6,[R4, #+425]
    531                          HasDeflection = false;
   \   00000724   0000A0E3           MOV      R0,#+0
   \   00000728   AB01C4E5           STRB     R0,[R4, #+427]
    532                          Deflection    = 0.0;
   \   0000072C   EC0184E5           STR      R0,[R4, #+492]
    533                          float DftM    = (DftFwd + DftAft) / 2.0;
   \   00000730   BC1194E5           LDR      R1,[R4, #+444]
   \   00000734   C00194E5           LDR      R0,[R4, #+448]
   \   00000738   ........           _BLF     __fAdd,??__fAdd??rA
   \   0000073C   00008DE5           STR      R0,[SP, #+0]
   \   00000740   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   00000744   0520A0E1           MOV      R2,R5
   \   00000748   4034A0E3           MOV      R3,#+1073741824
   \   0000074C   ........           _BLF     __dDiv,??__dDiv??rA
   \   00000750   ........           _BLF     __doubleToFloat,??__doubleToFloat??rA
   \   00000754   04008DE5           STR      R0,[SP, #+4]
    534                          MeanDraft     = DftM;
   \   00000758   F40184E5           STR      R0,[R4, #+500]
    535                          StatusDftMean = GETVAL_NO_ERR;
   \   0000075C   685184E5           STR      R5,[R4, #+360]
    536                          if (!StatusDftP) {
   \   00000760   00005AE3           CMP      R10,#+0
   \   00000764   2300001A           BNE      ??Calculate_29
    537                              HasListValue = true;
   \   00000768   AA61C4E5           STRB     R6,[R4, #+426]
    538                              ListValue = (DftM - DftP) * 2.0 / PROProjectInfo::Width;
   \   0000076C   000097E5           LDR      R0,[R7, #+0]
   \   00000770   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   00000774   0080A0E1           MOV      R8,R0
   \   00000778   04009DE5           LDR      R0,[SP, #+4]
   \   0000077C   0190A0E1           MOV      R9,R1
   \   00000780   C41194E5           LDR      R1,[R4, #+452]
   \   00000784   ........           _BLF     __fSub,??__fSub??rA
   \   00000788   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   0000078C   0020A0E3           MOV      R2,#+0
   \   00000790   4034A0E3           MOV      R3,#+1073741824
   \   00000794   ........           _BLF     __dMul,??__dMul??rA
   \   00000798   0820A0E1           MOV      R2,R8
   \   0000079C   0930A0E1           MOV      R3,R9
   \   000007A0   ........           _BLF     __dDiv,??__dDiv??rA
   \   000007A4   ........           _BLF     __doubleToFloat,??__doubleToFloat??rA
   \   000007A8   0010A0E1           MOV      R1,R0
   \   000007AC   B01184E5           STR      R1,[R4, #+432]
    539                              DftS = (DftFwd + DftAft) / 2 + ListValue * PROProjectInfo::Width / 2.0;
   \   000007B0   000097E5           LDR      R0,[R7, #+0]
   \   000007B4   ........           _BLF     __fMul,??__fMul??rA
   \   000007B8   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   000007BC   0520A0E1           MOV      R2,R5
   \   000007C0   4034A0E3           MOV      R3,#+1073741824
   \   000007C4   ........           _BLF     __dDiv,??__dDiv??rA
   \   000007C8   0060A0E1           MOV      R6,R0
   \   000007CC   00009DE5           LDR      R0,[SP, #+0]
   \   000007D0   0170A0E1           MOV      R7,R1
   \   000007D4   4014A0E3           MOV      R1,#+1073741824
   \   000007D8   ........           _BLF     __fDiv,??__fDiv??rA
   \   000007DC   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   000007E0   0620A0E1           MOV      R2,R6
   \   000007E4   0730A0E1           MOV      R3,R7
   \   000007E8   ........           _BLF     __dAdd,??__dAdd??rA
   \   000007EC   ........           _BLF     __doubleToFloat,??__doubleToFloat??rA
   \   000007F0   C80184E5           STR      R0,[R4, #+456]
   \   000007F4   190400EA           B        ??Calculate_3
    540                          } else if (!StatusDftS) {
   \                     ??Calculate_29:
   \   000007F8   00009DE5           LDR      R0,[SP, #+0]
   \   000007FC   10808DE2           ADD      R8,SP,#+16
   \   00000800   4014A0E3           MOV      R1,#+1073741824
   \   00000804   ........           _BLF     __fDiv,??__fDiv??rA
   \   00000808   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   0000080C   030088E8           STM      R8,{R0,R1}
   \   00000810   001097E5           LDR      R1,[R7, #+0]
   \   00000814   000059E3           CMP      R9,#+0
   \   00000818   1F00001A           BNE      ??Calculate_30
    541                              HasListValue = true;
   \   0000081C   AA61C4E5           STRB     R6,[R4, #+426]
    542                              ListValue = (DftS - DftM) * 2.0 / PROProjectInfo::Width;
   \   00000820   0100A0E1           MOV      R0,R1
   \   00000824   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   00000828   0080A0E1           MOV      R8,R0
   \   0000082C   C80194E5           LDR      R0,[R4, #+456]
   \   00000830   0190A0E1           MOV      R9,R1
   \   00000834   04109DE5           LDR      R1,[SP, #+4]
   \   00000838   ........           _BLF     __fSub,??__fSub??rA
   \   0000083C   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   00000840   0020A0E3           MOV      R2,#+0
   \   00000844   4034A0E3           MOV      R3,#+1073741824
   \   00000848   ........           _BLF     __dMul,??__dMul??rA
   \   0000084C   0820A0E1           MOV      R2,R8
   \   00000850   0930A0E1           MOV      R3,R9
   \   00000854   ........           _BLF     __dDiv,??__dDiv??rA
   \   00000858   ........           _BLF     __doubleToFloat,??__doubleToFloat??rA
   \   0000085C   0010A0E1           MOV      R1,R0
   \   00000860   B01184E5           STR      R1,[R4, #+432]
    543                              DftP = (DftFwd + DftAft) / 2 - ListValue * PROProjectInfo::Width / 2.0;
   \   00000864   000097E5           LDR      R0,[R7, #+0]
   \   00000868   ........           _BLF     __fMul,??__fMul??rA
   \   0000086C   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   00000870   0520A0E1           MOV      R2,R5
   \   00000874   4034A0E3           MOV      R3,#+1073741824
   \   00000878   ........           _BLF     __dDiv,??__dDiv??rA
   \   0000087C   0020A0E1           MOV      R2,R0
   \   00000880   0130A0E1           MOV      R3,R1
   \   00000884   10008DE2           ADD      R0,SP,#+16
   \   00000888   030090E8           LDM      R0,{R0,R1}
   \   0000088C   ........           _BLF     __dSub,??__dSub??rA
   \   00000890   ........           _BLF     __doubleToFloat,??__doubleToFloat??rA
   \   00000894   C40184E5           STR      R0,[R4, #+452]
   \   00000898   F00300EA           B        ??Calculate_3
    544                          } else {
    545                              DftP = (DftFwd + DftAft) / 2 - PROInclinometer::ListValue * PROProjectInfo::Width / 2.0;
   \                     ??Calculate_30:
   \   0000089C   E8059FE5           LDR      R0,??Calculate_2+0xC  ;; ??ListValue
   \   000008A0   000090E5           LDR      R0,[R0, #+0]
   \   000008A4   ........           _BLF     __fMul,??__fMul??rA
   \   000008A8   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   000008AC   0020A0E3           MOV      R2,#+0
   \   000008B0   4034A0E3           MOV      R3,#+1073741824
   \   000008B4   ........           _BLF     __dDiv,??__dDiv??rA
   \   000008B8   0020A0E1           MOV      R2,R0
   \   000008BC   0130A0E1           MOV      R3,R1
   \   000008C0   10008DE2           ADD      R0,SP,#+16
   \   000008C4   030090E8           LDM      R0,{R0,R1}
   \   000008C8   ........           _BLF     __dSub,??__dSub??rA
   \   000008CC   ........           _BLF     __doubleToFloat,??__doubleToFloat??rA
   \   000008D0   C40184E5           STR      R0,[R4, #+452]
    546                              DftS = (DftFwd + DftAft) / 2 + PROInclinometer::ListValue * PROProjectInfo::Width / 2.0;
   \   000008D4   B0059FE5           LDR      R0,??Calculate_2+0xC  ;; ??ListValue
   \   000008D8   001090E5           LDR      R1,[R0, #+0]
   \   000008DC   000097E5           LDR      R0,[R7, #+0]
   \   000008E0   ........           _BLF     __fMul,??__fMul??rA
   \   000008E4   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   000008E8   0520A0E1           MOV      R2,R5
   \   000008EC   4034A0E3           MOV      R3,#+1073741824
   \   000008F0   ........           _BLF     __dDiv,??__dDiv??rA
   \   000008F4   10208DE2           ADD      R2,SP,#+16
   \   000008F8   0C0092E8           LDM      R2,{R2,R3}
   \   000008FC   ........           _BLF     __dAdd,??__dAdd??rA
   \   00000900   ........           _BLF     __doubleToFloat,??__doubleToFloat??rA
   \   00000904   C80184E5           STR      R0,[R4, #+456]
    547                              HasListValue = false;
   \   00000908   18FEFFEA           B        ??Calculate_8
    548                          }
    549                      } else if (!StatusDftP && !StatusDftS) {
   \                     ??Calculate_27:
   \   0000090C   500194E5           LDR      R0,[R4, #+336]
   \   00000910   000050E3           CMP      R0,#+0
   \   00000914   54019405           LDREQ    R0,[R4, #+340]
   \   00000918   00005003           CMPEQ    R0,#+0
   \   0000091C   6F00001A           BNE      ??Calculate_31
    550                          ListValue = (DftS  - DftP) / PROProjectInfo::Width;
   \   00000920   C4B194E5           LDR      R11,[R4, #+452]
   \   00000924   C8A194E5           LDR      R10,[R4, #+456]
   \   00000928   0B10A0E1           MOV      R1,R11
   \   0000092C   0A00A0E1           MOV      R0,R10
   \   00000930   ........           _BLF     __fSub,??__fSub??rA
   \   00000934   001097E5           LDR      R1,[R7, #+0]
   \   00000938   ........           _BLF     __fDiv,??__fDiv??rA
   \   0000093C   B00184E5           STR      R0,[R4, #+432]
    551                          HasListValue = true;
   \   00000940   AA61C4E5           STRB     R6,[R4, #+426]
    552                          HasDeflection = false;
   \   00000944   0000A0E3           MOV      R0,#+0
   \   00000948   AB01C4E5           STRB     R0,[R4, #+427]
    553                          Deflection   = 0.0;
   \   0000094C   EC0184E5           STR      R0,[R4, #+492]
    554                          float DftM   = (DftP + DftS) / 2.0;
   \   00000950   0B00A0E1           MOV      R0,R11
   \   00000954   0A10A0E1           MOV      R1,R10
   \   00000958   ........           _BLF     __fAdd,??__fAdd??rA
   \   0000095C   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   00000960   0520A0E1           MOV      R2,R5
   \   00000964   4034A0E3           MOV      R3,#+1073741824
   \   00000968   ........           _BLF     __dDiv,??__dDiv??rA
   \   0000096C   ........           _BLF     __doubleToFloat,??__doubleToFloat??rA
   \   00000970   0090A0E1           MOV      R9,R0
    555                          MeanDraft    = DftM;
   \   00000974   F49184E5           STR      R9,[R4, #+500]
    556                          StatusDftMean = GETVAL_NO_ERR;
   \   00000978   685184E5           STR      R5,[R4, #+360]
    557                          if (!StatusDftFwd) {
   \   0000097C   480194E5           LDR      R0,[R4, #+328]
   \   00000980   000050E3           CMP      R0,#+0
   \   00000984   1700001A           BNE      ??Calculate_32
    558                              HasTrimValue = true;
   \   00000988   A961C4E5           STRB     R6,[R4, #+425]
   \   0000098C   000098E5           LDR      R0,[R8, #+0]
   \   00000990   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   00000994   0060A0E1           MOV      R6,R0
   \   00000998   BC0194E5           LDR      R0,[R4, #+444]
   \   0000099C   0170A0E1           MOV      R7,R1
   \   000009A0   0910A0E1           MOV      R1,R9
   \   000009A4   ........           _BLF     __fSub,??__fSub??rA
   \   000009A8   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   000009AC   0020A0E3           MOV      R2,#+0
   \   000009B0   4034A0E3           MOV      R3,#+1073741824
   \   000009B4   ........           _BLF     __dMul,??__dMul??rA
   \   000009B8   0620A0E1           MOV      R2,R6
   \   000009BC   0730A0E1           MOV      R3,R7
   \   000009C0   ........           _BLF     __dDiv,??__dDiv??rA
   \   000009C4   ........           _BLF     __doubleToFloat,??__doubleToFloat??rA
   \   000009C8   AC0184E5           STR      R0,[R4, #+428]
    559                              TrimValue = (DftFwd - DftM) * 2.0 / PROProjectInfo::LengthBetweenPP;
    560                              DftAft    = DftFwd - TrimValue / PROProjectInfo::LengthBetweenPP;
   \   000009CC   001098E5           LDR      R1,[R8, #+0]
   \   000009D0   ........           _BLF     __fDiv,??__fDiv??rA
   \   000009D4   0010A0E1           MOV      R1,R0
   \   000009D8   BC0194E5           LDR      R0,[R4, #+444]
   \   000009DC   ........           _BLF     __fSub,??__fSub??rA
   \   000009E0   C00184E5           STR      R0,[R4, #+448]
   \   000009E4   9D0300EA           B        ??Calculate_3
    561                          } else if (!StatusDftAft) {
   \                     ??Calculate_32:
   \   000009E8   4C0194E5           LDR      R0,[R4, #+332]
   \   000009EC   007098E5           LDR      R7,[R8, #+0]
   \   000009F0   000050E3           CMP      R0,#+0
   \   000009F4   1600001A           BNE      ??Calculate_33
    562                              HasTrimValue = true;
   \   000009F8   A961C4E5           STRB     R6,[R4, #+425]
    563                              TrimValue = (DftM - DftAft) * 2.0 / PROProjectInfo::LengthBetweenPP;
   \   000009FC   0700A0E1           MOV      R0,R7
   \   00000A00   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   00000A04   0170A0E1           MOV      R7,R1
   \   00000A08   C01194E5           LDR      R1,[R4, #+448]
   \   00000A0C   0060A0E1           MOV      R6,R0
   \   00000A10   0900A0E1           MOV      R0,R9
   \   00000A14   ........           _BLF     __fSub,??__fSub??rA
   \   00000A18   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   00000A1C   0020A0E3           MOV      R2,#+0
   \   00000A20   4034A0E3           MOV      R3,#+1073741824
   \   00000A24   ........           _BLF     __dMul,??__dMul??rA
   \   00000A28   0620A0E1           MOV      R2,R6
   \   00000A2C   0730A0E1           MOV      R3,R7
   \   00000A30   ........           _BLF     __dDiv,??__dDiv??rA
   \   00000A34   ........           _BLF     __doubleToFloat,??__doubleToFloat??rA
   \   00000A38   AC0184E5           STR      R0,[R4, #+428]
    564                              DftFwd    = DftAft + TrimValue / PROProjectInfo::LengthBetweenPP;
   \   00000A3C   001098E5           LDR      R1,[R8, #+0]
   \   00000A40   ........           _BLF     __fDiv,??__fDiv??rA
   \   00000A44   C01194E5           LDR      R1,[R4, #+448]
   \   00000A48   ........           _BLF     __fAdd,??__fAdd??rA
   \   00000A4C   BC0184E5           STR      R0,[R4, #+444]
   \   00000A50   820300EA           B        ??Calculate_3
    565                          } else {
    566                              DftAft    = DftM - PROInclinometer::TrimValue * PROProjectInfo::LengthBetweenPP / 2.0;
   \                     ??Calculate_33:
   \   00000A54   0900A0E1           MOV      R0,R9
   \   00000A58   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   00000A5C   00A0A0E1           MOV      R10,R0
   \   00000A60   20049FE5           LDR      R0,??Calculate_2+0x8  ;; ??TrimValue
   \   00000A64   01B0A0E1           MOV      R11,R1
   \   00000A68   000090E5           LDR      R0,[R0, #+0]
   \   00000A6C   0710A0E1           MOV      R1,R7
   \   00000A70   ........           _BLF     __fMul,??__fMul??rA
   \   00000A74   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   00000A78   0020A0E3           MOV      R2,#+0
   \   00000A7C   4034A0E3           MOV      R3,#+1073741824
   \   00000A80   ........           _BLF     __dDiv,??__dDiv??rA
   \   00000A84   0020A0E1           MOV      R2,R0
   \   00000A88   0130A0E1           MOV      R3,R1
   \   00000A8C   0A00A0E1           MOV      R0,R10
   \   00000A90   0B10A0E1           MOV      R1,R11
   \   00000A94   ........           _BLF     __dSub,??__dSub??rA
   \   00000A98   ........           _BLF     __doubleToFloat,??__doubleToFloat??rA
   \   00000A9C   C00184E5           STR      R0,[R4, #+448]
    567                              DftFwd    = DftM + PROInclinometer::TrimValue * PROProjectInfo::LengthBetweenPP / 2.0;
   \   00000AA0   E0039FE5           LDR      R0,??Calculate_2+0x8  ;; ??TrimValue
   \   00000AA4   001090E5           LDR      R1,[R0, #+0]
   \   00000AA8   000098E5           LDR      R0,[R8, #+0]
   \   00000AAC   ........           _BLF     __fMul,??__fMul??rA
   \   00000AB0   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   00000AB4   0520A0E1           MOV      R2,R5
   \   00000AB8   4034A0E3           MOV      R3,#+1073741824
   \   00000ABC   ........           _BLF     __dDiv,??__dDiv??rA
   \   00000AC0   0A20A0E1           MOV      R2,R10
   \   00000AC4   0B30A0E1           MOV      R3,R11
   \   00000AC8   ........           _BLF     __dAdd,??__dAdd??rA
   \   00000ACC   ........           _BLF     __doubleToFloat,??__doubleToFloat??rA
   \   00000AD0   BC0184E5           STR      R0,[R4, #+444]
    568                              HasTrimValue = false;
   \   00000AD4   0500A0E1           MOV      R0,R5
   \   00000AD8   A901C4E5           STRB     R0,[R4, #+425]
   \   00000ADC   5F0300EA           B        ??Calculate_3
    569                          }
    570                      } else {
    571                          MeanDraft     = 0.0;
   \                     ??Calculate_31:
   \   00000AE0   0000A0E3           MOV      R0,#+0
   \   00000AE4   F40184E5           STR      R0,[R4, #+500]
    572                          StatusDftMean = GETVAL_ERROR;
   \   00000AE8   68A184E5           STR      R10,[R4, #+360]
    573                          HasListValue  = false;
   \   00000AEC   AA01C4E5           STRB     R0,[R4, #+426]
    574                          HasTrimValue  = false;
   \   00000AF0   A901C4E5           STRB     R0,[R4, #+425]
    575                          HasDeflection = false;
   \   00000AF4   AB01C4E5           STRB     R0,[R4, #+427]
   \   00000AF8   580300EA           B        ??Calculate_3
    576                      }
    577                  }
    578                  break;
    579              case DftCorners:
    580                  {
    581                      StatusDftFwdP = DFPPtr->GetCalcVal(&DftFwdP, &DftFwdMarkP);
   \                     ??Calculate_34:
   \   00000AFC   880194E5           LDR      R0,[R4, #+392]
   \   00000B00   772F84E2           ADD      R2,R4,#+476
   \   00000B04   751F84E2           ADD      R1,R4,#+468
   \   00000B08   ........           _BLF     ??GetCalcVal,??GetCalcVal??rA
   \   00000B0C   600184E5           STR      R0,[R4, #+352]
    582                      StatusDftFwdS = DFSPtr->GetCalcVal(&DftFwdS, &DftFwdMarkS);
   \   00000B10   8C0194E5           LDR      R0,[R4, #+396]
   \   00000B14   782F84E2           ADD      R2,R4,#+480
   \   00000B18   761F84E2           ADD      R1,R4,#+472
   \   00000B1C   ........           _BLF     ??GetCalcVal,??GetCalcVal??rA
   \   00000B20   640184E5           STR      R0,[R4, #+356]
    583                      StatusDftAftP = DAPPtr->GetCalcVal(&DftAftP, &DftAftMarkP);
   \   00000B24   800194E5           LDR      R0,[R4, #+384]
   \   00000B28   792F84E2           ADD      R2,R4,#+484
   \   00000B2C   731F84E2           ADD      R1,R4,#+460
   \   00000B30   ........           _BLF     ??GetCalcVal,??GetCalcVal??rA
   \   00000B34   580184E5           STR      R0,[R4, #+344]
    584                      StatusDftAftS = DASPtr->GetCalcVal(&DftAftS, &DftAftMarkS);
   \   00000B38   840194E5           LDR      R0,[R4, #+388]
   \   00000B3C   7A2F84E2           ADD      R2,R4,#+488
   \   00000B40   741F84E2           ADD      R1,R4,#+464
   \   00000B44   ........           _BLF     ??GetCalcVal,??GetCalcVal??rA
   \   00000B48   5C0184E5           STR      R0,[R4, #+348]
   \   00000B4C   600194E5           LDR      R0,[R4, #+352]
   \   00000B50   000050E3           CMP      R0,#+0
   \   00000B54   64019405           LDREQ    R0,[R4, #+356]
   \   00000B58   00005003           CMPEQ    R0,#+0
   \   00000B5C   58019405           LDREQ    R0,[R4, #+344]
   \   00000B60   00005003           CMPEQ    R0,#+0
   \   00000B64   5F00001A           BNE      ??Calculate_35
   \   00000B68   5C0194E5           LDR      R0,[R4, #+348]
   \   00000B6C   000050E3           CMP      R0,#+0
   \   00000B70   5F00001A           BNE      ??Calculate_36
    585                      if (!StatusDftFwdP && !StatusDftFwdS && !StatusDftAftP && !StatusDftAftS) {
    586                          DftFwdMark    = (DftFwdMarkP + DftFwdMarkS) / 2.0;
   \   00000B74   DC1194E5           LDR      R1,[R4, #+476]
   \   00000B78   E00194E5           LDR      R0,[R4, #+480]
   \   00000B7C   ........           _BLF     __fAdd,??__fAdd??rA
   \   00000B80   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   00000B84   0020A0E3           MOV      R2,#+0
   \   00000B88   4034A0E3           MOV      R3,#+1073741824
   \   00000B8C   ........           _BLF     __dDiv,??__dDiv??rA
   \   00000B90   ........           _BLF     __doubleToFloat,??__doubleToFloat??rA
   \   00000B94   B40184E5           STR      R0,[R4, #+436]
    587                          DftAftMark    = (DftAftMarkP + DftAftMarkS) / 2.0;
   \   00000B98   E41194E5           LDR      R1,[R4, #+484]
   \   00000B9C   E80194E5           LDR      R0,[R4, #+488]
   \   00000BA0   ........           _BLF     __fAdd,??__fAdd??rA
   \   00000BA4   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   00000BA8   0520A0E1           MOV      R2,R5
   \   00000BAC   4034A0E3           MOV      R3,#+1073741824
   \   00000BB0   ........           _BLF     __dDiv,??__dDiv??rA
   \   00000BB4   ........           _BLF     __doubleToFloat,??__doubleToFloat??rA
   \   00000BB8   B80184E5           STR      R0,[R4, #+440]
   \   00000BBC   D41194E5           LDR      R1,[R4, #+468]
   \   00000BC0   D80194E5           LDR      R0,[R4, #+472]
   \   00000BC4   ........           _BLF     __fAdd,??__fAdd??rA
   \   00000BC8   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   00000BCC   0520A0E1           MOV      R2,R5
   \   00000BD0   4034A0E3           MOV      R3,#+1073741824
   \   00000BD4   ........           _BLF     __dDiv,??__dDiv??rA
   \   00000BD8   ........           _BLF     __doubleToFloat,??__doubleToFloat??rA
   \   00000BDC   00008DE5           STR      R0,[SP, #+0]
   \   00000BE0   BC0184E5           STR      R0,[R4, #+444]
    588                          DftFwd        = (DftFwdP + DftFwdS) / 2.0;
    589                          DftAft        = (DftAftP + DftAftS) / 2.0;
   \   00000BE4   CCB194E5           LDR      R11,[R4, #+460]
   \   00000BE8   D0A194E5           LDR      R10,[R4, #+464]
   \   00000BEC   0B00A0E1           MOV      R0,R11
   \   00000BF0   0A10A0E1           MOV      R1,R10
   \   00000BF4   ........           _BLF     __fAdd,??__fAdd??rA
   \   00000BF8   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   00000BFC   0520A0E1           MOV      R2,R5
   \   00000C00   4034A0E3           MOV      R3,#+1073741824
   \   00000C04   ........           _BLF     __dDiv,??__dDiv??rA
   \   00000C08   ........           _BLF     __doubleToFloat,??__doubleToFloat??rA
   \   00000C0C   C00184E5           STR      R0,[R4, #+448]
    590                          DftP          = (DftFwdP + DftAftP) / 2.0;
   \   00000C10   D40194E5           LDR      R0,[R4, #+468]
   \   00000C14   0B10A0E1           MOV      R1,R11
   \   00000C18   ........           _BLF     __fAdd,??__fAdd??rA
   \   00000C1C   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   00000C20   0520A0E1           MOV      R2,R5
   \   00000C24   4034A0E3           MOV      R3,#+1073741824
   \   00000C28   ........           _BLF     __dDiv,??__dDiv??rA
   \   00000C2C   ........           _BLF     __doubleToFloat,??__doubleToFloat??rA
   \   00000C30   00B0A0E1           MOV      R11,R0
   \   00000C34   C4B184E5           STR      R11,[R4, #+452]
    591                          DftS          = (DftFwdS + DftAftS) / 2.0;
   \   00000C38   D80194E5           LDR      R0,[R4, #+472]
   \   00000C3C   0A10A0E1           MOV      R1,R10
   \   00000C40   ........           _BLF     __fAdd,??__fAdd??rA
   \   00000C44   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   00000C48   0520A0E1           MOV      R2,R5
   \   00000C4C   4034A0E3           MOV      R3,#+1073741824
   \   00000C50   ........           _BLF     __dDiv,??__dDiv??rA
   \   00000C54   ........           _BLF     __doubleToFloat,??__doubleToFloat??rA
   \   00000C58   00A0A0E1           MOV      R10,R0
   \   00000C5C   C8A184E5           STR      R10,[R4, #+456]
    592          
    593                          TrimValue     = (DftFwd - DftAft) / PROProjectInfo::LengthBetweenPP;
   \   00000C60   BC0194E5           LDR      R0,[R4, #+444]
   \   00000C64   C01194E5           LDR      R1,[R4, #+448]
   \   00000C68   ........           _BLF     __fSub,??__fSub??rA
   \   00000C6C   001098E5           LDR      R1,[R8, #+0]
   \   00000C70   ........           _BLF     __fDiv,??__fDiv??rA
   \   00000C74   AC0184E5           STR      R0,[R4, #+428]
    594                          ListValue     = (DftS  - DftP) / PROProjectInfo::Width;
   \   00000C78   0A00A0E1           MOV      R0,R10
   \   00000C7C   0B10A0E1           MOV      R1,R11
   \   00000C80   ........           _BLF     __fSub,??__fSub??rA
   \   00000C84   001097E5           LDR      R1,[R7, #+0]
   \   00000C88   ........           _BLF     __fDiv,??__fDiv??rA
   \   00000C8C   B00184E5           STR      R0,[R4, #+432]
    595                          HasListValue  = true;
   \   00000C90   AA61C4E5           STRB     R6,[R4, #+426]
    596                          HasTrimValue  = true;
   \   00000C94   A961C4E5           STRB     R6,[R4, #+425]
    597                          MeanDraft     = (DftFwd + DftAft + DftS + DftP) / 4.0;
   \   00000C98   BC1194E5           LDR      R1,[R4, #+444]
   \   00000C9C   C00194E5           LDR      R0,[R4, #+448]
   \   00000CA0   ........           _BLF     __fAdd,??__fAdd??rA
   \   00000CA4   0A10A0E1           MOV      R1,R10
   \   00000CA8   ........           _BLF     __fAdd,??__fAdd??rA
   \   00000CAC   0B10A0E1           MOV      R1,R11
   \   00000CB0   ........           _BLF     __fAdd,??__fAdd??rA
   \   00000CB4   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   00000CB8   0520A0E1           MOV      R2,R5
   \   00000CBC   4034A0E3           MOV      R3,#+1073741824
   \   00000CC0   403983E3           ORR      R3,R3,#0x100000
   \   00000CC4   ........           _BLF     __dDiv,??__dDiv??rA
   \   00000CC8   ........           _BLF     __doubleToFloat,??__doubleToFloat??rA
   \   00000CCC   F40184E5           STR      R0,[R4, #+500]
    598                          StatusDftMean = GETVAL_NO_ERR;
   \   00000CD0   685184E5           STR      R5,[R4, #+360]
    599                          StatusDftFwd  = GETVAL_NOT_MEASURED;
   \                     ??Calculate_37:
   \   00000CD4   489184E5           STR      R9,[R4, #+328]
    600                          StatusDftAft  = GETVAL_NOT_MEASURED;
   \   00000CD8   4C9184E5           STR      R9,[R4, #+332]
    601                          StatusDftP    = GETVAL_NOT_MEASURED;
   \   00000CDC   509184E5           STR      R9,[R4, #+336]
    602                          StatusDftS    = GETVAL_NOT_MEASURED;
   \   00000CE0   549184E5           STR      R9,[R4, #+340]
   \   00000CE4   DD0200EA           B        ??Calculate_3
    603          
    604                      } else if (!StatusDftAftP && !StatusDftAftS) {
   \                     ??Calculate_35:
   \   00000CE8   580194E5           LDR      R0,[R4, #+344]
   \   00000CEC   000050E3           CMP      R0,#+0
   \   00000CF0   BA00001A           BNE      ??Calculate_38
   \                     ??Calculate_36:
   \   00000CF4   5C0194E5           LDR      R0,[R4, #+348]
   \   00000CF8   000050E3           CMP      R0,#+0
   \   00000CFC   B700001A           BNE      ??Calculate_38
    605                          HasListValue  = true;
   \   00000D00   AA61C4E5           STRB     R6,[R4, #+426]
    606                          ListValue     = (DftAftS - DftAftP) / PROProjectInfo::Width;
   \   00000D04   CCB194E5           LDR      R11,[R4, #+460]
   \   00000D08   D0A194E5           LDR      R10,[R4, #+464]
   \   00000D0C   0B10A0E1           MOV      R1,R11
   \   00000D10   0A00A0E1           MOV      R0,R10
   \   00000D14   ........           _BLF     __fSub,??__fSub??rA
   \   00000D18   001097E5           LDR      R1,[R7, #+0]
   \   00000D1C   ........           _BLF     __fDiv,??__fDiv??rA
   \   00000D20   B00184E5           STR      R0,[R4, #+432]
    607                          DftAftMark    = (DftAftMarkP + DftAftMarkS) / 2.0;
   \   00000D24   E41194E5           LDR      R1,[R4, #+484]
   \   00000D28   E80194E5           LDR      R0,[R4, #+488]
   \   00000D2C   ........           _BLF     __fAdd,??__fAdd??rA
   \   00000D30   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   00000D34   0020A0E3           MOV      R2,#+0
   \   00000D38   4034A0E3           MOV      R3,#+1073741824
   \   00000D3C   ........           _BLF     __dDiv,??__dDiv??rA
   \   00000D40   ........           _BLF     __doubleToFloat,??__doubleToFloat??rA
   \   00000D44   B80184E5           STR      R0,[R4, #+440]
    608                          DftAft        = (DftAftP + DftAftS) / 2.0;
   \   00000D48   0B00A0E1           MOV      R0,R11
   \   00000D4C   0A10A0E1           MOV      R1,R10
   \   00000D50   ........           _BLF     __fAdd,??__fAdd??rA
   \   00000D54   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   00000D58   0520A0E1           MOV      R2,R5
   \   00000D5C   4034A0E3           MOV      R3,#+1073741824
   \   00000D60   ........           _BLF     __dDiv,??__dDiv??rA
   \   00000D64   ........           _BLF     __doubleToFloat,??__doubleToFloat??rA
   \   00000D68   C00184E5           STR      R0,[R4, #+448]
    609          
    610                          if (!StatusDftFwdP) {
   \   00000D6C   600194E5           LDR      R0,[R4, #+352]
   \   00000D70   000050E3           CMP      R0,#+0
   \   00000D74   0C00001A           BNE      ??Calculate_39
    611                              HasTrimValue = true;
   \   00000D78   D40194E5           LDR      R0,[R4, #+468]
   \   00000D7C   0A10A0E1           MOV      R1,R10
   \   00000D80   ........           _BLF     __fAdd,??__fAdd??rA
   \   00000D84   0B10A0E1           MOV      R1,R11
   \   00000D88   ........           _BLF     __fSub,??__fSub??rA
   \   00000D8C   D80184E5           STR      R0,[R4, #+472]
    612                              DftFwdS    = DftFwdP + DftAftS - DftAftP;
    613                              TrimValue  = (DftFwdP - DftAftP) / PROProjectInfo::LengthBetweenPP;
   \   00000D90   D40194E5           LDR      R0,[R4, #+468]
   \   00000D94   0B10A0E1           MOV      R1,R11
   \                     ??Calculate_40:
   \   00000D98   ........           _BLF     __fSub,??__fSub??rA
   \   00000D9C   001098E5           LDR      R1,[R8, #+0]
   \   00000DA0   ........           _BLF     __fDiv,??__fDiv??rA
   \   00000DA4   AC0184E5           STR      R0,[R4, #+428]
   \   00000DA8   0C0000EA           B        ??Calculate_41
    614                          } else if (!StatusDftFwdS) {
   \                     ??Calculate_39:
   \   00000DAC   640194E5           LDR      R0,[R4, #+356]
   \   00000DB0   000050E3           CMP      R0,#+0
   \   00000DB4   0800001A           BNE      ??Calculate_42
    615                              HasTrimValue = true;
   \   00000DB8   D80194E5           LDR      R0,[R4, #+472]
   \   00000DBC   0B10A0E1           MOV      R1,R11
   \   00000DC0   ........           _BLF     __fAdd,??__fAdd??rA
   \   00000DC4   0A10A0E1           MOV      R1,R10
   \   00000DC8   ........           _BLF     __fSub,??__fSub??rA
   \   00000DCC   D40184E5           STR      R0,[R4, #+468]
    616                              DftFwdP    = DftFwdS + DftAftP - DftAftS;
    617                              TrimValue  = (DftFwdS - DftAftS) / PROProjectInfo::LengthBetweenPP;
   \   00000DD0   D80194E5           LDR      R0,[R4, #+472]
   \   00000DD4   0A10A0E1           MOV      R1,R10
   \   00000DD8   EEFFFFEA           B        ??Calculate_40
    618                          } else {
    619                              HasTrimValue  = false;
   \                     ??Calculate_42:
   \   00000DDC   0060A0E3           MOV      R6,#+0
   \                     ??Calculate_41:
   \   00000DE0   A961C4E5           STRB     R6,[R4, #+425]
    620                          }
    621                          if (HasTrimValue) {
   \   00000DE4   000056E3           CMP      R6,#+0
   \   00000DE8   2800000A           BEQ      ??Calculate_43
    622                              DftFwdMark  = (DftFwdMarkP + DftFwdMarkS) / 2.0;
   \   00000DEC   DC1194E5           LDR      R1,[R4, #+476]
   \   00000DF0   E00194E5           LDR      R0,[R4, #+480]
   \   00000DF4   ........           _BLF     __fAdd,??__fAdd??rA
   \   00000DF8   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   00000DFC   0020A0E3           MOV      R2,#+0
   \   00000E00   4034A0E3           MOV      R3,#+1073741824
   \   00000E04   ........           _BLF     __dDiv,??__dDiv??rA
   \   00000E08   ........           _BLF     __doubleToFloat,??__doubleToFloat??rA
   \   00000E0C   B40184E5           STR      R0,[R4, #+436]
    623                              DftFwd      = (DftFwdP + DftFwdS) / 2.0;
   \   00000E10   D86194E5           LDR      R6,[R4, #+472]
   \   00000E14   D45194E5           LDR      R5,[R4, #+468]
   \   00000E18   0610A0E1           MOV      R1,R6
   \   00000E1C   0500A0E1           MOV      R0,R5
   \   00000E20   ........           _BLF     __fAdd,??__fAdd??rA
   \   00000E24   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   00000E28   0020A0E3           MOV      R2,#+0
   \   00000E2C   4034A0E3           MOV      R3,#+1073741824
   \   00000E30   ........           _BLF     __dDiv,??__dDiv??rA
   \   00000E34   ........           _BLF     __doubleToFloat,??__doubleToFloat??rA
   \   00000E38   BC0184E5           STR      R0,[R4, #+444]
    624                              DftP        = (DftFwdP + DftAftP) / 2.0;
   \   00000E3C   0500A0E1           MOV      R0,R5
   \   00000E40   0B10A0E1           MOV      R1,R11
   \   00000E44   ........           _BLF     __fAdd,??__fAdd??rA
   \   00000E48   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   00000E4C   0020A0E3           MOV      R2,#+0
   \   00000E50   4034A0E3           MOV      R3,#+1073741824
   \   00000E54   ........           _BLF     __dDiv,??__dDiv??rA
   \   00000E58   ........           _BLF     __doubleToFloat,??__doubleToFloat??rA
   \   00000E5C   C40184E5           STR      R0,[R4, #+452]
    625                              DftS        = (DftFwdS + DftAftS) / 2.0;
   \   00000E60   0600A0E1           MOV      R0,R6
   \   00000E64   0A10A0E1           MOV      R1,R10
   \   00000E68   ........           _BLF     __fAdd,??__fAdd??rA
   \   00000E6C   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   00000E70   0020A0E3           MOV      R2,#+0
   \                     ??Calculate_44:
   \   00000E74   4034A0E3           MOV      R3,#+1073741824
   \   00000E78   ........           _BLF     __dDiv,??__dDiv??rA
   \   00000E7C   440000EA           B        ??Calculate_45
   \                     ??Calculate_2:
   \   00000E80   ........           DC32     ??Width
   \   00000E84   ........           DC32     ??LengthBetweenPP
   \   00000E88   ........           DC32     ??TrimValue
   \   00000E8C   ........           DC32     ??ListValue
    626                          } else {
    627                              DftFwd      =  DftAft + PROInclinometer::TrimValue * PROProjectInfo::LengthBetweenPP;
   \                     ??Calculate_43:
   \   00000E90   A40B9FE5           LDR      R0,??Calculate_46  ;; ??TrimValue
   \   00000E94   001090E5           LDR      R1,[R0, #+0]
   \   00000E98   000098E5           LDR      R0,[R8, #+0]
   \   00000E9C   ........           _BLF     __fMul,??__fMul??rA
   \   00000EA0   C01194E5           LDR      R1,[R4, #+448]
   \   00000EA4   ........           _BLF     __fAdd,??__fAdd??rA
   \   00000EA8   BC0184E5           STR      R0,[R4, #+444]
    628                              DftFwdMark  =  DftFwd + PROInclinometer::TrimValue * (DFPPtr->GetLDistanceMarkToPP() + DFSPtr->GetLDistanceMarkToPP()) / 2.0;
   \   00000EAC   880194E5           LDR      R0,[R4, #+392]
   \   00000EB0   ........           _BLF     ??GetLDistanceMarkToPP,??GetLDistanceMarkToPP??rA
   \   00000EB4   0060A0E1           MOV      R6,R0
   \   00000EB8   8C0194E5           LDR      R0,[R4, #+396]
   \   00000EBC   ........           _BLF     ??GetLDistanceMarkToPP,??GetLDistanceMarkToPP??rA
   \   00000EC0   BC5194E5           LDR      R5,[R4, #+444]
   \   00000EC4   0610A0E1           MOV      R1,R6
   \   00000EC8   ........           _BLF     __fAdd,??__fAdd??rA
   \   00000ECC   681B9FE5           LDR      R1,??Calculate_46  ;; ??TrimValue
   \   00000ED0   001091E5           LDR      R1,[R1, #+0]
   \   00000ED4   ........           _BLF     __fMul,??__fMul??rA
   \   00000ED8   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   00000EDC   0020A0E3           MOV      R2,#+0
   \   00000EE0   4034A0E3           MOV      R3,#+1073741824
   \   00000EE4   ........           _BLF     __dDiv,??__dDiv??rA
   \   00000EE8   00A0A0E1           MOV      R10,R0
   \   00000EEC   01B0A0E1           MOV      R11,R1
   \   00000EF0   0500A0E1           MOV      R0,R5
   \   00000EF4   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   00000EF8   0A20A0E1           MOV      R2,R10
   \   00000EFC   0B30A0E1           MOV      R3,R11
   \   00000F00   ........           _BLF     __dAdd,??__dAdd??rA
   \   00000F04   ........           _BLF     __doubleToFloat,??__doubleToFloat??rA
   \   00000F08   B40184E5           STR      R0,[R4, #+436]
    629                              DftP        = (DftFwd + DftAft) / 2 - PROInclinometer::ListValue * PROProjectInfo::Width / 2.0;
   \   00000F0C   C00194E5           LDR      R0,[R4, #+448]
   \                     ??Calculate_47:
   \   00000F10   0510A0E1           MOV      R1,R5
   \   00000F14   ........           _BLF     __fAdd,??__fAdd??rA
   \   00000F18   4014A0E3           MOV      R1,#+1073741824
   \   00000F1C   ........           _BLF     __fDiv,??__fDiv??rA
   \   00000F20   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   00000F24   00A0A0E1           MOV      R10,R0
   \   00000F28   100B9FE5           LDR      R0,??Calculate_46+0x4  ;; ??ListValue
   \   00000F2C   01B0A0E1           MOV      R11,R1
   \   00000F30   001090E5           LDR      R1,[R0, #+0]
   \   00000F34   000097E5           LDR      R0,[R7, #+0]
   \   00000F38   ........           _BLF     __fMul,??__fMul??rA
   \   00000F3C   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   00000F40   0020A0E3           MOV      R2,#+0
   \   00000F44   4034A0E3           MOV      R3,#+1073741824
   \   00000F48   ........           _BLF     __dDiv,??__dDiv??rA
   \   00000F4C   0020A0E1           MOV      R2,R0
   \   00000F50   0130A0E1           MOV      R3,R1
   \   00000F54   0A00A0E1           MOV      R0,R10
   \   00000F58   0B10A0E1           MOV      R1,R11
   \   00000F5C   ........           _BLF     __dSub,??__dSub??rA
   \   00000F60   ........           _BLF     __doubleToFloat,??__doubleToFloat??rA
   \   00000F64   C40184E5           STR      R0,[R4, #+452]
    630                              DftS        = (DftFwd + DftAft) / 2 + PROInclinometer::ListValue * PROProjectInfo::Width / 2.0;
   \   00000F68   D00A9FE5           LDR      R0,??Calculate_46+0x4  ;; ??ListValue
   \   00000F6C   001090E5           LDR      R1,[R0, #+0]
   \   00000F70   000097E5           LDR      R0,[R7, #+0]
   \   00000F74   ........           _BLF     __fMul,??__fMul??rA
   \   00000F78   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   00000F7C   0020A0E3           MOV      R2,#+0
   \   00000F80   4034A0E3           MOV      R3,#+1073741824
   \   00000F84   ........           _BLF     __dDiv,??__dDiv??rA
   \   00000F88   0A20A0E1           MOV      R2,R10
   \   00000F8C   0B30A0E1           MOV      R3,R11
   \   00000F90   ........           _BLF     __dAdd,??__dAdd??rA
   \                     ??Calculate_45:
   \   00000F94   ........           _BLF     __doubleToFloat,??__doubleToFloat??rA
   \   00000F98   0050A0E1           MOV      R5,R0
   \   00000F9C   C85184E5           STR      R5,[R4, #+456]
    631                          }
    632                          MeanDraft     = (DftFwd + DftAft + DftS + DftP) / 4.0;
   \   00000FA0   BC1194E5           LDR      R1,[R4, #+444]
   \   00000FA4   C00194E5           LDR      R0,[R4, #+448]
   \   00000FA8   ........           _BLF     __fAdd,??__fAdd??rA
   \   00000FAC   0510A0E1           MOV      R1,R5
   \   00000FB0   ........           _BLF     __fAdd,??__fAdd??rA
   \   00000FB4   C41194E5           LDR      R1,[R4, #+452]
   \   00000FB8   ........           _BLF     __fAdd,??__fAdd??rA
   \   00000FBC   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   00000FC0   0020A0E3           MOV      R2,#+0
   \   00000FC4   4034A0E3           MOV      R3,#+1073741824
   \   00000FC8   403983E3           ORR      R3,R3,#0x100000
   \   00000FCC   ........           _BLF     __dDiv,??__dDiv??rA
   \   00000FD0   ........           _BLF     __doubleToFloat,??__doubleToFloat??rA
   \   00000FD4   F40184E5           STR      R0,[R4, #+500]
    633                          StatusDftMean = GETVAL_NOT_MEASURED;
   \   00000FD8   689184E5           STR      R9,[R4, #+360]
    634                          StatusDftFwd  = GETVAL_NOT_MEASURED;
   \   00000FDC   3CFFFFEA           B        ??Calculate_37
    635                          StatusDftAft  = GETVAL_NOT_MEASURED;
    636                          StatusDftP    = GETVAL_NOT_MEASURED;
    637                          StatusDftS    = GETVAL_NOT_MEASURED;
    638                      } else if (!StatusDftFwdP && !StatusDftFwdS) {
   \                     ??Calculate_38:
   \   00000FE0   600194E5           LDR      R0,[R4, #+352]
   \   00000FE4   000050E3           CMP      R0,#+0
   \   00000FE8   64019405           LDREQ    R0,[R4, #+356]
   \   00000FEC   00005003           CMPEQ    R0,#+0
   \   00000FF0   7700001A           BNE      ??Calculate_48
    639                          HasListValue    = true;
   \   00000FF4   AA61C4E5           STRB     R6,[R4, #+426]
   \   00000FF8   D80194E5           LDR      R0,[R4, #+472]
   \   00000FFC   D41194E5           LDR      R1,[R4, #+468]
   \   00001000   ........           _BLF     __fSub,??__fSub??rA
   \   00001004   001097E5           LDR      R1,[R7, #+0]
   \   00001008   ........           _BLF     __fDiv,??__fDiv??rA
   \   0000100C   B00184E5           STR      R0,[R4, #+432]
    640                          ListValue       = (DftFwdS - DftFwdP) / PROProjectInfo::Width;
    641                          DftFwdMark      = (DftFwdMarkP + DftFwdMarkS) / 2.0;
   \   00001010   DC1194E5           LDR      R1,[R4, #+476]
   \   00001014   E00194E5           LDR      R0,[R4, #+480]
   \   00001018   ........           _BLF     __fAdd,??__fAdd??rA
   \   0000101C   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   00001020   0020A0E3           MOV      R2,#+0
   \   00001024   4034A0E3           MOV      R3,#+1073741824
   \   00001028   ........           _BLF     __dDiv,??__dDiv??rA
   \   0000102C   ........           _BLF     __doubleToFloat,??__doubleToFloat??rA
   \   00001030   B40184E5           STR      R0,[R4, #+436]
    642                          DftFwd          = (DftFwdP + DftFwdS) / 2.0;
   \   00001034   D41194E5           LDR      R1,[R4, #+468]
   \   00001038   D80194E5           LDR      R0,[R4, #+472]
   \   0000103C   ........           _BLF     __fAdd,??__fAdd??rA
   \   00001040   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   00001044   0520A0E1           MOV      R2,R5
   \   00001048   4034A0E3           MOV      R3,#+1073741824
   \   0000104C   ........           _BLF     __dDiv,??__dDiv??rA
   \   00001050   ........           _BLF     __doubleToFloat,??__doubleToFloat??rA
   \   00001054   00008DE5           STR      R0,[SP, #+0]
   \   00001058   BC0184E5           STR      R0,[R4, #+444]
    643          
    644                          if (!StatusDftAftP) {
   \   0000105C   580194E5           LDR      R0,[R4, #+344]
   \   00001060   000050E3           CMP      R0,#+0
   \   00001064   0D00001A           BNE      ??Calculate_49
    645                              HasTrimValue = true;
    646                              DftAftS      = DftAftP + DftFwdS - DftFwdP;
   \   00001068   CCB194E5           LDR      R11,[R4, #+460]
   \   0000106C   D80194E5           LDR      R0,[R4, #+472]
   \   00001070   0B10A0E1           MOV      R1,R11
   \   00001074   ........           _BLF     __fAdd,??__fAdd??rA
   \   00001078   D41194E5           LDR      R1,[R4, #+468]
   \   0000107C   ........           _BLF     __fSub,??__fSub??rA
   \   00001080   D00184E5           STR      R0,[R4, #+464]
    647                              TrimValue    = (DftFwdP - DftAftP) / PROProjectInfo::LengthBetweenPP;
   \   00001084   D40194E5           LDR      R0,[R4, #+468]
   \   00001088   0B10A0E1           MOV      R1,R11
   \                     ??Calculate_50:
   \   0000108C   ........           _BLF     __fSub,??__fSub??rA
   \   00001090   001098E5           LDR      R1,[R8, #+0]
   \   00001094   ........           _BLF     __fDiv,??__fDiv??rA
   \   00001098   AC0184E5           STR      R0,[R4, #+428]
   \   0000109C   0D0000EA           B        ??Calculate_51
    648                          } else if (!StatusDftAftS) {
   \                     ??Calculate_49:
   \   000010A0   5C0194E5           LDR      R0,[R4, #+348]
   \   000010A4   000050E3           CMP      R0,#+0
   \   000010A8   0900001A           BNE      ??Calculate_52
    649                              HasTrimValue = true;
    650                              DftAftP      = DftAftS + DftFwdP - DftFwdS;
   \   000010AC   D0A194E5           LDR      R10,[R4, #+464]
   \   000010B0   D40194E5           LDR      R0,[R4, #+468]
   \   000010B4   0A10A0E1           MOV      R1,R10
   \   000010B8   ........           _BLF     __fAdd,??__fAdd??rA
   \   000010BC   D81194E5           LDR      R1,[R4, #+472]
   \   000010C0   ........           _BLF     __fSub,??__fSub??rA
   \   000010C4   CC0184E5           STR      R0,[R4, #+460]
    651                              TrimValue    = (DftFwdS - DftAftS) / PROProjectInfo::LengthBetweenPP;
   \   000010C8   D80194E5           LDR      R0,[R4, #+472]
   \   000010CC   0A10A0E1           MOV      R1,R10
   \   000010D0   EDFFFFEA           B        ??Calculate_50
    652                          } else {
    653                              HasTrimValue  = false;
   \                     ??Calculate_52:
   \   000010D4   0060A0E3           MOV      R6,#+0
   \                     ??Calculate_51:
   \   000010D8   A961C4E5           STRB     R6,[R4, #+425]
    654                          }
    655                          if (HasTrimValue) {
   \   000010DC   000056E3           CMP      R6,#+0
   \   000010E0   1900000A           BEQ      ??Calculate_53
    656                              DftAftMark  = (DftAftMarkP + DftAftMarkS) / 2.0;
   \   000010E4   E41194E5           LDR      R1,[R4, #+484]
   \   000010E8   E80194E5           LDR      R0,[R4, #+488]
   \   000010EC   ........           _BLF     __fAdd,??__fAdd??rA
   \   000010F0   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   000010F4   0020A0E3           MOV      R2,#+0
   \   000010F8   4034A0E3           MOV      R3,#+1073741824
   \   000010FC   ........           _BLF     __dDiv,??__dDiv??rA
   \   00001100   ........           _BLF     __doubleToFloat,??__doubleToFloat??rA
   \   00001104   B80184E5           STR      R0,[R4, #+440]
    657                              DftAft      = (DftFwdP + DftFwdS) / 2.0;
   \   00001108   00009DE5           LDR      R0,[SP, #+0]
   \   0000110C   C00184E5           STR      R0,[R4, #+448]
    658                              DftP        = (DftFwdP + DftAftP) / 2.0;
   \   00001110   D41194E5           LDR      R1,[R4, #+468]
   \   00001114   CC0194E5           LDR      R0,[R4, #+460]
   \   00001118   ........           _BLF     __fAdd,??__fAdd??rA
   \   0000111C   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   00001120   0520A0E1           MOV      R2,R5
   \   00001124   4034A0E3           MOV      R3,#+1073741824
   \   00001128   ........           _BLF     __dDiv,??__dDiv??rA
   \   0000112C   ........           _BLF     __doubleToFloat,??__doubleToFloat??rA
   \   00001130   C40184E5           STR      R0,[R4, #+452]
    659                              DftS        = (DftFwdS + DftAftS) / 2.0;
   \   00001134   D81194E5           LDR      R1,[R4, #+472]
   \   00001138   D00194E5           LDR      R0,[R4, #+464]
   \   0000113C   ........           _BLF     __fAdd,??__fAdd??rA
   \   00001140   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   00001144   0520A0E1           MOV      R2,R5
   \   00001148   49FFFFEA           B        ??Calculate_44
    660                          } else {
    661                              DftAft      =  DftFwd - PROInclinometer::TrimValue * PROProjectInfo::LengthBetweenPP;
   \                     ??Calculate_53:
   \   0000114C   E8089FE5           LDR      R0,??Calculate_46  ;; ??TrimValue
   \   00001150   001090E5           LDR      R1,[R0, #+0]
   \   00001154   000098E5           LDR      R0,[R8, #+0]
   \   00001158   ........           _BLF     __fMul,??__fMul??rA
   \   0000115C   0010A0E1           MOV      R1,R0
   \   00001160   BC0194E5           LDR      R0,[R4, #+444]
   \   00001164   ........           _BLF     __fSub,??__fSub??rA
   \   00001168   C00184E5           STR      R0,[R4, #+448]
    662                              DftAftMark  =  DftAft - PROInclinometer::TrimValue * (DFPPtr->GetLDistanceMarkToPP() + DFSPtr->GetLDistanceMarkToPP()) / 2.0;
   \   0000116C   880194E5           LDR      R0,[R4, #+392]
   \   00001170   ........           _BLF     ??GetLDistanceMarkToPP,??GetLDistanceMarkToPP??rA
   \   00001174   0060A0E1           MOV      R6,R0
   \   00001178   8C0194E5           LDR      R0,[R4, #+396]
   \   0000117C   ........           _BLF     ??GetLDistanceMarkToPP,??GetLDistanceMarkToPP??rA
   \   00001180   C05194E5           LDR      R5,[R4, #+448]
   \   00001184   0610A0E1           MOV      R1,R6
   \   00001188   ........           _BLF     __fAdd,??__fAdd??rA
   \   0000118C   A8189FE5           LDR      R1,??Calculate_46  ;; ??TrimValue
   \   00001190   001091E5           LDR      R1,[R1, #+0]
   \   00001194   ........           _BLF     __fMul,??__fMul??rA
   \   00001198   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   0000119C   0020A0E3           MOV      R2,#+0
   \   000011A0   4034A0E3           MOV      R3,#+1073741824
   \   000011A4   ........           _BLF     __dDiv,??__dDiv??rA
   \   000011A8   00A0A0E1           MOV      R10,R0
   \   000011AC   01B0A0E1           MOV      R11,R1
   \   000011B0   0500A0E1           MOV      R0,R5
   \   000011B4   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   000011B8   0A20A0E1           MOV      R2,R10
   \   000011BC   0B30A0E1           MOV      R3,R11
   \   000011C0   ........           _BLF     __dSub,??__dSub??rA
   \   000011C4   ........           _BLF     __doubleToFloat,??__doubleToFloat??rA
   \   000011C8   B80184E5           STR      R0,[R4, #+440]
    663                              DftP        = (DftFwd + DftAft) / 2 - PROInclinometer::ListValue * PROProjectInfo::Width / 2.0;
   \   000011CC   BC0194E5           LDR      R0,[R4, #+444]
   \   000011D0   4EFFFFEA           B        ??Calculate_47
    664                              DftS        = (DftFwd + DftAft) / 2 + PROInclinometer::ListValue * PROProjectInfo::Width / 2.0;
    665                          }
    666                          MeanDraft     = (DftFwd + DftAft + DftS + DftP) / 4.0;
    667                          StatusDftMean = GETVAL_NOT_MEASURED;
    668                          StatusDftFwd  = GETVAL_NOT_MEASURED;
    669                          StatusDftAft  = GETVAL_NOT_MEASURED;
    670                          StatusDftP    = GETVAL_NOT_MEASURED;
    671                          StatusDftS    = GETVAL_NOT_MEASURED;
    672                      } else {
    673                          MeanDraft     = 0.0;
   \                     ??Calculate_48:
   \   000011D4   0000A0E3           MOV      R0,#+0
   \   000011D8   F40184E5           STR      R0,[R4, #+500]
    674                          HasListValue  = false;
   \   000011DC   AA01C4E5           STRB     R0,[R4, #+426]
    675                          HasTrimValue  = false;
   \   000011E0   A901C4E5           STRB     R0,[R4, #+425]
    676                          StatusDftMean = GETVAL_NOT_AVAILABLE;
   \   000011E4   686184E5           STR      R6,[R4, #+360]
    677                          StatusDftFwd  = GETVAL_NOT_AVAILABLE;
   \   000011E8   486184E5           STR      R6,[R4, #+328]
    678                          StatusDftAft  = GETVAL_NOT_AVAILABLE;
   \   000011EC   4C6184E5           STR      R6,[R4, #+332]
    679                          StatusDftP    = GETVAL_NOT_AVAILABLE;
   \   000011F0   506184E5           STR      R6,[R4, #+336]
    680                          StatusDftS    = GETVAL_NOT_AVAILABLE;
   \   000011F4   546184E5           STR      R6,[R4, #+340]
   \   000011F8   980100EA           B        ??Calculate_3
    681                      }
    682                  }
    683                  break;
    684              case DftFwdMidShipAftPS:
    685                  {
    686                      StatusDftFwdP = DFPPtr->GetCalcVal(&DftFwdP, &DftFwdMarkP);
   \                     ??Calculate_54:
   \   000011FC   880194E5           LDR      R0,[R4, #+392]
   \   00001200   772F84E2           ADD      R2,R4,#+476
   \   00001204   751F84E2           ADD      R1,R4,#+468
   \   00001208   ........           _BLF     ??GetCalcVal,??GetCalcVal??rA
   \   0000120C   600184E5           STR      R0,[R4, #+352]
    687                      StatusDftFwdS = DFSPtr->GetCalcVal(&DftFwdS, &DftFwdMarkS);
   \   00001210   8C0194E5           LDR      R0,[R4, #+396]
   \   00001214   782F84E2           ADD      R2,R4,#+480
   \   00001218   761F84E2           ADD      R1,R4,#+472
   \   0000121C   ........           _BLF     ??GetCalcVal,??GetCalcVal??rA
   \   00001220   640184E5           STR      R0,[R4, #+356]
    688                      StatusDftAftP = DAPPtr->GetCalcVal(&DftAftP, &DftAftMarkP);
   \   00001224   800194E5           LDR      R0,[R4, #+384]
   \   00001228   792F84E2           ADD      R2,R4,#+484
   \   0000122C   731F84E2           ADD      R1,R4,#+460
   \   00001230   ........           _BLF     ??GetCalcVal,??GetCalcVal??rA
   \   00001234   580184E5           STR      R0,[R4, #+344]
    689                      StatusDftAftS = DASPtr->GetCalcVal(&DftAftS, &DftAftMarkS);
   \   00001238   840194E5           LDR      R0,[R4, #+388]
   \   0000123C   7A2F84E2           ADD      R2,R4,#+488
   \   00001240   741F84E2           ADD      R1,R4,#+464
   \   00001244   ........           _BLF     ??GetCalcVal,??GetCalcVal??rA
   \   00001248   5C0184E5           STR      R0,[R4, #+348]
    690                      // Only use measured draft for DP, DS
    691                      StatusDftP    = DPPtr->GetCalcVal(&DftP);
   \   0000124C   740194E5           LDR      R0,[R4, #+372]
   \   00001250   0020A0E3           MOV      R2,#+0
   \   00001254   711F84E2           ADD      R1,R4,#+452
   \   00001258   ........           _BLF     ??GetCalcVal,??GetCalcVal??rA
   \   0000125C   500184E5           STR      R0,[R4, #+336]
    692                      StatusDftS    = DSPtr->GetCalcVal(&DftS);
   \   00001260   780194E5           LDR      R0,[R4, #+376]
   \   00001264   0520A0E1           MOV      R2,R5
   \   00001268   721F84E2           ADD      R1,R4,#+456
   \   0000126C   ........           _BLF     ??GetCalcVal,??GetCalcVal??rA
   \   00001270   540184E5           STR      R0,[R4, #+340]
   \   00001274   600194E5           LDR      R0,[R4, #+352]
   \   00001278   000050E3           CMP      R0,#+0
   \   0000127C   64019405           LDREQ    R0,[R4, #+356]
   \   00001280   00005003           CMPEQ    R0,#+0
   \   00001284   58019405           LDREQ    R0,[R4, #+344]
   \   00001288   00005003           CMPEQ    R0,#+0
   \   0000128C   4900001A           BNE      ??Calculate_55
   \   00001290   5C0194E5           LDR      R0,[R4, #+348]
   \   00001294   000050E3           CMP      R0,#+0
   \   00001298   4900001A           BNE      ??Calculate_56
    693                      if (!StatusDftFwdP && !StatusDftFwdS && !StatusDftAftP && !StatusDftAftS) {
    694                          DftFwdMark    = (DftFwdMarkP + DftFwdMarkS) / 2.0;
   \   0000129C   DC1194E5           LDR      R1,[R4, #+476]
   \   000012A0   E00194E5           LDR      R0,[R4, #+480]
   \   000012A4   ........           _BLF     __fAdd,??__fAdd??rA
   \   000012A8   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   000012AC   0020A0E3           MOV      R2,#+0
   \   000012B0   4034A0E3           MOV      R3,#+1073741824
   \   000012B4   ........           _BLF     __dDiv,??__dDiv??rA
   \   000012B8   ........           _BLF     __doubleToFloat,??__doubleToFloat??rA
   \   000012BC   B40184E5           STR      R0,[R4, #+436]
    695                          DftAftMark    = (DftAftMarkP + DftAftMarkS) / 2.0;
   \   000012C0   E41194E5           LDR      R1,[R4, #+484]
   \   000012C4   E80194E5           LDR      R0,[R4, #+488]
   \   000012C8   ........           _BLF     __fAdd,??__fAdd??rA
   \   000012CC   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   000012D0   0520A0E1           MOV      R2,R5
   \   000012D4   4034A0E3           MOV      R3,#+1073741824
   \   000012D8   ........           _BLF     __dDiv,??__dDiv??rA
   \   000012DC   ........           _BLF     __doubleToFloat,??__doubleToFloat??rA
   \   000012E0   B80184E5           STR      R0,[R4, #+440]
   \   000012E4   D41194E5           LDR      R1,[R4, #+468]
   \   000012E8   D80194E5           LDR      R0,[R4, #+472]
   \   000012EC   ........           _BLF     __fAdd,??__fAdd??rA
   \   000012F0   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   000012F4   0520A0E1           MOV      R2,R5
   \   000012F8   4034A0E3           MOV      R3,#+1073741824
   \   000012FC   ........           _BLF     __dDiv,??__dDiv??rA
   \   00001300   ........           _BLF     __doubleToFloat,??__doubleToFloat??rA
   \   00001304   00008DE5           STR      R0,[SP, #+0]
   \   00001308   BC0184E5           STR      R0,[R4, #+444]
    696                          DftFwd        = (DftFwdP + DftFwdS) / 2.0;
    697                          DftAft        = (DftAftP + DftAftS) / 2.0;
   \   0000130C   CC0194E5           LDR      R0,[R4, #+460]
   \   00001310   D01194E5           LDR      R1,[R4, #+464]
   \   00001314   ........           _BLF     __fAdd,??__fAdd??rA
   \   00001318   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   0000131C   0520A0E1           MOV      R2,R5
   \   00001320   4034A0E3           MOV      R3,#+1073741824
   \   00001324   ........           _BLF     __dDiv,??__dDiv??rA
   \   00001328   ........           _BLF     __doubleToFloat,??__doubleToFloat??rA
   \   0000132C   C00184E5           STR      R0,[R4, #+448]
    698          
    699                          TrimValue     = (DftFwd - DftAft) / PROProjectInfo::LengthBetweenPP;
   \   00001330   BC0194E5           LDR      R0,[R4, #+444]
   \   00001334   C01194E5           LDR      R1,[R4, #+448]
   \   00001338   ........           _BLF     __fSub,??__fSub??rA
   \   0000133C   001098E5           LDR      R1,[R8, #+0]
   \   00001340   ........           _BLF     __fDiv,??__fDiv??rA
   \   00001344   AC0184E5           STR      R0,[R4, #+428]
    700                          ListValue     = (DftS  - DftP) / PROProjectInfo::Width;
   \   00001348   C48194E5           LDR      R8,[R4, #+452]
   \   0000134C   C8A194E5           LDR      R10,[R4, #+456]
   \   00001350   0810A0E1           MOV      R1,R8
   \   00001354   0A00A0E1           MOV      R0,R10
   \   00001358   ........           _BLF     __fSub,??__fSub??rA
   \   0000135C   001097E5           LDR      R1,[R7, #+0]
   \   00001360   ........           _BLF     __fDiv,??__fDiv??rA
   \   00001364   B00184E5           STR      R0,[R4, #+432]
    701                          HasListValue  = true;
   \   00001368   AA61C4E5           STRB     R6,[R4, #+426]
    702                          HasTrimValue  = true;
   \   0000136C   A961C4E5           STRB     R6,[R4, #+425]
    703                          MeanDraft     = (DftFwd + DftAft + DftS + DftP) / 4.0;
   \   00001370   BC1194E5           LDR      R1,[R4, #+444]
   \   00001374   C00194E5           LDR      R0,[R4, #+448]
   \   00001378   ........           _BLF     __fAdd,??__fAdd??rA
   \   0000137C   0A10A0E1           MOV      R1,R10
   \   00001380   ........           _BLF     __fAdd,??__fAdd??rA
   \   00001384   0810A0E1           MOV      R1,R8
   \   00001388   ........           _BLF     __fAdd,??__fAdd??rA
   \   0000138C   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   00001390   0520A0E1           MOV      R2,R5
   \   00001394   4034A0E3           MOV      R3,#+1073741824
   \   00001398   403983E3           ORR      R3,R3,#0x100000
   \   0000139C   ........           _BLF     __dDiv,??__dDiv??rA
   \   000013A0   ........           _BLF     __doubleToFloat,??__doubleToFloat??rA
   \   000013A4   F40184E5           STR      R0,[R4, #+500]
    704                          StatusDftMean = GETVAL_NO_ERR;
   \   000013A8   685184E5           STR      R5,[R4, #+360]
    705                          StatusDftFwd  = GETVAL_NOT_MEASURED;
   \                     ??Calculate_57:
   \   000013AC   489184E5           STR      R9,[R4, #+328]
    706                          StatusDftAft  = GETVAL_NOT_MEASURED;
   \   000013B0   4C9184E5           STR      R9,[R4, #+332]
   \   000013B4   290100EA           B        ??Calculate_3
    707          
    708                      } else if (!StatusDftAftP && !StatusDftAftS) {
   \                     ??Calculate_55:
   \   000013B8   580194E5           LDR      R0,[R4, #+344]
   \   000013BC   000050E3           CMP      R0,#+0
   \   000013C0   9300001A           BNE      ??Calculate_58
   \                     ??Calculate_56:
   \   000013C4   5C0194E5           LDR      R0,[R4, #+348]
   \   000013C8   000050E3           CMP      R0,#+0
   \   000013CC   9000001A           BNE      ??Calculate_58
    709                          HasListValue  = true;
   \   000013D0   AA61C4E5           STRB     R6,[R4, #+426]
    710                          ListValue     = (DftAftS - DftAftP) / PROProjectInfo::Width;
   \   000013D4   CCB194E5           LDR      R11,[R4, #+460]
   \   000013D8   D0A194E5           LDR      R10,[R4, #+464]
   \   000013DC   0B10A0E1           MOV      R1,R11
   \   000013E0   0A00A0E1           MOV      R0,R10
   \   000013E4   ........           _BLF     __fSub,??__fSub??rA
   \   000013E8   001097E5           LDR      R1,[R7, #+0]
   \   000013EC   ........           _BLF     __fDiv,??__fDiv??rA
   \   000013F0   B00184E5           STR      R0,[R4, #+432]
    711                          DftAftMark    = (DftAftMarkP + DftAftMarkS) / 2.0;
   \   000013F4   E41194E5           LDR      R1,[R4, #+484]
   \   000013F8   E80194E5           LDR      R0,[R4, #+488]
   \   000013FC   ........           _BLF     __fAdd,??__fAdd??rA
   \   00001400   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   00001404   0020A0E3           MOV      R2,#+0
   \   00001408   4034A0E3           MOV      R3,#+1073741824
   \   0000140C   ........           _BLF     __dDiv,??__dDiv??rA
   \   00001410   ........           _BLF     __doubleToFloat,??__doubleToFloat??rA
   \   00001414   B80184E5           STR      R0,[R4, #+440]
    712                          DftAft        = (DftAftP + DftAftS) / 2.0;
   \   00001418   0B00A0E1           MOV      R0,R11
   \   0000141C   0A10A0E1           MOV      R1,R10
   \   00001420   ........           _BLF     __fAdd,??__fAdd??rA
   \   00001424   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   00001428   0520A0E1           MOV      R2,R5
   \   0000142C   4034A0E3           MOV      R3,#+1073741824
   \   00001430   ........           _BLF     __dDiv,??__dDiv??rA
   \   00001434   ........           _BLF     __doubleToFloat,??__doubleToFloat??rA
   \   00001438   C00184E5           STR      R0,[R4, #+448]
    713          
    714                          if (!StatusDftFwdP) {
   \   0000143C   600194E5           LDR      R0,[R4, #+352]
   \   00001440   000050E3           CMP      R0,#+0
   \   00001444   0C00001A           BNE      ??Calculate_59
    715                              HasTrimValue = true;
   \   00001448   D40194E5           LDR      R0,[R4, #+468]
   \   0000144C   0A10A0E1           MOV      R1,R10
   \   00001450   ........           _BLF     __fAdd,??__fAdd??rA
   \   00001454   0B10A0E1           MOV      R1,R11
   \   00001458   ........           _BLF     __fSub,??__fSub??rA
   \   0000145C   D80184E5           STR      R0,[R4, #+472]
    716                              DftFwdS    = DftFwdP + DftAftS - DftAftP;
    717                              TrimValue  = (DftFwdP - DftAftP) / PROProjectInfo::LengthBetweenPP;
   \   00001460   D40194E5           LDR      R0,[R4, #+468]
   \   00001464   0B10A0E1           MOV      R1,R11
   \                     ??Calculate_60:
   \   00001468   ........           _BLF     __fSub,??__fSub??rA
   \   0000146C   001098E5           LDR      R1,[R8, #+0]
   \   00001470   ........           _BLF     __fDiv,??__fDiv??rA
   \   00001474   AC0184E5           STR      R0,[R4, #+428]
   \   00001478   0C0000EA           B        ??Calculate_61
    718                          } else if (!StatusDftFwdS) {
   \                     ??Calculate_59:
   \   0000147C   640194E5           LDR      R0,[R4, #+356]
   \   00001480   000050E3           CMP      R0,#+0
   \   00001484   0800001A           BNE      ??Calculate_62
    719                              HasTrimValue = true;
   \   00001488   D80194E5           LDR      R0,[R4, #+472]
   \   0000148C   0B10A0E1           MOV      R1,R11
   \   00001490   ........           _BLF     __fAdd,??__fAdd??rA
   \   00001494   0A10A0E1           MOV      R1,R10
   \   00001498   ........           _BLF     __fSub,??__fSub??rA
   \   0000149C   D40184E5           STR      R0,[R4, #+468]
    720                              DftFwdP    = DftFwdS + DftAftP - DftAftS;
    721                              TrimValue  = (DftFwdS - DftAftS) / PROProjectInfo::LengthBetweenPP;
   \   000014A0   D80194E5           LDR      R0,[R4, #+472]
   \   000014A4   0A10A0E1           MOV      R1,R10
   \   000014A8   EEFFFFEA           B        ??Calculate_60
    722                          } else {
    723                              HasTrimValue  = false;
   \                     ??Calculate_62:
   \   000014AC   0060A0E3           MOV      R6,#+0
   \                     ??Calculate_61:
   \   000014B0   A961C4E5           STRB     R6,[R4, #+425]
    724                          }
    725                          if (HasTrimValue) {
   \   000014B4   000056E3           CMP      R6,#+0
   \   000014B8   2600000A           BEQ      ??Calculate_63
    726                              DftFwdMark  = (DftFwdMarkP + DftFwdMarkS) / 2.0;
   \   000014BC   DC1194E5           LDR      R1,[R4, #+476]
   \   000014C0   E00194E5           LDR      R0,[R4, #+480]
   \   000014C4   ........           _BLF     __fAdd,??__fAdd??rA
   \   000014C8   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   000014CC   0020A0E3           MOV      R2,#+0
   \   000014D0   4034A0E3           MOV      R3,#+1073741824
   \   000014D4   ........           _BLF     __dDiv,??__dDiv??rA
   \   000014D8   ........           _BLF     __doubleToFloat,??__doubleToFloat??rA
    727                              DftFwd      = (DftFwdP + DftFwdS) / 2.0;
   \   000014DC   D87194E5           LDR      R7,[R4, #+472]
   \   000014E0   D46194E5           LDR      R6,[R4, #+468]
   \   000014E4   0050A0E1           MOV      R5,R0
   \   000014E8   0600A0E1           MOV      R0,R6
   \   000014EC   0710A0E1           MOV      R1,R7
   \   000014F0   ........           _BLF     __fAdd,??__fAdd??rA
   \   000014F4   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   000014F8   0020A0E3           MOV      R2,#+0
   \   000014FC   4034A0E3           MOV      R3,#+1073741824
   \   00001500   ........           _BLF     __dDiv,??__dDiv??rA
   \   00001504   ........           _BLF     __doubleToFloat,??__doubleToFloat??rA
   \   00001508   BC0184E5           STR      R0,[R4, #+444]
    728                              DftP        = (DftFwdP + DftAftP) / 2.0;
   \   0000150C   0600A0E1           MOV      R0,R6
   \   00001510   0B10A0E1           MOV      R1,R11
   \   00001514   ........           _BLF     __fAdd,??__fAdd??rA
   \   00001518   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   0000151C   0020A0E3           MOV      R2,#+0
   \   00001520   4034A0E3           MOV      R3,#+1073741824
   \   00001524   ........           _BLF     __dDiv,??__dDiv??rA
   \   00001528   ........           _BLF     __doubleToFloat,??__doubleToFloat??rA
   \   0000152C   C40184E5           STR      R0,[R4, #+452]
    729                              DftS        = (DftFwdS + DftAftS) / 2.0;
   \   00001530   0700A0E1           MOV      R0,R7
   \   00001534   0A10A0E1           MOV      R1,R10
   \   00001538   ........           _BLF     __fAdd,??__fAdd??rA
   \   0000153C   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   00001540   0020A0E3           MOV      R2,#+0
   \   00001544   4034A0E3           MOV      R3,#+1073741824
   \   00001548   ........           _BLF     __dDiv,??__dDiv??rA
   \   0000154C   ........           _BLF     __doubleToFloat,??__doubleToFloat??rA
   \   00001550   C80184E5           STR      R0,[R4, #+456]
   \   00001554   1D0000EA           B        ??Calculate_64
    730                          } else {
    731                              DftFwd      =  DftAft + PROInclinometer::TrimValue * PROProjectInfo::LengthBetweenPP;
   \                     ??Calculate_63:
   \   00001558   DC049FE5           LDR      R0,??Calculate_46  ;; ??TrimValue
   \   0000155C   001090E5           LDR      R1,[R0, #+0]
   \   00001560   000098E5           LDR      R0,[R8, #+0]
   \   00001564   ........           _BLF     __fMul,??__fMul??rA
   \   00001568   C01194E5           LDR      R1,[R4, #+448]
   \   0000156C   ........           _BLF     __fAdd,??__fAdd??rA
   \   00001570   BC0184E5           STR      R0,[R4, #+444]
    732                              DftFwdMark  =  DftFwd + PROInclinometer::TrimValue * (DFPPtr->GetLDistanceMarkToPP() + DFSPtr->GetLDistanceMarkToPP()) / 2.0;
   \   00001574   880194E5           LDR      R0,[R4, #+392]
   \   00001578   ........           _BLF     ??GetLDistanceMarkToPP,??GetLDistanceMarkToPP??rA
   \   0000157C   0050A0E1           MOV      R5,R0
   \   00001580   8C0194E5           LDR      R0,[R4, #+396]
   \   00001584   ........           _BLF     ??GetLDistanceMarkToPP,??GetLDistanceMarkToPP??rA
   \   00001588   0510A0E1           MOV      R1,R5
   \   0000158C   ........           _BLF     __fAdd,??__fAdd??rA
   \   00001590   A4149FE5           LDR      R1,??Calculate_46  ;; ??TrimValue
   \   00001594   001091E5           LDR      R1,[R1, #+0]
   \   00001598   ........           _BLF     __fMul,??__fMul??rA
   \   0000159C   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   000015A0   0020A0E3           MOV      R2,#+0
   \   000015A4   4034A0E3           MOV      R3,#+1073741824
   \   000015A8   ........           _BLF     __dDiv,??__dDiv??rA
   \   000015AC   0060A0E1           MOV      R6,R0
   \   000015B0   BC0194E5           LDR      R0,[R4, #+444]
   \   000015B4   0170A0E1           MOV      R7,R1
   \   000015B8   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   000015BC   0620A0E1           MOV      R2,R6
   \   000015C0   0730A0E1           MOV      R3,R7
   \   000015C4   ........           _BLF     __dAdd,??__dAdd??rA
   \   000015C8   ........           _BLF     __doubleToFloat,??__doubleToFloat??rA
   \   000015CC   0050A0E1           MOV      R5,R0
   \                     ??Calculate_64:
   \   000015D0   B45184E5           STR      R5,[R4, #+436]
    733                          }
    734                          MeanDraft     = (DftFwd + DftAft + DftS + DftP) / 4.0;
   \   000015D4   BC1194E5           LDR      R1,[R4, #+444]
   \   000015D8   C00194E5           LDR      R0,[R4, #+448]
   \   000015DC   ........           _BLF     __fAdd,??__fAdd??rA
   \   000015E0   C81194E5           LDR      R1,[R4, #+456]
   \   000015E4   ........           _BLF     __fAdd,??__fAdd??rA
   \   000015E8   C41194E5           LDR      R1,[R4, #+452]
   \   000015EC   ........           _BLF     __fAdd,??__fAdd??rA
   \   000015F0   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   000015F4   0020A0E3           MOV      R2,#+0
   \   000015F8   4034A0E3           MOV      R3,#+1073741824
   \   000015FC   403983E3           ORR      R3,R3,#0x100000
   \   00001600   ........           _BLF     __dDiv,??__dDiv??rA
   \   00001604   ........           _BLF     __doubleToFloat,??__doubleToFloat??rA
   \   00001608   F40184E5           STR      R0,[R4, #+500]
    735                          StatusDftMean = GETVAL_NOT_MEASURED;
   \   0000160C   689184E5           STR      R9,[R4, #+360]
    736                          StatusDftFwd  = GETVAL_NOT_MEASURED;
   \   00001610   65FFFFEA           B        ??Calculate_57
    737                          StatusDftAft  = GETVAL_NOT_MEASURED;
    738                      } else if (!StatusDftFwdP && !StatusDftFwdS) {
   \                     ??Calculate_58:
   \   00001614   600194E5           LDR      R0,[R4, #+352]
   \   00001618   000050E3           CMP      R0,#+0
   \   0000161C   64019405           LDREQ    R0,[R4, #+356]
   \   00001620   00005003           CMPEQ    R0,#+0
   \   00001624   7700001A           BNE      ??Calculate_65
    739                          HasListValue    = true;
   \   00001628   AA61C4E5           STRB     R6,[R4, #+426]
   \   0000162C   D80194E5           LDR      R0,[R4, #+472]
   \   00001630   D41194E5           LDR      R1,[R4, #+468]
   \   00001634   ........           _BLF     __fSub,??__fSub??rA
   \   00001638   001097E5           LDR      R1,[R7, #+0]
   \   0000163C   ........           _BLF     __fDiv,??__fDiv??rA
   \   00001640   B00184E5           STR      R0,[R4, #+432]
    740                          ListValue       = (DftFwdS - DftFwdP) / PROProjectInfo::Width;
    741                          DftFwdMark      = (DftFwdMarkP + DftFwdMarkS) / 2.0;
   \   00001644   DC1194E5           LDR      R1,[R4, #+476]
   \   00001648   E00194E5           LDR      R0,[R4, #+480]
   \   0000164C   ........           _BLF     __fAdd,??__fAdd??rA
   \   00001650   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   00001654   0020A0E3           MOV      R2,#+0
   \   00001658   4034A0E3           MOV      R3,#+1073741824
   \   0000165C   ........           _BLF     __dDiv,??__dDiv??rA
   \   00001660   ........           _BLF     __doubleToFloat,??__doubleToFloat??rA
   \   00001664   B40184E5           STR      R0,[R4, #+436]
    742                          DftFwd          = (DftFwdP + DftFwdS) / 2.0;
   \   00001668   D41194E5           LDR      R1,[R4, #+468]
   \   0000166C   D80194E5           LDR      R0,[R4, #+472]
   \   00001670   ........           _BLF     __fAdd,??__fAdd??rA
   \   00001674   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   00001678   0520A0E1           MOV      R2,R5
   \   0000167C   4034A0E3           MOV      R3,#+1073741824
   \   00001680   ........           _BLF     __dDiv,??__dDiv??rA
   \   00001684   ........           _BLF     __doubleToFloat,??__doubleToFloat??rA
   \   00001688   00008DE5           STR      R0,[SP, #+0]
   \   0000168C   BC0184E5           STR      R0,[R4, #+444]
    743          
    744                          if (!StatusDftAftP) {
   \   00001690   580194E5           LDR      R0,[R4, #+344]
   \   00001694   000050E3           CMP      R0,#+0
   \   00001698   0D00001A           BNE      ??Calculate_66
    745                              HasTrimValue = true;
    746                              DftAftS      = DftAftP + DftFwdS - DftFwdP;
   \   0000169C   CCB194E5           LDR      R11,[R4, #+460]
   \   000016A0   D80194E5           LDR      R0,[R4, #+472]
   \   000016A4   0B10A0E1           MOV      R1,R11
   \   000016A8   ........           _BLF     __fAdd,??__fAdd??rA
   \   000016AC   D41194E5           LDR      R1,[R4, #+468]
   \   000016B0   ........           _BLF     __fSub,??__fSub??rA
   \   000016B4   D00184E5           STR      R0,[R4, #+464]
    747                              TrimValue    = (DftFwdP - DftAftP) / PROProjectInfo::LengthBetweenPP;
   \   000016B8   D40194E5           LDR      R0,[R4, #+468]
   \   000016BC   0B10A0E1           MOV      R1,R11
   \                     ??Calculate_67:
   \   000016C0   ........           _BLF     __fSub,??__fSub??rA
   \   000016C4   001098E5           LDR      R1,[R8, #+0]
   \   000016C8   ........           _BLF     __fDiv,??__fDiv??rA
   \   000016CC   AC0184E5           STR      R0,[R4, #+428]
   \   000016D0   0D0000EA           B        ??Calculate_68
    748                          } else if (!StatusDftAftS) {
   \                     ??Calculate_66:
   \   000016D4   5C0194E5           LDR      R0,[R4, #+348]
   \   000016D8   000050E3           CMP      R0,#+0
   \   000016DC   0900001A           BNE      ??Calculate_69
    749                              HasTrimValue = true;
    750                              DftAftP      = DftAftS + DftFwdP - DftFwdS;
   \   000016E0   D0A194E5           LDR      R10,[R4, #+464]
   \   000016E4   D40194E5           LDR      R0,[R4, #+468]
   \   000016E8   0A10A0E1           MOV      R1,R10
   \   000016EC   ........           _BLF     __fAdd,??__fAdd??rA
   \   000016F0   D81194E5           LDR      R1,[R4, #+472]
   \   000016F4   ........           _BLF     __fSub,??__fSub??rA
   \   000016F8   CC0184E5           STR      R0,[R4, #+460]
    751                              TrimValue    = (DftFwdS - DftAftS) / PROProjectInfo::LengthBetweenPP;
   \   000016FC   D80194E5           LDR      R0,[R4, #+472]
   \   00001700   0A10A0E1           MOV      R1,R10
   \   00001704   EDFFFFEA           B        ??Calculate_67
    752                          } else {
    753                              HasTrimValue  = false;
   \                     ??Calculate_69:
   \   00001708   0060A0E3           MOV      R6,#+0
   \                     ??Calculate_68:
   \   0000170C   A961C4E5           STRB     R6,[R4, #+425]
    754                          }
    755                          if (HasTrimValue) {
   \   00001710   000056E3           CMP      R6,#+0
   \   00001714   0A00000A           BEQ      ??Calculate_70
    756                              DftAftMark  = (DftAftMarkP + DftAftMarkS) / 2.0;
   \   00001718   E41194E5           LDR      R1,[R4, #+484]
   \   0000171C   E80194E5           LDR      R0,[R4, #+488]
   \   00001720   ........           _BLF     __fAdd,??__fAdd??rA
   \   00001724   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   00001728   0020A0E3           MOV      R2,#+0
   \   0000172C   4034A0E3           MOV      R3,#+1073741824
   \   00001730   ........           _BLF     __dDiv,??__dDiv??rA
   \   00001734   ........           _BLF     __doubleToFloat,??__doubleToFloat??rA
    757                              DftAft      = (DftFwdP + DftFwdS) / 2.0;
   \   00001738   00109DE5           LDR      R1,[SP, #+0]
   \   0000173C   C01184E5           STR      R1,[R4, #+448]
   \   00001740   1D0000EA           B        ??Calculate_71
    758                          } else {
    759                              DftAft      =  DftFwd - PROInclinometer::TrimValue * PROProjectInfo::LengthBetweenPP;
   \                     ??Calculate_70:
   \   00001744   F0029FE5           LDR      R0,??Calculate_46  ;; ??TrimValue
   \   00001748   001090E5           LDR      R1,[R0, #+0]
   \   0000174C   000098E5           LDR      R0,[R8, #+0]
   \   00001750   ........           _BLF     __fMul,??__fMul??rA
   \   00001754   0010A0E1           MOV      R1,R0
   \   00001758   BC0194E5           LDR      R0,[R4, #+444]
   \   0000175C   ........           _BLF     __fSub,??__fSub??rA
   \   00001760   C00184E5           STR      R0,[R4, #+448]
    760                              DftAftMark  =  DftAft - PROInclinometer::TrimValue * (DFPPtr->GetLDistanceMarkToPP() + DFSPtr->GetLDistanceMarkToPP()) / 2.0;
   \   00001764   880194E5           LDR      R0,[R4, #+392]
   \   00001768   ........           _BLF     ??GetLDistanceMarkToPP,??GetLDistanceMarkToPP??rA
   \   0000176C   0050A0E1           MOV      R5,R0
   \   00001770   8C0194E5           LDR      R0,[R4, #+396]
   \   00001774   ........           _BLF     ??GetLDistanceMarkToPP,??GetLDistanceMarkToPP??rA
   \   00001778   0510A0E1           MOV      R1,R5
   \   0000177C   ........           _BLF     __fAdd,??__fAdd??rA
   \   00001780   B4129FE5           LDR      R1,??Calculate_46  ;; ??TrimValue
   \   00001784   001091E5           LDR      R1,[R1, #+0]
   \   00001788   ........           _BLF     __fMul,??__fMul??rA
   \   0000178C   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   00001790   0020A0E3           MOV      R2,#+0
   \   00001794   4034A0E3           MOV      R3,#+1073741824
   \   00001798   ........           _BLF     __dDiv,??__dDiv??rA
   \   0000179C   0060A0E1           MOV      R6,R0
   \   000017A0   C00194E5           LDR      R0,[R4, #+448]
   \   000017A4   0170A0E1           MOV      R7,R1
   \   000017A8   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   000017AC   0620A0E1           MOV      R2,R6
   \   000017B0   0730A0E1           MOV      R3,R7
   \   000017B4   ........           _BLF     __dSub,??__dSub??rA
   \   000017B8   ........           _BLF     __doubleToFloat,??__doubleToFloat??rA
   \                     ??Calculate_71:
   \   000017BC   B80184E5           STR      R0,[R4, #+440]
    761                          }
    762                          MeanDraft     = (DftFwd + DftAft + DftS + DftP) / 4.0;
   \   000017C0   BC1194E5           LDR      R1,[R4, #+444]
   \   000017C4   C00194E5           LDR      R0,[R4, #+448]
   \   000017C8   ........           _BLF     __fAdd,??__fAdd??rA
   \   000017CC   C81194E5           LDR      R1,[R4, #+456]
   \   000017D0   ........           _BLF     __fAdd,??__fAdd??rA
   \   000017D4   C41194E5           LDR      R1,[R4, #+452]
   \   000017D8   ........           _BLF     __fAdd,??__fAdd??rA
   \   000017DC   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   000017E0   0020A0E3           MOV      R2,#+0
   \   000017E4   4034A0E3           MOV      R3,#+1073741824
   \   000017E8   403983E3           ORR      R3,R3,#0x100000
   \   000017EC   ........           _BLF     __dDiv,??__dDiv??rA
   \   000017F0   ........           _BLF     __doubleToFloat,??__doubleToFloat??rA
   \   000017F4   F40184E5           STR      R0,[R4, #+500]
    763                          StatusDftMean = GETVAL_NOT_MEASURED;
   \   000017F8   689184E5           STR      R9,[R4, #+360]
    764                          StatusDftFwdP = GETVAL_NOT_MEASURED;
   \   000017FC   609184E5           STR      R9,[R4, #+352]
    765                          StatusDftAftS = GETVAL_NOT_MEASURED;
   \   00001800   5C9184E5           STR      R9,[R4, #+348]
   \   00001804   150000EA           B        ??Calculate_3
    766                      } else {
    767                          MeanDraft     = 0.0;
   \                     ??Calculate_65:
   \   00001808   0000A0E3           MOV      R0,#+0
   \   0000180C   F40184E5           STR      R0,[R4, #+500]
    768                          HasListValue  = false;
   \   00001810   AA01C4E5           STRB     R0,[R4, #+426]
    769                          HasTrimValue  = false;
   \   00001814   A901C4E5           STRB     R0,[R4, #+425]
    770                          StatusDftMean = GETVAL_NOT_AVAILABLE;
   \   00001818   686184E5           STR      R6,[R4, #+360]
    771                          StatusDftFwd  = GETVAL_NOT_AVAILABLE;
   \   0000181C   486184E5           STR      R6,[R4, #+328]
    772                          StatusDftAft  = GETVAL_NOT_AVAILABLE;
   \   00001820   4C6184E5           STR      R6,[R4, #+332]
   \   00001824   0D0000EA           B        ??Calculate_3
    773                      }
    774                  }
    775                  break;
    776              case DftFromOther:
    777                  TrimValue    = (DftFwd - DftAft) / PROProjectInfo::LengthBetweenPP;
   \                     ??Calculate_72:
   \   00001828   BC0194E5           LDR      R0,[R4, #+444]
   \   0000182C   C01194E5           LDR      R1,[R4, #+448]
   \   00001830   ........           _BLF     __fSub,??__fSub??rA
   \   00001834   001098E5           LDR      R1,[R8, #+0]
   \   00001838   ........           _BLF     __fDiv,??__fDiv??rA
   \   0000183C   AC0184E5           STR      R0,[R4, #+428]
    778                  ListValue    = (DftS  - DftP) / PROProjectInfo::Width;
   \   00001840   C80194E5           LDR      R0,[R4, #+456]
   \   00001844   C41194E5           LDR      R1,[R4, #+452]
   \   00001848   ........           _BLF     __fSub,??__fSub??rA
   \   0000184C   001097E5           LDR      R1,[R7, #+0]
   \   00001850   ........           _BLF     __fDiv,??__fDiv??rA
   \   00001854   B00184E5           STR      R0,[R4, #+432]
    779                  HasListValue = true;
   \   00001858   AA61C4E5           STRB     R6,[R4, #+426]
    780                  HasTrimValue = true;
   \   0000185C   A961C4E5           STRB     R6,[R4, #+425]
    781                  break;
    782              case DftNoDef:
    783              default:
    784          
    785                  break;
    786              }
    787              float TmpMaxDraft = 0.0;
    788              if (!StatusDftAft) {
   \                     ??Calculate_3:
   \   00001860   4C9194E5           LDR      R9,[R4, #+332]
   \   00001864   B87194E5           LDR      R7,[R4, #+440]
   \   00001868   C08194E5           LDR      R8,[R4, #+448]
   \   0000186C   F851D4E5           LDRB     R5,[R4, #+504]
   \   00001870   0060A0E3           MOV      R6,#+0
   \   00001874   000059E3           CMP      R9,#+0
   \   00001878   0D00001A           BNE      ??Calculate_73
    789                  if (DraftIndicationAtPP) {
   \   0000187C   000055E3           CMP      R5,#+0
   \   00001880   0600000A           BEQ      ??Calculate_74
    790                      TmpMaxDraft = max(TmpMaxDraft, DftAft);
   \   00001884   0800A0E1           MOV      R0,R8
   \   00001888   0010A0E3           MOV      R1,#+0
   \   0000188C   ........           _BLF     __fLess,??__fLess??rA
   \   00001890   000050E3           CMP      R0,#+0
   \   00001894   0600001A           BNE      ??Calculate_73
   \   00001898   0860A0E1           MOV      R6,R8
   \   0000189C   040000EA           B        ??Calculate_73
    791                  } else {
    792                      TmpMaxDraft = max(TmpMaxDraft, DftAftMark);
   \                     ??Calculate_74:
   \   000018A0   0700A0E1           MOV      R0,R7
   \   000018A4   0010A0E3           MOV      R1,#+0
   \   000018A8   ........           _BLF     __fLess,??__fLess??rA
   \   000018AC   000050E3           CMP      R0,#+0
   \   000018B0   0760A001           MOVEQ    R6,R7
    793                  }
    794              }
    795              if (!StatusDftFwd) {
   \                     ??Calculate_73:
   \   000018B4   480194E5           LDR      R0,[R4, #+328]
   \   000018B8   000050E3           CMP      R0,#+0
   \   000018BC   0700001A           BNE      ??Calculate_75
    796                  if (DraftIndicationAtPP) {
   \   000018C0   000055E3           CMP      R5,#+0
    797                      TmpMaxDraft = max(TmpMaxDraft, DftFwd);
   \   000018C4   BCA19415           LDRNE    R10,[R4, #+444]
    798                  } else {
    799                      TmpMaxDraft = max(TmpMaxDraft, DftFwdMark);
   \   000018C8   0610A0E1           MOV      R1,R6
   \   000018CC   B4A19405           LDREQ    R10,[R4, #+436]
   \   000018D0   0A00A0E1           MOV      R0,R10
   \   000018D4   ........           _BLF     __fLess,??__fLess??rA
   \   000018D8   000050E3           CMP      R0,#+0
   \   000018DC   0A60A001           MOVEQ    R6,R10
    800                  }
    801              }
    802          
    803              if (!StatusDftAft) {
   \                     ??Calculate_75:
   \   000018E0   000059E3           CMP      R9,#+0
   \   000018E4   0D00001A           BNE      ??Calculate_76
    804                  if (DraftIndicationAtPP) {
   \   000018E8   000055E3           CMP      R5,#+0
   \   000018EC   0600000A           BEQ      ??Calculate_77
    805                      TmpMaxDraft = max(TmpMaxDraft, DftAft);
   \   000018F0   0800A0E1           MOV      R0,R8
   \   000018F4   0610A0E1           MOV      R1,R6
   \   000018F8   ........           _BLF     __fLess,??__fLess??rA
   \   000018FC   000050E3           CMP      R0,#+0
   \   00001900   0600001A           BNE      ??Calculate_76
   \   00001904   0860A0E1           MOV      R6,R8
   \   00001908   040000EA           B        ??Calculate_76
    806                  } else {
    807                      TmpMaxDraft = max(TmpMaxDraft, DftAftMark);
   \                     ??Calculate_77:
   \   0000190C   0700A0E1           MOV      R0,R7
   \   00001910   0610A0E1           MOV      R1,R6
   \   00001914   ........           _BLF     __fLess,??__fLess??rA
   \   00001918   000050E3           CMP      R0,#+0
   \   0000191C   0760A001           MOVEQ    R6,R7
    808                  }
    809              }
    810              if (!StatusDftP) {
   \                     ??Calculate_76:
   \   00001920   500194E5           LDR      R0,[R4, #+336]
   \   00001924   000050E3           CMP      R0,#+0
   \   00001928   0500001A           BNE      ??Calculate_78
    811                  TmpMaxDraft = max(TmpMaxDraft, DftP);
   \   0000192C   C47194E5           LDR      R7,[R4, #+452]
   \   00001930   0610A0E1           MOV      R1,R6
   \   00001934   0700A0E1           MOV      R0,R7
   \   00001938   ........           _BLF     __fLess,??__fLess??rA
   \   0000193C   000050E3           CMP      R0,#+0
   \   00001940   0760A001           MOVEQ    R6,R7
    812              }
    813              if (!StatusDftS) {
   \                     ??Calculate_78:
   \   00001944   540194E5           LDR      R0,[R4, #+340]
   \   00001948   000050E3           CMP      R0,#+0
   \   0000194C   0500001A           BNE      ??Calculate_79
    814                  TmpMaxDraft = max(TmpMaxDraft, DftS);
   \   00001950   C87194E5           LDR      R7,[R4, #+456]
   \   00001954   0610A0E1           MOV      R1,R6
   \   00001958   0700A0E1           MOV      R0,R7
   \   0000195C   ........           _BLF     __fLess,??__fLess??rA
   \   00001960   000050E3           CMP      R0,#+0
   \   00001964   0760A001           MOVEQ    R6,R7
    815              }
    816              if (!StatusDftAftP) {
   \                     ??Calculate_79:
   \   00001968   580194E5           LDR      R0,[R4, #+344]
   \   0000196C   000050E3           CMP      R0,#+0
   \   00001970   0700001A           BNE      ??Calculate_80
    817                  if (DraftIndicationAtPP) {
   \   00001974   000055E3           CMP      R5,#+0
    818                      TmpMaxDraft = max(TmpMaxDraft, DftAftP);
   \   00001978   CC719415           LDRNE    R7,[R4, #+460]
    819                  } else {
    820                      TmpMaxDraft = max(TmpMaxDraft, DftAftMarkP);
   \   0000197C   0610A0E1           MOV      R1,R6
   \   00001980   E4719405           LDREQ    R7,[R4, #+484]
   \   00001984   0700A0E1           MOV      R0,R7
   \   00001988   ........           _BLF     __fLess,??__fLess??rA
   \   0000198C   000050E3           CMP      R0,#+0
   \   00001990   0760A001           MOVEQ    R6,R7
    821                  }
    822              }
    823              if (!StatusDftAftS) {
   \                     ??Calculate_80:
   \   00001994   5C0194E5           LDR      R0,[R4, #+348]
   \   00001998   000050E3           CMP      R0,#+0
   \   0000199C   0700001A           BNE      ??Calculate_81
    824                  if (DraftIndicationAtPP) {
   \   000019A0   000055E3           CMP      R5,#+0
    825                      TmpMaxDraft = max(TmpMaxDraft, DftAftS);
   \   000019A4   D0719415           LDRNE    R7,[R4, #+464]
    826                  } else {
    827                      TmpMaxDraft = max(TmpMaxDraft, DftAftMarkS);
   \   000019A8   0610A0E1           MOV      R1,R6
   \   000019AC   E8719405           LDREQ    R7,[R4, #+488]
   \   000019B0   0700A0E1           MOV      R0,R7
   \   000019B4   ........           _BLF     __fLess,??__fLess??rA
   \   000019B8   000050E3           CMP      R0,#+0
   \   000019BC   0760A001           MOVEQ    R6,R7
    828                  }
    829              }
    830              if (!StatusDftFwdP) {
   \                     ??Calculate_81:
   \   000019C0   600194E5           LDR      R0,[R4, #+352]
   \   000019C4   000050E3           CMP      R0,#+0
   \   000019C8   0700001A           BNE      ??Calculate_82
    831                  if (DraftIndicationAtPP) {
   \   000019CC   000055E3           CMP      R5,#+0
    832                      TmpMaxDraft = max(TmpMaxDraft, DftFwdP);
   \   000019D0   D4719415           LDRNE    R7,[R4, #+468]
    833                  } else {
    834                      TmpMaxDraft = max(TmpMaxDraft, DftFwdMarkP);
   \   000019D4   0610A0E1           MOV      R1,R6
   \   000019D8   DC719405           LDREQ    R7,[R4, #+476]
   \   000019DC   0700A0E1           MOV      R0,R7
   \   000019E0   ........           _BLF     __fLess,??__fLess??rA
   \   000019E4   000050E3           CMP      R0,#+0
   \   000019E8   0760A001           MOVEQ    R6,R7
    835                  }
    836              }
    837              if (!StatusDftFwdS) {
   \                     ??Calculate_82:
   \   000019EC   640194E5           LDR      R0,[R4, #+356]
   \   000019F0   000050E3           CMP      R0,#+0
   \   000019F4   0700001A           BNE      ??Calculate_83
    838                  if (DraftIndicationAtPP) {
   \   000019F8   000055E3           CMP      R5,#+0
    839                      TmpMaxDraft = max(TmpMaxDraft, DftFwdS);
   \   000019FC   D8519415           LDRNE    R5,[R4, #+472]
    840                  } else {
    841                      TmpMaxDraft = max(TmpMaxDraft, DftFwdMarkS);
   \   00001A00   0610A0E1           MOV      R1,R6
   \   00001A04   E0519405           LDREQ    R5,[R4, #+480]
   \   00001A08   0500A0E1           MOV      R0,R5
   \   00001A0C   ........           _BLF     __fLess,??__fLess??rA
   \   00001A10   000050E3           CMP      R0,#+0
   \   00001A14   0560A001           MOVEQ    R6,R5
    842                  }
    843              }
    844              MaxDraft    = TmpMaxDraft;
   \                     ??Calculate_83:
   \   00001A18   F06184E5           STR      R6,[R4, #+496]
    845              SendData();
   \   00001A1C   A42094E5           LDR      R2,[R4, #+164]
   \   00001A20   6510A0E3           MOV      R1,#+101
   \   00001A24   402092E5           LDR      R2,[R2, #+64]
   \   00001A28   0400A0E1           MOV      R0,R4
   \   00001A2C   0FE0A0E1           MOV      LR,PC
   \   00001A30   12FF2FE1           BX       R2
    846          }
   \   00001A34   18D08DE2           ADD      SP,SP,#+24
   \   00001A38   ........           B        ?Subroutine28
   \                     ??Calculate_46:
   \   00001A3C   ........           DC32     ??TrimValue
   \   00001A40   ........           DC32     ??ListValue
    847          
    848          ///////////////////////////////////////////////////////////////
    849          //
    850          // Routines for the librarian
    851          //
    852          ///////////////////////////////////////////////////////////////
    853          

   \                                 In segment CODE, align 4, keep-with-next
    854          int PRODraftSystem::GetValue(int ValueId, int Index, float &MyRetValue,  int &DecPnt, int &Unit) {
   \                     ??GetValue:
   \   00000000   F0412DE9           PUSH     {R4-R8,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   18009DE5           LDR      R0,[SP, #+24]
   \   0000000C   0350A0E1           MOV      R5,R3
   \   00000010   1C309DE5           LDR      R3,[SP, #+28]
    855              int Status = GETVAL_NO_ERR;
   \   00000014   0060A0E3           MOV      R6,#+0
    856              switch (ValueId) {
   \   00000018   02C0A0E3           MOV      R12,#+2
   \   0000001C   01E0A0E3           MOV      LR,#+1
   \   00000020   FB8F8CE3           ORR      R8,R12,#0x3EC
   \   00000024   080051E1           CMP      R1,R8
   \   00000028   D500000A           BEQ      ??GetValue_2
   \   0000002C   4C80A0E3           MOV      R8,#+76
   \   00000030   508E88E3           ORR      R8,R8,#0x500
   \   00000034   080051E1           CMP      R1,R8
   \   00000038   D900000A           BEQ      ??GetValue_3
   \   0000003C   928088E3           ORR      R8,R8,#0x92
   \   00000040   080051E1           CMP      R1,R8
   \   00000044   B300000A           BEQ      ??GetValue_4
   \   00000048   018088E3           ORR      R8,R8,#0x1
   \   0000004C   080051E1           CMP      R1,R8
   \   00000050   B800000A           BEQ      ??GetValue_5
   \   00000054   5E0E51E3           CMP      R1,#+1504
   \   00000058   4500000A           BEQ      ??GetValue_6
   \   0000005C   028088E2           ADD      R8,R8,#+2
   \   00000060   080051E1           CMP      R1,R8
   \   00000064   4E00000A           BEQ      ??GetValue_7
   \   00000068   018088E2           ADD      R8,R8,#+1
   \   0000006C   080051E1           CMP      R1,R8
   \   00000070   5300000A           BEQ      ??GetValue_8
   \   00000074   018088E3           ORR      R8,R8,#0x1
   \   00000078   080051E1           CMP      R1,R8
   \   0000007C   1E00000A           BEQ      ??GetValue_9
   \   00000080   018088E2           ADD      R8,R8,#+1
   \   00000084   080051E1           CMP      R1,R8
   \   00000088   2900000A           BEQ      ??GetValue_10
   \   0000008C   018088E3           ORR      R8,R8,#0x1
   \   00000090   080051E1           CMP      R1,R8
   \   00000094   2E00000A           BEQ      ??GetValue_11
   \   00000098   018088E2           ADD      R8,R8,#+1
   \   0000009C   080051E1           CMP      R1,R8
   \   000000A0   5A00000A           BEQ      ??GetValue_12
   \   000000A4   018088E3           ORR      R8,R8,#0x1
   \   000000A8   080051E1           CMP      R1,R8
   \   000000AC   4C00000A           BEQ      ??GetValue_13
   \   000000B0   018088E2           ADD      R8,R8,#+1
   \   000000B4   080051E1           CMP      R1,R8
   \   000000B8   5F00000A           BEQ      ??GetValue_14
   \   000000BC   018088E3           ORR      R8,R8,#0x1
   \   000000C0   080051E1           CMP      R1,R8
   \   000000C4   6800000A           BEQ      ??GetValue_15
   \   000000C8   038088E2           ADD      R8,R8,#+3
   \   000000CC   080051E1           CMP      R1,R8
   \   000000D0   7100000A           BEQ      ??GetValue_16
   \   000000D4   018088E3           ORR      R8,R8,#0x1
   \   000000D8   080051E1           CMP      R1,R8
   \   000000DC   7A00000A           BEQ      ??GetValue_17
   \   000000E0   188088E2           ADD      R8,R8,#+24
   \   000000E4   080051E1           CMP      R1,R8
   \   000000E8   8300000A           BEQ      ??GetValue_18
   \   000000EC   028088E3           ORR      R8,R8,#0x2
   \   000000F0   080051E1           CMP      R1,R8
   \   000000F4   9800000A           BEQ      ??GetValue_19
   \   000000F8   B60000EA           B        ??GetValue_20
    857              case SVT_DA:
    858                  DecPnt     = 2;
   \                     ??GetValue_9:
   \   000000FC   00C080E5           STR      R12,[R0, #+0]
    859                  Unit       = LENGTH_UNIT;
   \   00000100   00E083E5           STR      LR,[R3, #+0]
    860                  if (DraftIndicationAtPP) {
   \   00000104   F801D4E5           LDRB     R0,[R4, #+504]
   \   00000108   000050E3           CMP      R0,#+0
    861                      MyRetValue = DftAft;
   \   0000010C   C0019415           LDRNE    R0,[R4, #+448]
    862                  } else {
    863                      MyRetValue = DftAftMark;
   \   00000110   B8019405           LDREQ    R0,[R4, #+440]
   \   00000114   000085E5           STR      R0,[R5, #+0]
    864                  }
    865                  if (HWFailure) {
   \   00000118   3C00D4E5           LDRB     R0,[R4, #+60]
   \   0000011C   000050E3           CMP      R0,#+0
   \   00000120   0100000A           BEQ      ??GetValue_21
    866                      Status = GETVAL_HW_ALARM;
   \                     ??GetValue_22:
   \   00000124   0F60A0E3           MOV      R6,#+15
   \   00000128   B10000EA           B        ??GetValue_23
    867                  }else{
    868                      Status     = StatusDftAft;
   \                     ??GetValue_21:
   \   0000012C   4C6194E5           LDR      R6,[R4, #+332]
   \   00000130   AF0000EA           B        ??GetValue_23
    869                  }
    870                  break;
    871              case SVT_DA_MARK:
    872                  DecPnt     = 2;
   \                     ??GetValue_10:
   \   00000134   00C080E5           STR      R12,[R0, #+0]
    873                  Unit       = LENGTH_UNIT;
   \   00000138   00E083E5           STR      LR,[R3, #+0]
    874                  MyRetValue = DftAftMark;
   \   0000013C   B80194E5           LDR      R0,[R4, #+440]
   \   00000140   000085E5           STR      R0,[R5, #+0]
    875                  if (HWFailure) {
   \   00000144   3C00D4E5           LDRB     R0,[R4, #+60]
   \   00000148   000050E3           CMP      R0,#+0
   \   0000014C   F6FFFF0A           BEQ      ??GetValue_21
    876                      Status = GETVAL_HW_ALARM;
   \   00000150   F3FFFFEA           B        ??GetValue_22
    877                  }else{
    878                      Status     = StatusDftAft;
    879                  }
    880                  break;
    881              case SVT_DA_PP:
    882                  DecPnt     = 2;
   \                     ??GetValue_11:
   \   00000154   00C080E5           STR      R12,[R0, #+0]
    883                  Unit       = LENGTH_UNIT;
   \   00000158   00E083E5           STR      LR,[R3, #+0]
    884                  MyRetValue = DftAft;
   \   0000015C   C00194E5           LDR      R0,[R4, #+448]
   \   00000160   000085E5           STR      R0,[R5, #+0]
    885                  if (HWFailure) {
   \   00000164   3C00D4E5           LDRB     R0,[R4, #+60]
   \   00000168   000050E3           CMP      R0,#+0
   \   0000016C   ECFFFF1A           BNE      ??GetValue_22
    886                      Status = GETVAL_HW_ALARM;
    887                  }else{
    888                      Status     = StatusDftAft;
   \   00000170   EDFFFFEA           B        ??GetValue_21
    889                  }
    890                  break;
    891              case SVT_DF:
    892                  DecPnt     = 2;
   \                     ??GetValue_6:
   \   00000174   00C080E5           STR      R12,[R0, #+0]
    893                  Unit       = LENGTH_UNIT;
   \   00000178   00E083E5           STR      LR,[R3, #+0]
    894                  if (DraftIndicationAtPP) {
   \   0000017C   F801D4E5           LDRB     R0,[R4, #+504]
   \   00000180   000050E3           CMP      R0,#+0
    895                      MyRetValue = DftFwd;
   \   00000184   BC019415           LDRNE    R0,[R4, #+444]
    896                  } else {
    897                      MyRetValue = DftFwdMark;
   \   00000188   B4019405           LDREQ    R0,[R4, #+436]
   \   0000018C   000085E5           STR      R0,[R5, #+0]
    898                  }
    899                  if (HWFailure) {
   \   00000190   3C00D4E5           LDRB     R0,[R4, #+60]
   \   00000194   000050E3           CMP      R0,#+0
   \   00000198   E1FFFF1A           BNE      ??GetValue_22
    900                      Status = GETVAL_HW_ALARM;
    901                  }else{
    902                      Status     = StatusDftFwd;
   \                     ??GetValue_24:
   \   0000019C   486194E5           LDR      R6,[R4, #+328]
   \   000001A0   930000EA           B        ??GetValue_23
    903                  }
    904                  break;
    905              case SVT_DF_MARK:
    906                  DecPnt     = 2;
   \                     ??GetValue_7:
   \   000001A4   00C080E5           STR      R12,[R0, #+0]
    907                  Unit       = LENGTH_UNIT;
   \   000001A8   00E083E5           STR      LR,[R3, #+0]
    908                  MyRetValue = DftFwdMark;
   \   000001AC   B40194E5           LDR      R0,[R4, #+436]
   \   000001B0   000085E5           STR      R0,[R5, #+0]
    909                  if (HWFailure) {
   \   000001B4   3C00D4E5           LDRB     R0,[R4, #+60]
   \   000001B8   000050E3           CMP      R0,#+0
   \   000001BC   F6FFFF0A           BEQ      ??GetValue_24
    910                      Status = GETVAL_HW_ALARM;
   \   000001C0   D7FFFFEA           B        ??GetValue_22
    911                  }else{
    912                      Status     = StatusDftFwd;
    913                  }
    914                  break;
    915              case SVT_DF_PP:
    916                  DecPnt     = 2;
   \                     ??GetValue_8:
   \   000001C4   00C080E5           STR      R12,[R0, #+0]
    917                  Unit       = LENGTH_UNIT;
   \   000001C8   00E083E5           STR      LR,[R3, #+0]
    918                  MyRetValue = DftFwd;
   \   000001CC   BC0194E5           LDR      R0,[R4, #+444]
   \   000001D0   000085E5           STR      R0,[R5, #+0]
    919                  if (HWFailure) {
   \   000001D4   3C00D4E5           LDRB     R0,[R4, #+60]
   \   000001D8   000050E3           CMP      R0,#+0
   \   000001DC   D0FFFF1A           BNE      ??GetValue_22
    920                      Status = GETVAL_HW_ALARM;
    921                  }else{
    922                      Status     = StatusDftFwd;
   \   000001E0   EDFFFFEA           B        ??GetValue_24
    923                  }
    924                  break;
    925              case SVT_DP:
    926                  DecPnt     = 2;
   \                     ??GetValue_13:
   \   000001E4   00C080E5           STR      R12,[R0, #+0]
    927                  Unit       = LENGTH_UNIT;
   \   000001E8   00E083E5           STR      LR,[R3, #+0]
    928                  MyRetValue = DftP;
   \   000001EC   C40194E5           LDR      R0,[R4, #+452]
   \   000001F0   000085E5           STR      R0,[R5, #+0]
    929                  if (HWFailure && DPPtr) {
   \   000001F4   3C00D4E5           LDRB     R0,[R4, #+60]
   \   000001F8   000050E3           CMP      R0,#+0
   \   000001FC   74019415           LDRNE    R0,[R4, #+372]
   \   00000200   00005013           CMPNE    R0,#+0
   \   00000204   C6FFFF1A           BNE      ??GetValue_22
    930                      Status = GETVAL_HW_ALARM;
    931                  }else{
    932                      Status     = StatusDftP;
   \   00000208   506194E5           LDR      R6,[R4, #+336]
   \   0000020C   780000EA           B        ??GetValue_23
    933                  }
    934                  break;
    935              case SVT_DS:
    936                  DecPnt     = 2;
   \                     ??GetValue_12:
   \   00000210   00C080E5           STR      R12,[R0, #+0]
    937                  Unit       = LENGTH_UNIT;
   \   00000214   00E083E5           STR      LR,[R3, #+0]
    938                  MyRetValue = DftS;
   \   00000218   C80194E5           LDR      R0,[R4, #+456]
   \   0000021C   000085E5           STR      R0,[R5, #+0]
    939                  if (HWFailure && DSPtr) {
   \   00000220   3C00D4E5           LDRB     R0,[R4, #+60]
   \   00000224   000050E3           CMP      R0,#+0
   \   00000228   78019415           LDRNE    R0,[R4, #+376]
   \   0000022C   00005013           CMPNE    R0,#+0
   \   00000230   BBFFFF1A           BNE      ??GetValue_22
    940                      Status = GETVAL_HW_ALARM;
    941                  }else{
    942                      Status     = StatusDftS;
   \   00000234   546194E5           LDR      R6,[R4, #+340]
   \   00000238   6D0000EA           B        ??GetValue_23
    943                  }
    944                  break;
    945              case SVT_DFP:
    946                  DecPnt     = 2;
   \                     ??GetValue_14:
   \   0000023C   00C080E5           STR      R12,[R0, #+0]
    947                  Unit       = LENGTH_UNIT;
   \   00000240   00E083E5           STR      LR,[R3, #+0]
    948                  if (DraftIndicationAtPP) {
   \   00000244   F801D4E5           LDRB     R0,[R4, #+504]
   \   00000248   000050E3           CMP      R0,#+0
    949                      MyRetValue = DftFwdP;
   \   0000024C   D4019415           LDRNE    R0,[R4, #+468]
    950                  } else {
    951                      MyRetValue = DftFwdMarkP;
   \   00000250   DC019405           LDREQ    R0,[R4, #+476]
   \   00000254   000085E5           STR      R0,[R5, #+0]
    952                  }
    953                  if (HWFailure) {
   \   00000258   3C00D4E5           LDRB     R0,[R4, #+60]
   \   0000025C   000050E3           CMP      R0,#+0
   \   00000260   AFFFFF1A           BNE      ??GetValue_22
    954                      Status = GETVAL_HW_ALARM;
    955                  }else{
    956                      Status     = StatusDftFwdP;
   \   00000264   606194E5           LDR      R6,[R4, #+352]
   \   00000268   610000EA           B        ??GetValue_23
    957                  }
    958                  break;
    959              case SVT_DFS:
    960                  DecPnt     = 2;
   \                     ??GetValue_15:
   \   0000026C   00C080E5           STR      R12,[R0, #+0]
    961                  Unit       = LENGTH_UNIT;
   \   00000270   00E083E5           STR      LR,[R3, #+0]
    962                  if (DraftIndicationAtPP) {
   \   00000274   F801D4E5           LDRB     R0,[R4, #+504]
   \   00000278   000050E3           CMP      R0,#+0
    963                      MyRetValue = DftFwdS;
   \   0000027C   D8019415           LDRNE    R0,[R4, #+472]
    964                  } else {
    965                      MyRetValue = DftFwdMarkS;
   \   00000280   E0019405           LDREQ    R0,[R4, #+480]
   \   00000284   000085E5           STR      R0,[R5, #+0]
    966                  }
    967                  if (HWFailure) {
   \   00000288   3C00D4E5           LDRB     R0,[R4, #+60]
   \   0000028C   000050E3           CMP      R0,#+0
   \   00000290   A3FFFF1A           BNE      ??GetValue_22
    968                      Status = GETVAL_HW_ALARM;
    969                  }else{
    970                      Status     = StatusDftFwdS;
   \   00000294   646194E5           LDR      R6,[R4, #+356]
   \   00000298   550000EA           B        ??GetValue_23
    971                  }
    972                  break;
    973              case SVT_DAP:
    974                  DecPnt     = 2;
   \                     ??GetValue_16:
   \   0000029C   00C080E5           STR      R12,[R0, #+0]
    975                  Unit       = LENGTH_UNIT;
   \   000002A0   00E083E5           STR      LR,[R3, #+0]
    976                  if (DraftIndicationAtPP) {
   \   000002A4   F801D4E5           LDRB     R0,[R4, #+504]
   \   000002A8   000050E3           CMP      R0,#+0
    977                      MyRetValue = DftAftP;
   \   000002AC   CC019415           LDRNE    R0,[R4, #+460]
    978                  } else {
    979                      MyRetValue = DftAftMarkP;
   \   000002B0   E4019405           LDREQ    R0,[R4, #+484]
   \   000002B4   000085E5           STR      R0,[R5, #+0]
    980                  }
    981                  if (HWFailure) {
   \   000002B8   3C00D4E5           LDRB     R0,[R4, #+60]
   \   000002BC   000050E3           CMP      R0,#+0
   \   000002C0   97FFFF1A           BNE      ??GetValue_22
    982                      Status = GETVAL_HW_ALARM;
    983                  }else{
    984                      Status     = StatusDftAftP;
   \   000002C4   586194E5           LDR      R6,[R4, #+344]
   \   000002C8   490000EA           B        ??GetValue_23
    985                  }
    986                  break;
    987              case SVT_DAS:
    988                  DecPnt     = 2;
   \                     ??GetValue_17:
   \   000002CC   00C080E5           STR      R12,[R0, #+0]
    989                  Unit       = LENGTH_UNIT;
   \   000002D0   00E083E5           STR      LR,[R3, #+0]
    990                  if (DraftIndicationAtPP) {
   \   000002D4   F801D4E5           LDRB     R0,[R4, #+504]
   \   000002D8   000050E3           CMP      R0,#+0
    991                      MyRetValue = DftAftS;
   \   000002DC   D0019415           LDRNE    R0,[R4, #+464]
    992                  } else {
    993                      MyRetValue = DftAftMarkS;
   \   000002E0   E8019405           LDREQ    R0,[R4, #+488]
   \   000002E4   000085E5           STR      R0,[R5, #+0]
    994                  }
    995                  if (HWFailure) {
   \   000002E8   3C00D4E5           LDRB     R0,[R4, #+60]
   \   000002EC   000050E3           CMP      R0,#+0
   \   000002F0   8BFFFF1A           BNE      ??GetValue_22
    996                      Status = GETVAL_HW_ALARM;
    997                  }else{
    998                      Status     = StatusDftAftS;
   \   000002F4   5C6194E5           LDR      R6,[R4, #+348]
   \   000002F8   3D0000EA           B        ??GetValue_23
    999                  }
   1000                  break;
   1001              case SVT_DEFLECTION:
   1002                  DecPnt     = 3;
   \                     ??GetValue_18:
   \   000002FC   0310A0E3           MOV      R1,#+3
   \   00000300   001080E5           STR      R1,[R0, #+0]
   1003                  Unit       = LENGTH_UNIT;
   \   00000304   00E083E5           STR      LR,[R3, #+0]
   1004                  MyRetValue = Deflection;
   \   00000308   EC0194E5           LDR      R0,[R4, #+492]
   \   0000030C   000085E5           STR      R0,[R5, #+0]
   1005                  Status     = HasDeflection;
   \   00000310   AB61D4E5           LDRB     R6,[R4, #+427]
   \   00000314   360000EA           B        ??GetValue_23
   1006                  break;
   1007              case SVT_MAX_DRAFT :
   1008                  DecPnt     = 2;
   \                     ??GetValue_4:
   \   00000318   00C080E5           STR      R12,[R0, #+0]
   1009                  Unit       = LENGTH_UNIT;
   \   0000031C   00E083E5           STR      LR,[R3, #+0]
   1010                  MyRetValue = MaxDraft;
   \   00000320   F00194E5           LDR      R0,[R4, #+496]
   \   00000324   000085E5           STR      R0,[R5, #+0]
   1011                  if (HWFailure) {
   \   00000328   3C00D4E5           LDRB     R0,[R4, #+60]
   \   0000032C   000050E3           CMP      R0,#+0
   \   00000330   2F00000A           BEQ      ??GetValue_23
   1012                      Status     = GETVAL_HW_ALARM;
   \   00000334   7AFFFFEA           B        ??GetValue_22
   1013                  }
   1014                  break;
   1015              case SVT_DRAFT_MID:
   1016                  DecPnt     = 2;
   \                     ??GetValue_5:
   \   00000338   00C080E5           STR      R12,[R0, #+0]
   1017                  Unit       = LENGTH_UNIT;
   \   0000033C   00E083E5           STR      LR,[R3, #+0]
   1018          		if (StatusDftMean != GETVAL_HW_ALARM) {
   \   00000340   680194E5           LDR      R0,[R4, #+360]
   \   00000344   0F0050E3           CMP      R0,#+15
   \   00000348   0100000A           BEQ      ??GetValue_25
   1019                      MyRetValue = MeanDraft;
   \   0000034C   F40194E5           LDR      R0,[R4, #+500]
   \                     ??GetValue_26:
   \   00000350   000085E5           STR      R0,[R5, #+0]
   1020          		}
   1021                  Status     = StatusDftMean;
   \                     ??GetValue_25:
   \   00000354   686194E5           LDR      R6,[R4, #+360]
   \   00000358   250000EA           B        ??GetValue_23
   1022                  break;
   1023              case SVT_FREEBOARD:
   1024                  DecPnt     = 2;
   \                     ??GetValue_19:
   \   0000035C   00C080E5           STR      R12,[R0, #+0]
   1025                  Unit       = LENGTH_UNIT;
   \   00000360   00E083E5           STR      LR,[R3, #+0]
   1026          		if (StatusDftMean != GETVAL_HW_ALARM) {
   \   00000364   680194E5           LDR      R0,[R4, #+360]
   \   00000368   0F0050E3           CMP      R0,#+15
   \   0000036C   F8FFFF0A           BEQ      ??GetValue_25
   1027                      MyRetValue = MaxSummerDraft - MeanDraft;
   \   00000370   ........           LDR      R0,??DataTable13  ;; ??MaxSummerDraft
   \   00000374   F41194E5           LDR      R1,[R4, #+500]
   \   00000378   000090E5           LDR      R0,[R0, #+0]
   \   0000037C   ........           _BLF     __fSub,??__fSub??rA
   \   00000380   F2FFFFEA           B        ??GetValue_26
   1028          		}
   1029                  Status     = StatusDftMean;
   1030                  break;
   1031              case SVT_DENSITY:
   1032                  DecPnt     = 4;
   \                     ??GetValue_2:
   \   00000384   0410A0E3           MOV      R1,#+4
   \   00000388   001080E5           STR      R1,[R0, #+0]
   1033                  Unit       = DENSITY_UNIT;
   \   0000038C   0900A0E3           MOV      R0,#+9
   \   00000390   000083E5           STR      R0,[R3, #+0]
   1034                  MyRetValue = PROSystemData::SeaWaterDensity;
   \   00000394   ........           LDR      R0,??DataTable14  ;; ??SeaWaterDensity
   \   00000398   000090E5           LDR      R0,[R0, #+0]
   \                     ??GetValue_27:
   \   0000039C   000085E5           STR      R0,[R5, #+0]
   \   000003A0   130000EA           B        ??GetValue_23
   1035                  break;
   1036          	case SVT_TRIM_MARKS_M:
   1037          		if (( StatusDftFwd== GETVAL_NO_ERR) && (StatusDftAft==GETVAL_NO_ERR )){
   \                     ??GetValue_3:
   \   000003A4   481194E5           LDR      R1,[R4, #+328]
   \   000003A8   000051E3           CMP      R1,#+0
   \   000003AC   4C119405           LDREQ    R1,[R4, #+332]
   \   000003B0   00005103           CMPEQ    R1,#+0
   \   000003B4   0500001A           BNE      ??GetValue_28
   1038          			DecPnt     = 1;
   \   000003B8   00E080E5           STR      LR,[R0, #+0]
   1039          			Unit       = LENGTH_UNIT;
   \   000003BC   00E083E5           STR      LR,[R3, #+0]
   1040          			MyRetValue = DftFwdMark - DftAftMark;
   \   000003C0   B40194E5           LDR      R0,[R4, #+436]
   \   000003C4   B81194E5           LDR      R1,[R4, #+440]
   \   000003C8   ........           _BLF     __fSub,??__fSub??rA
   \   000003CC   F2FFFFEA           B        ??GetValue_27
   1041          		}else{
   1042          			return  GETVAL_ERROR;
   \                     ??GetValue_28:
   \   000003D0   0400A0E3           MOV      R0,#+4
   \   000003D4   070000EA           B        ??GetValue_29
   1043                  }
   1044          		break;
   1045              default:
   1046                  Status = PRogramObject::GetValue(ValueId, Index, MyRetValue,  DecPnt, Unit);
   \                     ??GetValue_20:
   \   000003D8   08002DE9           PUSH     {R3}
   \   000003DC   01002DE9           PUSH     {R0}
   \   000003E0   0530A0E1           MOV      R3,R5
   \   000003E4   0400A0E1           MOV      R0,R4
   \   000003E8   ........           _BLF     ??GetValue_1,??GetValue??rA
   \   000003EC   0060A0E1           MOV      R6,R0
   \   000003F0   08D08DE2           ADD      SP,SP,#+8
   1047                  break;
   1048              }
   1049              return (Status);
   \                     ??GetValue_23:
   \   000003F4   0600A0E1           MOV      R0,R6
   \                     ??GetValue_29:
   \   000003F8                      REQUIRE ?Subroutine29
   \   000003F8                      ;; // Fall through to label ?Subroutine29
   1050          }
   1051          

   \                                 In segment CODE, align 4, keep-with-next
   \                     ?Subroutine25:
   \   00000000   0040BDE8           POP      {LR}
   \   00000004   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   1052          int PRODraftSystem::GetStringValue(int ValueId, int Index, AnsiString &MyString) {
   \                     ??GetStringValue:
   \   00000000   00402DE9           PUSH     {LR}
   1053              int Status = GETVAL_NO_ERR;
   1054              switch (ValueId) {
   1055              default:
   1056                  Status = PRogramObject::GetStringValue(ValueId, Index, MyString);
   1057                  break;
   1058              }
   1059              return (Status);
   \   00000004   ........           _BLF     ??GetStringValue_1,??GetStringValue??rA
   \   00000008   ........           B        ?Subroutine25
   1060          }
   1061          

   \                                 In segment CODE, align 4, keep-with-next
   1062          int PRODraftSystem::PutValue(int ValueId, int Index, AnsiString NewValue, bool Local, int *UnitId) {
   \                     ??PutValue:
   \   00000000   F04F2DE9           PUSH     {R4-R11,LR}
   \   00000004   E4D04DE2           SUB      SP,SP,#+228
   \   00000008   0861DDE5           LDRB     R6,[SP, #+264]
   \   0000000C   0040A0E1           MOV      R4,R0
   \   00000010   0190A0E1           MOV      R9,R1
   \   00000014   0250A0E1           MOV      R5,R2
   \   00000018   0310A0E1           MOV      R1,R3
   1063              int Status = E_NO_ERR, ValUnitId = NO_UNIT;
   \   0000001C   0020A0E3           MOV      R2,#+0
   \   00000020   00208DE5           STR      R2,[SP, #+0]
   \   00000024   04208DE5           STR      R2,[SP, #+4]
   1064              switch (ValueId) {
   \   00000028   E4A0A0E3           MOV      R10,#+228
   \   0000002C   50AE8AE3           ORR      R10,R10,#0x500
   \   00000030   03004AE2           SUB      R0,R10,#+3
   \   00000034   ED8F8FE2           ADR      R8,??PutValue_4  ;; "%f"
   \   00000038   1AB080E3           ORR      R11,R0,#0x1A
   \   0000003C   047040E2           SUB      R7,R0,#+4
   \   00000040   5E2E49E2           SUB      R2,R9,#+1504
   \   00000044   240052E3           CMP      R2,#+36
   \   00000048   2002008A           BHI      ??PutValue_5
   \   0000004C   023F8FE2           ADR      R3,??PutValue_1
   \   00000050   8220A0E1           MOV      R2,R2, LSL #+1
   \   00000054   B23093E1           LDRH     R3,[R3, R2]
   \   00000058   03F18FE0           ADD      PC,PC,R3, LSL #+2
   \                     ??PutValue_1:
   \   0000005C   CD00D100D100       DC16     +205,+209,+209,+47
   \              2F00        
   \   00000064   330033004501       DC16     +51,+51,+325,+247
   \              F700        
   \   0000006C   9A01BB011C02       DC16     +410,+443,+540,+540
   \              1C02        
   \   00000074   E001FF011C02       DC16     +480,+511,+540,+540
   \              1C02        
   \   0000007C   1C021C021C02       DC16     +540,+540,+540,+540
   \              1C02        
   \   00000084   1C021C021C02       DC16     +540,+540,+540,+540
   \              1C02        
   \   0000008C   1C021C021C02       DC16     +540,+540,+540,+540
   \              1C02        
   \   00000094   1C021C021C02       DC16     +540,+540,+540,+540
   \              1C02        
   \   0000009C   1C021C021C02       DC16     +540,+540,+540,+540
   \              1C02        
   \   000000A4   12000000           DC16     +18,+0
   1065              case SVT_DRAFT_POINT:
   1066                  {
   1067                      bool Value = (bool)ConvertToSi(NewValue, NO_UNIT, Status, 0, 1, 0.0);
   \                     ??PutValue_6:
   \   000000A8   08008DE2           ADD      R0,SP,#+8
   \   000000AC   ........           _BLF     ??string,??string??rA
   \   000000B0   0000A0E3           MOV      R0,#+0
   \   000000B4   0010A0E3           MOV      R1,#+0
   \   000000B8   03002DE9           PUSH     {R0,R1}
   \   000000BC   C015A0E3           MOV      R1,#+805306368
   \   000000C0   FF1681E3           ORR      R1,R1,#0xFF00000
   \   000000C4   03002DE9           PUSH     {R0,R1}
   \   000000C8   0010A0E1           MOV      R1,R0
   \   000000CC   03002DE9           PUSH     {R0,R1}
   \   000000D0   18208DE2           ADD      R2,SP,#+24
   \   000000D4   20008DE2           ADD      R0,SP,#+32
   \   000000D8   0800BDE8           POP      {R3}
   \   000000DC   ........           _BLF     ??ConvertToSi,??ConvertToSi??rA
   \   000000E0   0010A0E3           MOV      R1,#+0
   \   000000E4   14D08DE2           ADD      SP,SP,#+20
   \   000000E8   ........           _BLF     __fNotEqual,??__fNotEqual??rA
   \   000000EC   000050E3           CMP      R0,#+0
   \   000000F0   0150A013           MOVNE    R5,#+1
   \   000000F4   0050A003           MOVEQ    R5,#+0
   \   000000F8   0020A0E3           MOV      R2,#+0
   \   000000FC   0110A0E3           MOV      R1,#+1
   \   00000100   08008DE2           ADD      R0,SP,#+8
   \   00000104   ........           _BLF     ??_Tidy,??_Tidy??rA
   1068                      if (Status == E_NO_ERR) {
   \   00000108   00009DE5           LDR      R0,[SP, #+0]
   \   0000010C   000050E3           CMP      R0,#+0
   \   00000110   FE01001A           BNE      ??PutValue_7
   1069                          DraftIndicationAtPP = Value;
   \   00000114   F851C4E5           STRB     R5,[R4, #+504]
   \   00000118   FF0100EA           B        ??PutValue_8
   1070                      }
   1071                  }
   1072                  break;
   1073              case SVT_DA:
   1074                  if (DraftIndicationAtPP) {
   \                     ??PutValue_9:
   \   0000011C   F801D4E5           LDRB     R0,[R4, #+504]
   \   00000120   000050E3           CMP      R0,#+0
   1075                      ValueId = SVT_DA_PP;
   \   00000124   08908712           ADDNE    R9,R7,#+8
   1076                  } else {
   1077                      ValueId = SVT_DA_MARK;
   \   00000128   0A90A001           MOVEQ    R9,R10
   1078                  }
   1079              case SVT_DA_MARK:
   1080              case SVT_DA_PP:
   1081                  switch (DraftSystem) {
   \                     ??PutValue_10:
   \   0000012C   6C01D4E5           LDRB     R0,[R4, #+364]
   \   00000130   020050E3           CMP      R0,#+2
   \   00000134   9300008A           BHI      ??PutValue_11
   \   00000138   012F8FE2           ADR      R2,??PutValue_2
   \   0000013C   0020D2E7           LDRB     R2,[R2, R0]
   \   00000140   02F18FE0           ADD      PC,PC,R2, LSL #+2
   \                     ??PutValue_2:
   \   00000144   00002200           DC8      +0,+0,+34,+0
   1082                  case DftFwdAft:
   1083                  case DftFwdMidShipAft:
   1084                      //DAPtr
   1085                      if (ValueId == SVT_DA_MARK) {
   \                     ??PutValue_12:
   \   00000148   7C0194E5           LDR      R0,[R4, #+380]
   \   0000014C   0A0059E1           CMP      R9,R10
   \   00000150   A40090E5           LDR      R0,[R0, #+164]
   \   00000154   1100001A           BNE      ??PutValue_13
   1086                          Status = DAPtr->PutValue(SVT_DRAFT, Index, NewValue, Local, &ValUnitId);
   \   00000158   307080E2           ADD      R7,R0,#+48
   \   0000015C   08008DE2           ADD      R0,SP,#+8
   \   00000160   ........           _BLF     ??string,??string??rA
   \   00000164   04008DE2           ADD      R0,SP,#+4
   \   00000168   01002DE9           PUSH     {R0}
   \   0000016C   40002DE9           PUSH     {R6}
   \   00000170   7C0194E5           LDR      R0,[R4, #+380]
   \   00000174   0520A0E1           MOV      R2,R5
   \   00000178   005097E5           LDR      R5,[R7, #+0]
   \   0000017C   10308DE2           ADD      R3,SP,#+16
   \   00000180   0B10A0E1           MOV      R1,R11
   \                     ??PutValue_14:
   \   00000184   0FE0A0E1           MOV      LR,PC
   \   00000188   15FF2FE1           BX       R5
   \   0000018C   08008DE5           STR      R0,[SP, #+8]
   \   00000190   0020A0E3           MOV      R2,#+0
   \   00000194   0110A0E3           MOV      R1,#+1
   \   00000198   10008DE2           ADD      R0,SP,#+16
   \   0000019C   D90100EA           B        ??PutValue_15
   1087                      } else {
   1088                          Status = DAPtr->PutValue(SVT_DRAFT_PP, Index, NewValue, Local, &ValUnitId);
   \                     ??PutValue_13:
   \   000001A0   308080E2           ADD      R8,R0,#+48
   \   000001A4   08008DE2           ADD      R0,SP,#+8
   \   000001A8   ........           _BLF     ??string,??string??rA
   \   000001AC   04008DE2           ADD      R0,SP,#+4
   \   000001B0   01002DE9           PUSH     {R0}
   \   000001B4   40002DE9           PUSH     {R6}
   \   000001B8   7C0194E5           LDR      R0,[R4, #+380]
   \   000001BC   0520A0E1           MOV      R2,R5
   \   000001C0   005098E5           LDR      R5,[R8, #+0]
   \   000001C4   10308DE2           ADD      R3,SP,#+16
   \   000001C8   0710A0E1           MOV      R1,R7
   \   000001CC   ECFFFFEA           B        ??PutValue_14
   1089                      }
   1090                      break;
   1091                  case DftFwdAPortAStbd:
   1092                      {
   1093                          float NewDftA = (float)ConvertToSi(NewValue, ValUnitId = LENGTH_UNIT, Status, 0.0, MaxSummerDraft, 0.0);
   \                     ??PutValue_16:
   \   000001D0   0120A0E3           MOV      R2,#+1
   \   000001D4   04208DE5           STR      R2,[SP, #+4]
   \   000001D8   08008DE2           ADD      R0,SP,#+8
   \   000001DC   ........           _BLF     ??string,??string??rA
   \   000001E0   0000A0E3           MOV      R0,#+0
   \   000001E4   0010A0E3           MOV      R1,#+0
   \   000001E8   03002DE9           PUSH     {R0,R1}
   \   000001EC   ........           LDR      R0,??DataTable13  ;; ??MaxSummerDraft
   \   000001F0   000090E5           LDR      R0,[R0, #+0]
   \   000001F4   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   000001F8   03002DE9           PUSH     {R0,R1}
   \   000001FC   0000A0E3           MOV      R0,#+0
   \   00000200   0010A0E1           MOV      R1,R0
   \   00000204   03002DE9           PUSH     {R0,R1}
   \   00000208   18208DE2           ADD      R2,SP,#+24
   \   0000020C   20008DE2           ADD      R0,SP,#+32
   \   00000210   0800BDE8           POP      {R3}
   \   00000214   0110A0E3           MOV      R1,#+1
   \   00000218   ........           _BLF     ??ConvertToSi,??ConvertToSi??rA
   \   0000021C   0070A0E1           MOV      R7,R0
   \   00000220   0020A0E3           MOV      R2,#+0
   \   00000224   0110A0E3           MOV      R1,#+1
   \   00000228   1C008DE2           ADD      R0,SP,#+28
   \   0000022C   ........           _BLF     ??_Tidy,??_Tidy??rA
   1094                          if (Status == E_NO_ERR) {
   \   00000230   14009DE5           LDR      R0,[SP, #+20]
   \   00000234   14D08DE2           ADD      SP,SP,#+20
   \   00000238   000050E3           CMP      R0,#+0
   \   0000023C   B301001A           BNE      ??PutValue_7
   1095                              float Diff = NewDftA;
   1096                              if (ValueId == SVT_DA_MARK) {
   \   00000240   0A0059E1           CMP      R9,R10
   1097                                  Diff -= DftAftMark;
   \   00000244   B8119405           LDREQ    R1,[R4, #+440]
   \   00000248   0700A0E1           MOV      R0,R7
   1098                              } else {
   1099                                  Diff -= DftAft;
   \   0000024C   C0119415           LDRNE    R1,[R4, #+448]
   \   00000250   ........           _BLF     __fSub,??__fSub??rA
   1100                              }
   1101                              Diff /= 2.0;  // Only half correction to midship
   \   00000254   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   00000258   0020A0E3           MOV      R2,#+0
   \   0000025C   4034A0E3           MOV      R3,#+1073741824
   \   00000260   ........           _BLF     __dDiv,??__dDiv??rA
   \   00000264   ........           _BLF     __doubleToFloat,??__doubleToFloat??rA
   \   00000268   0070A0E1           MOV      R7,R0
   1102                              float DraftOffsetP =  DAPPtr->DraftOffset - Diff;
   1103                              float DraftOffsetS =  DASPtr->DraftOffset - Diff;
   \   0000026C   840194E5           LDR      R0,[R4, #+388]
   \   00000270   0710A0E1           MOV      R1,R7
   \   00000274   5C0190E5           LDR      R0,[R0, #+348]
   \   00000278   ........           _BLF     __fSub,??__fSub??rA
   \   0000027C   0090A0E1           MOV      R9,R0
   1104          
   1105                              char DftOffsetBuf[BUF_SIZE];
   1106                              sprintf(DftOffsetBuf, "%f", DraftOffsetP);
   \   00000280   800194E5           LDR      R0,[R4, #+384]
   \   00000284   0710A0E1           MOV      R1,R7
   \   00000288   5C0190E5           LDR      R0,[R0, #+348]
   1107                              Status = DAPPtr->PutValue(SVT_LEVEL_OFFSET, Index, (AnsiString)DftOffsetBuf, Local);
   \   0000028C   2870A0E3           MOV      R7,#+40
   \   00000290   ........           _BLF     __fSub,??__fSub??rA
   \   00000294   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   00000298   0020A0E1           MOV      R2,R0
   \   0000029C   0130A0E1           MOV      R3,R1
   \   000002A0   0810A0E1           MOV      R1,R8
   \   000002A4   40008DE2           ADD      R0,SP,#+64
   \   000002A8   ........           _BLF     sprintf,??sprintf??rA
   \   000002AC   800194E5           LDR      R0,[R4, #+384]
   \   000002B0   40108DE2           ADD      R1,SP,#+64
   \   000002B4   A40090E5           LDR      R0,[R0, #+164]
   \   000002B8   407E87E3           ORR      R7,R7,#0x400
   \   000002BC   30A080E2           ADD      R10,R0,#+48
   \   000002C0   90008DE2           ADD      R0,SP,#+144
   \   000002C4   ........           _BLF     ??AnsiString,??AnsiString??rA
   \   000002C8   0030A0E1           MOV      R3,R0
   \   000002CC   0000A0E3           MOV      R0,#+0
   \   000002D0   01002DE9           PUSH     {R0}
   \   000002D4   0600A0E1           MOV      R0,R6
   \   000002D8   01002DE9           PUSH     {R0}
   \   000002DC   800194E5           LDR      R0,[R4, #+384]
   \   000002E0   00A09AE5           LDR      R10,[R10, #+0]
   \   000002E4   0520A0E1           MOV      R2,R5
   \   000002E8   0710A0E1           MOV      R1,R7
   \   000002EC   0FE0A0E1           MOV      LR,PC
   \   000002F0   1AFF2FE1           BX       R10
   \   000002F4   08008DE5           STR      R0,[SP, #+8]
   \   000002F8   0020A0E3           MOV      R2,#+0
   \   000002FC   0110A0E3           MOV      R1,#+1
   \   00000300   98008DE2           ADD      R0,SP,#+152
   \   00000304   ........           _BLF     ??_Tidy,??_Tidy??rA
   1108                              if (Status == E_NO_ERR) {
   \   00000308   08009DE5           LDR      R0,[SP, #+8]
   \   0000030C   08D08DE2           ADD      SP,SP,#+8
   \   00000310   000050E3           CMP      R0,#+0
   \   00000314   7D01001A           BNE      ??PutValue_7
   1109                                  sprintf(DftOffsetBuf, "%f", DraftOffsetS);
   \   00000318   0900A0E1           MOV      R0,R9
   \   0000031C   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   00000320   0020A0E1           MOV      R2,R0
   \   00000324   0130A0E1           MOV      R3,R1
   \   00000328   0810A0E1           MOV      R1,R8
   \   0000032C   40008DE2           ADD      R0,SP,#+64
   \   00000330   ........           _BLF     sprintf,??sprintf??rA
   1110                                  Status = DASPtr->PutValue(SVT_LEVEL_OFFSET, Index, (AnsiString)DftOffsetBuf, Local);
   \   00000334   840194E5           LDR      R0,[R4, #+388]
   \   00000338   40108DE2           ADD      R1,SP,#+64
   \   0000033C   A40090E5           LDR      R0,[R0, #+164]
   \   00000340   308080E2           ADD      R8,R0,#+48
   \   00000344   24008DE2           ADD      R0,SP,#+36
   \   00000348   ........           _BLF     ??AnsiString,??AnsiString??rA
   \   0000034C   0010A0E3           MOV      R1,#+0
   \   00000350   02002DE9           PUSH     {R1}
   \   00000354   40002DE9           PUSH     {R6}
   \   00000358   0030A0E1           MOV      R3,R0
   \   0000035C   840194E5           LDR      R0,[R4, #+388]
   \                     ??PutValue_17:
   \   00000360   0520A0E1           MOV      R2,R5
   \   00000364   005098E5           LDR      R5,[R8, #+0]
   \   00000368   0710A0E1           MOV      R1,R7
   \   0000036C   0FE0A0E1           MOV      LR,PC
   \   00000370   15FF2FE1           BX       R5
   \   00000374   08008DE5           STR      R0,[SP, #+8]
   \   00000378   0020A0E3           MOV      R2,#+0
   \   0000037C   0110A0E3           MOV      R1,#+1
   \   00000380   2C008DE2           ADD      R0,SP,#+44
   \   00000384   5F0100EA           B        ??PutValue_15
   1111                              }
   1112                          }
   1113                      }
   1114                      break;
   1115                  case DftNoDef:
   1116                  default:
   1117                      Status = E_NOT_ADJUSTABLE;
   \                     ??PutValue_11:
   \   00000388   2910A0E3           MOV      R1,#+41
   \                     ??PutValue_18:
   \   0000038C   00108DE5           STR      R1,[SP, #+0]
   \   00000390   660100EA           B        ??PutValue_19
   1118                      break;
   1119                  }
   1120                  break;
   1121              case SVT_DF:
   1122                  if (DraftIndicationAtPP) {
   \                     ??PutValue_20:
   \   00000394   F821D4E5           LDRB     R2,[R4, #+504]
   \   00000398   000052E3           CMP      R2,#+0
   1123                      ValueId = SVT_DF_PP;
   \   0000039C   01908012           ADDNE    R9,R0,#+1
   1124                  } else {
   1125                      ValueId = SVT_DF_MARK;
   \   000003A0   0090A001           MOVEQ    R9,R0
   1126                  }
   1127              case SVT_DF_MARK:
   1128              case SVT_DF_PP:
   1129                  switch (DraftSystem) {
   \                     ??PutValue_21:
   \   000003A4   6C21D4E5           LDRB     R2,[R4, #+364]
   \   000003A8   020052E3           CMP      R2,#+2
   \   000003AC   F5FFFF8A           BHI      ??PutValue_11
   1130                  case DftFwdAft:
   1131                  case DftFwdMidShipAft:
   1132                  case DftFwdAPortAStbd:
   1133                      if (ValueId == SVT_DF_MARK) {
   \   000003B0   000059E1           CMP      R9,R0
   \   000003B4   700194E5           LDR      R0,[R4, #+368]
   \   000003B8   A40090E5           LDR      R0,[R0, #+164]
   \   000003BC   0C00001A           BNE      ??PutValue_22
   1134                          Status = DFPtr->PutValue(SVT_DRAFT, Index, NewValue, Local, &ValUnitId);
   \   000003C0   307080E2           ADD      R7,R0,#+48
   \   000003C4   08008DE2           ADD      R0,SP,#+8
   \   000003C8   ........           _BLF     ??string,??string??rA
   \   000003CC   04008DE2           ADD      R0,SP,#+4
   \   000003D0   01002DE9           PUSH     {R0}
   \   000003D4   40002DE9           PUSH     {R6}
   \   000003D8   700194E5           LDR      R0,[R4, #+368]
   \   000003DC   0520A0E1           MOV      R2,R5
   \   000003E0   005097E5           LDR      R5,[R7, #+0]
   \   000003E4   10308DE2           ADD      R3,SP,#+16
   \   000003E8   0B10A0E1           MOV      R1,R11
   \   000003EC   64FFFFEA           B        ??PutValue_14
   \                     ??PutValue_4:
   \   000003F0   25660000           DC8      "%f",+0
   1135                      } else {
   1136                          Status = DFPtr->PutValue(SVT_DRAFT_PP, Index, NewValue, Local, &ValUnitId);
   \                     ??PutValue_22:
   \   000003F4   308080E2           ADD      R8,R0,#+48
   \   000003F8   08008DE2           ADD      R0,SP,#+8
   \   000003FC   ........           _BLF     ??string,??string??rA
   \   00000400   04008DE2           ADD      R0,SP,#+4
   \   00000404   01002DE9           PUSH     {R0}
   \   00000408   40002DE9           PUSH     {R6}
   \   0000040C   700194E5           LDR      R0,[R4, #+368]
   \   00000410   0520A0E1           MOV      R2,R5
   \   00000414   005098E5           LDR      R5,[R8, #+0]
   \   00000418   10308DE2           ADD      R3,SP,#+16
   \   0000041C   0710A0E1           MOV      R1,R7
   \                     ??PutValue_23:
   \   00000420   0FE0A0E1           MOV      LR,PC
   \   00000424   15FF2FE1           BX       R5
   \   00000428   08008DE5           STR      R0,[SP, #+8]
   \   0000042C   0020A0E3           MOV      R2,#+0
   \   00000430   0110A0E3           MOV      R1,#+1
   \   00000434   10008DE2           ADD      R0,SP,#+16
   \   00000438   320100EA           B        ??PutValue_15
   1137                      }
   1138                      break;
   1139                  case DftNoDef:
   1140                  default:
   1141                      Status = E_NOT_ADJUSTABLE;
   1142                      break;
   1143                  }
   1144                  break;
   1145              case SVT_DP:
   1146                  switch (DraftSystem) {
   \                     ??PutValue_24:
   \   0000043C   6C01D4E5           LDRB     R0,[R4, #+364]
   \   00000440   010050E2           SUBS     R0,R0,#+1
   \   00000444   0300000A           BEQ      ??PutValue_25
   \   00000448   010050E2           SUBS     R0,R0,#+1
   \   0000044C   1500000A           BEQ      ??PutValue_26
   \   00000450   050050E2           SUBS     R0,R0,#+5
   \   00000454   CBFFFF1A           BNE      ??PutValue_11
   1147                  case DftFwdMidShipAftPS:
   1148                  case DftFwdMidShipAft:
   1149                      Status = DPPtr->PutValue(SVT_DRAFT, Index, NewValue, Local, &ValUnitId);
   \                     ??PutValue_25:
   \   00000458   740194E5           LDR      R0,[R4, #+372]
   \   0000045C   A40090E5           LDR      R0,[R0, #+164]
   \   00000460   307080E2           ADD      R7,R0,#+48
   \   00000464   AC008DE2           ADD      R0,SP,#+172
   \   00000468   ........           _BLF     ??string,??string??rA
   \   0000046C   04008DE2           ADD      R0,SP,#+4
   \   00000470   01002DE9           PUSH     {R0}
   \   00000474   40002DE9           PUSH     {R6}
   \   00000478   740194E5           LDR      R0,[R4, #+372]
   \   0000047C   0520A0E1           MOV      R2,R5
   \   00000480   005097E5           LDR      R5,[R7, #+0]
   \   00000484   B4308DE2           ADD      R3,SP,#+180
   \   00000488   0B10A0E1           MOV      R1,R11
   \   0000048C   0FE0A0E1           MOV      LR,PC
   \   00000490   15FF2FE1           BX       R5
   \   00000494   08008DE5           STR      R0,[SP, #+8]
   \   00000498   0020A0E3           MOV      R2,#+0
   \   0000049C   0110A0E3           MOV      R1,#+1
   \   000004A0   B4008DE2           ADD      R0,SP,#+180
   \   000004A4   170100EA           B        ??PutValue_15
   1150                      break;
   1151                  case DftFwdAPortAStbd:
   1152                      {
   1153                          float NewDftP = (float)ConvertToSi(NewValue, ValUnitId = LENGTH_UNIT, Status, 0.0, MaxSummerDraft, 0.0);
   \                     ??PutValue_26:
   \   000004A8   0120A0E3           MOV      R2,#+1
   \   000004AC   04208DE5           STR      R2,[SP, #+4]
   \   000004B0   08008DE2           ADD      R0,SP,#+8
   \   000004B4   ........           _BLF     ??string,??string??rA
   \   000004B8   0000A0E3           MOV      R0,#+0
   \   000004BC   0010A0E3           MOV      R1,#+0
   \   000004C0   03002DE9           PUSH     {R0,R1}
   \   000004C4   ........           LDR      R0,??DataTable13  ;; ??MaxSummerDraft
   \   000004C8   000090E5           LDR      R0,[R0, #+0]
   \   000004CC   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   000004D0   03002DE9           PUSH     {R0,R1}
   \   000004D4   0000A0E3           MOV      R0,#+0
   \   000004D8   0010A0E1           MOV      R1,R0
   \   000004DC   03002DE9           PUSH     {R0,R1}
   \   000004E0   18208DE2           ADD      R2,SP,#+24
   \   000004E4   20008DE2           ADD      R0,SP,#+32
   \   000004E8   0800BDE8           POP      {R3}
   \   000004EC   0110A0E3           MOV      R1,#+1
   \   000004F0   ........           _BLF     ??ConvertToSi,??ConvertToSi??rA
   \   000004F4   0090A0E1           MOV      R9,R0
   \   000004F8   0020A0E3           MOV      R2,#+0
   \   000004FC   0110A0E3           MOV      R1,#+1
   \   00000500   1C008DE2           ADD      R0,SP,#+28
   \   00000504   ........           _BLF     ??_Tidy,??_Tidy??rA
   1154                          if (Status == E_NO_ERR) {
   \   00000508   14009DE5           LDR      R0,[SP, #+20]
   \   0000050C   14D08DE2           ADD      SP,SP,#+20
   \   00000510   000050E3           CMP      R0,#+0
   \   00000514   FD00001A           BNE      ??PutValue_7
   1155                              NewDftP -= DAPPtr->TrimListCorrectionFC();
   \   00000518   800194E5           LDR      R0,[R4, #+384]
   \   0000051C   ........           _BLF     ??TrimListCorrectionFC,??TrimListCorrectionFC??rA
   \   00000520   0010A0E1           MOV      R1,R0
   \   00000524   0900A0E1           MOV      R0,R9
   \   00000528   ........           _BLF     __fSub,??__fSub??rA
   1156                              char Buf[BUF_SIZE];
   1157                              sprintf(Buf, "%f", NewDftP);
   \   0000052C   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   00000530   0020A0E1           MOV      R2,R0
   \   00000534   0130A0E1           MOV      R3,R1
   \   00000538   0810A0E1           MOV      R1,R8
   \   0000053C   40008DE2           ADD      R0,SP,#+64
   \   00000540   ........           _BLF     sprintf,??sprintf??rA
   1158                              Status = DAPPtr->PutValue(SVT_DRAFT_PP, Index, (AnsiString)Buf, Local);
   \   00000544   800194E5           LDR      R0,[R4, #+384]
   \   00000548   40108DE2           ADD      R1,SP,#+64
   \   0000054C   A40090E5           LDR      R0,[R0, #+164]
   \   00000550   308080E2           ADD      R8,R0,#+48
   \   00000554   24008DE2           ADD      R0,SP,#+36
   \   00000558   ........           _BLF     ??AnsiString,??AnsiString??rA
   \   0000055C   0010A0E3           MOV      R1,#+0
   \   00000560   02002DE9           PUSH     {R1}
   \   00000564   40002DE9           PUSH     {R6}
   \   00000568   0030A0E1           MOV      R3,R0
   \   0000056C   800194E5           LDR      R0,[R4, #+384]
   \   00000570   7AFFFFEA           B        ??PutValue_17
   1159                          }
   1160                      }
   1161                      break;
   1162                  case DftFwdAft:
   1163                  case DftNoDef:
   1164                  default:
   1165                      Status = E_NOT_ADJUSTABLE;
   1166                      break;
   1167                  }
   1168                  break;
   1169              case SVT_DS:
   1170                  switch (DraftSystem) {
   \                     ??PutValue_27:
   \   00000574   6C01D4E5           LDRB     R0,[R4, #+364]
   \   00000578   010050E2           SUBS     R0,R0,#+1
   \   0000057C   0300000A           BEQ      ??PutValue_28
   \   00000580   010050E2           SUBS     R0,R0,#+1
   \   00000584   1300000A           BEQ      ??PutValue_29
   \   00000588   050050E2           SUBS     R0,R0,#+5
   \   0000058C   7DFFFF1A           BNE      ??PutValue_11
   1171                  case DftFwdMidShipAftPS:
   1172                  case DftFwdMidShipAft:
   1173                      //DSPtr
   1174                      if (DSPtr) {
   \                     ??PutValue_28:
   \   00000590   780194E5           LDR      R0,[R4, #+376]
   \   00000594   000050E3           CMP      R0,#+0
   \   00000598   0C00000A           BEQ      ??PutValue_30
   1175                          Status = DSPtr->PutValue(SVT_DRAFT, Index, NewValue, Local, &ValUnitId);
   \   0000059C   A40090E5           LDR      R0,[R0, #+164]
   \   000005A0   307080E2           ADD      R7,R0,#+48
   \   000005A4   08008DE2           ADD      R0,SP,#+8
   \   000005A8   ........           _BLF     ??string,??string??rA
   \   000005AC   04008DE2           ADD      R0,SP,#+4
   \   000005B0   01002DE9           PUSH     {R0}
   \   000005B4   40002DE9           PUSH     {R6}
   \   000005B8   780194E5           LDR      R0,[R4, #+376]
   \   000005BC   0520A0E1           MOV      R2,R5
   \   000005C0   005097E5           LDR      R5,[R7, #+0]
   \   000005C4   10308DE2           ADD      R3,SP,#+16
   \   000005C8   0B10A0E1           MOV      R1,R11
   \   000005CC   ECFEFFEA           B        ??PutValue_14
   1176                      } else {
   1177                          Status = E_INVALID_POINTER;
   \                     ??PutValue_30:
   \   000005D0   0B10A0E3           MOV      R1,#+11
   \   000005D4   6CFFFFEA           B        ??PutValue_18
   1178                      }
   1179                      break;
   1180                  case DftFwdAPortAStbd:
   1181                      {
   1182                          float NewDftS = (float)ConvertToSi(NewValue, ValUnitId = LENGTH_UNIT, Status, 0.0, MaxSummerDraft, 0.0);
   \                     ??PutValue_29:
   \   000005D8   0120A0E3           MOV      R2,#+1
   \   000005DC   04208DE5           STR      R2,[SP, #+4]
   \   000005E0   08008DE2           ADD      R0,SP,#+8
   \   000005E4   ........           _BLF     ??string,??string??rA
   \   000005E8   0000A0E3           MOV      R0,#+0
   \   000005EC   0010A0E3           MOV      R1,#+0
   \   000005F0   03002DE9           PUSH     {R0,R1}
   \   000005F4   ........           LDR      R0,??DataTable13  ;; ??MaxSummerDraft
   \   000005F8   000090E5           LDR      R0,[R0, #+0]
   \   000005FC   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   00000600   03002DE9           PUSH     {R0,R1}
   \   00000604   0000A0E3           MOV      R0,#+0
   \   00000608   0010A0E1           MOV      R1,R0
   \   0000060C   03002DE9           PUSH     {R0,R1}
   \   00000610   18208DE2           ADD      R2,SP,#+24
   \   00000614   20008DE2           ADD      R0,SP,#+32
   \   00000618   0800BDE8           POP      {R3}
   \   0000061C   0110A0E3           MOV      R1,#+1
   \   00000620   ........           _BLF     ??ConvertToSi,??ConvertToSi??rA
   \   00000624   0090A0E1           MOV      R9,R0
   \   00000628   0020A0E3           MOV      R2,#+0
   \   0000062C   0110A0E3           MOV      R1,#+1
   \   00000630   1C008DE2           ADD      R0,SP,#+28
   \   00000634   ........           _BLF     ??_Tidy,??_Tidy??rA
   1183                          if (Status == E_NO_ERR) {
   \   00000638   14009DE5           LDR      R0,[SP, #+20]
   \   0000063C   14D08DE2           ADD      SP,SP,#+20
   \   00000640   000050E3           CMP      R0,#+0
   \   00000644   B100001A           BNE      ??PutValue_7
   1184                              NewDftS -= DASPtr->TrimListCorrectionFC();
   \   00000648   840194E5           LDR      R0,[R4, #+388]
   \   0000064C   ........           _BLF     ??TrimListCorrectionFC,??TrimListCorrectionFC??rA
   \   00000650   0010A0E1           MOV      R1,R0
   \   00000654   0900A0E1           MOV      R0,R9
   \   00000658   ........           _BLF     __fSub,??__fSub??rA
   1185                              char Buf[BUF_SIZE];
   1186                              sprintf(Buf, "%f", NewDftS);
   \   0000065C   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   00000660   0020A0E1           MOV      R2,R0
   \   00000664   0130A0E1           MOV      R3,R1
   \   00000668   0810A0E1           MOV      R1,R8
   \   0000066C   40008DE2           ADD      R0,SP,#+64
   \   00000670   ........           _BLF     sprintf,??sprintf??rA
   1187                              Status = DASPtr->PutValue(SVT_DRAFT_PP, Index, (AnsiString)Buf, Local);
   \   00000674   840194E5           LDR      R0,[R4, #+388]
   \   00000678   40108DE2           ADD      R1,SP,#+64
   \   0000067C   A40090E5           LDR      R0,[R0, #+164]
   \   00000680   308080E2           ADD      R8,R0,#+48
   \   00000684   24008DE2           ADD      R0,SP,#+36
   \   00000688   ........           _BLF     ??AnsiString,??AnsiString??rA
   \   0000068C   0010A0E3           MOV      R1,#+0
   \   00000690   02002DE9           PUSH     {R1}
   \   00000694   40002DE9           PUSH     {R6}
   \   00000698   0030A0E1           MOV      R3,R0
   \   0000069C   840194E5           LDR      R0,[R4, #+388]
   \   000006A0   0520A0E1           MOV      R2,R5
   \   000006A4   005098E5           LDR      R5,[R8, #+0]
   \   000006A8   0710A0E1           MOV      R1,R7
   \   000006AC   0FE0A0E1           MOV      LR,PC
   \   000006B0   15FF2FE1           BX       R5
   \   000006B4   08008DE5           STR      R0,[SP, #+8]
   \   000006B8   0020A0E3           MOV      R2,#+0
   \   000006BC   0110A0E3           MOV      R1,#+1
   \   000006C0   2C008DE2           ADD      R0,SP,#+44
   \   000006C4   8F0000EA           B        ??PutValue_15
   1188                          }
   1189                      }
   1190                      break;
   1191                  case DftFwdAft:
   1192                  case DftNoDef:
   1193                  default:
   1194                      Status = E_NOT_ADJUSTABLE;
   1195                      break;
   1196                  }
   1197                  break;
   1198          
   1199              case SVT_DFP:
   1200                  if (DFPPtr) {
   \                     ??PutValue_31:
   \   000006C8   880194E5           LDR      R0,[R4, #+392]
   \   000006CC   000050E3           CMP      R0,#+0
   \   000006D0   1B00000A           BEQ      ??PutValue_32
   1201                      if (DraftIndicationAtPP) {
   \   000006D4   F821D4E5           LDRB     R2,[R4, #+504]
   \   000006D8   A40090E5           LDR      R0,[R0, #+164]
   \   000006DC   000052E3           CMP      R2,#+0
   \   000006E0   0B00000A           BEQ      ??PutValue_33
   1202                          Status = DFPPtr->PutValue(SVT_DRAFT_PP, Index, NewValue, Local, &ValUnitId);
   \   000006E4   308080E2           ADD      R8,R0,#+48
   \   000006E8   08008DE2           ADD      R0,SP,#+8
   \   000006EC   ........           _BLF     ??string,??string??rA
   \   000006F0   04008DE2           ADD      R0,SP,#+4
   \   000006F4   01002DE9           PUSH     {R0}
   \   000006F8   40002DE9           PUSH     {R6}
   \   000006FC   880194E5           LDR      R0,[R4, #+392]
   \   00000700   0520A0E1           MOV      R2,R5
   \   00000704   005098E5           LDR      R5,[R8, #+0]
   \   00000708   10308DE2           ADD      R3,SP,#+16
   \   0000070C   0710A0E1           MOV      R1,R7
   \   00000710   9BFEFFEA           B        ??PutValue_14
   1203                      } else {
   1204                          Status = DFPPtr->PutValue(SVT_DRAFT, Index, NewValue, Local, &ValUnitId);
   \                     ??PutValue_33:
   \   00000714   307080E2           ADD      R7,R0,#+48
   \   00000718   08008DE2           ADD      R0,SP,#+8
   \   0000071C   ........           _BLF     ??string,??string??rA
   \   00000720   04008DE2           ADD      R0,SP,#+4
   \   00000724   01002DE9           PUSH     {R0}
   \   00000728   40002DE9           PUSH     {R6}
   \   0000072C   880194E5           LDR      R0,[R4, #+392]
   \   00000730   0520A0E1           MOV      R2,R5
   \   00000734   005097E5           LDR      R5,[R7, #+0]
   \   00000738   10308DE2           ADD      R3,SP,#+16
   \   0000073C   0B10A0E1           MOV      R1,R11
   \   00000740   36FFFFEA           B        ??PutValue_23
   1205                      }
   1206                  } else {
   1207                      Status = E_INVALID_POINTER;
   \                     ??PutValue_32:
   \   00000744   0B10A0E3           MOV      R1,#+11
   \   00000748   0FFFFFEA           B        ??PutValue_18
   1208                  }
   1209                  break;
   1210              case SVT_DFS:
   1211                  if (DFSPtr) {
   \                     ??PutValue_34:
   \   0000074C   8C0194E5           LDR      R0,[R4, #+396]
   \   00000750   000050E3           CMP      R0,#+0
   \   00000754   9DFFFF0A           BEQ      ??PutValue_30
   1212                      if (DraftIndicationAtPP) {
   \   00000758   F821D4E5           LDRB     R2,[R4, #+504]
   \   0000075C   A40090E5           LDR      R0,[R0, #+164]
   \   00000760   000052E3           CMP      R2,#+0
   \   00000764   0B00000A           BEQ      ??PutValue_35
   1213                          Status = DFSPtr->PutValue(SVT_DRAFT_PP, Index, NewValue, Local, &ValUnitId);
   \   00000768   308080E2           ADD      R8,R0,#+48
   \   0000076C   08008DE2           ADD      R0,SP,#+8
   \   00000770   ........           _BLF     ??string,??string??rA
   \   00000774   04008DE2           ADD      R0,SP,#+4
   \   00000778   01002DE9           PUSH     {R0}
   \   0000077C   40002DE9           PUSH     {R6}
   \   00000780   8C0194E5           LDR      R0,[R4, #+396]
   \   00000784   0520A0E1           MOV      R2,R5
   \   00000788   005098E5           LDR      R5,[R8, #+0]
   \   0000078C   10308DE2           ADD      R3,SP,#+16
   \   00000790   0710A0E1           MOV      R1,R7
   \   00000794   7AFEFFEA           B        ??PutValue_14
   1214                      } else {
   1215                          Status = DFSPtr->PutValue(SVT_DRAFT, Index, NewValue, Local, &ValUnitId);
   \                     ??PutValue_35:
   \   00000798   307080E2           ADD      R7,R0,#+48
   \   0000079C   08008DE2           ADD      R0,SP,#+8
   \   000007A0   ........           _BLF     ??string,??string??rA
   \   000007A4   04008DE2           ADD      R0,SP,#+4
   \   000007A8   01002DE9           PUSH     {R0}
   \   000007AC   40002DE9           PUSH     {R6}
   \   000007B0   8C0194E5           LDR      R0,[R4, #+396]
   \                     ??PutValue_36:
   \   000007B4   0520A0E1           MOV      R2,R5
   \   000007B8   005097E5           LDR      R5,[R7, #+0]
   \   000007BC   10308DE2           ADD      R3,SP,#+16
   \   000007C0   0B10A0E1           MOV      R1,R11
   \   000007C4   0FE0A0E1           MOV      LR,PC
   \   000007C8   15FF2FE1           BX       R5
   \   000007CC   08008DE5           STR      R0,[SP, #+8]
   \   000007D0   0020A0E3           MOV      R2,#+0
   \   000007D4   0110A0E3           MOV      R1,#+1
   \   000007D8   10008DE2           ADD      R0,SP,#+16
   \   000007DC   490000EA           B        ??PutValue_15
   1216                      }
   1217                  } else {
   1218                      Status = E_INVALID_POINTER;
   1219                  }
   1220                  break;
   1221              case SVT_DAP:
   1222                  if (DAPPtr) {
   \                     ??PutValue_37:
   \   000007E0   800194E5           LDR      R0,[R4, #+384]
   \   000007E4   000050E3           CMP      R0,#+0
   \   000007E8   D5FFFF0A           BEQ      ??PutValue_32
   1223                      if (DraftIndicationAtPP) {
   \   000007EC   F821D4E5           LDRB     R2,[R4, #+504]
   \   000007F0   A40090E5           LDR      R0,[R0, #+164]
   \   000007F4   000052E3           CMP      R2,#+0
   \   000007F8   0B00000A           BEQ      ??PutValue_38
   1224                          Status = DAPPtr->PutValue(SVT_DRAFT_PP, Index, NewValue, Local, &ValUnitId);
   \   000007FC   308080E2           ADD      R8,R0,#+48
   \   00000800   08008DE2           ADD      R0,SP,#+8
   \   00000804   ........           _BLF     ??string,??string??rA
   \   00000808   04008DE2           ADD      R0,SP,#+4
   \   0000080C   01002DE9           PUSH     {R0}
   \   00000810   40002DE9           PUSH     {R6}
   \   00000814   800194E5           LDR      R0,[R4, #+384]
   \   00000818   0520A0E1           MOV      R2,R5
   \   0000081C   005098E5           LDR      R5,[R8, #+0]
   \   00000820   10308DE2           ADD      R3,SP,#+16
   \   00000824   0710A0E1           MOV      R1,R7
   \   00000828   55FEFFEA           B        ??PutValue_14
   1225                      } else {
   1226                          Status = DAPPtr->PutValue(SVT_DRAFT, Index, NewValue, Local, &ValUnitId);
   \                     ??PutValue_38:
   \   0000082C   307080E2           ADD      R7,R0,#+48
   \   00000830   08008DE2           ADD      R0,SP,#+8
   \   00000834   ........           _BLF     ??string,??string??rA
   \   00000838   04008DE2           ADD      R0,SP,#+4
   \   0000083C   01002DE9           PUSH     {R0}
   \   00000840   40002DE9           PUSH     {R6}
   \   00000844   800194E5           LDR      R0,[R4, #+384]
   \   00000848   0520A0E1           MOV      R2,R5
   \   0000084C   005097E5           LDR      R5,[R7, #+0]
   \   00000850   10308DE2           ADD      R3,SP,#+16
   \   00000854   0B10A0E1           MOV      R1,R11
   \   00000858   F0FEFFEA           B        ??PutValue_23
   1227                      }
   1228                  } else {
   1229                      Status = E_INVALID_POINTER;
   1230                  }
   1231                  break;
   1232              case SVT_DAS:
   1233                  if (DASPtr) {
   \                     ??PutValue_39:
   \   0000085C   840194E5           LDR      R0,[R4, #+388]
   \   00000860   000050E3           CMP      R0,#+0
   \   00000864   1700000A           BEQ      ??PutValue_40
   1234                      if (DraftIndicationAtPP) {
   \   00000868   F821D4E5           LDRB     R2,[R4, #+504]
   \   0000086C   A40090E5           LDR      R0,[R0, #+164]
   \   00000870   000052E3           CMP      R2,#+0
   \   00000874   0B00000A           BEQ      ??PutValue_41
   1235                          Status = DASPtr->PutValue(SVT_DRAFT_PP, Index, NewValue, Local, &ValUnitId);
   \   00000878   308080E2           ADD      R8,R0,#+48
   \   0000087C   08008DE2           ADD      R0,SP,#+8
   \   00000880   ........           _BLF     ??string,??string??rA
   \   00000884   04008DE2           ADD      R0,SP,#+4
   \   00000888   01002DE9           PUSH     {R0}
   \   0000088C   40002DE9           PUSH     {R6}
   \   00000890   840194E5           LDR      R0,[R4, #+388]
   \   00000894   0520A0E1           MOV      R2,R5
   \   00000898   005098E5           LDR      R5,[R8, #+0]
   \   0000089C   10308DE2           ADD      R3,SP,#+16
   \   000008A0   0710A0E1           MOV      R1,R7
   \   000008A4   36FEFFEA           B        ??PutValue_14
   1236                      } else {
   1237                          Status = DASPtr->PutValue(SVT_DRAFT, Index, NewValue, Local, &ValUnitId);
   \                     ??PutValue_41:
   \   000008A8   307080E2           ADD      R7,R0,#+48
   \   000008AC   08008DE2           ADD      R0,SP,#+8
   \   000008B0   ........           _BLF     ??string,??string??rA
   \   000008B4   04008DE2           ADD      R0,SP,#+4
   \   000008B8   01002DE9           PUSH     {R0}
   \   000008BC   40002DE9           PUSH     {R6}
   \   000008C0   840194E5           LDR      R0,[R4, #+388]
   \   000008C4   BAFFFFEA           B        ??PutValue_36
   1238                      }
   1239                  } else {
   1240                      Status = E_INVALID_POINTER;
   \                     ??PutValue_40:
   \   000008C8   0B10A0E3           MOV      R1,#+11
   \   000008CC   AEFEFFEA           B        ??PutValue_18
   1241                  }
   1242                  break;
   1243              default:
   1244                  Status = PRogramObject::PutValue(ValueId, Index, NewValue, Local, &ValUnitId);
   \                     ??PutValue_5:
   \   000008D0   C8008DE2           ADD      R0,SP,#+200
   \   000008D4   ........           _BLF     ??string,??string??rA
   \   000008D8   04008DE2           ADD      R0,SP,#+4
   \   000008DC   01002DE9           PUSH     {R0}
   \   000008E0   40002DE9           PUSH     {R6}
   \   000008E4   D0308DE2           ADD      R3,SP,#+208
   \   000008E8   0520A0E1           MOV      R2,R5
   \   000008EC   0910A0E1           MOV      R1,R9
   \   000008F0   0400A0E1           MOV      R0,R4
   \   000008F4   ........           _BLF     ??PutValue_3,??PutValue??rA
   \   000008F8   08008DE5           STR      R0,[SP, #+8]
   \   000008FC   0020A0E3           MOV      R2,#+0
   \   00000900   0110A0E3           MOV      R1,#+1
   \   00000904   D0008DE2           ADD      R0,SP,#+208
   \                     ??PutValue_15:
   \   00000908   ........           _BLF     ??_Tidy,??_Tidy??rA
   \   0000090C   08D08DE2           ADD      SP,SP,#+8
   1245                  break;
   1246              }
   1247              if (Status == E_NO_ERR) {
   \                     ??PutValue_7:
   \   00000910   00009DE5           LDR      R0,[SP, #+0]
   \   00000914   000050E3           CMP      R0,#+0
   \   00000918   0400001A           BNE      ??PutValue_19
   1248                  SetModifiedFlag();
   \                     ??PutValue_8:
   \   0000091C   A41094E5           LDR      R1,[R4, #+164]
   \   00000920   0400A0E1           MOV      R0,R4
   \   00000924   541091E5           LDR      R1,[R1, #+84]
   \   00000928   0FE0A0E1           MOV      LR,PC
   \   0000092C   11FF2FE1           BX       R1
   1249              }
   1250              if (UnitId) {
   \                     ??PutValue_19:
   \   00000930   0C019DE5           LDR      R0,[SP, #+268]
   \   00000934   000050E3           CMP      R0,#+0
   1251                  *UnitId = ValUnitId;
   \   00000938   04109D15           LDRNE    R1,[SP, #+4]
   \   0000093C   00108015           STRNE    R1,[R0, #+0]
   1252              }
   1253              return (Status);
   \   00000940   00009DE5           LDR      R0,[SP, #+0]
   \   00000944   E4D08DE2           ADD      SP,SP,#+228
   \   00000948   ........           B        ?Subroutine28
   1254          }
   1255          

   \                                 In segment CODE, align 4, keep-with-next
   1256          int PRODraftSystem::GetFloatValue(int ValueId, int Index, float &MyValue) {
   \                     ??GetFloatValue:
   \   00000000   F0452DE9           PUSH     {R4-R8,R10,LR}
   1257              int Status = GETVAL_NO_ERR;
   1258              switch (ValueId) {
   \   00000004   B84190E5           LDR      R4,[R0, #+440]
   \   00000008   C05190E5           LDR      R5,[R0, #+448]
   \   0000000C   B46190E5           LDR      R6,[R0, #+436]
   \   00000010   BC7190E5           LDR      R7,[R0, #+444]
   \   00000014   F881D0E5           LDRB     R8,[R0, #+504]
   \   00000018   00C0A0E3           MOV      R12,#+0
   \   0000001C   EEA0A0E3           MOV      R10,#+238
   \   00000020   C0AF8AE3           ORR      R10,R10,#0x300
   \   00000024   0A0051E1           CMP      R1,R10
   \   00000028   6000000A           BEQ      ??GetFloatValue_2
   \   0000002C   7CAF8AE2           ADD      R10,R10,#+496
   \   00000030   0A0051E1           CMP      R1,R10
   \   00000034   5600000A           BEQ      ??GetFloatValue_3
   \   00000038   5E0E51E3           CMP      R1,#+1504
   \   0000003C   2A00000A           BEQ      ??GetFloatValue_4
   \   00000040   03A08AE2           ADD      R10,R10,#+3
   \   00000044   0A0051E1           CMP      R1,R10
   \   00000048   2A00000A           BEQ      ??GetFloatValue_5
   \   0000004C   01A08AE2           ADD      R10,R10,#+1
   \   00000050   0A0051E1           CMP      R1,R10
   \   00000054   2600000A           BEQ      ??GetFloatValue_6
   \   00000058   01A08AE3           ORR      R10,R10,#0x1
   \   0000005C   0A0051E1           CMP      R1,R10
   \   00000060   1B00000A           BEQ      ??GetFloatValue_7
   \   00000064   01A08AE2           ADD      R10,R10,#+1
   \   00000068   0A0051E1           CMP      R1,R10
   \   0000006C   1B00000A           BEQ      ??GetFloatValue_8
   \   00000070   01A08AE3           ORR      R10,R10,#0x1
   \   00000074   0A0051E1           CMP      R1,R10
   \   00000078   1700000A           BEQ      ??GetFloatValue_9
   \   0000007C   01A08AE2           ADD      R10,R10,#+1
   \   00000080   0A0051E1           CMP      R1,R10
   \   00000084   2200000A           BEQ      ??GetFloatValue_10
   \   00000088   01A08AE3           ORR      R10,R10,#0x1
   \   0000008C   0A0051E1           CMP      R1,R10
   \   00000090   1B00000A           BEQ      ??GetFloatValue_11
   \   00000094   01A08AE2           ADD      R10,R10,#+1
   \   00000098   0A0051E1           CMP      R1,R10
   \   0000009C   2000000A           BEQ      ??GetFloatValue_12
   \   000000A0   01A08AE3           ORR      R10,R10,#0x1
   \   000000A4   0A0051E1           CMP      R1,R10
   \   000000A8   2300000A           BEQ      ??GetFloatValue_13
   \   000000AC   03A08AE2           ADD      R10,R10,#+3
   \   000000B0   0A0051E1           CMP      R1,R10
   \   000000B4   2600000A           BEQ      ??GetFloatValue_14
   \   000000B8   01A08AE3           ORR      R10,R10,#0x1
   \   000000BC   0A0051E1           CMP      R1,R10
   \   000000C0   2900000A           BEQ      ??GetFloatValue_15
   \   000000C4   18A08AE2           ADD      R10,R10,#+24
   \   000000C8   0A0051E1           CMP      R1,R10
   \   000000CC   2C00000A           BEQ      ??GetFloatValue_16
   \   000000D0   3A0000EA           B        ??GetFloatValue_17
   1259              case SVT_DA:
   1260                  if (DraftIndicationAtPP) {
   \                     ??GetFloatValue_7:
   \   000000D4   000058E3           CMP      R8,#+0
   \   000000D8   0000000A           BEQ      ??GetFloatValue_8
   1261                      MyValue = DftAft;
   \                     ??GetFloatValue_9:
   \   000000DC   0540A0E1           MOV      R4,R5
   1262                  } else {
   1263                      MyValue = DftAftMark;
   \                     ??GetFloatValue_8:
   \   000000E0   004083E5           STR      R4,[R3, #+0]
   1264                  }
   1265                  Status     = StatusDftAft;
   \   000000E4   4CC190E5           LDR      R12,[R0, #+332]
   \   000000E8   360000EA           B        ??GetFloatValue_18
   1266                  break;
   1267              case SVT_DA_MARK:
   1268                  MyValue = DftAftMark;
   1269                  Status     = StatusDftAft;
   1270                  break;
   1271              case SVT_DA_PP:
   1272                  MyValue = DftAft;
   1273                  Status     = StatusDftAft;
   1274                  break;
   1275              case SVT_DF:
   1276                  if (DraftIndicationAtPP) {
   \                     ??GetFloatValue_4:
   \   000000EC   000058E3           CMP      R8,#+0
   \   000000F0   0000000A           BEQ      ??GetFloatValue_5
   1277                      MyValue = DftFwd;
   \                     ??GetFloatValue_6:
   \   000000F4   0760A0E1           MOV      R6,R7
   1278                  } else {
   1279                      MyValue = DftFwdMark;
   \                     ??GetFloatValue_5:
   \   000000F8   006083E5           STR      R6,[R3, #+0]
   1280                  }
   1281                  Status     = StatusDftFwd;
   \   000000FC   48C190E5           LDR      R12,[R0, #+328]
   \   00000100   300000EA           B        ??GetFloatValue_18
   1282                  break;
   1283              case SVT_DF_MARK:
   1284                  MyValue = DftFwdMark;
   1285                  Status     = StatusDftFwd;
   1286                  break;
   1287              case SVT_DF_PP:
   1288                  MyValue = DftFwd;
   1289                  Status     = StatusDftFwd;
   1290                  break;
   1291              case SVT_DP:
   1292                  MyValue = DftP;
   \                     ??GetFloatValue_11:
   \   00000104   C41190E5           LDR      R1,[R0, #+452]
   \   00000108   001083E5           STR      R1,[R3, #+0]
   1293                  Status     = StatusDftP;
   \   0000010C   50C190E5           LDR      R12,[R0, #+336]
   \   00000110   2C0000EA           B        ??GetFloatValue_18
   1294                  break;
   1295              case SVT_DS:
   1296                  MyValue = DftS;
   \                     ??GetFloatValue_10:
   \   00000114   C81190E5           LDR      R1,[R0, #+456]
   \   00000118   001083E5           STR      R1,[R3, #+0]
   1297                  Status     = StatusDftS;
   \   0000011C   54C190E5           LDR      R12,[R0, #+340]
   \   00000120   280000EA           B        ??GetFloatValue_18
   1298                  break;
   1299              case SVT_DFP:
   1300                  if (DraftIndicationAtPP) {
   \                     ??GetFloatValue_12:
   \   00000124   000058E3           CMP      R8,#+0
   1301                      MyValue = DftFwdP;
   \   00000128   D4119015           LDRNE    R1,[R0, #+468]
   1302                  } else {
   1303                      MyValue = DftFwdMarkP;
   \   0000012C   DC119005           LDREQ    R1,[R0, #+476]
   \   00000130   001083E5           STR      R1,[R3, #+0]
   1304                  }
   1305                  Status     = StatusDftFwdP;
   \   00000134   60C190E5           LDR      R12,[R0, #+352]
   \   00000138   220000EA           B        ??GetFloatValue_18
   1306                  break;
   1307              case SVT_DFS:
   1308                  if (DraftIndicationAtPP) {
   \                     ??GetFloatValue_13:
   \   0000013C   000058E3           CMP      R8,#+0
   1309                      MyValue = DftFwdS;
   \   00000140   D8119015           LDRNE    R1,[R0, #+472]
   1310                  } else {
   1311                      MyValue = DftFwdMarkS;
   \   00000144   E0119005           LDREQ    R1,[R0, #+480]
   \   00000148   001083E5           STR      R1,[R3, #+0]
   1312                  }
   1313                  Status     = StatusDftFwdS;
   \   0000014C   64C190E5           LDR      R12,[R0, #+356]
   \   00000150   1C0000EA           B        ??GetFloatValue_18
   1314                  break;
   1315              case SVT_DAP:
   1316                  if (DraftIndicationAtPP) {
   \                     ??GetFloatValue_14:
   \   00000154   000058E3           CMP      R8,#+0
   1317                      MyValue = DftAftP;
   \   00000158   CC119015           LDRNE    R1,[R0, #+460]
   1318                  } else {
   1319                      MyValue = DftAftMarkP;
   \   0000015C   E4119005           LDREQ    R1,[R0, #+484]
   \   00000160   001083E5           STR      R1,[R3, #+0]
   1320                  }
   1321                  Status     = StatusDftAftP;
   \   00000164   58C190E5           LDR      R12,[R0, #+344]
   \   00000168   160000EA           B        ??GetFloatValue_18
   1322                  break;
   1323              case SVT_DAS:
   1324                  if (DraftIndicationAtPP) {
   \                     ??GetFloatValue_15:
   \   0000016C   000058E3           CMP      R8,#+0
   1325                      MyValue = DftAftS;
   \   00000170   D0119015           LDRNE    R1,[R0, #+464]
   1326                  } else {
   1327                      MyValue = DftAftMarkS;
   \   00000174   E8119005           LDREQ    R1,[R0, #+488]
   \   00000178   001083E5           STR      R1,[R3, #+0]
   1328                  }
   1329                  Status     = StatusDftAftS;
   \   0000017C   5CC190E5           LDR      R12,[R0, #+348]
   \   00000180   100000EA           B        ??GetFloatValue_18
   1330                  break;
   1331              case SVT_DEFLECTION:
   1332                  MyValue = Deflection;
   \                     ??GetFloatValue_16:
   \   00000184   EC1190E5           LDR      R1,[R0, #+492]
   \   00000188   001083E5           STR      R1,[R3, #+0]
   1333                  Status     = HasDeflection;
   \   0000018C   ABC1D0E5           LDRB     R12,[R0, #+427]
   \   00000190   0C0000EA           B        ??GetFloatValue_18
   1334                  break;
   1335              case SVT_MAX_DRAFT :
   1336                  MyValue = MaxDraft;
   \                     ??GetFloatValue_3:
   \   00000194   F01190E5           LDR      R1,[R0, #+496]
   \   00000198   001083E5           STR      R1,[R3, #+0]
   1337                  if (HWFailure) {
   \   0000019C   3C00D0E5           LDRB     R0,[R0, #+60]
   \   000001A0   000050E3           CMP      R0,#+0
   \   000001A4   0700000A           BEQ      ??GetFloatValue_18
   1338                      Status     = GETVAL_HW_ALARM;
   \   000001A8   0FC0A0E3           MOV      R12,#+15
   \   000001AC   050000EA           B        ??GetFloatValue_18
   1339                  }
   1340                  break;
   1341              case SVT_DENSITY:
   1342                  MyValue = PROSystemData::SeaWaterDensity;
   \                     ??GetFloatValue_2:
   \   000001B0   ........           LDR      R0,??DataTable14  ;; ??SeaWaterDensity
   \   000001B4   000090E5           LDR      R0,[R0, #+0]
   \   000001B8   000083E5           STR      R0,[R3, #+0]
   \   000001BC   010000EA           B        ??GetFloatValue_18
   1343                  break;
   1344              default:
   1345                  Status = PRogramObject::GetFloatValue(ValueId, Index, MyValue);
   \                     ??GetFloatValue_17:
   \   000001C0   ........           _BLF     ??GetFloatValue_1,??GetFloatValue??rA
   \   000001C4   00C0A0E1           MOV      R12,R0
   1346                  break;
   1347              }
   1348              return (Status);
   \                     ??GetFloatValue_18:
   \   000001C8   F045BDE8           POP      {R4-R8,R10,LR}
   \   000001CC   0C00A0E1           MOV      R0,R12
   \   000001D0   1EFF2FE1           BX       LR               ;; return
   1349          }

   \                                 In segment CODE, align 4, keep-with-next
   1350          int PRODraftSystem::PutFloatValue(int ValueId, float NewValue) {
   \                     ??PutFloatValue:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   1351              int Status = E_NO_ERR;
   \   00000004   0030A0E3           MOV      R3,#+0
   1352              switch (ValueId) {
   \   00000008   00C0A0E3           MOV      R12,#+0
   \   0000000C   E14041E2           SUB      R4,R1,#+225
   \   00000010   504E44E2           SUB      R4,R4,#+1280
   \   00000014   060054E3           CMP      R4,#+6
   \   00000018   1400008A           BHI      ??PutFloatValue_3
   \   0000001C   015F8FE2           ADR      R5,??PutFloatValue_1
   \   00000020   0450D5E7           LDRB     R5,[R5, R4]
   \   00000024   05F18FE0           ADD      PC,PC,R5, LSL #+2
   \                     ??PutFloatValue_1:
   \   00000028   06091101           DC8      +6,+9,+17,+1
   \   0000002C   040E0B00           DC8      +4,+14,+11,+0
   1353              case SVT_DA_MARK:
   1354                  DftAftMark   = NewValue;
   \                     ??PutFloatValue_4:
   \   00000030   B82180E5           STR      R2,[R0, #+440]
   1355                  StatusDftAft = GETVAL_NO_ERR;
   \                     ??PutFloatValue_5:
   \   00000034   4CC180E5           STR      R12,[R0, #+332]
   \   00000038   0E0000EA           B        ??PutFloatValue_6
   1356                  break;
   1357              case SVT_DA_PP:
   1358                  DftAft       = NewValue;
   \                     ??PutFloatValue_7:
   \   0000003C   C02180E5           STR      R2,[R0, #+448]
   1359                  StatusDftAft = GETVAL_NO_ERR;
   \   00000040   FBFFFFEA           B        ??PutFloatValue_5
   1360                  break;
   1361              case SVT_DF_MARK:
   1362                  DftFwdMark   = NewValue;
   \                     ??PutFloatValue_8:
   \   00000044   B42180E5           STR      R2,[R0, #+436]
   1363                  StatusDftFwd = GETVAL_NO_ERR;
   \                     ??PutFloatValue_9:
   \   00000048   48C180E5           STR      R12,[R0, #+328]
   \   0000004C   090000EA           B        ??PutFloatValue_6
   1364                  break;
   1365              case SVT_DF_PP:
   1366                  DftFwd       = NewValue;
   \                     ??PutFloatValue_10:
   \   00000050   BC2180E5           STR      R2,[R0, #+444]
   1367                  StatusDftFwd = GETVAL_NO_ERR;
   \   00000054   FBFFFFEA           B        ??PutFloatValue_9
   1368                  break;
   1369              case SVT_DP:
   1370                  DftP         = NewValue;
   \                     ??PutFloatValue_11:
   \   00000058   C42180E5           STR      R2,[R0, #+452]
   1371                  StatusDftP   = GETVAL_NO_ERR;
   \   0000005C   50C180E5           STR      R12,[R0, #+336]
   \   00000060   040000EA           B        ??PutFloatValue_6
   1372                  break;
   1373              case SVT_DS:
   1374                  DftS         = NewValue;
   \                     ??PutFloatValue_12:
   \   00000064   C82180E5           STR      R2,[R0, #+456]
   1375                  StatusDftS   = GETVAL_NO_ERR;
   \   00000068   54C180E5           STR      R12,[R0, #+340]
   \   0000006C   010000EA           B        ??PutFloatValue_6
   1376                  break;
   1377              default:
   1378                  Status = PRogramObject::PutFloatValue(ValueId, NewValue);
   \                     ??PutFloatValue_3:
   \   00000070   ........           _BLF     ??PutFloatValue_2,??PutFloatValue??rA
   \   00000074   0030A0E1           MOV      R3,R0
   1379                  break;
   1380              }
   1381              return (Status);
   \                     ??PutFloatValue_6:
   \   00000078   3040BDE8           POP      {R4,R5,LR}
   \   0000007C   0300A0E1           MOV      R0,R3
   \   00000080   1EFF2FE1           BX       LR               ;; return
   1382          }
   1383          

   \                                 In segment CODE, align 4, keep-with-next
   1384          ValueList* PRODraftSystem::GetValueInfoTableStatic(int &Entries, int Index) {
   1385              Entries = NELEMENTS(DraftSystemValueList);
   \                     ??GetValueInfoTableStatic:
   \   00000000   0D10A0E3           MOV      R1,#+13
   \   00000004   001080E5           STR      R1,[R0, #+0]
   1386              return (DraftSystemValueList);
   \   00000008   ........           B        ?Subroutine30
   1387          }

   \                                 In segment CODE, align 4, keep-with-next
   \                     ?Subroutine30:
   \   00000000   00009FE5           LDR      R0,??Subroutine30_0  ;; ??DraftSystemValueList
   \   00000004   1EFF2FE1           BX       LR               ;; return
   \                     ??Subroutine30_0:
   \   00000008   ........           DC32     ??DraftSystemValueList
   1388          
   1389          

   \                                 In segment CODE, align 4, keep-with-next
   1390          int PRODraftSystem::ReceiveData(U8 *data) {
   \                     ??ReceiveData:
   \   00000000   10002DE9           PUSH     {R4}
   \   00000004   4CD04DE2           SUB      SP,SP,#+76
   1391              int ErrorStatus = E_OK;
   1392              ANPRO10_CommandHeading *pCH = (ANPRO10_CommandHeading *)data;
   1393              switch (pCH->CommandNo) {
   \   00000008   0130D1E5           LDRB     R3,[R1, #+1]
   \   0000000C   00C0D1E5           LDRB     R12,[R1, #+0]
   \   00000010   0020A0E3           MOV      R2,#+0
   \   00000014   03348CE1           ORR      R3,R12,R3, LSL #+8
   \   00000018   653053E2           SUBS     R3,R3,#+101
   \   0000001C   0200000A           BEQ      ??ReceiveData_1
   \   00000020   013053E2           SUBS     R3,R3,#+1
   \   00000024   0801000A           BEQ      ??ReceiveData_2
   \   00000028   060100EA           B        ??ReceiveData_3
   1394              case CMD_GENERIC_REALTIME_DATA:
   1395                  {
   1396                      ANPRO10_COMMAND_2730  *pData = (ANPRO10_COMMAND_2730 *)data;
   1397                      HasTrimValue        = pData->HasTrimValue;
   \                     ??ReceiveData_1:
   \   0000002C   0830D1E5           LDRB     R3,[R1, #+8]
   1398                      HasListValue        = pData->HasListValue;
   1399                      HasDeflection       = pData->HasDeflection;
   1400                      TrimValue           = pData->TrimValue;
   \   00000030   0DC0A0E1           MOV      R12,SP
   \   00000034   A931C0E5           STRB     R3,[R0, #+425]
   \   00000038   0930D1E5           LDRB     R3,[R1, #+9]
   \   0000003C   AA31C0E5           STRB     R3,[R0, #+426]
   \   00000040   0A30D1E5           LDRB     R3,[R1, #+10]
   \   00000044   AB31C0E5           STRB     R3,[R0, #+427]
   \   00000048   0030A0E3           MOV      R3,#+0
   \                     ??ReceiveData_4:
   \   0000004C   0C4081E2           ADD      R4,R1,#+12
   \   00000050   0440D3E7           LDRB     R4,[R3, +R4]
   \   00000054   0C40C3E7           STRB     R4,[R3, +R12]
   \   00000058   013083E2           ADD      R3,R3,#+1
   \   0000005C   040053E3           CMP      R3,#+4
   \   00000060   F9FFFFBA           BLT      ??ReceiveData_4
   \   00000064   00309DE5           LDR      R3,[SP, #+0]
   1401                      ListValue           = pData->ListValue;
   \   00000068   04408DE2           ADD      R4,SP,#+4
   \   0000006C   AC3180E5           STR      R3,[R0, #+428]
   \   00000070   0030A0E3           MOV      R3,#+0
   \                     ??ReceiveData_5:
   \   00000074   10C081E2           ADD      R12,R1,#+16
   \   00000078   0CC0D3E7           LDRB     R12,[R3, +R12]
   \   0000007C   04C0C3E7           STRB     R12,[R3, +R4]
   \   00000080   013083E2           ADD      R3,R3,#+1
   \   00000084   040053E3           CMP      R3,#+4
   \   00000088   F9FFFFBA           BLT      ??ReceiveData_5
   \   0000008C   04309DE5           LDR      R3,[SP, #+4]
   1402                      DftFwdMark          = pData->DftFwdMark;
   \   00000090   08408DE2           ADD      R4,SP,#+8
   \   00000094   B03180E5           STR      R3,[R0, #+432]
   \   00000098   0030A0E3           MOV      R3,#+0
   \                     ??ReceiveData_6:
   \   0000009C   14C081E2           ADD      R12,R1,#+20
   \   000000A0   0CC0D3E7           LDRB     R12,[R3, +R12]
   \   000000A4   04C0C3E7           STRB     R12,[R3, +R4]
   \   000000A8   013083E2           ADD      R3,R3,#+1
   \   000000AC   040053E3           CMP      R3,#+4
   \   000000B0   F9FFFFBA           BLT      ??ReceiveData_6
   \   000000B4   08309DE5           LDR      R3,[SP, #+8]
   1403                      DftAftMark          = pData->DftAftMark;
   \   000000B8   0C408DE2           ADD      R4,SP,#+12
   \   000000BC   B43180E5           STR      R3,[R0, #+436]
   \   000000C0   0030A0E3           MOV      R3,#+0
   \                     ??ReceiveData_7:
   \   000000C4   18C081E2           ADD      R12,R1,#+24
   \   000000C8   0CC0D3E7           LDRB     R12,[R3, +R12]
   \   000000CC   04C0C3E7           STRB     R12,[R3, +R4]
   \   000000D0   013083E2           ADD      R3,R3,#+1
   \   000000D4   040053E3           CMP      R3,#+4
   \   000000D8   F9FFFFBA           BLT      ??ReceiveData_7
   \   000000DC   0C309DE5           LDR      R3,[SP, #+12]
   1404                      DftFwd              = pData->DftFwd;
   \   000000E0   10408DE2           ADD      R4,SP,#+16
   \   000000E4   B83180E5           STR      R3,[R0, #+440]
   \   000000E8   0030A0E3           MOV      R3,#+0
   \                     ??ReceiveData_8:
   \   000000EC   1CC081E2           ADD      R12,R1,#+28
   \   000000F0   0CC0D3E7           LDRB     R12,[R3, +R12]
   \   000000F4   04C0C3E7           STRB     R12,[R3, +R4]
   \   000000F8   013083E2           ADD      R3,R3,#+1
   \   000000FC   040053E3           CMP      R3,#+4
   \   00000100   F9FFFFBA           BLT      ??ReceiveData_8
   \   00000104   10309DE5           LDR      R3,[SP, #+16]
   1405                      DftAft              = pData->DftAft;
   \   00000108   14408DE2           ADD      R4,SP,#+20
   \   0000010C   BC3180E5           STR      R3,[R0, #+444]
   \   00000110   0030A0E3           MOV      R3,#+0
   \                     ??ReceiveData_9:
   \   00000114   20C081E2           ADD      R12,R1,#+32
   \   00000118   0CC0D3E7           LDRB     R12,[R3, +R12]
   \   0000011C   04C0C3E7           STRB     R12,[R3, +R4]
   \   00000120   013083E2           ADD      R3,R3,#+1
   \   00000124   040053E3           CMP      R3,#+4
   \   00000128   F9FFFFBA           BLT      ??ReceiveData_9
   \   0000012C   14309DE5           LDR      R3,[SP, #+20]
   1406                      DftP                = pData->DftP;
   \   00000130   18408DE2           ADD      R4,SP,#+24
   \   00000134   C03180E5           STR      R3,[R0, #+448]
   \   00000138   0030A0E3           MOV      R3,#+0
   \                     ??ReceiveData_10:
   \   0000013C   24C081E2           ADD      R12,R1,#+36
   \   00000140   0CC0D3E7           LDRB     R12,[R3, +R12]
   \   00000144   04C0C3E7           STRB     R12,[R3, +R4]
   \   00000148   013083E2           ADD      R3,R3,#+1
   \   0000014C   040053E3           CMP      R3,#+4
   \   00000150   F9FFFFBA           BLT      ??ReceiveData_10
   \   00000154   18309DE5           LDR      R3,[SP, #+24]
   1407                      DftS                = pData->DftS;
   \   00000158   1C408DE2           ADD      R4,SP,#+28
   \   0000015C   C43180E5           STR      R3,[R0, #+452]
   \   00000160   0030A0E3           MOV      R3,#+0
   \                     ??ReceiveData_11:
   \   00000164   28C081E2           ADD      R12,R1,#+40
   \   00000168   0CC0D3E7           LDRB     R12,[R3, +R12]
   \   0000016C   04C0C3E7           STRB     R12,[R3, +R4]
   \   00000170   013083E2           ADD      R3,R3,#+1
   \   00000174   040053E3           CMP      R3,#+4
   \   00000178   F9FFFFBA           BLT      ??ReceiveData_11
   \   0000017C   1C309DE5           LDR      R3,[SP, #+28]
   1408                      Deflection          = pData->Deflection;
   \   00000180   20408DE2           ADD      R4,SP,#+32
   \   00000184   C83180E5           STR      R3,[R0, #+456]
   \   00000188   0030A0E3           MOV      R3,#+0
   \                     ??ReceiveData_12:
   \   0000018C   2CC081E2           ADD      R12,R1,#+44
   \   00000190   0CC0D3E7           LDRB     R12,[R3, +R12]
   \   00000194   04C0C3E7           STRB     R12,[R3, +R4]
   \   00000198   013083E2           ADD      R3,R3,#+1
   \   0000019C   040053E3           CMP      R3,#+4
   \   000001A0   F9FFFFBA           BLT      ??ReceiveData_12
   \   000001A4   20309DE5           LDR      R3,[SP, #+32]
   1409                      MaxDraft            = pData->MaxDraft;
   \   000001A8   24408DE2           ADD      R4,SP,#+36
   \   000001AC   EC3180E5           STR      R3,[R0, #+492]
   \   000001B0   0030A0E3           MOV      R3,#+0
   \                     ??ReceiveData_13:
   \   000001B4   30C081E2           ADD      R12,R1,#+48
   \   000001B8   0CC0D3E7           LDRB     R12,[R3, +R12]
   \   000001BC   04C0C3E7           STRB     R12,[R3, +R4]
   \   000001C0   013083E2           ADD      R3,R3,#+1
   \   000001C4   040053E3           CMP      R3,#+4
   \   000001C8   F9FFFFBA           BLT      ??ReceiveData_13
   \   000001CC   24309DE5           LDR      R3,[SP, #+36]
   1410                      MeanDraft           = pData->MeanDraft;
   \   000001D0   28408DE2           ADD      R4,SP,#+40
   \   000001D4   F03180E5           STR      R3,[R0, #+496]
   \   000001D8   0030A0E3           MOV      R3,#+0
   \                     ??ReceiveData_14:
   \   000001DC   34C081E2           ADD      R12,R1,#+52
   \   000001E0   0CC0D3E7           LDRB     R12,[R3, +R12]
   \   000001E4   04C0C3E7           STRB     R12,[R3, +R4]
   \   000001E8   013083E2           ADD      R3,R3,#+1
   \   000001EC   040053E3           CMP      R3,#+4
   \   000001F0   F9FFFFBA           BLT      ??ReceiveData_14
   \   000001F4   28309DE5           LDR      R3,[SP, #+40]
   \   000001F8   F43180E5           STR      R3,[R0, #+500]
   1411                      StatusDftFwd        = pData->StatusDftFwd;
   \   000001FC   3B30D1E5           LDRB     R3,[R1, #+59]
   \   00000200   3A40D1E5           LDRB     R4,[R1, #+58]
   \   00000204   033484E1           ORR      R3,R4,R3, LSL #+8
   \   00000208   3940D1E5           LDRB     R4,[R1, #+57]
   \   0000020C   033484E1           ORR      R3,R4,R3, LSL #+8
   \   00000210   3840D1E5           LDRB     R4,[R1, #+56]
   \   00000214   033484E1           ORR      R3,R4,R3, LSL #+8
   \   00000218   483180E5           STR      R3,[R0, #+328]
   1412                      StatusDftAft        = pData->StatusDftAft;
   \   0000021C   3F30D1E5           LDRB     R3,[R1, #+63]
   \   00000220   3E40D1E5           LDRB     R4,[R1, #+62]
   \   00000224   033484E1           ORR      R3,R4,R3, LSL #+8
   \   00000228   3D40D1E5           LDRB     R4,[R1, #+61]
   \   0000022C   033484E1           ORR      R3,R4,R3, LSL #+8
   \   00000230   3C40D1E5           LDRB     R4,[R1, #+60]
   \   00000234   033484E1           ORR      R3,R4,R3, LSL #+8
   \   00000238   4C3180E5           STR      R3,[R0, #+332]
   1413                      StatusDftP          = pData->StatusDftP;
   \   0000023C   4330D1E5           LDRB     R3,[R1, #+67]
   \   00000240   4240D1E5           LDRB     R4,[R1, #+66]
   \   00000244   033484E1           ORR      R3,R4,R3, LSL #+8
   \   00000248   4140D1E5           LDRB     R4,[R1, #+65]
   \   0000024C   033484E1           ORR      R3,R4,R3, LSL #+8
   \   00000250   4040D1E5           LDRB     R4,[R1, #+64]
   \   00000254   033484E1           ORR      R3,R4,R3, LSL #+8
   \   00000258   503180E5           STR      R3,[R0, #+336]
   1414                      StatusDftS          = pData->StatusDftS;
   \   0000025C   4730D1E5           LDRB     R3,[R1, #+71]
   \   00000260   4640D1E5           LDRB     R4,[R1, #+70]
   \   00000264   033484E1           ORR      R3,R4,R3, LSL #+8
   \   00000268   4540D1E5           LDRB     R4,[R1, #+69]
   \   0000026C   033484E1           ORR      R3,R4,R3, LSL #+8
   \   00000270   4440D1E5           LDRB     R4,[R1, #+68]
   \   00000274   033484E1           ORR      R3,R4,R3, LSL #+8
   \   00000278   543180E5           STR      R3,[R0, #+340]
   1415                      DraftIndicationAtPP = pData->DraftAtPP;
   \   0000027C   0B30D1E5           LDRB     R3,[R1, #+11]
   1416                      DftAftP             = pData->DftAftP;
   \   00000280   2C408DE2           ADD      R4,SP,#+44
   \   00000284   F831C0E5           STRB     R3,[R0, #+504]
   \   00000288   0030A0E3           MOV      R3,#+0
   \                     ??ReceiveData_15:
   \   0000028C   48C081E2           ADD      R12,R1,#+72
   \   00000290   0CC0D3E7           LDRB     R12,[R3, +R12]
   \   00000294   04C0C3E7           STRB     R12,[R3, +R4]
   \   00000298   013083E2           ADD      R3,R3,#+1
   \   0000029C   040053E3           CMP      R3,#+4
   \   000002A0   F9FFFFBA           BLT      ??ReceiveData_15
   \   000002A4   2C309DE5           LDR      R3,[SP, #+44]
   1417                      DftAftS             = pData->DftAftS;
   \   000002A8   30408DE2           ADD      R4,SP,#+48
   \   000002AC   CC3180E5           STR      R3,[R0, #+460]
   \   000002B0   0030A0E3           MOV      R3,#+0
   \                     ??ReceiveData_16:
   \   000002B4   4CC081E2           ADD      R12,R1,#+76
   \   000002B8   0CC0D3E7           LDRB     R12,[R3, +R12]
   \   000002BC   04C0C3E7           STRB     R12,[R3, +R4]
   \   000002C0   013083E2           ADD      R3,R3,#+1
   \   000002C4   040053E3           CMP      R3,#+4
   \   000002C8   F9FFFFBA           BLT      ??ReceiveData_16
   \   000002CC   30309DE5           LDR      R3,[SP, #+48]
   1418                      DftFwdP             = pData->DftFwdP;
   \   000002D0   34408DE2           ADD      R4,SP,#+52
   \   000002D4   D03180E5           STR      R3,[R0, #+464]
   \   000002D8   0030A0E3           MOV      R3,#+0
   \                     ??ReceiveData_17:
   \   000002DC   50C081E2           ADD      R12,R1,#+80
   \   000002E0   0CC0D3E7           LDRB     R12,[R3, +R12]
   \   000002E4   04C0C3E7           STRB     R12,[R3, +R4]
   \   000002E8   013083E2           ADD      R3,R3,#+1
   \   000002EC   040053E3           CMP      R3,#+4
   \   000002F0   F9FFFFBA           BLT      ??ReceiveData_17
   \   000002F4   34309DE5           LDR      R3,[SP, #+52]
   1419                      DftFwdS             = pData->DftFwdS;
   \   000002F8   38408DE2           ADD      R4,SP,#+56
   \   000002FC   D43180E5           STR      R3,[R0, #+468]
   \   00000300   0030A0E3           MOV      R3,#+0
   \                     ??ReceiveData_18:
   \   00000304   54C081E2           ADD      R12,R1,#+84
   \   00000308   0CC0D3E7           LDRB     R12,[R3, +R12]
   \   0000030C   04C0C3E7           STRB     R12,[R3, +R4]
   \   00000310   013083E2           ADD      R3,R3,#+1
   \   00000314   040053E3           CMP      R3,#+4
   \   00000318   F9FFFFBA           BLT      ??ReceiveData_18
   \   0000031C   38309DE5           LDR      R3,[SP, #+56]
   1420                      DftFwdMarkP         = pData->DftFwdMarkP;
   \   00000320   3C408DE2           ADD      R4,SP,#+60
   \   00000324   D83180E5           STR      R3,[R0, #+472]
   \   00000328   0030A0E3           MOV      R3,#+0
   \                     ??ReceiveData_19:
   \   0000032C   58C081E2           ADD      R12,R1,#+88
   \   00000330   0CC0D3E7           LDRB     R12,[R3, +R12]
   \   00000334   04C0C3E7           STRB     R12,[R3, +R4]
   \   00000338   013083E2           ADD      R3,R3,#+1
   \   0000033C   040053E3           CMP      R3,#+4
   \   00000340   F9FFFFBA           BLT      ??ReceiveData_19
   \   00000344   3C309DE5           LDR      R3,[SP, #+60]
   1421                      DftFwdMarkS         = pData->DftFwdMarkS;
   \   00000348   40408DE2           ADD      R4,SP,#+64
   \   0000034C   DC3180E5           STR      R3,[R0, #+476]
   \   00000350   0030A0E3           MOV      R3,#+0
   \                     ??ReceiveData_20:
   \   00000354   5CC081E2           ADD      R12,R1,#+92
   \   00000358   0CC0D3E7           LDRB     R12,[R3, +R12]
   \   0000035C   04C0C3E7           STRB     R12,[R3, +R4]
   \   00000360   013083E2           ADD      R3,R3,#+1
   \   00000364   040053E3           CMP      R3,#+4
   \   00000368   F9FFFFBA           BLT      ??ReceiveData_20
   \   0000036C   40309DE5           LDR      R3,[SP, #+64]
   1422                      DftAftMarkP         = pData->DftAftMarkP;
   \   00000370   44408DE2           ADD      R4,SP,#+68
   \   00000374   E03180E5           STR      R3,[R0, #+480]
   \   00000378   0030A0E3           MOV      R3,#+0
   \                     ??ReceiveData_21:
   \   0000037C   60C081E2           ADD      R12,R1,#+96
   \   00000380   0CC0D3E7           LDRB     R12,[R3, +R12]
   \   00000384   04C0C3E7           STRB     R12,[R3, +R4]
   \   00000388   013083E2           ADD      R3,R3,#+1
   \   0000038C   040053E3           CMP      R3,#+4
   \   00000390   F9FFFFBA           BLT      ??ReceiveData_21
   \   00000394   44309DE5           LDR      R3,[SP, #+68]
   1423                      DftAftMarkS         = pData->DftAftMarkS;
   \   00000398   48408DE2           ADD      R4,SP,#+72
   \   0000039C   E43180E5           STR      R3,[R0, #+484]
   \   000003A0   0030A0E3           MOV      R3,#+0
   \                     ??ReceiveData_22:
   \   000003A4   64C081E2           ADD      R12,R1,#+100
   \   000003A8   0CC0D3E7           LDRB     R12,[R3, +R12]
   \   000003AC   04C0C3E7           STRB     R12,[R3, +R4]
   \   000003B0   013083E2           ADD      R3,R3,#+1
   \   000003B4   040053E3           CMP      R3,#+4
   \   000003B8   F9FFFFBA           BLT      ??ReceiveData_22
   \   000003BC   48309DE5           LDR      R3,[SP, #+72]
   \   000003C0   E83180E5           STR      R3,[R0, #+488]
   1424                      StatusDftAftP       = pData->StatusDftAftP;
   \   000003C4   6B30D1E5           LDRB     R3,[R1, #+107]
   \   000003C8   6A40D1E5           LDRB     R4,[R1, #+106]
   \   000003CC   033484E1           ORR      R3,R4,R3, LSL #+8
   \   000003D0   6940D1E5           LDRB     R4,[R1, #+105]
   \   000003D4   033484E1           ORR      R3,R4,R3, LSL #+8
   \   000003D8   6840D1E5           LDRB     R4,[R1, #+104]
   \   000003DC   033484E1           ORR      R3,R4,R3, LSL #+8
   \   000003E0   583180E5           STR      R3,[R0, #+344]
   1425                      StatusDftAftS       = pData->StatusDftAftS;
   \   000003E4   6F30D1E5           LDRB     R3,[R1, #+111]
   \   000003E8   6E40D1E5           LDRB     R4,[R1, #+110]
   \   000003EC   033484E1           ORR      R3,R4,R3, LSL #+8
   \   000003F0   6D40D1E5           LDRB     R4,[R1, #+109]
   \   000003F4   033484E1           ORR      R3,R4,R3, LSL #+8
   \   000003F8   6C40D1E5           LDRB     R4,[R1, #+108]
   \   000003FC   033484E1           ORR      R3,R4,R3, LSL #+8
   \   00000400   5C3180E5           STR      R3,[R0, #+348]
   1426                      StatusDftFwdP       = pData->StatusDftFwdP;
   \   00000404   7330D1E5           LDRB     R3,[R1, #+115]
   \   00000408   7240D1E5           LDRB     R4,[R1, #+114]
   \   0000040C   033484E1           ORR      R3,R4,R3, LSL #+8
   \   00000410   7140D1E5           LDRB     R4,[R1, #+113]
   \   00000414   033484E1           ORR      R3,R4,R3, LSL #+8
   \   00000418   7040D1E5           LDRB     R4,[R1, #+112]
   \   0000041C   033484E1           ORR      R3,R4,R3, LSL #+8
   \   00000420   603180E5           STR      R3,[R0, #+352]
   1427                      StatusDftFwdS       = pData->StatusDftFwdS;
   \   00000424   7730D1E5           LDRB     R3,[R1, #+119]
   \   00000428   7640D1E5           LDRB     R4,[R1, #+118]
   \   0000042C   033484E1           ORR      R3,R4,R3, LSL #+8
   \   00000430   7540D1E5           LDRB     R4,[R1, #+117]
   \   00000434   7410D1E5           LDRB     R1,[R1, #+116]
   \   00000438   033484E1           ORR      R3,R4,R3, LSL #+8
   \   0000043C   031481E1           ORR      R1,R1,R3, LSL #+8
   \   00000440   641180E5           STR      R1,[R0, #+356]
   \   00000444   000000EA           B        ??ReceiveData_2
   1428                  }
   1429                  break;
   1430              case CMD_GENERIC_STATIC_DATA:
   1431                  {
   1432                      //ANPRO10_COMMAND_2731  *pData = (ANPRO10_COMMAND_2731*) data;
   1433                      ErrorStatus =  E_OK;
   1434                  }
   1435                  break;
   1436              default:
   1437                  ErrorStatus = E_UNKNOWN_COMMAND;
   \                     ??ReceiveData_3:
   \   00000448   0120A0E3           MOV      R2,#+1
   1438                  break;
   1439              }
   1440              return (ErrorStatus);
   \                     ??ReceiveData_2:
   \   0000044C   4CD08DE2           ADD      SP,SP,#+76
   \   00000450   1000BDE8           POP      {R4}
   \   00000454   ........           B        ?Subroutine31
   1441          }

   \                                 In segment CODE, align 4, keep-with-next
   \                     ?Subroutine31:
   \   00000000   0200A0E1           MOV      R0,R2
   \   00000004   1EFF2FE1           BX       LR               ;; return
   1442          
   1443          

   \                                 In segment CODE, align 4, keep-with-next
   1444          int PRODraftSystem::SendData(U16 cmd) {
   \                     ??SendData:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   84D04DE2           SUB      SP,SP,#+132
   1445              int ErrorStatus = E_OK;
   \   00000008   0040A0E3           MOV      R4,#+0
   1446              switch (cmd) {
   \   0000000C   651051E2           SUBS     R1,R1,#+101
   \   00000010   0200000A           BEQ      ??SendData_1
   \   00000014   011051E2           SUBS     R1,R1,#+1
   \   00000018   F900000A           BEQ      ??SendData_2
   \   0000001C   F70000EA           B        ??SendData_3
   1447              case CMD_GENERIC_REALTIME_DATA:
   1448                  {
   1449                      QueueANPRO10_COMMAND_2730 Cmd;
   1450                      Cmd.TxInfo.Port        = NULL;
   \                     ??SendData_1:
   \   00000020   0020A0E3           MOV      R2,#+0
   \   00000024   00208DE5           STR      R2,[SP, #+0]
   1451                      Cmd.TxInfo.rxAddr      = DEVICE_BROADCAST_ADDR;
   \   00000028   FF20A0E3           MOV      R2,#+255
   \   0000002C   0420CDE5           STRB     R2,[SP, #+4]
   1452                      Cmd.TxInfo.rxId        = DEVICE_BROADCAST_TXU;
   \   00000030   0E20A0E3           MOV      R2,#+14
   \   00000034   0520CDE5           STRB     R2,[SP, #+5]
   1453          
   1454                      Cmd.Data.ObjectId      = IDNumber;
   \   00000038   9C1090E5           LDR      R1,[R0, #+156]
   1455                      Cmd.Data.ndb           = sizeof(Cmd) - sizeof(QueueANPRO10_CommandHeading);
   \   0000003C   7820A0E3           MOV      R2,#+120
   \   00000040   0A10CDE5           STRB     R1,[SP, #+10]
   \   00000044   2114A0E1           LSR      R1,R1,#+8
   \   00000048   0B10CDE5           STRB     R1,[SP, #+11]
   \   0000004C   2114A0E1           LSR      R1,R1,#+8
   \   00000050   0C10CDE5           STRB     R1,[SP, #+12]
   \   00000054   2114A0E1           LSR      R1,R1,#+8
   \   00000058   0D10CDE5           STRB     R1,[SP, #+13]
   \   0000005C   B820CDE1           STRH     R2,[SP, #+8]
   1456                      Cmd.Data.CommandNo     = CMD_GENERIC_REALTIME_DATA;
   \   00000060   6520A0E3           MOV      R2,#+101
   \   00000064   B620CDE1           STRH     R2,[SP, #+6]
   1457                      Cmd.Data.HasTrimValue  = HasTrimValue;
   \   00000068   A921D0E5           LDRB     R2,[R0, #+425]
   1458                      Cmd.Data.HasListValue  = HasListValue;
   1459                      Cmd.Data.HasDeflection = HasDeflection;
   1460                      Cmd.Data.TrimValue     = TrimValue;
   \   0000006C   0410A0E1           MOV      R1,R4
   \   00000070   0E20CDE5           STRB     R2,[SP, #+14]
   \   00000074   AA21D0E5           LDRB     R2,[R0, #+426]
   \   00000078   0F20CDE5           STRB     R2,[SP, #+15]
   \   0000007C   AB21D0E5           LDRB     R2,[R0, #+427]
   \   00000080   1020CDE5           STRB     R2,[SP, #+16]
   \   00000084   12208DE2           ADD      R2,SP,#+18
   \                     ??SendData_4:
   \   00000088   6B3F80E2           ADD      R3,R0,#+428
   \   0000008C   0330D1E7           LDRB     R3,[R1, +R3]
   \   00000090   0230C1E7           STRB     R3,[R1, +R2]
   \   00000094   011081E2           ADD      R1,R1,#+1
   \   00000098   040051E3           CMP      R1,#+4
   \   0000009C   F9FFFFBA           BLT      ??SendData_4
   1461                      Cmd.Data.ListValue     = ListValue;
   \   000000A0   0010A0E3           MOV      R1,#+0
   \   000000A4   16208DE2           ADD      R2,SP,#+22
   \                     ??SendData_5:
   \   000000A8   6C3F80E2           ADD      R3,R0,#+432
   \   000000AC   0330D1E7           LDRB     R3,[R1, +R3]
   \   000000B0   0230C1E7           STRB     R3,[R1, +R2]
   \   000000B4   011081E2           ADD      R1,R1,#+1
   \   000000B8   040051E3           CMP      R1,#+4
   \   000000BC   F9FFFFBA           BLT      ??SendData_5
   1462                      Cmd.Data.DftFwdMark    = DftFwdMark;
   \   000000C0   0010A0E3           MOV      R1,#+0
   \   000000C4   1A208DE2           ADD      R2,SP,#+26
   \                     ??SendData_6:
   \   000000C8   6D3F80E2           ADD      R3,R0,#+436
   \   000000CC   0330D1E7           LDRB     R3,[R1, +R3]
   \   000000D0   0230C1E7           STRB     R3,[R1, +R2]
   \   000000D4   011081E2           ADD      R1,R1,#+1
   \   000000D8   040051E3           CMP      R1,#+4
   \   000000DC   F9FFFFBA           BLT      ??SendData_6
   1463                      Cmd.Data.DftAftMark    = DftAftMark;
   \   000000E0   0010A0E3           MOV      R1,#+0
   \   000000E4   1E208DE2           ADD      R2,SP,#+30
   \                     ??SendData_7:
   \   000000E8   6E3F80E2           ADD      R3,R0,#+440
   \   000000EC   0330D1E7           LDRB     R3,[R1, +R3]
   \   000000F0   0230C1E7           STRB     R3,[R1, +R2]
   \   000000F4   011081E2           ADD      R1,R1,#+1
   \   000000F8   040051E3           CMP      R1,#+4
   \   000000FC   F9FFFFBA           BLT      ??SendData_7
   1464                      Cmd.Data.DftFwd        = DftFwd;
   \   00000100   0010A0E3           MOV      R1,#+0
   \   00000104   22208DE2           ADD      R2,SP,#+34
   \                     ??SendData_8:
   \   00000108   6F3F80E2           ADD      R3,R0,#+444
   \   0000010C   0330D1E7           LDRB     R3,[R1, +R3]
   \   00000110   0230C1E7           STRB     R3,[R1, +R2]
   \   00000114   011081E2           ADD      R1,R1,#+1
   \   00000118   040051E3           CMP      R1,#+4
   \   0000011C   F9FFFFBA           BLT      ??SendData_8
   1465                      Cmd.Data.DftAft        = DftAft;
   \   00000120   0010A0E3           MOV      R1,#+0
   \   00000124   26208DE2           ADD      R2,SP,#+38
   \                     ??SendData_9:
   \   00000128   703F80E2           ADD      R3,R0,#+448
   \   0000012C   0330D1E7           LDRB     R3,[R1, +R3]
   \   00000130   0230C1E7           STRB     R3,[R1, +R2]
   \   00000134   011081E2           ADD      R1,R1,#+1
   \   00000138   040051E3           CMP      R1,#+4
   \   0000013C   F9FFFFBA           BLT      ??SendData_9
   1466                      Cmd.Data.DftP          = DftP;
   \   00000140   0010A0E3           MOV      R1,#+0
   \   00000144   2A208DE2           ADD      R2,SP,#+42
   \                     ??SendData_10:
   \   00000148   713F80E2           ADD      R3,R0,#+452
   \   0000014C   0330D1E7           LDRB     R3,[R1, +R3]
   \   00000150   0230C1E7           STRB     R3,[R1, +R2]
   \   00000154   011081E2           ADD      R1,R1,#+1
   \   00000158   040051E3           CMP      R1,#+4
   \   0000015C   F9FFFFBA           BLT      ??SendData_10
   1467                      Cmd.Data.DftS          = DftS;
   \   00000160   0010A0E3           MOV      R1,#+0
   \   00000164   2E208DE2           ADD      R2,SP,#+46
   \                     ??SendData_11:
   \   00000168   723F80E2           ADD      R3,R0,#+456
   \   0000016C   0330D1E7           LDRB     R3,[R1, +R3]
   \   00000170   0230C1E7           STRB     R3,[R1, +R2]
   \   00000174   011081E2           ADD      R1,R1,#+1
   \   00000178   040051E3           CMP      R1,#+4
   \   0000017C   F9FFFFBA           BLT      ??SendData_11
   1468                      Cmd.Data.Deflection    = Deflection;
   \   00000180   0010A0E3           MOV      R1,#+0
   \   00000184   32208DE2           ADD      R2,SP,#+50
   \                     ??SendData_12:
   \   00000188   7B3F80E2           ADD      R3,R0,#+492
   \   0000018C   0330D1E7           LDRB     R3,[R1, +R3]
   \   00000190   0230C1E7           STRB     R3,[R1, +R2]
   \   00000194   011081E2           ADD      R1,R1,#+1
   \   00000198   040051E3           CMP      R1,#+4
   \   0000019C   F9FFFFBA           BLT      ??SendData_12
   1469                      Cmd.Data.MaxDraft      = MaxDraft;
   \   000001A0   0010A0E3           MOV      R1,#+0
   \   000001A4   36208DE2           ADD      R2,SP,#+54
   \                     ??SendData_13:
   \   000001A8   7C3F80E2           ADD      R3,R0,#+496
   \   000001AC   0330D1E7           LDRB     R3,[R1, +R3]
   \   000001B0   0230C1E7           STRB     R3,[R1, +R2]
   \   000001B4   011081E2           ADD      R1,R1,#+1
   \   000001B8   040051E3           CMP      R1,#+4
   \   000001BC   F9FFFFBA           BLT      ??SendData_13
   1470                      Cmd.Data.MeanDraft     = MeanDraft;
   \   000001C0   0010A0E3           MOV      R1,#+0
   \   000001C4   3A208DE2           ADD      R2,SP,#+58
   \                     ??SendData_14:
   \   000001C8   7D3F80E2           ADD      R3,R0,#+500
   \   000001CC   0330D1E7           LDRB     R3,[R1, +R3]
   \   000001D0   0230C1E7           STRB     R3,[R1, +R2]
   \   000001D4   011081E2           ADD      R1,R1,#+1
   \   000001D8   040051E3           CMP      R1,#+4
   \   000001DC   F9FFFFBA           BLT      ??SendData_14
   1471                      Cmd.Data.StatusDftFwd  = StatusDftFwd;
   \   000001E0   481190E5           LDR      R1,[R0, #+328]
   \   000001E4   3E10CDE5           STRB     R1,[SP, #+62]
   \   000001E8   2114A0E1           LSR      R1,R1,#+8
   \   000001EC   3F10CDE5           STRB     R1,[SP, #+63]
   \   000001F0   2114A0E1           LSR      R1,R1,#+8
   \   000001F4   4010CDE5           STRB     R1,[SP, #+64]
   \   000001F8   2114A0E1           LSR      R1,R1,#+8
   \   000001FC   4110CDE5           STRB     R1,[SP, #+65]
   1472                      Cmd.Data.StatusDftAft  = StatusDftAft;
   \   00000200   4C1190E5           LDR      R1,[R0, #+332]
   \   00000204   4210CDE5           STRB     R1,[SP, #+66]
   \   00000208   2114A0E1           LSR      R1,R1,#+8
   \   0000020C   4310CDE5           STRB     R1,[SP, #+67]
   \   00000210   2114A0E1           LSR      R1,R1,#+8
   \   00000214   4410CDE5           STRB     R1,[SP, #+68]
   \   00000218   2114A0E1           LSR      R1,R1,#+8
   \   0000021C   4510CDE5           STRB     R1,[SP, #+69]
   1473                      Cmd.Data.StatusDftP    = StatusDftP;
   \   00000220   501190E5           LDR      R1,[R0, #+336]
   \   00000224   4610CDE5           STRB     R1,[SP, #+70]
   \   00000228   2114A0E1           LSR      R1,R1,#+8
   \   0000022C   4710CDE5           STRB     R1,[SP, #+71]
   \   00000230   2114A0E1           LSR      R1,R1,#+8
   \   00000234   4810CDE5           STRB     R1,[SP, #+72]
   \   00000238   2114A0E1           LSR      R1,R1,#+8
   \   0000023C   4910CDE5           STRB     R1,[SP, #+73]
   1474                      Cmd.Data.StatusDftS    = StatusDftS;
   \   00000240   541190E5           LDR      R1,[R0, #+340]
   \   00000244   4A10CDE5           STRB     R1,[SP, #+74]
   \   00000248   2114A0E1           LSR      R1,R1,#+8
   \   0000024C   4B10CDE5           STRB     R1,[SP, #+75]
   \   00000250   2114A0E1           LSR      R1,R1,#+8
   \   00000254   4C10CDE5           STRB     R1,[SP, #+76]
   \   00000258   2114A0E1           LSR      R1,R1,#+8
   \   0000025C   4D10CDE5           STRB     R1,[SP, #+77]
   1475                      Cmd.Data.DraftAtPP     = DraftIndicationAtPP;
   \   00000260   F821D0E5           LDRB     R2,[R0, #+504]
   1476          
   1477                      Cmd.Data.DftAftP        = DftAftP;
   \   00000264   0010A0E3           MOV      R1,#+0
   \   00000268   1120CDE5           STRB     R2,[SP, #+17]
   \   0000026C   4E208DE2           ADD      R2,SP,#+78
   \                     ??SendData_15:
   \   00000270   733F80E2           ADD      R3,R0,#+460
   \   00000274   0330D1E7           LDRB     R3,[R1, +R3]
   \   00000278   0230C1E7           STRB     R3,[R1, +R2]
   \   0000027C   011081E2           ADD      R1,R1,#+1
   \   00000280   040051E3           CMP      R1,#+4
   \   00000284   F9FFFFBA           BLT      ??SendData_15
   1478                      Cmd.Data.DftAftS        = DftAftS;
   \   00000288   0010A0E3           MOV      R1,#+0
   \   0000028C   52208DE2           ADD      R2,SP,#+82
   \                     ??SendData_16:
   \   00000290   743F80E2           ADD      R3,R0,#+464
   \   00000294   0330D1E7           LDRB     R3,[R1, +R3]
   \   00000298   0230C1E7           STRB     R3,[R1, +R2]
   \   0000029C   011081E2           ADD      R1,R1,#+1
   \   000002A0   040051E3           CMP      R1,#+4
   \   000002A4   F9FFFFBA           BLT      ??SendData_16
   1479                      Cmd.Data.DftFwdP        = DftFwdP;
   \   000002A8   0010A0E3           MOV      R1,#+0
   \   000002AC   56208DE2           ADD      R2,SP,#+86
   \                     ??SendData_17:
   \   000002B0   753F80E2           ADD      R3,R0,#+468
   \   000002B4   0330D1E7           LDRB     R3,[R1, +R3]
   \   000002B8   0230C1E7           STRB     R3,[R1, +R2]
   \   000002BC   011081E2           ADD      R1,R1,#+1
   \   000002C0   040051E3           CMP      R1,#+4
   \   000002C4   F9FFFFBA           BLT      ??SendData_17
   1480                      Cmd.Data.DftFwdS        = DftFwdS;
   \   000002C8   0010A0E3           MOV      R1,#+0
   \   000002CC   5A208DE2           ADD      R2,SP,#+90
   \                     ??SendData_18:
   \   000002D0   763F80E2           ADD      R3,R0,#+472
   \   000002D4   0330D1E7           LDRB     R3,[R1, +R3]
   \   000002D8   0230C1E7           STRB     R3,[R1, +R2]
   \   000002DC   011081E2           ADD      R1,R1,#+1
   \   000002E0   040051E3           CMP      R1,#+4
   \   000002E4   F9FFFFBA           BLT      ??SendData_18
   1481                      Cmd.Data.DftFwdMarkP    = DftFwdMarkP;
   \   000002E8   0010A0E3           MOV      R1,#+0
   \   000002EC   5E208DE2           ADD      R2,SP,#+94
   \                     ??SendData_19:
   \   000002F0   773F80E2           ADD      R3,R0,#+476
   \   000002F4   0330D1E7           LDRB     R3,[R1, +R3]
   \   000002F8   0230C1E7           STRB     R3,[R1, +R2]
   \   000002FC   011081E2           ADD      R1,R1,#+1
   \   00000300   040051E3           CMP      R1,#+4
   \   00000304   F9FFFFBA           BLT      ??SendData_19
   1482                      Cmd.Data.DftFwdMarkS    = DftFwdMarkS;
   \   00000308   0010A0E3           MOV      R1,#+0
   \   0000030C   62208DE2           ADD      R2,SP,#+98
   \                     ??SendData_20:
   \   00000310   783F80E2           ADD      R3,R0,#+480
   \   00000314   0330D1E7           LDRB     R3,[R1, +R3]
   \   00000318   0230C1E7           STRB     R3,[R1, +R2]
   \   0000031C   011081E2           ADD      R1,R1,#+1
   \   00000320   040051E3           CMP      R1,#+4
   \   00000324   F9FFFFBA           BLT      ??SendData_20
   1483                      Cmd.Data.DftAftMarkP    = DftAftMarkP;
   \   00000328   0010A0E3           MOV      R1,#+0
   \   0000032C   66208DE2           ADD      R2,SP,#+102
   \                     ??SendData_21:
   \   00000330   793F80E2           ADD      R3,R0,#+484
   \   00000334   0330D1E7           LDRB     R3,[R1, +R3]
   \   00000338   0230C1E7           STRB     R3,[R1, +R2]
   \   0000033C   011081E2           ADD      R1,R1,#+1
   \   00000340   040051E3           CMP      R1,#+4
   \   00000344   F9FFFFBA           BLT      ??SendData_21
   1484                      Cmd.Data.DftAftMarkS    = DftAftMarkS;
   \   00000348   0010A0E3           MOV      R1,#+0
   \   0000034C   6A208DE2           ADD      R2,SP,#+106
   \                     ??SendData_22:
   \   00000350   7A3F80E2           ADD      R3,R0,#+488
   \   00000354   0330D1E7           LDRB     R3,[R1, +R3]
   \   00000358   0230C1E7           STRB     R3,[R1, +R2]
   \   0000035C   011081E2           ADD      R1,R1,#+1
   \   00000360   040051E3           CMP      R1,#+4
   \   00000364   F9FFFFBA           BLT      ??SendData_22
   1485                      Cmd.Data.StatusDftAftP  = StatusDftAftP;
   \   00000368   581190E5           LDR      R1,[R0, #+344]
   \   0000036C   6E10CDE5           STRB     R1,[SP, #+110]
   \   00000370   2114A0E1           LSR      R1,R1,#+8
   \   00000374   6F10CDE5           STRB     R1,[SP, #+111]
   \   00000378   2114A0E1           LSR      R1,R1,#+8
   \   0000037C   7010CDE5           STRB     R1,[SP, #+112]
   \   00000380   2114A0E1           LSR      R1,R1,#+8
   \   00000384   7110CDE5           STRB     R1,[SP, #+113]
   1486                      Cmd.Data.StatusDftAftS  = StatusDftAftS;
   \   00000388   5C1190E5           LDR      R1,[R0, #+348]
   \   0000038C   7210CDE5           STRB     R1,[SP, #+114]
   \   00000390   2114A0E1           LSR      R1,R1,#+8
   \   00000394   7310CDE5           STRB     R1,[SP, #+115]
   \   00000398   2114A0E1           LSR      R1,R1,#+8
   \   0000039C   7410CDE5           STRB     R1,[SP, #+116]
   \   000003A0   2114A0E1           LSR      R1,R1,#+8
   \   000003A4   7510CDE5           STRB     R1,[SP, #+117]
   1487                      Cmd.Data.StatusDftFwdP  = StatusDftFwdP;
   \   000003A8   601190E5           LDR      R1,[R0, #+352]
   \   000003AC   7610CDE5           STRB     R1,[SP, #+118]
   \   000003B0   2114A0E1           LSR      R1,R1,#+8
   \   000003B4   7710CDE5           STRB     R1,[SP, #+119]
   \   000003B8   2114A0E1           LSR      R1,R1,#+8
   \   000003BC   7810CDE5           STRB     R1,[SP, #+120]
   \   000003C0   2114A0E1           LSR      R1,R1,#+8
   \   000003C4   7910CDE5           STRB     R1,[SP, #+121]
   1488                      Cmd.Data.StatusDftFwdS  = StatusDftFwdS;
   \   000003C8   640190E5           LDR      R0,[R0, #+356]
   \   000003CC   7A00CDE5           STRB     R0,[SP, #+122]
   \   000003D0   2004A0E1           LSR      R0,R0,#+8
   \   000003D4   7B00CDE5           STRB     R0,[SP, #+123]
   \   000003D8   2004A0E1           LSR      R0,R0,#+8
   \   000003DC   7C00CDE5           STRB     R0,[SP, #+124]
   \   000003E0   2004A0E1           LSR      R0,R0,#+8
   \   000003E4   7D00CDE5           STRB     R0,[SP, #+125]
   1489          
   1490                      bool sent = ANPRO10SendNormal(&Cmd);
   1491                      if (!sent) ErrorStatus =  E_QUEUE_FULL;
   \   000003E8   0D00A0E1           MOV      R0,SP
   \   000003EC   ........           _BLF     ??ANPRO10SendNormal,??ANPRO10SendNormal??rA
   \   000003F0   000050E3           CMP      R0,#+0
   \   000003F4   0200001A           BNE      ??SendData_2
   \   000003F8   0340A0E3           MOV      R4,#+3
   \   000003FC   000000EA           B        ??SendData_2
   1492                      else ErrorStatus =  E_OK;
   1493                  }
   1494                  break;
   1495              case CMD_GENERIC_STATIC_DATA:
   1496                  //case CMD_GENERIC_STATIC_DATA:
   1497                  //{
   1498                  //  QueueANPRO10_COMMAND_2731 Cmd;
   1499                  //  Cmd.TxInfo.Port           = NULL;
   1500                  //  Cmd.TxInfo.rxAddr         = DEVICE_BROADCAST_ADDR;
   1501                  //  Cmd.TxInfo.rxId           = DEVICE_BROADCAST_TXU;
   1502                  //  Cmd.Data.ObjectId         = IDNumber;
   1503                  //  Cmd.Data.ndb              = sizeof(Cmd)-sizeof(QueueANPRO10_CommandHeading);
   1504                  //  Cmd.Data.CommandNo        = CMD_GENERIC_STATIC_DATA;
   1505                  //  bool sent = ANPRO10SendNormal(&Cmd);
   1506                  //  if ( !sent )
   1507                  //      ErrorStatus =  E_QUEUE_FULL;
   1508                  //  else
   1509                  //      ErrorStatus =  E_OK;
   1510                  //}
   1511                  break;
   1512              default:
   1513                  ErrorStatus =  E_UNKNOWN_COMMAND;
   \                     ??SendData_3:
   \   00000400   0140A0E3           MOV      R4,#+1
   1514                  break;
   1515              }
   1516              return (ErrorStatus);
   \                     ??SendData_2:
   \   00000404   0400A0E1           MOV      R0,R4
   \   00000408   84D08DE2           ADD      SP,SP,#+132
   \   0000040C                      REQUIRE ?Subroutine26
   \   0000040C                      ;; // Fall through to label ?Subroutine26
   1517          }
   1518          
   1519          

   \                                 In segment CODE, align 4, keep-with-next
   1520          ValueList* PRODraftSystem::GetValueInfoTable(int &Entries, int Index) {
   1521              return GetValueInfoTableStatic(Entries, Index);
   \                     ??GetValueInfoTable:
   \   00000000   0D00A0E3           MOV      R0,#+13
   \   00000004   000081E5           STR      R0,[R1, #+0]
   \   00000008                      REQUIRE ?Subroutine30
   \   00000008                      ;; // Fall through to label ?Subroutine30
   1522          }
   1523          
   1524          

   \                                 In segment CODE, align 4, keep-with-next
   1525          int PRODraftSystem::LCWriteXML(char *StrBuf) {
   \                     ??LCWriteXML:
   \   00000000   F0402DE9           PUSH     {R4-R7,LR}
   1526              int  tmpPtr = sprintf(StrBuf, "\t<Packet>\r\n");
   \   00000004   ........           LDR      R6,??Subroutine27_0  ;; `?<Constant "  <Packet>\\r\\n">`
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   0150A0E1           MOV      R5,R1
   \   00000010   0610A0E1           MOV      R1,R6
   \   00000014   0500A0E1           MOV      R0,R5
   \   00000018   ........           _BLF     sprintf,??sprintf??rA
   \   0000001C   0070A0E1           MOV      R7,R0
   1527              tmpPtr += sprintf(&StrBuf[tmpPtr], "\t\t<PacketID>Drafts</PacketID>\r\n");
   \   00000020   0C1086E2           ADD      R1,R6,#+12
   \   00000024   050087E0           ADD      R0,R7,R5
   \   00000028   ........           _BLF     sprintf,??sprintf??rA
   \   0000002C   077080E0           ADD      R7,R0,R7
   1528              tmpPtr += sprintf(&StrBuf[tmpPtr], "\t\t<TagID>%s</TagID>\r\n", TagName.c_str());
   \   00000030   600084E2           ADD      R0,R4,#+96
   \   00000034   181090E5           LDR      R1,[R0, #+24]
   \   00000038   100051E3           CMP      R1,#+16
   \   0000003C   04209025           LDRCS    R2,[R0, #+4]
   \   00000040   2C1086E2           ADD      R1,R6,#+44
   \   00000044   04208032           ADDCC    R2,R0,#+4
   \   00000048   050087E0           ADD      R0,R7,R5
   \   0000004C   ........           _BLF     sprintf,??sprintf??rA
   \   00000050   077080E0           ADD      R7,R0,R7
   1529              tmpPtr += sprintf(&StrBuf[tmpPtr], "\t\t<DF>%0.3f meter</DF>\r\n", DftFwd);
   \   00000054   BC0194E5           LDR      R0,[R4, #+444]
   \   00000058   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   0000005C   0020A0E1           MOV      R2,R0
   \   00000060   0130A0E1           MOV      R3,R1
   \   00000064   441086E2           ADD      R1,R6,#+68
   \   00000068   050087E0           ADD      R0,R7,R5
   \   0000006C   ........           _BLF     sprintf,??sprintf??rA
   \   00000070   077080E0           ADD      R7,R0,R7
   1530              tmpPtr += sprintf(&StrBuf[tmpPtr], "\t\t<DP>%0.3f meter</DP>\r\n", DftP);
   \   00000074   C40194E5           LDR      R0,[R4, #+452]
   \   00000078   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   0000007C   0020A0E1           MOV      R2,R0
   \   00000080   0130A0E1           MOV      R3,R1
   \   00000084   601086E2           ADD      R1,R6,#+96
   \   00000088   050087E0           ADD      R0,R7,R5
   \   0000008C   ........           _BLF     sprintf,??sprintf??rA
   \   00000090   077080E0           ADD      R7,R0,R7
   1531              tmpPtr += sprintf(&StrBuf[tmpPtr], "\t\t<DS>%0.3f meter</DS>\r\n", DftS);
   \   00000094   C80194E5           LDR      R0,[R4, #+456]
   \   00000098   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   0000009C   0020A0E1           MOV      R2,R0
   \   000000A0   0130A0E1           MOV      R3,R1
   \   000000A4   7C1086E2           ADD      R1,R6,#+124
   \   000000A8   050087E0           ADD      R0,R7,R5
   \   000000AC   ........           _BLF     sprintf,??sprintf??rA
   \   000000B0   077080E0           ADD      R7,R0,R7
   1532              tmpPtr += sprintf(&StrBuf[tmpPtr], "\t\t<DA>%0.3f meter</DA>\r\n", DftAft);
   \   000000B4   C00194E5           LDR      R0,[R4, #+448]
   \   000000B8   ........           _BLF     __floatToDouble,??__floatToDouble??rA
   \   000000BC   0020A0E1           MOV      R2,R0
   \   000000C0   0130A0E1           MOV      R3,R1
   \   000000C4   981086E2           ADD      R1,R6,#+152
   \   000000C8   050087E0           ADD      R0,R7,R5
   \   000000CC   ........           _BLF     sprintf,??sprintf??rA
   \   000000D0   074080E0           ADD      R4,R0,R7
   1533              tmpPtr += sprintf(&StrBuf[tmpPtr], "\t</Packet>\r\n");
   \   000000D4   B41086E2           ADD      R1,R6,#+180
   \   000000D8   050084E0           ADD      R0,R4,R5
   \   000000DC   ........           _BLF     sprintf,??sprintf??rA
   \   000000E0   040080E0           ADD      R0,R0,R4
   1534              return tmpPtr;
   \   000000E4                      REQUIRE ?Subroutine27
   \   000000E4                      ;; // Fall through to label ?Subroutine27
   1535          }
   1536          

   \                                 In segment CODE, align 4, keep-with-next
   1537          int PRODraftSystem::WriteXMLSingle(char *StrBuf, bool IncAlarms, int pValKey, PRODraft *DftPtr) {
   1538          #ifdef ANWIN
   1539              if (DftPtr) {
   1540                  AnsiString UnitStr;
   1541                  AnsiString DraftStr = LibGetValue(pValKey, this, 0);
   1542                  AnsiString AlMessageStr = "No alarm";
   1543                  int LEDStatus = TPC_LED_OFF;
   1544                  if (!DftPtr->CompleteAlarmInfoList.empty()) {
   1545                      bool ActiveAlarm = false;
   1546                      time_t NewestAlarmAct = 0;
   1547                      time_t NewestAlarmAck = 0;
   1548                      set<AlarmBasic *>::iterator pBIt;
   1549                      for (pBIt = DftPtr->AlarmSet.begin(); pBIt != DftPtr->AlarmSet.end(); pBIt++) {
   1550                          AlarmBasic *Element = *pBIt;
   1551                          if (Element) {
   1552                              switch (Element->State) {
   1553                              case AlarmBasic::AlIdle :
   1554                                  break;
   1555                              case AlarmBasic::AlActive :
   1556                                  if (Element->Time_Rised > NewestAlarmAct) {
   1557                                      NewestAlarmAct = Element->Time_Rised;
   1558                                      ActiveAlarm = true;
   1559                                      AlMessageStr = Element->Get_TPCMessage();
   1560                                      LEDStatus = TPC_LED_FLASH;
   1561                                  }
   1562                                  break;
   1563                              case AlarmBasic::AlAknowledged :
   1564                                  if (!ActiveAlarm && (Element->Time_Acknowledged > NewestAlarmAck)) {
   1565                                      NewestAlarmAck = Element->Time_Acknowledged;
   1566                                      AlMessageStr = Element->Get_TPCMessage();
   1567                                      LEDStatus = TPC_LED_ON;
   1568                                  }
   1569                                  break;
   1570                              }
   1571                          }
   1572                      }
   1573                  }
   1574          
   1575                  int  tmpPtr = sprintf(StrBuf, "\t<Packet>\r\n");
   1576                  tmpPtr += sprintf(&StrBuf[tmpPtr], "\t\t<PacketID>Freevalue</PacketID>\r\n");
   1577                  tmpPtr += sprintf(&StrBuf[tmpPtr], "\t\t<TagID>%s</TagID>\r\n", DftPtr->TagName.c_str());
   1578                  tmpPtr += sprintf(&StrBuf[tmpPtr], "\t\t<Value>%s</Value>\r\n", DraftStr);
   1579                  tmpPtr += sprintf(&StrBuf[tmpPtr], "\t\t<Alarm>%i</Alarm>\r\n", LEDStatus);
   1580                  tmpPtr += sprintf(&StrBuf[tmpPtr], "\t</Packet>\r\n");
   1581                  return tmpPtr;
   1582              }
   1583              return 0;
   1584          #else
   1585              return 0;
   \                     ??WriteXMLSingle:
   \   00000000   ........           B        ?Subroutine32
   1586          #endif
   1587          }

   \                                 In segment CODE, align 4, keep-with-next
   \                     ?Subroutine32:
   \   00000000   0000A0E3           MOV      R0,#+0
   \   00000004   1EFF2FE1           BX       LR               ;; return
   1588          
   1589          

   \                                 In segment CODE, align 4, keep-with-next
   1590          int PRODraftSystem::WriteXML(char *StrBuf, bool IncAlarms) {
   1591          #ifdef ANWIN
   1592              int  tmpPtr = 0;
   1593              tmpPtr += WriteXMLSingle(&StrBuf[tmpPtr], IncAlarms, SVT_DF, DFPtr);
   1594              tmpPtr += WriteXMLSingle(&StrBuf[tmpPtr], IncAlarms, SVT_DA, DAPtr);
   1595              tmpPtr += WriteXMLSingle(&StrBuf[tmpPtr], IncAlarms, SVT_DP, DPPtr);
   1596              tmpPtr += WriteXMLSingle(&StrBuf[tmpPtr], IncAlarms, SVT_DS, DSPtr);
   1597              tmpPtr += WriteXMLSingle(&StrBuf[tmpPtr], IncAlarms, SVT_DFP, DFPPtr);
   1598              tmpPtr += WriteXMLSingle(&StrBuf[tmpPtr], IncAlarms, SVT_DFS, DFSPtr);
   1599              tmpPtr += WriteXMLSingle(&StrBuf[tmpPtr], IncAlarms, SVT_DAP, DAPPtr);
   1600              tmpPtr += WriteXMLSingle(&StrBuf[tmpPtr], IncAlarms, SVT_DAS, DASPtr);
   1601              return tmpPtr;
   1602          #else
   1603              return 0;
   \                     ??WriteXML:
   \   00000000                      REQUIRE ?Subroutine32
   \   00000000                      ;; // Fall through to label ?Subroutine32
   1604          #endif
   1605          }
   1606          

   \                                 In segment CODE, align 4, keep-with-next
   1607          int PRODraftSystem::GetStatus(int ValueKey) {
   1608              int Status = GETVAL_NOT_AVAILABLE;
   \                     ??GetStatus:
   \   00000000   0120A0E3           MOV      R2,#+1
   1609              switch (ValueKey) {
   \   00000004   5E1E41E2           SUB      R1,R1,#+1504
   \   00000008   0D0051E3           CMP      R1,#+13
   \   0000000C   1500008A           BHI      ??GetStatus_2
   \   00000010   013F8FE2           ADR      R3,??GetStatus_1
   \   00000014   0130D3E7           LDRB     R3,[R3, R1]
   \   00000018   03F18FE0           ADD      PC,PC,R3, LSL #+2
   \                     ??GetStatus_1:
   \   0000001C   0312120F           DC8      +3,+18,+18,+15
   \   00000020   12120B09           DC8      +18,+18,+11,+9
   \   00000024   05071212           DC8      +5,+7,+18,+18
   \   00000028   0D110000           DC8      +13,+17,+0,+0
   1610              case SVT_DF:
   1611                  Status = StatusDftFwd;
   \                     ??GetStatus_3:
   \   0000002C   482190E5           LDR      R2,[R0, #+328]
   \   00000030   0C0000EA           B        ??GetStatus_2
   1612                  break;
   1613              case SVT_DFP:
   1614                  Status = StatusDftFwdP;
   \                     ??GetStatus_4:
   \   00000034   602190E5           LDR      R2,[R0, #+352]
   \   00000038   0A0000EA           B        ??GetStatus_2
   1615                  break;
   1616              case SVT_DFS:
   1617                  Status = StatusDftFwdS;
   \                     ??GetStatus_5:
   \   0000003C   642190E5           LDR      R2,[R0, #+356]
   \   00000040   080000EA           B        ??GetStatus_2
   1618                  break;
   1619              case SVT_DP:
   1620                  Status = StatusDftP;
   \                     ??GetStatus_6:
   \   00000044   502190E5           LDR      R2,[R0, #+336]
   \   00000048   060000EA           B        ??GetStatus_2
   1621                  break;
   1622              case SVT_DS:
   1623                  Status = StatusDftS;
   \                     ??GetStatus_7:
   \   0000004C   542190E5           LDR      R2,[R0, #+340]
   \   00000050   040000EA           B        ??GetStatus_2
   1624                  break;
   1625              case SVT_DAP:
   1626                  Status = StatusDftAftP;
   \                     ??GetStatus_8:
   \   00000054   582190E5           LDR      R2,[R0, #+344]
   \   00000058   020000EA           B        ??GetStatus_2
   1627                  break;
   1628              case SVT_DA:
   1629                  Status = StatusDftAft;
   \                     ??GetStatus_9:
   \   0000005C   4C2190E5           LDR      R2,[R0, #+332]
   \   00000060   000000EA           B        ??GetStatus_2
   1630                  break;
   1631              case SVT_DAS:
   1632                  Status = StatusDftAftS;
   \                     ??GetStatus_10:
   \   00000064   5C2190E5           LDR      R2,[R0, #+348]
   1633                  break;
   1634              }
   1635              return Status;
   \                     ??GetStatus_2:
   \   00000068                      REQUIRE ?Subroutine31
   \   00000068                      ;; // Fall through to label ?Subroutine31
   1636          }
   1637          

   \                                 In segment CODE, align 4, keep-with-next
   1638          TColor PRODraftSystem::GetColor(int ValueKey) {
   \                     ??GetColor:
   \   00000000   00402DE9           PUSH     {LR}
   1639              return GetStatusColor(GetStatus(ValueKey));
   \   00000004   ........           BL       ??GetStatus
   \   00000008   ........           BL       ??GetStatusColor
   \   0000000C   ........           B        ?Subroutine25
   1640          }
   1641          
   1642          

   \                                 In segment CODE, align 4, keep-with-next
   1643          TColor PRODraftSystem::GetStatusColor(int Status) {
   1644              TColor tmpColor; // = (TColor)0x1fffffff;
   1645              switch (Status) {
   \                     ??GetStatusColor:
   \   00000000   110050E3           CMP      R0,#+17
   \   00000004   1000008A           BHI      ??GetStatusColor_2
   \   00000008   011F8FE2           ADR      R1,??GetStatusColor_1
   \   0000000C   0010D1E7           LDRB     R1,[R1, R0]
   \   00000010   01F18FE0           ADD      PC,PC,R1, LSL #+2
   \                     ??GetStatusColor_1:
   \   00000014   0B090D0D           DC8      +11,+9,+13,+13
   \   00000018   060D0D0D           DC8      +6,+13,+13,+13
   \   0000001C   060D0D0D           DC8      +6,+13,+13,+13
   \   00000020   0D0D0D09           DC8      +13,+13,+13,+9
   \   00000024   0D040000           DC8      +13,+4,+0,+0
   1646              case GETVAL_NOT_MEASURED    :
   1647          		tmpColor = (TColor)	0xFACE87; //clBlue
   \                     ??GetStatusColor_3:
   \   00000028   24009FE5           LDR      R0,??GetStatusColor_4  ;; 0xface87
   \   0000002C   1EFF2FE1           BX       LR
   1648          		break;
   1649          	case GETVAL_DRY_SENSOR      :
   1650          		tmpColor = (TColor)0x00D7FF; //clYellow;
   \                     ??GetStatusColor_5:
   \   00000030   FF00A0E3           MOV      R0,#+255
   \   00000034   D70C80E3           ORR      R0,R0,#0xD700
   \   00000038   1EFF2FE1           BX       LR
   1651          		break;
   1652          	case GETVAL_ERROR           :
   1653          		tmpColor = (TColor)0x00D7FF; //clYellow;
   1654          		break;
   1655              case GETVAL_NOT_AVAILABLE   :
   1656          	case GETVAL_HW_ALARM        :
   1657          		tmpColor = (TColor)0x3C14DC; //clRed;
   \                     ??GetStatusColor_6:
   \   0000003C   14009FE5           LDR      R0,??GetStatusColor_4+0x4  ;; 0x3c14dc
   \   00000040   1EFF2FE1           BX       LR
   1658          		break;
   1659          	case GETVAL_NO_ERR          :
   1660          		tmpColor = clWindow;//0x9AFA00;//clGreen;
   \                     ??GetStatusColor_7:
   \   00000044   5802A0E3           MOV      R0,#-2147483643
   \   00000048   1EFF2FE1           BX       LR
   1661          		break;
   1662              case GETVAL_UNKNOWN_ERROR   :
   1663          	default                     :
   1664          		tmpColor = (TColor)0x8080F0; //clFuchsia;
   \                     ??GetStatusColor_2:
   \   0000004C   08009FE5           LDR      R0,??GetStatusColor_4+0x8  ;; 0x8080f0
   1665                  break;
   1666              }
   1667              return tmpColor;
   \   00000050   1EFF2FE1           BX       LR               ;; return
   \                     ??GetStatusColor_4:
   \   00000054   87CEFA00           DC32     0xface87
   \   00000058   DC143C00           DC32     0x3c14dc
   \   0000005C   F0808000           DC32     0x8080f0
   1668          }

   \                                 In segment DATA_ID, align 4, align-sorted
   \                     `?<Initializer for DraftSystemValueList>`:
   \   00000000   30010000ED00       DC32 304, 237, 1000, 430, 237, 1505, 431, 237, 1508, 432, 237, 1506
   \              0000E8030000
   \              AE010000ED00
   \              0000E1050000
   \              AF010000ED00
   \              0000E4050000
   \              B0010000ED00
   \              0000E2050000
   \   00000030   B1010000ED00       DC32 433, 237, 1509, 421, 237, 1511, 422, 237, 1510, 1066, 237, 1512
   \              0000E5050000
   \              A5010000ED00
   \              0000E7050000
   \              A6010000ED00
   \              0000E6050000
   \              2A040000ED00
   \              0000E8050000
   \   00000060   2B040000ED00       DC32 1067, 237, 1513, 1066, 237, 1516, 1067, 237, 1517, 83, 237, 1006
   \              0000E9050000
   \              2A040000ED00
   \              0000EC050000
   \              2B040000ED00
   \              0000ED050000
   \              53000000ED00
   \              0000EE030000
   \   00000090   3E040000ED00       DC32 1086, 237, 1543
   \              000007060000

   \                                 In segment DATA_ID, align 4, align-sorted
   \                     `?<Initializer for MaxSummerDraft>`:
   \   00000000   00004842           DC32 42480000H

   \                                 In segment DIFUNCT, align 4, keep-with-next, root
   \   00000000                      REQUIRE ?call_ctors
   \   00000000   ........           DC32    ??__sti__routine

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "DraftSys">`:
   \   00000000   447261667453       DC8 "DraftSys"
   \              797300      
   \   00000009   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "Draft">`:
   \   00000000   447261667400       DC8 "Draft"
   \   00000006   0000               DC8 0, 0
   \   00000008   44726166743A       DC8 44H, 72H, 61H, 66H, 74H, 3AH, 0AH, 55H
   \              0A55        
   \   00000010   6E737570706F       DC8 6EH, 73H, 75H, 70H, 70H, 6FH, 72H, 74H
   \              7274        
   \   00000018   656420636F6E       DC8 65H, 64H, 20H, 63H, 6FH, 6EH, 66H, 69H
   \              6669        
   \   00000020   677572617469       DC8 67H, 75H, 72H, 61H, 74H, 69H, 6FH, 6EH
   \              6F6E        
   \   00000028   2E0A536F6D65       DC8 2EH, 0AH, 53H, 6FH, 6DH, 65H, 20H, 73H
   \              2073        
   \   00000030   656E736F7273       DC8 65H, 6EH, 73H, 6FH, 72H, 73H, 20H, 6DH
   \              206D        
   \   00000038   697373696E67       DC8 69H, 73H, 73H, 69H, 6EH, 67H, 3FH, 0AH
   \              3F0A        
   \   00000040   00                 DC8 0
   \   00000041   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "Draft ">`:
   \   00000000   447261667420       DC8 "Draft "
   \              00          
   \   00000007   00                 DC8 0
   \   00000008   3A0A556E6B6E       DC8 ":\012Unknown error started at line:"
   \              6F776E206572
   \              726F72207374
   \              617274656420
   \              6174206C696E
   \              653A00      
   \   00000029   000000             DC8 0, 0, 0
   \   0000002C   3A0A54686520       DC8 ":\012The keyword "
   \              6B6579776F72
   \              642000      
   \   0000003B   00                 DC8 0
   \   0000003C   206973206E6F       DC8 " is not allowed here!! Line:"
   \              7420616C6C6F
   \              776564206865
   \              72652121204C
   \              696E653A00  
   \   00000059   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 1, align-sorted
   \   00000000   256600             DC8 "%f"

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "	<Packet>\\r\\n">`:
   \   00000000   093C5061636B       DC8 "   <Packet>\015\012"
   \              65743E0D0A00
   \   0000000C   09093C506163       DC8 "           <PacketID>Drafts</PacketID>\015\012"
   \              6B657449443E
   \              447261667473
   \              3C2F5061636B
   \              657449443E0D
   \              0A00        
   \   0000002C   09093C546167       DC8 "           <TagID>%s</TagID>\015\012"
   \              49443E25733C
   \              2F5461674944
   \              3E0D0A00    
   \   00000042   0000               DC8 0, 0
   \   00000044   09093C44463E       DC8 "           <DF>%0.3f meter</DF>\015\012"
   \              25302E336620
   \              6D657465723C
   \              2F44463E0D0A
   \              00          
   \   0000005D   000000             DC8 0, 0, 0
   \   00000060   09093C44503E       DC8 "           <DP>%0.3f meter</DP>\015\012"
   \              25302E336620
   \              6D657465723C
   \              2F44503E0D0A
   \              00          
   \   00000079   000000             DC8 0, 0, 0
   \   0000007C   09093C44533E       DC8 "           <DS>%0.3f meter</DS>\015\012"
   \              25302E336620
   \              6D657465723C
   \              2F44533E0D0A
   \              00          
   \   00000095   000000             DC8 0, 0, 0
   \   00000098   09093C44413E       DC8 "           <DA>%0.3f meter</DA>\015\012"
   \              25302E336620
   \              6D657465723C
   \              2F44413E0D0A
   \              00          
   \   000000B1   000000             DC8 0, 0, 0
   \   000000B4   093C2F506163       DC8 "   </Packet>\015\012"
   \              6B65743E0D0A
   \              00          
   \   000000C1   000000             DC8 0, 0, 0

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs PRODraftSystem &PRODraftSystem::new PRODraftSystem()
   \                     `??new PRODraftSystem`:
   \   00000000   00402DE9           PUSH     {LR}
   \   00000004   7F0FA0E3           MOV      R0,#+508
   \   00000008   ........           _BLF     `??operator new`,`??operator new??rA`
   \   0000000C   000050E3           CMP      R0,#+0
   \   00000010   0000000A           BEQ      `??new PRODraftSystem_1`
   \   00000014   ........           BL       ??PRODraftSystem
   \                     `??new PRODraftSystem_1`:
   \   00000018                      REQUIRE ?Subroutine25
   \   00000018                      ;; // Fall through to label ?Subroutine25

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable2:
   \   00000000   ........           DC32     ??__vtbl

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable6:
   \   00000000   ........           DC32     ??MaxSummerDraft

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable7:
   \   00000000   ........           DC32     CrLfStr

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable8:
   \   00000000   ........           DC32     ??npos

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable13:
   \   00000000   ........           DC32     ??MaxSummerDraft

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable14:
   \   00000000   ........           DC32     ??SeaWaterDensity
   1669          

   Maximum stack usage in bytes:

     Function                       CSTACK
     --------                       ------
     PRODraftSystem::Calculate()       60
     PRODraftSystem::GetColor(int)      4
     PRODraftSystem::GetFloatValue(int, int, float &)
                                       32
     PRODraftSystem::GetStatus(int)     0
     PRODraftSystem::GetStatusColor(int)
                                        0
     PRODraftSystem::GetStringValue(int, int, AnsiString &)
                                        4
     PRODraftSystem::GetValue(int, int, float &, int &, int &)
                                       32
     PRODraftSystem::GetValueInfoTable(int &, int)
                                        0
     PRODraftSystem::GetValueInfoTableStatic(int &, int)
                                        0
     PRODraftSystem::Initiate()        36
     PRODraftSystem::LCWriteXML(char *)
                                       20
     PRODraftSystem::LoadConfigFromFile(TSNConfigString &)
                                      164
     PRODraftSystem::PRODraftSystem()
                                       20
     PRODraftSystem::PutFloatValue(int, float)
                                       12
     PRODraftSystem::PutValue(int, int, AnsiString, bool, int *)
                                      288
     PRODraftSystem::ReceiveData(unsigned char *)
                                       80
     PRODraftSystem::RestoreSettings(TSNConfigString *)
                                      516
     PRODraftSystem::SaveSettings(TSNConfigString *)
                                      276
     PRODraftSystem::SendData(unsigned short)
                                      140
     PRODraftSystem::WriteConfigToFile(TSNConfigString &)
                                      452
     PRODraftSystem::WriteXML(char *, bool)
                                        0
     PRODraftSystem::WriteXMLSingle(char *, bool, int, PRODraft *)
                                        0
     PRODraftSystem::new PRODraftSystem()
                                        4
     PRODraftSystem::~PRODraftSystem()
                                       20
     _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::_Erase(_Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::_Nodeptr)
                                       16
     _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::_Insert(bool, _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::_Nodeptr, PRogramObjectBase *)
                                       24
     _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::insert(PRogramObjectBase *)
                                       44
     _Tree_algobase<allocator<void>>::_Clear()
                                        0
     _Tree_algobase<allocator<void>>::_DecP(_Tree_algobase<allocator<void>>::_Genptr)
                                        0
     _Tree_algobase<allocator<void>>::_IncP(_Tree_algobase<allocator<void>>::_Genptr)
                                        0
     _Tree_algobase<allocator<void>>::_Insert(bool, _Tree_algobase<allocator<void>>::_Genptr, _Tree_algobase<allocator<void>>::_Genptr)
                                       20
     _Tree_algobase<allocator<void>>::_Lrotate(_Tree_algobase<allocator<void>>::_Genptr)
                                        0
     _Tree_algobase<allocator<void>>::_Rrotate(_Tree_algobase<allocator<void>>::_Genptr)
                                        0
     _Vector_impl<AnalogInput *, allocator<AnalogInput *>>::_Insert(AnalogInput **, AnalogInput * const &)
                                       16
     _Vector_impl<AnalogInput *, allocator<AnalogInput *>>::_Make_room(AnalogInput **, unsigned int)
                                       32
     _Vector_impl<AnalogInput *, allocator<AnalogInput *>>::_Push_back0(AnalogInput *)
                                        8
     _Vector_impl<AnalogInput *, allocator<AnalogInput *>>::_Tidy0()
                                        4
     __sti__routine()                   4
     operator+(string const &, char const *)
                                       44
     operator+(string const &, string const &)
                                       40
     set<PRogramObjectBase *>::set()
                                       12
     set<PRogramObjectBase *>::~set()
                                        8
     string::string(string const &)    12


   Segment part sizes:

     Function/Label                 Bytes
     --------------                 -----
     string::string(string const &)   64
     _Tree_algobase<allocator<void>>::_DecP(_Tree_algobase<allocator<void>>::_Genptr)
                                     100
     _Tree_algobase<allocator<void>>::_IncP(_Tree_algobase<allocator<void>>::_Genptr)
                                      92
     _Tree_algobase<allocator<void>>::_Clear()
                                      36
     _Tree_algobase<allocator<void>>::_Rrotate(_Tree_algobase<allocator<void>>::_Genptr)
                                      84
     _Tree_algobase<allocator<void>>::_Lrotate(_Tree_algobase<allocator<void>>::_Genptr)
                                      84
     _Tree_algobase<allocator<void>>::_Insert(bool, _Tree_algobase<allocator<void>>::_Genptr, _Tree_algobase<allocator<void>>::_Genptr)
                                     356
     _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::insert(PRogramObjectBase *)
                                     200
     _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::_Erase(_Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::_Nodeptr)
                                      68
     _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::_Insert(bool, _Tree<_Tset_traits<PRogramObjectBase *, less<PRogramObjectBase *>, allocator<PRogramObjectBase *>, false>>::_Nodeptr, PRogramObjectBase *)
                                      96
     set<PRogramObjectBase *>::~set()
                                      32
     set<PRogramObjectBase *>::set()
                                      48
     _Vector_impl<AnalogInput *, allocator<AnalogInput *>>::_Tidy0()
                                      36
     _Vector_impl<AnalogInput *, allocator<AnalogInput *>>::_Insert(AnalogInput **, AnalogInput * const &)
                                      72
     _Vector_impl<AnalogInput *, allocator<AnalogInput *>>::_Make_room(AnalogInput **, unsigned int)
                                     232
     _Vector_impl<AnalogInput *, allocator<AnalogInput *>>::_Push_back0(AnalogInput *)
                                      72
     operator+(string const &, string const &)
                                      88
     operator+(string const &, char const *)
                                      92
     __sti__routine()                 32
     PRODraftSystem::DraftSystemValueList
                                     156
     PRODraftSystem::MaxSummerDraft    4
     PRODraftSystem::PRODraftSysPtr   32
     PRODraftSystem::Has2ndMark        1
     PRODraftSystem::PRODraftSystem()
                                     100
     PRODraftSystem::Initiate()      252
     ?Subroutine26                     8
     PRODraftSystem::~PRODraftSystem()
                                     168
     ?Subroutine27                    12
     PRODraftSystem::WriteConfigToFile(TSNConfigString &)
                                     776
     PRODraftSystem::LoadConfigFromFile(TSNConfigString &)
                                    1876
     ?Subroutine28                    16
     PRODraftSystem::SaveSettings(TSNConfigString *)
                                     440
     ?Subroutine29                     8
     PRODraftSystem::RestoreSettings(TSNConfigString *)
                                    1068
     PRODraftSystem::Calculate()    6724
     PRODraftSystem::GetValue(int, int, float &, int &, int &)
                                    1016
     ?Subroutine25                     8
     PRODraftSystem::GetStringValue(int, int, AnsiString &)
                                      12
     PRODraftSystem::PutValue(int, int, AnsiString, bool, int *)
                                    2380
     PRODraftSystem::GetFloatValue(int, int, float &)
                                     468
     PRODraftSystem::PutFloatValue(int, float)
                                     132
     PRODraftSystem::GetValueInfoTableStatic(int &, int)
                                      12
     ?Subroutine30                    12
     PRODraftSystem::ReceiveData(unsigned char *)
                                    1112
     ?Subroutine31                     8
     PRODraftSystem::SendData(unsigned short)
                                    1036
     PRODraftSystem::GetValueInfoTable(int &, int)
                                       8
     PRODraftSystem::LCWriteXML(char *)
                                     228
     PRODraftSystem::WriteXMLSingle(char *, bool, int, PRODraft *)
                                       4
     ?Subroutine32                     8
     PRODraftSystem::WriteXML(char *, bool)
                                       0
     PRODraftSystem::GetStatus(int)  104
     PRODraftSystem::GetColor(int)    16
     PRODraftSystem::GetStatusColor(int)
                                      96
     ?<Initializer for DraftSystemValueList>
                                     156
     ?<Initializer for MaxSummerDraft>
                                       4
     ?<Constant "DraftSys">           12
     ?<Constant "Draft">              68
     ?<Constant "Draft ">             92
     ?<Constant "%f">                  3
     ?<Constant "	<Packet>\r\n">     196
     PRODraftSystem::new PRODraftSystem()
                                      24
     ??DataTable2                      4
     ??DataTable6                      4
     ??DataTable7                      4
     ??DataTable8                      4
     ??DataTable13                     4
     ??DataTable14                     4
      Others                        1180

 
 21 052 bytes in segment CODE
    507 bytes in segment DATA_C
    160 bytes in segment DATA_I
    160 bytes in segment DATA_ID
     37 bytes in segment DATA_Z
      4 bytes in segment DIFUNCT
     24 bytes in segment INITTAB
 
 18 192 bytes of CODE  memory (+ 2 888 bytes shared)
    667 bytes of CONST memory
    197 bytes of DATA  memory

Errors: none
Warnings: none
