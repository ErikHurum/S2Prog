##############################################################################
#                                                                            #
# IAR ARM ANSI C/C++ Compiler V4.42A/W32               19/Jan/2017  10:13:08 #
# Copyright 1999-2005 IAR Systems. All rights reserved.                      #
#                                                                            #
#    Cpu mode        =  interwork                                            #
#    Endian          =  little                                               #
#    Stack alignment =  4                                                    #
#    Source file     =  D:\S2Prog\TXU\Config\LCD_Lib.cpp                     #
#    Command line    =  D:\S2Prog\TXU\Config\LCD_Lib.cpp --fpu None -D       #
#                       OS_LIBMODE_DP -D OS_RAMVECT=0 -D CPU_S3C2410 -D      #
#                       OS_UART=1 -D ANBOOTLOADER -D __ARM_LIBRARY__ -lCN    #
#                       D:\S2Prog\TXU\TargetDebug\List\ -o                   #
#                       D:\S2Prog\TXU\TargetDebug\Obj\ -s2 --no_cse          #
#                       --no_unroll --no_inline --no_code_motion --no_tbaa   #
#                       --no_clustering --no_scheduling --debug --cpu_mode   #
#                       arm --endian little --cpu ARM920T --stack_align 4    #
#                       --interwork -e --eec++ --dlib_config "C:\Program     #
#                       Files (x86)\IAR Systems\Embedded Workbench           #
#                       4.0\arm\LIB\dl4tpainl8f.h" -I                        #
#                       D:\S2Prog\TXU\GUI\CORE\ -I D:\S2Prog\TXU\GUI\WM\ -I  #
#                       D:\S2Prog\TXU\GUI\WIDGET\ -I D:\S2Prog\TXU\CONFIG\   #
#                       -I D:\S2Prog\TXU\INC\ -I D:\S2Prog\TXU\..\SHARED\INC #
#                       \ -I D:\S2Prog\TXU\..\SHARED\SRC\ -I                 #
#                       D:\S2Prog\TXU\..\SHARED\LZO\MINILZO.108\ -I          #
#                       "C:\Program Files (x86)\IAR Systems\Embedded         #
#                       Workbench 4.0\arm\INC\"                              #
#    List file       =  D:\S2Prog\TXU\TargetDebug\List\LCD_Lib.lst           #
#    Object file     =  D:\S2Prog\TXU\TargetDebug\Obj\LCD_Lib.r79            #
#                                                                            #
#                                                                            #
##############################################################################

D:\S2Prog\TXU\Config\LCD_Lib.cpp
      1          #include "TSNConstants.h"
      2          #include "2410addr.h"
      3          #include "def.h"
      4          #include "RTOS.h"
      5          extern OS_RSEMA    GPEPortSema;
      6          
      7          

   \                                 In segment DATA_C, align 4, align-sorted
      8          static const unsigned short DEMO256pal[]={
   \                     DEMO256pal:
   \   00000000   5E0B9ACED9FF       DC16 2910, 52890, 65497, 40345, 46650, 44668, 56689, 27735, 64845, 174
   \              999D3AB67CAE
   \              71DD576C4DFD
   \              AE00        
   \   00000014   4D9CF8B596AD       DC16 40013, 46584, 44438, 305, 374, 61439, 52957, 38230, 58559, 182
   \              31017601FFEF
   \              DDCE5695BFE4
   \              B600        
   \   00000028   B7222B00DE89       DC16 8887, 43, 35294, 44, 22495, 43871, 12337, 5311, 31102, 21393
   \              2C00DF575FAB
   \              3130BF147E79
   \              9153        
   \   0000003C   AB9339725374       DC16 37803, 29241, 29779, 45023, 29113, 35986, 333, 12334, 20853, 41
   \              DFAFB971928C
   \              4D012E307551
   \              2900        
   \   00000050   69094E006D2A       DC16 2409, 78, 10861, 33, 12629, 19310, 54903, 63158, 39775, 19381
   \              210055316E4B
   \              77D6B6F65F9B
   \              B54B        
   \   00000064   D5FF2700DFDF       DC16 65493, 39, 57311, 29912, 4694, 27597, 39688, 10930, 48498, 33973
   \              D8745612CD6B
   \              089BB22A72BD
   \              B584        
   \   00000078   52FEADD4AD00       DC16 65106, 54445, 173, 65532, 16939, 29616, 36, 21062, 36446, 10419
   \              FCFF2B42B073
   \              240046525E8E
   \              B328        
   \   0000008C   5000523B4A2A       DC16 80, 15186, 10826, 14964, 34137, 13142, 4689, 39615, 16436, 16561
   \              743A59855633
   \              5112BF9A3440
   \              B140        
   \   000000A0   B98CB300555C       DC16 36025, 179, 23637, 57149, 25015, 8031, 217, 19545, 2342, 44095
   \              3DDFB7615F1F
   \              D900594C2609
   \              3FAC        
   \   000000B4   5F92BC85D229       DC16 37471, 34236, 10706, 51007, 61276, 52127, 33403, 21113, 19189, 441
   \              3FC75CEF9FCB
   \              7B827952F54A
   \              B901        
   \   000000C8   904218F76D12       DC16 17040, 63256, 4717, 8614, 20830, 61373, 55134, 17067, 170, 4275
   \              A6215E51BDEF
   \              5ED7AB42AA00
   \              B310        
   \   000000DC   4973B563A361       DC16 29513, 25525, 24995, 43743, 52007, 34783, 25433, 51167, 18550
   \              DFAA27CBDF87
   \              5963DFC77648
   \   000000EE   BCB514412EFE       DC16 46524, 16660, 65070, 61278, 26046, 17337, 58847, 8649, 32022
   \              5EEFBE65B943
   \              DFE5C921167D
   \   00000100   BB6A115CF749       DC16 27323, 23569, 18935, 48139, 40474, 15119, 8235, 65298, 33307
   \              0BBC1A9E0F3B
   \              2B2012FF1B82
   \   00000112   2F84CFBCFBDE       DC16 33839, 48335, 57083, 35390, 26874, 42225, 14510, 10423, 8621
   \              3E8AFA68F1A4
   \              AE38B728AD21
   \   00000124   D73173002B18       DC16 12759, 115, 6187, 6193, 13333, 48630, 11711, 2653, 51005, 6188
   \              31181534F6BD
   \              BF2D5D0A3DC7
   \              2C18        
   \   00000138   3E293D7B3D64       DC16 10558, 31549, 25661, 15549, 37597, 2516, 4137, 31965, 25145, 6190
   \              BD3CDD92D409
   \              2910DD7C3962
   \              2E18        
   \   0000014C   EA5AEB11BC8A       DC16 23274, 4587, 35516, 31738, 167, 8531, 6227, 4888, 265, 21754
   \              FA7BA7005321
   \              531818130901
   \              FA54        
   \   00000160   A772E389CF01       DC16 29351, 35299, 463, 14855, 31511, 6676, 8528, 9180, 16706, 6963
   \              073A177B141A
   \              5021DC234241
   \              331B        
   \   00000174   A400DFF6FC08       DC16 164, 63199, 2300, 6318, 14974, 6353, 42268, 65370, 6671, 10490
   \              AE187E3AD118
   \              1CA55AFF0F1A
   \              FA28        
   \   00000188   BEDFDE82D760       DC16 57278, 33502, 24791, 4135, 18682, 20816, 25107, 35286, 4365, 39867
   \              2710FA485051
   \              1362D6890D11
   \              BB9B        
   \   0000019C   DDBEE1282519       DC16 48861, 10465, 6437, 62537, 43641, 54772, 26940, 4362, 10377, 2210
   \              49F479AAF4D5
   \              3C690A118928
   \              A208        
   \   000001B0   3D92A610BCD9       DC16 37437, 4262, 55740, 23342, 13036, 53119, 4133, 8520, 29876, 27993
   \              2E5BEC327FCF
   \              25104821B474
   \              596D        
   \   000001C4   149D3201F000       DC16 40212, 306, 240, 22207, 241, 65535, 371, 307, 176, 177, 63487
   \              BF56F100FFFF
   \              73013301B000
   \              B100FFF7    
   \   000001DA   B108FEFFB008       DC16 2225, 65534, 2224, 369, 63423, 4339, 63486, 2287, 4498, 61374
   \              7101BFF7F310
   \              FEF7EF089211
   \              BEEF        
   \   000001EE   311177219FFF       DC16 4401, 8567, 65439, 4374, 65468, 22804, 8943, 45701, 42719
   \              1611BCFF1459
   \              EF2285B2DFA6
      9          	0x0b5e,0xce9a,0xffd9,0x9d99,0xb63a,0xae7c,0xdd71,0x6c57,0xfd4d,0x00ae,0x9c4d,0xb5f8,0xad96,0x0131,0x0176,0xefff,0xcedd,0x9556,0xe4bf,0x00b6,0x22b7,0x002b,0x89de,0x002c,0x57df,0xab5f,0x3031,0x14bf,0x797e,0x5391,0x93ab,0x7239,0x7453,0xafdf,0x71b9,0x8c92,0x014d,0x302e,0x5175,0x0029,0x0969,0x004e,0x2a6d,0x0021,0x3155,0x4b6e,0xd677,0xf6b6,0x9b5f,0x4bb5,0xffd5,0x0027,0xdfdf,0x74d8,0x1256,0x6bcd,0x9b08,0x2ab2,0xbd72,0x84b5,0xfe52,0xd4ad,0x00ad,0xfffc,0x422b,0x73b0,0x0024,0x5246,0x8e5e,0x28b3,0x0050,0x3b52,0x2a4a,0x3a74,0x8559,0x3356,0x1251,0x9abf,0x4034,0x40b1,
     10          	0x8cb9,0x00b3,0x5c55,0xdf3d,0x61b7,0x1f5f,0x00d9,0x4c59,0x0926,0xac3f,0x925f,0x85bc,0x29d2,0xc73f,0xef5c,0xcb9f,0x827b,0x5279,0x4af5,0x01b9,0x4290,0xf718,0x126d,0x21a6,0x515e,0xefbd,0xd75e,0x42ab,0x00aa,0x10b3,0x7349,0x63b5,0x61a3,0xaadf,0xcb27,0x87df,0x6359,0xc7df,0x4876,0xb5bc,0x4114,0xfe2e,0xef5e,0x65be,0x43b9,0xe5df,0x21c9,0x7d16,0x6abb,0x5c11,0x49f7,0xbc0b,0x9e1a,0x3b0f,0x202b,0xff12,0x821b,0x842f,0xbccf,0xdefb,0x8a3e,0x68fa,0xa4f1,0x38ae,0x28b7,0x21ad,0x31d7,0x0073,0x182b,0x1831,0x3415,0xbdf6,0x2dbf,0x0a5d,0xc73d,0x182c,0x293e,0x7b3d,0x643d,0x3cbd,
     11          	0x92dd,0x09d4,0x1029,0x7cdd,0x6239,0x182e,0x5aea,0x11eb,0x8abc,0x7bfa,0x00a7,0x2153,0x1853,0x1318,0x0109,0x54fa,0x72a7,0x89e3,0x01cf,0x3a07,0x7b17,0x1a14,0x2150,0x23dc,0x4142,0x1b33,0x00a4,0xf6df,0x08fc,0x18ae,0x3a7e,0x18d1,0xa51c,0xff5a,0x1a0f,0x28fa,0xdfbe,0x82de,0x60d7,0x1027,0x48fa,0x5150,0x6213,0x89d6,0x110d,0x9bbb,0xbedd,0x28e1,0x1925,0xf449,0xaa79,0xd5f4,0x693c,0x110a,0x2889,0x08a2,0x923d,0x10a6,0xd9bc,0x5b2e,0x32ec,0xcf7f,0x1025,0x2148,0x74b4,0x6d59,0x9d14,0x0132,0x00f0,0x56bf,0x00f1,0xffff,0x0173,0x0133,0x00b0,0x00b1,0xf7ff,0x08b1,0xfffe,0x08b0,
     12          	0x0171,0xf7bf,0x10f3,0xf7fe,0x08ef,0x1192,0xefbe,0x1131,0x2177,0xff9f,0x1116,0xffbc,0x5914,0x22ef,0xb285,0xa6df,
     13          };
     14          
     15          

   \                                 In segment CODE, align 4, keep-with-next
     16          void Lcd_Palette8Bit_Init(void)
     17          {
     18              int i;
     19              U32 *palette;
     20              rLCDCON5 &= ~(1<<11); // 5:5:5:1 Palette Setting
   \                     ??Lcd_Palette8Bit_Init:
   \   00000000   1020A0E3           MOV      R2,#+16
   \   00000004   4D2482E3           ORR      R2,R2,#0x4D000000
   \   00000008   1030A0E3           MOV      R3,#+16
   \   0000000C   4D3483E3           ORR      R3,R3,#0x4D000000
   \   00000010   003093E5           LDR      R3,[R3, #+0]
   \   00000014   803ED3E3           BICS     R3,R3,#0x800
   \   00000018   003082E5           STR      R3,[R2, #+0]
     21              palette=(U32 *)PALETTE;
   \   0000001C   4D24A0E3           MOV      R2,#+1291845632
   \   00000020   402E82E3           ORR      R2,R2,#0x400
   \   00000024   0210B0E1           MOVS     R1,R2
     22              for(i=0;i<256;i++)
   \   00000028   0020A0E3           MOV      R2,#+0
   \   0000002C   0200B0E1           MOVS     R0,R2
   \                     ??Lcd_Palette8Bit_Init_1:
   \   00000030   400F50E3           CMP      R0,#+256
   \   00000034   070000AA           BGE      ??Lcd_Palette8Bit_Init_2
     23          	*palette++=DEMO256pal[i];
   \   00000038   0220A0E3           MOV      R2,#+2
   \   0000003C   18309FE5           LDR      R3,??Lcd_Palette8Bit_Init_3  ;; DEMO256pal
   \   00000040   923023E0           MLA      R3,R2,R0,R3
   \   00000044   B020D3E1           LDRH     R2,[R3, #+0]
   \   00000048   002081E5           STR      R2,[R1, #+0]
   \   0000004C   041091E2           ADDS     R1,R1,#+4
   \   00000050   010090E2           ADDS     R0,R0,#+1
   \   00000054   F5FFFFEA           B        ??Lcd_Palette8Bit_Init_1
     24          }
   \                     ??Lcd_Palette8Bit_Init_2:
   \   00000058   1EFF2FE1           BX       LR               ;; return
   \                     ??Lcd_Palette8Bit_Init_3:
   \   0000005C   ........           DC32     DEMO256pal
     25          
     26          
     27          #define M5D(n) ((n) & 0x1fffff)	// To get lower 21bits
     28          
     29          //Timing parameter for NL3224BC35 VGA mode
     30          #define VBPD_320240		(10-1)
     31          #define VFPD_320240		(1-1)
     32          #define VSPW_320240		(11-1)
     33          #define HBPD_320240		(47-1)
     34          #define HFPD_320240		(7-1)
     35          #define HSPW_320240		(30-1)
     36          
     37          #define LCD_XSIZE_TFT_320240 	(320)
     38          #define LCD_YSIZE_TFT_320240 	(240)
     39          
     40          
     41          ///////////////////////////////////////////////////////////////////
     42          //
     43          //	LCD Constants
     44          //
     45          ///////////////////////////////////////////////////////////////////
     46          
     47          
     48          #define LCD_XSIZE			(LCD_XSIZE_TFT_320240)
     49          #define LCD_YSIZE			(LCD_YSIZE_TFT_320240)
     50          #define LCD_HOZVAL			(LCD_XSIZE-1)
     51          #define LCD_LINEVAL			(LCD_YSIZE-1)
     52          
     53          #define LCD_ORG_BASE			( 0 & 0x1fffff )
     54          #define LCD_END_ADDRESS			( LCD_ORG_BASE + LCD_XSIZE*LCD_YSIZE)
     55          
     56           /*********************************************************************
     57          *
     58          *                   Define contents of registers
     59          *
     60          **********************************************************************
     61          */
     62          
     63          

   \                                 In segment CODE, align 4, keep-with-next
     64          void LCD_Init_Controller(void){
     65          
     66          //	Lcd_Palette8Bit_Init();
     67          
     68          	rLCDCON1 =   (6<<8)             /* Clock value set to 6. 90MHz/((6+1)*2) = 6.4 MHz	*/\
     69          		      	|(0<<7)	          /* MMode each frame, as in example from AIJI */\
     70          	            |(3<<5)	          /* TFT LCD                                   */\
     71          		      	|(0xc<<1)           /* 0x0c = 16 bpp on TFT, 0x0b = 8 BPP        */
     72          		      	|(0);                 /* OBS!! Disable the display here until addr setup */
   \                     ??LCD_Init_Controller:
   \   00000000   4D04A0E3           MOV      R0,#+1291845632
   \   00000004   7810A0E3           MOV      R1,#+120
   \   00000008   601E81E3           ORR      R1,R1,#0x600
   \   0000000C   001080E5           STR      R1,[R0, #+0]
     73          	rLCDCON2 =   (VBPD_320240<<24)  /* Vertical back porch */ \
     74          	            |(LCD_LINEVAL<<14)  /* lineval (vertical size -1)*/ \
     75          	            |(VFPD_320240<<6)   /* vertical front porch */ \
     76          	            |(VSPW_320240);     // vertical sync pulse width
   \   00000010   0400A0E3           MOV      R0,#+4
   \   00000014   4D0480E3           ORR      R0,R0,#0x4D000000
   \   00000018   EC109FE5           LDR      R1,??LCD_Init_Controller_1  ;; 0x93bc00a
   \   0000001C   001080E5           STR      R1,[R0, #+0]
     77          	rLCDCON3 =   (HBPD_320240<<19)  /* hor. back porch */ \
     78          	            |(LCD_HOZVAL<<8)    /* Hozval (hor. size -1) */ \
     79          	            |(HFPD_320240);     // Hor. front porch
   \   00000020   0800A0E3           MOV      R0,#+8
   \   00000024   4D0480E3           ORR      R0,R0,#0x4D000000
   \   00000028   E0109FE5           LDR      R1,??LCD_Init_Controller_1+0x4  ;; 0x1713f06
   \   0000002C   001080E5           STR      R1,[R0, #+0]
     80          	rLCDCON4 =   (13<<8)            /* Mval (Stn) */ \
     81          	            |(HSPW_320240);     // Hor. sync pulse width
   \   00000030   0C00A0E3           MOV      R0,#+12
   \   00000034   4D0480E3           ORR      R0,R0,#0x4D000000
   \   00000038   1D10A0E3           MOV      R1,#+29
   \   0000003C   D01E81E3           ORR      R1,R1,#0xD00
   \   00000040   001080E5           STR      R1,[R0, #+0]
     82          	rLCDCON5 =   (0<<12)            /* 24 bit lb/hb */  \
     83          	            |(1<<11)            /* FRM5:5:5:1 */    \
     84          	            |(0<<10)            /* inverse v clock */ \
     85          	            |(1<<9)             /* inverse HSYNC */  \
     86          	            |(1<<8)             /* inverse VSYNC */ \
     87          	            |(0<<7)             /* inverse VD */     \
     88          	            |(0<<6)	          /* inverse VDEN */ \
     89          	            |(0<<5)	          /* inverse PWrEN */ \
     90          	            |(0<<4)	          /* inverse INVLEN */ \
     91          	            |(0<<3)	          /* Enable PWREN */ \
     92          	            |(0<<2)	          /* Enable LEND */ \
     93          	            |(0<<1)	          /* Byte swap */ \
     94          	            |(1);	          /* Half word swap */
   \   00000044   1000A0E3           MOV      R0,#+16
   \   00000048   4D0480E3           ORR      R0,R0,#0x4D000000
   \   0000004C   0110A0E3           MOV      R1,#+1
   \   00000050   B01E81E3           ORR      R1,R1,#0xB00
   \   00000054   001080E5           STR      R1,[R0, #+0]
     95          
     96                  // 16BPP
     97          	rLCDSADDR1= ((LCD_STARTADDRESS_PHY >>22) << 21) | ( M5D(LCD_STARTADDRESS_PHY >> 1) + 0);
   \   00000058   1400A0E3           MOV      R0,#+20
   \   0000005C   4D0480E3           ORR      R0,R0,#0x4D000000
   \   00000060   6015A0E3           MOV      R1,#+402653184
   \   00000064   661781E3           ORR      R1,R1,#0x1980000
   \   00000068   001080E5           STR      R1,[R0, #+0]
     98              rLCDSADDR2= M5D(LCD_STARTADDRESS_PHY>>1)+(LCD_XSIZE)*(LCD_LINEVAL+1);
   \   0000006C   1800A0E3           MOV      R0,#+24
   \   00000070   4D0480E3           ORR      R0,R0,#0x4D000000
   \   00000074   6019A0E3           MOV      R1,#+1572864
   \   00000078   4B1B81E3           ORR      R1,R1,#0x12C00
   \   0000007C   001080E5           STR      R1,[R0, #+0]
     99              rLCDSADDR3= (0 << 11) | ((LCD_XSIZE)>>1);
   \   00000080   1C00A0E3           MOV      R0,#+28
   \   00000084   4D0480E3           ORR      R0,R0,#0x4D000000
   \   00000088   A010A0E3           MOV      R1,#+160
   \   0000008C   001080E5           STR      R1,[R0, #+0]
    100          
    101          	rLCDINTMSK |=(3); // MASK LCD Sub Interrupt
   \   00000090   5C00A0E3           MOV      R0,#+92
   \   00000094   4D0480E3           ORR      R0,R0,#0x4D000000
   \   00000098   5C10A0E3           MOV      R1,#+92
   \   0000009C   4D1481E3           ORR      R1,R1,#0x4D000000
   \   000000A0   001091E5           LDR      R1,[R1, #+0]
   \   000000A4   031091E3           ORRS     R1,R1,#0x3
   \   000000A8   001080E5           STR      R1,[R0, #+0]
    102          	rLCDINTMSK &=~(3); // MASK LCD Sub Interrupt
   \   000000AC   5C00A0E3           MOV      R0,#+92
   \   000000B0   4D0480E3           ORR      R0,R0,#0x4D000000
   \   000000B4   5C10A0E3           MOV      R1,#+92
   \   000000B8   4D1481E3           ORR      R1,R1,#0x4D000000
   \   000000BC   001091E5           LDR      R1,[R1, #+0]
   \   000000C0   0310D1E3           BICS     R1,R1,#0x3
   \   000000C4   001080E5           STR      R1,[R0, #+0]
    103          	rLPCSEL    &=(~7); // Disable LPC3600
   \   000000C8   6000A0E3           MOV      R0,#+96
   \   000000CC   4D0480E3           ORR      R0,R0,#0x4D000000
   \   000000D0   6010A0E3           MOV      R1,#+96
   \   000000D4   4D1481E3           ORR      R1,R1,#0x4D000000
   \   000000D8   001091E5           LDR      R1,[R1, #+0]
   \   000000DC   0710D1E3           BICS     R1,R1,#0x7
   \   000000E0   001080E5           STR      R1,[R0, #+0]
    104          	rTPAL      =0; // Disable Temp Palette
   \   000000E4   5000A0E3           MOV      R0,#+80
   \   000000E8   4D0480E3           ORR      R0,R0,#0x4D000000
   \   000000EC   0010A0E3           MOV      R1,#+0
   \   000000F0   001080E5           STR      R1,[R0, #+0]
    105          
    106              rLCDCON1 |=    0x01;      /* Turn on the display HERE after set up the addresses*/
   \   000000F4   4D04A0E3           MOV      R0,#+1291845632
   \   000000F8   4D14A0E3           MOV      R1,#+1291845632
   \   000000FC   001091E5           LDR      R1,[R1, #+0]
   \   00000100   011091E3           ORRS     R1,R1,#0x1
   \   00000104   001080E5           STR      R1,[R0, #+0]
    107          }
   \   00000108   1EFF2FE1           BX       LR               ;; return
   \                     ??LCD_Init_Controller_1:
   \   0000010C   0AC03B09           DC32     0x93bc00a
   \   00000110   063F7101           DC32     0x1713f06
    108          

   \                                 In segment DATA_Z, align 1, align-sorted
    109          static bool BackLightIsOn = false;
   \                     BackLightIsOn:
   \   00000000                      DS8 1

   \                                 In segment CODE, align 4, keep-with-next
    110          void LCD_BackLightOn(void)
    111          {
   \                     ??LCD_BackLightOn:
   \   00000000   00402DE9           PUSH     {LR}
    112          	if ( !BackLightIsOn) {
   \   00000004   ........           LDR      R0,??DataTable5  ;; BackLightIsOn
   \   00000008   0000D0E5           LDRB     R0,[R0, #+0]
   \   0000000C   000050E3           CMP      R0,#+0
   \   00000010   0D00001A           BNE      ??LCD_BackLightOn_1
    113          			BackLightIsOn = true;
   \   00000014   ........           LDR      R0,??DataTable5  ;; BackLightIsOn
   \   00000018   0110A0E3           MOV      R1,#+1
   \   0000001C   0010C0E5           STRB     R1,[R0, #+0]
    114          			OS_Use(&GPEPortSema);
   \   00000020   ........           LDR      R0,??DataTable17  ;; GPEPortSema
   \   00000024   ........           _BLF     OS_Use,??OS_Use??rA
    115          			rGPEDAT &= ~(1 << 6);
   \   00000028   4400A0E3           MOV      R0,#+68
   \   0000002C   560480E3           ORR      R0,R0,#0x56000000
   \   00000030   4410A0E3           MOV      R1,#+68
   \   00000034   561481E3           ORR      R1,R1,#0x56000000
   \   00000038   001091E5           LDR      R1,[R1, #+0]
   \   0000003C   4010D1E3           BICS     R1,R1,#0x40
   \   00000040   001080E5           STR      R1,[R0, #+0]
    116          			OS_Unuse(&GPEPortSema);
   \   00000044   ........           LDR      R0,??DataTable17  ;; GPEPortSema
   \   00000048   ........           _BLF     OS_Unuse,??OS_Unuse??rA
    117          	}
    118          }
   \                     ??LCD_BackLightOn_1:
   \   0000004C   0040BDE8           POP      {LR}
   \   00000050   1EFF2FE1           BX       LR               ;; return
    119          

   \                                 In segment CODE, align 4, keep-with-next
    120          void LCD_BackLightOff(void){
   \                     ??LCD_BackLightOff:
   \   00000000   00402DE9           PUSH     {LR}
    121          		if ( BackLightIsOn) {
   \   00000004   ........           LDR      R0,??DataTable5  ;; BackLightIsOn
   \   00000008   0000D0E5           LDRB     R0,[R0, #+0]
   \   0000000C   000050E3           CMP      R0,#+0
   \   00000010   0D00000A           BEQ      ??LCD_BackLightOff_1
    122          				BackLightIsOn = false;
   \   00000014   ........           LDR      R0,??DataTable5  ;; BackLightIsOn
   \   00000018   0010A0E3           MOV      R1,#+0
   \   0000001C   0010C0E5           STRB     R1,[R0, #+0]
    123          				OS_Use(&GPEPortSema);
   \   00000020   ........           LDR      R0,??DataTable17  ;; GPEPortSema
   \   00000024   ........           _BLF     OS_Use,??OS_Use??rA
    124          				rGPEDAT |= 1 << 6;
   \   00000028   4400A0E3           MOV      R0,#+68
   \   0000002C   560480E3           ORR      R0,R0,#0x56000000
   \   00000030   4410A0E3           MOV      R1,#+68
   \   00000034   561481E3           ORR      R1,R1,#0x56000000
   \   00000038   001091E5           LDR      R1,[R1, #+0]
   \   0000003C   401091E3           ORRS     R1,R1,#0x40
   \   00000040   001080E5           STR      R1,[R0, #+0]
    125          				OS_Unuse(&GPEPortSema);
   \   00000044   ........           LDR      R0,??DataTable17  ;; GPEPortSema
   \   00000048   ........           _BLF     OS_Unuse,??OS_Unuse??rA
    126          		}
    127          }
   \                     ??LCD_BackLightOff_1:
   \   0000004C   0040BDE8           POP      {LR}
   \   00000050   1EFF2FE1           BX       LR               ;; return
    128          

   \                                 In segment CODE, align 4, keep-with-next
    129          void LCD_BackLightAdjust(int Adjust)
    130          {
   \                     ??LCD_BackLightAdjust:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   0040B0E1           MOVS     R4,R0
    131          	if (Adjust >= 0) {
   \   00000008   000054E3           CMP      R4,#+0
   \   0000000C   1200004A           BMI      ??LCD_BackLightAdjust_1
    132          		OS_Use(&GPEPortSema);
   \   00000010   ........           LDR      R0,??DataTable17  ;; GPEPortSema
   \   00000014   ........           _BLF     OS_Use,??OS_Use??rA
    133          		rGPEDAT |= ((1<<8) | (1<<7)); 		// Count up and clck high
   \   00000018   4400A0E3           MOV      R0,#+68
   \   0000001C   560480E3           ORR      R0,R0,#0x56000000
   \   00000020   4410A0E3           MOV      R1,#+68
   \   00000024   561481E3           ORR      R1,R1,#0x56000000
   \   00000028   001091E5           LDR      R1,[R1, #+0]
   \   0000002C   601F91E3           ORRS     R1,R1,#0x180
   \   00000030   001080E5           STR      R1,[R0, #+0]
    134          		rGPEDAT &= ~(1<<9); 	// Enable pot and set clock low
   \   00000034   4400A0E3           MOV      R0,#+68
   \   00000038   560480E3           ORR      R0,R0,#0x56000000
   \   0000003C   4410A0E3           MOV      R1,#+68
   \   00000040   561481E3           ORR      R1,R1,#0x56000000
   \   00000044   001091E5           LDR      R1,[R1, #+0]
   \   00000048   801FD1E3           BICS     R1,R1,#0x200
   \   0000004C   001080E5           STR      R1,[R0, #+0]
    135          		OS_Unuse(&GPEPortSema);
   \   00000050   ........           LDR      R0,??DataTable17  ;; GPEPortSema
   \   00000054   ........           _BLF     OS_Unuse,??OS_Unuse??rA
   \   00000058   120000EA           B        ??LCD_BackLightAdjust_2
    136          	} else {
    137          		OS_Use(&GPEPortSema);
   \                     ??LCD_BackLightAdjust_1:
   \   0000005C   ........           LDR      R0,??DataTable17  ;; GPEPortSema
   \   00000060   ........           _BLF     OS_Use,??OS_Use??rA
    138          		rGPEDAT |= (1<<7); 		// Clock high
   \   00000064   4400A0E3           MOV      R0,#+68
   \   00000068   560480E3           ORR      R0,R0,#0x56000000
   \   0000006C   4410A0E3           MOV      R1,#+68
   \   00000070   561481E3           ORR      R1,R1,#0x56000000
   \   00000074   001091E5           LDR      R1,[R1, #+0]
   \   00000078   801091E3           ORRS     R1,R1,#0x80
   \   0000007C   001080E5           STR      R1,[R0, #+0]
    139          		rGPEDAT &= ~((1<<9) | (1<<8)); // Enable pot, count down
   \   00000080   4400A0E3           MOV      R0,#+68
   \   00000084   560480E3           ORR      R0,R0,#0x56000000
   \   00000088   4410A0E3           MOV      R1,#+68
   \   0000008C   561481E3           ORR      R1,R1,#0x56000000
   \   00000090   001091E5           LDR      R1,[R1, #+0]
   \   00000094   C01FD1E3           BICS     R1,R1,#0x300
   \   00000098   001080E5           STR      R1,[R0, #+0]
    140          		OS_Unuse(&GPEPortSema);
   \   0000009C   ........           LDR      R0,??DataTable17  ;; GPEPortSema
   \   000000A0   ........           _BLF     OS_Unuse,??OS_Unuse??rA
    141          		Adjust = -Adjust ;			// invert Adjust
   \   000000A4   004074E2           RSBS     R4,R4,#+0
    142          	}
    143          	for (int i = 0; i < Adjust; i++) {
   \                     ??LCD_BackLightAdjust_2:
   \   000000A8   0000A0E3           MOV      R0,#+0
   \   000000AC   0050B0E1           MOVS     R5,R0
   \                     ??LCD_BackLightAdjust_3:
   \   000000B0   040055E1           CMP      R5,R4
   \   000000B4   1B0000AA           BGE      ??LCD_BackLightAdjust_4
    144          		OS_Use(&GPEPortSema);
   \   000000B8   ........           LDR      R0,??DataTable17  ;; GPEPortSema
   \   000000BC   ........           _BLF     OS_Use,??OS_Use??rA
    145          		rGPEDAT &= ~(1<<7); 		// clock down
   \   000000C0   4400A0E3           MOV      R0,#+68
   \   000000C4   560480E3           ORR      R0,R0,#0x56000000
   \   000000C8   4410A0E3           MOV      R1,#+68
   \   000000CC   561481E3           ORR      R1,R1,#0x56000000
   \   000000D0   001091E5           LDR      R1,[R1, #+0]
   \   000000D4   8010D1E3           BICS     R1,R1,#0x80
   \   000000D8   001080E5           STR      R1,[R0, #+0]
    146          		OS_Unuse(&GPEPortSema);
   \   000000DC   ........           LDR      R0,??DataTable17  ;; GPEPortSema
   \   000000E0   ........           _BLF     OS_Unuse,??OS_Unuse??rA
    147          		OS_Delay(2);
   \   000000E4   0200A0E3           MOV      R0,#+2
   \   000000E8   ........           _BLF     OS_Delay,??OS_Delay??rA
    148          		OS_Use(&GPEPortSema);
   \   000000EC   ........           LDR      R0,??DataTable17  ;; GPEPortSema
   \   000000F0   ........           _BLF     OS_Use,??OS_Use??rA
    149          		rGPEDAT |= (1<<7); 		// clock up
   \   000000F4   4400A0E3           MOV      R0,#+68
   \   000000F8   560480E3           ORR      R0,R0,#0x56000000
   \   000000FC   4410A0E3           MOV      R1,#+68
   \   00000100   561481E3           ORR      R1,R1,#0x56000000
   \   00000104   001091E5           LDR      R1,[R1, #+0]
   \   00000108   801091E3           ORRS     R1,R1,#0x80
   \   0000010C   001080E5           STR      R1,[R0, #+0]
    150          		OS_Unuse(&GPEPortSema);
   \   00000110   ........           LDR      R0,??DataTable17  ;; GPEPortSema
   \   00000114   ........           _BLF     OS_Unuse,??OS_Unuse??rA
    151          		OS_Delay(2);
   \   00000118   0200A0E3           MOV      R0,#+2
   \   0000011C   ........           _BLF     OS_Delay,??OS_Delay??rA
    152          	}
   \   00000120   015095E2           ADDS     R5,R5,#+1
   \   00000124   E1FFFFEA           B        ??LCD_BackLightAdjust_3
    153          	OS_Use(&GPEPortSema);
   \                     ??LCD_BackLightAdjust_4:
   \   00000128   ........           LDR      R0,??DataTable17  ;; GPEPortSema
   \   0000012C   ........           _BLF     OS_Use,??OS_Use??rA
    154          	rGPEDAT |= (1<<9); 		// disable and save
   \   00000130   4400A0E3           MOV      R0,#+68
   \   00000134   560480E3           ORR      R0,R0,#0x56000000
   \   00000138   4410A0E3           MOV      R1,#+68
   \   0000013C   561481E3           ORR      R1,R1,#0x56000000
   \   00000140   001091E5           LDR      R1,[R1, #+0]
   \   00000144   801F91E3           ORRS     R1,R1,#0x200
   \   00000148   001080E5           STR      R1,[R0, #+0]
    155          	OS_Unuse(&GPEPortSema);
   \   0000014C   ........           LDR      R0,??DataTable17  ;; GPEPortSema
   \   00000150   ........           _BLF     OS_Unuse,??OS_Unuse??rA
    156          
    157          }
   \   00000154   3040BDE8           POP      {R4,R5,LR}
   \   00000158   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable5:
   \   00000000   ........           DC32     BackLightIsOn

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable17:
   \   00000000   ........           DC32     GPEPortSema

   Maximum stack usage in bytes:

     Function                 CSTACK
     --------                 ------
     LCD_BackLightAdjust(int)    12
     LCD_BackLightOff()           4
     LCD_BackLightOn()            4
     LCD_Init_Controller()        0
     Lcd_Palette8Bit_Init()       0


   Segment part sizes:

     Function/Label           Bytes
     --------------           -----
     DEMO256pal                512
     Lcd_Palette8Bit_Init()     96
     LCD_Init_Controller()     276
     BackLightIsOn               1
     LCD_BackLightOn()          84
     LCD_BackLightOff()         84
     LCD_BackLightAdjust(int)  348
     ??DataTable5                4
     ??DataTable17               4
      Others                    68

 
 952 bytes in segment CODE
 512 bytes in segment DATA_C
   1 byte  in segment DATA_Z
  12 bytes in segment INITTAB
 
 896 bytes of CODE  memory (+ 68 bytes shared)
 512 bytes of CONST memory
   1 byte  of DATA  memory

Errors: none
Warnings: none
