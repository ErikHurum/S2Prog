##############################################################################
#                                                                            #
# IAR ARM ANSI C/C++ Compiler V4.42A/W32               13/Sep/2016  09:47:28 #
# Copyright 1999-2005 IAR Systems. All rights reserved.                      #
#                                                                            #
#    Cpu mode        =  interwork                                            #
#    Endian          =  little                                               #
#    Stack alignment =  4                                                    #
#    Source file     =  E:\VMShare\working\trunk\TXU\src\Txu_HW_Init.cpp     #
#    Command line    =  E:\VMShare\working\trunk\TXU\src\Txu_HW_Init.cpp     #
#                       --fpu None -D OS_LIBMODE_DP -D OS_RAMVECT=0 -D       #
#                       CPU_S3C2410 -D OS_UART=1 -D ANBOOTLOADER -D          #
#                       __ARM_LIBRARY__ -lCN E:\VMShare\working\trunk\TXU\Ta #
#                       rgetDebug\List\ -o E:\VMShare\working\trunk\TXU\Targ #
#                       etDebug\Obj\ -s2 --no_cse --no_unroll --no_inline    #
#                       --no_code_motion --no_tbaa --no_clustering           #
#                       --no_scheduling --debug --cpu_mode arm --endian      #
#                       little --cpu ARM920T --stack_align 4 --interwork -e  #
#                       --eec++ --dlib_config "C:\Program Files (x86)\IAR    #
#                       Systems\Embedded Workbench                           #
#                       4.0\arm\LIB\dl4tpainl8f.h" -I                        #
#                       E:\VMShare\working\trunk\TXU\GUI\CORE\ -I            #
#                       E:\VMShare\working\trunk\TXU\GUI\WM\ -I              #
#                       E:\VMShare\working\trunk\TXU\GUI\WIDGET\ -I          #
#                       E:\VMShare\working\trunk\TXU\CONFIG\ -I              #
#                       E:\VMShare\working\trunk\TXU\INC\ -I                 #
#                       E:\VMShare\working\trunk\TXU\..\SHARED\INC\ -I       #
#                       E:\VMShare\working\trunk\TXU\..\SHARED\SRC\ -I       #
#                       E:\VMShare\working\trunk\TXU\..\SHARED\LZO\MINILZO.1 #
#                       08\ -I "C:\Program Files (x86)\IAR Systems\Embedded  #
#                       Workbench 4.0\arm\INC\"                              #
#    List file       =  E:\VMShare\working\trunk\TXU\TargetDebug\List\Txu_HW #
#                       _Init.lst                                            #
#    Object file     =  E:\VMShare\working\trunk\TXU\TargetDebug\Obj\Txu_HW_ #
#                       Init.r79                                             #
#                                                                            #
#                                                                            #
##############################################################################

E:\VMShare\working\trunk\TXU\src\Txu_HW_Init.cpp
      1          #include "def.h"
      2          #include "option.h"
      3          #include "2410addr.h"
      4          #include "2410lib.h"
      5          #include "2410slib.h"
      6          #include "mmu.h"
      7          
      8          extern int OS_FSys;

   \                                 In segment CODE, align 4, keep-with-next
      9          void SetCpuFrequency(void)
     10          {
   \                     ??SetCpuFrequency:
   \   00000000   00402DE9           PUSH     {LR}
     11          	//rWTCON  	&= 	~(0x00000001) ;		// Disable watchdog
     12          	ChangeClockDivider(1,1);          	// set clock divider to 1:2:4
   \   00000004   0110A0E3           MOV      R1,#+1
   \   00000008   0100A0E3           MOV      R0,#+1
   \   0000000C   ........           _BLF     ChangeClockDivider,??ChangeClockDivider??rA
     13          	extern int OS_FSys;
     14          	switch(OS_FSys){
   \   00000010   08019FE5           LDR      R0,??SetCpuFrequency_1  ;; OS_FSys
   \   00000014   000090E5           LDR      R0,[R0, #+0]
   \   00000018   04119FE5           LDR      R1,??SetCpuFrequency_1+0x4  ;; 0xaba9500
   \   0000001C   010050E1           CMP      R0,R1
   \   00000020   1500000A           BEQ      ??SetCpuFrequency_2
   \   00000024   FC109FE5           LDR      R1,??SetCpuFrequency_1+0x8  ;; 0xc167b80
   \   00000028   010050E1           CMP      R0,R1
   \   0000002C   1700000A           BEQ      ??SetCpuFrequency_3
   \   00000030   F4109FE5           LDR      R1,??SetCpuFrequency_1+0xC  ;; 0xd1cef00
   \   00000034   010050E1           CMP      R0,R1
   \   00000038   1900000A           BEQ      ??SetCpuFrequency_4
   \   0000003C   EC109FE5           LDR      R1,??SetCpuFrequency_1+0x10  ;; 0xd787c80
   \   00000040   010050E1           CMP      R0,R1
   \   00000044   1B00000A           BEQ      ??SetCpuFrequency_5
   \   00000048   E4109FE5           LDR      R1,??SetCpuFrequency_1+0x14  ;; 0xee6b280
   \   0000004C   010050E1           CMP      R0,R1
   \   00000050   1D00000A           BEQ      ??SetCpuFrequency_6
   \   00000054   DC109FE5           LDR      R1,??SetCpuFrequency_1+0x18  ;; 0xf7f4900
   \   00000058   010050E1           CMP      R0,R1
   \   0000005C   1F00000A           BEQ      ??SetCpuFrequency_7
   \   00000060   D4109FE5           LDR      R1,??SetCpuFrequency_1+0x1C  ;; 0xfdad680
   \   00000064   010050E1           CMP      R0,R1
   \   00000068   2100000A           BEQ      ??SetCpuFrequency_8
   \   0000006C   CC109FE5           LDR      R1,??SetCpuFrequency_1+0x20  ;; 0x1017df80
   \   00000070   010050E1           CMP      R0,R1
   \   00000074   2300000A           BEQ      ??SetCpuFrequency_9
   \   00000078   260000EA           B        ??SetCpuFrequency_10
     15          	case OS_FSYS_180:
     16          		ChangeMPllValue(0x52,0x1,0x1);    	// FCLK = 180MHz
   \                     ??SetCpuFrequency_2:
   \   0000007C   0120A0E3           MOV      R2,#+1
   \   00000080   0110A0E3           MOV      R1,#+1
   \   00000084   5200A0E3           MOV      R0,#+82
   \   00000088   ........           _BLF     ChangeMPllValue,??ChangeMPllValue??rA
   \   0000008C   210000EA           B        ??SetCpuFrequency_10
     17          		break;
     18          	case OS_FSYS_202:
     19          		ChangeMPllValue(0xa1,0x3,0x1);    // FCLK=202.8MHz  
   \                     ??SetCpuFrequency_3:
   \   00000090   0120A0E3           MOV      R2,#+1
   \   00000094   0310A0E3           MOV      R1,#+3
   \   00000098   A100A0E3           MOV      R0,#+161
   \   0000009C   ........           _BLF     ChangeMPllValue,??ChangeMPllValue??rA
   \   000000A0   1C0000EA           B        ??SetCpuFrequency_10
     20          		break;
     21          	case OS_FSYS_220:
     22          		ChangeMPllValue(0x66,0x1,0x1);    // FCLK=220MHz
   \                     ??SetCpuFrequency_4:
   \   000000A4   0120A0E3           MOV      R2,#+1
   \   000000A8   0110A0E3           MOV      R1,#+1
   \   000000AC   6600A0E3           MOV      R0,#+102
   \   000000B0   ........           _BLF     ChangeMPllValue,??ChangeMPllValue??rA
   \   000000B4   170000EA           B        ??SetCpuFrequency_10
     23          		break;
     24          	case OS_FSYS_226:
     25          		ChangeMPllValue(0x69,0x1,0x1);    // FCLK=226MHz    
   \                     ??SetCpuFrequency_5:
   \   000000B8   0120A0E3           MOV      R2,#+1
   \   000000BC   0110A0E3           MOV      R1,#+1
   \   000000C0   6900A0E3           MOV      R0,#+105
   \   000000C4   ........           _BLF     ChangeMPllValue,??ChangeMPllValue??rA
   \   000000C8   120000EA           B        ??SetCpuFrequency_10
     26          		break;
     27          	case OS_FSYS_250:
     28          		ChangeMPllValue(0x75,1,1); //FCLK=250.0Mhz 
   \                     ??SetCpuFrequency_6:
   \   000000CC   0120A0E3           MOV      R2,#+1
   \   000000D0   0110A0E3           MOV      R1,#+1
   \   000000D4   7500A0E3           MOV      R0,#+117
   \   000000D8   ........           _BLF     ChangeMPllValue,??ChangeMPllValue??rA
   \   000000DC   0D0000EA           B        ??SetCpuFrequency_10
     29          		break;
     30          	case OS_FSYS_260:
     31          		ChangeMPllValue(0x7a,1,1); //FCLK=260.0Mhz 
   \                     ??SetCpuFrequency_7:
   \   000000E0   0120A0E3           MOV      R2,#+1
   \   000000E4   0110A0E3           MOV      R1,#+1
   \   000000E8   7A00A0E3           MOV      R0,#+122
   \   000000EC   ........           _BLF     ChangeMPllValue,??ChangeMPllValue??rA
   \   000000F0   080000EA           B        ??SetCpuFrequency_10
     32          		break;
     33          	case OS_FSYS_266:
     34          		ChangeMPllValue(0x7d,1,1); //FCLK=266.0Mhz 
   \                     ??SetCpuFrequency_8:
   \   000000F4   0120A0E3           MOV      R2,#+1
   \   000000F8   0110A0E3           MOV      R1,#+1
   \   000000FC   7D00A0E3           MOV      R0,#+125
   \   00000100   ........           _BLF     ChangeMPllValue,??ChangeMPllValue??rA
   \   00000104   030000EA           B        ??SetCpuFrequency_10
     35          		break;
     36          	case OS_FSYS_270:
     37          		ChangeMPllValue(0x7f,1,1); //FCLK=270.0Mhz 
   \                     ??SetCpuFrequency_9:
   \   00000108   0120A0E3           MOV      R2,#+1
   \   0000010C   0110A0E3           MOV      R1,#+1
   \   00000110   7F00A0E3           MOV      R0,#+127
   \   00000114   ........           _BLF     ChangeMPllValue,??ChangeMPllValue??rA
     38          		break;
     39          
     40          	}
     41          }
   \                     ??SetCpuFrequency_10:
   \   00000118   0040BDE8           POP      {LR}
   \   0000011C   1EFF2FE1           BX       LR               ;; return
   \                     ??SetCpuFrequency_1:
   \   00000120   ........           DC32     OS_FSys
   \   00000124   0095BA0A           DC32     0xaba9500
   \   00000128   807B160C           DC32     0xc167b80
   \   0000012C   00EF1C0D           DC32     0xd1cef00
   \   00000130   807C780D           DC32     0xd787c80
   \   00000134   80B2E60E           DC32     0xee6b280
   \   00000138   00497F0F           DC32     0xf7f4900
   \   0000013C   80D6DA0F           DC32     0xfdad680
   \   00000140   80DF1710           DC32     0x1017df80
     42          

   Maximum stack usage in bytes:

     Function          CSTACK
     --------          ------
     SetCpuFrequency()     4


   Segment part sizes:

     Function/Label    Bytes
     --------------    -----
     SetCpuFrequency()  324
      Others             28

 
 352 bytes in segment CODE
 
 324 bytes of CODE memory (+ 28 bytes shared)

Errors: none
Warnings: none
