/*********************************************************************
*               SEGGER MICROCONTROLLER SYSTEME GmbH                  *
*       Solutions for real time microcontroller applications         *
**********************************************************************
*                                                                    *
*       (C) 2004 - 2006   SEGGER Microcontroller Systeme GmbH        *
*                                                                    *
*        www.segger.com   Support: support@segger.com                *
*                                                                    *
**********************************************************************

----------------------------------------------------------------------
File    : AT91SAM9261_iRAM.mac
Purpose : Setup file for IAR CSpy
          Feel free to modify this file acc. to your target system.
--------  END-OF-HEADER  ---------------------------------------------
*/

__var i;

/*********************************************************************
*
*       _InitPLL() 
*/
_InitPLL() {
  __message "AT91SAM9261_iRAM.mac: _InitPLL()";
  __writeMemory32(0x0004001, 0xFFFFFC20, "Memory");    // Enable Main oscillator
  do {
    i = __readMemory32(0xFFFFFC68,"Memory");
    i &= 1;
  } while (i == 0);                                    // Wait until Oscillator is stable
  __writeMemory32(0x0000001, 0xFFFFFC30, "Memory");    // Switch master clock to CPU clock, write 1 to PMC_MCKR
  __sleep(10);
}

/*********************************************************************
*
*       execUserReset()
*/
execUserReset() {
  __message "AT91SAM9261_iRAM.mac: execUserReset()";
//  __emulatorSpeed(5000);     // 5KHz works even for slow clock
  __emulatorSpeed(7999000);     // Use adaptive
  __writeMemory32(0xA5000005, 0xFFFFFD00,"Memory");  // Reset CPU, MMU, caches
  _InitPLL();
//  __emulatorSpeed(2000000);  // Use maximum JTAG speed which works with 16MHz CPU clock
  __writeMemory32(0x00000003, 0xFFFFED00,"Memory");  // Remap code and data area
  __writeMemory32(0x00008000, 0xFFFFFD44,"Memory");  // _DisableWatchdog(): AT91C_BASE_WDTC->WDTC_WDMR= AT91C_SYSC_WDDIS
  __writeMemory32(0xA5000001, 0xFFFFFD08,"Memory");  // Allow user reset
}

/*********************************************************************
*
*       execUserPreload()
*/
execUserPreload() {
  execUserReset();
}

/**************** End of file ***************************************/