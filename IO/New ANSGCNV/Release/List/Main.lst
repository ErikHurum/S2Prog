###############################################################################
#
# IAR C/C++ Compiler V7.10.1.1197 for Atmel AVR           28/Sep/2017  11:33:03
# Copyright 1996-2017 IAR Systems AB.
# Startup license - IAR Embedded Workbench for Atmel AVR 7.10
#
#    Source file  =  D:\S2Prog\IO\ANZB\Src\Main.c
#    Command line =  
#        -f C:\Users\esy\AppData\Local\Temp\EWE7EB.tmp
#        (D:\S2Prog\IO\ANZB\Src\Main.c --cpu=m1280 -ms -o
#        D:\S2Prog\IO\ANZB\Release\Obj -D OS_LIBMODE_S -D OS_UART=-1 -lCN
#        D:\S2Prog\IO\ANZB\Release\List -y --initializers_in_flash --no_tbaa
#        --enable_external_bus -DENABLE_BIT_DEFINITIONS -e -I
#        D:\S2Prog\IO\ANZB\INC\ -I D:\S2Prog\IO\ANZB\..\..\SHARED\INC\
#        --eeprom_size 4096 --clib -Oh)
#    Locale       =  Norwegian Bokmål_NOR.1252
#    List file    =  D:\S2Prog\IO\ANZB\Release\List\Main.lst
#    Object file  =  D:\S2Prog\IO\ANZB\Release\Obj\Main.r90
#
###############################################################################

D:\S2Prog\IO\ANZB\Src\Main.c
      1          /**********************************************************
      2          *  
      3          *   Main file for AN-ZB* program       
      4          *  
      5          ***********************************************************/
      6          
      7          #include "iom128.h"

   \                                 In  segment ABSOLUTE, at 0x41
   \   union <unnamed> volatile __io _A_WDTCR
   \                     _A_WDTCR:
   \   00000000                      DS8 1
      8          #include "stdio.h"
      9          #include "math.h"
     10          #include "variables.h"

   \                                 In  segment FAR_F, align 1, keep-with-next
   \   char const __farflash crc[256]
   \                     crc:
   \   00000000   5E00E2BC3F61       DC8 0, 94, 188, 226, 97, 63, 221, 131, 194, 156, 126, 32, 163, 253, 31
   \              83DD9CC2207E
   \              FDA31F      
   \   0000000F   9D4121C3FC7F       DC8 65, 157, 195, 33, 127, 252, 162, 64, 30, 95, 1, 227, 189, 62, 96
   \              40A25F1EE301
   \              3EBD60      
   \   0000001E   DC827D23C19F       DC8 130, 220, 35, 125, 159, 193, 66, 28, 254, 160, 225, 191, 93, 3, 128
   \              1C42A0FEBFE1
   \              035D80      
   \   0000002D   3CDEBE6202E0       DC8 222, 60, 98, 190, 224, 2, 92, 223, 129, 99, 61, 124, 34, 192, 158
   \              DF5C63817C3D
   \              C0229E      
   \   0000003C   431DFFA11846       DC8 29, 67, 161, 255, 70, 24, 250, 164, 39, 121, 155, 197, 132, 218, 56
   \              A4FA7927C59B
   \              DA8438      
   \   0000004B   E56659BBDB07       DC8 102, 229, 187, 89, 7, 219, 133, 103, 57, 186, 228, 6, 88, 25, 71
   \              6785BA3906E4
   \              195847      
   \   0000005A   FBA526789AC4       DC8 165, 251, 120, 38, 196, 154, 101, 59, 217, 135, 4, 90, 184, 230
   \              3B6587D95A04
   \              E6B8        
   \   00000068   F9A7451B98C6       DC8 167, 249, 27, 69, 198, 152, 122, 36, 248, 166, 68, 26, 153, 199, 37
   \              247AA6F81A44
   \              C79925      
   \   00000077   3A7B86645BD8       DC8 123, 58, 100, 134, 216, 91, 5, 231, 185, 140, 210, 48, 110, 237
   \              E7058CB930D2
   \              ED6E        
   \   00000085   51B34E0FF210       DC8 179, 81, 15, 78, 16, 242, 172, 47, 113, 147, 205, 17, 79, 173, 243
   \              2FAC937111CD
   \              AD4FF3      
   \   00000094   2E7092CC8DD3       DC8 112, 46, 204, 146, 211, 141, 111, 49, 178, 236, 14, 80, 175, 241
   \              316FECB2500E
   \              F1AF        
   \   000000A2   4D1390CE2C72       DC8 19, 77, 206, 144, 114, 44, 109, 51, 209, 143, 12, 82, 176, 238, 50
   \              336D8FD1520C
   \              EEB032      
   \   000000B1   8E6C53D0EF0D       DC8 108, 142, 208, 83, 13, 239, 177, 240, 174, 76, 18, 145, 207, 45
   \              F0B14CAE9112
   \              2DCF        
   \   000000BF   CA737694AB28       DC8 115, 202, 148, 118, 40, 171, 245, 23, 73, 8, 86, 180, 234, 105, 55
   \              17F50849B456
   \              69EA37      
   \   000000CE   8BD50957B5EB       DC8 213, 139, 87, 9, 235, 181, 54, 104, 138, 212, 149, 203, 41, 119
   \              6836D48ACB95
   \              7729        
   \   000000DC   AAF41648B7E9       DC8 244, 170, 72, 22, 233, 183, 85, 11, 136, 214, 52, 106, 43, 117, 151
   \              0B55D6886A34
   \              752B97      
   \   000000EB   4AC9F61474A8       DC8 201, 74, 20, 246, 168, 116, 42, 200, 150, 21, 75, 169, 247, 182
   \              C82A1596A94B
   \              B6F7        
   \   000000F9   0AE8D7546B89       DC8 232, 10, 84, 215, 137, 107, 53
   \              35          

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \   char UnitID
   \                     UnitID:
   \   00000000                      DS8 1
     11          #include "version.h"
     12          #include "inavr.h"
     13          #include "string.h"
     14          
     15          
     16          OS_STACKPTR int Stack0[80], Stack1[80], Stack3[50], Stack10[89], Stack11[89]; /* Task stacks */
     17          OS_TASK     TCB_USART0, TCB_USART1, TCB_WATCHDOG, TCB_RS485Ctl, TCB_RS485Rec, TCB_AD7715;               /* Task-control-blocks */
   \                     TCB_USART0:
   \   00000001                      DS8 21
   \                     TCB_USART1:
   \   00000016                      DS8 21
   \                     TCB_WATCHDOG:
   \   0000002B                      DS8 21
   \                     TCB_RS485Ctl:
   \   00000040                      DS8 21
   \                     TCB_RS485Rec:
   \   00000055                      DS8 21
   \                     TCB_AD7715:
   \   0000006A                      DS8 21
     18          OS_RSEMA    UARTSEND;
   \                     UARTSEND:
   \   0000007F                      DS8 7
     19          OS_TIMER    TimerUSART0, TimerUSART1, TimerUART0, TimerUART1, TimerUSART0On, TimerUSART1On;
   \                     TimerUSART0:
   \   00000086                      DS8 9
   \                     TimerUSART1:
   \   0000008F                      DS8 9
   \                     TimerUART0:
   \   00000098                      DS8 9
   \                     TimerUART1:
   \   000000A1                      DS8 9
   \                     TimerUSART0On:
   \   000000AA                      DS8 9
   \                     TimerUSART1On:
   \   000000B3                      DS8 9

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \   char RestartStatus
   \                     RestartStatus:
   \   00000000                      DS8 1

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \   char volatile PortPair
   \                     PortPair:
   \   00000000                      DS8 1

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \   UARTDataType UART[2]
   \                     UART:
   \   00000000                      DS8 52

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \   UARTDataType UART16552[2]
   \                     UART16552:
   \   00000000                      DS8 52

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \   AnalogInt ADInt
   \                     ADInt:
   \   00000000                      DS8 16

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \   TargetData TData
   \                     TData:
   \   00000000                      DS8 1532

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \   char TxBufferCh0[275]
   \                     TxBufferCh0:
   \   00000000                      DS8 275

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \   char RxBufferCh0[150]
   \                     RxBufferCh0:
   \   00000000                      DS8 150

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \   char TxBufferCh1[275]
   \                     TxBufferCh1:
   \   00000000                      DS8 275

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \   char RxBufferCh1[150]
   \                     RxBufferCh1:
   \   00000000                      DS8 150

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \   char TxBuf16552Ch0[60]
   \                     TxBuf16552Ch0:
   \   00000000                      DS8 60

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \   char RxBuf16552Ch0[120]
   \                     RxBuf16552Ch0:
   \   00000000                      DS8 120

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \   char TxBuf16552Ch1[60]
   \                     TxBuf16552Ch1:
   \   00000000                      DS8 60

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \   char RxBuf16552Ch1[120]
   \                     RxBuf16552Ch1:
   \   00000000                      DS8 120

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \   char volatile ADChannel
   \                     ADChannel:
   \   00000000                      DS8 1

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \   char WriteCount
   \                     WriteCount:
   \   00000000                      DS8 1

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \   char *__near pWriteBuffer
   \                     pWriteBuffer:
   \   00000000                      DS8 2

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \   char EEPWriteOK
   \                     EEPWriteOK:
   \   00000000                      DS8 1

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \   char volatile hostAddress
   \                     hostAddress:
   \   00000000                      DS8 1

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \                     Stack0:
   \   00000000                      DS8 160

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \                     Stack1:
   \   00000000                      DS8 160

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \                     Stack3:
   \   00000000                      DS8 100

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \                     Stack10:
   \   00000000                      DS8 178

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \                     Stack11:
   \   00000000                      DS8 178
     20          
     21          /**********************************************************
     22          *
     23          *       main
     24          *
     25          **********************************************************/
     26          

   \                                 In  segment CODE, align 2, keep-with-next
     27          void main(void) {
   \                     main:
   \   00000000                      REQUIRE __RSTACK_in_external_ram_new_way
     28          
     29              asm("WDR");                             // Enable watchdog here because the OS hang some times during startup
   \   00000000   95A8               WDR
     30              WDTCR = 0x1f;
   \   00000002   E10F               LDI     R16, 31
   \   00000004   BD01               OUT     0x21, R16
     31              WDTCR = 0x0f;
   \   00000006   E00F               LDI     R16, 15
   \   00000008   BD01               OUT     0x21, R16
     32              asm("WDR");                             // kick the dog!!
   \   0000000A   95A8               WDR
     33          
     34              OS_InitKern();        /* initialize OS                 */
   \   0000000C   ........           CALL    OS_InitKern
     35              OS_InitHW();          /* initialize Hardware for OS    */
   \   00000010   ........           CALL    OS_InitHW
     36              InitSystem();           // init the system according to board
   \   00000014   ........           CALL    InitSystem
     37          
     38          
     39              OS_CREATERSEMA(&UARTSEND);                          // semaphore for sending on UARTs
   \   00000018   ....               LDI     R16, LOW((UnitID + 127))
   \   0000001A   ....               LDI     R17, HIGH((UnitID + 127))
   \   0000001C   ........           CALL    OS_CreateRSema
     40              OS_CREATETASK(&TCB_USART0, "USART0", Usart0Handler, 110, Stack0);
   \   00000020   E002               LDI     R16, 2
   \   00000022   E010               LDI     R17, 0
   \   00000024   931A               ST      -Y, R17
   \   00000026   930A               ST      -Y, R16
   \   00000028   EA00               LDI     R16, 160
   \   0000002A   931A               ST      -Y, R17
   \   0000002C   930A               ST      -Y, R16
   \   0000002E   ....               LDI     R16, LOW(Stack0)
   \   00000030   ....               LDI     R17, (Stack0) >> 8
   \   00000032   931A               ST      -Y, R17
   \   00000034   930A               ST      -Y, R16
   \   00000036   ....               LDI     R22, LOW(Usart0Handler/2)
   \   00000038   ....               LDI     R23, (Usart0Handler/2) >> 8
   \   0000003A   E64E               LDI     R20, 110
   \   0000003C   ....               LDI     R18, LOW(`?<Constant "USART0">`)
   \   0000003E   ....               LDI     R19, (`?<Constant "USART0">`) >> 8
   \   00000040   ....               LDI     R16, LOW((UnitID + 1))
   \   00000042   ....               LDI     R17, HIGH((UnitID + 1))
   \   00000044   ........           CALL    OS_CreateTask_S
     41              OS_CREATETIMER(&TimerUSART0, TimoutUSART0, 200);                 // Start timeout timer RX on
   \   00000048   EC48               LDI     R20, 200
   \   0000004A   E050               LDI     R21, 0
   \   0000004C   ....               LDI     R18, LOW(TimoutUSART0/2)
   \   0000004E   ....               LDI     R19, (TimoutUSART0/2) >> 8
   \   00000050   ....               LDI     R16, LOW((UnitID + 134))
   \   00000052   ....               LDI     R17, HIGH((UnitID + 134))
   \   00000054   ........           CALL    OS_CreateTimer
   \   00000058   ....               LDI     R16, LOW((UnitID + 134))
   \   0000005A   ....               LDI     R17, HIGH((UnitID + 134))
   \   0000005C   ........           CALL    OS_StartTimer
     42              OS_CREATETIMER(&TimerUSART0On, TimoutUSART0On, 5);                 // Start on timer TX on
   \   00000060   E045               LDI     R20, 5
   \   00000062   E050               LDI     R21, 0
   \   00000064   ....               LDI     R18, LOW(TimoutUSART0On/2)
   \   00000066   ....               LDI     R19, (TimoutUSART0On/2) >> 8
   \   00000068   ....               LDI     R16, LOW((UnitID + 170))
   \   0000006A   ....               LDI     R17, HIGH((UnitID + 170))
   \   0000006C   ........           CALL    OS_CreateTimer
   \   00000070   ....               LDI     R16, LOW((UnitID + 170))
   \   00000072   ....               LDI     R17, HIGH((UnitID + 170))
   \   00000074   ........           CALL    OS_StartTimer
     43              OS_CREATETASK(&TCB_USART1, "USART1", Usart1Handler, 100, Stack1);
   \   00000078   E002               LDI     R16, 2
   \   0000007A   E010               LDI     R17, 0
   \   0000007C   931A               ST      -Y, R17
   \   0000007E   930A               ST      -Y, R16
   \   00000080   EA00               LDI     R16, 160
   \   00000082   931A               ST      -Y, R17
   \   00000084   930A               ST      -Y, R16
   \   00000086   ....               LDI     R16, LOW(Stack1)
   \   00000088   ....               LDI     R17, (Stack1) >> 8
   \   0000008A   931A               ST      -Y, R17
   \   0000008C   930A               ST      -Y, R16
   \   0000008E   ....               LDI     R22, LOW(Usart1Handler/2)
   \   00000090   ....               LDI     R23, (Usart1Handler/2) >> 8
   \   00000092   E644               LDI     R20, 100
   \   00000094   ....               LDI     R18, LOW((`?<Constant "USART0">` + 7))
   \   00000096   ....               LDI     R19, HIGH((`?<Constant "USART0">` + 7))
   \   00000098   ....               LDI     R16, LOW((UnitID + 22))
   \   0000009A   ....               LDI     R17, HIGH((UnitID + 22))
   \   0000009C   ........           CALL    OS_CreateTask_S
     44              OS_CREATETIMER(&TimerUSART1, TimoutUSART1, 200);                 // Start timeout timer RX on
   \   000000A0   EC48               LDI     R20, 200
   \   000000A2   E050               LDI     R21, 0
   \   000000A4   ....               LDI     R18, LOW(TimoutUSART1/2)
   \   000000A6   ....               LDI     R19, (TimoutUSART1/2) >> 8
   \   000000A8   ....               LDI     R16, LOW((UnitID + 143))
   \   000000AA   ....               LDI     R17, HIGH((UnitID + 143))
   \   000000AC   ........           CALL    OS_CreateTimer
   \   000000B0   ....               LDI     R16, LOW((UnitID + 143))
   \   000000B2   ....               LDI     R17, HIGH((UnitID + 143))
   \   000000B4   ........           CALL    OS_StartTimer
     45              OS_CREATETIMER(&TimerUSART1On, TimoutUSART1On, 5);                 // Start on timer TX on
   \   000000B8   E045               LDI     R20, 5
   \   000000BA   E050               LDI     R21, 0
   \   000000BC   ....               LDI     R18, LOW(TimoutUSART1On/2)
   \   000000BE   ....               LDI     R19, (TimoutUSART1On/2) >> 8
   \   000000C0   ....               LDI     R16, LOW((UnitID + 179))
   \   000000C2   ....               LDI     R17, HIGH((UnitID + 179))
   \   000000C4   ........           CALL    OS_CreateTimer
   \   000000C8   ....               LDI     R16, LOW((UnitID + 179))
   \   000000CA   ....               LDI     R17, HIGH((UnitID + 179))
   \   000000CC   ........           CALL    OS_StartTimer
     46          
     47              switch (UnitID) {                                    // Starting taasks for modules:
   \   000000D0   9100....           LDS     R16, UnitID
   \   000000D4   2300               TST     R16
   \   000000D6   F021               BREQ    ??main_0
   \   000000D8   950A               DEC     R16
   \   000000DA   F409               BRNE    $+2+2
   \   000000DC   C042               RJMP    ??main_1
   \   000000DE   C055               RJMP    ??main_2
     48              case 0x00:                                          // AN-ZB485 
     49                  OS_CREATETASK(&TCB_RS485Ctl, "ExtRS485_Control", ExtRS485Ctl, 80, Stack10);
   \                     ??main_0:
   \   000000E0   E002               LDI     R16, 2
   \   000000E2   E010               LDI     R17, 0
   \   000000E4   931A               ST      -Y, R17
   \   000000E6   930A               ST      -Y, R16
   \   000000E8   EB02               LDI     R16, 178
   \   000000EA   931A               ST      -Y, R17
   \   000000EC   930A               ST      -Y, R16
   \   000000EE   ....               LDI     R16, LOW(Stack10)
   \   000000F0   ....               LDI     R17, (Stack10) >> 8
   \   000000F2   931A               ST      -Y, R17
   \   000000F4   930A               ST      -Y, R16
   \   000000F6   ....               LDI     R22, LOW(ExtRS485Ctl/2)
   \   000000F8   ....               LDI     R23, (ExtRS485Ctl/2) >> 8
   \   000000FA   E540               LDI     R20, 80
   \   000000FC   ....               LDI     R18, LOW((`?<Constant "USART0">` + 14))
   \   000000FE   ....               LDI     R19, HIGH((`?<Constant "USART0">` + 14))
   \   00000100   ....               LDI     R16, LOW((UnitID + 64))
   \   00000102   ....               LDI     R17, HIGH((UnitID + 64))
   \   00000104   ........           CALL    OS_CreateTask_S
     50                  OS_CREATETIMER(&TimerUART0, TimoutUART0, 200);                 // Start timeout timer RX on
   \   00000108   EC48               LDI     R20, 200
   \   0000010A   E050               LDI     R21, 0
   \   0000010C   ....               LDI     R18, LOW(TimoutUART0/2)
   \   0000010E   ....               LDI     R19, (TimoutUART0/2) >> 8
   \   00000110   ....               LDI     R16, LOW((UnitID + 152))
   \   00000112   ....               LDI     R17, HIGH((UnitID + 152))
   \   00000114   ........           CALL    OS_CreateTimer
   \   00000118   ....               LDI     R16, LOW((UnitID + 152))
   \   0000011A   ....               LDI     R17, HIGH((UnitID + 152))
   \   0000011C   ........           CALL    OS_StartTimer
     51                  OS_CREATETASK(&TCB_RS485Rec, "ExtRS485_Receive", ExtRS485Rec, 90, Stack11);
   \   00000120   E002               LDI     R16, 2
   \   00000122   E010               LDI     R17, 0
   \   00000124   931A               ST      -Y, R17
   \   00000126   930A               ST      -Y, R16
   \   00000128   EB02               LDI     R16, 178
   \   0000012A   931A               ST      -Y, R17
   \   0000012C   930A               ST      -Y, R16
   \   0000012E   ....               LDI     R16, LOW(Stack11)
   \   00000130   ....               LDI     R17, (Stack11) >> 8
   \   00000132   931A               ST      -Y, R17
   \   00000134   930A               ST      -Y, R16
   \   00000136   ....               LDI     R22, LOW(ExtRS485Rec/2)
   \   00000138   ....               LDI     R23, (ExtRS485Rec/2) >> 8
   \   0000013A   E54A               LDI     R20, 90
   \   0000013C   ....               LDI     R18, LOW((`?<Constant "USART0">` + 31))
   \   0000013E   ....               LDI     R19, HIGH((`?<Constant "USART0">` + 31))
   \   00000140   ....               LDI     R16, LOW((UnitID + 85))
   \   00000142   ....               LDI     R17, HIGH((UnitID + 85))
   \   00000144   ........           CALL    OS_CreateTask_S
     52                  OS_CREATETIMER(&TimerUART1, TimoutUART1, 200);                 // Start timeout timer RX on
   \   00000148   EC48               LDI     R20, 200
   \   0000014A   E050               LDI     R21, 0
   \   0000014C   ....               LDI     R18, LOW(TimoutUART1/2)
   \   0000014E   ....               LDI     R19, (TimoutUART1/2) >> 8
   \   00000150   ....               LDI     R16, LOW((UnitID + 161))
   \   00000152   ....               LDI     R17, HIGH((UnitID + 161))
   \   00000154   ........           CALL    OS_CreateTimer
   \   00000158   ....               LDI     R16, LOW((UnitID + 161))
   \   0000015A   ....               LDI     R17, HIGH((UnitID + 161))
   \   0000015C   ........           CALL    OS_StartTimer
     53                  break;
   \   00000160   C014               RJMP    ??main_2
     54              case 0x01:                                          // AN-ZBANA 
     55                  OS_CREATETASK(&TCB_AD7715, "AD7715", AD7715,  90, Stack10);
   \                     ??main_1:
   \   00000162   E002               LDI     R16, 2
   \   00000164   E010               LDI     R17, 0
   \   00000166   931A               ST      -Y, R17
   \   00000168   930A               ST      -Y, R16
   \   0000016A   EB02               LDI     R16, 178
   \   0000016C   931A               ST      -Y, R17
   \   0000016E   930A               ST      -Y, R16
   \   00000170   ....               LDI     R16, LOW(Stack10)
   \   00000172   ....               LDI     R17, (Stack10) >> 8
   \   00000174   931A               ST      -Y, R17
   \   00000176   930A               ST      -Y, R16
   \   00000178   ....               LDI     R22, LOW(AD7715/2)
   \   0000017A   ....               LDI     R23, (AD7715/2) >> 8
   \   0000017C   E54A               LDI     R20, 90
   \   0000017E   ....               LDI     R18, LOW((`?<Constant "USART0">` + 48))
   \   00000180   ....               LDI     R19, HIGH((`?<Constant "USART0">` + 48))
   \   00000182   ....               LDI     R16, LOW((UnitID + 106))
   \   00000184   ....               LDI     R17, HIGH((UnitID + 106))
   \   00000186   ........           CALL    OS_CreateTask_S
     56                  break;
     57              }
     58              OS_CREATETASK(&TCB_WATCHDOG, "Watch dog", WatchDogHandler, 50, Stack3);
   \                     ??main_2:
   \   0000018A   E002               LDI     R16, 2
   \   0000018C   E010               LDI     R17, 0
   \   0000018E   931A               ST      -Y, R17
   \   00000190   930A               ST      -Y, R16
   \   00000192   E604               LDI     R16, 100
   \   00000194   931A               ST      -Y, R17
   \   00000196   930A               ST      -Y, R16
   \   00000198   ....               LDI     R16, LOW(Stack3)
   \   0000019A   ....               LDI     R17, (Stack3) >> 8
   \   0000019C   931A               ST      -Y, R17
   \   0000019E   930A               ST      -Y, R16
   \   000001A0   ....               LDI     R22, LOW(WatchDogHandler/2)
   \   000001A2   ....               LDI     R23, (WatchDogHandler/2) >> 8
   \   000001A4   E342               LDI     R20, 50
   \   000001A6   ....               LDI     R18, LOW((`?<Constant "USART0">` + 55))
   \   000001A8   ....               LDI     R19, HIGH((`?<Constant "USART0">` + 55))
   \   000001AA   ....               LDI     R16, LOW((UnitID + 43))
   \   000001AC   ....               LDI     R17, HIGH((UnitID + 43))
   \   000001AE   ........           CALL    OS_CreateTask_S
     59              OS_Start();                                         // Start multitasking
   \   000001B2   ........           JMP     OS_Start
   \   000001B6                      REQUIRE _A_WDTCR
     60          }

   \                                 In  segment NEAR_ID, align 1, keep-with-next
   \                     `?<Initializer for <Constant "USART0">>`:
   \   00000000   535552413054       DC8 "USART0"
   \              00          
   \                     `?<Initializer for <Constant "USART1">>`:
   \   00000007   535552413154       DC8 "USART1"
   \              00          
   \                     `?<Initializer for <Constant "ExtRS485_Control"`:
   \   0000000E   784552743453       DC8 "ExtRS485_Control"
   \              3538435F6E6F
   \              72746C6F00  
   \                     `?<Initializer for <Constant "ExtRS485_Receive"`:
   \   0000001F   784552743453       DC8 "ExtRS485_Receive"
   \              3538525F6365
   \              6965657600  
   \                     `?<Initializer for <Constant "AD7715">>`:
   \   00000030   444137373531       DC8 "AD7715"
   \              00          
   \                     `?<Initializer for <Constant "Watch dog">>`:
   \   00000037   615763742068       DC8 "Watch dog"
   \              6F640067    

   \                                 In  segment NEAR_I, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_I>`
   \                     `?<Constant "USART0">`:
   \   00000000                      DS8 7
   \   00000007                      REQUIRE `?<Initializer for <Constant "USART0">>`
   \   00000007                      DS8 7
   \   0000000E                      REQUIRE `?<Initializer for <Constant "USART1">>`
   \   0000000E                      DS8 17
   \   0000001F                      REQUIRE `?<Initializer for <Constant "ExtRS485_Control"`
   \   0000001F                      DS8 17
   \   00000030                      REQUIRE `?<Initializer for <Constant "ExtRS485_Receive"`
   \   00000030                      DS8 7
   \   00000037                      REQUIRE `?<Initializer for <Constant "AD7715">>`
   \   00000037                      DS8 10
   \   00000041                      REQUIRE `?<Initializer for <Constant "Watch dog">>`
     61          

   Maximum stack usage in bytes:

   CSTACK RSTACK Function
   ------ ------ --------
      6      2   main
        0      2   -> InitSystem
        0      2   -> OS_CreateRSema
        0      2   -> OS_CreateTask_S
        0      2   -> OS_CreateTimer
        0      2   -> OS_InitHW
        0      2   -> OS_InitKern
        0      2   -> OS_Start
        0      2   -> OS_StartTimer


   Segment part sizes:

   Bytes  Function/Label
   -----  --------------
      65  ?<Constant "USART0">
      65  ?<Initializer for <Constant "USART0">>
       1  ADChannel
      16  ADInt
       1  EEPWriteOK
       1  PortPair
       1  RestartStatus
     120  RxBuf16552Ch0
     120  RxBuf16552Ch1
     150  RxBufferCh0
     150  RxBufferCh1
     160  Stack0
     160  Stack1
     178  Stack10
     178  Stack11
     100  Stack3
    1532  TData
      60  TxBuf16552Ch0
      60  TxBuf16552Ch1
     275  TxBufferCh0
     275  TxBufferCh1
      52  UART
      52  UART16552
     188  UnitID
          TCB_USART0
          TCB_USART1
          TCB_WATCHDOG
          TCB_RS485Ctl
          TCB_RS485Rec
          TCB_AD7715
          UARTSEND
          TimerUSART0
          TimerUSART1
          TimerUART0
          TimerUART1
          TimerUSART0On
          TimerUSART1On
       1  WriteCount
       1  _A_WDTCR
     256  crc
       1  hostAddress
     438  main
       2  pWriteBuffer
      14  -- Other

 
     1 byte  in segment ABSOLUTE
   438 bytes in segment CODE
   256 bytes in segment FAR_F
    14 bytes in segment INITTAB
    65 bytes in segment NEAR_I
    65 bytes in segment NEAR_ID
 3 834 bytes in segment NEAR_Z
 
   759 bytes of CODE memory (+ 14 bytes shared)
 3 899 bytes of DATA memory (+  1 byte  shared)

Errors: none
Warnings: none
