###############################################################################
#
# IAR C/C++ Compiler V7.30.1.1615 for Microchip AVR       19/Feb/2021  14:16:06
# Copyright 1996-2020 IAR Systems AB.
# Mobile license - IAR Embedded Workbench for Microchip AVR 7.30
#
#    Source file  =  D:\S2Prog\IO\TPC_Bootloader\Src\Misc.c
#    Command line =  
#        -f C:\Users\esy\AppData\Local\Temp\EW7255.tmp
#        (D:\S2Prog\IO\TPC_Bootloader\Src\Misc.c --cpu=m1281 -ms -o
#        D:\S2Prog\IO\TPC_Bootloader\Release\Obj -D SPEED=9600 -lC
#        D:\S2Prog\IO\TPC_Bootloader\Release\List -y --initializers_in_flash
#        --no_tbaa -DENABLE_BIT_DEFINITIONS -e -I
#        D:\S2Prog\IO\TPC_Bootloader\INC\\ -I
#        D:\S2Prog\IO\TPC_Bootloader\..\..\SHARED\INC\\ --eeprom_size 4096
#        --clib -Oh)
#    Locale       =  Norwegian Bokmål_NOR.1252
#    List file    =  D:\S2Prog\IO\TPC_Bootloader\Release\List\Misc.lst
#    Object file  =  D:\S2Prog\IO\TPC_Bootloader\Release\Obj\Misc.r90
#
###############################################################################

D:\S2Prog\IO\TPC_Bootloader\Src\Misc.c
      1          /****************************************************************************************
      2          /  Misc. routines
      3          /
      4          ***************************************************************************************/
      5          #include "iom128.h"
      6          #include "stdio.h"
      7          #include "math.h"
      8          #include "externals.h"
      9          #include "inavr.h"
     10          #include "string.h"
     11          
     12          
     13          /*************************************************************************
     14          *
     15          *  Get my address
     16          *
     17          *************************************************************************/

   \                                 In  segment CODE, align 2, keep-with-next
     18          char MyAddress(void) {
   \                     MyAddress:
     19          
     20              MyPriAddress = ReadEEPROMByte(EEPROM_PRI_ADDR) ; // Get sec address from EEPROM
   \   00000000   E001               LDI     R16, 1
   \   00000002   E010               LDI     R17, 0
   \   00000004   ........           CALL    ReadEEPROMByte
   \   00000008   9300....           STS     MyPriAddress, R16
     21              MySecAddress = ReadEEPROMByte(EEPROM_SEC_ADDR) ; // Get sec address from EEPROM
   \   0000000C   E002               LDI     R16, 2
   \   0000000E   E010               LDI     R17, 0
   \   00000010   ........           CALL    ReadEEPROMByte
   \   00000014   9300....           STS     MySecAddress, R16
     22              return MySecAddress;
   \   00000018   9508               RET
     23          
     24          //    return (0x00) ; //AStmark to be set in some way .......
     25          }

   Maximum stack usage in bytes:

   RSTACK Function
   ------ --------
      2   MyAddress
        2   -> ReadEEPROMByte


   Segment part sizes:

   Bytes  Function/Label
   -----  --------------
      26  MyAddress

 
 26 bytes in segment CODE
 
 26 bytes of CODE memory

Errors: none
Warnings: none
