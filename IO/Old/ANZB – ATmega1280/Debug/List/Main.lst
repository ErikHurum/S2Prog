###############################################################################
#
# IAR C/C++ Compiler V7.10.6.1378 for Atmel AVR           30/Jul/2018  09:24:40
# Copyright 1996-2018 IAR Systems AB.
# Standalone license - IAR Embedded Workbench for Atmel AVR 7.10
#
#    Source file  =  D:\S2Prog\IO\ANZB – ATmega1280\Src\Main.c
#    Command line =  
#        -f C:\Users\esy\AppData\Local\Temp\EW56A3.tmp ("D:\S2Prog\IO\ANZB –
#        ATmega1280\Src\Main.c" --cpu=m1280 -ms -o "D:\S2Prog\IO\ANZB –
#        ATmega1280\Debug\Obj" -D OS_LIBMODE_D -D OS_UART=-1 -lCN
#        "D:\S2Prog\IO\ANZB – ATmega1280\Debug\List" -y --initializers_in_flash
#        --no_cse --no_inline --no_code_motion --no_cross_call --no_clustering
#        --no_tbaa --debug -DENABLE_BIT_DEFINITIONS -e -I "D:\S2Prog\IO\ANZB –
#        ATmega1280\INC\" -I "D:\S2Prog\IO\ANZB – ATmega1280\..\..\SHARED\INC\"
#        --eeprom_size 4096 --clib -On)
#    Locale       =  Norwegian Bokmål_NOR.1252
#    List file    =  D:\S2Prog\IO\ANZB – ATmega1280\Debug\List\Main.lst
#    Object file  =  D:\S2Prog\IO\ANZB – ATmega1280\Debug\Obj\Main.r90
#
###############################################################################

D:\S2Prog\IO\ANZB – ATmega1280\Src\Main.c
      1          /**********************************************************
      2          *  
      3          *   Main file for AN-ZB* program       
      4          *  
      5          ***********************************************************/
      6          
      7          #include "iom1280.h"

   \                                 In  segment ABSOLUTE, at 0x60
   \   union <unnamed> volatile __io _A_WDTCSR
   \                     _A_WDTCSR:
   \   00000000                      DS8 1
      8          #include "stdio.h"
      9          #include "math.h"
     10          #include "variables.h"

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \   char UnitID
   \                     UnitID:
   \   00000000                      DS8 1

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \   char RestartStatus
   \                     RestartStatus:
   \   00000000                      DS8 1

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \   char volatile PortPair
   \                     PortPair:
   \   00000000                      DS8 1

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \   UARTDataType UART[2]
   \                     UART:
   \   00000000                      DS8 52

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \   UARTDataType UART16552[2]
   \                     UART16552:
   \   00000000                      DS8 52

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \   AnalogInt ADInt
   \                     ADInt:
   \   00000000                      DS8 16

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \   TargetData TData
   \                     TData:
   \   00000000                      DS8 1564

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \   char TxBufferCh0[275]
   \                     TxBufferCh0:
   \   00000000                      DS8 275

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \   char RxBufferCh0[150]
   \                     RxBufferCh0:
   \   00000000                      DS8 150

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \   char TxBufferCh1[275]
   \                     TxBufferCh1:
   \   00000000                      DS8 275

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \   char RxBufferCh1[150]
   \                     RxBufferCh1:
   \   00000000                      DS8 150

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \   char TxBuf16552Ch0[60]
   \                     TxBuf16552Ch0:
   \   00000000                      DS8 60

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \   char RxBuf16552Ch0[120]
   \                     RxBuf16552Ch0:
   \   00000000                      DS8 120

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \   char TxBuf16552Ch1[60]
   \                     TxBuf16552Ch1:
   \   00000000                      DS8 60

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \   char RxBuf16552Ch1[120]
   \                     RxBuf16552Ch1:
   \   00000000                      DS8 120

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \   char volatile ADChannel
   \                     ADChannel:
   \   00000000                      DS8 1

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \   char WriteCount
   \                     WriteCount:
   \   00000000                      DS8 1

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \   char *__near pWriteBuffer
   \                     pWriteBuffer:
   \   00000000                      DS8 2

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \   char EEPWriteOK
   \                     EEPWriteOK:
   \   00000000                      DS8 1

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \   char volatile hostAddress
   \                     hostAddress:
   \   00000000                      DS8 1

   \                                 In  segment FAR_F, align 1, keep-with-next
   \   char const __farflash crc[256]
   \                     crc:
   \   00000000   5E00E2BC3F61       DC8 0, 94, 188, 226, 97, 63, 221, 131, 194, 156, 126, 32, 163, 253, 31
   \              83DD9CC2207E
   \              FDA31F      
   \   0000000F   9D4121C3FC7F       DC8 65, 157, 195, 33, 127, 252, 162, 64, 30, 95, 1, 227, 189, 62, 96
   \              40A25F1EE301
   \              3EBD60      
   \   0000001E   DC827D23C19F       DC8 130, 220, 35, 125, 159, 193, 66, 28, 254, 160, 225, 191, 93, 3, 128
   \              1C42A0FEBFE1
   \              035D80      
   \   0000002D   3CDEBE6202E0       DC8 222, 60, 98, 190, 224, 2, 92, 223, 129, 99, 61, 124, 34, 192, 158
   \              DF5C63817C3D
   \              C0229E      
   \   0000003C   431DFFA11846       DC8 29, 67, 161, 255, 70, 24, 250, 164, 39, 121, 155, 197, 132, 218, 56
   \              A4FA7927C59B
   \              DA8438      
   \   0000004B   E56659BBDB07       DC8 102, 229, 187, 89, 7, 219, 133, 103, 57, 186, 228, 6, 88, 25, 71
   \              6785BA3906E4
   \              195847      
   \   0000005A   FBA526789AC4       DC8 165, 251, 120, 38, 196, 154, 101, 59, 217, 135, 4, 90, 184, 230
   \              3B6587D95A04
   \              E6B8        
   \   00000068   F9A7451B98C6       DC8 167, 249, 27, 69, 198, 152, 122, 36, 248, 166, 68, 26, 153, 199, 37
   \              247AA6F81A44
   \              C79925      
   \   00000077   3A7B86645BD8       DC8 123, 58, 100, 134, 216, 91, 5, 231, 185, 140, 210, 48, 110, 237
   \              E7058CB930D2
   \              ED6E        
   \   00000085   51B34E0FF210       DC8 179, 81, 15, 78, 16, 242, 172, 47, 113, 147, 205, 17, 79, 173, 243
   \              2FAC937111CD
   \              AD4FF3      
   \   00000094   2E7092CC8DD3       DC8 112, 46, 204, 146, 211, 141, 111, 49, 178, 236, 14, 80, 175, 241
   \              316FECB2500E
   \              F1AF        
   \   000000A2   4D1390CE2C72       DC8 19, 77, 206, 144, 114, 44, 109, 51, 209, 143, 12, 82, 176, 238, 50
   \              336D8FD1520C
   \              EEB032      
   \   000000B1   8E6C53D0EF0D       DC8 108, 142, 208, 83, 13, 239, 177, 240, 174, 76, 18, 145, 207, 45
   \              F0B14CAE9112
   \              2DCF        
   \   000000BF   CA737694AB28       DC8 115, 202, 148, 118, 40, 171, 245, 23, 73, 8, 86, 180, 234, 105, 55
   \              17F50849B456
   \              69EA37      
   \   000000CE   8BD50957B5EB       DC8 213, 139, 87, 9, 235, 181, 54, 104, 138, 212, 149, 203, 41, 119
   \              6836D48ACB95
   \              7729        
   \   000000DC   AAF41648B7E9       DC8 244, 170, 72, 22, 233, 183, 85, 11, 136, 214, 52, 106, 43, 117, 151
   \              0B55D6886A34
   \              752B97      
   \   000000EB   4AC9F61474A8       DC8 201, 74, 20, 246, 168, 116, 42, 200, 150, 21, 75, 169, 247, 182
   \              C82A1596A94B
   \              B6F7        
   \   000000F9   0AE8D7546B89       DC8 232, 10, 84, 215, 137, 107, 53
   \              35          
     11          #include "version.h"
     12          #include "inavr.h"
     13          #include "string.h"
     14          
     15          

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
     16          OS_STACKPTR int Stack0[80], Stack1[80], Stack3[50], Stack10[89], Stack11[89]; /* Task stacks */
   \                     Stack0:
   \   00000000                      DS8 160

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \                     Stack1:
   \   00000000                      DS8 160

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \                     Stack3:
   \   00000000                      DS8 100

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \                     Stack10:
   \   00000000                      DS8 178

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \                     Stack11:
   \   00000000                      DS8 178

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
     17          OS_TASK     TCB_USART0, TCB_USART1, TCB_WATCHDOG, TCB_RS485Ctl, TCB_RS485Rec, TCB_AD7715;               /* Task-control-blocks */
   \                     TCB_USART0:
   \   00000000                      DS8 22

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \                     TCB_USART1:
   \   00000000                      DS8 22

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \                     TCB_WATCHDOG:
   \   00000000                      DS8 22

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \                     TCB_RS485Ctl:
   \   00000000                      DS8 22

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \                     TCB_RS485Rec:
   \   00000000                      DS8 22

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \                     TCB_AD7715:
   \   00000000                      DS8 22

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
     18          OS_RSEMA    UARTSEND;
   \                     UARTSEND:
   \   00000000                      DS8 8

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
     19          OS_TIMER    TimerUSART0, TimerUSART1, TimerUART0, TimerUART1, TimerUSART0On, TimerUSART1On;
   \                     TimerUSART0:
   \   00000000                      DS8 10

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \                     TimerUSART1:
   \   00000000                      DS8 10

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \                     TimerUART0:
   \   00000000                      DS8 10

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \                     TimerUART1:
   \   00000000                      DS8 10

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \                     TimerUSART0On:
   \   00000000                      DS8 10

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \                     TimerUSART1On:
   \   00000000                      DS8 10
     20          
     21          /**********************************************************
     22          *
     23          *       main
     24          *
     25          **********************************************************/
     26          

   \                                 In  segment CODE, align 2, keep-with-next
     27          void main(void) {
   \                     main:
     28          #if 1
     29              asm("WDR");                             // Enable watchdog here because the OS hang some times during startup
   \   00000000   95A8               WDR
     30              WDTCSR = 0x1f;
   \   00000002   E10F               LDI     R16, 31
   \   00000004   9300....           STS     _A_WDTCSR, R16
     31              WDTCSR = 0x0f;
   \   00000008   E00F               LDI     R16, 15
   \   0000000A   9300....           STS     _A_WDTCSR, R16
     32              asm("WDR");                             // kick the dog!!
   \   0000000E   95A8               WDR
     33          #endif
     34          
     35              OS_InitKern();        /* initialize OS                 */
   \   00000010   ........           CALL    OS_InitKern
     36              OS_InitHW();          /* initialize Hardware for OS    */
   \   00000014   ........           CALL    OS_InitHW
     37              InitSystem();           // init the system according to board
   \   00000018   ........           CALL    InitSystem
     38          
     39          
     40              OS_CREATERSEMA(&UARTSEND);                          // semaphore for sending on UARTs
   \   0000001C   ....               LDI     R16, LOW(UARTSEND)
   \   0000001E   ....               LDI     R17, (UARTSEND) >> 8
   \   00000020   ........           CALL    OS_CreateRSema
     41              OS_CREATETASK(&TCB_USART0, "USART0", Usart0Handler, 110, Stack0);
   \   00000024   E002               LDI     R16, 2
   \   00000026   E010               LDI     R17, 0
   \   00000028   931A               ST      -Y, R17
   \   0000002A   930A               ST      -Y, R16
   \   0000002C   EA00               LDI     R16, 160
   \   0000002E   E010               LDI     R17, 0
   \   00000030   931A               ST      -Y, R17
   \   00000032   930A               ST      -Y, R16
   \   00000034   ....               LDI     R16, LOW(Stack0)
   \   00000036   ....               LDI     R17, (Stack0) >> 8
   \   00000038   931A               ST      -Y, R17
   \   0000003A   930A               ST      -Y, R16
   \   0000003C   ....               LDI     R22, LOW(Usart0Handler/2)
   \   0000003E   ....               LDI     R23, (Usart0Handler/2) >> 8
   \   00000040   E64E               LDI     R20, 110
   \   00000042   ....               LDI     R18, LOW(`?<Constant "USART0">`)
   \   00000044   ....               LDI     R19, (`?<Constant "USART0">`) >> 8
   \   00000046   ....               LDI     R16, LOW(TCB_USART0)
   \   00000048   ....               LDI     R17, (TCB_USART0) >> 8
   \   0000004A   ........           CALL    OS_CreateTask_D
     42              OS_CREATETIMER(&TimerUSART0, TimoutUSART0, 200);                 // Start timeout timer RX on
   \   0000004E   EC48               LDI     R20, 200
   \   00000050   E050               LDI     R21, 0
   \   00000052   ....               LDI     R18, LOW(TimoutUSART0/2)
   \   00000054   ....               LDI     R19, (TimoutUSART0/2) >> 8
   \   00000056   ....               LDI     R16, LOW(TimerUSART0)
   \   00000058   ....               LDI     R17, (TimerUSART0) >> 8
   \   0000005A   ........           CALL    OS_CreateTimer
   \   0000005E   ....               LDI     R16, LOW(TimerUSART0)
   \   00000060   ....               LDI     R17, (TimerUSART0) >> 8
   \   00000062   ........           CALL    OS_StartTimer
     43              OS_CREATETIMER(&TimerUSART0On, TimoutUSART0On, 5);                 // Start on timer TX on
   \   00000066   E045               LDI     R20, 5
   \   00000068   E050               LDI     R21, 0
   \   0000006A   ....               LDI     R18, LOW(TimoutUSART0On/2)
   \   0000006C   ....               LDI     R19, (TimoutUSART0On/2) >> 8
   \   0000006E   ....               LDI     R16, LOW(TimerUSART0On)
   \   00000070   ....               LDI     R17, (TimerUSART0On) >> 8
   \   00000072   ........           CALL    OS_CreateTimer
   \   00000076   ....               LDI     R16, LOW(TimerUSART0On)
   \   00000078   ....               LDI     R17, (TimerUSART0On) >> 8
   \   0000007A   ........           CALL    OS_StartTimer
     44              OS_CREATETASK(&TCB_USART1, "USART1", Usart1Handler, 100, Stack1);
   \   0000007E   E002               LDI     R16, 2
   \   00000080   E010               LDI     R17, 0
   \   00000082   931A               ST      -Y, R17
   \   00000084   930A               ST      -Y, R16
   \   00000086   EA00               LDI     R16, 160
   \   00000088   E010               LDI     R17, 0
   \   0000008A   931A               ST      -Y, R17
   \   0000008C   930A               ST      -Y, R16
   \   0000008E   ....               LDI     R16, LOW(Stack1)
   \   00000090   ....               LDI     R17, (Stack1) >> 8
   \   00000092   931A               ST      -Y, R17
   \   00000094   930A               ST      -Y, R16
   \   00000096   ....               LDI     R22, LOW(Usart1Handler/2)
   \   00000098   ....               LDI     R23, (Usart1Handler/2) >> 8
   \   0000009A   E644               LDI     R20, 100
   \   0000009C   ....               LDI     R18, LOW(`?<Constant "USART1">`)
   \   0000009E   ....               LDI     R19, (`?<Constant "USART1">`) >> 8
   \   000000A0   ....               LDI     R16, LOW(TCB_USART1)
   \   000000A2   ....               LDI     R17, (TCB_USART1) >> 8
   \   000000A4   ........           CALL    OS_CreateTask_D
     45              OS_CREATETIMER(&TimerUSART1, TimoutUSART1, 200);                 // Start timeout timer RX on
   \   000000A8   EC48               LDI     R20, 200
   \   000000AA   E050               LDI     R21, 0
   \   000000AC   ....               LDI     R18, LOW(TimoutUSART1/2)
   \   000000AE   ....               LDI     R19, (TimoutUSART1/2) >> 8
   \   000000B0   ....               LDI     R16, LOW(TimerUSART1)
   \   000000B2   ....               LDI     R17, (TimerUSART1) >> 8
   \   000000B4   ........           CALL    OS_CreateTimer
   \   000000B8   ....               LDI     R16, LOW(TimerUSART1)
   \   000000BA   ....               LDI     R17, (TimerUSART1) >> 8
   \   000000BC   ........           CALL    OS_StartTimer
     46              OS_CREATETIMER(&TimerUSART1On, TimoutUSART1On, 5);                 // Start on timer TX on
   \   000000C0   E045               LDI     R20, 5
   \   000000C2   E050               LDI     R21, 0
   \   000000C4   ....               LDI     R18, LOW(TimoutUSART1On/2)
   \   000000C6   ....               LDI     R19, (TimoutUSART1On/2) >> 8
   \   000000C8   ....               LDI     R16, LOW(TimerUSART1On)
   \   000000CA   ....               LDI     R17, (TimerUSART1On) >> 8
   \   000000CC   ........           CALL    OS_CreateTimer
   \   000000D0   ....               LDI     R16, LOW(TimerUSART1On)
   \   000000D2   ....               LDI     R17, (TimerUSART1On) >> 8
   \   000000D4   ........           CALL    OS_StartTimer
     47          
     48              switch (UnitID) {                                    // Starting taasks for modules:
   \   000000D8   9100....           LDS     R16, UnitID
   \   000000DC   5000               SUBI    R16, 0
   \   000000DE   F051               BREQ    ??main_0
   \   000000E0   950A               DEC     R16
   \   000000E2   F409               BRNE    $+2+2
   \   000000E4   C04A               RJMP    ??main_1
   \   000000E6   950A               DEC     R16
   \   000000E8   F409               BRNE    $+2+2
   \   000000EA   C072               RJMP    ??main_2
   \   000000EC   950A               DEC     R16
   \   000000EE   F409               BRNE    $+2+2
   \   000000F0   C05A               RJMP    ??main_3
   \   000000F2   C06E               RJMP    ??main_2
     49              case 0x00:                                          // AN-ZB485 
     50                
     51                  OS_CREATETASK(&TCB_RS485Ctl, "ExtRS485_Control", ExtRS485Ctl, 80, Stack10);
   \                     ??main_0:
   \   000000F4   E002               LDI     R16, 2
   \   000000F6   E010               LDI     R17, 0
   \   000000F8   931A               ST      -Y, R17
   \   000000FA   930A               ST      -Y, R16
   \   000000FC   EB02               LDI     R16, 178
   \   000000FE   E010               LDI     R17, 0
   \   00000100   931A               ST      -Y, R17
   \   00000102   930A               ST      -Y, R16
   \   00000104   ....               LDI     R16, LOW(Stack10)
   \   00000106   ....               LDI     R17, (Stack10) >> 8
   \   00000108   931A               ST      -Y, R17
   \   0000010A   930A               ST      -Y, R16
   \   0000010C   ....               LDI     R22, LOW(ExtRS485Ctl/2)
   \   0000010E   ....               LDI     R23, (ExtRS485Ctl/2) >> 8
   \   00000110   E540               LDI     R20, 80
   \   00000112   ....               LDI     R18, LOW(`?<Constant "ExtRS485_Control">`)
   \   00000114   ....               LDI     R19, (`?<Constant "ExtRS485_Control">`) >> 8
   \   00000116   ....               LDI     R16, LOW(TCB_RS485Ctl)
   \   00000118   ....               LDI     R17, (TCB_RS485Ctl) >> 8
   \   0000011A   ........           CALL    OS_CreateTask_D
     52                  OS_CREATETIMER(&TimerUART0, TimoutUART0, 200);                 // Start timeout timer RX on
   \   0000011E   EC48               LDI     R20, 200
   \   00000120   E050               LDI     R21, 0
   \   00000122   ....               LDI     R18, LOW(TimoutUART0/2)
   \   00000124   ....               LDI     R19, (TimoutUART0/2) >> 8
   \   00000126   ....               LDI     R16, LOW(TimerUART0)
   \   00000128   ....               LDI     R17, (TimerUART0) >> 8
   \   0000012A   ........           CALL    OS_CreateTimer
   \   0000012E   ....               LDI     R16, LOW(TimerUART0)
   \   00000130   ....               LDI     R17, (TimerUART0) >> 8
   \   00000132   ........           CALL    OS_StartTimer
     53                  OS_CREATETASK(&TCB_RS485Rec, "ExtRS485_Receive", ExtRS485Rec, 90, Stack11);
   \   00000136   E002               LDI     R16, 2
   \   00000138   E010               LDI     R17, 0
   \   0000013A   931A               ST      -Y, R17
   \   0000013C   930A               ST      -Y, R16
   \   0000013E   EB02               LDI     R16, 178
   \   00000140   E010               LDI     R17, 0
   \   00000142   931A               ST      -Y, R17
   \   00000144   930A               ST      -Y, R16
   \   00000146   ....               LDI     R16, LOW(Stack11)
   \   00000148   ....               LDI     R17, (Stack11) >> 8
   \   0000014A   931A               ST      -Y, R17
   \   0000014C   930A               ST      -Y, R16
   \   0000014E   ....               LDI     R22, LOW(ExtRS485Rec/2)
   \   00000150   ....               LDI     R23, (ExtRS485Rec/2) >> 8
   \   00000152   E54A               LDI     R20, 90
   \   00000154   ....               LDI     R18, LOW(`?<Constant "ExtRS485_Receive">`)
   \   00000156   ....               LDI     R19, (`?<Constant "ExtRS485_Receive">`) >> 8
   \   00000158   ....               LDI     R16, LOW(TCB_RS485Rec)
   \   0000015A   ....               LDI     R17, (TCB_RS485Rec) >> 8
   \   0000015C   ........           CALL    OS_CreateTask_D
     54                  OS_CREATETIMER(&TimerUART1, TimoutUART1, 200);                 // Start timeout timer RX on
   \   00000160   EC48               LDI     R20, 200
   \   00000162   E050               LDI     R21, 0
   \   00000164   ....               LDI     R18, LOW(TimoutUART1/2)
   \   00000166   ....               LDI     R19, (TimoutUART1/2) >> 8
   \   00000168   ....               LDI     R16, LOW(TimerUART1)
   \   0000016A   ....               LDI     R17, (TimerUART1) >> 8
   \   0000016C   ........           CALL    OS_CreateTimer
   \   00000170   ....               LDI     R16, LOW(TimerUART1)
   \   00000172   ....               LDI     R17, (TimerUART1) >> 8
   \   00000174   ........           CALL    OS_StartTimer
     55                  break;
   \   00000178   C02B               RJMP    ??main_2
     56              case 0x01:                                          // AN-ZBANA 
     57                  OS_CREATETASK(&TCB_AD7715, "AD7715", AD7715,  90, Stack10);
   \                     ??main_1:
   \   0000017A   E002               LDI     R16, 2
   \   0000017C   E010               LDI     R17, 0
   \   0000017E   931A               ST      -Y, R17
   \   00000180   930A               ST      -Y, R16
   \   00000182   EB02               LDI     R16, 178
   \   00000184   E010               LDI     R17, 0
   \   00000186   931A               ST      -Y, R17
   \   00000188   930A               ST      -Y, R16
   \   0000018A   ....               LDI     R16, LOW(Stack10)
   \   0000018C   ....               LDI     R17, (Stack10) >> 8
   \   0000018E   931A               ST      -Y, R17
   \   00000190   930A               ST      -Y, R16
   \   00000192   ....               LDI     R22, LOW(AD7715/2)
   \   00000194   ....               LDI     R23, (AD7715/2) >> 8
   \   00000196   E54A               LDI     R20, 90
   \   00000198   ....               LDI     R18, LOW(`?<Constant "AD7715">`)
   \   0000019A   ....               LDI     R19, (`?<Constant "AD7715">`) >> 8
   \   0000019C   ....               LDI     R16, LOW(TCB_AD7715)
   \   0000019E   ....               LDI     R17, (TCB_AD7715) >> 8
   \   000001A0   ........           CALL    OS_CreateTask_D
     58                  break;
   \   000001A4   C015               RJMP    ??main_2
     59              case 0x02:                                          // AN-ZBANA 
     60                  break;
     61              case 0x03:                                          // AN-HART 
     62                  OS_CREATETASK(&TCB_AD7715, "AD7715", AD7715,  90, Stack10);
   \                     ??main_3:
   \   000001A6   E002               LDI     R16, 2
   \   000001A8   E010               LDI     R17, 0
   \   000001AA   931A               ST      -Y, R17
   \   000001AC   930A               ST      -Y, R16
   \   000001AE   EB02               LDI     R16, 178
   \   000001B0   E010               LDI     R17, 0
   \   000001B2   931A               ST      -Y, R17
   \   000001B4   930A               ST      -Y, R16
   \   000001B6   ....               LDI     R16, LOW(Stack10)
   \   000001B8   ....               LDI     R17, (Stack10) >> 8
   \   000001BA   931A               ST      -Y, R17
   \   000001BC   930A               ST      -Y, R16
   \   000001BE   ....               LDI     R22, LOW(AD7715/2)
   \   000001C0   ....               LDI     R23, (AD7715/2) >> 8
   \   000001C2   E54A               LDI     R20, 90
   \   000001C4   ....               LDI     R18, LOW(`?<Constant "AD7715">`)
   \   000001C6   ....               LDI     R19, (`?<Constant "AD7715">`) >> 8
   \   000001C8   ....               LDI     R16, LOW(TCB_AD7715)
   \   000001CA   ....               LDI     R17, (TCB_AD7715) >> 8
   \   000001CC   ........           CALL    OS_CreateTask_D
     63                  break;
     64              }
     65          
     66              OS_CREATETASK(&TCB_WATCHDOG, "Watch dog", WatchDogHandler, 50, Stack3);
   \                     ??main_2:
   \   000001D0   E002               LDI     R16, 2
   \   000001D2   E010               LDI     R17, 0
   \   000001D4   931A               ST      -Y, R17
   \   000001D6   930A               ST      -Y, R16
   \   000001D8   E604               LDI     R16, 100
   \   000001DA   E010               LDI     R17, 0
   \   000001DC   931A               ST      -Y, R17
   \   000001DE   930A               ST      -Y, R16
   \   000001E0   ....               LDI     R16, LOW(Stack3)
   \   000001E2   ....               LDI     R17, (Stack3) >> 8
   \   000001E4   931A               ST      -Y, R17
   \   000001E6   930A               ST      -Y, R16
   \   000001E8   ....               LDI     R22, LOW(WatchDogHandler/2)
   \   000001EA   ....               LDI     R23, (WatchDogHandler/2) >> 8
   \   000001EC   E342               LDI     R20, 50
   \   000001EE   ....               LDI     R18, LOW(`?<Constant "Watch dog">`)
   \   000001F0   ....               LDI     R19, (`?<Constant "Watch dog">`) >> 8
   \   000001F2   ....               LDI     R16, LOW(TCB_WATCHDOG)
   \   000001F4   ....               LDI     R17, (TCB_WATCHDOG) >> 8
   \   000001F6   ........           CALL    OS_CreateTask_D
     67              OS_Start();                                         // Start multitasking
   \   000001FA   ........           CALL    OS_Start
     68          }
   \   000001FE   9508               RET
   \   00000200                      REQUIRE _A_WDTCSR

   \                                 In  segment NEAR_ID, align 1, keep-with-next
   \                     `?<Initializer for <Constant "USART0">>`:
   \   00000000   535552413054       DC8 "USART0"
   \              00          

   \                                 In  segment NEAR_ID, align 1, keep-with-next
   \                     `?<Initializer for <Constant "USART1">>`:
   \   00000000   535552413154       DC8 "USART1"
   \              00          

   \                                 In  segment NEAR_ID, align 1, keep-with-next
   \                     `?<Initializer for <Constant "ExtRS485_Control"`:
   \   00000000   784552743453       DC8 "ExtRS485_Control"
   \              3538435F6E6F
   \              72746C6F00  

   \                                 In  segment NEAR_ID, align 1, keep-with-next
   \                     `?<Initializer for <Constant "ExtRS485_Receive"`:
   \   00000000   784552743453       DC8 "ExtRS485_Receive"
   \              3538525F6365
   \              6965657600  

   \                                 In  segment NEAR_ID, align 1, keep-with-next
   \                     `?<Initializer for <Constant "AD7715">>`:
   \   00000000   444137373531       DC8 "AD7715"
   \              00          

   \                                 In  segment NEAR_ID, align 1, keep-with-next
   \                     `?<Initializer for <Constant "Watch dog">>`:
   \   00000000   615763742068       DC8 "Watch dog"
   \              6F640067    

   \                                 In  segment NEAR_I, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_I>`
   \                     `?<Constant "USART0">`:
   \   00000000                      DS8 7
   \   00000007                      REQUIRE `?<Initializer for <Constant "USART0">>`

   \                                 In  segment NEAR_I, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_I>`
   \                     `?<Constant "USART1">`:
   \   00000000                      DS8 7
   \   00000007                      REQUIRE `?<Initializer for <Constant "USART1">>`

   \                                 In  segment NEAR_I, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_I>`
   \                     `?<Constant "ExtRS485_Control">`:
   \   00000000                      DS8 17
   \   00000011                      REQUIRE `?<Initializer for <Constant "ExtRS485_Control"`

   \                                 In  segment NEAR_I, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_I>`
   \                     `?<Constant "ExtRS485_Receive">`:
   \   00000000                      DS8 17
   \   00000011                      REQUIRE `?<Initializer for <Constant "ExtRS485_Receive"`

   \                                 In  segment NEAR_I, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_I>`
   \                     `?<Constant "AD7715">`:
   \   00000000                      DS8 7
   \   00000007                      REQUIRE `?<Initializer for <Constant "AD7715">>`

   \                                 In  segment NEAR_I, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_I>`
   \                     `?<Constant "Watch dog">`:
   \   00000000                      DS8 10
   \   0000000A                      REQUIRE `?<Initializer for <Constant "Watch dog">>`
     69          

   Maximum stack usage in bytes:

   CSTACK RSTACK Function
   ------ ------ --------
      6      2   main
        0      2   -> InitSystem
        0      2   -> OS_CreateRSema
        0      2   -> OS_CreateTask_D
        0      2   -> OS_CreateTimer
        0      2   -> OS_InitHW
        0      2   -> OS_InitKern
        0      2   -> OS_Start
        0      2   -> OS_StartTimer


   Segment part sizes:

   Bytes  Function/Label
   -----  --------------
       7  ?<Constant "AD7715">
      17  ?<Constant "ExtRS485_Control">
      17  ?<Constant "ExtRS485_Receive">
       7  ?<Constant "USART0">
       7  ?<Constant "USART1">
      10  ?<Constant "Watch dog">
       7  ?<Initializer for <Constant "AD7715">>
      17  ?<Initializer for <Constant "ExtRS485_Control"
      17  ?<Initializer for <Constant "ExtRS485_Receive"
       7  ?<Initializer for <Constant "USART0">>
       7  ?<Initializer for <Constant "USART1">>
      10  ?<Initializer for <Constant "Watch dog">>
       1  ADChannel
      16  ADInt
       1  EEPWriteOK
       1  PortPair
       1  RestartStatus
     120  RxBuf16552Ch0
     120  RxBuf16552Ch1
     150  RxBufferCh0
     150  RxBufferCh1
     160  Stack0
     160  Stack1
     178  Stack10
     178  Stack11
     100  Stack3
      22  TCB_AD7715
      22  TCB_RS485Ctl
      22  TCB_RS485Rec
      22  TCB_USART0
      22  TCB_USART1
      22  TCB_WATCHDOG
    1564  TData
      10  TimerUART0
      10  TimerUART1
      10  TimerUSART0
      10  TimerUSART0On
      10  TimerUSART1
      10  TimerUSART1On
      60  TxBuf16552Ch0
      60  TxBuf16552Ch1
     275  TxBufferCh0
     275  TxBufferCh1
      52  UART
      52  UART16552
       8  UARTSEND
       1  UnitID
       1  WriteCount
       1  _A_WDTCSR
     256  crc
       1  hostAddress
     512  main
       2  pWriteBuffer
      14  -- Other

 
     1 byte  in segment ABSOLUTE
   512 bytes in segment CODE
   256 bytes in segment FAR_F
    14 bytes in segment INITTAB
    65 bytes in segment NEAR_I
    65 bytes in segment NEAR_ID
 3 879 bytes in segment NEAR_Z
 
   833 bytes of CODE memory (+ 14 bytes shared)
 3 944 bytes of DATA memory (+  1 byte  shared)

Errors: none
Warnings: none
