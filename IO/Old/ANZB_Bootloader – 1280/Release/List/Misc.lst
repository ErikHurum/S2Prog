###############################################################################
#
# IAR C/C++ Compiler V7.30.5.1680 for Microchip AVR       12/Dec/2022  12:54:01
# Copyright 1996-2022 IAR Systems AB.
# Mobile license - IAR Embedded Workbench for Microchip AVR 7.30
#
#    Source file  =  D:\S2Prog\IO\ANZB_Bootloader – 1280\Src\Misc.c
#    Command line =  
#        -f C:\Users\ESY\AppData\Local\Temp\EWDD43.tmp
#        ("D:\S2Prog\IO\ANZB_Bootloader – 1280\Src\Misc.c" --cpu=m1280 -ms -o
#        "D:\S2Prog\IO\ANZB_Bootloader – 1280\Release\Obj" -D SPEED=38400 -lC
#        "D:\S2Prog\IO\ANZB_Bootloader – 1280\Release\List" -y
#        --initializers_in_flash --no_tbaa -DENABLE_BIT_DEFINITIONS -e -I
#        "D:\S2Prog\IO\ANZB_Bootloader – 1280\INC\\" -I
#        "D:\S2Prog\IO\ANZB_Bootloader – 1280\..\..\SHARED\INC\\" --eeprom_size
#        4096 --clib -Oh)
#    Locale       =  Norwegian Bokmål_NOR.1252
#    List file    =  D:\S2Prog\IO\ANZB_Bootloader – 1280\Release\List\Misc.lst
#    Object file  =  D:\S2Prog\IO\ANZB_Bootloader – 1280\Release\Obj\Misc.r90
#
###############################################################################

D:\S2Prog\IO\ANZB_Bootloader – 1280\Src\Misc.c
      1          /****************************************************************************************
      2          /  Misc. routines
      3          /
      4          ***************************************************************************************/
      5          #include "iom128.h"

   \                                 In  segment ABSOLUTE, at 0x30
   \   union <unnamed> volatile __io _A_PIND
   \                     _A_PIND:
   \   00000000                      DS8 1
      6          #include "stdio.h"
      7          #include "math.h"
      8          #include "externals.h"
      9          #include "inavr.h"
     10          #include "string.h"
     11          
     12          
     13          /*************************************************************************
     14          *
     15          *  Get my address
     16          *
     17          *************************************************************************/

   \                                 In  segment CODE, align 2, keep-with-next
     18          char MyAddress(void) {
   \                     MyAddress:
     19          
     20              return (~(PIND>>4) & 0x0f) ;
   \   00000000   B300               IN      R16, 0x10
   \   00000002   9502               SWAP    R16
   \   00000004   700F               ANDI    R16, 0x0F
   \   00000006   9500               COM     R16
   \   00000008   700F               ANDI    R16, 0x0F
   \   0000000A   9508               RET
   \   0000000C                      REQUIRE _A_PIND
     21          }

   Maximum stack usage in bytes:

   RSTACK Function
   ------ --------
      2   MyAddress


   Segment part sizes:

   Bytes  Function/Label
   -----  --------------
      12  MyAddress
       1  _A_PIND

 
  1 byte  in segment ABSOLUTE
 12 bytes in segment CODE
 
 12 bytes of CODE memory
  0 bytes of DATA memory (+ 1 byte shared)

Errors: none
Warnings: none
