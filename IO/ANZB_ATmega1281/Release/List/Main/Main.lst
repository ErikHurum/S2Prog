###############################################################################
#
# IAR C/C++ Compiler V8.10.1.1784/W64 for Microchip AVR   02/May/2023  12:40:43
# Copyright 1996-2023 IAR Systems AB.
# Mobile license - IAR Embedded Workbench for Microchip AVR 8.10
#
#    Source file           =  D:\S2Prog\IO\ANZB_ATmega1281\Src\Main.c
#    Command line          =
#        -f D:\S2Prog\IO\ANZB_ATmega1281\Release\Obj\Main\Main.r90.rsp
#        (D:\S2Prog\IO\ANZB_ATmega1281\Src\Main.c --cpu=m1281 -ms -o
#        D:\S2Prog\IO\ANZB_ATmega1281\Release\Obj\Main -D OS_LIBMODE_S -D
#        OS_UART=-1 -D USE_16552_DRIVER_TASK=1 -lCN
#        D:\S2Prog\IO\ANZB_ATmega1281\Release\List\Main -y
#        --initializers_in_flash --no_tbaa --enable_external_bus
#        -DENABLE_BIT_DEFINITIONS -e -I D:\S2Prog\IO\ANZB_ATmega1281\INC\ -I
#        D:\S2Prog\IO\ANZB_ATmega1281\..\..\SHARED\INC\ --eeprom_size 4096
#        --clib -Oh) --dependencies=n
#        D:\S2Prog\IO\ANZB_ATmega1281\Release\Obj\Main\Main.r90.iar_deps
#    Locale                =  C
#    List file             =
#        D:\S2Prog\IO\ANZB_ATmega1281\Release\List\Main\Main.lst
#    Object file           =
#        D:\S2Prog\IO\ANZB_ATmega1281\Release\Obj\Main\Main.r90
#    Runtime model:           
#      __64bit_doubles     =  disabled
#      __SystemLibrary     =  CLib
#      __architecture      =  *
#      __cpu               =  3
#      __cpu_name          =  ATmega1281
#      __dlib_version      =  clib
#      __enhanced_core     =  enabled
#      __enhanced_core_mul =  enabled
#      __has_elpm          =  true
#      __memory_model      =  2
#      __mex               =  disabled
#      __no_rampd          =  enabled
#      __rt_version        =  3
#      __vtable_memory     =  __nearflash
#
###############################################################################

D:\S2Prog\IO\ANZB_ATmega1281\Src\Main.c
      1          /**********************************************************
      2          *  
      3          *   Main file for AN-ZB* program       
      4          *  
      5          ***********************************************************/
      6          
      7          #include "iom1281.h"

   \                                 In  segment ABSOLUTE, at 0x60
   \   __no_init union <unnamed>#309 volatile __io _A_WDTCSR
   \                     _A_WDTCSR:
   \   00000000                      DS8 1
      8          #include "stdio.h"
      9          #include "math.h"
     10          #include "variables.h"

   \                                 In  segment FAR_F, align 1, keep-with-next
   \   char const __farflash crc[256]
   \                     crc:
   \   00000000   5E00E2BC3F61       DC8 0, 94, 188, 226, 97, 63, 221, 131, 194, 156, 126, 32, 163, 253, 31
   \              83DD9CC2207E
   \              FDA31F
   \   0000000F   9D4121C3FC7F       DC8 65, 157, 195, 33, 127, 252, 162, 64, 30, 95, 1, 227, 189, 62, 96
   \              40A25F1EE301
   \              3EBD60
   \   0000001E   DC827D23C19F       DC8 130, 220, 35, 125, 159, 193, 66, 28, 254, 160, 225, 191, 93, 3, 128
   \              1C42A0FEBFE1
   \              035D80
   \   0000002D   3CDEBE6202E0       DC8 222, 60, 98, 190, 224, 2, 92, 223, 129, 99, 61, 124, 34, 192, 158
   \              DF5C63817C3D
   \              C0229E
   \   0000003C   431DFFA11846       DC8 29, 67, 161, 255, 70, 24, 250, 164, 39, 121, 155, 197, 132, 218, 56
   \              A4FA7927C59B
   \              DA8438
   \   0000004B   E56659BBDB07       DC8 102, 229, 187, 89, 7, 219, 133, 103, 57, 186, 228, 6, 88, 25, 71
   \              6785BA3906E4
   \              195847
   \   0000005A   FBA526789AC4       DC8 165, 251, 120, 38, 196, 154, 101, 59, 217, 135, 4, 90, 184, 230
   \              3B6587D95A04
   \              E6B8
   \   00000068   F9A7451B98C6       DC8 167, 249, 27, 69, 198, 152, 122, 36, 248, 166, 68, 26, 153, 199, 37
   \              247AA6F81A44
   \              C79925
   \   00000077   3A7B86645BD8       DC8 123, 58, 100, 134, 216, 91, 5, 231, 185, 140, 210, 48, 110, 237
   \              E7058CB930D2
   \              ED6E
   \   00000085   51B34E0FF210       DC8 179, 81, 15, 78, 16, 242, 172, 47, 113, 147, 205, 17, 79, 173, 243
   \              2FAC937111CD
   \              AD4FF3
   \   00000094   2E7092CC8DD3       DC8 112, 46, 204, 146, 211, 141, 111, 49, 178, 236, 14, 80, 175, 241
   \              316FECB2500E
   \              F1AF
   \   000000A2   4D1390CE2C72       DC8 19, 77, 206, 144, 114, 44, 109, 51, 209, 143, 12, 82, 176, 238, 50
   \              336D8FD1520C
   \              EEB032
   \   000000B1   8E6C53D0EF0D       DC8 108, 142, 208, 83, 13, 239, 177, 240, 174, 76, 18, 145, 207, 45
   \              F0B14CAE9112
   \              2DCF
   \   000000BF   CA737694AB28       DC8 115, 202, 148, 118, 40, 171, 245, 23, 73, 8, 86, 180, 234, 105, 55
   \              17F50849B456
   \              69EA37
   \   000000CE   8BD50957B5EB       DC8 213, 139, 87, 9, 235, 181, 54, 104, 138, 212, 149, 203, 41, 119
   \              6836D48ACB95
   \              7729
   \   000000DC   AAF41648B7E9       DC8 244, 170, 72, 22, 233, 183, 85, 11, 136, 214, 52, 106, 43, 117, 151
   \              0B55D6886A34
   \              752B97
   \   000000EB   4AC9F61474A8       DC8 201, 74, 20, 246, 168, 116, 42, 200, 150, 21, 75, 169, 247, 182
   \              C82A1596A94B
   \              B6F7
   \   000000F9   0AE8D7546B89       DC8 232, 10, 84, 215, 137, 107, 53
   \              35

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \   char UnitID
   \                     UnitID:
   \   00000000                      DS8 1
     11          #include "version.h"
     12          #include "inavr.h"
     13          #include "string.h"
     14          
     15          
     16          OS_STACKPTR int Stack0[80], Stack1[80], Stack3[50], Stack10[128], Stack11[128]; /* Task stacks */
     17          OS_TASK     TCB_USART0, TCB_USART1, TCB_WATCHDOG, TCB_RS485Ctl, TCB_RS485Rec, TCB_AD7715;               /* Task-control-blocks */
   \                     TCB_USART0:
   \   00000001                      DS8 24
   \                     TCB_USART1:
   \   00000019                      DS8 24
   \                     TCB_WATCHDOG:
   \   00000031                      DS8 24
   \                     TCB_RS485Ctl:
   \   00000049                      DS8 24
   \                     TCB_RS485Rec:
   \   00000061                      DS8 24
   \                     TCB_AD7715:
   \   00000079                      DS8 24
     18          OS_RSEMA    UARTSEND;
   \                     UARTSEND:
   \   00000091                      DS8 7
     19          OS_TIMER    TimerUSART0, TimerUSART1, TimerUART0, TimerUART1, TimerUSART0On, TimerUSART1On;
   \                     TimerUSART0:
   \   00000098                      DS8 9
   \                     TimerUSART1:
   \   000000A1                      DS8 9
   \                     TimerUART0:
   \   000000AA                      DS8 9
   \                     TimerUART1:
   \   000000B3                      DS8 9
   \                     TimerUSART0On:
   \   000000BC                      DS8 9
   \                     TimerUSART1On:
   \   000000C5                      DS8 9

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \   char RestartStatus
   \                     RestartStatus:
   \   00000000                      DS8 1

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \   char volatile PortPair
   \                     PortPair:
   \   00000000                      DS8 1

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \   UARTDataType UART[2]
   \                     UART:
   \   00000000                      DS8 52

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \   UARTDataType UART16552[2]
   \                     UART16552:
   \   00000000                      DS8 52

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \   AnalogInt ADInt
   \                     ADInt:
   \   00000000                      DS8 16

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \   TargetData TData
   \                     TData:
   \   00000000                      DS8 1'564

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \   char TxBufferCh0[275]
   \                     TxBufferCh0:
   \   00000000                      DS8 275

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \   char RxBufferCh0[150]
   \                     RxBufferCh0:
   \   00000000                      DS8 150

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \   char TxBufferCh1[275]
   \                     TxBufferCh1:
   \   00000000                      DS8 275

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \   char RxBufferCh1[150]
   \                     RxBufferCh1:
   \   00000000                      DS8 150

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \   char TxBuf16552Ch0[60]
   \                     TxBuf16552Ch0:
   \   00000000                      DS8 60

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \   char RxBuf16552Ch0[120]
   \                     RxBuf16552Ch0:
   \   00000000                      DS8 120

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \   char TxBuf16552Ch1[60]
   \                     TxBuf16552Ch1:
   \   00000000                      DS8 60

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \   char RxBuf16552Ch1[120]
   \                     RxBuf16552Ch1:
   \   00000000                      DS8 120

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \   char volatile ADChannel
   \                     ADChannel:
   \   00000000                      DS8 1

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \   char WriteCount
   \                     WriteCount:
   \   00000000                      DS8 1

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \   char *__near pWriteBuffer
   \                     pWriteBuffer:
   \   00000000                      DS8 2

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \   char EEPWriteOK
   \                     EEPWriteOK:
   \   00000000                      DS8 1

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \   char volatile hostAddress
   \                     hostAddress:
   \   00000000                      DS8 1

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \                     Stack0:
   \   00000000                      DS8 160

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \                     Stack1:
   \   00000000                      DS8 160

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \                     Stack3:
   \   00000000                      DS8 100

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \                     Stack10:
   \   00000000                      DS8 256

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \                     Stack11:
   \   00000000                      DS8 256
     20          
     21          #if USE_MODBUS_PROTOCOL == 1
     22          OS_RSEMA    adc_lock;
     23          OS_RSEMA    rs485_tx_lock[2];
     24          #endif
     25          /**********************************************************
     26          *
     27          *       main
     28          *
     29          **********************************************************/
     30          

   \                                 In  segment CODE, align 2, keep-with-next
     31          void main(void) {
   \                     main:
   \   00000000                      REQUIRE __RSTACK_in_external_ram_new_way
     32              asm("WDR");                             // Enable watchdog here because the OS hang some times during startup
   \   00000000   95A8               WDR
     33              WDTCSR = 0x1f;
   \   00000002   E10F               LDI     R16, 31
   \   00000004   93000060           STS     96, R16
     34              WDTCSR = 0x0f;
   \   00000008   E00F               LDI     R16, 15
   \   0000000A   93000060           STS     96, R16
     35              asm("WDR");                             // kick the dog!!
   \   0000000E   95A8               WDR
     36          
     37              
     38              OS_IncDI();
   \   00000010   94F8               cli
   \   00000012   9100....           LDS     R16, (OS_Global + 1)
   \   00000016   9503               INC     R16
   \   00000018   9300....           STS     (OS_Global + 1), R16
     39              OS_InitKern();        /* initialize OS                 */
   \   0000001C   ........           CALL    OS_InitKern
     40              OS_InitHW();          /* initialize Hardware for OS    */
   \   00000020   ........           CALL    OS_InitHW
     41              InitSystem();           // init the system according to board
   \   00000024   ........           CALL    InitSystem
     42          
     43          #if USE_MODBUS_PROTOCOL == 0
     44              OS_CREATERSEMA(&UARTSEND);                          // semaphore for sending on UARTs
   \   00000028   ....               LDI     R16, LOW((UnitID + 145))
   \   0000002A   ....               LDI     R17, HIGH((UnitID + 145))
   \   0000002C   ........           CALL    OS_CreateRSema
     45              OS_CREATETASK(&TCB_USART0, "USART0", Usart0Handler, 110, Stack0);
   \   00000030   E002               LDI     R16, 2
   \   00000032   E010               LDI     R17, 0
   \   00000034   931A               ST      -Y, R17
   \   00000036   930A               ST      -Y, R16
   \   00000038   EA00               LDI     R16, 160
   \   0000003A   931A               ST      -Y, R17
   \   0000003C   930A               ST      -Y, R16
   \   0000003E   ....               LDI     R16, LOW(Stack0)
   \   00000040   ....               LDI     R17, (Stack0) >> 8
   \   00000042   931A               ST      -Y, R17
   \   00000044   930A               ST      -Y, R16
   \   00000046   ....               LDI     R22, LOW(Usart0Handler/2)
   \   00000048   ....               LDI     R23, (Usart0Handler/2) >> 8
   \   0000004A   E64E               LDI     R20, 110
   \   0000004C   ....               LDI     R18, LOW(`?<Constant "USART0">`)
   \   0000004E   ....               LDI     R19, (`?<Constant "USART0">`) >> 8
   \   00000050   ....               LDI     R16, LOW((UnitID + 1))
   \   00000052   ....               LDI     R17, HIGH((UnitID + 1))
   \   00000054   ........           CALL    OS_CreateTask_S
     46              OS_CREATETIMER(&TimerUSART0, TimoutUSART0, 200);                 // Start timeout timer RX on
   \   00000058   EC48               LDI     R20, 200
   \   0000005A   E050               LDI     R21, 0
   \   0000005C   ....               LDI     R18, LOW(TimoutUSART0/2)
   \   0000005E   ....               LDI     R19, (TimoutUSART0/2) >> 8
   \   00000060   ....               LDI     R16, LOW((UnitID + 152))
   \   00000062   ....               LDI     R17, HIGH((UnitID + 152))
   \   00000064   ........           CALL    OS_CreateTimer
   \   00000068   ....               LDI     R16, LOW((UnitID + 152))
   \   0000006A   ....               LDI     R17, HIGH((UnitID + 152))
   \   0000006C   ........           CALL    OS_StartTimer
     47              OS_CREATETIMER(&TimerUSART0On, TimoutUSART0On, 5);                 // Start on timer TX on
   \   00000070   E045               LDI     R20, 5
   \   00000072   E050               LDI     R21, 0
   \   00000074   ....               LDI     R18, LOW(TimoutUSART0On/2)
   \   00000076   ....               LDI     R19, (TimoutUSART0On/2) >> 8
   \   00000078   ....               LDI     R16, LOW((UnitID + 188))
   \   0000007A   ....               LDI     R17, HIGH((UnitID + 188))
   \   0000007C   ........           CALL    OS_CreateTimer
   \   00000080   ....               LDI     R16, LOW((UnitID + 188))
   \   00000082   ....               LDI     R17, HIGH((UnitID + 188))
   \   00000084   ........           CALL    OS_StartTimer
     48              OS_CREATETASK(&TCB_USART1, "USART1", Usart1Handler, 100, Stack1);
   \   00000088   E002               LDI     R16, 2
   \   0000008A   E010               LDI     R17, 0
   \   0000008C   931A               ST      -Y, R17
   \   0000008E   930A               ST      -Y, R16
   \   00000090   EA00               LDI     R16, 160
   \   00000092   931A               ST      -Y, R17
   \   00000094   930A               ST      -Y, R16
   \   00000096   ....               LDI     R16, LOW(Stack1)
   \   00000098   ....               LDI     R17, (Stack1) >> 8
   \   0000009A   931A               ST      -Y, R17
   \   0000009C   930A               ST      -Y, R16
   \   0000009E   ....               LDI     R22, LOW(Usart1Handler/2)
   \   000000A0   ....               LDI     R23, (Usart1Handler/2) >> 8
   \   000000A2   E644               LDI     R20, 100
   \   000000A4   ....               LDI     R18, LOW((`?<Constant "USART0">` + 7))
   \   000000A6   ....               LDI     R19, HIGH((`?<Constant "USART0">` + 7))
   \   000000A8   ....               LDI     R16, LOW((UnitID + 25))
   \   000000AA   ....               LDI     R17, HIGH((UnitID + 25))
   \   000000AC   ........           CALL    OS_CreateTask_S
     49              OS_CREATETIMER(&TimerUSART1, TimoutUSART1, 200);                 // Start timeout timer RX on
   \   000000B0   EC48               LDI     R20, 200
   \   000000B2   E050               LDI     R21, 0
   \   000000B4   ....               LDI     R18, LOW(TimoutUSART1/2)
   \   000000B6   ....               LDI     R19, (TimoutUSART1/2) >> 8
   \   000000B8   ....               LDI     R16, LOW((UnitID + 161))
   \   000000BA   ....               LDI     R17, HIGH((UnitID + 161))
   \   000000BC   ........           CALL    OS_CreateTimer
   \   000000C0   ....               LDI     R16, LOW((UnitID + 161))
   \   000000C2   ....               LDI     R17, HIGH((UnitID + 161))
   \   000000C4   ........           CALL    OS_StartTimer
     50              OS_CREATETIMER(&TimerUSART1On, TimoutUSART1On, 5);                 // Start on timer TX on
   \   000000C8   E045               LDI     R20, 5
   \   000000CA   E050               LDI     R21, 0
   \   000000CC   ....               LDI     R18, LOW(TimoutUSART1On/2)
   \   000000CE   ....               LDI     R19, (TimoutUSART1On/2) >> 8
   \   000000D0   ....               LDI     R16, LOW((UnitID + 197))
   \   000000D2   ....               LDI     R17, HIGH((UnitID + 197))
   \   000000D4   ........           CALL    OS_CreateTimer
   \   000000D8   ....               LDI     R16, LOW((UnitID + 197))
   \   000000DA   ....               LDI     R17, HIGH((UnitID + 197))
   \   000000DC   ........           CALL    OS_StartTimer
     51          #else
     52              OS_CREATERSEMA(&UARTSEND); // semaphore for sending on UARTs
     53              OS_CREATERSEMA(&adc_lock); // semaphore for sending on UARTs
     54          
     55              OS_CREATERSEMA(&rs485_tx_lock[0]);
     56              OS_CREATERSEMA(&rs485_tx_lock[1]);
     57          
     58              {
     59                extern void modbus_rtu_task_init(void);
     60          
     61                modbus_rtu_task_init();
     62              }
     63          #endif
     64          
     65              switch (UnitID) {                                    // Starting taasks for modules:
   \   000000E0   9100....           LDS     R16, UnitID
   \   000000E4   2300               TST     R16
   \   000000E6   F021               BREQ    ??main_0
   \   000000E8   950A               DEC     R16
   \   000000EA   F409               BRNE    $+2+2
   \   000000EC   C046               RJMP    ??main_1
   \   000000EE   C05A               RJMP    ??main_2
     66              case 0x00:                                          // AN-ZB485 
     67                
     68                  OS_CREATETASK(&TCB_RS485Ctl, "ExtRS485_Control", ExtRS485Ctl, 80, Stack10);
   \                     ??main_0:
   \   000000F0   E002               LDI     R16, 2
   \   000000F2   E010               LDI     R17, 0
   \   000000F4   931A               ST      -Y, R17
   \   000000F6   930A               ST      -Y, R16
   \   000000F8   E000               LDI     R16, 0
   \   000000FA   E011               LDI     R17, 1
   \   000000FC   931A               ST      -Y, R17
   \   000000FE   930A               ST      -Y, R16
   \   00000100   ....               LDI     R16, LOW(Stack10)
   \   00000102   ....               LDI     R17, (Stack10) >> 8
   \   00000104   931A               ST      -Y, R17
   \   00000106   930A               ST      -Y, R16
   \   00000108   ....               LDI     R22, LOW(ExtRS485Ctl/2)
   \   0000010A   ....               LDI     R23, (ExtRS485Ctl/2) >> 8
   \   0000010C   E540               LDI     R20, 80
   \   0000010E   ....               LDI     R18, LOW((`?<Constant "USART0">` + 14))
   \   00000110   ....               LDI     R19, HIGH((`?<Constant "USART0">` + 14))
   \   00000112   ....               LDI     R16, LOW((UnitID + 73))
   \   00000114   ....               LDI     R17, HIGH((UnitID + 73))
   \   00000116   ........           CALL    OS_CreateTask_S
     69                  OS_CREATETIMER(&TimerUART0, TimoutUART0, 200);                 // Start timeout timer RX on
   \   0000011A   EC48               LDI     R20, 200
   \   0000011C   E050               LDI     R21, 0
   \   0000011E   ....               LDI     R18, LOW(TimoutUART0/2)
   \   00000120   ....               LDI     R19, (TimoutUART0/2) >> 8
   \   00000122   ....               LDI     R16, LOW((UnitID + 170))
   \   00000124   ....               LDI     R17, HIGH((UnitID + 170))
   \   00000126   ........           CALL    OS_CreateTimer
   \   0000012A   ....               LDI     R16, LOW((UnitID + 170))
   \   0000012C   ....               LDI     R17, HIGH((UnitID + 170))
   \   0000012E   ........           CALL    OS_StartTimer
     70                  OS_CREATETASK(&TCB_RS485Rec, "ExtRS485_Receive", ExtRS485Rec, 90, Stack11);
   \   00000132   E002               LDI     R16, 2
   \   00000134   E010               LDI     R17, 0
   \   00000136   931A               ST      -Y, R17
   \   00000138   930A               ST      -Y, R16
   \   0000013A   E000               LDI     R16, 0
   \   0000013C   E011               LDI     R17, 1
   \   0000013E   931A               ST      -Y, R17
   \   00000140   930A               ST      -Y, R16
   \   00000142   ....               LDI     R16, LOW(Stack11)
   \   00000144   ....               LDI     R17, (Stack11) >> 8
   \   00000146   931A               ST      -Y, R17
   \   00000148   930A               ST      -Y, R16
   \   0000014A   ....               LDI     R22, LOW(ExtRS485Rec/2)
   \   0000014C   ....               LDI     R23, (ExtRS485Rec/2) >> 8
   \   0000014E   E54A               LDI     R20, 90
   \   00000150   ....               LDI     R18, LOW((`?<Constant "USART0">` + 31))
   \   00000152   ....               LDI     R19, HIGH((`?<Constant "USART0">` + 31))
   \   00000154   ....               LDI     R16, LOW((UnitID + 97))
   \   00000156   ....               LDI     R17, HIGH((UnitID + 97))
   \   00000158   ........           CALL    OS_CreateTask_S
     71                  OS_CREATETIMER(&TimerUART1, TimoutUART1, 200);                 // Start timeout timer RX on
   \   0000015C   EC48               LDI     R20, 200
   \   0000015E   E050               LDI     R21, 0
   \   00000160   ....               LDI     R18, LOW(TimoutUART1/2)
   \   00000162   ....               LDI     R19, (TimoutUART1/2) >> 8
   \   00000164   ....               LDI     R16, LOW((UnitID + 179))
   \   00000166   ....               LDI     R17, HIGH((UnitID + 179))
   \   00000168   ........           CALL    OS_CreateTimer
   \   0000016C   ....               LDI     R16, LOW((UnitID + 179))
   \   0000016E   ....               LDI     R17, HIGH((UnitID + 179))
   \   00000170   ........           CALL    OS_StartTimer
     72          #if USE_16552_DRIVER_TASK == 1
     73                  {
     74                    extern void _16552_driver_task_init(void);
     75          
     76                    _16552_driver_task_init();
   \   00000174   ........           CALL    _16552_driver_task_init
     77                  }
     78          #endif
     79                  break;
   \   00000178   C015               RJMP    ??main_2
     80              case 0x01:                                          // AN-ZBANA 
     81                  OS_CREATETASK(&TCB_AD7715, "AD7715", AD7715,  90, Stack10);
   \                     ??main_1:
   \   0000017A   E002               LDI     R16, 2
   \   0000017C   E010               LDI     R17, 0
   \   0000017E   931A               ST      -Y, R17
   \   00000180   930A               ST      -Y, R16
   \   00000182   E000               LDI     R16, 0
   \   00000184   E011               LDI     R17, 1
   \   00000186   931A               ST      -Y, R17
   \   00000188   930A               ST      -Y, R16
   \   0000018A   ....               LDI     R16, LOW(Stack10)
   \   0000018C   ....               LDI     R17, (Stack10) >> 8
   \   0000018E   931A               ST      -Y, R17
   \   00000190   930A               ST      -Y, R16
   \   00000192   ....               LDI     R22, LOW(AD7715/2)
   \   00000194   ....               LDI     R23, (AD7715/2) >> 8
   \   00000196   E54A               LDI     R20, 90
   \   00000198   ....               LDI     R18, LOW((`?<Constant "USART0">` + 48))
   \   0000019A   ....               LDI     R19, HIGH((`?<Constant "USART0">` + 48))
   \   0000019C   ....               LDI     R16, LOW((UnitID + 121))
   \   0000019E   ....               LDI     R17, HIGH((UnitID + 121))
   \   000001A0   ........           CALL    OS_CreateTask_S
     82                  break;
     83              }
     84          
     85              OS_CREATETASK(&TCB_WATCHDOG, "Watch dog", WatchDogHandler, 50, Stack3);
   \                     ??main_2:
   \   000001A4   E002               LDI     R16, 2
   \   000001A6   E010               LDI     R17, 0
   \   000001A8   931A               ST      -Y, R17
   \   000001AA   930A               ST      -Y, R16
   \   000001AC   E604               LDI     R16, 100
   \   000001AE   931A               ST      -Y, R17
   \   000001B0   930A               ST      -Y, R16
   \   000001B2   ....               LDI     R16, LOW(Stack3)
   \   000001B4   ....               LDI     R17, (Stack3) >> 8
   \   000001B6   931A               ST      -Y, R17
   \   000001B8   930A               ST      -Y, R16
   \   000001BA   ....               LDI     R22, LOW(WatchDogHandler/2)
   \   000001BC   ....               LDI     R23, (WatchDogHandler/2) >> 8
   \   000001BE   E342               LDI     R20, 50
   \   000001C0   ....               LDI     R18, LOW((`?<Constant "USART0">` + 55))
   \   000001C2   ....               LDI     R19, HIGH((`?<Constant "USART0">` + 55))
   \   000001C4   ....               LDI     R16, LOW((UnitID + 49))
   \   000001C6   ....               LDI     R17, HIGH((UnitID + 49))
   \   000001C8   ........           CALL    OS_CreateTask_S
     86              OS_Start();                                         // Start multitasking
   \   000001CC   E001               LDI     R16, 1
   \   000001CE   9300....           STS     OS_Running, R16
   \   000001D2   ........           JMP     OS_StartASM
   \   000001D6                      REQUIRE _A_WDTCSR
     87          }

   \                                 In  segment NEAR_ID, align 1, keep-with-next
   \                     `?<Initializer for <Constant "USART0">>`:
   \   00000000   535552413054       DC8 "USART0"
   \              00
   \                     `?<Initializer for <Constant "USART1">>`:
   \   00000007   535552413154       DC8 "USART1"
   \              00
   \                     `?<Initializer for <Constant "ExtRS485_Control"`:
   \   0000000E   784552743453       DC8 "ExtRS485_Control"
   \              3538435F6E6F
   \              72746C6F00
   \                     `?<Initializer for <Constant "ExtRS485_Receive"`:
   \   0000001F   784552743453       DC8 "ExtRS485_Receive"
   \              3538525F6365
   \              6965657600
   \                     `?<Initializer for <Constant "AD7715">>`:
   \   00000030   444137373531       DC8 "AD7715"
   \              00
   \                     `?<Initializer for <Constant "Watch dog">>`:
   \   00000037   615763742068       DC8 "Watch dog"
   \              6F640067

   \                                 In  segment NEAR_I, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_I>`
   \                     `?<Constant "USART0">`:
   \   00000000                      DS8 7
   \   00000007                      REQUIRE `?<Initializer for <Constant "USART0">>`
   \   00000007                      DS8 7
   \   0000000E                      REQUIRE `?<Initializer for <Constant "USART1">>`
   \   0000000E                      DS8 17
   \   0000001F                      REQUIRE `?<Initializer for <Constant "ExtRS485_Control"`
   \   0000001F                      DS8 17
   \   00000030                      REQUIRE `?<Initializer for <Constant "ExtRS485_Receive"`
   \   00000030                      DS8 7
   \   00000037                      REQUIRE `?<Initializer for <Constant "AD7715">>`
   \   00000037                      DS8 10
   \   00000041                      REQUIRE `?<Initializer for <Constant "Watch dog">>`

   Maximum stack usage in bytes:

   CSTACK RSTACK Function
   ------ ------ --------
      6      2   main
        0      2   -> InitSystem
        0      2   -> OS_CreateRSema
        0      2   -> OS_CreateTask_S
        0      2   -> OS_CreateTimer
        0      2   -> OS_InitHW
        0      2   -> OS_InitKern
        0      2   -> OS_StartASM
        0      2   -> OS_StartTimer
        0      2   -> _16552_driver_task_init


   Segment part sizes:

   Bytes  Function/Label
   -----  --------------
      65  ?<Constant "USART0">
      65  ?<Initializer for <Constant "USART0">>
       1  ADChannel
      16  ADInt
       1  EEPWriteOK
       1  PortPair
       1  RestartStatus
     120  RxBuf16552Ch0
     120  RxBuf16552Ch1
     150  RxBufferCh0
     150  RxBufferCh1
     160  Stack0
     160  Stack1
     256  Stack10
     256  Stack11
     100  Stack3
   1'564  TData
      60  TxBuf16552Ch0
      60  TxBuf16552Ch1
     275  TxBufferCh0
     275  TxBufferCh1
      52  UART
      52  UART16552
     206  UnitID
          TCB_USART0
          TCB_USART1
          TCB_WATCHDOG
          TCB_RS485Ctl
          TCB_RS485Rec
          TCB_AD7715
          UARTSEND
          TimerUSART0
          TimerUSART1
          TimerUART0
          TimerUART1
          TimerUSART0On
          TimerUSART1On
       1  WriteCount
       1  _A_WDTCSR
     256  crc
       1  hostAddress
     470  main
       2  pWriteBuffer
      14  -- Other

 
     1 byte  in segment ABSOLUTE
   470 bytes in segment CODE
   256 bytes in segment FAR_F
    14 bytes in segment INITTAB
    65 bytes in segment NEAR_I
    65 bytes in segment NEAR_ID
 4'040 bytes in segment NEAR_Z
 
   791 bytes of CODE memory (+ 14 bytes shared)
 4'105 bytes of DATA memory (+  1 byte  shared)

Errors: none
Warnings: none
