###############################################################################
#
# IAR C/C++ Compiler V7.30.5.1680 for Microchip AVR       08/Feb/2024  10:48:56
# Copyright 1996-2022 IAR Systems AB.
# Mobile license - IAR Embedded Workbench for Microchip AVR 8.10
#
#    Source file  =  
#        C:\Users\ESY\OneDrive -
#        Scanjet\Documents\GitHub\S2Prog\IO\ANZB_ATmega1281\Src\Main.c
#    Command line =  
#        -f C:\Users\ESY\AppData\Local\Temp\EWA60F.tmp ("C:\Users\ESY\OneDrive
#        - Scanjet\Documents\GitHub\S2Prog\IO\ANZB_ATmega1281\Src\Main.c"
#        --cpu=m1281 -ms -o "C:\Users\ESY\OneDrive -
#        Scanjet\Documents\GitHub\S2Prog\IO\ANZB_ATmega1281\Release\Obj" -D
#        OS_LIBMODE_R -D OS_UART=-1 -D USE_16552_DRIVER_TASK=1 -D
#        USE_1281_RX_INT_TASK=1 -D USE_MODBUS_PROTOCOL=0 -D ANZBANA_V8=0 -D
#        __ATMEGA_1281__ -lCN "C:\Users\ESY\OneDrive -
#        Scanjet\Documents\GitHub\S2Prog\IO\ANZB_ATmega1281\Release\List" -y
#        --initializers_in_flash -DENABLE_BIT_DEFINITIONS -e -I
#        "C:\Users\ESY\OneDrive -
#        Scanjet\Documents\GitHub\S2Prog\IO\ANZB_ATmega1281\INC\\" -I
#        "C:\Users\ESY\OneDrive -
#        Scanjet\Documents\GitHub\S2Prog\IO\ANZB_ATmega1281\..\..\SHARED\INC\\"
#        --eeprom_size 4096 --clib -Ohs)
#    Locale       =  English_USA.1252
#    List file    =  
#        C:\Users\ESY\OneDrive -
#        Scanjet\Documents\GitHub\S2Prog\IO\ANZB_ATmega1281\Release\List\Main.lst
#    Object file  =  
#        C:\Users\ESY\OneDrive -
#        Scanjet\Documents\GitHub\S2Prog\IO\ANZB_ATmega1281\Release\Obj\Main.r90
#
###############################################################################

C:\Users\ESY\OneDrive - Scanjet\Documents\GitHub\S2Prog\IO\ANZB_ATmega1281\Src\Main.c
      1          /**********************************************************
      2          *  
      3          *   Main file for AN-ZB* program       
      4          *  
      5          ***********************************************************/
      6          
      7          #include "iom1281.h"
      8          #include "stdio.h"
      9          #include "math.h"
     10          #include "variables.h"

   \                                 In  segment FAR_F, align 1, keep-with-next
   \   char const __farflash crc[256]
   \                     crc:
   \   00000000   5E00E2BC3F61       DC8 0, 94, 188, 226, 97, 63, 221, 131, 194, 156, 126, 32, 163, 253, 31
   \              83DD9CC2207E
   \              FDA31F      
   \   0000000F   9D4121C3FC7F       DC8 65, 157, 195, 33, 127, 252, 162, 64, 30, 95, 1, 227, 189, 62, 96
   \              40A25F1EE301
   \              3EBD60      
   \   0000001E   DC827D23C19F       DC8 130, 220, 35, 125, 159, 193, 66, 28, 254, 160, 225, 191, 93, 3, 128
   \              1C42A0FEBFE1
   \              035D80      
   \   0000002D   3CDEBE6202E0       DC8 222, 60, 98, 190, 224, 2, 92, 223, 129, 99, 61, 124, 34, 192, 158
   \              DF5C63817C3D
   \              C0229E      
   \   0000003C   431DFFA11846       DC8 29, 67, 161, 255, 70, 24, 250, 164, 39, 121, 155, 197, 132, 218, 56
   \              A4FA7927C59B
   \              DA8438      
   \   0000004B   E56659BBDB07       DC8 102, 229, 187, 89, 7, 219, 133, 103, 57, 186, 228, 6, 88, 25, 71
   \              6785BA3906E4
   \              195847      
   \   0000005A   FBA526789AC4       DC8 165, 251, 120, 38, 196, 154, 101, 59, 217, 135, 4, 90, 184, 230
   \              3B6587D95A04
   \              E6B8        
   \   00000068   F9A7451B98C6       DC8 167, 249, 27, 69, 198, 152, 122, 36, 248, 166, 68, 26, 153, 199, 37
   \              247AA6F81A44
   \              C79925      
   \   00000077   3A7B86645BD8       DC8 123, 58, 100, 134, 216, 91, 5, 231, 185, 140, 210, 48, 110, 237
   \              E7058CB930D2
   \              ED6E        
   \   00000085   51B34E0FF210       DC8 179, 81, 15, 78, 16, 242, 172, 47, 113, 147, 205, 17, 79, 173, 243
   \              2FAC937111CD
   \              AD4FF3      
   \   00000094   2E7092CC8DD3       DC8 112, 46, 204, 146, 211, 141, 111, 49, 178, 236, 14, 80, 175, 241
   \              316FECB2500E
   \              F1AF        
   \   000000A2   4D1390CE2C72       DC8 19, 77, 206, 144, 114, 44, 109, 51, 209, 143, 12, 82, 176, 238, 50
   \              336D8FD1520C
   \              EEB032      
   \   000000B1   8E6C53D0EF0D       DC8 108, 142, 208, 83, 13, 239, 177, 240, 174, 76, 18, 145, 207, 45
   \              F0B14CAE9112
   \              2DCF        
   \   000000BF   CA737694AB28       DC8 115, 202, 148, 118, 40, 171, 245, 23, 73, 8, 86, 180, 234, 105, 55
   \              17F50849B456
   \              69EA37      
   \   000000CE   8BD50957B5EB       DC8 213, 139, 87, 9, 235, 181, 54, 104, 138, 212, 149, 203, 41, 119
   \              6836D48ACB95
   \              7729        
   \   000000DC   AAF41648B7E9       DC8 244, 170, 72, 22, 233, 183, 85, 11, 136, 214, 52, 106, 43, 117, 151
   \              0B55D6886A34
   \              752B97      
   \   000000EB   4AC9F61474A8       DC8 201, 74, 20, 246, 168, 116, 42, 200, 150, 21, 75, 169, 247, 182
   \              C82A1596A94B
   \              B6F7        
   \   000000F9   0AE8D7546B89       DC8 232, 10, 84, 215, 137, 107, 53
   \              35          

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \   char UnitID
   \                     UnitID:
   \   00000000                      DS8 1
     11          #include "version.h"
     12          #include "inavr.h"
     13          #include "string.h"
     14          
     15          
     16          OS_STACKPTR int Stack3[300], Stack10[300], Stack11[300]; /* Task stacks */
     17          
     18          OS_TASK     TCB_WATCHDOG, TCB_RS485Ctl, TCB_RS485Rec, TCB_AD7715;               /* Task-control-blocks */
   \                     TCB_WATCHDOG:
   \   00000001                      DS8 20
   \                     TCB_RS485Ctl:
   \   00000015                      DS8 20
   \                     TCB_RS485Rec:
   \   00000029                      DS8 20
   \                     TCB_AD7715:
   \   0000003D                      DS8 20
     19          OS_RSEMA    UARTSEND;
   \                     UARTSEND:
   \   00000051                      DS8 7
     20          #if USE_1281_RX_INT_TASK == 0
     21          OS_STACKPTR int Stack0[200], Stack1[200];
     22          OS_TIMER    TimerUSART0, TimerUSART1;
     23          OS_TASK     TCB_USART0, TCB_USART1;
     24          #endif
     25          OS_TIMER    TimerUART0, TimerUART1, TimerUSART0On, TimerUSART1On;
   \                     TimerUART0:
   \   00000058                      DS8 9
   \                     TimerUART1:
   \   00000061                      DS8 9
   \                     TimerUSART0On:
   \   0000006A                      DS8 9
   \                     TimerUSART1On:
   \   00000073                      DS8 9

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \   char RestartStatus
   \                     RestartStatus:
   \   00000000                      DS8 1

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \   char volatile PortPair
   \                     PortPair:
   \   00000000                      DS8 1

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \   UARTCPUDataType UART[2]
   \                     UART:
   \   00000000                      DS8 1018

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \   struct <unnamed> UART16552[2]
   \                     UART16552:
   \   00000000                      DS8 528

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \   AnalogInt ADInt
   \                     ADInt:
   \   00000000                      DS8 16

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \   TargetData TData
   \                     TData:
   \   00000000                      DS8 1564

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \   char volatile ADChannel
   \                     ADChannel:
   \   00000000                      DS8 1

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \   char WriteCount
   \                     WriteCount:
   \   00000000                      DS8 1

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \   char *__near pWriteBuffer
   \                     pWriteBuffer:
   \   00000000                      DS8 2

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \   char EEPWriteOK
   \                     EEPWriteOK:
   \   00000000                      DS8 1

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \   char volatile hostAddress
   \                     hostAddress:
   \   00000000                      DS8 1

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \                     Stack3:
   \   00000000                      DS8 600

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \                     Stack10:
   \   00000000                      DS8 600

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \                     Stack11:
   \   00000000                      DS8 600
     26          
     27          #if USE_MODBUS_PROTOCOL == 1
     28          OS_RSEMA    adc_lock;
     29          OS_RSEMA    rs485_tx_lock[2];
     30          #endif
     31          /**********************************************************
     32          *
     33          *       main
     34          *
     35          **********************************************************/
     36          

   \                                 In  segment CODE, align 2, keep-with-next
     37          void main(void) {
   \                     main:
     38              //asm("WDR");                             // Enable watchdog here because the OS hang some times during startup
     39              //WDTCSR = 0x1f;
     40              //WDTCSR = 0x0f;
     41              //asm("WDR");                             // kick the dog!!
     42          
     43              __watchdog_reset();               //kick the dog
   \   00000000   95A8               WDR
     44              
     45              //OS_IncDI();
     46              OS_InitKern();        /* initialize OS                 */
   \   00000002   ........           CALL    OS_InitKern
     47              OS_InitHW();          /* initialize Hardware for OS    */
   \   00000006   ........           CALL    OS_InitHW
     48              InitSystem();           // init the system according to board
   \   0000000A   ........           CALL    InitSystem
     49              WDT_Prescaler_Change();
   \   0000000E   ........           CALL    WDT_Prescaler_Change
     50          #if USE_MODBUS_PROTOCOL == 0
     51              OS_CREATERSEMA(&UARTSEND);                          // semaphore for sending on UARTs
   \   00000012   ....               LDI     R16, LOW((UnitID + 81))
   \   00000014   ....               LDI     R17, HIGH((UnitID + 81))
   \   00000016   ........           CALL    OS_CreateRSema
     52              // Create timers before tasks
     53          #if USE_1281_RX_INT_TASK == 1
     54          //    OS_CREATETIMER(&TimerUSART0, TimoutUSART0, 200);                 // Start timeout timer RX on
     55          //    OS_CREATETIMER(&TimerUSART1, TimoutUSART1, 200);                 // Start timeout timer RX on
     56          #endif
     57              OS_CREATETIMER(&TimerUSART0On, TimoutUSART0On, 5);                 // Start on timer TX on
   \   0000001A   E045               LDI     R20, 5
   \   0000001C   E050               LDI     R21, 0
   \   0000001E   ....               LDI     R18, LOW(TimoutUSART0On/2)
   \   00000020   ....               LDI     R19, (TimoutUSART0On/2) >> 8
   \   00000022   ....               LDI     R16, LOW((UnitID + 106))
   \   00000024   ....               LDI     R17, HIGH((UnitID + 106))
   \   00000026   ........           CALL    OS_CreateTimer
   \   0000002A   ....               LDI     R16, LOW((UnitID + 106))
   \   0000002C   ....               LDI     R17, HIGH((UnitID + 106))
   \   0000002E   ........           CALL    OS_StartTimer
     58              OS_CREATETIMER(&TimerUSART1On, TimoutUSART1On, 5);                 // Start on timer TX on
   \   00000032   E045               LDI     R20, 5
   \   00000034   E050               LDI     R21, 0
   \   00000036   ....               LDI     R18, LOW(TimoutUSART1On/2)
   \   00000038   ....               LDI     R19, (TimoutUSART1On/2) >> 8
   \   0000003A   ....               LDI     R16, LOW((UnitID + 115))
   \   0000003C   ....               LDI     R17, HIGH((UnitID + 115))
   \   0000003E   ........           CALL    OS_CreateTimer
   \   00000042   ....               LDI     R16, LOW((UnitID + 115))
   \   00000044   ....               LDI     R17, HIGH((UnitID + 115))
   \   00000046   ........           CALL    OS_StartTimer
     59          
     60          #if USE_1281_RX_INT_TASK == 1
     61                  {
     62                    extern void ATMega1281_driver_task_init(void);
     63                    ATMega1281_driver_task_init();
   \   0000004A   ........           CALL    ATMega1281_driver_task_init
     64                  }
     65          #else
     66          // Start UART tasks
     67              OS_CREATETASK(&TCB_USART0, "USART0", Usart0Handler, 110, Stack0);
     68              OS_CREATETASK(&TCB_USART1, "USART1", Usart1Handler, 100, Stack1);
     69          #endif
     70          #else
     71              OS_CREATERSEMA(&UARTSEND); // semaphore for sending on UARTs
     72              OS_CREATERSEMA(&adc_lock); // semaphore for sending on UARTs
     73          
     74              OS_CREATERSEMA(&rs485_tx_lock[0]);
     75              OS_CREATERSEMA(&rs485_tx_lock[1]);
     76          
     77              {
     78                extern void modbus_rtu_task_init(void);
     79          
     80                modbus_rtu_task_init();
     81              }
     82          #endif
     83          
     84              switch (UnitID) {                                    // Starting taasks for modules:
   \   0000004E   9100....           LDS     R16, UnitID
   \   00000052   2300               TST     R16
   \   00000054   F021               BREQ    ??main_0
   \   00000056   950A               DEC     R16
   \   00000058   F409               BRNE    $+2+2
   \   0000005A   C046               RJMP    ??main_1
   \   0000005C   C05A               RJMP    ??main_2
     85              case 0x00:                                          // AN-ZB485 
     86                
     87                  OS_CREATETASK(&TCB_RS485Ctl    , "ExtRS485_Control" , ExtRS485Ctl, 80, Stack10);
   \                     ??main_0:
   \   0000005E   E002               LDI     R16, 2
   \   00000060   E010               LDI     R17, 0
   \   00000062   931A               ST      -Y, R17
   \   00000064   930A               ST      -Y, R16
   \   00000066   E508               LDI     R16, 88
   \   00000068   E012               LDI     R17, 2
   \   0000006A   931A               ST      -Y, R17
   \   0000006C   930A               ST      -Y, R16
   \   0000006E   ....               LDI     R16, LOW(Stack10)
   \   00000070   ....               LDI     R17, (Stack10) >> 8
   \   00000072   931A               ST      -Y, R17
   \   00000074   930A               ST      -Y, R16
   \   00000076   ....               LDI     R22, LOW(ExtRS485Ctl/2)
   \   00000078   ....               LDI     R23, (ExtRS485Ctl/2) >> 8
   \   0000007A   E540               LDI     R20, 80
   \   0000007C   ....               LDI     R18, LOW(`?<Constant "ExtRS485_Control">`)
   \   0000007E   ....               LDI     R19, (`?<Constant "ExtRS485_Control">`) >> 8
   \   00000080   ....               LDI     R16, LOW((UnitID + 21))
   \   00000082   ....               LDI     R17, HIGH((UnitID + 21))
   \   00000084   ........           CALL    OS_CreateTask_R
     88                  OS_CREATETIMER(&TimerUART0, TimoutUART0, 200);                 // Start timeout timer RX on
   \   00000088   EC48               LDI     R20, 200
   \   0000008A   E050               LDI     R21, 0
   \   0000008C   ....               LDI     R18, LOW(TimoutUART0/2)
   \   0000008E   ....               LDI     R19, (TimoutUART0/2) >> 8
   \   00000090   ....               LDI     R16, LOW((UnitID + 88))
   \   00000092   ....               LDI     R17, HIGH((UnitID + 88))
   \   00000094   ........           CALL    OS_CreateTimer
   \   00000098   ....               LDI     R16, LOW((UnitID + 88))
   \   0000009A   ....               LDI     R17, HIGH((UnitID + 88))
   \   0000009C   ........           CALL    OS_StartTimer
     89                  OS_CREATETASK(&TCB_RS485Rec, "ExtRS485_Receive", ExtRS485Rec, 90, Stack11);
   \   000000A0   E002               LDI     R16, 2
   \   000000A2   E010               LDI     R17, 0
   \   000000A4   931A               ST      -Y, R17
   \   000000A6   930A               ST      -Y, R16
   \   000000A8   E508               LDI     R16, 88
   \   000000AA   E012               LDI     R17, 2
   \   000000AC   931A               ST      -Y, R17
   \   000000AE   930A               ST      -Y, R16
   \   000000B0   ....               LDI     R16, LOW(Stack11)
   \   000000B2   ....               LDI     R17, (Stack11) >> 8
   \   000000B4   931A               ST      -Y, R17
   \   000000B6   930A               ST      -Y, R16
   \   000000B8   ....               LDI     R22, LOW(ExtRS485Rec/2)
   \   000000BA   ....               LDI     R23, (ExtRS485Rec/2) >> 8
   \   000000BC   E54A               LDI     R20, 90
   \   000000BE   ....               LDI     R18, LOW((`?<Constant "ExtRS485_Control">` + 17))
   \   000000C0   ....               LDI     R19, HIGH((`?<Constant "ExtRS485_Control">` + 17))
   \   000000C2   ....               LDI     R16, LOW((UnitID + 41))
   \   000000C4   ....               LDI     R17, HIGH((UnitID + 41))
   \   000000C6   ........           CALL    OS_CreateTask_R
     90                  OS_CREATETIMER(&TimerUART1, TimoutUART1, 200);                 // Start timeout timer RX on
   \   000000CA   EC48               LDI     R20, 200
   \   000000CC   E050               LDI     R21, 0
   \   000000CE   ....               LDI     R18, LOW(TimoutUART1/2)
   \   000000D0   ....               LDI     R19, (TimoutUART1/2) >> 8
   \   000000D2   ....               LDI     R16, LOW((UnitID + 97))
   \   000000D4   ....               LDI     R17, HIGH((UnitID + 97))
   \   000000D6   ........           CALL    OS_CreateTimer
   \   000000DA   ....               LDI     R16, LOW((UnitID + 97))
   \   000000DC   ....               LDI     R17, HIGH((UnitID + 97))
   \   000000DE   ........           CALL    OS_StartTimer
     91          #if USE_16552_DRIVER_TASK == 1
     92                  {
     93                    extern void _16552_driver_task_init(void);
     94                    _16552_driver_task_init();
   \   000000E2   ........           CALL    _16552_driver_task_init
     95                  }
     96          #endif
     97                  break;
   \   000000E6   C015               RJMP    ??main_2
     98              case 0x01:                                          // AN-ZBANA 
     99                  OS_CREATETASK(&TCB_AD7715, "AD7715", AD7715,  90, Stack10);
   \                     ??main_1:
   \   000000E8   E002               LDI     R16, 2
   \   000000EA   E010               LDI     R17, 0
   \   000000EC   931A               ST      -Y, R17
   \   000000EE   930A               ST      -Y, R16
   \   000000F0   E508               LDI     R16, 88
   \   000000F2   E012               LDI     R17, 2
   \   000000F4   931A               ST      -Y, R17
   \   000000F6   930A               ST      -Y, R16
   \   000000F8   ....               LDI     R16, LOW(Stack10)
   \   000000FA   ....               LDI     R17, (Stack10) >> 8
   \   000000FC   931A               ST      -Y, R17
   \   000000FE   930A               ST      -Y, R16
   \   00000100   ....               LDI     R22, LOW(AD7715/2)
   \   00000102   ....               LDI     R23, (AD7715/2) >> 8
   \   00000104   E54A               LDI     R20, 90
   \   00000106   ....               LDI     R18, LOW((`?<Constant "ExtRS485_Control">` + 34))
   \   00000108   ....               LDI     R19, HIGH((`?<Constant "ExtRS485_Control">` + 34))
   \   0000010A   ....               LDI     R16, LOW((UnitID + 61))
   \   0000010C   ....               LDI     R17, HIGH((UnitID + 61))
   \   0000010E   ........           CALL    OS_CreateTask_R
    100                  break;
    101              }
    102          
    103              OS_CREATETASK(&TCB_WATCHDOG, "Watch dog", WatchDogHandler, 50, Stack3);
   \                     ??main_2:
   \   00000112   E002               LDI     R16, 2
   \   00000114   E010               LDI     R17, 0
   \   00000116   931A               ST      -Y, R17
   \   00000118   930A               ST      -Y, R16
   \   0000011A   E508               LDI     R16, 88
   \   0000011C   E012               LDI     R17, 2
   \   0000011E   931A               ST      -Y, R17
   \   00000120   930A               ST      -Y, R16
   \   00000122   ....               LDI     R16, LOW(Stack3)
   \   00000124   ....               LDI     R17, (Stack3) >> 8
   \   00000126   931A               ST      -Y, R17
   \   00000128   930A               ST      -Y, R16
   \   0000012A   ....               LDI     R22, LOW(WatchDogHandler/2)
   \   0000012C   ....               LDI     R23, (WatchDogHandler/2) >> 8
   \   0000012E   E342               LDI     R20, 50
   \   00000130   ....               LDI     R18, LOW((`?<Constant "ExtRS485_Control">` + 41))
   \   00000132   ....               LDI     R19, HIGH((`?<Constant "ExtRS485_Control">` + 41))
   \   00000134   ....               LDI     R16, LOW((UnitID + 1))
   \   00000136   ....               LDI     R17, HIGH((UnitID + 1))
   \   00000138   ........           CALL    OS_CreateTask_R
    104              OS_Start();                                         // Start multitasking
   \   0000013C   E001               LDI     R16, 1
   \   0000013E   9300....           STS     OS_Running, R16
   \   00000142   ........           JMP     OS_StartASM
    105          }

   \                                 In  segment NEAR_ID, align 1, keep-with-next
   \                     `?<Initializer for <Constant "ExtRS485_Control"`:
   \   00000000   784552743453       DC8 "ExtRS485_Control"
   \              3538435F6E6F
   \              72746C6F00  
   \                     `?<Initializer for <Constant "ExtRS485_Receive"`:
   \   00000011   784552743453       DC8 "ExtRS485_Receive"
   \              3538525F6365
   \              6965657600  
   \                     `?<Initializer for <Constant "AD7715">>`:
   \   00000022   444137373531       DC8 "AD7715"
   \              00          
   \                     `?<Initializer for <Constant "Watch dog">>`:
   \   00000029   615763742068       DC8 "Watch dog"
   \              6F640067    

   \                                 In  segment NEAR_I, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_I>`
   \                     `?<Constant "ExtRS485_Control">`:
   \   00000000                      DS8 17
   \   00000011                      REQUIRE `?<Initializer for <Constant "ExtRS485_Control"`
   \   00000011                      DS8 17
   \   00000022                      REQUIRE `?<Initializer for <Constant "ExtRS485_Receive"`
   \   00000022                      DS8 7
   \   00000029                      REQUIRE `?<Initializer for <Constant "AD7715">>`
   \   00000029                      DS8 10
   \   00000033                      REQUIRE `?<Initializer for <Constant "Watch dog">>`

   Maximum stack usage in bytes:

   CSTACK RSTACK Function
   ------ ------ --------
      6      2   main
        0      2   -> ATMega1281_driver_task_init
        0      2   -> InitSystem
        0      2   -> OS_CreateRSema
        0      2   -> OS_CreateTask_R
        0      2   -> OS_CreateTimer
        0      2   -> OS_InitHW
        0      2   -> OS_InitKern
        0      2   -> OS_StartASM
        0      2   -> OS_StartTimer
        0      2   -> WDT_Prescaler_Change
        0      2   -> _16552_driver_task_init


   Segment part sizes:

   Bytes  Function/Label
   -----  --------------
      51  ?<Constant "ExtRS485_Control">
      51  ?<Initializer for <Constant "ExtRS485_Control"
       1  ADChannel
      16  ADInt
       1  EEPWriteOK
       1  PortPair
       1  RestartStatus
     600  Stack10
     600  Stack11
     600  Stack3
    1564  TData
    1018  UART
     528  UART16552
     124  UnitID
          TCB_WATCHDOG
          TCB_RS485Ctl
          TCB_RS485Rec
          TCB_AD7715
          UARTSEND
          TimerUART0
          TimerUART1
          TimerUSART0On
          TimerUSART1On
       1  WriteCount
     256  crc
       1  hostAddress
     326  main
       2  pWriteBuffer
      14  -- Other

 
   326 bytes in segment CODE
   256 bytes in segment FAR_F
    14 bytes in segment INITTAB
    51 bytes in segment NEAR_I
    51 bytes in segment NEAR_ID
 5 058 bytes in segment NEAR_Z
 
   633 bytes of CODE memory (+ 14 bytes shared)
 5 109 bytes of DATA memory

Errors: none
Warnings: none
