###############################################################################
#
# IAR C/C++ Compiler V7.30.5.1680 for Microchip AVR       29/Dec/2022  11:10:00
# Copyright 1996-2022 IAR Systems AB.
# Mobile license - IAR Embedded Workbench for Microchip AVR 7.30
#
#    Source file  =  D:\S2Prog\IO\hart active\Src\Misc.c
#    Command line =  
#        -f C:\Users\ESY\AppData\Local\Temp\EW9495.tmp ("D:\S2Prog\IO\hart
#        active\Src\Misc.c" --cpu=m1280 -ms -o "D:\S2Prog\IO\hart
#        active\Release_debug\Obj" -D OS_LIBMODE_S -D OS_UART=-1 -lCN
#        "D:\S2Prog\IO\hart active\Release_debug\List" -y
#        --initializers_in_flash -DENABLE_BIT_DEFINITIONS -e -I
#        "D:\S2Prog\IO\hart active\INC\\" -I "D:\S2Prog\IO\hart
#        active\..\..\SHARED\INC\\" --eeprom_size 4096 --dlib --dlib_config
#        "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        8.4\avr\LIB\DLIB\dlAVR-3s-ec_mul-n.h" -Ohs)
#    Locale       =  Norwegian Bokmål_NOR.1252
#    List file    =  D:\S2Prog\IO\hart active\Release_debug\List\Misc.lst
#    Object file  =  D:\S2Prog\IO\hart active\Release_debug\Obj\Misc.r90
#
###############################################################################

D:\S2Prog\IO\hart active\Src\Misc.c
      1          /****************************************************************************************
      2          /  Misc. routines
      3          /
      4          ***************************************************************************************/
      5          #include "iom1280.h"

   \                                 In  segment ABSOLUTE, at 0x60
   \   union <unnamed> volatile __io _A_WDTCSR
   \                     _A_WDTCSR:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0x2c
   \   union <unnamed> volatile __io _A_PINE
   \                     _A_PINE:
   \   00000000                      DS8 1
      6          #include "stdio.h"
      7          #include "stdlib.h"
      8          #include "math.h"
      9          #include "externals.h"
     10          #include "version.h"
     11          #include "inavr.h"
     12          #include "string.h"
     13          #include "hart.h"
     14          

   \                                 In  segment ABSOLUTE, at 0x21fd
     15          __no_init volatile int RestartCnt             @0x21FD;
   \                     RestartCnt:
   \   00000000                      DS8 2
     16          
     17          /*************************************************************************
     18          *   (This is a task)
     19          *  Watchdog handler
     20          *
     21          *************************************************************************/

   \                                 In  segment CODE, align 2, keep-with-next
     22          void WatchDogHandler(void) {
   \                     WatchDogHandler:
   \   00000000   927A               ST      -Y, R7
   \   00000002   926A               ST      -Y, R6
   \   00000004   925A               ST      -Y, R5
   \   00000006   924A               ST      -Y, R4
   \   00000008   93AA               ST      -Y, R26
   \   0000000A                      REQUIRE ?Register_R4_is_cg_reg
   \   0000000A                      REQUIRE ?Register_R5_is_cg_reg
   \   0000000A                      REQUIRE ?Register_R6_is_cg_reg
   \   0000000A                      REQUIRE ?Register_R7_is_cg_reg
     23              int  HarComCheckTimeCnt = 0;
   \   0000000A   2444               CLR     R4
   \   0000000C   2455               CLR     R5
     24              char HaveCountedRestart = 0;
   \   0000000E   2477               CLR     R7
     25              OS_Delay(100);                         // wait 1 seconds for other tasks to start and set TaskStatus
   \   00000010   E604               LDI     R16, 100
   \   00000012   E010               LDI     R17, 0
   \   00000014   ........           CALL    OS_Delay
     26              asm("WDR");                             // kick the dog!!
   \   00000018   95A8               WDR
     27              WDTCSR = 0x1f;
   \   0000001A   E10F               LDI     R16, 31
   \   0000001C   9300....           STS     _A_WDTCSR, R16
     28              WDTCSR = 0x0f;
   \   00000020   E00F               LDI     R16, 15
   \   00000022   9300....           STS     _A_WDTCSR, R16
     29              asm("WDR");                             // kick the dog!!
   \   00000026   95A8               WDR
   \   00000028   E0A0               LDI     R26, 0
   \   0000002A   C0E4               RJMP    ??WatchDogHandler_0
     30              while (1) {
     31                  char Restart = false;
     32                  OS_Delay(500);
     33                  if ( CriticalComError ) {
     34                      Restart = true;
     35                  }else if ( HarComCheckTimeCnt++ >= 10 ) {
   \                     ??WatchDogHandler_1:
   \   0000002C   0E40               ADD     R4, R16
   \   0000002E   1E5A               ADC     R5, R26
     36                      if ( labs(OS_Time - _hart_task0.LastHartTaskRunTime) > 10000 ){
   \   00000030   9140....           LDS     R20, (OS_Global + 18)
   \   00000034   9150....           LDS     R21, (OS_Global + 19)
   \   00000038   9160....           LDS     R22, (OS_Global + 20)
   \   0000003C   9170....           LDS     R23, (OS_Global + 21)
   \   00000040   9100....           LDS     R16, (_hart_task0 + 1469)
   \   00000044   9110....           LDS     R17, (_hart_task0 + 1470)
   \   00000048   9120....           LDS     R18, (_hart_task0 + 1471)
   \   0000004C   9130....           LDS     R19, (_hart_task0 + 1472)
   \   00000050   1B40               SUB     R20, R16
   \   00000052   0B51               SBC     R21, R17
   \   00000054   0B62               SBC     R22, R18
   \   00000056   0B73               SBC     R23, R19
   \   00000058   F43A               BRPL    ??WatchDogHandler_2
   \   0000005A   9550               COM     R21
   \   0000005C   9560               COM     R22
   \   0000005E   9570               COM     R23
   \   00000060   9541               NEG     R20
   \   00000062   4F5F               SBCI    R21, 255
   \   00000064   4F6F               SBCI    R22, 255
   \   00000066   4F7F               SBCI    R23, 255
   \                     ??WatchDogHandler_2:
   \   00000068   3141               CPI     R20, 17
   \   0000006A   4257               SBCI    R21, 39
   \   0000006C   4060               SBCI    R22, 0
   \   0000006E   4070               SBCI    R23, 0
   \   00000070   F124               BRLT    ??WatchDogHandler_3
     37                          Restart  = true;
   \   00000072   9463               INC     R6
     38                          for (int i = _hart_task0.start_chnl; i < _hart_task0.end_chnl; i++) {
   \   00000074   ....               LDI     R30, LOW((_hart_task0 + 670))
   \   00000076   ....               LDI     R31, HIGH((_hart_task0 + 670))
   \   00000078   8121               LDD     R18, Z+1
   \   0000007A   8140               LD      R20, Z
   \   0000007C   1742               CP      R20, R18
   \   0000007E   F4E8               BRCC    ??WatchDogHandler_3
   \   00000080   2F64               MOV     R22, R20
   \   00000082   E070               LDI     R23, 0
   \   00000084   0F66               LSL     R22
   \   00000086   1F77               ROL     R23
   \   00000088   0F66               LSL     R22
   \   0000008A   1F77               ROL     R23
   \   0000008C   ....               LDI     R30, LOW(TData)
   \   0000008E   ....               LDI     R31, (TData) >> 8
   \   00000090   0FE6               ADD     R30, R22
   \   00000092   1FF7               ADC     R31, R23
   \   00000094   E030               LDI     R19, 0
   \   00000096   1B24               SUB     R18, R20
   \   00000098   4030               SBCI    R19, 0
     39                              TData.Hart.FailCnt[i][0]++;
   \                     ??WatchDogHandler_4:
   \   0000009A   8100               LD      R16, Z
   \   0000009C   8111               LDD     R17, Z+1
   \   0000009E   5F0F               SUBI    R16, 255
   \   000000A0   4F1F               SBCI    R17, 255
   \   000000A2   8300               ST      Z, R16
   \   000000A4   8311               STD     Z+1, R17
     40                              TData.Hart.FailCnt[i][1]++;
   \   000000A6   8102               LDD     R16, Z+2
   \   000000A8   8113               LDD     R17, Z+3
   \   000000AA   5F0F               SUBI    R16, 255
   \   000000AC   4F1F               SBCI    R17, 255
   \   000000AE   8302               STD     Z+2, R16
   \   000000B0   8313               STD     Z+3, R17
     41                          }
   \   000000B2   9634               ADIW    R31:R30, 4
   \   000000B4   5021               SUBI    R18, 1
   \   000000B6   4030               SBCI    R19, 0
   \   000000B8   F781               BRNE    ??WatchDogHandler_4
     42                      }
     43                      if ( labs(OS_Time - _hart_task1.LastHartTaskRunTime) > 10000 ){
   \                     ??WatchDogHandler_3:
   \   000000BA   9140....           LDS     R20, (OS_Global + 18)
   \   000000BE   9150....           LDS     R21, (OS_Global + 19)
   \   000000C2   9160....           LDS     R22, (OS_Global + 20)
   \   000000C6   9170....           LDS     R23, (OS_Global + 21)
   \   000000CA   9100....           LDS     R16, (_hart_task1 + 1469)
   \   000000CE   9110....           LDS     R17, (_hart_task1 + 1470)
   \   000000D2   9120....           LDS     R18, (_hart_task1 + 1471)
   \   000000D6   9130....           LDS     R19, (_hart_task1 + 1472)
   \   000000DA   1B40               SUB     R20, R16
   \   000000DC   0B51               SBC     R21, R17
   \   000000DE   0B62               SBC     R22, R18
   \   000000E0   0B73               SBC     R23, R19
   \   000000E2   F43A               BRPL    ??WatchDogHandler_5
   \   000000E4   9550               COM     R21
   \   000000E6   9560               COM     R22
   \   000000E8   9570               COM     R23
   \   000000EA   9541               NEG     R20
   \   000000EC   4F5F               SBCI    R21, 255
   \   000000EE   4F6F               SBCI    R22, 255
   \   000000F0   4F7F               SBCI    R23, 255
   \                     ??WatchDogHandler_5:
   \   000000F2   3141               CPI     R20, 17
   \   000000F4   4257               SBCI    R21, 39
   \   000000F6   4060               SBCI    R22, 0
   \   000000F8   4070               SBCI    R23, 0
   \   000000FA   F12C               BRLT    ??WatchDogHandler_6
     44                          Restart |= true;
   \   000000FC   2466               CLR     R6
   \   000000FE   9463               INC     R6
     45                          for (int i = _hart_task1.start_chnl; i < _hart_task1.end_chnl; i++) {
   \   00000100   ....               LDI     R30, LOW((_hart_task1 + 670))
   \   00000102   ....               LDI     R31, HIGH((_hart_task1 + 670))
   \   00000104   8121               LDD     R18, Z+1
   \   00000106   8140               LD      R20, Z
   \   00000108   1742               CP      R20, R18
   \   0000010A   F4E8               BRCC    ??WatchDogHandler_6
   \   0000010C   2F64               MOV     R22, R20
   \   0000010E   E070               LDI     R23, 0
   \   00000110   0F66               LSL     R22
   \   00000112   1F77               ROL     R23
   \   00000114   0F66               LSL     R22
   \   00000116   1F77               ROL     R23
   \   00000118   ....               LDI     R30, LOW(TData)
   \   0000011A   ....               LDI     R31, (TData) >> 8
   \   0000011C   0FE6               ADD     R30, R22
   \   0000011E   1FF7               ADC     R31, R23
   \   00000120   E030               LDI     R19, 0
   \   00000122   1B24               SUB     R18, R20
   \   00000124   4030               SBCI    R19, 0
     46                              TData.Hart.FailCnt[i][0]++;
   \                     ??WatchDogHandler_7:
   \   00000126   8100               LD      R16, Z
   \   00000128   8111               LDD     R17, Z+1
   \   0000012A   5F0F               SUBI    R16, 255
   \   0000012C   4F1F               SBCI    R17, 255
   \   0000012E   8300               ST      Z, R16
   \   00000130   8311               STD     Z+1, R17
     47                              TData.Hart.FailCnt[i][1]++;
   \   00000132   8102               LDD     R16, Z+2
   \   00000134   8113               LDD     R17, Z+3
   \   00000136   5F0F               SUBI    R16, 255
   \   00000138   4F1F               SBCI    R17, 255
   \   0000013A   8302               STD     Z+2, R16
   \   0000013C   8313               STD     Z+3, R17
     48                          }
   \   0000013E   9634               ADIW    R31:R30, 4
   \   00000140   5021               SUBI    R18, 1
   \   00000142   4030               SBCI    R19, 0
   \   00000144   F781               BRNE    ??WatchDogHandler_7
     49                      }
     50                      if ( labs(OS_Time - _hart_task2.LastHartTaskRunTime) > 10000 ){
   \                     ??WatchDogHandler_6:
   \   00000146   9140....           LDS     R20, (OS_Global + 18)
   \   0000014A   9150....           LDS     R21, (OS_Global + 19)
   \   0000014E   9160....           LDS     R22, (OS_Global + 20)
   \   00000152   9170....           LDS     R23, (OS_Global + 21)
   \   00000156   9100....           LDS     R16, (_hart_task2 + 1469)
   \   0000015A   9110....           LDS     R17, (_hart_task2 + 1470)
   \   0000015E   9120....           LDS     R18, (_hart_task2 + 1471)
   \   00000162   9130....           LDS     R19, (_hart_task2 + 1472)
   \   00000166   1B40               SUB     R20, R16
   \   00000168   0B51               SBC     R21, R17
   \   0000016A   0B62               SBC     R22, R18
   \   0000016C   0B73               SBC     R23, R19
   \   0000016E   F43A               BRPL    ??WatchDogHandler_8
   \   00000170   9550               COM     R21
   \   00000172   9560               COM     R22
   \   00000174   9570               COM     R23
   \   00000176   9541               NEG     R20
   \   00000178   4F5F               SBCI    R21, 255
   \   0000017A   4F6F               SBCI    R22, 255
   \   0000017C   4F7F               SBCI    R23, 255
   \                     ??WatchDogHandler_8:
   \   0000017E   3141               CPI     R20, 17
   \   00000180   4257               SBCI    R21, 39
   \   00000182   4060               SBCI    R22, 0
   \   00000184   4070               SBCI    R23, 0
   \   00000186   F40C               BRGE    $+2+2
   \   00000188   C068               RJMP    ??WatchDogHandler_9
     51                          Restart |= true;
     52                          for (int i = _hart_task2.start_chnl; i < _hart_task2.end_chnl; i++) {
   \   0000018A   ....               LDI     R30, LOW((_hart_task2 + 670))
   \   0000018C   ....               LDI     R31, HIGH((_hart_task2 + 670))
   \   0000018E   8121               LDD     R18, Z+1
   \   00000190   8140               LD      R20, Z
   \   00000192   1742               CP      R20, R18
   \   00000194   F4E8               BRCC    ??WatchDogHandler_10
   \   00000196   2F64               MOV     R22, R20
   \   00000198   E070               LDI     R23, 0
   \   0000019A   0F66               LSL     R22
   \   0000019C   1F77               ROL     R23
   \   0000019E   0F66               LSL     R22
   \   000001A0   1F77               ROL     R23
   \   000001A2   ....               LDI     R30, LOW(TData)
   \   000001A4   ....               LDI     R31, (TData) >> 8
   \   000001A6   0FE6               ADD     R30, R22
   \   000001A8   1FF7               ADC     R31, R23
   \   000001AA   E030               LDI     R19, 0
   \   000001AC   1B24               SUB     R18, R20
   \   000001AE   4030               SBCI    R19, 0
     53                              TData.Hart.FailCnt[i][0]++;
   \                     ??WatchDogHandler_11:
   \   000001B0   8100               LD      R16, Z
   \   000001B2   8111               LDD     R17, Z+1
   \   000001B4   5F0F               SUBI    R16, 255
   \   000001B6   4F1F               SBCI    R17, 255
   \   000001B8   8300               ST      Z, R16
   \   000001BA   8311               STD     Z+1, R17
     54                              TData.Hart.FailCnt[i][1]++;
   \   000001BC   8102               LDD     R16, Z+2
   \   000001BE   8113               LDD     R17, Z+3
   \   000001C0   5F0F               SUBI    R16, 255
   \   000001C2   4F1F               SBCI    R17, 255
   \   000001C4   8302               STD     Z+2, R16
   \   000001C6   8313               STD     Z+3, R17
     55                          }
   \   000001C8   9634               ADIW    R31:R30, 4
   \   000001CA   5021               SUBI    R18, 1
   \   000001CC   4030               SBCI    R19, 0
   \   000001CE   F781               BRNE    ??WatchDogHandler_11
     56                      }
     57                  } else if ( labs(OS_Time - Last_ADC_OK_Time) > 5000 ) {
     58                      Restart = true;
     59                  }               
     60                  if ( Restart ) {
     61                      if ( !HaveCountedRestart ) {
   \                     ??WatchDogHandler_10:
   \   000001D0   2077               TST     R7
   \   000001D2   F461               BRNE    ??WatchDogHandler_12
     62                          HaveCountedRestart = 1;
   \   000001D4   2477               CLR     R7
   \   000001D6   9473               INC     R7
     63                          RestartCnt++;
   \   000001D8   9100....           LDS     R16, RestartCnt
   \   000001DC   9110....           LDS     R17, (RestartCnt + 1)
   \   000001E0   5F0F               SUBI    R16, 255
   \   000001E2   4F1F               SBCI    R17, 255
   \   000001E4   9300....           STS     RestartCnt, R16
   \   000001E8   9310....           STS     (RestartCnt + 1), R17
     64                      }
     65                      OS_Delay(30000);
   \                     ??WatchDogHandler_12:
   \   000001EC   E300               LDI     R16, 48
   \   000001EE   E715               LDI     R17, 117
   \   000001F0   ........           CALL    OS_Delay
     66                  } else {
   \                     ??WatchDogHandler_0:
   \   000001F4   2466               CLR     R6
   \   000001F6   EF04               LDI     R16, 244
   \   000001F8   E011               LDI     R17, 1
   \   000001FA   ........           CALL    OS_Delay
   \   000001FE   9100....           LDS     R16, CriticalComError
   \   00000202   2300               TST     R16
   \   00000204   F729               BRNE    ??WatchDogHandler_10
   \   00000206   E00A               LDI     R16, 10
   \   00000208   1640               CP      R4, R16
   \   0000020A   065A               CPC     R5, R26
   \   0000020C   E001               LDI     R16, 1
   \   0000020E   F00C               BRLT    $+2+2
   \   00000210   CF0D               RJMP    ??WatchDogHandler_1
   \   00000212   0E40               ADD     R4, R16
   \   00000214   1E5A               ADC     R5, R26
   \   00000216   9140....           LDS     R20, (OS_Global + 18)
   \   0000021A   9150....           LDS     R21, (OS_Global + 19)
   \   0000021E   9160....           LDS     R22, (OS_Global + 20)
   \   00000222   9170....           LDS     R23, (OS_Global + 21)
   \   00000226   9100....           LDS     R16, Last_ADC_OK_Time
   \   0000022A   9110....           LDS     R17, (Last_ADC_OK_Time + 1)
   \   0000022E   9120....           LDS     R18, (Last_ADC_OK_Time + 2)
   \   00000232   9130....           LDS     R19, (Last_ADC_OK_Time + 3)
   \   00000236   1B40               SUB     R20, R16
   \   00000238   0B51               SBC     R21, R17
   \   0000023A   0B62               SBC     R22, R18
   \   0000023C   0B73               SBC     R23, R19
   \   0000023E   F43A               BRPL    ??WatchDogHandler_13
   \   00000240   9550               COM     R21
   \   00000242   9560               COM     R22
   \   00000244   9570               COM     R23
   \   00000246   9541               NEG     R20
   \   00000248   4F5F               SBCI    R21, 255
   \   0000024A   4F6F               SBCI    R22, 255
   \   0000024C   4F7F               SBCI    R23, 255
   \                     ??WatchDogHandler_13:
   \   0000024E   3849               CPI     R20, 137
   \   00000250   4153               SBCI    R21, 19
   \   00000252   4060               SBCI    R22, 0
   \   00000254   4070               SBCI    R23, 0
   \   00000256   F024               BRLT    ??WatchDogHandler_14
   \   00000258   CFBB               RJMP    ??WatchDogHandler_10
   \                     ??WatchDogHandler_9:
   \   0000025A   FA60               BST     R6, 0
   \   0000025C   F40E               BRTC    $+2+2
   \   0000025E   CFB8               RJMP    ??WatchDogHandler_10
     67                      __watchdog_reset();               //kick the dog
   \                     ??WatchDogHandler_14:
   \   00000260   95A8               WDR
   \   00000262   CFC8               RJMP    ??WatchDogHandler_0
   \   00000264                      REQUIRE _A_WDTCSR
   \   00000264                      REQUIRE RestartCnt
     68                  }
     69              }
     70          }
     71          
     72          
     73          /*************************************************************************
     74          *
     75          *  Get my address
     76          *
     77          *************************************************************************/

   \                                 In  segment CODE, align 2, keep-with-next
     78          char MyAddress(void) {
   \                     MyAddress:
     79          
     80          #if (OS_UART == 0)
     81              return 0;                   // Debug only
     82          #else
     83              int Address = (~(PINE>>4) & 0x0f) ;
     84              return Address;
   \   00000000   B10C               IN      R16, 0x0C
   \   00000002   9502               SWAP    R16
   \   00000004   700F               ANDI    R16, 0x0F
   \   00000006   9500               COM     R16
   \   00000008   700F               ANDI    R16, 0x0F
   \   0000000A   9508               RET
   \   0000000C                      REQUIRE _A_PINE
     85              //return(~(PINE>>4) & 0x0f) ;
     86          #endif
     87          }
     88          
     89          /*************************************************************************
     90          *
     91          *  Check for legal float
     92          *
     93          *************************************************************************/

   \                                 In  segment CODE, align 2, keep-with-next
     94          char IsFloat(float A){
   \                     IsFloat:
     95            long exp;
     96          	// A NAN has an exponent of 255 (shifted left 23 positions) and
     97          	// Denormalized has an exponent set to 0
     98          	exp = *(long*)&A & 0x7F800000L;
   \   00000000   E000               LDI     R16, 0
   \   00000002   7820               ANDI    R18, 0x80
   \   00000004   773F               ANDI    R19, 0x7F
     99          	//int mantissa = *(int*)&A & 0x007FFFFF;
    100          	if ( exp && (exp != 0x7F800000L)  ) {
   \   00000006   2F42               MOV     R20, R18
   \   00000008   2B43               OR      R20, R19
   \   0000000A   F029               BREQ    ??IsFloat_0
   \   0000000C   3000               CPI     R16, 0
   \   0000000E   4820               SBCI    R18, 128
   \   00000010   473F               SBCI    R19, 127
   \   00000012   F009               BREQ    ??IsFloat_0
    101          		return(true);
   \   00000014   E001               LDI     R16, 1
    102            }
    103          	return(false);
   \                     ??IsFloat_0:
   \   00000016   9508               RET
    104          }
    105          

   Maximum stack usage in bytes:

   CSTACK RSTACK Function
   ------ ------ --------
      0      2   IsFloat
      0      2   MyAddress
      5      2   WatchDogHandler
        5      2   -> OS_Delay


   Segment part sizes:

   Bytes  Function/Label
   -----  --------------
      24  IsFloat
      12  MyAddress
       2  RestartCnt
     612  WatchDogHandler
       1  _A_PINE
       1  _A_WDTCSR

 
   4 bytes in segment ABSOLUTE
 648 bytes in segment CODE
 
 648 bytes of CODE memory
   0 bytes of DATA memory (+ 4 bytes shared)

Errors: none
Warnings: 3
