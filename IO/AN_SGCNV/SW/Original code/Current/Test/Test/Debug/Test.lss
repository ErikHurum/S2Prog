
Test.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000266  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000212  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  00000266  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000298  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000060  00000000  00000000  000002d4  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00002e68  00000000  00000000  00000334  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000921  00000000  00000000  0000319c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000593  00000000  00000000  00003abd  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000078  00000000  00000000  00004050  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000c32  00000000  00000000  000040c8  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000e59  00000000  00000000  00004cfa  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000030  00000000  00000000  00005b53  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	4b c0       	rjmp	.+150    	; 0x9c <__bad_interrupt>
   6:	00 00       	nop
   8:	49 c0       	rjmp	.+146    	; 0x9c <__bad_interrupt>
   a:	00 00       	nop
   c:	47 c0       	rjmp	.+142    	; 0x9c <__bad_interrupt>
   e:	00 00       	nop
  10:	45 c0       	rjmp	.+138    	; 0x9c <__bad_interrupt>
  12:	00 00       	nop
  14:	43 c0       	rjmp	.+134    	; 0x9c <__bad_interrupt>
  16:	00 00       	nop
  18:	41 c0       	rjmp	.+130    	; 0x9c <__bad_interrupt>
  1a:	00 00       	nop
  1c:	3f c0       	rjmp	.+126    	; 0x9c <__bad_interrupt>
  1e:	00 00       	nop
  20:	3d c0       	rjmp	.+122    	; 0x9c <__bad_interrupt>
  22:	00 00       	nop
  24:	3b c0       	rjmp	.+118    	; 0x9c <__bad_interrupt>
  26:	00 00       	nop
  28:	39 c0       	rjmp	.+114    	; 0x9c <__bad_interrupt>
  2a:	00 00       	nop
  2c:	37 c0       	rjmp	.+110    	; 0x9c <__bad_interrupt>
  2e:	00 00       	nop
  30:	35 c0       	rjmp	.+106    	; 0x9c <__bad_interrupt>
  32:	00 00       	nop
  34:	33 c0       	rjmp	.+102    	; 0x9c <__bad_interrupt>
  36:	00 00       	nop
  38:	31 c0       	rjmp	.+98     	; 0x9c <__bad_interrupt>
  3a:	00 00       	nop
  3c:	2f c0       	rjmp	.+94     	; 0x9c <__bad_interrupt>
  3e:	00 00       	nop
  40:	2d c0       	rjmp	.+90     	; 0x9c <__bad_interrupt>
  42:	00 00       	nop
  44:	2b c0       	rjmp	.+86     	; 0x9c <__bad_interrupt>
  46:	00 00       	nop
  48:	29 c0       	rjmp	.+82     	; 0x9c <__bad_interrupt>
  4a:	00 00       	nop
  4c:	27 c0       	rjmp	.+78     	; 0x9c <__bad_interrupt>
  4e:	00 00       	nop
  50:	25 c0       	rjmp	.+74     	; 0x9c <__bad_interrupt>
  52:	00 00       	nop
  54:	23 c0       	rjmp	.+70     	; 0x9c <__bad_interrupt>
  56:	00 00       	nop
  58:	21 c0       	rjmp	.+66     	; 0x9c <__bad_interrupt>
  5a:	00 00       	nop
  5c:	1f c0       	rjmp	.+62     	; 0x9c <__bad_interrupt>
  5e:	00 00       	nop
  60:	1d c0       	rjmp	.+58     	; 0x9c <__bad_interrupt>
  62:	00 00       	nop
  64:	1b c0       	rjmp	.+54     	; 0x9c <__bad_interrupt>
  66:	00 00       	nop
  68:	19 c0       	rjmp	.+50     	; 0x9c <__bad_interrupt>
  6a:	00 00       	nop
  6c:	17 c0       	rjmp	.+46     	; 0x9c <__bad_interrupt>
  6e:	00 00       	nop
  70:	15 c0       	rjmp	.+42     	; 0x9c <__bad_interrupt>
  72:	00 00       	nop
  74:	13 c0       	rjmp	.+38     	; 0x9c <__bad_interrupt>
  76:	00 00       	nop
  78:	11 c0       	rjmp	.+34     	; 0x9c <__bad_interrupt>
  7a:	00 00       	nop
  7c:	0f c0       	rjmp	.+30     	; 0x9c <__bad_interrupt>
  7e:	00 00       	nop
  80:	0d c0       	rjmp	.+26     	; 0x9c <__bad_interrupt>
  82:	00 00       	nop
  84:	0b c0       	rjmp	.+22     	; 0x9c <__bad_interrupt>
  86:	00 00       	nop
  88:	09 c0       	rjmp	.+18     	; 0x9c <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61
  98:	04 d0       	rcall	.+8      	; 0xa2 <main>
  9a:	b9 c0       	rjmp	.+370    	; 0x20e <_exit>

0000009c <__bad_interrupt>:
  9c:	b1 cf       	rjmp	.-158    	; 0x0 <__vectors>

0000009e <atmel_start_init>:
/**
 * Initializes MCU, drivers and middleware in the project
 **/
void atmel_start_init(void)
{
	system_init();
  9e:	03 c0       	rjmp	.+6      	; 0xa6 <system_init>
  a0:	08 95       	ret

000000a2 <main>:
#include <atmel_start.h>

int main(void)
{
	/* Initializes MCU, drivers and middleware */
	atmel_start_init();
  a2:	fd df       	rcall	.-6      	; 0x9e <atmel_start_init>
  a4:	ff cf       	rjmp	.-2      	; 0xa4 <main+0x2>

000000a6 <system_init>:

/**
 * \brief System initialization
 */
void system_init()
{
  a6:	cf 93       	push	r28
  a8:	df 93       	push	r29
		break;
	case PORT_DIR_OUT:
		DDRA |= mask;
		break;
	case PORT_DIR_OFF:
		DDRA &= ~mask;
  aa:	8a b3       	in	r24, 0x1a	; 26
  ac:	1a ba       	out	0x1a, r1	; 26

		PORTA |= mask;
  ae:	8b b3       	in	r24, 0x1b	; 27
  b0:	2f ef       	ldi	r18, 0xFF	; 255
  b2:	2b bb       	out	0x1b, r18	; 27
		break;
	case PORT_DIR_OUT:
		DDRB |= mask;
		break;
	case PORT_DIR_OFF:
		DDRB &= ~mask;
  b4:	87 b3       	in	r24, 0x17	; 23
  b6:	17 ba       	out	0x17, r1	; 23

		PORTB |= mask;
  b8:	88 b3       	in	r24, 0x18	; 24
  ba:	28 bb       	out	0x18, r18	; 24
		break;
	case PORT_DIR_OUT:
		DDRC |= mask;
		break;
	case PORT_DIR_OFF:
		DDRC &= ~mask;
  bc:	84 b3       	in	r24, 0x14	; 20
  be:	14 ba       	out	0x14, r1	; 20

		PORTC |= mask;
  c0:	85 b3       	in	r24, 0x15	; 21
  c2:	25 bb       	out	0x15, r18	; 21
		break;
	case PORT_DIR_OUT:
		DDRD |= mask;
		break;
	case PORT_DIR_OFF:
		DDRD &= ~mask;
  c4:	81 b3       	in	r24, 0x11	; 17
  c6:	11 ba       	out	0x11, r1	; 17

		PORTD |= mask;
  c8:	82 b3       	in	r24, 0x12	; 18
  ca:	22 bb       	out	0x12, r18	; 18
		break;
	case PORT_DIR_OUT:
		DDRE |= mask;
		break;
	case PORT_DIR_OFF:
		DDRE &= ~mask;
  cc:	82 b1       	in	r24, 0x02	; 2
  ce:	12 b8       	out	0x02, r1	; 2

		PORTE |= mask;
  d0:	83 b1       	in	r24, 0x03	; 3
  d2:	23 b9       	out	0x03, r18	; 3
		break;
	case PORT_DIR_OUT:
		DDRF |= mask;
		break;
	case PORT_DIR_OFF:
		DDRF &= ~mask;
  d4:	81 e6       	ldi	r24, 0x61	; 97
  d6:	90 e0       	ldi	r25, 0x00	; 0
  d8:	ec 01       	movw	r28, r24
  da:	38 81       	ld	r19, Y
  dc:	18 82       	st	Y, r1

		PORTF |= mask;
  de:	42 e6       	ldi	r20, 0x62	; 98
  e0:	50 e0       	ldi	r21, 0x00	; 0
  e2:	fa 01       	movw	r30, r20
  e4:	30 81       	ld	r19, Z
  e6:	20 83       	st	Z, r18
		break;
	case PORT_DIR_OUT:
		DDRG |= mask;
		break;
	case PORT_DIR_OFF:
		DDRG &= ~mask;
  e8:	a4 e6       	ldi	r26, 0x64	; 100
  ea:	b0 e0       	ldi	r27, 0x00	; 0
  ec:	2c 91       	ld	r18, X
  ee:	20 7e       	andi	r18, 0xE0	; 224
  f0:	2c 93       	st	X, r18

		PORTG |= mask;
  f2:	e5 e6       	ldi	r30, 0x65	; 101
  f4:	f0 e0       	ldi	r31, 0x00	; 0
  f6:	20 81       	ld	r18, Z
  f8:	2f 61       	ori	r18, 0x1F	; 31
  fa:	20 83       	st	Z, r18
 */
static inline void PORTA_set_pin_dir(const uint8_t pin, const enum port_dir direction)
{
	switch (direction) {
	case PORT_DIR_IN:
		DDRA &= ~(1 << pin);
  fc:	d0 98       	cbi	0x1a, 0	; 26
		DDRA &= ~(1 << pin);

		PORTA |= 1 << pin;
	} else if (pull_mode == PORT_PULL_OFF) {

		PORTA &= ~(1 << pin);
  fe:	d8 98       	cbi	0x1b, 0	; 27
 */
static inline void PORTA_set_pin_dir(const uint8_t pin, const enum port_dir direction)
{
	switch (direction) {
	case PORT_DIR_IN:
		DDRA &= ~(1 << pin);
 100:	d1 98       	cbi	0x1a, 1	; 26
		DDRA &= ~(1 << pin);

		PORTA |= 1 << pin;
	} else if (pull_mode == PORT_PULL_OFF) {

		PORTA &= ~(1 << pin);
 102:	d9 98       	cbi	0x1b, 1	; 27
 */
static inline void PORTA_set_pin_dir(const uint8_t pin, const enum port_dir direction)
{
	switch (direction) {
	case PORT_DIR_IN:
		DDRA &= ~(1 << pin);
 104:	d2 98       	cbi	0x1a, 2	; 26
		DDRA &= ~(1 << pin);

		PORTA |= 1 << pin;
	} else if (pull_mode == PORT_PULL_OFF) {

		PORTA &= ~(1 << pin);
 106:	da 98       	cbi	0x1b, 2	; 27
 */
static inline void PORTA_set_pin_dir(const uint8_t pin, const enum port_dir direction)
{
	switch (direction) {
	case PORT_DIR_IN:
		DDRA &= ~(1 << pin);
 108:	d3 98       	cbi	0x1a, 3	; 26
		DDRA &= ~(1 << pin);

		PORTA |= 1 << pin;
	} else if (pull_mode == PORT_PULL_OFF) {

		PORTA &= ~(1 << pin);
 10a:	db 98       	cbi	0x1b, 3	; 27
 */
static inline void PORTA_set_pin_dir(const uint8_t pin, const enum port_dir direction)
{
	switch (direction) {
	case PORT_DIR_IN:
		DDRA &= ~(1 << pin);
 10c:	d4 98       	cbi	0x1a, 4	; 26
		DDRA &= ~(1 << pin);

		PORTA |= 1 << pin;
	} else if (pull_mode == PORT_PULL_OFF) {

		PORTA &= ~(1 << pin);
 10e:	dc 98       	cbi	0x1b, 4	; 27
 */
static inline void PORTA_set_pin_dir(const uint8_t pin, const enum port_dir direction)
{
	switch (direction) {
	case PORT_DIR_IN:
		DDRA &= ~(1 << pin);
 110:	d5 98       	cbi	0x1a, 5	; 26
		DDRA &= ~(1 << pin);

		PORTA |= 1 << pin;
	} else if (pull_mode == PORT_PULL_OFF) {

		PORTA &= ~(1 << pin);
 112:	dd 98       	cbi	0x1b, 5	; 27
 */
static inline void PORTA_set_pin_dir(const uint8_t pin, const enum port_dir direction)
{
	switch (direction) {
	case PORT_DIR_IN:
		DDRA &= ~(1 << pin);
 114:	d6 98       	cbi	0x1a, 6	; 26
		DDRA &= ~(1 << pin);

		PORTA |= 1 << pin;
	} else if (pull_mode == PORT_PULL_OFF) {

		PORTA &= ~(1 << pin);
 116:	de 98       	cbi	0x1b, 6	; 27
 */
static inline void PORTA_set_pin_dir(const uint8_t pin, const enum port_dir direction)
{
	switch (direction) {
	case PORT_DIR_IN:
		DDRA &= ~(1 << pin);
 118:	d7 98       	cbi	0x1a, 7	; 26
		DDRA &= ~(1 << pin);

		PORTA |= 1 << pin;
	} else if (pull_mode == PORT_PULL_OFF) {

		PORTA &= ~(1 << pin);
 11a:	df 98       	cbi	0x1b, 7	; 27
	switch (direction) {
	case PORT_DIR_IN:
		DDRB &= ~(1 << pin);
		break;
	case PORT_DIR_OUT:
		DDRB |= 1 << pin;
 11c:	b8 9a       	sbi	0x17, 0	; 23
static inline void PORTB_set_pin_level(const uint8_t pin, const bool level)
{
	if (level) {
		PORTB |= 1 << pin;
	} else {
		PORTB &= ~(1 << pin);
 11e:	c0 98       	cbi	0x18, 0	; 24
	switch (direction) {
	case PORT_DIR_IN:
		DDRB &= ~(1 << pin);
		break;
	case PORT_DIR_OUT:
		DDRB |= 1 << pin;
 120:	b9 9a       	sbi	0x17, 1	; 23
static inline void PORTB_set_pin_level(const uint8_t pin, const bool level)
{
	if (level) {
		PORTB |= 1 << pin;
	} else {
		PORTB &= ~(1 << pin);
 122:	c1 98       	cbi	0x18, 1	; 24
	switch (direction) {
	case PORT_DIR_IN:
		DDRB &= ~(1 << pin);
		break;
	case PORT_DIR_OUT:
		DDRB |= 1 << pin;
 124:	ba 9a       	sbi	0x17, 2	; 23
static inline void PORTB_set_pin_level(const uint8_t pin, const bool level)
{
	if (level) {
		PORTB |= 1 << pin;
	} else {
		PORTB &= ~(1 << pin);
 126:	c2 98       	cbi	0x18, 2	; 24
	switch (direction) {
	case PORT_DIR_IN:
		DDRB &= ~(1 << pin);
		break;
	case PORT_DIR_OUT:
		DDRB |= 1 << pin;
 128:	bb 9a       	sbi	0x17, 3	; 23
static inline void PORTB_set_pin_level(const uint8_t pin, const bool level)
{
	if (level) {
		PORTB |= 1 << pin;
	} else {
		PORTB &= ~(1 << pin);
 12a:	c3 98       	cbi	0x18, 3	; 24
	switch (direction) {
	case PORT_DIR_IN:
		DDRB &= ~(1 << pin);
		break;
	case PORT_DIR_OUT:
		DDRB |= 1 << pin;
 12c:	bc 9a       	sbi	0x17, 4	; 23
static inline void PORTB_set_pin_level(const uint8_t pin, const bool level)
{
	if (level) {
		PORTB |= 1 << pin;
	} else {
		PORTB &= ~(1 << pin);
 12e:	c4 98       	cbi	0x18, 4	; 24
	switch (direction) {
	case PORT_DIR_IN:
		DDRB &= ~(1 << pin);
		break;
	case PORT_DIR_OUT:
		DDRB |= 1 << pin;
 130:	bd 9a       	sbi	0x17, 5	; 23
static inline void PORTB_set_pin_level(const uint8_t pin, const bool level)
{
	if (level) {
		PORTB |= 1 << pin;
	} else {
		PORTB &= ~(1 << pin);
 132:	c5 98       	cbi	0x18, 5	; 24
	switch (direction) {
	case PORT_DIR_IN:
		DDRB &= ~(1 << pin);
		break;
	case PORT_DIR_OUT:
		DDRB |= 1 << pin;
 134:	be 9a       	sbi	0x17, 6	; 23
static inline void PORTB_set_pin_level(const uint8_t pin, const bool level)
{
	if (level) {
		PORTB |= 1 << pin;
	} else {
		PORTB &= ~(1 << pin);
 136:	c6 98       	cbi	0x18, 6	; 24
	switch (direction) {
	case PORT_DIR_IN:
		DDRB &= ~(1 << pin);
		break;
	case PORT_DIR_OUT:
		DDRB |= 1 << pin;
 138:	bf 9a       	sbi	0x17, 7	; 23
static inline void PORTB_set_pin_level(const uint8_t pin, const bool level)
{
	if (level) {
		PORTB |= 1 << pin;
	} else {
		PORTB &= ~(1 << pin);
 13a:	c7 98       	cbi	0x18, 7	; 24
 */
static inline void PORTC_set_pin_dir(const uint8_t pin, const enum port_dir direction)
{
	switch (direction) {
	case PORT_DIR_IN:
		DDRC &= ~(1 << pin);
 13c:	a0 98       	cbi	0x14, 0	; 20
		DDRC &= ~(1 << pin);

		PORTC |= 1 << pin;
	} else if (pull_mode == PORT_PULL_OFF) {

		PORTC &= ~(1 << pin);
 13e:	a8 98       	cbi	0x15, 0	; 21
 */
static inline void PORTC_set_pin_dir(const uint8_t pin, const enum port_dir direction)
{
	switch (direction) {
	case PORT_DIR_IN:
		DDRC &= ~(1 << pin);
 140:	a1 98       	cbi	0x14, 1	; 20
		DDRC &= ~(1 << pin);

		PORTC |= 1 << pin;
	} else if (pull_mode == PORT_PULL_OFF) {

		PORTC &= ~(1 << pin);
 142:	a9 98       	cbi	0x15, 1	; 21
 */
static inline void PORTC_set_pin_dir(const uint8_t pin, const enum port_dir direction)
{
	switch (direction) {
	case PORT_DIR_IN:
		DDRC &= ~(1 << pin);
 144:	a2 98       	cbi	0x14, 2	; 20
		DDRC &= ~(1 << pin);

		PORTC |= 1 << pin;
	} else if (pull_mode == PORT_PULL_OFF) {

		PORTC &= ~(1 << pin);
 146:	aa 98       	cbi	0x15, 2	; 21
 */
static inline void PORTC_set_pin_dir(const uint8_t pin, const enum port_dir direction)
{
	switch (direction) {
	case PORT_DIR_IN:
		DDRC &= ~(1 << pin);
 148:	a3 98       	cbi	0x14, 3	; 20
		DDRC &= ~(1 << pin);

		PORTC |= 1 << pin;
	} else if (pull_mode == PORT_PULL_OFF) {

		PORTC &= ~(1 << pin);
 14a:	ab 98       	cbi	0x15, 3	; 21
 */
static inline void PORTC_set_pin_dir(const uint8_t pin, const enum port_dir direction)
{
	switch (direction) {
	case PORT_DIR_IN:
		DDRC &= ~(1 << pin);
 14c:	a4 98       	cbi	0x14, 4	; 20
		DDRC &= ~(1 << pin);

		PORTC |= 1 << pin;
	} else if (pull_mode == PORT_PULL_OFF) {

		PORTC &= ~(1 << pin);
 14e:	ac 98       	cbi	0x15, 4	; 21
 */
static inline void PORTC_set_pin_dir(const uint8_t pin, const enum port_dir direction)
{
	switch (direction) {
	case PORT_DIR_IN:
		DDRC &= ~(1 << pin);
 150:	a5 98       	cbi	0x14, 5	; 20
		DDRC &= ~(1 << pin);

		PORTC |= 1 << pin;
	} else if (pull_mode == PORT_PULL_OFF) {

		PORTC &= ~(1 << pin);
 152:	ad 98       	cbi	0x15, 5	; 21
 */
static inline void PORTC_set_pin_dir(const uint8_t pin, const enum port_dir direction)
{
	switch (direction) {
	case PORT_DIR_IN:
		DDRC &= ~(1 << pin);
 154:	a6 98       	cbi	0x14, 6	; 20
		DDRC &= ~(1 << pin);

		PORTC |= 1 << pin;
	} else if (pull_mode == PORT_PULL_OFF) {

		PORTC &= ~(1 << pin);
 156:	ae 98       	cbi	0x15, 6	; 21
 */
static inline void PORTC_set_pin_dir(const uint8_t pin, const enum port_dir direction)
{
	switch (direction) {
	case PORT_DIR_IN:
		DDRC &= ~(1 << pin);
 158:	a7 98       	cbi	0x14, 7	; 20
		DDRC &= ~(1 << pin);

		PORTC |= 1 << pin;
	} else if (pull_mode == PORT_PULL_OFF) {

		PORTC &= ~(1 << pin);
 15a:	af 98       	cbi	0x15, 7	; 21
 */
static inline void PORTD_set_pin_dir(const uint8_t pin, const enum port_dir direction)
{
	switch (direction) {
	case PORT_DIR_IN:
		DDRD &= ~(1 << pin);
 15c:	88 98       	cbi	0x11, 0	; 17
		DDRD &= ~(1 << pin);

		PORTD |= 1 << pin;
	} else if (pull_mode == PORT_PULL_OFF) {

		PORTD &= ~(1 << pin);
 15e:	90 98       	cbi	0x12, 0	; 18
 */
static inline void PORTD_set_pin_dir(const uint8_t pin, const enum port_dir direction)
{
	switch (direction) {
	case PORT_DIR_IN:
		DDRD &= ~(1 << pin);
 160:	89 98       	cbi	0x11, 1	; 17
		DDRD &= ~(1 << pin);

		PORTD |= 1 << pin;
	} else if (pull_mode == PORT_PULL_OFF) {

		PORTD &= ~(1 << pin);
 162:	91 98       	cbi	0x12, 1	; 18
	switch (direction) {
	case PORT_DIR_IN:
		DDRD &= ~(1 << pin);
		break;
	case PORT_DIR_OUT:
		DDRD |= 1 << pin;
 164:	8c 9a       	sbi	0x11, 4	; 17
static inline void PORTD_set_pin_level(const uint8_t pin, const bool level)
{
	if (level) {
		PORTD |= 1 << pin;
	} else {
		PORTD &= ~(1 << pin);
 166:	94 98       	cbi	0x12, 4	; 18
	switch (direction) {
	case PORT_DIR_IN:
		DDRD &= ~(1 << pin);
		break;
	case PORT_DIR_OUT:
		DDRD |= 1 << pin;
 168:	8d 9a       	sbi	0x11, 5	; 17
static inline void PORTD_set_pin_level(const uint8_t pin, const bool level)
{
	if (level) {
		PORTD |= 1 << pin;
	} else {
		PORTD &= ~(1 << pin);
 16a:	95 98       	cbi	0x12, 5	; 18
	switch (direction) {
	case PORT_DIR_IN:
		DDRD &= ~(1 << pin);
		break;
	case PORT_DIR_OUT:
		DDRD |= 1 << pin;
 16c:	8e 9a       	sbi	0x11, 6	; 17
static inline void PORTD_set_pin_level(const uint8_t pin, const bool level)
{
	if (level) {
		PORTD |= 1 << pin;
	} else {
		PORTD &= ~(1 << pin);
 16e:	96 98       	cbi	0x12, 6	; 18
	switch (direction) {
	case PORT_DIR_IN:
		DDRD &= ~(1 << pin);
		break;
	case PORT_DIR_OUT:
		DDRD |= 1 << pin;
 170:	8f 9a       	sbi	0x11, 7	; 17
static inline void PORTD_set_pin_level(const uint8_t pin, const bool level)
{
	if (level) {
		PORTD |= 1 << pin;
	} else {
		PORTD &= ~(1 << pin);
 172:	97 98       	cbi	0x12, 7	; 18
	switch (direction) {
	case PORT_DIR_IN:
		DDRE &= ~(1 << pin);
		break;
	case PORT_DIR_OUT:
		DDRE |= 1 << pin;
 174:	12 9a       	sbi	0x02, 2	; 2
static inline void PORTE_set_pin_level(const uint8_t pin, const bool level)
{
	if (level) {
		PORTE |= 1 << pin;
	} else {
		PORTE &= ~(1 << pin);
 176:	1a 98       	cbi	0x03, 2	; 3
	switch (direction) {
	case PORT_DIR_IN:
		DDRE &= ~(1 << pin);
		break;
	case PORT_DIR_OUT:
		DDRE |= 1 << pin;
 178:	13 9a       	sbi	0x02, 3	; 2
static inline void PORTE_set_pin_level(const uint8_t pin, const bool level)
{
	if (level) {
		PORTE |= 1 << pin;
	} else {
		PORTE &= ~(1 << pin);
 17a:	1b 98       	cbi	0x03, 3	; 3
	switch (direction) {
	case PORT_DIR_IN:
		DDRE &= ~(1 << pin);
		break;
	case PORT_DIR_OUT:
		DDRE |= 1 << pin;
 17c:	14 9a       	sbi	0x02, 4	; 2
static inline void PORTE_set_pin_level(const uint8_t pin, const bool level)
{
	if (level) {
		PORTE |= 1 << pin;
	} else {
		PORTE &= ~(1 << pin);
 17e:	1c 98       	cbi	0x03, 4	; 3
	switch (direction) {
	case PORT_DIR_IN:
		DDRE &= ~(1 << pin);
		break;
	case PORT_DIR_OUT:
		DDRE |= 1 << pin;
 180:	15 9a       	sbi	0x02, 5	; 2
static inline void PORTE_set_pin_level(const uint8_t pin, const bool level)
{
	if (level) {
		PORTE |= 1 << pin;
	} else {
		PORTE &= ~(1 << pin);
 182:	1d 98       	cbi	0x03, 5	; 3
	switch (direction) {
	case PORT_DIR_IN:
		DDRE &= ~(1 << pin);
		break;
	case PORT_DIR_OUT:
		DDRE |= 1 << pin;
 184:	16 9a       	sbi	0x02, 6	; 2
static inline void PORTE_set_pin_level(const uint8_t pin, const bool level)
{
	if (level) {
		PORTE |= 1 << pin;
	} else {
		PORTE &= ~(1 << pin);
 186:	1e 98       	cbi	0x03, 6	; 3
	switch (direction) {
	case PORT_DIR_IN:
		DDRE &= ~(1 << pin);
		break;
	case PORT_DIR_OUT:
		DDRE |= 1 << pin;
 188:	17 9a       	sbi	0x02, 7	; 2
static inline void PORTE_set_pin_level(const uint8_t pin, const bool level)
{
	if (level) {
		PORTE |= 1 << pin;
	} else {
		PORTE &= ~(1 << pin);
 18a:	1f 98       	cbi	0x03, 7	; 3
 */
static inline void PORTF_set_pin_dir(const uint8_t pin, const enum port_dir direction)
{
	switch (direction) {
	case PORT_DIR_IN:
		DDRF &= ~(1 << pin);
 18c:	28 81       	ld	r18, Y
 18e:	2e 7f       	andi	r18, 0xFE	; 254
 190:	28 83       	st	Y, r18
		DDRF &= ~(1 << pin);

		PORTF |= 1 << pin;
	} else if (pull_mode == PORT_PULL_OFF) {

		PORTF &= ~(1 << pin);
 192:	ea 01       	movw	r28, r20
 194:	28 81       	ld	r18, Y
 196:	2e 7f       	andi	r18, 0xFE	; 254
 198:	28 83       	st	Y, r18
	switch (direction) {
	case PORT_DIR_IN:
		DDRF &= ~(1 << pin);
		break;
	case PORT_DIR_OUT:
		DDRF |= 1 << pin;
 19a:	ec 01       	movw	r28, r24
 19c:	28 81       	ld	r18, Y
 19e:	22 60       	ori	r18, 0x02	; 2
 1a0:	28 83       	st	Y, r18
static inline void PORTF_set_pin_level(const uint8_t pin, const bool level)
{
	if (level) {
		PORTF |= 1 << pin;
	} else {
		PORTF &= ~(1 << pin);
 1a2:	ea 01       	movw	r28, r20
 1a4:	28 81       	ld	r18, Y
 1a6:	2d 7f       	andi	r18, 0xFD	; 253
 1a8:	28 83       	st	Y, r18
 */
static inline void PORTF_set_pin_dir(const uint8_t pin, const enum port_dir direction)
{
	switch (direction) {
	case PORT_DIR_IN:
		DDRF &= ~(1 << pin);
 1aa:	ec 01       	movw	r28, r24
 1ac:	28 81       	ld	r18, Y
 1ae:	2b 7f       	andi	r18, 0xFB	; 251
 1b0:	28 83       	st	Y, r18
		DDRF &= ~(1 << pin);

		PORTF |= 1 << pin;
	} else if (pull_mode == PORT_PULL_OFF) {

		PORTF &= ~(1 << pin);
 1b2:	ea 01       	movw	r28, r20
 1b4:	28 81       	ld	r18, Y
 1b6:	2b 7f       	andi	r18, 0xFB	; 251
 1b8:	28 83       	st	Y, r18
	switch (direction) {
	case PORT_DIR_IN:
		DDRF &= ~(1 << pin);
		break;
	case PORT_DIR_OUT:
		DDRF |= 1 << pin;
 1ba:	ec 01       	movw	r28, r24
 1bc:	28 81       	ld	r18, Y
 1be:	28 60       	ori	r18, 0x08	; 8
 1c0:	28 83       	st	Y, r18
static inline void PORTF_set_pin_level(const uint8_t pin, const bool level)
{
	if (level) {
		PORTF |= 1 << pin;
	} else {
		PORTF &= ~(1 << pin);
 1c2:	ea 01       	movw	r28, r20
 1c4:	88 81       	ld	r24, Y
 1c6:	87 7f       	andi	r24, 0xF7	; 247
 1c8:	88 83       	st	Y, r24
	switch (direction) {
	case PORT_DIR_IN:
		DDRG &= ~(1 << pin);
		break;
	case PORT_DIR_OUT:
		DDRG |= 1 << pin;
 1ca:	8c 91       	ld	r24, X
 1cc:	81 60       	ori	r24, 0x01	; 1
 1ce:	8c 93       	st	X, r24
static inline void PORTG_set_pin_level(const uint8_t pin, const bool level)
{
	if (level) {
		PORTG |= 1 << pin;
	} else {
		PORTG &= ~(1 << pin);
 1d0:	80 81       	ld	r24, Z
 1d2:	8e 7f       	andi	r24, 0xFE	; 254
 1d4:	80 83       	st	Z, r24
	switch (direction) {
	case PORT_DIR_IN:
		DDRG &= ~(1 << pin);
		break;
	case PORT_DIR_OUT:
		DDRG |= 1 << pin;
 1d6:	8c 91       	ld	r24, X
 1d8:	82 60       	ori	r24, 0x02	; 2
 1da:	8c 93       	st	X, r24
static inline void PORTG_set_pin_level(const uint8_t pin, const bool level)
{
	if (level) {
		PORTG |= 1 << pin;
	} else {
		PORTG &= ~(1 << pin);
 1dc:	80 81       	ld	r24, Z
 1de:	8d 7f       	andi	r24, 0xFD	; 253
 1e0:	80 83       	st	Z, r24
	switch (direction) {
	case PORT_DIR_IN:
		DDRG &= ~(1 << pin);
		break;
	case PORT_DIR_OUT:
		DDRG |= 1 << pin;
 1e2:	8c 91       	ld	r24, X
 1e4:	84 60       	ori	r24, 0x04	; 4
 1e6:	8c 93       	st	X, r24
static inline void PORTG_set_pin_level(const uint8_t pin, const bool level)
{
	if (level) {
		PORTG |= 1 << pin;
	} else {
		PORTG &= ~(1 << pin);
 1e8:	80 81       	ld	r24, Z
 1ea:	8b 7f       	andi	r24, 0xFB	; 251
 1ec:	80 83       	st	Z, r24
	switch (direction) {
	case PORT_DIR_IN:
		DDRG &= ~(1 << pin);
		break;
	case PORT_DIR_OUT:
		DDRG |= 1 << pin;
 1ee:	8c 91       	ld	r24, X
 1f0:	88 60       	ori	r24, 0x08	; 8
 1f2:	8c 93       	st	X, r24
static inline void PORTG_set_pin_level(const uint8_t pin, const bool level)
{
	if (level) {
		PORTG |= 1 << pin;
	} else {
		PORTG &= ~(1 << pin);
 1f4:	80 81       	ld	r24, Z
 1f6:	87 7f       	andi	r24, 0xF7	; 247
 1f8:	80 83       	st	Z, r24
	switch (direction) {
	case PORT_DIR_IN:
		DDRG &= ~(1 << pin);
		break;
	case PORT_DIR_OUT:
		DDRG |= 1 << pin;
 1fa:	8c 91       	ld	r24, X
 1fc:	80 61       	ori	r24, 0x10	; 16
 1fe:	8c 93       	st	X, r24
static inline void PORTG_set_pin_level(const uint8_t pin, const bool level)
{
	if (level) {
		PORTG |= 1 << pin;
	} else {
		PORTG &= ~(1 << pin);
 200:	80 81       	ld	r24, Z
 202:	8f 7e       	andi	r24, 0xEF	; 239
 204:	80 83       	st	Z, r24
 * \return Initialization status.
 */
static inline int8_t sysctrl_init()
{

	MCUCR = (0 << SM2) | (0 << SM1) | (0 << SM0) | // Idle
 206:	15 be       	out	0x35, r1	; 53
	    // <false"> Low
	    // <true"> High
	    false);

	sysctrl_init();
}
 208:	df 91       	pop	r29
 20a:	cf 91       	pop	r28
 20c:	08 95       	ret

0000020e <_exit>:
 20e:	f8 94       	cli

00000210 <__stop_program>:
 210:	ff cf       	rjmp	.-2      	; 0x210 <__stop_program>
