###############################################################################
#
# IAR C/C++ Compiler V6.70.1.929 for Atmel AVR            18/Jan/2017  16:22:12
# Copyright 1996-2015 IAR Systems AB.
# Standalone license - IAR Embedded Workbench for Atmel AVR 6.80
#
#    Source file  =  D:\S2Prog\IO\TPC\Src\Main.c
#    Command line =  
#        D:\S2Prog\IO\TPC\Src\Main.c --cpu=m128 -ms -o
#        D:\S2Prog\IO\TPC\Debug\Obj -D OS_LIBMODE_D -D OS_UART=-1 -lCN
#        D:\S2Prog\IO\TPC\Debug\List -y --initializers_in_flash --no_cse
#        --no_inline --no_code_motion --no_cross_call --no_clustering --no_tbaa
#        --debug -DENABLE_BIT_DEFINITIONS -e -I D:\S2Prog\IO\TPC\INC\ -I
#        D:\S2Prog\IO\TPC\..\..\SHARED\INC\ --eeprom_size 4096 --clib -On
#    List file    =  D:\S2Prog\IO\TPC\Debug\List\Main.lst
#    Object file  =  D:\S2Prog\IO\TPC\Debug\Obj\Main.r90
#
###############################################################################

D:\S2Prog\IO\TPC\Src\Main.c
      1          /**********************************************************
      2          *  
      3          *   Main file for TPC* program       
      4          *  
      5          ***********************************************************/
      6          
      7          #include "iom128.h"
      8          #include "stdio.h"
      9          #include "math.h"
     10          #include "variables.h"

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \   char UnitID
   \                     UnitID:
   \   00000000                      DS8 1

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \   char HostAddress
   \                     HostAddress:
   \   00000000                      DS8 1

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \   char MyPriAddress
   \                     MyPriAddress:
   \   00000000                      DS8 1

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \   char MySecAddress
   \                     MySecAddress:
   \   00000000                      DS8 1

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \   char RestartStatus
   \                     RestartStatus:
   \   00000000                      DS8 1

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \   char BlinkStatus
   \                     BlinkStatus:
   \   00000000                      DS8 1

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \   char kbd_delay_cnt
   \                     kbd_delay_cnt:
   \   00000000                      DS8 1

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \   char tx_status
   \                     tx_status:
   \   00000000                      DS8 1

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \   char RXTimeout
   \                     RXTimeout:
   \   00000000                      DS8 1

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \   UARTDataType UART[2]
   \                     UART:
   \   00000000                      DS8 58

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \   DispData Disp
   \                     Disp:
   \   00000000                      DS8 1755

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \   char packed_data[40]
   \                     packed_data:
   \   00000000                      DS8 40

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \   char TxBufferCh0[150]
   \                     TxBufferCh0:
   \   00000000                      DS8 150

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \   char RxBufferCh0[255]
   \                     RxBufferCh0:
   \   00000000                      DS8 255

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \   char WriteCount
   \                     WriteCount:
   \   00000000                      DS8 1

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \   char *__near pWriteBuffer
   \                     pWriteBuffer:
   \   00000000                      DS8 2

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \   char RestoreStat
   \                     RestoreStat:
   \   00000000                      DS8 1

   \                                 In  segment FAR_F, align 1, keep-with-next
   \   char const __farflash crc[256]
   \                     crc:
   \   00000000   5E00E2BC3F61       DC8 0, 94, 188, 226, 97, 63, 221, 131, 194, 156, 126, 32, 163, 253, 31
   \              83DD9CC2207E
   \              FDA31F      
   \   0000000F   9D4121C3FC7F       DC8 65, 157, 195, 33, 127, 252, 162, 64, 30, 95, 1, 227, 189, 62, 96
   \              40A25F1EE301
   \              3EBD60      
   \   0000001E   DC827D23C19F       DC8 130, 220, 35, 125, 159, 193, 66, 28, 254, 160, 225, 191, 93, 3, 128
   \              1C42A0FEBFE1
   \              035D80      
   \   0000002D   3CDEBE6202E0       DC8 222, 60, 98, 190, 224, 2, 92, 223, 129, 99, 61, 124, 34, 192, 158
   \              DF5C63817C3D
   \              C0229E      
   \   0000003C   431DFFA11846       DC8 29, 67, 161, 255, 70, 24, 250, 164, 39, 121, 155, 197, 132, 218, 56
   \              A4FA7927C59B
   \              DA8438      
   \   0000004B   E56659BBDB07       DC8 102, 229, 187, 89, 7, 219, 133, 103, 57, 186, 228, 6, 88, 25, 71
   \              6785BA3906E4
   \              195847      
   \   0000005A   FBA526789AC4       DC8 165, 251, 120, 38, 196, 154, 101, 59, 217, 135, 4, 90, 184, 230
   \              3B6587D95A04
   \              E6B8        
   \   00000068   F9A7451B98C6       DC8 167, 249, 27, 69, 198, 152, 122, 36, 248, 166, 68, 26, 153, 199, 37
   \              247AA6F81A44
   \              C79925      
   \   00000077   3A7B86645BD8       DC8 123, 58, 100, 134, 216, 91, 5, 231, 185, 140, 210, 48, 110, 237
   \              E7058CB930D2
   \              ED6E        
   \   00000085   51B34E0FF210       DC8 179, 81, 15, 78, 16, 242, 172, 47, 113, 147, 205, 17, 79, 173, 243
   \              2FAC937111CD
   \              AD4FF3      
   \   00000094   2E7092CC8DD3       DC8 112, 46, 204, 146, 211, 141, 111, 49, 178, 236, 14, 80, 175, 241
   \              316FECB2500E
   \              F1AF        
   \   000000A2   4D1390CE2C72       DC8 19, 77, 206, 144, 114, 44, 109, 51, 209, 143, 12, 82, 176, 238, 50
   \              336D8FD1520C
   \              EEB032      
   \   000000B1   8E6C53D0EF0D       DC8 108, 142, 208, 83, 13, 239, 177, 240, 174, 76, 18, 145, 207, 45
   \              F0B14CAE9112
   \              2DCF        
   \   000000BF   CA737694AB28       DC8 115, 202, 148, 118, 40, 171, 245, 23, 73, 8, 86, 180, 234, 105, 55
   \              17F50849B456
   \              69EA37      
   \   000000CE   8BD50957B5EB       DC8 213, 139, 87, 9, 235, 181, 54, 104, 138, 212, 149, 203, 41, 119
   \              6836D48ACB95
   \              7729        
   \   000000DC   AAF41648B7E9       DC8 244, 170, 72, 22, 233, 183, 85, 11, 136, 214, 52, 106, 43, 117, 151
   \              0B55D6886A34
   \              752B97      
   \   000000EB   4AC9F61474A8       DC8 201, 74, 20, 246, 168, 116, 42, 200, 150, 21, 75, 169, 247, 182
   \              C82A1596A94B
   \              B6F7        
   \   000000F9   0AE8D7546B89       DC8 232, 10, 84, 215, 137, 107, 53
   \              35          

   \                                 In  segment FAR_F, align 1, keep-with-next
   \   char const __farflash ascii_table[96][3][5]
   \                     ascii_table:
   \   00000000   000200000200       DC8 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 125, 0, 0, 0, 1
   \              000000000000
   \              00000100007D
   \              000001      
   \   00000015   007D00000000       DC8 125, 0, 0, 0, 0, 0, 0, 0, 0, 3, 112, 0, 112, 0, 3, 112, 0, 112, 0
   \              000003000070
   \              007070037000
   \              00          
   \   00000028   000000000400       DC8 0, 0, 0, 0, 0, 4, 30, 116, 30, 116, 4, 30, 116, 30, 116, 0, 0, 0, 0
   \              741E741E1E04
   \              1E7400740000
   \              00          
   \   0000003B   04002F12247A       DC8 0, 4, 18, 47, 122, 36, 4, 18, 47, 122, 36, 0, 0, 0, 0, 0, 4, 51, 52
   \              12047A2F0024
   \              000000003304
   \              34          
   \   0000004E   330B33040B34       DC8 11, 51, 4, 51, 52, 11, 51, 0, 0, 0, 0, 0, 4, 54, 73, 54, 5, 4, 54
   \              003300000000
   \              360436490405
   \              36          
   \   00000061   364900050000       DC8 73, 54, 5, 0, 0, 0, 0, 0, 1, 96, 0, 0, 0, 1, 96, 0, 0, 0, 2, 0, 0
   \              000060010000
   \              010000600000
   \              000200      
   \   00000076   00001C034122       DC8 0, 0, 3, 28, 34, 65, 0, 3, 28, 34, 65, 0, 57, 0, 0, 0, 0, 3, 65, 34
   \              0300221C0041
   \              003900000300
   \              2241        
   \   0000008A   001C41031C22       DC8 28, 0, 3, 65, 34, 28, 0, 15, 0, 0, 0, 0, 4, 42, 28, 28, 42, 4, 42
   \              0F0000000000
   \              2A041C1C042A
   \              2A          
   \   0000009D   1C1C002A0000       DC8 28, 28, 42, 0, 0, 0, 0, 0, 3, 8, 28, 8, 0, 3, 8, 28, 8, 0, 0, 0, 0
   \              00000803081C
   \              03001C080008
   \              000000      
   \   000000B2   000001020006       DC8 0, 0, 2, 1, 6, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 3, 8, 8, 8, 0, 3
   \              010000010000
   \              000000000300
   \              0808000803  
   \   000000C9   080800080040       DC8 8, 8, 8, 0, 64, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0
   \              000001000001
   \              000001010000
   \              00000000    
   \   000000DF   000007037008       DC8 0, 0, 3, 7, 8, 112, 0, 3, 7, 8, 112, 0, 0, 0, 0, 0, 0, 4, 62, 65
   \              030008070070
   \              000000000400
   \              413E        
   \   000000F3   3E413E033E41       DC8 65, 62, 3, 62, 65, 62, 0, 63, 0, 0, 0, 0, 3, 33, 127, 1, 0, 2, 32
   \              3F0000000000
   \              2103017F0200
   \              20          
   \   00000106   007F06000000       DC8 127, 0, 0, 6, 0, 0, 0, 0, 4, 35, 69, 73, 49, 3, 39, 73, 49, 0, 91
   \              000023044945
   \              033149270031
   \              5B          
   \   00000119   000000002204       DC8 0, 0, 0, 0, 4, 34, 73, 73, 54, 3, 34, 73, 54, 0, 79, 0, 0, 0, 0, 4
   \              494903364922
   \              0036004F0000
   \              0400        
   \   0000012D   08787F087803       DC8 120, 8, 8, 127, 3, 120, 8, 127, 0, 102, 0, 0, 0, 0, 4, 114, 81, 81
   \              7F0866000000
   \              000072045151
   \   0000013F   034E5172004E       DC8 78, 3, 114, 81, 78, 0, 109, 0, 0, 0, 0, 4, 62, 73, 73, 38, 3, 62
   \              006D00000400
   \              493E26493E03
   \   00000151   46497D000000       DC8 73, 70, 0, 125, 0, 0, 0, 0, 4, 64, 71, 72, 112, 3, 64, 71, 120, 0
   \              000040044847
   \              037047400078
   \   00000163   000700000400       DC8 7, 0, 0, 0, 0, 4, 54, 73, 73, 54, 3, 54, 73, 54, 0, 127, 0, 0, 0, 0
   \              493636493603
   \              36497F000000
   \              0000        
   \   00000177   30044848033F       DC8 4, 48, 72, 72, 63, 3, 48, 73, 62, 0, 103, 0, 0, 0, 0, 1, 36, 0, 0
   \              4930003E0067
   \              000001000024
   \              00          
   \   0000018A   010000240000       DC8 0, 1, 36, 0, 0, 0, 0, 0, 0, 0, 0, 1, 39, 0, 0, 0, 1, 39, 0, 0, 0, 0
   \              000000000100
   \              002700002701
   \              00000000    
   \   000001A0   000000000804       DC8 0, 0, 0, 0, 4, 8, 20, 34, 65, 4, 8, 20, 34, 65, 0, 0, 0, 0, 0, 4
   \              221404411408
   \              412200000000
   \              0400        
   \   000001B4   141414141404       DC8 20, 20, 20, 20, 4, 20, 20, 20, 20, 0, 0, 0, 0, 0, 4, 65, 34, 20, 8
   \              141400140000
   \              000041041422
   \              08          
   \   000001C7   410414220008       DC8 4, 65, 34, 20, 8, 0, 0, 0, 0, 0, 4, 32, 64, 77, 48, 4, 32, 64, 77
   \              000000002004
   \              4D4004304020
   \              4D          
   \   000001DA   003000000000       DC8 48, 0, 0, 0, 0, 0, 4, 38, 77, 77, 62, 4, 38, 77, 77, 62, 0, 0, 0, 0
   \              26044D4D043E
   \              4D263E4D0000
   \              0000        
   \   000001EE   0400483F3F48       DC8 0, 4, 63, 72, 72, 63, 4, 63, 72, 72, 63, 119, 0, 0, 0, 0, 4, 127
   \              3F044848773F
   \              000000007F04
   \   00000200   49490436497F       DC8 73, 73, 54, 4, 127, 73, 73, 54, 124, 0, 0, 0, 0, 4, 62, 65, 65, 34
   \              3649007C0000
   \              0400413E2241
   \   00000212   3E0441413922       DC8 4, 62, 65, 65, 34, 57, 0, 0, 0, 0, 4, 127, 65, 65, 62, 4, 127, 65
   \              000000007F04
   \              4141043E417F
   \   00000224   3E41005E0000       DC8 65, 62, 94, 0, 0, 0, 0, 4, 127, 73, 73, 65, 4, 127, 73, 73, 65, 121
   \              0400497F4149
   \              7F0449497941
   \   00000236   000000007F04       DC8 0, 0, 0, 0, 4, 127, 72, 72, 64, 4, 127, 72, 72, 64, 113, 0, 0, 0, 0
   \              48480440487F
   \              404800710000
   \              00          
   \   00000249   3E044941042E       DC8 4, 62, 65, 73, 46, 4, 62, 65, 73, 46, 125, 0, 0, 0, 0, 4, 127, 8, 8
   \              413E2E49007D
   \              00000400087F
   \              08          
   \   0000025C   047F087F7F08       DC8 127, 4, 127, 8, 8, 127, 118, 0, 0, 0, 0, 3, 65, 127, 65, 0, 3, 65
   \              007600000300
   \              7F4100414103
   \   0000026E   417F06000000       DC8 127, 65, 0, 6, 0, 0, 0, 0, 3, 2, 65, 126, 0, 3, 2, 65, 126, 0, 14
   \              000002037E41
   \              03004102007E
   \              0E          
   \   00000281   000000007F04       DC8 0, 0, 0, 0, 4, 127, 20, 34, 65, 4, 127, 20, 34, 65, 0, 0, 0, 0, 0
   \              22140441147F
   \              412200000000
   \              00          
   \   00000294   7F0401010401       DC8 4, 127, 1, 1, 1, 4, 127, 1, 1, 1, 56, 0, 0, 0, 0, 3, 127, 48, 127
   \              017F01010038
   \              00000300307F
   \              7F          
   \   000002A7   0300307F007F       DC8 0, 3, 127, 48, 127, 0, 0, 0, 0, 0, 0, 4, 127, 24, 12, 127, 4, 127
   \              000000000400
   \              187F7F0C7F04
   \   000002B9   0C18547F0000       DC8 24, 12, 127, 84, 0, 0, 0, 0, 4, 62, 65, 65, 62, 4, 62, 65, 65, 62
   \              00003E044141
   \              043E413E3E41
   \   000002CB   003F00000400       DC8 63, 0, 0, 0, 0, 4, 127, 72, 72, 48, 4, 127, 72, 72, 48, 115, 0, 0
   \              487F30487F04
   \              484873300000
   \   000002DD   00003E044241       DC8 0, 0, 4, 62, 65, 66, 61, 4, 62, 65, 66, 61, 0, 0, 0, 0, 0, 4, 127
   \              043D413E3D42
   \              000000000400
   \              7F          
   \   000002F0   4A4C04314C7F       DC8 76, 74, 49, 4, 127, 76, 74, 49, 80, 0, 0, 0, 0, 4, 50, 73, 73, 38
   \              314A00500000
   \              040049322649
   \   00000302   320449496D26       DC8 4, 50, 73, 73, 38, 109, 0, 0, 0, 0, 3, 64, 127, 64, 0, 3, 64, 127
   \              000000004003
   \              407F03007F40
   \   00000314   004000780000       DC8 64, 0, 120, 0, 0, 0, 0, 4, 126, 1, 1, 126, 4, 126, 1, 1, 126, 62, 0
   \              0400017E7E01
   \              7E0401013E7E
   \              00          
   \   00000327   00000400037C       DC8 0, 0, 0, 4, 124, 3, 3, 124, 4, 124, 3, 3, 124, 0, 0, 0, 0, 0, 4
   \              7C037C040303
   \              007C00000000
   \              04          
   \   0000033A   067F7F067F04       DC8 127, 6, 6, 127, 4, 127, 6, 6, 127, 0, 0, 0, 0, 0, 4, 103, 24, 24
   \              0606007F0000
   \              000067041818
   \   0000034C   046718676718       DC8 103, 4, 103, 24, 24, 103, 0, 0, 0, 0, 0, 3, 96, 31, 96, 0, 3, 96
   \              000000000300
   \              1F6000606003
   \   0000035E   601F00000000       DC8 31, 96, 0, 0, 0, 0, 0, 0, 4, 67, 69, 73, 113, 4, 67, 69, 73, 113, 0
   \              000043044945
   \              047145437149
   \              00          
   \   00000371   000000007F03       DC8 0, 0, 0, 0, 3, 127, 65, 65, 0, 3, 127, 65, 65, 0, 0, 0, 0, 0, 0, 3
   \              41410300417F
   \              004100000000
   \              0300        
   \   00000385   087000077003       DC8 112, 8, 7, 0, 3, 112, 8, 7, 0, 0, 0, 0, 0, 0, 3, 65, 65, 127, 0, 3
   \              070800000000
   \              000041037F41
   \              0300        
   \   00000399   4141007F0000       DC8 65, 65, 127, 0, 0, 0, 0, 0, 0, 3, 32, 80, 32, 0, 3, 32, 80, 32, 0
   \              000003005020
   \              002020032050
   \              00          
   \   000003AC   006300000300       DC8 99, 0, 0, 0, 0, 3, 1, 1, 1, 0, 3, 1, 1, 1, 0, 8, 0, 0, 0, 0, 2, 112
   \              010100010103
   \              010108000000
   \              00007002    
   \   000003C2   006802006870       DC8 104, 0, 0, 2, 112, 104, 0, 0, 0, 0, 0, 0, 0, 3, 18, 21, 15, 0, 3
   \              000000000000
   \              03001512000F
   \              03          
   \   000003D5   1512000F0077       DC8 18, 21, 15, 0, 119, 0, 0, 0, 0, 3, 31, 5, 2, 0, 3, 31, 5, 2, 0, 124
   \              00000300051F
   \              00021F030205
   \              7C00        
   \   000003E9   000000000203       DC8 0, 0, 0, 0, 3, 2, 5, 5, 0, 3, 2, 5, 5, 0, 57, 0, 0, 0, 0, 3, 2, 5
   \              050503000502
   \              000500390000
   \              03000502    
   \   000003FF   001F02031F05       DC8 31, 0, 3, 2, 5, 31, 0, 94, 0, 0, 0, 0, 3, 6, 13, 5, 0, 3, 6, 13, 5
   \              5E0000000000
   \              0603050D0300
   \              0D0605      
   \   00000414   790000000000       DC8 0, 121, 0, 0, 0, 0, 3, 4, 15, 20, 0, 3, 4, 15, 20, 0, 113, 0, 0, 0
   \              0403140F0300
   \              0F0400140071
   \              0000        
   \   00000428   03000D050006       DC8 0, 3, 5, 13, 6, 0, 3, 5, 13, 6, 0, 125, 0, 0, 0, 0, 3, 31, 4, 3, 0
   \              0503060D7D00
   \              000000001F03
   \              030400      
   \   0000043D   1F0303047600       DC8 3, 31, 4, 3, 0, 118, 0, 0, 0, 0, 3, 5, 23, 1, 0, 3, 5, 23, 1, 0, 6
   \              000000000503
   \              011703001705
   \              000106      
   \   00000452   000000000503       DC8 0, 0, 0, 0, 3, 5, 22, 4, 0, 3, 5, 22, 4, 0, 14, 0, 0, 0, 0, 3, 31
   \              041603001605
   \              0004000E0000
   \              03001F      
   \   00000467   05020300021F       DC8 2, 5, 0, 3, 31, 2, 5, 0, 0, 0, 0, 0, 0, 3, 17, 31, 1, 0, 3, 17, 31
   \              000500000000
   \              03001F110001
   \              11031F      
   \   0000047C   000100380000       DC8 1, 0, 56, 0, 0, 0, 0, 3, 15, 6, 3, 0, 3, 15, 6, 3, 0, 0, 0, 0, 0, 0
   \              0300060F0003
   \              0F0303060000
   \              00000000    
   \   00000492   0F0303040300       DC8 3, 15, 4, 3, 0, 3, 15, 4, 3, 0, 84, 0, 0, 0, 0, 3, 6, 9, 6, 0, 3, 6
   \              040F00030054
   \              000003000906
   \              00060603    
   \   000004A8   06093F000000       DC8 9, 6, 0, 63, 0, 0, 0, 0, 3, 15, 10, 4, 0, 3, 15, 10, 4, 0, 115, 0
   \              00000F03040A
   \              03000A0F0004
   \              0073        
   \   000004BC   000003000A04       DC8 0, 0, 0, 3, 4, 10, 15, 0, 3, 4, 10, 15, 0, 0, 0, 0, 0, 0, 3, 15, 4
   \              000F04030F0A
   \              000000000000
   \              0F0304      
   \   000004D1   00080F030804       DC8 8, 0, 3, 15, 4, 8, 0, 80, 0, 0, 0, 0, 3, 5, 13, 10, 0, 3, 5, 13, 10
   \              500000000000
   \              05030A0D0300
   \              0D050A      
   \   000004E6   6D0000000000       DC8 0, 109, 0, 0, 0, 0, 3, 8, 30, 9, 0, 3, 8, 30, 9, 0, 120, 0, 0, 0, 0
   \              0803091E0300
   \              1E0800090078
   \              000000      
   \   000004FB   0E030F010300       DC8 3, 14, 1, 15, 0, 3, 14, 1, 15, 0, 62, 0, 0, 0, 0, 3, 14, 1, 14, 0
   \              010E000F003E
   \              00000300010E
   \              000E        
   \   0000050F   0E030E010000       DC8 3, 14, 1, 14, 0, 0, 0, 0, 0, 0, 3, 14, 3, 14, 0, 3, 14, 3, 14, 0, 0
   \              000000000E03
   \              0E030300030E
   \              000E00      
   \   00000524   000000000903       DC8 0, 0, 0, 0, 3, 9, 6, 9, 0, 3, 9, 6, 9, 0, 0, 0, 0, 0, 0, 3, 13, 5
   \              090603000609
   \              000900000000
   \              0300050D    
   \   0000053A   000E0D030E05       DC8 14, 0, 3, 13, 5, 14, 0, 0, 0, 0, 0, 0, 3, 9, 11, 13, 0, 3, 9, 11
   \              000000000000
   \              09030D0B0300
   \              0B09        
   \   0000054E   000D00000000       DC8 13, 0, 0, 0, 0, 0, 0, 3, 8, 54, 65, 0, 3, 8, 54, 65, 0, 0, 0, 0, 0
   \              030036080041
   \              080341360000
   \              000000      
   \   00000563   0100003E0000       DC8 0, 1, 62, 0, 0, 0, 1, 62, 0, 0, 0, 0, 0, 0, 0, 0, 3, 65, 54, 8, 0
   \              3E0100000000
   \              000000004103
   \              083600      
   \   00000578   410308360000       DC8 3, 65, 54, 8, 0, 0, 0, 0, 0, 0, 4, 32, 64, 32, 64, 4, 32, 64, 32
   \              000000002004
   \              204004404020
   \              20          
   \   0000058B   014000000000       DC8 64, 1, 0, 0, 0, 0, 3, 42, 85, 42, 0, 3, 42, 85, 42, 0, 0, 0, 0, 0
   \              2A032A550300
   \              552A002A0000
   \              0000        
   \   0000059F   00                 DC8 0

   \                                 In  segment FAR_F, align 1, keep-with-next
   \   char const __farflash DispDrv140[20][3]
   \                     DispDrv140:
   \   00000000   000102000000       DC8 1, 0, 0, 2, 0, 0, 4, 0, 0, 8, 0, 0, 16, 0, 0, 32, 0, 0, 64, 0, 0
   \              000408000000
   \              001020000000
   \              004000      
   \   00000015   008000000001       DC8 128, 0, 0, 0, 1, 0, 0, 2, 0, 0, 4, 0, 0, 8, 0, 0, 16, 0, 0, 32, 0
   \              020000000004
   \              080000000010
   \              200000      
   \   0000002A   400000000080       DC8 0, 64, 0, 0, 128, 0, 0, 0, 1, 0, 0, 2, 0, 0, 4, 0, 0, 8
   \              000000010200
   \              000000040800

   \                                 In  segment FAR_F, align 1, keep-with-next
   \   char const __farflash DispArr196[11]
   \                     DispArr196:
   \   00000000   0F100D0E0B0C       DC8 16, 15, 14, 13, 12, 11, 10, 9, 18, 17, 8
   \              090A111208  
     11          #include "version.h"
     12          #include "inavr.h"
     13          #include "string.h"
     14          
     15          

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
     16          OS_STACKPTR int Stack0[100], Stack3[60], Stack5[60], Stack10[100], Stack20[75]; /* Task stacks */
   \                     Stack0:
   \   00000000                      DS8 200

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \                     Stack3:
   \   00000000                      DS8 120

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \                     Stack5:
   \   00000000                      DS8 120

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \                     Stack10:
   \   00000000                      DS8 200

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \                     Stack20:
   \   00000000                      DS8 150

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
     17          OS_TASK     TCB_USART0, TCB_WATCHDOG, TCB_DispCtl, TCB_Blink, TCB_Info;               /* Task-control-blocks */
   \                     TCB_USART0:
   \   00000000                      DS8 22

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \                     TCB_WATCHDOG:
   \   00000000                      DS8 22

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \                     TCB_DispCtl:
   \   00000000                      DS8 22

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \                     TCB_Blink:
   \   00000000                      DS8 22

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
   \                     TCB_Info:
   \   00000000                      DS8 22

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
     18          OS_RSEMA    UARTSEND;
   \                     UARTSEND:
   \   00000000                      DS8 8

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
     19          OS_TIMER    TimerUSART0;
   \                     TimerUSART0:
   \   00000000                      DS8 10
     20          
     21          /**********************************************************
     22          *
     23          *       main
     24          *
     25          **********************************************************/
     26          

   \                                 In  segment CODE, align 2, keep-with-next
     27          void main(void) {
   \                     main:
     28          
     29              OS_InitKern();        /* initialize OS                 */
   \   00000000   ........           CALL    OS_InitKern
     30              OS_InitHW();          /* initialize Hardware for OS    */
   \   00000004   ........           CALL    OS_InitHW
     31              InitSystem();           // init the system according to board
   \   00000008   ........           CALL    InitSystem
     32          
     33          
     34              OS_CREATERSEMA(&UARTSEND);                          // semaphore for sending on UARTs
   \   0000000C   ....               LDI     R16, LOW(UARTSEND)
   \   0000000E   ....               LDI     R17, (UARTSEND) >> 8
   \   00000010   ........           CALL    OS_CreateRSema
     35              OS_CREATETASK(&TCB_USART0, "USART0", Usart0Handler, 150, Stack0);
   \   00000014   E002               LDI     R16, 2
   \   00000016   E010               LDI     R17, 0
   \   00000018   931A               ST      -Y, R17
   \   0000001A   930A               ST      -Y, R16
   \   0000001C   EC08               LDI     R16, 200
   \   0000001E   E010               LDI     R17, 0
   \   00000020   931A               ST      -Y, R17
   \   00000022   930A               ST      -Y, R16
   \   00000024   ....               LDI     R16, LOW(Stack0)
   \   00000026   ....               LDI     R17, (Stack0) >> 8
   \   00000028   931A               ST      -Y, R17
   \   0000002A   930A               ST      -Y, R16
   \   0000002C   ....               LDI     R22, LOW(Usart0Handler/2)
   \   0000002E   ....               LDI     R23, (Usart0Handler/2) >> 8
   \   00000030   E946               LDI     R20, 150
   \   00000032   ....               LDI     R18, LOW(`?<Constant "USART0">`)
   \   00000034   ....               LDI     R19, (`?<Constant "USART0">`) >> 8
   \   00000036   ....               LDI     R16, LOW(TCB_USART0)
   \   00000038   ....               LDI     R17, (TCB_USART0) >> 8
   \   0000003A   ........           CALL    OS_CreateTask_D
     36              OS_CREATETIMER(&TimerUSART0, TimoutUSART0, 200);                 // Start timeout timer RX on
   \   0000003E   EC48               LDI     R20, 200
   \   00000040   E050               LDI     R21, 0
   \   00000042   ....               LDI     R18, LOW(TimoutUSART0/2)
   \   00000044   ....               LDI     R19, (TimoutUSART0/2) >> 8
   \   00000046   ....               LDI     R16, LOW(TimerUSART0)
   \   00000048   ....               LDI     R17, (TimerUSART0) >> 8
   \   0000004A   ........           CALL    OS_CreateTimer
   \   0000004E   ....               LDI     R16, LOW(TimerUSART0)
   \   00000050   ....               LDI     R17, (TimerUSART0) >> 8
   \   00000052   ........           CALL    OS_StartTimer
     37              OS_CREATETASK(&TCB_Blink, "Blink", DisplayBlink, 120, Stack5);  // Blink on display
   \   00000056   E002               LDI     R16, 2
   \   00000058   E010               LDI     R17, 0
   \   0000005A   931A               ST      -Y, R17
   \   0000005C   930A               ST      -Y, R16
   \   0000005E   E708               LDI     R16, 120
   \   00000060   E010               LDI     R17, 0
   \   00000062   931A               ST      -Y, R17
   \   00000064   930A               ST      -Y, R16
   \   00000066   ....               LDI     R16, LOW(Stack5)
   \   00000068   ....               LDI     R17, (Stack5) >> 8
   \   0000006A   931A               ST      -Y, R17
   \   0000006C   930A               ST      -Y, R16
   \   0000006E   ....               LDI     R22, LOW(DisplayBlink/2)
   \   00000070   ....               LDI     R23, (DisplayBlink/2) >> 8
   \   00000072   E748               LDI     R20, 120
   \   00000074   ....               LDI     R18, LOW(`?<Constant "Blink">`)
   \   00000076   ....               LDI     R19, (`?<Constant "Blink">`) >> 8
   \   00000078   ....               LDI     R16, LOW(TCB_Blink)
   \   0000007A   ....               LDI     R17, (TCB_Blink) >> 8
   \   0000007C   ........           CALL    OS_CreateTask_D
     38              OS_CREATETASK(&TCB_Info, "Info", Info, 110, Stack20);  // Blink on display
   \   00000080   E002               LDI     R16, 2
   \   00000082   E010               LDI     R17, 0
   \   00000084   931A               ST      -Y, R17
   \   00000086   930A               ST      -Y, R16
   \   00000088   E906               LDI     R16, 150
   \   0000008A   E010               LDI     R17, 0
   \   0000008C   931A               ST      -Y, R17
   \   0000008E   930A               ST      -Y, R16
   \   00000090   ....               LDI     R16, LOW(Stack20)
   \   00000092   ....               LDI     R17, (Stack20) >> 8
   \   00000094   931A               ST      -Y, R17
   \   00000096   930A               ST      -Y, R16
   \   00000098   ....               LDI     R22, LOW(Info/2)
   \   0000009A   ....               LDI     R23, (Info/2) >> 8
   \   0000009C   E64E               LDI     R20, 110
   \   0000009E   ....               LDI     R18, LOW(`?<Constant "Info">`)
   \   000000A0   ....               LDI     R19, (`?<Constant "Info">`) >> 8
   \   000000A2   ....               LDI     R16, LOW(TCB_Info)
   \   000000A4   ....               LDI     R17, (TCB_Info) >> 8
   \   000000A6   ........           CALL    OS_CreateTask_D
     39          
     40              switch (UnitID) {                                    // Starting taasks for modules:
   \   000000AA   9100....           LDS     R16, UnitID
   \   000000AE   5001               SUBI    R16, 1
   \   000000B0   F011               BREQ    ??main_0
   \   000000B2   500F               SUBI    R16, 15
   \   000000B4   F4A9               BRNE    ??main_1
     41              case TPC140:                                          // TPC140 
     42              case TPC196:                                          // TPC196 
     43                  OS_CREATETASK(&TCB_DispCtl, "Display_Control", DisplayHandler, 190, Stack10);
   \                     ??main_0:
   \   000000B6   E002               LDI     R16, 2
   \   000000B8   E010               LDI     R17, 0
   \   000000BA   931A               ST      -Y, R17
   \   000000BC   930A               ST      -Y, R16
   \   000000BE   EC08               LDI     R16, 200
   \   000000C0   E010               LDI     R17, 0
   \   000000C2   931A               ST      -Y, R17
   \   000000C4   930A               ST      -Y, R16
   \   000000C6   ....               LDI     R16, LOW(Stack10)
   \   000000C8   ....               LDI     R17, (Stack10) >> 8
   \   000000CA   931A               ST      -Y, R17
   \   000000CC   930A               ST      -Y, R16
   \   000000CE   ....               LDI     R22, LOW(DisplayHandler/2)
   \   000000D0   ....               LDI     R23, (DisplayHandler/2) >> 8
   \   000000D2   EB4E               LDI     R20, 190
   \   000000D4   ....               LDI     R18, LOW(`?<Constant "Display_Control">`)
   \   000000D6   ....               LDI     R19, (`?<Constant "Display_Control">`) >> 8
   \   000000D8   ....               LDI     R16, LOW(TCB_DispCtl)
   \   000000DA   ....               LDI     R17, (TCB_DispCtl) >> 8
   \   000000DC   ........           CALL    OS_CreateTask_D
     44                  break;
     45              }
     46              OS_CREATETASK(&TCB_WATCHDOG, "Watch dog", WatchDogHandler, 50, Stack3);
   \                     ??main_1:
   \   000000E0   E002               LDI     R16, 2
   \   000000E2   E010               LDI     R17, 0
   \   000000E4   931A               ST      -Y, R17
   \   000000E6   930A               ST      -Y, R16
   \   000000E8   E708               LDI     R16, 120
   \   000000EA   E010               LDI     R17, 0
   \   000000EC   931A               ST      -Y, R17
   \   000000EE   930A               ST      -Y, R16
   \   000000F0   ....               LDI     R16, LOW(Stack3)
   \   000000F2   ....               LDI     R17, (Stack3) >> 8
   \   000000F4   931A               ST      -Y, R17
   \   000000F6   930A               ST      -Y, R16
   \   000000F8   ....               LDI     R22, LOW(WatchDogHandler/2)
   \   000000FA   ....               LDI     R23, (WatchDogHandler/2) >> 8
   \   000000FC   E342               LDI     R20, 50
   \   000000FE   ....               LDI     R18, LOW(`?<Constant "Watch dog">`)
   \   00000100   ....               LDI     R19, (`?<Constant "Watch dog">`) >> 8
   \   00000102   ....               LDI     R16, LOW(TCB_WATCHDOG)
   \   00000104   ....               LDI     R17, (TCB_WATCHDOG) >> 8
   \   00000106   ........           CALL    OS_CreateTask_D
     47              OS_Start();                                         // Start multitasking
   \   0000010A   ........           CALL    OS_Start
     48          }
   \   0000010E   9508               RET

   \                                 In  segment NEAR_ID, align 1, keep-with-next
   \                     `?<Initializer for <Constant "USART0">>`:
   \   00000000   535552413054       DC8 "USART0"
   \              00          

   \                                 In  segment NEAR_ID, align 1, keep-with-next
   \                     `?<Initializer for <Constant "Blink">>`:
   \   00000000   6C426E69006B       DC8 "Blink"

   \                                 In  segment NEAR_ID, align 1, keep-with-next
   \                     `?<Initializer for <Constant "Info">>`:
   \   00000000   6E496F6600         DC8 "Info"

   \                                 In  segment NEAR_ID, align 1, keep-with-next
   \                     `?<Initializer for <Constant "Display_Control">`:
   \   00000000   69447073616C       DC8 "Display_Control"
   \              5F796F43746E
   \              6F72006C    

   \                                 In  segment NEAR_ID, align 1, keep-with-next
   \                     `?<Initializer for <Constant "Watch dog">>`:
   \   00000000   615763742068       DC8 "Watch dog"
   \              6F640067    

   \                                 In  segment NEAR_I, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_I>`
   \                     `?<Constant "USART0">`:
   \   00000000                      DS8 7
   \   00000007                      REQUIRE `?<Initializer for <Constant "USART0">>`

   \                                 In  segment NEAR_I, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_I>`
   \                     `?<Constant "Blink">`:
   \   00000000                      DS8 6
   \   00000006                      REQUIRE `?<Initializer for <Constant "Blink">>`

   \                                 In  segment NEAR_I, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_I>`
   \                     `?<Constant "Info">`:
   \   00000000                      DS8 5
   \   00000005                      REQUIRE `?<Initializer for <Constant "Info">>`

   \                                 In  segment NEAR_I, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_I>`
   \                     `?<Constant "Display_Control">`:
   \   00000000                      DS8 16
   \   00000010                      REQUIRE `?<Initializer for <Constant "Display_Control">`

   \                                 In  segment NEAR_I, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_I>`
   \                     `?<Constant "Watch dog">`:
   \   00000000                      DS8 10
   \   0000000A                      REQUIRE `?<Initializer for <Constant "Watch dog">>`
     49          

   Maximum stack usage in bytes:

   CSTACK RSTACK Function
   ------ ------ --------
      6      2   main
        0      2   -> InitSystem
        0      2   -> OS_CreateRSema
        0      2   -> OS_CreateTask_D
        0      2   -> OS_CreateTimer
        0      2   -> OS_InitHW
        0      2   -> OS_InitKern
        0      2   -> OS_Start
        0      2   -> OS_StartTimer


   Segment part sizes:

   Bytes  Function/Label
   -----  --------------
       6  ?<Constant "Blink">
      16  ?<Constant "Display_Control">
       5  ?<Constant "Info">
       7  ?<Constant "USART0">
      10  ?<Constant "Watch dog">
       6  ?<Initializer for <Constant "Blink">>
      16  ?<Initializer for <Constant "Display_Control">
       5  ?<Initializer for <Constant "Info">>
       7  ?<Initializer for <Constant "USART0">>
      10  ?<Initializer for <Constant "Watch dog">>
       1  BlinkStatus
    1755  Disp
      11  DispArr196
      60  DispDrv140
       1  HostAddress
       1  MyPriAddress
       1  MySecAddress
       1  RXTimeout
       1  RestartStatus
       1  RestoreStat
     255  RxBufferCh0
     200  Stack0
     200  Stack10
     150  Stack20
     120  Stack3
     120  Stack5
      22  TCB_Blink
      22  TCB_DispCtl
      22  TCB_Info
      22  TCB_USART0
      22  TCB_WATCHDOG
      10  TimerUSART0
     150  TxBufferCh0
      58  UART
       8  UARTSEND
       1  UnitID
       1  WriteCount
    1440  ascii_table
     256  crc
       1  kbd_delay_cnt
     272  main
       2  pWriteBuffer
      40  packed_data
       1  tx_status
      14  -- Other

 
   272 bytes in segment CODE
 1 767 bytes in segment FAR_F
    14 bytes in segment INITTAB
    44 bytes in segment NEAR_I
    44 bytes in segment NEAR_ID
 3 189 bytes in segment NEAR_Z
 
 2 083 bytes of CODE memory (+ 14 bytes shared)
 3 233 bytes of DATA memory

Errors: none
Warnings: none
