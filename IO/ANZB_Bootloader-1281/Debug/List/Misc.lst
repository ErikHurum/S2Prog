###############################################################################
#
# IAR C/C++ Compiler V7.30.5.1680 for Microchip AVR       17/Mar/2023  14:41:04
# Copyright 1996-2022 IAR Systems AB.
# Mobile license - IAR Embedded Workbench for Microchip AVR 7.30
#
#    Source file  =  D:\S2Prog\IO\ANZB_Bootloader-1281\Src\Misc.c
#    Command line =  
#        -f C:\Users\ESY\AppData\Local\Temp\EWED19.tmp
#        (D:\S2Prog\IO\ANZB_Bootloader-1281\Src\Misc.c --cpu=m1281 -ms -o
#        D:\S2Prog\IO\ANZB_Bootloader-1281\Debug\Obj -D SPEED=38400 -D PORT0 -D
#        __ATMEGA_1281__ -lCN D:\S2Prog\IO\ANZB_Bootloader-1281\Debug\List -y
#        --initializers_in_flash --no_cse --no_inline --no_code_motion
#        --no_cross_call --no_clustering --no_tbaa --debug
#        -DENABLE_BIT_DEFINITIONS -e -I D:\S2Prog\IO\ANZB_Bootloader-1281\INC\\
#        -I D:\S2Prog\IO\ANZB_Bootloader-1281\..\..\SHARED\INC\\ --eeprom_size
#        4096 --clib -On)
#    Locale       =  Norwegian Bokmål_NOR.1252
#    List file    =  D:\S2Prog\IO\ANZB_Bootloader-1281\Debug\List\Misc.lst
#    Object file  =  D:\S2Prog\IO\ANZB_Bootloader-1281\Debug\Obj\Misc.r90
#
###############################################################################

D:\S2Prog\IO\ANZB_Bootloader-1281\Src\Misc.c
      1          /****************************************************************************************
      2          /  Misc. routines
      3          /
      4          ***************************************************************************************/
      5          #ifdef __ATMEGA_1280__
      6          #include	"iom1280.h"
      7          #endif
      8          
      9          #ifdef __ATMEGA_1281__
     10          #include	"iom1281.h"

   \                                 In  segment ABSOLUTE, at 0x2c
   \   union <unnamed> volatile __io _A_PINE
   \                     _A_PINE:
   \   00000000                      DS8 1
     11          #endif
     12          #include "stdio.h"
     13          #include "math.h"
     14          #include "externals.h"
     15          #include "inavr.h"
     16          #include "string.h"
     17          
     18          
     19          /*************************************************************************
     20          *
     21          *  Get my address
     22          *
     23          *************************************************************************/

   \                                 In  segment CODE, align 2, keep-with-next
     24          char MyAddress(void) {
   \                     MyAddress:
     25              //return 0;
     26              char Address = (~(PINE>>4) & 0x0f) ;
   \   00000000   B10C               IN      R16, 0x0C
   \   00000002   9502               SWAP    R16
   \   00000004   700F               ANDI    R16, 0x0F
   \   00000006   9500               COM     R16
   \   00000008   700F               ANDI    R16, 0x0F
     27              return Address;
   \   0000000A   9508               RET
   \   0000000C                      REQUIRE _A_PINE
     28          }

   Maximum stack usage in bytes:

   RSTACK Function
   ------ --------
      2   MyAddress


   Segment part sizes:

   Bytes  Function/Label
   -----  --------------
      12  MyAddress
       1  _A_PINE

 
  1 byte  in segment ABSOLUTE
 12 bytes in segment CODE
 
 12 bytes of CODE memory
  0 bytes of DATA memory (+ 1 byte shared)

Errors: none
Warnings: none
