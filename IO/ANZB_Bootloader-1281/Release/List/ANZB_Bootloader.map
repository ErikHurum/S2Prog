################################################################################
#                                                                              #
#      IAR Universal Linker V6.6.1.103                                         #
#                                                                              #
#           Link time     =  01/Feb/2023  09:02:19                             #
#           Target CPU    =  A90                                               #
#           List file     =  D:\S2Prog\IO\ANZB_Bootloader-1280\Release\List\AN #
#                            ZB_Bootloader.map                                 #
#           Output file 1 =  D:\S2Prog\IO\ANZB_Bootloader-1280\Release\Exe\ANZ #
#                            B_Bootloader.hex                                  #
#                            Format: intel-extended                            #
#           Command line  =  -f C:\Users\ESY\AppData\Local\Temp\EW76EF.tmp     #
#                            (D:\S2Prog\IO\ANZB_Bootloader-1280\Release\Obj\as #
#                            sembly.r90                                        #
#                            D:\S2Prog\IO\ANZB_Bootloader-1280\Release\Obj\ini #
#                            t.r90                                             #
#                            D:\S2Prog\IO\ANZB_Bootloader-1280\Release\Obj\mai #
#                            n.r90                                             #
#                            D:\S2Prog\IO\ANZB_Bootloader-1280\Release\Obj\Mis #
#                            c.r90                                             #
#                            D:\S2Prog\IO\ANZB_Bootloader-1280\Release\Obj\ser #
#                            ial.r90                                           #
#                            D:\S2Prog\IO\ANZB_Bootloader-1280\Release\Obj\Usa #
#                            rt.r90                                            #
#                            -o                                                #
#                            D:\S2Prog\IO\ANZB_Bootloader-1280\Release\Exe\ANZ #
#                            B_Bootloader.hex                                  #
#                            -Fintel-extended -B -l                            #
#                            D:\S2Prog\IO\ANZB_Bootloader-1280\Release\List\AN #
#                            ZB_Bootloader.map                                 #
#                            -xes                                              #
#                            "-IC:\Program Files (x86)\IAR Systems\Embedded Wo #
#                            rkbench 8.4\avr\LIB\\"                            #
#                            -ID:\S2Prog\IO\ANZB_Bootloader-1280\LIB\\ -f      #
#                            "C:\Program Files (x86)\IAR Systems\Embedded Work #
#                            bench 8.4\avr\config\lnkm1280s.xcl"               #
#                            (-D_..X_INTVEC_SIZE=E4 -D_..X_FLASH_END=1FFFF     #
#                            -D_..X_FLASH_TEND=FF -D_..X_FLASH_NEND=FFFF       #
#                            -D_..X_SRAM_BASE=200 -D_..X_SRAM_END=21FF         #
#                            -D_..X_SRAM_TBASE=0 -D_..X_SRAM_TSIZE=0           #
#                            -D_..X_EEPROM_START=0 -D_..X_EEPROM_END=FFF       #
#                            -D_..X_CSTACK_SIZE=400 -D_..X_RSTACK_SIZE=80      #
#                            -D_..X_HEAP_SIZE=100 -D_..X_NEAR_HEAP_SIZE=100    #
#                            -D_..X_EXT_SRAM_BASE=_..X_SRAM_BASE               #
#                            -D_..X_EXT_SRAM_SIZE=0                            #
#                            -D_..X_EXT_EPROM_BASE=_..X_SRAM_BASE              #
#                            -D_..X_EXT_EPROM_SIZE=0                           #
#                            -D_..X_EXT_EEPROM_BASE=_..X_SRAM_BASE             #
#                            -D_..X_EXT_EEPROM_SIZE=0 -ca90                    #
#                            -Z(CODE)INTVEC=0-(_..X_INTVEC_SIZE-1)             #
#                            -h'1895'(CODE)0-(_..X_INTVEC_SIZE-1)              #
#                            --global_fill                                     #
#                            -D_..X_FLASH_BASE=_..X_INTVEC_SIZE                #
#                            -Z(CODE)TINY_F=_..X_FLASH_BASE-_..X_FLASH_TEND    #
#                            -Z(CODE)NEAR_F=_..X_FLASH_BASE-_..X_FLASH_NEND    #
#                            -Z(CODE)SWITCH=_..X_FLASH_BASE-_..X_FLASH_NEND    #
#                            -Z(CODE)DIFUNCT=_..X_FLASH_BASE-_..X_FLASH_NEND   #
#                            -Z(CODE)CODE=_..X_FLASH_BASE-_..X_FLASH_END       #
#                            -P(CODE)FAR_F=[_..X_FLASH_BASE-_..X_FLASH_END]/10 #
#                            000                                               #
#                            -Z(CODE)INITTAB=_..X_FLASH_BASE-_..X_FLASH_END    #
#                            -Z(CODE)HUGE_F=_..X_FLASH_BASE-_..X_FLASH_END     #
#                            -Z(CODE)TINY_ID=_..X_FLASH_BASE-_..X_FLASH_END    #
#                            -Z(CODE)NEAR_ID=_..X_FLASH_BASE-_..X_FLASH_END    #
#                            -Z(CODE)CHECKSUM#_..X_FLASH_END                   #
#                            -Z(DATA)TINY_I,TINY_Z,TINY_N=_..X_SRAM_TBASE:+_.. #
#                            X_SRAM_TSIZE                                      #
#                            -Z(DATA)NEAR_I,NEAR_Z=_..X_SRAM_BASE-_..X_SRAM_EN #
#                            D                                                 #
#                            -Z(DATA)RSTACK+_..X_RSTACK_SIZE=_..X_SRAM_BASE-_. #
#                            .X_SRAM_END                                       #
#                            -Z(DATA)CSTACK+_..X_CSTACK_SIZE=_..X_SRAM_BASE-_. #
#                            .X_SRAM_END                                       #
#                            -Z(DATA)HEAP+_..X_HEAP_SIZE=_..X_SRAM_BASE-_..X_S #
#                            RAM_END                                           #
#                            -Z(DATA)IOSTREAM_N#_..X_SRAM_BASE-_..X_SRAM_END   #
#                            -Z(DATA)NEAR_HEAP+_..X_NEAR_HEAP_SIZE=_..X_SRAM_B #
#                            ASE-_..X_SRAM_END                                 #
#                            -Z(XDATA)EEPROM_I,EEPROM_N=_..X_EEPROM_START-_..X #
#                            _EEPROM_END                                       #
#                            -Z(CONST)NEAR_C=_..X_EXT_EPROM_BASE:+_..X_EXT_EPR #
#                            OM_SIZE                                           #
#                            -Z(DATA)NEAR_N=_..X_EXT_EEPROM_BASE:+_..X_EXT_EEP #
#                            ROM_SIZE                                          #
#                            -w29)                                             #
#                            "C:\Program Files (x86)\IAR Systems\Embedded Work #
#                            bench 8.4\avr\LIB\CLIB\cl3s-ec_mul.r90")          #
#                                                                              #
#                           Copyright (C) 1987-2019 IAR Systems AB.            #
################################################################################





                ****************************************
                *                                      *
                *           CROSS REFERENCE            *
                *                                      *
                ****************************************

                  There are no program entries.




                ****************************************
                *                                      *
                *            RUNTIME MODEL             *
                *                                      *
                ****************************************

  R10             = REG
  R11             = REG
  R12             = REG
  R13             = REG
  R4              = REG
  R5              = REG
  R6              = REG
  R7              = REG
  R8              = REG
  R9              = REG
  __64bit_doubles = disabled
  __SystemLibrary = CLib
  __cpu           = 3
  __cpu_name      = ATmega1280
  __enhanced_core = enabled
  __has_elpm      = true
  __memory_model  = 2
  __no_rampd      = enabled
  __rt_version    = 3
  __tiny_avr      = false
  __vtable_memory = __nearflash

                ****************************************
                *                                      *
                *    AUTOMATIC SYMBOL REDIRECTIONS     *
                *                                      *
                ****************************************

                  There are no automatic symbol redirections.

                ****************************************
                *                                      *
                *              ENTRY LIST              *
                *                                      *
                ****************************************

Module  Entry                    Address
------  -----                    -------
?ABS_ENTRY_MOD
        _..X_FLASH_BASE          CODE 000000E4
        _..X_EXT_EEPROM_SIZE     CODE 00000000
        _..X_EXT_EEPROM_BASE     CODE 00000200
        _..X_EXT_EPROM_SIZE      CODE 00000000
        _..X_EXT_EPROM_BASE      CODE 00000200
        _..X_EXT_SRAM_SIZE       CODE 00000000
        _..X_EXT_SRAM_BASE       CODE 00000200
        _..X_NEAR_HEAP_SIZE      CODE 00000100
        _..X_HEAP_SIZE           CODE 00000100
        _..X_RSTACK_SIZE         CODE 00000080
        _..X_CSTACK_SIZE         CODE 00000400
        _..X_EEPROM_END          CODE 00000FFF
        _..X_EEPROM_START        CODE 00000000
        _..X_SRAM_TSIZE          CODE 00000000
        _..X_SRAM_TBASE          CODE 00000000
        _..X_SRAM_END            CODE 000021FF
        _..X_SRAM_BASE           CODE 00000200
        _..X_FLASH_NEND          CODE 0000FFFF
        _..X_FLASH_TEND          CODE 000000FF
        _..X_FLASH_END           CODE 0001FFFF
        _..X_INTVEC_SIZE         CODE 000000E4
assembly ( D:\S2Prog\IO\ANZB_Bootloader-1280\Release\Obj\assembly.r90 )
        fill_temp_buffer         CODE 000000F0
        write_page               CODE 000000E4
        write_lock_bits          CODE 00000118
        read_program_memory      CODE 00000102
init ( D:\S2Prog\IO\ANZB_Bootloader-1280\Release\Obj\init.r90 )
        _A_UBRR0                 DATA 000000C4
        _A_UCSR0C                DATA 000000C2
        _A_UCSR0B                DATA 000000C1
        _A_UCSR0A                DATA 000000C0
        _A_OCR3A                 DATA 00000098
        _A_TCCR3B                DATA 00000091
        _A_TCCR3A                DATA 00000090
        _A_XMCRB                 DATA 00000075
        _A_XMCRA                 DATA 00000074
        _A_TIMSK0                DATA 0000006E
        _A_EICRB                 DATA 0000006A
        _A_EICRA                 DATA 00000069
        _A_WDTCSR                DATA 00000060
        _A_SREG                  DATA 0000005F
        _A_MCUCR                 DATA 00000055
        _A_OCR0A                 DATA 00000047
        _A_TCNT0                 DATA 00000046
        _A_TCCR0B                DATA 00000045
        _A_TCCR0A                DATA 00000044
        _A_EIMSK                 DATA 0000003D
        _A_TIFR0                 DATA 00000035
        _A_PORTG                 DATA 00000034
        _A_DDRG                  DATA 00000033
        _A_PORTF                 DATA 00000031
        _A_DDRF                  DATA 00000030
        _A_PORTE                 DATA 0000002E
        _A_DDRE                  DATA 0000002D
        _A_PORTD                 DATA 0000002B
        _A_DDRD                  DATA 0000002A
        _A_PORTC                 DATA 00000028
        _A_DDRC                  DATA 00000027
        _A_PORTB                 DATA 00000025
        _A_DDRB                  DATA 00000024
        _A_PINB                  DATA 00000023
        _A_PORTA                 DATA 00000022
        _A_DDRA                  DATA 00000021
        Init_TMR                 CODE 00000130
        Init_IO                  CODE 00000160
        Init_CPU                 CODE 0000018A
        InitSystem               CODE 000001BE
        __?EECR                  DATA 0000001F
        __?EEDR                  DATA 00000020
        __?EEARL                 DATA 00000021
        __?EEARH                 DATA 00000022
main ( D:\S2Prog\IO\ANZB_Bootloader-1280\Release\Obj\main.r90 )
        _A_UDR0                  DATA 000000C6
        _A_MCUSR                 DATA 00000054
        _A_EEAR                  DATA 00000041
        _A_EEDR                  DATA 00000040
        _A_EECR                  DATA 0000003F
        AppStart                 DATA 00000219
        myUART                   DATA 00000200
        UnitID                   DATA 0000021B
        ResetStatus              DATA 0000021C
        hostAddress              DATA 0000021D
        crc                      CODE 00000F90
        main                     CODE 00000238
        ?<Segment init: NEAR_Z>  CODE 00001090
Misc ( D:\S2Prog\IO\ANZB_Bootloader-1280\Release\Obj\Misc.r90 )
        _A_PINE                  DATA 0000002C
        MyAddress                CODE 0000028C
serial ( D:\S2Prog\IO\ANZB_Bootloader-1280\Release\Obj\serial.r90 )
        sendchar                 CODE 00000298
        recchar                  CODE 000002B0
Usart ( D:\S2Prog\IO\ANZB_Bootloader-1280\Release\Obj\Usart.r90 )
        _A_RAMPZ                 DATA 0000005B
        TxBufferCh0              DATA 0000021E
        RxBufferCh0              DATA 0000037C
        GoToSyncUART             CODE 00000356
        SendPacketUart           CODE 00000370
        CalcDSTxChecksum         CODE 000003D0
        Uart_BuildHeader         CODE 00000400
        Uart_BuildTail           CODE 00000460
        ReadFlash                CODE 00000598
        ProgramFlash             CODE 00000714
        EraseFlash               CODE 000008E4
        BuildStatusData          CODE 000009CE
        CheckActionUart          CODE 00000BC0
        UsartCheckPackage        CODE 00000D3A
        ReceivePacketUart        CODE 00000D92
?__exit ( C:\Program Files (x86)\IAR Systems\Embedded Workbench 8.4\avr\LIB\CLIB\cl3s-ec_mul.r90 )
        __exit                   CODE 00000EEE
        ?C_EXIT                  CODE 00000EEE
        ?C_FUNCALL               CODE 00000EEC
        _exit                    CODE 00000EEC
        exit                     CODE 00000EEC
?RESET ( C:\Program Files (x86)\IAR Systems\Embedded Workbench 8.4\avr\LIB\CLIB\cl3s-ec_mul.r90 )
        ?RESET                   CODE 00000000
?C_STARTUP ( C:\Program Files (x86)\IAR Systems\Embedded Workbench 8.4\avr\LIB\CLIB\cl3s-ec_mul.r90 )
        __program_start          CODE 00000EF2
        ?C_STARTUP               CODE 00000EF2
        __RESTART                CODE 00000EF2
        ?call_low_level_init     CODE 00000EFE
        ?need_segment_init       CODE 00000F02
        ?cstartup_call_main      CODE 00000F0A
?UL_DIVMOD_L03 ( C:\Program Files (x86)\IAR Systems\Embedded Workbench 8.4\avr\LIB\CLIB\cl3s-ec_mul.r90 )
?REGISTER_CGREGR4_L10 ( C:\Program Files (x86)\IAR Systems\Embedded Workbench 8.4\avr\LIB\CLIB\cl3s-ec_mul.r90 )
        ?Register_R4_is_cg_reg   CODE 00000F16
?REGISTER_CGREGR5_L10 ( C:\Program Files (x86)\IAR Systems\Embedded Workbench 8.4\avr\LIB\CLIB\cl3s-ec_mul.r90 )
        ?Register_R5_is_cg_reg   CODE 00000F16
?REGISTER_CGREGR6_L10 ( C:\Program Files (x86)\IAR Systems\Embedded Workbench 8.4\avr\LIB\CLIB\cl3s-ec_mul.r90 )
        ?Register_R6_is_cg_reg   CODE 00000F16
?REGISTER_CGREGR7_L10 ( C:\Program Files (x86)\IAR Systems\Embedded Workbench 8.4\avr\LIB\CLIB\cl3s-ec_mul.r90 )
        ?Register_R7_is_cg_reg   CODE 00000F16
?REGISTER_CGREGR8_L10 ( C:\Program Files (x86)\IAR Systems\Embedded Workbench 8.4\avr\LIB\CLIB\cl3s-ec_mul.r90 )
        ?Register_R8_is_cg_reg   CODE 00000F16
?REGISTER_CGREGR9_L10 ( C:\Program Files (x86)\IAR Systems\Embedded Workbench 8.4\avr\LIB\CLIB\cl3s-ec_mul.r90 )
        ?Register_R9_is_cg_reg   CODE 00000F16
?REGISTER_CGREGR10_L10 ( C:\Program Files (x86)\IAR Systems\Embedded Workbench 8.4\avr\LIB\CLIB\cl3s-ec_mul.r90 )
        ?Register_R10_is_cg_reg  CODE 00000F16
?REGISTER_CGREGR11_L10 ( C:\Program Files (x86)\IAR Systems\Embedded Workbench 8.4\avr\LIB\CLIB\cl3s-ec_mul.r90 )
        ?Register_R11_is_cg_reg  CODE 00000F16
?REGISTER_CGREGR12_L10 ( C:\Program Files (x86)\IAR Systems\Embedded Workbench 8.4\avr\LIB\CLIB\cl3s-ec_mul.r90 )
        ?Register_R12_is_cg_reg  CODE 00000F16
?REGISTER_CGREGR13_L10 ( C:\Program Files (x86)\IAR Systems\Embedded Workbench 8.4\avr\LIB\CLIB\cl3s-ec_mul.r90 )
        ?Register_R13_is_cg_reg  CODE 00000F16
?low_level_init ( C:\Program Files (x86)\IAR Systems\Embedded Workbench 8.4\avr\LIB\CLIB\cl3s-ec_mul.r90 )
        __low_level_init         CODE 00000F16
?segment_init ( C:\Program Files (x86)\IAR Systems\Embedded Workbench 8.4\avr\LIB\CLIB\cl3s-ec_mul.r90 )
        __segment_init           CODE 00000F3A
        __memclr                 CODE 00000F1A
        __flashcpy               CODE 00000F26
?FILLER_BYTES


                ****************************************
                *                                      *
                *      SEGMENTS IN ADDRESS ORDER       *
                *                                      *
                ****************************************


SEGMENT              SPACE    START ADDRESS   END ADDRESS     SIZE  TYPE  ALIGN
=======              =====    =============   ===========     ====  ====  =====
INTVEC               CODE          00000000 - 00000003           4   com    1
?FILL1               CODE          00000004 - 000000E3          E0   rel    0
CODE                 CODE          000000E4 - 00000F8F         EAC   rel    1
<FAR_F> 1            CODE          00000F90 - 0000108F         100   rel    0
INITTAB              CODE          00001090 - 00001096           7   rel    0
ABSOLUTE             DATA               0000001F                     rel    0
                     DATA               00000020                   
                     DATA               00000021                   
                     DATA          00000027 - 00000028           2 
                     DATA          0000002A - 0000002E           5 
                     DATA          00000030 - 00000031           2 
                     DATA          00000033 - 00000035           3 
                     DATA          0000003D - 0000003D           1 
                     DATA          0000003F - 00000042           4 
                     DATA          00000044 - 00000047           4 
                     DATA          00000054 - 00000055           2 
                     DATA          0000005B - 0000005B           1 
                     DATA          0000005F - 00000060           2 
                     DATA          00000069 - 0000006A           2 
                     DATA          0000006E - 0000006E           1 
                     DATA          00000074 - 00000075           2 
                     DATA          00000090 - 00000091           2 
                     DATA          00000098 - 00000099           2 
                     DATA          000000C0 - 000000C2           3 
                     DATA          000000C4 - 000000C6           3 
NEAR_I               DATA               00000200                     dse    0
NEAR_Z               DATA          00000200 - 000004D9         2DA   rel    0
RSTACK               DATA          000004DA - 00000559          80   dse    0
CSTACK               DATA          0000055A - 00000959         400   dse    0

                ****************************************
                *                                      *
                *        END OF CROSS REFERENCE        *
                *                                      *
                ****************************************

 4 023 bytes of CODE memory (+             224 range fill )
 1 882 bytes of DATA memory (+ 46 absolute )

Errors: none
Warnings: none

